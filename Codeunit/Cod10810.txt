OBJECT Codeunit 10810 Simulation Management
{
  OBJECT-PROPERTIES
  {
    Date=14/10/09;
    Time=12:00:00;
    Version List=NAVFR6.00,ISA6.00;
  }
  PROPERTIES
  {
    TableNo=45;
    Permissions=TableData 17=rimd,
                TableData 45=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GLEntry@1000 : Record 17;
      LedgerEntryDimension@1120000 : Record 355;
      Text000@1120006 : TextConst 'ENU=Fixed Asset G/L Journal;FRA=Feuille compta. immo.';
      Text001@1120005 : TextConst 'ENU=%1 journal;FRA=Feuille %1';
      Text002@1120004 : TextConst 'ENU=RECURRING;FRA=ABONNEMENT';
      Text003@1120003 : TextConst 'ENU=Recurring General Journal;FRA=Feuille abonnement';
      Text004@1120002 : TextConst 'ENU=DEFAULT;FRA=DEFAUT';
      Text005@1120001 : TextConst 'ENU=Default Journal;FRA=Feuille par d‚faut';
      DocNo@1120007 : Code[20];
      DocType@1120008 : Option;
      DocNoJnl@1120010 : Code[20];
      DocTypeJnl@1120009 : Option;
      Text006@1120011 : TextConst 'ENU=Do you want to delete simulation entry ?;FRA=Voulez-vous supprimer les ‚critures de simulation de cette transaction ?';
      Text8016600@8016602 : TextConst 'ENU=Do you want to delete analysis dimension entry ?;FRA=Voulez-vous supprimer les ‚critures d''analyses li‚es … cette transaction ?';

    PROCEDURE Delete@1120000(GLRegister@1120000 : Record 45);
    BEGIN
      IF CONFIRM(Text006) THEN WITH GLRegister DO BEGIN
        IF "From Entry No." < 0 THEN BEGIN
          //<< ISA01.llt
          CheckAnalysisView("To Entry No.","From Entry No.");
          //>> ISA01.llt
          GLEntry.SETRANGE("Entry No.","To Entry No.","From Entry No.");
          LedgerEntryDimension.SETFILTER("Table ID",'=17');
          LedgerEntryDimension.SETRANGE("Entry No.","To Entry No.","From Entry No.");
          GLEntry.DELETEALL;
          LedgerEntryDimension.DELETEALL;
          DELETE;
        END;
      END;
    END;

    PROCEDURE DeleteCreate@1120001(GLRegister@1120000 : Record 45);
    VAR
      GenJnlTemplate@1002 : Record 80;
      GenJnlLine@1003 : Record 81;
      JnlSelected@1004 : Boolean;
      GLEntry@1120001 : Record 17;
      LineNumber@1120002 : Integer;
      JnlLineDim@1120003 : Record 356;
      NoSeriesMgt@1120004 : Codeunit 396;
      GenJnlBatch@1120005 : Record 232;
      GenLedgSetup@1120006 : Record 98;
      Dim1Code@1120007 : Code[20];
      Dim2Code@1120008 : Code[20];
    BEGIN
      JnlSelected := TRUE;

      GenJnlTemplate.RESET;
      GenJnlTemplate.SETRANGE(Type,0);
      GenJnlTemplate.SETRANGE(GenJnlTemplate.Recurring,FALSE);

      CASE GenJnlTemplate.COUNT OF
        0:
          BEGIN
            GenJnlTemplate.INIT;
            GenJnlTemplate.Type := 0;
            GenJnlTemplate.Recurring := FALSE;
            GenJnlTemplate.Name := FORMAT(GenJnlTemplate.Type,MAXSTRLEN(GenJnlTemplate.Name));
            GenJnlTemplate.VALIDATE(Type);
            GenJnlTemplate.INSERT;
            COMMIT;
          END;
        1:
          GenJnlTemplate.FIND('-');
        ELSE
          JnlSelected := FORM.RUNMODAL(0,GenJnlTemplate) = ACTION::LookupOK;
      END;

      IF NOT JnlSelected THEN
        EXIT;

      GenJnlBatch.RESET;
      GenJnlBatch.SETRANGE("Journal Template Name", GenJnlTemplate.Name);
      CASE GenJnlBatch.COUNT OF
        0:
          BEGIN
            GenJnlBatch.INIT;
            GenJnlBatch."Journal Template Name" := GenJnlTemplate.Name;
            GenJnlBatch.Name:=Text004;
            GenJnlBatch.Description:=Text005;
            GenJnlBatch."Reason Code" := GenJnlTemplate."Reason Code";
            GenJnlBatch."Bal. Account Type" := GenJnlTemplate."Bal. Account Type";
            GenJnlBatch."Bal. Account No." := GenJnlTemplate."Bal. Account No.";
            GenJnlBatch."No. Series" := GenJnlTemplate."No. Series";
            GenJnlBatch."Posting No. Series" := GenJnlTemplate."Posting No. Series";
            GenJnlBatch."Copy VAT Setup to Jnl. Lines" := GenJnlTemplate."Copy VAT Setup to Jnl. Lines";
            GenJnlBatch."Allow VAT Difference":=GenJnlTemplate."Allow VAT Difference";
            GenJnlBatch.INSERT;
            COMMIT;
          END;
        1:
          GenJnlBatch.FIND('-');
        ELSE
          JnlSelected := FORM.RUNMODAL(0,GenJnlBatch) = ACTION::LookupOK;
      END;

      IF NOT JnlSelected THEN
        EXIT;

      GLEntry.SETRANGE(GLEntry."Entry No.",GLRegister."To Entry No.",GLRegister."From Entry No.");

      GenJnlLine.FILTERGROUP := 2;
      GenJnlLine.SETRANGE("Journal Template Name",GenJnlTemplate.Name);
      GenJnlLine.SETRANGE("Journal Batch Name",GenJnlBatch.Name);
      GenJnlLine.FILTERGROUP := 0;
      IF GenJnlLine.FIND('+') THEN
        LineNumber := GenJnlLine."Line No." + 10000
      ELSE
        LineNumber := 10000;
      GenJnlLine.RESET;

      IF GLEntry.FIND('-') THEN REPEAT
        WITH GenJnlLine DO BEGIN
          GenJnlLine."Journal Template Name" := GenJnlTemplate.Name;
          GenJnlLine."Journal Batch Name" := GenJnlBatch.Name;
          GenJnlLine."Line No." := LineNumber;
          LineNumber += 10000;
          GenJnlLine."Account Type" := GenJnlLine."Account Type"::"G/L Account";
          GenJnlLine."Account No." := GLEntry."G/L Account No.";
          GenJnlLine."Posting Date" := GLEntry."Posting Date";
          IF ((DocNo <> GLEntry."Document No.") OR (DocType <> GLEntry."Document Type")) THEN BEGIN
            GenJnlLine."Document Type" := GLEntry."Document Type";
            GenJnlLine."Document No." := NoSeriesMgt.GetNextNo(GenJnlBatch."No. Series",GenJnlLine."Posting Date",FALSE);
          END ELSE BEGIN
            GenJnlLine."Document Type" := DocTypeJnl;
            GenJnlLine."Document No." := DocNoJnl;
          END;
          GenJnlLine.Description := GLEntry.Description;
          GenJnlLine.Amount := GLEntry.Amount;
          GenJnlLine.VALIDATE(GenJnlLine.Amount);
          GenJnlLine."Shortcut Dimension 1 Code" := GLEntry."Global Dimension 1 Code";
          GenJnlLine."Shortcut Dimension 2 Code" := GLEntry."Global Dimension 2 Code";
          GenJnlLine."Source Code" := GenJnlTemplate."Source Code";
          GenJnlLine.INSERT(TRUE);
          LedgerEntryDimension.SETFILTER("Table ID",'=17');
          LedgerEntryDimension.SETRANGE("Entry No.",GLEntry."Entry No.");
          GenLedgSetup.GET();
          Dim1Code := GenLedgSetup."Global Dimension 1 Code";
          Dim2Code := GenLedgSetup."Global Dimension 2 Code";
          IF LedgerEntryDimension.FIND('-') THEN REPEAT
            IF (LedgerEntryDimension."Dimension Code" <> Dim1Code) AND (LedgerEntryDimension."Dimension Code" <> Dim2Code) THEN
              BEGIN
                JnlLineDim.RESET;
                JnlLineDim."Table ID" := 81;
                JnlLineDim."Journal Template Name" := GenJnlLine."Journal Template Name";
                JnlLineDim."Journal Batch Name" := GenJnlLine."Journal Batch Name";
                JnlLineDim."Journal Line No." := GenJnlLine."Line No.";
                JnlLineDim."Dimension Code" := LedgerEntryDimension."Dimension Code";
                JnlLineDim."Dimension Value Code" := LedgerEntryDimension."Dimension Value Code";
                JnlLineDim.INSERT(TRUE);
              END;
          UNTIL LedgerEntryDimension.NEXT = 0;
        END;
        DocNo := GLEntry."Document No.";
        DocType := GLEntry."Document Type";
        DocTypeJnl := GenJnlLine."Document Type";
        DocNoJnl := GenJnlLine."Document No.";
      UNTIL GLEntry.NEXT = 0;

      GenJnlLine.FILTERGROUP := 2;
      GenJnlLine.SETRANGE("Journal Template Name",GenJnlTemplate.Name);
      GenJnlLine.FILTERGROUP := 0;
      Delete(GLRegister);
      COMMIT;
      FORM.RUN(GenJnlTemplate."Form ID",GenJnlLine);
    END;

    PROCEDURE CheckAnalysisView@8016602(pToEntryNo@8016602 : Integer;pFromEntryNo@8016603 : Integer);
    VAR
      lAnalysisView@8016604 : Record 363;
      lAnalysisViewEntry@8016605 : Record 365;
      lAnalysisViewBuffer@8016606 : TEMPORARY Record 363;
    BEGIN
      // ISA01.llt
      // V‚rifie si des vues d'analyses utilise les ‚critures de simulation

      lAnalysisViewEntry.SETRANGE("Entry No.",pToEntryNo,pFromEntryNo);
      IF lAnalysisViewEntry.ISEMPTY THEN
        EXIT;

      lAnalysisViewEntry.FINDFIRST;
      REPEAT
        // Parcours des ‚critures et r‚cupŠre les vues d'analyses a traiter
        lAnalysisViewBuffer.RESET;
        lAnalysisView.RESET;
        IF NOT lAnalysisViewBuffer.GET(lAnalysisViewEntry."Analysis View Code") THEN BEGIN
          IF lAnalysisView.GET(lAnalysisViewEntry."Analysis View Code") THEN BEGIN
             IF lAnalysisView."Simulation Include" THEN  BEGIN
               lAnalysisViewBuffer.Code := lAnalysisView.Code;
               lAnalysisViewBuffer."Date Compression" := lAnalysisView."Date Compression";
               lAnalysisViewBuffer."Simulation Include" := lAnalysisView."Simulation Include";
               lAnalysisViewBuffer.INSERT;
             END;
           END;
        END;
      UNTIL lAnalysisViewEntry.NEXT=0;

      // V‚rifie s'il existe des vues … traiter
      IF lAnalysisViewBuffer.ISEMPTY THEN
        EXIT;

      IF NOT CONFIRM(Text8016600) THEN
        EXIT;

      // Suppression des ‚critures de vues d'analyse

      lAnalysisViewBuffer.RESET;
      REPEAT
        lAnalysisViewEntry.RESET;
        lAnalysisViewEntry.SETRANGE("Analysis View Code",lAnalysisViewBuffer.Code);
        IF lAnalysisViewBuffer."Date Compression" = lAnalysisViewBuffer."Date Compression"::None THEN
          lAnalysisViewEntry.SETRANGE("Entry No.",pToEntryNo,pFromEntryNo);
        lAnalysisViewEntry.DELETEALL;
      UNTIL lAnalysisViewBuffer.NEXT = 0;
    END;

    BEGIN
    {
      /** @r ISA01 @d 17/07/09 @a ISAT.ST @v ISA6.00.00.02 @s Ecritures vues d'analyse
          @c Gestion de la suppression des ‚critures de vues d'analyses */
    }
    END.
  }
}