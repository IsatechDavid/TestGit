OBJECT Codeunit 150022 Transaction Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=19/03/02;
    Time=12:00:00;
    Version List=DEBUGW13.10.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE OpenForm@4(VAR Transaction@1000 : Record 150023);
    VAR
      ClientMonitorLine@1004 : Record 150020;
      TransactionLock@1002 : Record 150024;
      PotentialDeadlock@1003 : Record 150026;
      ClientMonitorMgt@1001 : Codeunit 150020;
    BEGIN
      Transaction.RESET;
      ClientMonitorMgt.OpenForm(ClientMonitorLine);
      ClientMonitorLine.COPYFILTER("Login Date",Transaction."Login Date");
      ClientMonitorLine.COPYFILTER("Login Time",Transaction."Login Time");
      ClientMonitorLine.COPYFILTER("Connection ID",Transaction."Connection ID");
      ClientMonitorLine.COPYFILTER("Login Date",TransactionLock."Login Date");
      ClientMonitorLine.COPYFILTER("Login Time",TransactionLock."Login Time");
      ClientMonitorLine.COPYFILTER("Connection ID",TransactionLock."Connection ID");
      ClientMonitorLine.COPYFILTER("Login Date",PotentialDeadlock."Login Date");
      ClientMonitorLine.COPYFILTER("Login Time",PotentialDeadlock."Login Time");
      ClientMonitorLine.COPYFILTER("Connection ID",PotentialDeadlock."Connection ID");
      IF ClientMonitorLine.FIND('+') THEN BEGIN
        IF ClientMonitorLine."Transactions Updated" THEN
          EXIT;
        Transaction.DELETEALL;
        TransactionLock.DELETEALL;
        PotentialDeadlock.DELETEALL;
        UpdateTransactionLockingOrder;
      END ELSE BEGIN
        Transaction.DELETEALL;
        TransactionLock.DELETEALL;
        PotentialDeadlock.DELETEALL;
      END;
    END;

    PROCEDURE UpdateTransactionLockingOrder@3();
    VAR
      RealClientMonitorLine@1002 : Record 2000000024;
      ClientMonitorLine@1001 : Record 150020;
      Transaction@1003 : Record 150023;
      TransactionLock@1000 : Record 150024;
      TransactionCreated@1005 : Boolean;
      ClientMonitorMgt@1004 : Codeunit 150020;
      HasDescription@1006 : Boolean;
    BEGIN
      ClientMonitorMgt.OpenForm(ClientMonitorLine);
      ClientMonitorLine.LOCKTABLE;
      IF ClientMonitorLine.FIND('+') THEN BEGIN
        ClientMonitorLine."Transactions Updated" := TRUE;
        ClientMonitorLine.MODIFY;
      END;

      IF ClientMonitorLine.FIND('-') THEN
        REPEAT
          IF ClientMonitorLine."Transaction No." <> Transaction."No." THEN BEGIN
            Transaction."Login Date" := ClientMonitorLine."Login Date";
            Transaction."Login Time" := ClientMonitorLine."Login Time";
            Transaction."Connection ID" := ClientMonitorLine."Connection ID";
            Transaction."User ID" := ClientMonitorLine."User ID";
            Transaction."No." := ClientMonitorLine."Transaction No.";
            Transaction.Description := ClientMonitorLine."Source Object";
            Transaction."Source Object" := ClientMonitorLine."Source Object";
            Transaction."Source Function/Trigger" := ClientMonitorLine."Source Function/Trigger";
            Transaction."Source Text" := ClientMonitorLine."Source Text";
            Transaction."Source Line No." := ClientMonitorLine."Source Line No.";
            HasDescription := FALSE;
            TransactionCreated := FALSE;
          END;

          IF (NOT HasDescription) AND NOT (ClientMonitorLine."Table ID" IN [0,2000000001]) THEN BEGIN
            Transaction.Description := ClientMonitorLine."Source Object";
            Transaction."Source Object" := ClientMonitorLine."Source Object";
            Transaction."Source Function/Trigger" := ClientMonitorLine."Source Function/Trigger";
            Transaction."Source Text" := ClientMonitorLine."Source Text";
            Transaction."Source Line No." := ClientMonitorLine."Source Line No.";
            HasDescription := TRUE;
          END;

          IF ClientMonitorLine.Locking AND (ClientMonitorLine."Table ID" <> 0) AND
             ((ClientMonitorLine."Function No." <> RealClientMonitorLine."Function Name"::LOCKTABLE) OR
              (NOT ClientMonitorLine.RECORDLEVELLOCKING))
          THEN BEGIN
            IF NOT TransactionCreated THEN BEGIN
              TransactionCreated := TRUE;
              Transaction.Date := ClientMonitorLine.Date;
              Transaction.Time := ClientMonitorLine.Time;
              Transaction.INSERT;
            END;

            TransactionLock.SETCURRENTKEY("Login Date","Login Time","Connection ID","Transaction No.","Table ID");
            TransactionLock.SETRANGE("Login Date",ClientMonitorLine."Login Date");
            TransactionLock.SETRANGE("Login Time",ClientMonitorLine."Login Time");
            TransactionLock.SETRANGE("Connection ID",ClientMonitorLine."Connection ID");
            TransactionLock.SETRANGE("Transaction No.",ClientMonitorLine."Transaction No.");
            TransactionLock.SETRANGE("Table ID",ClientMonitorLine."Table ID");
            IF TransactionLock.FIND('-') THEN BEGIN
              IF TransactionLock."Function No." = RealClientMonitorLine."Function Name"::LOCKTABLE THEN BEGIN
                TransactionLock."Function No." := ClientMonitorLine."Function No.";
                TransactionLock."Function Name" := ClientMonitorLine."Function Name";
                TransactionLock.MODIFY;
              END;
            END ELSE BEGIN
              TransactionLock."Login Date" := ClientMonitorLine."Login Date";
              TransactionLock."Login Time" := ClientMonitorLine."Login Time";
              TransactionLock."Connection ID" := ClientMonitorLine."Connection ID";
              TransactionLock."Transaction No." := ClientMonitorLine."Transaction No.";
              TransactionLock."Entry No." := ClientMonitorLine."Entry No.";
              TransactionLock."Table ID" := ClientMonitorLine."Table ID";
              TransactionLock."Table Name" := ClientMonitorLine."Table Name";
              TransactionLock."Function No." := ClientMonitorLine."Function No.";
              TransactionLock."Function Name" := ClientMonitorLine."Function Name";
              TransactionLock."Source Object" := ClientMonitorLine."Source Object";
              TransactionLock."Source Function/Trigger" := ClientMonitorLine."Source Function/Trigger";
              TransactionLock."Source Text" := ClientMonitorLine."Source Text";
              TransactionLock."Source Line No." := ClientMonitorLine."Source Line No.";
              TransactionLock.INSERT;
            END;
          END;
        UNTIL ClientMonitorLine.NEXT = 0;
    END;

    BEGIN
    END.
  }
}