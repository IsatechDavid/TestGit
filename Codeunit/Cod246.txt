OBJECT Codeunit 246 Item Jnl.-Explode BOM
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW13.60,KITNA6.00;
  }
  PROPERTIES
  {
    TableNo=83;
    OnRun=VAR
            FromJnlLineDim@1000 : Record 356;
            ToJnlLineDim@1001 : Record 356;
            TempJnlLineDim@1002 : TEMPORARY Record 356;
            DimMgt@1003 : Codeunit 408;
            Selection@1004 : Integer;
          BEGIN
            TESTFIELD("Item No.");
            CALCFIELDS("Reserved Qty. (Base)");
            TESTFIELD("Reserved Qty. (Base)",0);
            Item.GET("Item No.");
            IF Item."Kit BOM No." = '' THEN
              ERROR(
                Text000,
                "No.");
            KitManagement.GetKitProdBOM(Item."Kit BOM No.",TempProdBOMLine,NoOfBOMComp);
            IF NoOfBOMComp = 0 THEN
              ERROR(
                Text000,
                "Item No.");

            Selection := STRMENU(Text003,2);
            IF Selection = 0 THEN
              EXIT;

            ToItemJnlLine.RESET;
            ToItemJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
            ToItemJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
            ToItemJnlLine.SETRANGE("Document No.","Document No.");
            ToItemJnlLine.SETRANGE("Posting Date","Posting Date");
            ToItemJnlLine.SETRANGE("Entry Type","Entry Type");
            ToItemJnlLine := Rec;
            IF ToItemJnlLine.FIND('>') THEN BEGIN
              LineSpacing := (ToItemJnlLine."Line No." - "Line No.") DIV (1 + NoOfBOMComp);
              IF LineSpacing = 0 THEN
                ERROR(Text002);
            END ELSE
              LineSpacing := 10000;

            ToItemJnlLine := Rec;
            TempProdBOMLine.SETRANGE(Type,TempProdBOMLine.Type::Item);
            TempProdBOMLine.SETFILTER("No.",'<>%1','');
            IF TempProdBOMLine.FIND('-') THEN
              REPEAT
                Item.GET(TempProdBOMLine."No.");
                ToItemJnlLine."Line No." := 0;
                ToItemJnlLine."Item No." := TempProdBOMLine."No.";
                ToItemJnlLine."Variant Code" := TempProdBOMLine."Variant Code";
                ToItemJnlLine."Unit of Measure Code" := TempProdBOMLine."Unit of Measure Code";
                ToItemJnlLine."Qty. per Unit of Measure" :=
                  UOMMgt.GetQtyPerUnitOfMeasure(Item,TempProdBOMLine."Unit of Measure Code");
                ToItemJnlLine.Quantity := ROUND("Quantity (Base)" * TempProdBOMLine."Quantity per",0.00001);
                IF ToItemJnlLine.Quantity > 0 THEN
                  ItemCheckAvail.ItemJnlCheckLine(ToItemJnlLine);
              UNTIL TempProdBOMLine.NEXT = 0;

            ToItemJnlLine := Rec;
            ToItemJnlLine.INIT;
            ToItemJnlLine.Description := Description;
            ToItemJnlLine.MODIFY;

            FromJnlLineDim.SETRANGE("Table ID",DATABASE::"Item Journal Line");
            FromJnlLineDim.SETRANGE("Journal Template Name","Journal Template Name");
            FromJnlLineDim.SETRANGE("Journal Batch Name","Journal Batch Name");
            FromJnlLineDim.SETRANGE("Journal Line No.","Line No.");
            FromJnlLineDim.SETRANGE("Allocation Line No.",0);
            DimMgt.CopyJnlLineDimToJnlLineDim(FromJnlLineDim,TempJnlLineDim);
            CLEAR(TempJnlLineDim);
            FromJnlLineDim.DELETEALL;

            TempProdBOMLine.RESET;
            TempProdBOMLine.SETRANGE(Type,TempProdBOMLine.Type::Item);
            TempProdBOMLine.FIND('-');
            NextLineNo := "Line No.";

            REPEAT
              ToItemJnlLine.INIT;
              ToItemJnlLine."Journal Template Name" := "Journal Template Name";
              ToItemJnlLine."Document No." := "Document No.";
              ToItemJnlLine."Document Date" := "Document Date";
              ToItemJnlLine."Posting Date" := "Posting Date";
              ToItemJnlLine."External Document No." := "External Document No.";
              ToItemJnlLine."Entry Type" := "Entry Type";
              ToItemJnlLine."Location Code" := "Location Code";
              NextLineNo := NextLineNo + LineSpacing;
              ToItemJnlLine."Line No." := NextLineNo;
              ToItemJnlLine."Drop Shipment" := "Drop Shipment";
              ToItemJnlLine."Source Code" := "Source Code";
              ToItemJnlLine."Reason Code" := "Reason Code";
              ToItemJnlLine.VALIDATE("Item No.",TempProdBOMLine."No.");
              ToItemJnlLine.VALIDATE("Variant Code",TempProdBOMLine."Variant Code");
              ToItemJnlLine.VALIDATE("Unit of Measure Code",TempProdBOMLine."Unit of Measure Code");
              ToItemJnlLine.VALIDATE(
                Quantity,
                ROUND("Quantity (Base)" * TempProdBOMLine."Quantity per",0.00001));
              ToItemJnlLine.Description := TempProdBOMLine.Description;
              ToItemJnlLine.INSERT;

              IF Selection = 1 THEN BEGIN
                ToItemJnlLine."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
                ToItemJnlLine."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
                ToItemJnlLine.MODIFY;
                ToJnlLineDim.SETRANGE("Table ID",DATABASE::"Item Journal Line");
                ToJnlLineDim.SETRANGE("Journal Template Name",ToItemJnlLine."Journal Template Name");
                ToJnlLineDim.SETRANGE("Journal Batch Name",ToItemJnlLine."Journal Batch Name");
                ToJnlLineDim.SETRANGE("Journal Line No.",ToItemJnlLine."Line No.");
                ToJnlLineDim.SETRANGE("Allocation Line No.",0);
                ToJnlLineDim.DELETEALL;
                IF TempJnlLineDim.FIND('-') THEN BEGIN
                  REPEAT
                    ToJnlLineDim.INIT;
                    ToJnlLineDim."Table ID" := DATABASE::"Item Journal Line";
                    ToJnlLineDim."Journal Template Name" := ToItemJnlLine."Journal Template Name";
                    ToJnlLineDim."Journal Batch Name" := ToItemJnlLine."Journal Batch Name";
                    ToJnlLineDim."Journal Line No." := ToItemJnlLine."Line No.";
                    ToJnlLineDim."Allocation Line No." := 0;
                    ToJnlLineDim."Dimension Code" := TempJnlLineDim."Dimension Code";
                    ToJnlLineDim."Dimension Value Code" := TempJnlLineDim."Dimension Value Code";
                    ToJnlLineDim.INSERT;
                  UNTIL TempJnlLineDim.NEXT = 0;
                END;
              END;
            UNTIL TempProdBOMLine.NEXT = 0;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Item %1 is not a kit item.;FRA=L''article %1 n''est pas un article de kit.';
      Text002@1001 : TextConst 'ENU=There is not enough space to explode the BOM.;FRA=Il n''y a pas suffisamment de place pour ‚clater la nomenclature.';
      Text003@1002 : TextConst 'ENU=&Copy dimensions from BOM,&Retrieve dimensions from components;FRA=&Copier axes … partir de nomenclature,&Supprimer axes des composants';
      ToItemJnlLine@1003 : Record 83;
      Item@1005 : Record 27;
      TempProdBOMLine@1462000 : TEMPORARY Record 99000772;
      ItemCheckAvail@1006 : Codeunit 311;
      UOMMgt@1007 : Codeunit 5402;
      KitManagement@1462001 : Codeunit 25000;
      LineSpacing@1008 : Integer;
      NextLineNo@1009 : Integer;
      NoOfBOMComp@1010 : Integer;

    BEGIN
    END.
  }
}