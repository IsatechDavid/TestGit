OBJECT Codeunit 412 Common Dialog Management
{
  OBJECT-PROPERTIES
  {
    Date=15/11/11;
    Time=13:24:33;
    Modified=Yes;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text003@1003 : TextConst 'ENU=Text Files (*.txt)|*.txt|All Files (*.*)|*.*;FRA=Fichiers texte (*.txt)|*.txt|Tous les fichiers (*.*)|*.*';
      Text004@1004 : TextConst 'ENU=Microsoft Excel Files (*.xl*)|*.xl*|All Files (*.*)|*.*;FRA=Fichiers Microsoft Excel (*.xl*)|*.xl*|Tous les fichiers (*.*)|*.*';
      Text005@1005 : TextConst 'ENU=Word Documents (*.doc)|*.doc|All Files (*.*)|*.*;FRA=Documents Word (*.doc)|*.doc|Tous les fichiers (*.*)|*.*';
      Text006@1006 : TextConst 'ENU=XML files (*.xml)|*.xml|All Files (*.*)|*.*;FRA=Fichiers XML (*.xml)|*.xml|Tous les fichiers (*.*)|*.*';
      Text007@1007 : TextConst 'ENU=HTM files (*.htm)|*.htm|All Files (*.*)|*.*;FRA=Fichiers HTM (*.htm)|*.htm|Tous les fichiers (*.*)|*.*';
      Text008@1008 : TextConst 'ENU=XML Schema Files (*.xsd)|*.xsd|All Files (*.*)|*.*;FRA=Fichiers de sch‚ma XML (*.xsd)|*.xsd|Tous les fichiers (*.*)|*.*';
      Text009@1009 : TextConst 'ENU=XSL Transform Files(*.xslt)|*.xslt|All Files (*.*)|*.*;FRA=Fichiers de transformation XSL (*.xslt)|*.xslt|Tous les fichiers (*.*)|*.*';

    PROCEDURE OpenFile@1(WindowTitle@1000 : Text[50];DefaultFileName@1001 : Text[1024];DefaultFileType@1002 : ' ,Text,Excel,Word,Custom,Xml,Htm,Xsd,Xslt';FilterString@1003 : Text[250];Action@1004 : 'Open,Save') : Text[260];
    VAR
      CommonDialogControl@1005 : OCX "{F9043C85-F6F2-101A-A3C9-08002B2F49FB}:'Microsoft Common Dialog Control, version 6.0'";
      Filter@1007 : Text[255];
    BEGIN
      IF DefaultFileType = DefaultFileType::Custom THEN BEGIN
        GetDefaultFileType(DefaultFileName,DefaultFileType);
        Filter := FilterString;
      END ELSE
        Filter := GetFilterString(DefaultFileType);

      CommonDialogControl.MaxFileSize := 2048;
      CommonDialogControl.FileName := DefaultFileName;
      CommonDialogControl.DialogTitle := WindowTitle;
      CommonDialogControl.Filter := Filter;
      CommonDialogControl.InitDir := DefaultFileName;

      IF Action = Action::Open THEN
        CommonDialogControl.ShowOpen
      ELSE
        CommonDialogControl.ShowSave;
      EXIT(CommonDialogControl.FileName);
    END;

    PROCEDURE OpenFileWithName@2(DefaultFileName@1001 : Text[1024]) : Text[260];
    VAR
      DefaultFileType@1002 : ' ,Text,Excel,Word,Custom,Xml,Htm,Xsd,Xslt';
      FilterString@1003 : Text[250];
      Action@1004 : 'Open,Save';
    BEGIN
      GetDefaultFileType(DefaultFileName,DefaultFileType);
      IF DefaultFileType = DefaultFileType::Custom THEN
        FilterString := Text003;

      EXIT(OpenFile('',DefaultFileName,DefaultFileType,FilterString,Action::Open));
    END;

    LOCAL PROCEDURE GetDefaultFileType@3(DefaultFileName@1001 : Text[1024];VAR DefaultFileType@1002 : ' ,Text,Excel,Word,Custom,Xml,Htm,Xsd,Xslt');
    BEGIN
      CASE TRUE OF
        CheckFileNameForFileType(DefaultFileName,'.DOC'):
          DefaultFileType := DefaultFileType::Word;
        CheckFileNameForFileType(DefaultFileName,'.XLS'):
          DefaultFileType := DefaultFileType::Excel;
        CheckFileNameForFileType(DefaultFileName,'.TXT'):
          DefaultFileType := DefaultFileType::Custom;
        CheckFileNameForFileType(DefaultFileName,'.XML'):
          DefaultFileType := DefaultFileType::Xml;
        CheckFileNameForFileType(DefaultFileName,'.HTM'):
          DefaultFileType := DefaultFileType::Htm;
        CheckFileNameForFileType(DefaultFileName,'.XSD'):
          DefaultFileType := DefaultFileType::Xsd;
        CheckFileNameForFileType(DefaultFileName,'.XSLT'):
          DefaultFileType := DefaultFileType::Xslt;
        ELSE
          DefaultFileType := DefaultFileType::Custom;
      END;
    END;

    LOCAL PROCEDURE CheckFileNameForFileType@4(DefaultFileName@1001 : Text[1024];FileExtension@1002 : Text[5]) : Boolean;
    VAR
      Position@1003 : Integer;
    BEGIN
      Position := STRPOS(UPPERCASE(DefaultFileName),FileExtension);
      EXIT((Position > 0) AND (Position - 1 = STRLEN(DefaultFileName) - STRLEN(FileExtension)));
    END;

    PROCEDURE GetFilterString@5(FileType@1000 : ' ,Text,Excel,Word,Custom,Xml,Htm,Xsd,Xslt') : Text[255];
    BEGIN
      CASE FileType OF
        FileType::Text:
          EXIT(Text003);
        FileType::Excel:
          EXIT(Text004);
        FileType::Word:
          EXIT(Text005);
        FileType::Xml:
          EXIT(Text006);
        FileType::Htm:
          EXIT(Text007);
        FileType::Xsd:
          EXIT(Text008);
        FileType::Xslt:
          EXIT(Text009);
        FileType::Custom:
          EXIT('');
      END;
    END;

    PROCEDURE OpenFolder2@1000000000(pExportDir@1000000004 : Text[250]) ReturnValue : Text[250];
    VAR
      lExportDir@1000000001 : Text[260];
      lText000@1000000002 : TextConst 'ENU=Select a Directory...;FRA=S‚lectionner un r‚pertoire...';
      lText001@1000000003 : TextConst 'ENU=*.*;FRA=*.*';
      i@1000000000 : Integer;
    BEGIN
      lExportDir := pExportDir + 'export.dir';
      lExportDir := OpenFile(lText000,lExportDir,4,lText001,0);

      i := STRPOS(lExportDir,'\');
      ReturnValue := '';

      IF (i <> 0) THEN BEGIN
        REPEAT
          ReturnValue := ReturnValue + COPYSTR(lExportDir,1,i);
          lExportDir := COPYSTR(lExportDir,i+1);
          i := STRPOS(lExportDir,'\');
        UNTIL (i = 0);
      END;
    END;

    PROCEDURE OpenFolder3@1100281000(pExportDir@1100281002 : Text[250]) rFolderName : Text[1024];
    VAR
      lWindowsShell@1100281001 : Automation "{50A7E9B0-70EF-11D1-B75A-00A0C90564FE} 1.0:{13709620-C279-11CE-A49E-444553540000}:'Microsoft Shell Controls And Automation'.Shell";
      lFolderItem@1100281003 : Automation "{50A7E9B0-70EF-11D1-B75A-00A0C90564FE} 1.0:{EDC817AA-92B8-11D1-B075-00C04FC33AA5}:'Microsoft Shell Controls And Automation'.FolderItem2";
      lFolder@1100281000 : Automation "{50A7E9B0-70EF-11D1-B75A-00A0C90564FE} 1.0:{A7AE5F64-C4D7-4D7F-9307-4D24EE54B841}:'Microsoft Shell Controls And Automation'.Folder3";
      lFolderItems@1100281004 : Automation "{50A7E9B0-70EF-11D1-B75A-00A0C90564FE} 1.0:{EAA7C309-BBEC-49D5-821D-64D966CB667F}:'Microsoft Shell Controls And Automation'.FolderItems3";
    BEGIN
      //IMH01
      rFolderName := pExportDir;
      IF ISCLEAR(lWindowsShell) THEN
        CREATE(lWindowsShell, FALSE, TRUE);
      lFolder := lWindowsShell.BrowseForFolder(0,pExportDir,0);
      IF NOT ISCLEAR(lFolder) THEN BEGIN
        lFolderItems := lFolder.Items();
        lFolderItem := lFolderItems.Item;
        rFolderName := FORMAT(lFolderItem.Path + '\');
      END;
      CLEAR(lWindowsShell);
      CLEAR(lFolder);
      CLEAR(lFolderItems);
      CLEAR(lFolderItem);
      EXIT(rFolderName);
    END;

    BEGIN
    {
      /** @r IMH01 @d 03/11/11 @a ISAT.ZW @v IMH6.01.003 @s IMH @c Ajout fonction OpenFolder3 */
    }
    END.
  }
}