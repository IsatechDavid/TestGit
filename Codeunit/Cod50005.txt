OBJECT Codeunit 50005 Outlook Document Mgt
{
  OBJECT-PROPERTIES
  {
    Date=16/07/13;
    Time=10:28:08;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            CheckMailItem;
          END;

  }
  CODE
  {
    VAR
      OutlookAppMgt@1100481000 : Codeunit 50029;
      OApp@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{0006F03A-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Application";
      OAppLocal@1000000001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{0006F03A-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Application";
      ONameSpace@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{0006308B-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.NameSpace";
      OFolders@1100281008 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063051-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Folders";
      OMapiFolder@1100281002 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063006-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MAPIFolder";
      OItems@1100281003 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063052-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Items";
      FolderPath@1100281011 : Text[250];
      Text001@1100281005 : TextConst 'ENU=Attachment has been delete;FRA=Le document joint a ‚t‚ supprim‚';
      Text002@1100281004 : TextConst 'FRA=Flux %1, %2 documents trait‚s.';
      FolderMgt@1100281006 : Codeunit 50004;
      OItemsToCheck@1100281009 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063052-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Items";
      OMailItemToCheck@1100281007 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem";
      OReportItemToCheck@1100281010 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061035-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.ReportItem";
      OMeetingItemToCheck@1100281014 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061036-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MeetingItem";
      TypeToCheck@1100281012 : 'Mail,Report,Meeting';
      Text003@1100281013 : TextConst 'ENU=Unabled to load %1 flow (source %2).;FRA=Impossible d''initaliser le flux %1 (source %2).';
      FlowCode@1000000000 : Code[20];

    PROCEDURE TreatOutLookDocFlow@1100281001(pDocumentFlow@1100281000 : Record 50053);
    VAR
      lOMapiFolder@1100281002 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063006-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MAPIFolder";
      lOItems@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063052-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Items";
      lOMailItem@1100281005 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem";
      lOMailItemNew@1000000000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem";
      lOReportItem@1100281010 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061035-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.ReportItem";
      lOReportItemNew@1100281012 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061035-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.ReportItem";
      lOMeetingItem@1100281013 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061036-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MeetingItem";
      lOMeetingItemNew@1100281014 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061036-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MeetingItem";
      lDocQueue@1100281006 : Record 50054;
      lOutlookDocMgtForHis@1100281008 : Codeunit 50005;
      lHistoryOMailItem@1100281007 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem";
      lHistoryErrorOReportItem@1100281011 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061035-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.ReportItem";
      lDeletedOMailItem@1000000001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem";
      lCount@1100281004 : Integer;
      lTotalMsg@1100281003 : Integer;
      lOutlookDocumentMgt@1100281009 : Codeunit 50005;
    BEGIN
      //traitement d'un outlook flux document
      IF NOT pDocumentFlow.Active THEN
        EXIT;
      IF pDocumentFlow."Flow Nature" <> pDocumentFlow."Flow Nature"::Outlook THEN
        EXIT;

      //if pDocumentFlow."Flow Code" = '0540163867' then
      //MESSAGE(pDocumentFlow."Flow Code" + '1');
      FlowCode := pDocumentFlow."Flow Code";
      GetMailFolderByFolderPath(pDocumentFlow."Flow Source", lOMapiFolder);
      IF ISCLEAR(lOMapiFolder) THEN BEGIN
        ERROR(STRSUBSTNO(Text003, pDocumentFlow."Flow Code", pDocumentFlow."Flow Source")); //IMH05.ST
        EXIT;
      END;
      //MESSAGE(pDocumentFlow."Flow Code");
      lOItems := lOMapiFolder.Items;
      lTotalMsg := lOItems.Count;
      IF lTotalMsg = 0 THEN
        EXIT;
      IF pDocumentFlow.History THEN
        GetMailFolderByFolderPath(pDocumentFlow."History Path", lHistoryOMailItem);

      IF pDocumentFlow."History Error Mail" THEN
        GetMailFolderByFolderPath(pDocumentFlow."History Error Mail Path", lHistoryErrorOReportItem);

      IF (NOT pDocumentFlow.History) OR (NOT pDocumentFlow."History Error Mail") THEN
        GetMailFolderByFolderPath(pDocumentFlow."Deleted Item Path", lDeletedOMailItem);

      FOR lCount := 1 TO lTotalMsg DO BEGIN
        lOItems.Sort('[ReceivedTime]', FALSE); // tri … chaque boucle pour le GetFirst
        TypeToCheck := TypeToCheck::Mail;
        lOutlookDocumentMgt.SetCheckMailItem(lOItems, lOMailItem, lOReportItem, lOMeetingItem, TypeToCheck);
        COMMIT;
        IF lOutlookDocumentMgt.RUN THEN BEGIN
          lOMailItem := lOItems.GetFirst;
          lDocQueue.INIT;
          CreateMailQueueDocument(pDocumentFlow, lDocQueue, lOMailItem);
          //sauvegarder le mail
          IF pDocumentFlow.History THEN BEGIN
            lOMailItem.Move(lHistoryOMailItem);
            lOMailItem.Close(1); // not saved
          END ELSE BEGIN
            //Supression d‚finitivement un mail
            lOMailItemNew := lOMailItem.Move(lDeletedOMailItem);
            lOMailItemNew.Subject := 'Temp subject to delete';
            lOMailItemNew.Save;
            lOMailItemNew.Delete;
            lOMailItem.Close(1);
          END;
        END ELSE BEGIN
          TypeToCheck := TypeToCheck::Report;
          lOutlookDocumentMgt.SetCheckMailItem(lOItems, lOMailItem, lOReportItem, lOMeetingItem, TypeToCheck);
          COMMIT;
          IF lOutlookDocumentMgt.RUN THEN BEGIN
            lOReportItem := lOItems.GetFirst;
            //sauvegarder le report
            IF pDocumentFlow."History Error Mail" THEN BEGIN
              //lOReportItem.UnRead(FALSE);
              lOReportItem.Move(lHistoryErrorOReportItem);
              lOReportItem.Close(1); // not saved
            END ELSE BEGIN
              //lOReportItem.Delete;
              lOReportItemNew := lOReportItem.Move(lDeletedOMailItem);
              lOReportItemNew.Subject := 'Temp subject to delete';
              lOReportItemNew.Save;
              lOReportItemNew.Delete;
              lOReportItemNew.Close(1);
            END;
          END ELSE BEGIN
            TypeToCheck := TypeToCheck::Meeting;
            lOutlookDocumentMgt.SetCheckMailItem(lOItems, lOMailItem, lOReportItem, lOMeetingItem, TypeToCheck);
            COMMIT;
            IF lOutlookDocumentMgt.RUN THEN BEGIN
              lOMeetingItem := lOItems.GetFirst;
              {
              //sauvegarder le report
              IF pDocumentFlow."History Error Mail" THEN BEGIN
                //lOReportItem.UnRead(FALSE);
                lOMeetingItem.Move(lHistoryErrorOReportItem);
                lOMeetingItem.Close(1); // not saved
              END ELSE BEGIN
                //lOReportItem.Delete;
                lOReportItemNew := lOReportItem.Move(lDeletedOMailItem);
                lOReportItemNew.Subject := 'Temp subject to delete';
                lOReportItemNew.Save;
                lOReportItemNew.Delete;
                lOReportItemNew.Close(1);
              END;
              }
            END;
          END;
        END;
      END;

      IF pDocumentFlow."Debug Mode" THEN
        MESSAGE(Text002, pDocumentFlow."Flow Code", lTotalMsg);
    END;

    PROCEDURE PurgeOutLookDocFlow@1100281012(pDocumentFlow@1100281000 : Record 50053);
    VAR
      lOMapiFolder@1100281002 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063006-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MAPIFolder";
      lOItems@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063052-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Items";
      lOMailItem@1100281005 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem";
      lOMailItemNew@1000000000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem";
      lOReportItem@1100281010 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061035-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.ReportItem";
      lOReportItemNew@1100281013 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061035-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.ReportItem";
      lOMeetingItem@1100281007 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061036-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MeetingItem";
      lDocQueue@1100281006 : Record 50054;
      lOutlookDocMgtForHis@1100281008 : Codeunit 50005;
      lDeletedOMailItem@1000000001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem";
      lCount@1100281004 : Integer;
      lTotalMsg@1100281003 : Integer;
      lOutlookDocumentMgt@1100281009 : Codeunit 50005;
      lDate@1100281012 : Date;
    BEGIN
      //IMH07
      //Purger d'un outlook flux document
      IF pDocumentFlow."Flow Nature" <> pDocumentFlow."Flow Nature"::Outlook THEN
        EXIT;

      IF NOT pDocumentFlow.Active THEN
        EXIT;
      IF pDocumentFlow."History Period (Days)" = 0 THEN
        EXIT;
      IF NOT pDocumentFlow.History THEN
        EXIT;
      GetMailFolderByFolderPath(pDocumentFlow."History Path", lOMapiFolder);
      IF ISCLEAR(lOMapiFolder) THEN BEGIN
        ERROR(STRSUBSTNO(Text003, pDocumentFlow."Flow Code", pDocumentFlow."History Path")); //IMH05.ST
        EXIT;
      END;
      lOItems := lOMapiFolder.Items;
      lTotalMsg := lOItems.Count;
      IF lTotalMsg = 0 THEN
        EXIT;

      pDocumentFlow.TESTFIELD("Deleted Item Path");
      GetMailFolderByFolderPath(pDocumentFlow."Deleted Item Path", lDeletedOMailItem);
      IF ISCLEAR(lDeletedOMailItem) THEN BEGIN
        ERROR(STRSUBSTNO(Text003, pDocumentFlow."Flow Code", pDocumentFlow."Deleted Item Path")); //IMH05.ST
        EXIT;
      END;

      FOR lCount := 1 TO lTotalMsg DO BEGIN
        lOItems.Sort('[ReceivedTime]', FALSE); // tri … chaque boucle pour le GetFirst
        TypeToCheck := TypeToCheck::Mail;
        lOutlookDocumentMgt.SetCheckMailItem(lOItems, lOMailItem, lOReportItem,lOMeetingItem, TypeToCheck);
        COMMIT;
        IF lOutlookDocumentMgt.RUN THEN BEGIN
          lOMailItem := lOItems.GetFirst;
          lDate := lOMailItem.ReceivedTime;
          IF lDate <=  WORKDATE - pDocumentFlow."History Period (Days)" THEN BEGIN
            //Supression d‚finitivement un mail
            lOMailItemNew := lOMailItem.Move(lDeletedOMailItem);
            lOMailItemNew.Subject := 'Temp subject to delete';
            lOMailItemNew.Save;
            lOMailItemNew.Delete;
            lOMailItem.Close(1);
          END ELSE
            EXIT;
        END ELSE BEGIN
          TypeToCheck := TypeToCheck::Report;
          lOutlookDocumentMgt.SetCheckMailItem(lOItems, lOMailItem, lOReportItem, lOMeetingItem, TypeToCheck);
          COMMIT;
          IF lOutlookDocumentMgt.RUN THEN BEGIN
            lOReportItem := lOItems.GetFirst;
            //Supression d‚finitivement un mail
            lOReportItemNew := lOReportItem.Move(lDeletedOMailItem);
            lOReportItemNew.Subject := 'Temp subject to delete';
            lOReportItemNew.Save;
            lOReportItemNew.Delete;
            lOReportItemNew.Close(1);
          END;
        END;
      END;

      IF pDocumentFlow."Debug Mode" THEN
        MESSAGE(Text002, pDocumentFlow."Flow Code", lTotalMsg);
    END;

    LOCAL PROCEDURE SetParameters@1100281004(pFolderPath@1100281000 : Text[250]);
    BEGIN
      //Init Objet globale + chemin de boite aux lettres … lire
      OutlookAppMgt.SetOutLookOnly(TRUE);
      OutlookAppMgt.GetOutlookApp(OApp); //IMH02.ST
      ONameSpace := OApp.GetNamespace('MAPI');
      FolderPath := pFolderPath;
    END;

    LOCAL PROCEDURE GetFolder@1100281003() : Boolean;
    VAR
      lCurrFolderName@1100281001 : Text[250];
      lLeftFolderPath@1100281000 : Text[250];
      lCount@1100281002 : Integer;
      lFound@1100281003 : Boolean;
      lName@1100281004 : Text[250];
    BEGIN
      //recherche du r‚pertoire boite mail par FolderPath puis instanter le variable globale OMapiFolder
      IF FolderPath = '' THEN
        EXIT(FALSE);
      lLeftFolderPath := FolderPath;
      lLeftFolderPath := CONVERTSTR(lLeftFolderPath, '/', '\');
      OFolders := ONameSpace.Folders;

      WHILE TRUE DO BEGIN
        IF (STRPOS(lLeftFolderPath, '\') > 1) AND (STRLEN(lLeftFolderPath) > 1) THEN BEGIN
          lCurrFolderName := COPYSTR(lLeftFolderPath, 1, STRPOS(lLeftFolderPath, '\') - 1);
          lLeftFolderPath := COPYSTR(lLeftFolderPath, STRPOS(lLeftFolderPath, '\') + 1, STRLEN(lLeftFolderPath));
        END ELSE BEGIN
          IF STRPOS(lLeftFolderPath, '\') = 0 THEN BEGIN
            lCurrFolderName := lLeftFolderPath;
            lLeftFolderPath := '';
          END ELSE BEGIN
            lCurrFolderName := '';
            IF STRLEN(lLeftFolderPath) = 1 THEN
              lLeftFolderPath := ''
            ELSE
              lLeftFolderPath := COPYSTR(lLeftFolderPath, STRPOS(lLeftFolderPath, '\') + 1, STRLEN(lLeftFolderPath));
          END;
        END;

        IF lCurrFolderName <> '' THEN BEGIN
          lCount := OFolders.Count;
          OMapiFolder := OFolders.GetFirst;

          IF (OMapiFolder.Name <> lCurrFolderName) AND (lCount > 1) THEN BEGIN
            REPEAT
              lFound := FALSE;
              OMapiFolder := OFolders.GetNext;
              lName := OMapiFolder.Name;
              IF OMapiFolder.Name = lCurrFolderName THEN
                lFound := TRUE;
              lCount := lCount - 1;

            UNTIL (OMapiFolder.Name = lCurrFolderName) OR (lCount = 1);
          END ELSE
            IF OMapiFolder.Name = lCurrFolderName THEN
              lFound := TRUE;
          IF lFound THEN
            OFolders := OMapiFolder.Folders
          ELSE
            EXIT(FALSE);
          IF (lFound = TRUE) AND (STRLEN(lLeftFolderPath) = 0) THEN
            EXIT(TRUE);
          //OMapiFolder := OFolders.Item(lCurrFolderName);
          //MESSAGE(OMapiFolder.Name);
          OFolders := OMapiFolder.Folders;
        END;
        IF STRLEN(lLeftFolderPath) = 0 THEN
          EXIT(FALSE);
      END;
    END;

    PROCEDURE GetMailFolderByFolderPath@1100281053(pFolderPath@1100281000 : Text[250];VAR pOMapiFolder@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063006-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MAPIFolder") : Boolean;
    BEGIN
      //obtenir un varialble de r‚pertoire boite mail par chemin donn‚
      SetParameters(pFolderPath);
      IF NOT GetFolder THEN
        EXIT(FALSE)
      ELSE BEGIN
        pOMapiFolder := OMapiFolder;
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE GetMsgFileByPath@1100281000(pFolderPath@1100281000 : Text[250];VAR pOMailItem@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem");
    BEGIN
      //Obtenir instance Outlook.MailItem objet d'un fichier .msg
      OutlookAppMgt.SetOutLookOnly(TRUE);
      OutlookAppMgt.GetOutlookApp(OApp); //IMH02.ST
      ONameSpace := OApp.GetNamespace('MAPI');
      pOMailItem := ONameSpace.OpenSharedItem(pFolderPath);
    END;

    LOCAL PROCEDURE GetSenderAddressMail@1100281005(VAR pOMailItem@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem") rValue : Text[80];
    VAR
      lSenderOAddEntry@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{0006304B-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.AddressEntry";
      lExchUser@1100281002 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{000610C9-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.ExchangeUser";
      lPropertyAcc@1100281003 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{0006102D-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.PropertyAccessor";
      lPR_SMTP_ADDRESS@1100281004 : Text[100];
    BEGIN
      //obtenir l'addresse mail (externe ou interne d'un serveur exchange)
      IF ISCLEAR(pOMailItem) THEN
        EXIT;
      IF pOMailItem.SenderEmailType = 'EX' THEN BEGIN
        lSenderOAddEntry := pOMailItem.Sender;
        IF ISCLEAR(lSenderOAddEntry) THEN
          EXIT;
      {
        IF (lSenderOAddEntry.AddressEntryUserType = 0) OR (lSenderOAddEntry.AddressEntryUserType = 5) THEN BEGIN
          lExchUser := lSenderOAddEntry.GetExchangeUser;
          IF NOT ISCLEAR(lExchUser) THEN
            rValue := COPYSTR(lExchUser.PrimarySmtpAddress, 1, MAXSTRLEN(rValue));
          EXIT;
        END ELSE BEGIN
      }
          rValue := COPYSTR(pOMailItem.SenderName, 1, MAXSTRLEN(rValue));
          EXIT;
          {
          lPR_SMTP_ADDRESS := 'http://schemas.microsoft.com/mapi/proptag/0x39FE001E';
          lPropertyAcc := lSenderOAddEntry.PropertyAccessor;
          IF NOT ISCLEAR(lPropertyAcc) THEN
            EXIT(lPropertyAcc.GetProperty(lPR_SMTP_ADDRESS))
          ELSE
            EXIT;
           }
      //  END;
      END ELSE
        rValue := COPYSTR(pOMailItem.SenderEmailAddress,1,MAXSTRLEN(rValue));
    END;

    LOCAL PROCEDURE GetReceiveAddressMail@1100481000(VAR pOMailItem@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem") rValue : Text[80];
    VAR
      lRecipientList@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{0006303B-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Recipients";
      lRecipient@1100281002 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063045-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Recipient";
      lOAddEntry@1100481000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{0006304B-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.AddressEntry";
      lExchUser@1100481002 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{000610C9-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.ExchangeUser";
    BEGIN
      //obtenir l'addresse mail (externe ou interne d'un serveur exchange)
      IF ISCLEAR(pOMailItem) THEN
        EXIT;
      rValue := COPYSTR(pOMailItem.ReceivedByName, 1, MAXSTRLEN(rValue));

      lRecipientList := pOMailItem.Recipients;
      IF lRecipientList.Count <> 1 THEN
        EXIT;

      lRecipient := lRecipientList.Item(1);
      rValue := COPYSTR(lRecipient.Name, 1, MAXSTRLEN(rValue));
      lOAddEntry := lRecipient.AddressEntry;
      IF (lOAddEntry.AddressEntryUserType = 0) OR (lOAddEntry.AddressEntryUserType = 5) THEN BEGIN
        lExchUser := lOAddEntry.GetExchangeUser;
        IF NOT ISCLEAR(lExchUser) THEN
          rValue := COPYSTR(lExchUser.PrimarySmtpAddress, 1, MAXSTRLEN(rValue));
      END;
    END;

    PROCEDURE CreateMailQueueDocument@1100281050(pDocumentFlow@1100281000 : Record 50053;VAR pDocQueue@1100281002 : Record 50054;VAR pOMailItem@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem");
    VAR
      lAttachmentMgt@1100281011 : Codeunit 50002;
      lDocumentFlowMgt@1100281004 : Codeunit 50006;
      lDocAttachment@1100281009 : Record 50021;
      lFileCompletNameBuffer@1100281005 : Text[260];
      lFileInStream@1100281010 : InStream;
      lTempBlob@1100281006 : Record 99008535;
      lDocQueue@1100281003 : Record 50054;
      lQualificationErrorMessage@1100281007 : Text[100];
      lProviderNo@1100281008 : Code[20];
      lSenderAddress@1100281012 : Text[80];
    BEGIN
      //Cr‚ation d'une file document par mail

      WITH pDocQueue DO BEGIN
        lSenderAddress := GetSenderAddressMail(pOMailItem);
        IF NOT CheckSenderAddress(pDocumentFlow."Flow Code", lSenderAddress) THEN BEGIN
          EXIT;
        END;

        "Flow Code" := pDocumentFlow."Flow Code";
        "Queue Type" := "Queue Type"::Receipt;
        "Entry No." := 0;
        Date := pOMailItem.ReceivedTime;
        //Time := VARIANT2TIME(pOMailItem.ReceivedTime); heure non r‚cup‚rable
        Description := COPYSTR(pOMailItem.Subject, 1, MAXSTRLEN(Description));
        VALIDATE("Source No.", lSenderAddress);
        "Flow Nature" := pDocumentFlow."Flow Nature";
        "Attachment Type" := "Attachment Type"::Mail;
        //MESSAGE(pDocumentFlow."Flow Code" + pOMailItem.Subject);
        "Receive Reference" := GetReceiveAddressMail(pOMailItem);
        IF pDocumentFlow."To Qualify" THEN BEGIN
          IF lDocumentFlowMgt.GetProviderBySenderName("Flow Code", "Source No.", lProviderNo, lQualificationErrorMessage) THEN BEGIN
            VALIDATE("Contact No.", lProviderNo);
            pDocQueue."Status To Qualify" := pDocQueue."Status To Qualify"::"To Qualify";
          END ELSE BEGIN
            //<<IMH06.PC
            IF lDocumentFlowMgt.GetProviderBySubject(COPYSTR(pOMailItem.Subject,1,1024),lProviderNo) THEN BEGIN
              VALIDATE("Contact No.", lProviderNo);
              pDocQueue."Status To Qualify" := pDocQueue."Status To Qualify"::"To Qualify";
            END ELSE BEGIN
            //>>IMH06.PC
              IF lQualificationErrorMessage <> '' THEN BEGIN
                pDocQueue."Status To Qualify" := pDocQueue."Status To Qualify"::"Error Qualification";
                pDocQueue."Description Qualification" := lQualificationErrorMessage;
              END;
            END;
          END;
        END ELSE BEGIN
          IF lDocumentFlowMgt.GetProviderBySenderName("Flow Code", "Source No.", lProviderNo, lQualificationErrorMessage) THEN BEGIN
            VALIDATE("Contact No.", lProviderNo);
          END ELSE BEGIN
            //<<IMH06.PC
            IF lDocumentFlowMgt.GetProviderBySubject(COPYSTR(pOMailItem.Subject,1,1024),lProviderNo) THEN BEGIN
              VALIDATE("Contact No.", lProviderNo);
            END;
            //>>IMH06.PC
          END;
        END;

        IF pDocumentFlow."Attachment Format" <> pDocumentFlow."Attachment Format"::pdf THEN
          INSERT(TRUE);
      END; // WITH

      //gestion de document joint
      IF NOT ISSERVICETIER THEN
        lFileCompletNameBuffer := lAttachmentMgt.ConstFilenameBuffer('.msg')
      ELSE
        lFileCompletNameBuffer := FolderMgt.ConsCompanyTempFileName('msg');

      pOMailItem.SaveAs(lFileCompletNameBuffer, GetMessageFormat('olMSGUnicode'));

      IF ISSERVICETIER THEN BEGIN
        lTempBlob.Blob.IMPORT(lFileCompletNameBuffer);
        lTempBlob.Blob.CREATEINSTREAM(lFileInStream);
      END;

      IF pDocumentFlow."Attachment Format" <> pDocumentFlow."Attachment Format"::pdf THEN
        lDocumentFlowMgt.CreateDocAttachment(lDocAttachment, pDocQueue, lFileCompletNameBuffer, lFileInStream);

      //<<IMH03
      CreateQueueByMailAttch(pDocQueue, TRUE, pDocumentFlow."Attachment Format", lFileCompletNameBuffer);
      //>>IMH03

      IF NOT ISSERVICETIER THEN
        ERASE(lFileCompletNameBuffer)
      ELSE
        FolderMgt.EraseTempFile(lFileCompletNameBuffer);

      pOMailItem.UnRead(FALSE);
      pOMailItem.Save;

      {
      lDocumentFlowMgt.LaunchingDocumentAction(pDocQueue);
      //<<IMH03
      lDocQueue.SETCURRENTKEY("Origin Entry No.");
      lDocQueue.SETRANGE("Origin Entry No.", pDocQueue."Entry No.");
      IF NOT lDocQueue.ISEMPTY THEN BEGIN
        lDocQueue.FINDFIRST;
        REPEAT
          lDocumentFlowMgt.LaunchingDocumentAction(lDocQueue);
        UNTIL lDocQueue.NEXT = 0;
      END;
      //>>IMH03
      }
    END;

    PROCEDURE CreateMailQueueDocByFile@1100281002(pFileToImport@1100281001 : Text[500];pDocFlow@1100281003 : Record 50053;VAR pDocQueue@1100281002 : Record 50054);
    VAR
      lOMailItem@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem";
    BEGIN
      GetMsgFileByPath(pFileToImport, lOMailItem);
      CreateMailQueueDocument(pDocFlow, pDocQueue, lOMailItem);
    END;

    PROCEDURE CreateAttchByMailAttch@1100281006(pDocQueue@1100281000 : Record 50054);
    BEGIN
      //IMH03
      CreateQueueByMailAttch(pDocQueue, FALSE, 0, '');
    END;

    PROCEDURE CreateQueueByMailAttch@1100281011(VAR pDocQueue@1100281000 : Record 50054;pCreateNewDocQueue@1100281009 : Boolean;pFormatDoc@1100281018 : ' ,pdf';pFilePath@1100281019 : Text[1024]);
    VAR
      lOutlookDocMgt@1100281001 : Codeunit 50005;
      lDocAttachmt@1100281002 : Record 50021;
      lRecRef@1100281003 : RecordRef;
      lOMailItem@1100281004 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem";
      lOAttachments@1100281006 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{0006303C-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachments";
      lOAttachment@1100281007 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment";
      lFileCompletNameBuffer@1100281011 : Text[260];
      i@1100281008 : Integer;
      lCount@1100281005 : Integer;
      lTempBlob@1100281012 : Record 99008535;
      lFileInStream@1100281013 : InStream;
      lAttachmentMgt@1100281014 : Codeunit 50002;
      lAttachTreeviewMgt@1100281015 : Codeunit 50001;
      lFolderMgt@1100281016 : Codeunit 50004;
      lDocumentFlowMgt@1100281017 : Codeunit 50006;
      lDocQueue@1100281010 : Record 50054;
      lFileExtension@1100281020 : Text[100];
      lToCreate@1100281021 : Boolean;
      lFileSize@1100281024 : Integer;
    BEGIN
      //IMH03
      //Eclater les documents joint du mail de file document
      IF pFormatDoc <> pFormatDoc::pdf THEN BEGIN
        IF pDocQueue."Attachment Type" <> pDocQueue."Attachment Type"::Mail THEN
          EXIT;
        lDocAttachmt.SETRANGE("Referent Table No.", DATABASE::"Document Queue");
        lDocAttachmt.SETRANGE("Key Integer 1", pDocQueue."Queue Type");
        lDocAttachmt.SETRANGE("Key Integer 2", pDocQueue."Entry No.");
        lDocAttachmt.SETRANGE("Key Code 1", pDocQueue."Flow Code");
        IF NOT lDocAttachmt.FINDFIRST THEN
          EXIT;
        IF lDocAttachmt.Deleted THEN BEGIN
          ERROR(Text001);
        END;

        lAttachmentMgt.GetOriginalRecRef(lDocAttachmt."Referent Table No.",lDocAttachmt."Key Integer 1",
                          lDocAttachmt."Key Integer 2",lDocAttachmt."Key Code 1",lDocAttachmt."Key Code 2",lRecRef);
        pFilePath := lAttachTreeviewMgt.GetPathAndFileName(lDocAttachmt,lRecRef);
      END;
      GetMsgFileByPath(pFilePath, lOMailItem);
      lOAttachments := lOMailItem.Attachments;
      IF ISCLEAR(lOAttachments) THEN
        EXIT;

      //AttachmentMgt.CreateFileNameBuffer_(lPathBuffer,lFileNameBuffer);
      //lPathBuffer += COMPANYNAME + '\';
      // Cr‚ation ‚ventuelle du r‚pertoire
      //FolderMgt.CreateCompletePath(lPathBuffer,TRUE);
      lCount := lOAttachments.Count;
      i := 1;
      IF lCount <> 0 THEN BEGIN
        REPEAT
          lToCreate := TRUE;
          CLEAR(lDocAttachmt);
          lOAttachment := lOAttachments.Item(i);

          //<<IMH09
          //Type message :
          //olByValue(1) : The attachment is a copy of the original file and can be accessed even if the original file is removed.
          //olByReference(4) : This value is no longer supported since Microsoft Outlook 2007.
              //Use olByValue to attach a copy of a file in the file
          //olEmbeddeditem(5) : The attachment is an Outlook message format file (.msg) and is a copy of the original message.
          //olOLE(6) : The attachment is an OLE document.
          IF lOAttachment.Type <> 6 THEN BEGIN
            lFileExtension := lFolderMgt.GetFileExtension(lOAttachment.FileName);
            IF pFormatDoc = pFormatDoc::pdf THEN
              IF UPPERCASE(lFileExtension) <> 'PDF' THEN
                lToCreate := FALSE;
          END ELSE
            lToCreate := FALSE;
          //>>IMH09

          IF lToCreate THEN BEGIN
            IF NOT ISSERVICETIER THEN
              lFileCompletNameBuffer := lAttachmentMgt.ConstFilenameBuffer(lFileExtension)
            ELSE
              lFileCompletNameBuffer := FolderMgt.ConsCompanyTempFileName(lFileExtension);

            lOAttachment.SaveAsFile(lFileCompletNameBuffer);
            lDocAttachmt.Description := COPYSTR(pDocQueue.Description + ' - '+ lOAttachment.FileName,
                                                1, MAXSTRLEN(lDocAttachmt.Description));;

            //<<IMH04.ISAT.EBA
            lDocAttachmt."Description 2" := COPYSTR(lOAttachment.FileName,1, MAXSTRLEN(lDocAttachmt."Description 2"));;
            lFileSize := lAttachmentMgt.GetFileSize(lFileCompletNameBuffer);
            IF lFileSize <> 0 THEN
              lDocAttachmt."File Size" := lFileSize
            ELSE
              lDocAttachmt."File Size" := lOAttachment.Size;
            //>>IMH04.ISAT.EBA

            IF ISSERVICETIER THEN BEGIN
              CLEAR(lTempBlob);
              lTempBlob.Blob.IMPORT(lFileCompletNameBuffer);
              lTempBlob.Blob.CREATEINSTREAM(lFileInStream);

            END;

            //<<IMH03
            //Creation nouveau file document
            IF pCreateNewDocQueue THEN BEGIN
              lDocQueue := pDocQueue;
              lDocQueue."Entry No." := 0;
              lDocQueue.Description := lDocAttachmt.Description;
              IF pFormatDoc <> pFormatDoc::pdf THEN BEGIN
                lDocQueue."Origin Entry No." := pDocQueue."Entry No.";
                lDocQueue."Attachment Type" := lDocQueue."Attachment Type"::" ";
              END;
              lDocQueue.INSERT(TRUE);
            END;
            IF pCreateNewDocQueue THEN
              lDocumentFlowMgt.CreateDocAttachment(lDocAttachmt, lDocQueue, lFileCompletNameBuffer, lFileInStream)
            ELSE
              lDocumentFlowMgt.CreateDocAttachment(lDocAttachmt, pDocQueue, lFileCompletNameBuffer, lFileInStream);
            //>>IMH03

            IF NOT ISSERVICETIER THEN
              ERASE(lFileCompletNameBuffer)
            ELSE
              FolderMgt.EraseTempFile(lFileCompletNameBuffer);
          END;
          i := i + 1;
        UNTIL i = lCount + 1;
        //<<IMH03
        IF pFormatDoc <> pFormatDoc::pdf THEN
          IF NOT pCreateNewDocQueue THEN BEGIN
            pDocQueue."Attachment Type" := pDocQueue."Attachment Type"::" ";
            pDocQueue.MODIFY(FALSE);
          END;
        //>>IMH03
        //ERROR('-');
      END;
    END;

    LOCAL PROCEDURE GetMessageFormat@1100281007(pOutlookFormat@1100281000 : Code[20]) : Integer;
    BEGIN
      CASE pOutlookFormat OF
        //olTXT Value is 0 (0x0)    Text format (.txt)
        //olRTF Value is 1 (0x1)   Rich Text format (.rtf)
        //olTemplate Value is 2 (0x2) Microsoft Office Outlook template (.oft)
        //olMSG  Value is 3 (0x3)  Outlook message format (.msg)
        //olDoc Value is 4 (0x4)  Microsoft Office Word format (.doc)
        //olHTML Value is 5 (0x5) HTML format (.html)
        //olVCard Value is 6 (0x6)  VCard format (.vcf)
        //olVCal Value is 7 (0x7)  VCal format (.vcs)
        //olICal Value is 8 (0x8)  iCal format (.ics)
        //olMSGUnicode Value is 9 (0x9)  Outlook Unicode message format (.msg)
        //olMHTML 10 MIME HTML format (.mht)
        'OLTXT' : EXIT(0);
        'OLRTF' : EXIT(1);
        'OLTEMPLATE' : EXIT(2);
        'OLMSG' : EXIT(3);
        'OLDOC' : EXIT(4);
        'OLHTML' : EXIT(5);
        'OLVCARD' : EXIT(6);
        'OLVCAL' : EXIT(7);
        'OLICAL' : EXIT(8);
        'OLMSGUNICODE' : EXIT(9);
        'OLMHTML' : EXIT(10);
      END;
    END;

    PROCEDURE CheckMailItem@1100281008();
    BEGIN
      CASE TypeToCheck OF
        TypeToCheck::Mail : OMailItemToCheck := OItemsToCheck.GetFirst;
        TypeToCheck::Report : OReportItemToCheck := OItemsToCheck.GetFirst;
        TypeToCheck::Meeting : OMeetingItemToCheck := OItemsToCheck.GetFirst;
      END;
    END;

    PROCEDURE SetCheckMailItem@1100281009(VAR pOItems@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063052-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Items";VAR pOMailItem@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem";VAR pOReportItem@1100281003 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061035-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.ReportItem";VAR pOMeetingItemToCheck@1100281004 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061036-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MeetingItem";pTypeToCheck@1100281002 : 'Mail,Report');
    BEGIN
      OItemsToCheck := pOItems;
      OMailItemToCheck := pOMailItem;
      OReportItemToCheck := pOReportItem;
      OMeetingItemToCheck := pOMeetingItemToCheck;
      TypeToCheck := pTypeToCheck;
    END;

    PROCEDURE CheckSenderAddress@1100281010(pFlowCode@1100281002 : Code[10];pAddress@1100281000 : Text[80]) : Boolean;
    VAR
      lDocFlowUndesirableAddress@1100281001 : Record 50165;
    BEGIN
      pAddress := UPPERCASE(pAddress);

      lDocFlowUndesirableAddress.SETCURRENTKEY("Flow Code", "Undesirable Address");
      lDocFlowUndesirableAddress.SETRANGE("Flow Code", pFlowCode);
      lDocFlowUndesirableAddress.SETRANGE("Undesirable Address", pAddress);

      EXIT(lDocFlowUndesirableAddress.ISEMPTY);
    END;

    PROCEDURE SaveMailToTextFile@1100281014(pMailFilePath@1100281000 : Text[1024];VAR pNewOMailItem@1100281003 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem");
    VAR
      lOMailItem@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem";
      lOAttachments@1100281007 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{0006303C-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachments";
      lOAttachment@1100281006 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment";
      lTempPath@1100281002 : Text[1024];
      lMailName@1100281004 : Text[1024];
      lFileName@1100281005 : Text[1024];
      lCount@1100281008 : Integer;
      i@1100281009 : Integer;
      lTempText@1000000000 : Text[1024];
    BEGIN
      //IMH08
      IF UPPERCASE(FolderMgt.GetFileExtension(pMailFilePath)) <> 'MSG' THEN
        EXIT;

      lTempPath := FolderMgt.CreateCompanyTmpFolder;// + '\';

      //Save le corps du mail dans un fichier text
      lMailName := FolderMgt.GetBaseName(pMailFilePath);
      lFileName := lTempPath + '\' + lMailName + '.txt';

      //<<IMH10.zw
      //GetMsgFileByPath(pMailFilePath, lOMailItem);
      IF ISCLEAR(OAppLocal) THEN BEGIN
        CREATE(OAppLocal, TRUE, TRUE);
      END;

      ONameSpace := OAppLocal.GetNamespace('MAPI');
      lTempText := ONameSpace.GetDefaultFolder(6).Name;
      lOMailItem := ONameSpace.OpenSharedItem(pMailFilePath);
      //>>IMH10.zw

      lOMailItem.SaveAs(lFileName, 0);
      pNewOMailItem.Attachments.Add(lFileName,1,1,FolderMgt.GetBaseName(lFileName));

      lOAttachments := lOMailItem.Attachments;
      IF ISCLEAR(lOAttachments) THEN
        EXIT;

      lCount := lOAttachments.Count;
      i := 1;
      IF lCount <> 0 THEN BEGIN
        REPEAT
          lOAttachment := lOAttachments.Item(i);

          lFileName := lTempPath + '\' + lOAttachment.FileName;
          lOAttachment.SaveAsFile(lFileName);
          IF UPPERCASE(FolderMgt.GetFileExtension(lFileName)) = 'MSG' THEN
            SaveMailToTextFile(lFileName, pNewOMailItem)
          ELSE
            pNewOMailItem.Attachments.Add(lFileName,1,1,FolderMgt.GetBaseName(lFileName));

          i := i + 1;
        UNTIL i = lCount + 1;
      END;
      FolderMgt.EraseTempFolderLocal(lTempPath);
    END;

    EVENT OApp@1100281000::ItemSend@61442(Item@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OApp@1100281000::NewMail@61443();
    BEGIN
    END;

    EVENT OApp@1100281000::Reminder@61444(Item@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT OApp@1100281000::OptionsPagesAdd@61445(Pages@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063080-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.PropertyPages");
    BEGIN
    END;

    EVENT OApp@1100281000::Startup@61446();
    BEGIN
    END;

    EVENT OApp@1100281000::Quit@61447();
    BEGIN
    END;

    EVENT OApp@1100281000::AdvancedSearchComplete@64106(SearchObject@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{0006300B-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Search");
    BEGIN
    END;

    EVENT OApp@1100281000::AdvancedSearchStopped@64107(SearchObject@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{0006300B-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Search");
    BEGIN
    END;

    EVENT OApp@1100281000::MAPILogonComplete@64144();
    BEGIN
    END;

    EVENT OApp@1100281000::NewMailEx@64181(EntryIDCollection@1100281000 : Text[1024]);
    BEGIN
    END;

    EVENT OApp@1100281000::ItemLoad@64423(Item@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT OApp@1100281000::BeforeFolderSharingDialog@64513(FolderToShare@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063006-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MAPIFolder";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT ONameSpace@1100281001::OptionsPagesAdd@61445(Pages@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063080-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.PropertyPages";Folder@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063006-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MAPIFolder");
    BEGIN
    END;

    EVENT ONameSpace@1100281001::AutoDiscoverComplete@64557();
    BEGIN
    END;

    EVENT OItems@1100281003::ItemAdd@61441(Item@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT OItems@1100281003::ItemChange@61442(Item@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT OItems@1100281003::ItemRemove@61443();
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::Open@61443(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::CustomAction@61446(Action@1100281002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Response@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::CustomPropertyChange@61448(Name@1100281000 : Text[1024]);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::Forward@62568(Forward@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::Close@61444(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::PropertyChange@61449(Name@1100281000 : Text[1024]);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::Read@61441();
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::Reply@62566(Response@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::ReplyAll@62567(Response@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::Send@61445(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::Write@61442(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::BeforeCheckNames@61450(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::AttachmentAdd@61451(Attachment@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment");
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::AttachmentRead@61452(Attachment@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment");
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::BeforeAttachmentSave@61453(Attachment@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::BeforeDelete@64117(Item@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::AttachmentRemove@64430(Attachment@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment");
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::BeforeAttachmentAdd@64432(Attachment@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::BeforeAttachmentPreview@64431(Attachment@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::BeforeAttachmentRead@64427(Attachment@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::BeforeAttachmentWriteToTempFil@64434(Attachment@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::Unload@64429();
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::BeforeAutoSave@64514(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::BeforeRead@64652();
    BEGIN
    END;

    EVENT OMailItemToCheck@1100281007::AfterWrite@64653();
    BEGIN
    END;

    EVENT OItemsToCheck@1100281009::ItemAdd@61441(Item@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT OItemsToCheck@1100281009::ItemChange@61442(Item@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT OItemsToCheck@1100281009::ItemRemove@61443();
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::Open@61443(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::CustomAction@61446(Action@1100281002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Response@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::CustomPropertyChange@61448(Name@1100281000 : Text[1024]);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::Forward@62568(Forward@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::Close@61444(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::PropertyChange@61449(Name@1100281000 : Text[1024]);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::Read@61441();
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::Reply@62566(Response@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::ReplyAll@62567(Response@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::Send@61445(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::Write@61442(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::BeforeCheckNames@61450(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::AttachmentAdd@61451(Attachment@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment");
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::AttachmentRead@61452(Attachment@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment");
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::BeforeAttachmentSave@61453(Attachment@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::BeforeDelete@64117(Item@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::AttachmentRemove@64430(Attachment@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment");
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::BeforeAttachmentAdd@64432(Attachment@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::BeforeAttachmentPreview@64431(Attachment@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::BeforeAttachmentRead@64427(Attachment@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::BeforeAttachmentWriteToTempFil@64434(Attachment@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::Unload@64429();
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::BeforeAutoSave@64514(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::BeforeRead@64652();
    BEGIN
    END;

    EVENT OReportItemToCheck@1100281010::AfterWrite@64653();
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::Open@61443(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::CustomAction@61446(Action@1100281002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Response@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::CustomPropertyChange@61448(Name@1100281000 : Text[1024]);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::Forward@62568(Forward@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::Close@61444(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::PropertyChange@61449(Name@1100281000 : Text[1024]);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::Read@61441();
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::Reply@62566(Response@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::ReplyAll@62567(Response@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::Send@61445(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::Write@61442(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::BeforeCheckNames@61450(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::AttachmentAdd@61451(Attachment@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment");
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::AttachmentRead@61452(Attachment@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment");
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::BeforeAttachmentSave@61453(Attachment@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::BeforeDelete@64117(Item@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::AttachmentRemove@64430(Attachment@1100281000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment");
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::BeforeAttachmentAdd@64432(Attachment@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::BeforeAttachmentPreview@64431(Attachment@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::BeforeAttachmentRead@64427(Attachment@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::BeforeAttachmentWriteToTempFile@64434(Attachment@1100281001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063007-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Attachment";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::Unload@64429();
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::BeforeAutoSave@64514(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::BeforeRead@64652();
    BEGIN
    END;

    EVENT OMeetingItemToCheck@1100281014::AfterWrite@64653();
    BEGIN
    END;

    EVENT OAppLocal@1000000001::ItemSend@61442(Item@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT OAppLocal@1000000001::NewMail@61443();
    BEGIN
    END;

    EVENT OAppLocal@1000000001::Reminder@61444(Item@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT OAppLocal@1000000001::OptionsPagesAdd@61445(Pages@1000000000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063080-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.PropertyPages");
    BEGIN
    END;

    EVENT OAppLocal@1000000001::Startup@61446();
    BEGIN
    END;

    EVENT OAppLocal@1000000001::Quit@61447();
    BEGIN
    END;

    EVENT OAppLocal@1000000001::AdvancedSearchComplete@64106(SearchObject@1000000000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{0006300B-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Search");
    BEGIN
    END;

    EVENT OAppLocal@1000000001::AdvancedSearchStopped@64107(SearchObject@1000000000 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{0006300B-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.Search");
    BEGIN
    END;

    EVENT OAppLocal@1000000001::MAPILogonComplete@64144();
    BEGIN
    END;

    EVENT OAppLocal@1000000001::NewMailEx@64181(EntryIDCollection@1000000000 : Text[1024]);
    BEGIN
    END;

    EVENT OAppLocal@1000000001::ItemLoad@64423(Item@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT OAppLocal@1000000001::BeforeFolderSharingDialog@64513(FolderToShare@1000000001 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00063006-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MAPIFolder";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    BEGIN
    {
      /** @r IMH10 @d 12/07/13 @a ISAT.ZW @v IMH6.01.351 @s JUILLET @h 3872 @c ProblŠme de certains profils avec logon MAPI */
      /** @r IMH09 @d 26/03/13 @a ISAT.ZW @v IMH6.01.340 @s NEP IMH 4 @h 4431 @c Traitement mail PJ dans le corps de mail */
      /** @r IMH08 @d 10/05/12 @a ISAT.ZW @v IMH6.01.004 @s Attach. Management @h mantis 3443
          @c Ajout fonction SaveMailBody */
      /** @r IMH07 @d 17/01/12 @a ISAT.ZW @v IMH6.01.004 @s Attach. Management @c Purge BL Outlook */
      /** @r IMH06 @d 23/11/11 @a ISAT.PC @v IMH6.01.004 @s Attach. Management
          @c Recup du nø contact en fct du tel rectrouve ds sujet mail */
      /** @r IMH05 @d 07/11/11 @a ISAT.ST @v IMH6.01.004 @s Attach. Management @c Ajout message si pas d'initialisation */
      /** @r IMH04 @d 21/09/11 @a ISAT.EBA @v IMH6.01.003 @s Gestion de la taille des documents */
      /** @r IMH03 @d 16/03/11 @a ISAT.ZW @v IMH6.01.004 @s Attach. Management @c Extraire document joint en traitement flux */
      /** @r IMH02 @d 12/01/11 @a ISAT.ST @v IMH6.01.004 @s Attach. Management @c Gestion connection outlook */
      /** @r IMH01 @d 27/09/10 @a ISAT.ZW @v IMH6.01.004 @s Attach. Management @c Creation */
    }
    END.
  }
}