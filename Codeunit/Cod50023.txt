OBJECT Codeunit 50023 Provider Scoring Handler
{
  OBJECT-PROPERTIES
  {
    Date=01/02/11;
    Time=16:41:35;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    TableNo=50000;
    SingleInstance=Yes;
    OnRun=VAR
            lText000@1100281000 : TextConst 'ENU=%1 - %2 : Task Process Handler started;FRA=%1 - %2 : D‚marrage du handler de processus … tƒches';
          BEGIN
            Provider := Rec;
            ProviderSetup.GET;

            RunTimer;
            MESSAGE(Text000,WORKDATE,TIME);
          END;

  }
  CODE
  {
    VAR
      Provider@1100281002 : Record 50000;
      ProviderSetup@1100281005 : Record 50011;
      Timer@1100281001 : Automation "{3B311C81-140E-11D5-8B18-00D0590B4EC5} 1.0:{3B311C92-140E-11D5-8B18-00D0590B4EC5}:'Navision Timer 1.0'.Timer" WITHEVENTS;
      IsRunning@1100281000 : Boolean;
      Text000@1100281004 : TextConst 'ENU=%1 - %2 : start provider scoring.;FRA=%1 - %2 : d‚marrage scoring prestataire.';
      Text001@1100281003 : TextConst 'ENU=%1 - %2 : restart provider scoring. (%3);FRA=%1 - %2 : red‚marrage scoring prestataire. (%3)';

    LOCAL PROCEDURE ExecuteScoringProvider@1100481000();
    BEGIN
      COMMIT;
      CODEUNIT.RUN(CODEUNIT::"Provider Scoring Management",Provider);
      COMMIT;
    END;

    LOCAL PROCEDURE RunTimer@1100281003();
    BEGIN
      IF ISCLEAR(Timer) THEN
        CREATE(Timer);

      Timer.Interval(ProviderSetup."Scoring NAS Timer" * 1000);
      Timer.Enabled(TRUE);
    END;

    PROCEDURE StopNAS@1100481001();
    VAR
      lText000@1100481000 : TextConst 'ENU=Provider scoring stopped.;FRA=Arrˆt du scoring prestataire.';
    BEGIN
      Timer.Enabled(FALSE);
      MESSAGE(lText000);
      CLEARALL;
    END;

    EVENT Timer@1100281001::Timer@1(Milliseconds@1100281000 : Integer);
    BEGIN
      IF NOT IsRunning THEN BEGIN
        IsRunning := TRUE;
        SELECTLATESTVERSION;
        ExecuteScoringProvider;
        IsRunning := FALSE;
      END;
    END;

    EVENT Timer@1100281001::TimerError@2(ErrorString@1100281000 : Text[1024]);
    BEGIN
      MESSAGE(Text001,WORKDATE,TIME,ErrorString);
      IsRunning := FALSE;
      RunTimer;
    END;

    BEGIN
    {
      /** @r IMH02 @d 01/02/11 @a ISAT.ZW @v IMH6.01.105 @s Scoring @c Fonctions de gestion scoring */
      /** @r IMH01 @d 06/12/10 @a ISAT.PC @v IMH6.01.105 @s Scoring @c Creation Objet
          @c Pour la gestion de la mise … jour du score prestataire */
    }
    END.
  }
}