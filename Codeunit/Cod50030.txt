OBJECT Codeunit 50030 Proc. Service Req. Funct.
{
  OBJECT-PROPERTIES
  {
    Date=03/11/11;
    Time=09:20:18;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ProcFunction2@1100281000 : Record 50085;
      Funct001_Name@1100281001 : TextConst 'ENU=Tray line activities exists;FRA=Activit‚s corbeilles en cours';
      Funct001_Assist@1100281002 : TextConst 'ENU=Team code filter (unmandatory);FRA=Filtre code corbeille (non obligatoire)';
      AssistMode@1100281003 : Boolean;
      CurrRec@1100281004 : Record 50066;
      ProcCommFct@1100281005 : Codeunit 50049;

    LOCAL PROCEDURE GetTableNo@1100281000() : Integer;
    BEGIN
      EXIT(DATABASE::Service);
    END;

    PROCEDURE LoadFunctionList@1100281001();
    VAR
      lProcFunction@1100281000 : Record 50085;
    BEGIN
      // Source Table, Type, nø de la fonction, Description, ParamŠtre o/n
      WITH lProcFunction DO BEGIN
      //  InitFunction(GetTableNo, "Function Type"::"Test Function", -1, 'Test user', TRUE);
        // Plage 1 … 99 : commun DPS
        InitFunction(GetTableNo, "Function Type"::TestFunction,  1, Funct001_Name , TRUE);
        // Plage 100 … 199 : selon la table origine
      END;
      // Plage 200 : fonction communes
      ProcCommFct.LoadTestFunctionList(GetTableNo); //IMH02.ST
    END;

    PROCEDURE AssistFunction@1100281009(pFunctionNo@1100281000 : Integer);
    VAR
      lRecRef@1100281001 : RecordRef;
    BEGIN
      AssistMode := TRUE;
      TestFunction(pFunctionNo, '', lRecRef);
      AssistMode := FALSE;
    END;

    PROCEDURE TestFunction@1100281003(pFunctionNo@1100281000 : Integer;pParameters@1100281001 : Text[1024];pCurrRecRef@1100281002 : RecordRef) : Boolean;
    BEGIN
      IF NOT AssistMode THEN
        pCurrRecRef.SETTABLE(CurrRec);
      CASE pFunctionNo OF
      //  -1 : EXIT(SameUser(pParameters));
        1 : EXIT(TrayLineExist(TRUE, pParameters));

        201 : IF NOT AssistMode THEN
                EXIT(AndFunction(pParameters, pCurrRecRef)); //IMH04.ST
      END;
      IF AssistMode THEN
        ProcCommFct.AssistTestFunction(GetTableNo, pFunctionNo, pParameters)
      ELSE
        EXIT(ProcCommFct.TestFunction(GetTableNo, pFunctionNo, pParameters)); //IMH02.ST
    END;

    PROCEDURE CheckParameters@1100281010(pFunctionNo@1100281000 : Integer;pParameter@1100281002 : Text[1024];VAR pErrorText@1100281001 : Text[250]) : Boolean;
    BEGIN
      //IMH04.zw
    END;

    LOCAL PROCEDURE "------------------------------"@1100281004();
    BEGIN
    END;

    LOCAL PROCEDURE SameUser@1100281005(pParameters@1100281000 : Text[1024]) : Boolean;
    BEGIN
      IF AssistMode THEN BEGIN
        EXIT;
      END;
      EXIT(USERID = pParameters);
    END;

    LOCAL PROCEDURE TrayLineExist@1100281006(pUnclosed@1100281002 : Boolean;pParameters@1100281000 : Text[1024]) : Boolean;
    VAR
      lTrayLine@1100281001 : Record 50048;
    BEGIN
      IF AssistMode THEN BEGIN
        MESSAGE(Funct001_Assist);
        EXIT;
      END;
      lTrayLine.SETCURRENTKEY("Service No.");
      lTrayLine.SETRANGE("Service No.", CurrRec."Service No.");
      IF pUnclosed THEN
        lTrayLine.SETRANGE(Closed, FALSE);
      IF pParameters <> '' THEN
        lTrayLine.SETFILTER("Team Code", pParameters);

      EXIT(NOT lTrayLine.ISEMPTY);
    END;

    PROCEDURE AndFunction@1100281015(pParameters@1100281000 : Text[1024];pCurrRecRef@1100281001 : RecordRef) : Boolean;
    VAR
      lFunctionNo@1100281002 : Integer;
      lFunctionParam@1100281003 : Text[1024];
    BEGIN
      //IMH04.ST
      IF pParameters  = '' THEN
        EXIT(TRUE);
      REPEAT
        ProcCommFct.RetrieveFctParam(pParameters, lFunctionNo, lFunctionParam);
        IF NOT TestFunction(lFunctionNo, lFunctionParam, pCurrRecRef) THEN
          EXIT(FALSE);
      UNTIL pParameters = '';
      EXIT(TRUE);
    END;

    BEGIN
    {
      /** @r IMH04 @d 04/07/11 @a ISAT.ST @v IMH6.01.102 @s Gestion des statuts @c Ajout AndFunction */
      /** @r IMH03 @d 05/05/11 @a ISAT.ZW @v IMH6.01.102 @s Gestion des statuts
          @c Ajout fonction CheckParameters */
      /** @r IMH02 @d 17/03/11 @a ISAT.ST @v IMH6.01.102 @s Gestion des statuts
          @c Appel fonctions communes */
      /** @r IMH01 @d 27/12/10 @a ISAT.ST @v IMH6.01.102 @s Gestion des statuts @c Cr‚ation objet */
    }
    END.
  }
}