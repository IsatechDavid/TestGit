OBJECT Codeunit 50055 Proc. Quality Act. Funct.
{
  OBJECT-PROPERTIES
  {
    Date=14/10/13;
    Time=16:21:33;
    Modified=Yes;
    Version List=IMH6.01.08;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ProcCommFct@1100281000 : Codeunit 50049;
      AssistMode@1100281003 : Boolean;
      CurrRec@1100281004 : Record 50000;
      Funct001_Name@1100281001 : TextConst 'ENU=Send mail to manager;FRA=Envoi mail au responsable';
      Funct002_Name@1100281002 : TextConst 'ENU=Send mail to area responsible;FRA=Envoi mail au responsable de zone';
      Funct003_Name@1100281005 : TextConst 'ENU=Send mail to assistant;FRA=Envoi mail … l''assistante';
      Funct004_Name@1100281006 : TextConst 'ENU=Send mail to facilitator;FRA=Envoi mail … au charg‚ de pilotage r‚seau';
      ProviderSetup@1100281007 : Record 50011;
      ProviderSetupOK@1100281008 : Boolean;

    LOCAL PROCEDURE GetTableNo@1100281000() : Integer;
    BEGIN
      EXIT(DATABASE::Provider);
    END;

    PROCEDURE LoadFunctionList@1100281001();
    VAR
      lProcFunction@1100281000 : Record 50085;
    BEGIN
      // Source Table, Type, nø de la fonction, Description, ParamŠtre o/n
      WITH lProcFunction DO BEGIN
        InitFunction(GetTableNo, "Function Type"::ActionFunction, 1, Funct001_Name , TRUE);
        InitFunction(GetTableNo, "Function Type"::ActionFunction, 2, Funct002_Name , TRUE);
        InitFunction(GetTableNo, "Function Type"::ActionFunction, 3, Funct003_Name , TRUE);
        InitFunction(GetTableNo, "Function Type"::ActionFunction, 4, Funct004_Name , TRUE);
      END;
      // Plage 200 : fonction communes
      ProcCommFct.LoadActFunctionList(GetTableNo); //IMH02.ST
    END;

    PROCEDURE AssistFunction@1100281009(pFunctionNo@1100281000 : Integer);
    VAR
      lRecRef@1100281001 : RecordRef;
    BEGIN
      AssistMode := TRUE;
      RunFunction(pFunctionNo, '', lRecRef);
      AssistMode := FALSE;
    END;

    PROCEDURE RunFunction@1100281003(pFunctionNo@1100281000 : Integer;pParameters@1100281001 : Text[1024];VAR pCurrRecRef@1100281002 : RecordRef) rValue : Boolean;
    BEGIN
      IF NOT AssistMode THEN
        pCurrRecRef.SETTABLE(CurrRec);
      CASE pFunctionNo OF
        1 : rValue := SendMailToManager;
        2 : rValue := SendMailToCoordinator;
        3 : rValue := SendMailToAssistant;
        4 : rValue := SendMailToFacilitator;
        ELSE BEGIN
          rValue := ProcCommFct.RunFunction(GetTableNo, pFunctionNo, pParameters); //IMH02.ST
        END;
      END;
      IF NOT AssistMode THEN
        pCurrRecRef.GETTABLE(CurrRec);
    END;

    LOCAL PROCEDURE "------------------------------"@1100281004();
    BEGIN
    END;

    PROCEDURE SendMailToManager@1100281002() rValue : Boolean;
    BEGIN
      // Envoi de mail au responsable plateau

      rValue := FALSE;

      GetProviderSetup;

      rValue := TRUE;
    END;

    PROCEDURE SendMailToCoordinator@1100281005() rValue : Boolean;
    BEGIN
      // Envoi de mail au coordonnateur

      rValue := FALSE;

      rValue := TRUE;
    END;

    PROCEDURE SendMailToAssistant@1100281006() rValue : Boolean;
    BEGIN
      // Envoi de mail … l'assistant

      rValue := FALSE;

      rValue := TRUE;
    END;

    PROCEDURE SendMailToFacilitator@1100281007() rValue : Boolean;
    BEGIN
      // Envoi de mail … l'animateur

      rValue := FALSE;

      rValue := TRUE;
    END;

    PROCEDURE GetProviderSetup@1100281010();
    BEGIN
      IF ProviderSetupOK THEN BEGIN
        EXIT;
      END;

      ProviderSetupOK := TRUE;
      ProviderSetup.GET;
    END;

    BEGIN
    {
      /** @r IMH03 @d 14/10/13 @a ISAT.ST @v IMH6.01.353 @s Reorganisation region IMH @h 4760 @c Renommage CR / AR */
      /** @r IMH02 @d 04/07/11 @a ISAT.ST @v IMH6.01.102 @s Gestion des statuts
          @c Appel fonctions communes */
      /** @r IMH01 @d 12/01/11 @a ISAT.ST @v IMH6.01.102 @s Gestion des statuts
          @c Cr‚ation objet
          @c Pr‚voir la gestion de la s‚curit‚ TableData */
    }
    END.
  }
}