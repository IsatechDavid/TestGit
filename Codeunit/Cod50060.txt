OBJECT Codeunit 50060 Service Search Managment
{
  OBJECT-PROPERTIES
  {
    Date=12/06/14;
    Time=16:14:05;
    Modified=Yes;
    Version List=IMH6.01,IMH6.01.P010;
  }
  PROPERTIES
  {
    OnRun=VAR
            lSearchForm@1100281000 : Form 50047;
          BEGIN
            lSearchForm.RUN;
          END;

  }
  CODE
  {
    VAR
      Service@1100281000 : Record 50066;
      Text001@1100281001 : TextConst 'ENU=Result limited to %1 records.;FRA=R‚sultats limit‚s … %1 enregistrements.';
      ServiceHeader@1100281002 : Record 5900;
      ServiceInterv@1100281003 : Record 50075;
      Text002@1100281004 : TextConst 'ENU=Please enter at least one of the following search fields : %1,%2, %3;FRA=Veuillez saisir au moins un des champs suivants : %1, %2, %3';
      Text003@1100281005 : TextConst 'ENU=Please enter at least one of the following search fields : %1,%2, %3, %4, %5;FRA=Veuillez saisir au moins un des champs suivants : %1, %2, %3, %4, %5';
      Text004@1100281006 : TextConst 'ENU=Please enter at least one of the following search fields : %1,%2, %3, %4, %5;FRA=Veuillez saisir au moins un des champs suivants : %1, %2, %3, %4, %5';
      Text005@1100281007 : TextConst 'ENU=Please enter at least one of the following search fields : %1,%2, %3, %4, %5, %6;FRA=Veuillez saisir au moins un des champs suivants : %1, %2, %3, %4, %5, %6';
      ServiceSetup@1100281008 : Record 5911;
      SetupRead@1100281009 : Boolean;

    LOCAL PROCEDURE GetSetup@1100281018();
    BEGIN
      //IMH04.ST
      IF SetupRead THEN EXIT;
      ServiceSetup.GET;
      SetupRead := TRUE;
    END;

    PROCEDURE RunSearchService@1100281013();
    VAR
      lSearchForm@1100281000 : Form 50047;
    BEGIN
      lSearchForm.InitType(0);
      lSearchForm.RUN;
    END;

    PROCEDURE RunSearchServiceHeader@1100281014();
    VAR
      lSearchForm@1100281000 : Form 50047;
    BEGIN
      lSearchForm.InitType(1);
      lSearchForm.RUN;
    END;

    PROCEDURE RunSearchServiceIntervLine@1100281015();
    VAR
      lSearchForm@1100281000 : Form 50047;
    BEGIN
      lSearchForm.InitType(2);
      lSearchForm.RUN;
    END;

    PROCEDURE CheckSearchServiceFields@1100281009(VAR pServiceFilters@1100281000 : Record 50066;pShowDialog@1100281001 : Boolean) : Boolean;
    BEGIN
      IF (pServiceFilters.GETFILTER("Service No.") <> '') OR
         (pServiceFilters.GETFILTER("Contact No.") <> '') OR
         (pServiceFilters.GETFILTER("Member No.") <> '') OR //IMH03
         (pServiceFilters.GETFILTER("Contact Name") <> '') OR
         (pServiceFilters.GETFILTER("Reference No.") <> '') OR
         (pServiceFilters.GETFILTER("IMA Reference No.") <> '') //IMH08
      THEN
        EXIT(TRUE);

      IF pShowDialog THEN BEGIN
        ERROR(
          STRSUBSTNO(
            //<<IMH08
            //Text004,pServiceFilters.FIELDCAPTION("Service No."),
            Text005,pServiceFilters.FIELDCAPTION("Service No."),
            //>>IMH08
            pServiceFilters.FIELDCAPTION("Contact No."),
            pServiceFilters.FIELDCAPTION("Member No."),
            pServiceFilters.FIELDCAPTION("Contact Name"),
            pServiceFilters.FIELDCAPTION("Reference No."),
            pServiceFilters.FIELDCAPTION("IMA Reference No.")));  //IMH08
        EXIT(FALSE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE CheckSearchServiceHeaderFields@1100281011(VAR pServiceHeaderFilters@1100281001 : Record 5900;pShowDialog@1100281000 : Boolean) : Boolean;
    BEGIN
      IF (pServiceHeaderFilters.GETFILTER("Service No.") <> '')OR
         (pServiceHeaderFilters.GETFILTER("No.") <> '') OR
         (pServiceHeaderFilters.GETFILTER("Contact No.") <> '') OR
         (pServiceHeaderFilters.GETFILTER("Contact Name") <> '') OR
         (pServiceHeaderFilters.GETFILTER("Corporate No.") <> '')
      THEN
        EXIT(TRUE);

      IF pShowDialog THEN BEGIN
        ERROR(
          STRSUBSTNO(
            Text004,pServiceHeaderFilters.FIELDCAPTION("Service No."),
            pServiceHeaderFilters.FIELDCAPTION("No."),
            pServiceHeaderFilters.FIELDCAPTION("Contact No."),
            pServiceHeaderFilters.FIELDCAPTION("Contact Name"),
            pServiceHeaderFilters.GETFILTER("Corporate No.")));
        EXIT(FALSE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE CheckSearchServiceIntervFields@1100281012(VAR pServiceIntervFilters@1100281001 : Record 50075;pShowDialog@1100281000 : Boolean) : Boolean;
    BEGIN
      IF (pServiceIntervFilters.GETFILTER("Service No.") <> '') OR
        (pServiceIntervFilters.GETFILTER("Service Header No.") <> '') OR
        (pServiceIntervFilters.GETFILTER("Contact No.") <> '') OR
        (pServiceIntervFilters.GETFILTER("Contact Name") <> '') OR
        (pServiceIntervFilters.GETFILTER("Provider No.") <> '') OR
        //<<IMH07.PC
        (pServiceIntervFilters.GETFILTER("Provider Name") <> '')
        //>>IMH07.PC
      THEN
        EXIT(TRUE);

      IF pShowDialog THEN BEGIN
        ERROR(
          STRSUBSTNO(
            Text004,pServiceIntervFilters.FIELDCAPTION("Service No."),
            pServiceIntervFilters.FIELDCAPTION("Service Header No."),
            pServiceIntervFilters.FIELDCAPTION("Contact No."),
            pServiceIntervFilters.FIELDCAPTION("Contact Name"),
            pServiceIntervFilters.FIELDCAPTION("Provider No."),
            //<<IMH07.PC
            (pServiceIntervFilters.GETFILTER("Provider Name"))));
            //>>IMH07.PC
        EXIT(FALSE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE SearchService@1100281002(VAR pServiceFilters@1100281002 : Record 50066;VAR pServiceNo@1100281000 : Code[20]) : Boolean;
    VAR
      lSearchForm@1100281001 : Form 50047;
    BEGIN
      lSearchForm.SetServiceFilter(pServiceFilters);

      lSearchForm.LOOKUPMODE(TRUE);
      lSearchForm.SetRun(TRUE);
      IF lSearchForm.RUNMODAL = ACTION::LookupOK THEN BEGIN
        pServiceNo := lSearchForm.GetService;
        EXIT(TRUE);
      END ELSE
        IF lSearchForm.ClosedFromCreate(pServiceNo) THEN
          EXIT(TRUE);
    END;

    PROCEDURE SearchServiceHeader@1100281000(VAR pServiceHeaderFilters@1100281002 : Record 5900;VAR pServiceHeaderNo@1100281000 : Code[20]) : Boolean;
    VAR
      lSearchForm@1100281001 : Form 50047;
    BEGIN
      lSearchForm.SetServiceHeaderFilter(pServiceHeaderFilters);

      lSearchForm.LOOKUPMODE(TRUE);
      lSearchForm.SetRun(TRUE);
      IF lSearchForm.RUNMODAL = ACTION::LookupOK THEN BEGIN
        pServiceHeaderNo := lSearchForm.GetServiceHeader;
        EXIT(TRUE);
      END ELSE
        IF lSearchForm.ClosedFromCreateServiceHeader(pServiceHeaderNo) THEN
          EXIT(TRUE);
    END;

    PROCEDURE SearchServiceInterv@1100281005(VAR pServiceIntervFilters@1100281002 : Record 50075;VAR pServiceHeaderNo@1100281000 : Code[20];VAR pServiceIntervLineNo@1100281003 : Integer) : Boolean;
    VAR
      lSearchForm@1100281001 : Form 50047;
    BEGIN
      lSearchForm.SetInterventionFilter(pServiceIntervFilters);

      lSearchForm.LOOKUPMODE(TRUE);
      lSearchForm.SetRun(TRUE);
      IF lSearchForm.RUNMODAL = ACTION::LookupOK THEN BEGIN
        lSearchForm.GetServiceInterv(pServiceHeaderNo, pServiceIntervLineNo);
        EXIT(TRUE);
      END ELSE
        IF lSearchForm.ClosedFromCreateServiceInterv(pServiceHeaderNo,pServiceIntervLineNo) THEN
          EXIT(TRUE);
    END;

    PROCEDURE SearchServiceDoc@1100281010(VAR pServiceIntervFilters@1100281002 : Record 50075;VAR pServiceType@1100281007 : 'Service,Service Header,Intervention';VAR pServiceNo@1100281003 : Code[20];VAR pServiceHeaderNo@1100281001 : Code[20];VAR pServiceIntervLineNo@1100281000 : Integer) : Boolean;
    VAR
      lSearchForm@1100281004 : Form 50047;
      lClosedFromCreate@1100281006 : Boolean;
    BEGIN
      //Recherche document service, par d‚faut intervention.
      lSearchForm.SetInterventionFilter(pServiceIntervFilters);

      lSearchForm.LOOKUPMODE(TRUE);
      lSearchForm.SetRun(TRUE);
      IF lSearchForm.RUNMODAL = ACTION::LookupOK THEN BEGIN
        pServiceType := lSearchForm.GetSearchType;
        CASE pServiceType OF
          pServiceType::Service : pServiceNo := lSearchForm.GetService;
          pServiceType::"Service Header" : pServiceHeaderNo := lSearchForm.GetServiceHeader;
          pServiceType::Intervention : lSearchForm.GetServiceInterv(pServiceHeaderNo, pServiceIntervLineNo);
        END;
        EXIT(TRUE);
      END
      ELSE BEGIN
        pServiceType := lSearchForm.GetSearchType;
        CASE pServiceType OF
          pServiceType::Service :
            lClosedFromCreate := lSearchForm.ClosedFromCreate(pServiceNo);
          pServiceType::"Service Header" :
            lClosedFromCreate := lSearchForm.ClosedFromCreateServiceHeader(pServiceHeaderNo);
          pServiceType::Intervention :
            lClosedFromCreate := lSearchForm.ClosedFromCreateServiceInterv(pServiceHeaderNo,pServiceIntervLineNo);
        END;
        EXIT(lClosedFromCreate);
      END;
    END;

    PROCEDURE CreateServiceList@1100281001(VAR pServiceFilters@1100281000 : Record 50066;VAR pResultServiceList@1100281007 : Record 50066;VAR pResultInfo@1100281001 : Text[1024];VAR pCount@1100281003 : Integer);
    VAR
      lCount@1100281002 : Integer;
    BEGIN
      LoadService(pServiceFilters,pResultServiceList,pResultInfo,pCount);
    END;

    PROCEDURE CreateServiceHeaderList@1100281003(VAR pServiceHeaderFilters@1100281000 : Record 5900;VAR pResultServiceHeaderList@1100281007 : Record 5900;VAR pResultInfo@1100281001 : Text[1024];VAR pCount@1100281003 : Integer);
    VAR
      lCount@1100281002 : Integer;
    BEGIN
      pServiceHeaderFilters.SETRANGE("Document Type",pServiceHeaderFilters."Document Type"::Invoice);
      LoadServiceHeader(pServiceHeaderFilters,pResultServiceHeaderList,pResultInfo,pCount);
    END;

    PROCEDURE CreateServiceIntervList@1100281006(VAR pServiceIntervFilters@1100281000 : Record 50075;VAR pResultServiceIntervList@1100281007 : Record 50075;VAR pResultInfo@1100281001 : Text[1024];VAR pCount@1100281003 : Integer);
    VAR
      lCount@1100281002 : Integer;
    BEGIN
      LoadServiceInterv(pServiceIntervFilters,pResultServiceIntervList,pResultInfo,pCount)
    END;

    LOCAL PROCEDURE LoadService@1100281017(VAR pService@1100281002 : Record 50066;VAR pResultService@1100281000 : Record 50066;VAR pResultText@1100281004 : Text[1024];VAR pCount@1100281005 : Integer) ReturnValue : Boolean;
    BEGIN
      IF pService.GETFILTER("Contact Name") <> ''  THEN
        pService.SETFILTER("Contact Name",'@'+ GetContainFilter(pService.GETFILTER("Contact Name")));
      pCount := 0;
      // Recherche meilleure cl‚
      CASE TRUE OF
        pService.GETFILTER("Service No.") <> '' : pService.SETCURRENTKEY("Service No.");
      //<<IMH05.ST
      //  (pService.GETFILTER("Corporate No.") <> '') OR (pService.GETFILTER("Contact No.") <> '') :
      //    pService.SETCURRENTKEY("Contact No.","Corporate No.");
      //  pService.GETFILTER("Contact No.") <> '' :
      //    pService.SETCURRENTKEY("Contact Name","Corporate No.");
        pService.GETFILTER("Member No.") <> '' : pService.SETCURRENTKEY("Member No.");
        pService.GETFILTER("Contact No.") <> '' : BEGIN
          IF pService.GETFILTER("Event Date") <> '' THEN
            pService.SETCURRENTKEY("Contact No.","Event Date")
          ELSE
            pService.SETCURRENTKEY("Contact No.", "Corporate No.");
        END;
        pService.GETFILTER("Reference No.") <> '' : pService.SETCURRENTKEY("Reference No.");
        pService.GETFILTER("Contact Name") <> '' :  pService.SETCURRENTKEY("Contact Name");
        pService.GETFILTER("Corporate No.") <> '' : pService.SETCURRENTKEY("Corporate No.");
        pService.GETFILTER("IMA Reference No.") <> '' : pService.SETCURRENTKEY("IMA Reference No.");  //IMH08
      //>>IMH05.ST
      END;
      IF pService.ISEMPTY THEN
        EXIT;
      pService.FINDSET(FALSE);
      GetSetup; //IMH04.ST
      REPEAT
        pResultService := pService;
        pResultService.INSERT;
        pCount += 1;
        IF ServiceSetup."Service Search Limit" > 0 THEN
          IF pCount >= ServiceSetup."Service Search Limit" THEN BEGIN
            pResultText := STRSUBSTNO(Text001, pCount);
            EXIT;
          END;
      UNTIL (pService.NEXT = 0);
    END;

    LOCAL PROCEDURE LoadServiceHeader@1100281004(VAR pServiceHeader@1100281002 : Record 5900;VAR pResultServiceHeader@1100281000 : Record 5900;VAR pResultText@1100281004 : Text[1024];VAR pCount@1100281003 : Integer) ReturnValue : Boolean;
    BEGIN
      IF pServiceHeader.GETFILTER("Contact Name") <> ''  THEN
        pServiceHeader.SETFILTER("Contact Name",'@'+ pServiceHeader.GETFILTER("Contact Name") +'*');

      pCount := 0;
      // Recherche meilleure cl‚
      pServiceHeader.SETRANGE("Document Type",pServiceHeader."Document Type"::Invoice);
      CASE TRUE OF
        pServiceHeader.GETFILTER("No.") <> '' : pServiceHeader.SETCURRENTKEY("Document Type","No.");
        pServiceHeader.GETFILTER("Service No.") <> '' : pServiceHeader.SETCURRENTKEY("Service No.");
      //<<IMH05.ST
      //  (pServiceHeader.GETFILTER("Contact No.") <> '') OR (pServiceHeader.GETFILTER("Corporate No.") <> '') :
        pServiceHeader.GETFILTER("Contact No.") <> '' :
      //>>IMH05.ST
           pServiceHeader.SETCURRENTKEY("Contact No.","Corporate No.");
        pServiceHeader.GETFILTER("Contact Name") <> '' :
           pServiceHeader.SETCURRENTKEY("Contact Name","Corporate No.");
      //<<IMH05.ST
        pServiceHeader.GETFILTER("Corporate No.") <> '' :
          pServiceHeader.SETCURRENTKEY("Corporate No.");
        pServiceHeader.GETFILTER("Service Order Type") <> '' :
          pServiceHeader.SETCURRENTKEY("Service Order Type");
      //>>IMH05.ST

      END; // CASE

      IF pServiceHeader.ISEMPTY THEN
        EXIT;
      pServiceHeader.FINDSET(FALSE);
      GetSetup; //IMH04.ST
      REPEAT
        pResultServiceHeader := pServiceHeader;
        pResultServiceHeader.INSERT;
        pCount += 1;
      //<<IMH04.ST
        IF ServiceSetup."Service Search Limit" > 0 THEN
          IF pCount >= ServiceSetup."Service Search Limit" THEN BEGIN
            pResultText := STRSUBSTNO(Text001, pCount);
            EXIT;
          END;
      //>>IMH04.ST
      UNTIL (pServiceHeader.NEXT = 0);
    END;

    LOCAL PROCEDURE LoadServiceInterv@1100281007(VAR pServiceInterv@1100281002 : Record 50075;VAR pResultServiceInterv@1100281000 : Record 50075;VAR pResultText@1100281004 : Text[1024];VAR pCount@1100281003 : Integer) ReturnValue : Boolean;
    BEGIN
      IF pServiceInterv.GETFILTER("Contact Name") <> ''  THEN
        pServiceInterv.SETFILTER("Contact Name",'@'+ pServiceInterv.GETFILTER("Contact Name") +'*');
      //<<IMH07.PC
      IF pServiceInterv.GETFILTER("Provider Name") <> ''  THEN
        pServiceInterv.SETFILTER("Provider Name",'@'+ pServiceInterv.GETFILTER("Provider Name") +'*');
      //>>IMH07.PC

      // Recherche meilleure cl‚
      pCount := 0;
      CASE TRUE OF
        pServiceInterv.GETFILTER("Service Header No.") <> '' : pServiceInterv.SETCURRENTKEY("Service Header No.","Line No.");
      //<<IMH05.ST
        pServiceInterv.GETFILTER("Service No.") <> '' : pServiceInterv.SETCURRENTKEY("Service No.");
      //  (pServiceInterv.GETFILTER("Corporate No.") <> '') OR (pServiceInterv.GETFILTER("Contact No.") <> '') :
        pServiceInterv.GETFILTER("Contact No.") <> '' :
      //>>IMH05.ST
          pServiceInterv.SETCURRENTKEY("Contact No.","Corporate No.");
        pServiceInterv.GETFILTER("Provider No.") <> '' : pServiceInterv.SETCURRENTKEY("Provider No.");
      //<<IMH05.ST
      //  pServiceInterv.GETFILTER("Contact No.") <> '' : pServiceInterv.SETCURRENTKEY("Contact Name","Corporate No.");
        pServiceInterv.GETFILTER("Contact Name") <> '' : pServiceInterv.SETCURRENTKEY("Contact Name");
      //>>IMH05.ST
        //<<IMH07.PC
        pServiceInterv.GETFILTER("Provider Name") <> '' : pServiceInterv.SETCURRENTKEY("Provider Name");
        //>>IMH07.PC
      END;

      IF pServiceInterv.ISEMPTY THEN
        EXIT;
      pServiceInterv.FINDSET(FALSE);
      GetSetup; //IMH04.ST
      REPEAT
        pResultServiceInterv := pServiceInterv;
        pResultServiceInterv.INSERT;
        pCount += 1;
      //<<IMH04.ST
        IF ServiceSetup."Service Search Limit" > 0 THEN
          IF pCount >= ServiceSetup."Service Search Limit" THEN BEGIN
            pResultText := STRSUBSTNO(Text001, pCount);
            EXIT;
          END;
      //>>IMH04.ST
      UNTIL (pServiceInterv.NEXT = 0);
    END;

    PROCEDURE CreateService@1100281008(VAR pService@1100281000 : Record 50066;pOpenCard@1100481000 : Boolean) : Boolean;
    VAR
      lService@1100281001 : Record 50066;
    BEGIN
      //Ouvre le wizzard de cr‚ation de service avec les champs de recherche pr‚renseign‚s
      IF pOpenCard THEN BEGIN
        lService := pService;
        lService.INSERT;
        IF ISSERVICETIER THEN
          PAGE.RUNMODAL(PAGE::"Service Card",lService)
        ELSE
          FORM.RUNMODAL(FORM::"Service Card",lService);
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE GetContainFilter@1100281016(pText@1100281000 : Text[80]) : Text[80];
    BEGIN
      EXIT(STRSUBSTNO('*%1*', pText));
    END;

    PROCEDURE SearchService2@1100281019(VAR pServiceFilters@1100281002 : Record 50066);
    VAR
      lSearchForm@1100281001 : Form 50047;
    BEGIN
      //IMH06.ST Recherche d'un service en non modal
      lSearchForm.SetServiceFilter(pServiceFilters);
      lSearchForm.LOOKUPMODE(TRUE);
      lSearchForm.SetRun(TRUE);
      lSearchForm.RUN;
    END;

    PROCEDURE SearchServiceHeader2@1100281023(VAR pServiceHeaderFilters@1100281002 : Record 5900);
    VAR
      lSearchForm@1100281001 : Form 50047;
    BEGIN
      //IMH06.ST Recherche d'une ligne produit en non modal
      lSearchForm.SetServiceHeaderFilter(pServiceHeaderFilters);
      lSearchForm.LOOKUPMODE(TRUE);
      lSearchForm.SetRun(TRUE);
      lSearchForm.RUN;
    END;

    PROCEDURE SearchServiceInterv2@1100281022(VAR pServiceIntervFilters@1100281002 : Record 50075);
    VAR
      lSearchForm@1100281001 : Form 50047;
    BEGIN
      //IMH06.ST Recherche d'une intervention en non modal
      lSearchForm.SetInterventionFilter(pServiceIntervFilters);
      lSearchForm.LOOKUPMODE(TRUE);
      lSearchForm.SetRun(TRUE);
      lSearchForm.RUN;
    END;

    BEGIN
    {
      /** @r IMH08 @d 23/05/14 @a ISAT.ZW @v IMH6.01.P010 @s Projet PMU
          @c Ajouter gestion de IMA Reference No. */
      /** @r IMH07 @d 06/09/12 @a ISAT.PC @v IMH6.01.210 @s FOU
          @c ajout pour le FOU */
      /** @r IMH06 @d 02/05/12 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @h 2933
          @c Ajout des fonctions SearchService2, SearchServiceHeader2, SearchServiceInterv2 pour gestion non modale */
      /** @r IMH05 @d 14/11/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c Am‚lioration s‚lection cl‚ sur les recherches en fonction des cl‚s existantes */
      /** @r IMH04 @d 10/03/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Limitation de la recherche de service */
      /** @r IMH03 @d 27/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout Member No. en filtre de recherche*/
      /** @r IMH02 @d 19/10/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Fonction SearchServiceDoc*/
      /** @r IMH01 @d 08/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Cr‚ation*/
    }
    END.
  }
}