OBJECT Codeunit 50064 Service Mgt
{
  OBJECT-PROPERTIES
  {
    Date=25/08/11;
    Time=09:21:38;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE CreateServiceByContact@1100281000(VAR pService@1100281000 : Record 50066;pContactNo@1100281001 : Code[20]);
    BEGIN
      //IMH02 isat.ZW
      IF pContactNo = '' THEN
        EXIT;

      pService.INIT;
      pService."Service No." := '';
      pService.VALIDATE("Contact No.", pContactNo);
      pService.INSERT(TRUE);
    END;

    PROCEDURE SelectServiceOrderType@1100281009(pService@1100281005 : Record 50066;VAR pServOrderType@1100281000 : Code[10]) : Boolean;
    VAR
      lCorpFaultReason@1100281001 : Record 50065;
      lServiceOrderType@1100281008 : Record 5903;
      lProductCatalog@1100281002 : Record 50060;
      lProductCatalogTemp@1100281003 : TEMPORARY Record 50060;
      lProductCatalogList@1100281004 : Form 50062;
      lTempFormula@1100281007 : TEMPORARY Record 50057;
      lAddLine@1100281006 : Boolean;
    BEGIN
      pService.TESTFIELD("Corporate No.");
      lProductCatalog.SETCURRENTKEY("Corporate No.");
      lProductCatalog.FILTERGROUP(2);
      lProductCatalog.SETRANGE("Corporate No.", pService."Corporate No.");
      lProductCatalog.SETRANGE(Active, TRUE);
      IF pService."Confidence Prior" THEN
        lProductCatalog.SETRANGE("Confidence Prior Forbidden", FALSE);
      { //IMH03.ST d‚sactiv‚
      IF pService."Service Cause" = '' THEN BEGIN
        // on n'affiche que les types sans causes
        lProductCatalog.CALCFIELDS("Fault Reason Exists");
        lProductCatalog.SETRANGE("Fault Reason Exists", FALSE);
        IF NOT lProductCatalog.ISEMPTY THEN BEGIN
          lProductCatalog.FINDFIRST;
          REPEAT
            lProductCatalogTemp := lProductCatalog;
            lProductCatalogTemp.INSERT;
          UNTIL lProductCatalog.NEXT = 0;
        END;
      END
      ELSE BEGIN
      }
        // on propose que ceux avec cette cause
        lProductCatalog.FINDSET(FALSE);
        REPEAT
          lCorpFaultReason.SETRANGE("Corporate No.", lProductCatalog."Corporate No.");
          lCorpFaultReason.SETRANGE("Service Order Type", lProductCatalog."Service Order Type");
          lCorpFaultReason.SETRANGE("Code Type", lCorpFaultReason."Code Type"::FaultReason); //IMH06.ST
          lCorpFaultReason.SETRANGE(Code, pService."Service Cause");
          //<<IMH05
          lProductCatalog.CALCFIELDS(Claim);
          IF NOT (lProductCatalog.Claim) THEN
          //>>IMH05
            IF lCorpFaultReason.FINDFIRST THEN BEGIN
              IF (lCorpFaultReason."Exclude Contract Form Filter" = '') OR (pService."Contract Form Code" = '') THEN
                lAddLine := TRUE
              ELSE BEGIN
                // Controle que le contrat n'est pas exclu
                lTempFormula."Contract Form Code" := pService."Contract Form Code";
                lTempFormula.INSERT(FALSE);
                lTempFormula.SETFILTER("Contract Form Code", lCorpFaultReason."Exclude Contract Form Filter");
                lAddLine := lTempFormula.ISEMPTY;
                lTempFormula.RESET;
                lTempFormula.DELETEALL;
              END;
              IF lAddLine THEN BEGIN
                lProductCatalogTemp := lProductCatalog;
                lProductCatalogTemp.INSERT;
              END;
            END;
        UNTIL lProductCatalog.NEXT=0;
      //END;  IMH03.ST d‚sactiv‚
      //<<IMH04
      lProductCatalogTemp.SETFILTER("Corporate Region Filter",pService."Corporate Region Code");
      lProductCatalogTemp.SETFILTER("Campaign No. Filter",pService."Campaign No.");
      //>>IMH04
      IF FORM.RUNMODAL(0, lProductCatalogTemp) = ACTION::LookupOK THEN BEGIN
        pServOrderType := lProductCatalogTemp."Service Order Type";
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE ServOrderTypeAllowedForCause@1100281001(pCorpNo@1100281004 : Code[20];pContractForm@1100281005 : Code[20];pNewCause@1100281001 : Code[10];pServOrderType@1100281000 : Code[10]) : Boolean;
    VAR
      lCorpFaultReason@1100281002 : Record 50065;
      lServOrderType@1100281003 : Record 5903;
      lTempFormula@1100281006 : TEMPORARY Record 50057;
    BEGIN
      IF NOT lServOrderType.GET(pServOrderType) THEN
        EXIT(TRUE);
      IF NOT lCorpFaultReason.GET(pCorpNo, pServOrderType, lCorpFaultReason."Code Type"::FaultReason, pNewCause) THEN
        EXIT(FALSE);

      IF (lCorpFaultReason."Exclude Contract Form Filter" = '') OR (pContractForm = '') THEN
        EXIT(TRUE);

      // Controle que le contrat n'est pas exclu
      lTempFormula."Contract Form Code" := pContractForm;
      lTempFormula.INSERT(FALSE);
      lTempFormula.SETFILTER("Contract Form Code", lCorpFaultReason."Exclude Contract Form Filter");
      EXIT(lTempFormula.ISEMPTY);
    END;

    BEGIN
    {
      /** @r IMH07 @d 25/08/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c Ajout ServOrderTypeAllowedForCause pour controle du changement sur service */
      /** @r IMH06 @d 07/04/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c Ajout code type sur ProductReason */
      /** @r IMH05 @d 21/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Filtre champ r‚clamation
          @c Affiche type produit sans cause (gestion justif et t‚l‚chiffrage) */
      /** @r IMH04 @d 31/01/2011 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout lien code r‚gion */
      /** @r IMH03 @d 27/01/2011 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c Modification fonction SelectServiceOrderType : cause obligatoire */
      /** @r IMH02 @d 05/11/2010 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Fonction createServiceByContact */
      /** @r IMH01 @d 21/10/2010 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c Cr‚ation objet pour g‚rer les services */
    }
    END.
  }
}