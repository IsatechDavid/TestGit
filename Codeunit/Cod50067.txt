OBJECT Codeunit 50067 Scoring Export Mgt
{
  OBJECT-PROPERTIES
  {
    Date=15/10/13;
    Time=16:10:40;
    Modified=Yes;
    Version List=IMH6.01.08;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            LaunchExport('365737R',FALSE);
          END;

  }
  CODE
  {
    VAR
      XlApp@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024500-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Application";
      XlApp2@1100281034 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024500-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Application";
      XlWrkBk@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";
      Text000@1100281004 : TextConst 'ENU=Excel not found.;FRA=Programme Excel non trouv‚.;NLB=Kan Excel niet vinden.';
      Text001@1100281015 : TextConst 'ENU=%1 - %2;FRA=%1 - %2';
      Text005@1100281003 : TextConst 'ENU=Creating Excel worksheet...\\;FRA=Cr‚ation de la feuille Excel...\\;NLB=Maken Excel-werkblad...\\';
      Text006@1100281005 : TextConst 'ENU=%1%3%4%3Page %2;FRA=%1%3%4%3Page %2;NLB=%1%3%4%3Pagina %2';
      Text013@1100281014 : TextConst 'ENU=&B;FRA=&G;NLB=&B';
      Text014@1100281013 : TextConst 'ENU=&D;FRA=&D;NLB=&D';
      Text015@1100281012 : TextConst 'ENU=&P;FRA=&P;NLB=&P';
      Text016@1100281011 : TextConst 'ENU=A1;FRA=A1;NLB=A1';
      Text017@1100281010 : TextConst 'ENU=SUMIF;FRA=SOMME.SI;NLB=SUMIF';
      Text018@1100281009 : TextConst 'ENU=#N/A;FRA=#N/A;NLB=#N/A';
      Text019@1100281008 : TextConst 'ENU=GLAcc;FRA=Compte;NLB=GLAcc';
      Text020@1100281007 : TextConst 'ENU=Period;FRA=P‚riode;NLB=Periode';
      Text021@1100281006 : TextConst 'ENU=Budget;FRA=Budget;NLB=Budget';
      ProviderScoringMgt@1100281016 : Codeunit 50024;
      TextYear@1100281017 : TextConst 'ENU=Y;FRA=A';
      TextMonth@1100281000 : TextConst 'ENU=M;FRA=M';
      Text030@1100281021 : TextConst 'ENU=Activity Summary;FRA=SynthŠse de l''activit‚';
      Text031@1100281022 : TextConst 'ENU=Mission Summary;FRA=Ventilation des missions';
      Text032@1100281024 : TextConst 'ENU=Intervention Average Time;FRA=D‚lai moyen d''intervention';
      Text033@1100281023 : TextConst 'ENU=Intervention Average Cost;FRA=Co–t moyen d''intervention';
      Text034@1100281025 : TextConst 'ENU=Time;FRA=Respect des d‚lais';
      Text035@1100281026 : TextConst 'ENU=Global note;FRA=Moyennes mensuelles';
      Text036@1100281027 : TextConst 'ENU=Graphic representation;FRA=Repr‚sentation graphique';
      LastRowNb@1100281018 : Integer;
      Windows@1100281019 : Dialog;
      Text037@1100281020 : TextConst 'ENU=Intervention Average Time/Cost;FRA=D‚lai moyen/co–t moyen d''intervention';
      HeaderRowNb@1100281028 : Integer;
      ProviderNo@1100281029 : Code[20];
      ProviderMainSpecDesc@1100281030 : Text[80];
      Text038@1100281031 : TextConst 'ENU=%1 note provider;FRA=Note prestataire %1';
      AppFont@1100281032 : Text[250];
      AppFontSize@1100281033 : Integer;
      TitleColor@1000000000 : Integer;
      TextFormatPercentage@1000000001 : TextConst 'ENU=0.0%;FRA=0%';
      Text040@1100281038 : TextConst 'FRA="%1 - %2 - %3 - %4 %5 "';
      Text041@1100281037 : TextConst 'FRA=Groupement d''Int‚rˆt Economique au capital de %1 euros';
      Text042@1100281036 : TextConst 'FRA=%1-Siret:%2-T‚l:%3-Fax:%4-Email:%5';
      Text043@1100281039 : TextConst 'FRA=dpr@imha.fr';
      CompanyInfo@1100281035 : Record 79;

    PROCEDURE LaunchExport@1100281005(pProviderCode@1100281001 : Code[20];pPrintScoring@1100281000 : Boolean);
    VAR
      lXlWrkSht@1100281008 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";
      lTimeNoteGlobal@1100281003 : Decimal;
      lTimeNoteByMonthArray@1100281002 : ARRAY [12] OF Decimal;
      lNbCorporate@1100281006 : Integer;
      lNbServOrderType@1100281005 : Integer;
      lNbSpec@1100281004 : Integer;
      lGlobalNote@1100281007 : Decimal;
    BEGIN
      ProviderNo := pProviderCode;
      ProviderMainSpecDesc := '';
      TitleColor := 13434879;
      CreateBook;
      IF GUIALLOWED THEN BEGIN
        Windows.OPEN(
          Text005 +
          '#1######################\');
        Windows.UPDATE(1,Text034);
      END;

      CreateTimeDateSheet(pProviderCode, lTimeNoteGlobal, lTimeNoteByMonthArray);
      IF GUIALLOWED THEN
        Windows.UPDATE(1,Text037);
      CreateAvrgTimeCustDateSheet(pProviderCode, lNbSpec);
      IF GUIALLOWED THEN
        Windows.UPDATE(1,Text031);
      CreateMissionSummaryDataSheet(pProviderCode, lNbCorporate, lNbServOrderType);
      IF GUIALLOWED THEN
        Windows.UPDATE(1,Text030);
      CreateActivitySummaryDataSheet(pProviderCode);
      IF GUIALLOWED THEN
        Windows.UPDATE(1,Text035);
      lGlobalNote := CreateGlobalDateSheet(pProviderCode, lTimeNoteGlobal, lTimeNoteByMonthArray);
      IF GUIALLOWED THEN
        Windows.UPDATE(1,Text036);

      CreateGraphicSheet(lXlWrkSht, lNbCorporate, lNbServOrderType, lNbSpec, lGlobalNote);
      IF GUIALLOWED THEN
        Windows.CLOSE;
      GiveUserControl;

      IF pPrintScoring THEN
        lXlWrkSht.PrintOut;
    END;

    PROCEDURE CreateActivitySummaryDataSheet@1100281010(pProviderCode@1100281000 : Code[20]);
    VAR
      lXlWrkSht@1100281028 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";
      lProvider@1100281027 : Record 50000;
      lTerritory@1100281026 : Record 286;
      lProviderSpecialization@1100281031 : Record 50006;
      lSpecialization@1100281032 : Record 50005;
      lUserSutup@1100281033 : Record 91;
      lSalespersonPurchaser@1100281035 : Record 13;
      lProviderQualification@1100281036 : Record 50008;
      lProviderAgreement@1100281037 : Record 50012;
      lCust@1100281042 : Record 18;
      lMonoSpecInProcIntervArray@1100281001 : ARRAY [13] OF Integer;
      lMonoSpecClosedIntervArray@1100281003 : ARRAY [13] OF Integer;
      lMonoSpecClosedInvcAmtArray@1100281002 : ARRAY [13] OF Decimal;
      lInProgresMultiSpecIntervArray@1100281004 : ARRAY [13] OF Integer;
      lClosedMultiSpecIntervArray@1100281048 : ARRAY [13] OF Integer;
      lCancelIntervArray@1100281005 : ARRAY [13] OF Integer;
      lText001@1100281007 : TextConst 'ENU=Intervention Status;FRA=Statut de l''intervention';
      lText002@1100281008 : TextConst 'ENU=In Process;FRA=En cours';
      lText003@1100281009 : TextConst 'ENU=Close;FRA=Clos';
      lText004@1100281010 : TextConst 'ENU=Total;FRA=Total';
      lText005@1100281011 : TextConst 'ENU=Invoiced Amount;FRA=Montant imput‚';
      lText006@1100281012 : TextConst 'ENU=In progress multi Specialization Intervention;FRA=Interventions multi corps de m‚tiers en cours';
      lText019@1100281050 : TextConst 'ENU=Closed multi Specialization Intervention;FRA=Interventions multi corps de m‚tiers clos';
      lText007@1100281013 : TextConst 'ENU=Intervention Total(except cancel);FRA=Total interventions(hors annul‚es)';
      lText008@1100281014 : TextConst 'ENU=Cancelled Intervention;FRA=Interventions annul‚es';
      lMonoSpecInProcIntervTotal@1100281020 : Integer;
      lMonoSpecClosedIntervTotal@1100281019 : Integer;
      lMonoSpecClosedInvcAmtTotal@1100281018 : Decimal;
      lInProMultiSpecIntervTotal@1100281017 : Integer;
      lClosedMultiSpecIntervTotal@1100281049 : Integer;
      lCancelIntervTotal@1100281016 : Integer;
      lTotal@1100281015 : Integer;
      lTotal1@1100281024 : Integer;
      i@1100281006 : Integer;
      lText009@1100281021 : TextConst 'ENU=Total Year;FRA=Total ann‚e';
      lText010@1100281022 : TextConst 'ENU=Total Y-1;FRA=Total A-1';
      lText011@1100281023 : TextConst 'ENU=Evol.;FRA=Evol.';
      j@1100281025 : Integer;
      lText012@1100281029 : TextConst 'ENU=Territory : %1;FRA=Zone : %1';
      lText013@1100281030 : TextConst 'ENU=Main specialization :;FRA=Sp‚cialit‚ principale :';
      lText014@1100281034 : TextConst 'ENU=Area Responsible : %1;FRA=Responsable : %1';
      lText015@1100281038 : TextConst 'ENU=Excluded corporates :;FRA=Grands-comptes exclus :';
      lText016@1100281039 : TextConst 'ENU=Qualifications :;FRA=Qualifications :';
      lRowNo@1100281040 : Integer;
      lText100@1100281041 : Text[100];
      lFirstLine@1100281043 : Boolean;
      lText017@1100281044 : TextConst 'ENU=Situation to;FRA=Situation au';
      lText018@1100281045 : TextConst 'ENU=Invoiced Turnover;FRA=CA Factur‚';
      lInvoicedAmountArray@1100281046 : ARRAY [13] OF Decimal;
      lInvoicedAmountTotal@1100281047 : Decimal;
      l12MonthTitle@1100281051 : ARRAY [12] OF Text[30];
      lText@1100281052 : Text[30];
    BEGIN
      //IMH01 isat.zw
      //Creation feuille de donn‚es synthŠse de l'activit‚ du prestataire
      ProviderScoringMgt.GetMonoSpecInProgressIntervNb(pProviderCode, WORKDATE, lMonoSpecInProcIntervArray);
      ProviderScoringMgt.GetMonoSpecClosedIntervNb
        (pProviderCode, WORKDATE, lMonoSpecClosedIntervArray, lMonoSpecClosedInvcAmtArray);
      ProviderScoringMgt.GetCancelledlIntervNb(pProviderCode, WORKDATE, lCancelIntervArray);
      ProviderScoringMgt.GetInProgressMultiSpecIntervNb(pProviderCode, WORKDATE, lInProgresMultiSpecIntervArray);
      ProviderScoringMgt.GetClosedMultiSpecIntervNb(pProviderCode, WORKDATE, lClosedMultiSpecIntervArray);
      ProviderScoringMgt.GetInvoicedAmount(pProviderCode, WORKDATE, lInvoicedAmountArray);

      CreateSheet(lXlWrkSht, Text030,Text030,'','');

      lProvider.GET(pProviderCode);
      //Nom Prestataire
      lXlWrkSht.Range(xlColID(1)+xlRowID(1)).Value := STRSUBSTNO(Text001, pProviderCode, lProvider.Name);
      //r‚gion
      IF NOT lTerritory.GET(lProvider."IMH Territory Code") THEN
        CLEAR(lTerritory);
      lXlWrkSht.Range(xlColID(11)+xlRowID(1)).Value := STRSUBSTNO(lText012, lTerritory.Name);
      lXlWrkSht.Range(xlColID(20)+xlRowID(1)).Value := FORMAT(lText017);
      lXlWrkSht.Range(xlColID(20)+xlRowID(2)).Value := FORMAT(WORKDATE);
      //Specialite pricipale
      CLEAR(lSpecialization);
      lProviderSpecialization.SETRANGE("Provider No.", pProviderCode);
      lProviderSpecialization.SETRANGE("Main Specialization", TRUE);
      IF lProviderSpecialization.FINDFIRST THEN
        IF lSpecialization.GET(lProviderSpecialization."Specialization Code") THEN;
      lXlWrkSht.Range(xlColID(1)+xlRowID(2)).Value := FORMAT(lText013);
      lXlWrkSht.Range(xlColID(2)+xlRowID(2)).Value := lSpecialization.Description;
      //CR
      CLEAR(lSalespersonPurchaser);
      //IF lUserSutup.GET(lProvider."Regional Coordinator") THEN
      IF lSalespersonPurchaser.GET(lProvider."Salesp. Reg. Coordinator Code") THEN;
      lXlWrkSht.Range(xlColID(11)+xlRowID(2)).Value := STRSUBSTNO(lText014, lSalespersonPurchaser.Name);
      //Liste des grands comptes exclus
      lProviderAgreement.SETRANGE("Provider No.", pProviderCode);
      lProviderAgreement.SETRANGE("Exclusion Type", lProviderAgreement."Exclusion Type"::Total);
      lRowNo := 3;
      lFirstLine := TRUE;
      lXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo)).Value := FORMAT(lText015);
      IF lProviderAgreement.FINDFIRST THEN BEGIN
        REPEAT
          IF lCust.GET(lProviderAgreement."Corporate No.") THEN BEGIN
            IF STRLEN(lText100) + STRLEN(lCust.Name) + 1 <= 100 THEN BEGIN
              IF lFirstLine THEN BEGIN
                lText100 := lCust.Name;
                lFirstLine := FALSE;
              END ELSE
                lText100 += '/' + lCust.Name;
            END ELSE BEGIN
              lXlWrkSht.Range(xlColID(2)+xlRowID(lRowNo)).Value := FORMAT(lText100);
              lText100 := lCust.Name;
              lRowNo += 1;
            END;
          END;
        UNTIL lProviderAgreement.NEXT = 0;
      END;
      lXlWrkSht.Range(xlColID(2)+xlRowID(lRowNo)).Value := FORMAT(lText100);
      lRowNo += 1;

      //Liste des agr‚ments
      lFirstLine := TRUE;
      lText100 := '';
      lProviderQualification.SETRANGE("Provider No.", pProviderCode);
      lXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo)).Value := FORMAT(lText016);
      IF lProviderQualification.FINDFIRST THEN BEGIN
        REPEAT
          IF STRLEN(lText100) + STRLEN(lProviderQualification."Qualification Description") + 1 <= 100 THEN BEGIN
            IF lFirstLine THEN BEGIN
              lText100 := lProviderQualification."Qualification Description";
              lFirstLine := FALSE;
            END ELSE
              lText100 += '/' + lProviderQualification."Qualification Description";
          END ELSE BEGIN
            lXlWrkSht.Range(xlColID(2)+xlRowID(lRowNo)).Value := FORMAT(lText100);
            lText100 := lProviderQualification."Qualification Description";
            lRowNo += 1;
          END;
        UNTIL lProviderQualification.NEXT = 0;
      END;
      lXlWrkSht.Range(xlColID(2)+xlRowID(lRowNo)).Value := FORMAT(lText100);
      lRowNo += 2;

      lXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo)).Value := FORMAT(Text030);
      lXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo+1)).Value := FORMAT(lText001);
      lXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo+2)).Value := FORMAT(lText002);
      lXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo+3)).Value := FORMAT(lText003);
      lXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo+4)).Value := FORMAT(lText004);
      lXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo+5)).Value := FORMAT(lText005);

      lXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo+6)).Value := FORMAT(lText018);
      lXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo+7)).Value := FORMAT(lText006);
      lXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo+8)).Value := FORMAT(lText019);
      lXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo+9)).Value := FORMAT(lText007);
      lXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo+10)).Value := FORMAT(lText008);

      //Donn‚es 12 mois
      Get12MonthTitle(WORKDATE, l12MonthTitle);
      FOR i := 1 TO 13  DO BEGIN
        j := i + 1;
        IF i = 13 THEN BEGIN
          j += 2;
          lXlWrkSht.Range(xlColID(j)+xlRowID(lRowNo+1)).Value := FORMAT(lText010);
        END ELSE BEGIN
          lMonoSpecInProcIntervTotal += lMonoSpecInProcIntervArray[i];
          lMonoSpecClosedIntervTotal += lMonoSpecClosedIntervArray[i];
          lMonoSpecClosedInvcAmtTotal += lMonoSpecClosedInvcAmtArray[i];
          lInvoicedAmountTotal += lInvoicedAmountArray[i];
          lInProMultiSpecIntervTotal += lInProgresMultiSpecIntervArray[i];
          lClosedMultiSpecIntervTotal += lClosedMultiSpecIntervArray[i];
          lCancelIntervTotal += lCancelIntervArray[i];
          //lXlWrkSht.Range(xlColID(j)+xlRowID(lRowNo+1)).Value := FORMAT(i);
          lXlWrkSht.Range(xlColID(j)+xlRowID(lRowNo+1)).Value := FORMAT(l12MonthTitle[i]);
          lText := FORMAT(l12MonthTitle[i]);
        END;

        lXlWrkSht.Range(xlColID(j)+xlRowID(lRowNo+2)).Value := FormatInt(lMonoSpecInProcIntervArray[i]);
        lXlWrkSht.Range(xlColID(j)+xlRowID(lRowNo+3)).Value := FormatInt(lMonoSpecClosedIntervArray[i]);
        lTotal := lMonoSpecInProcIntervArray[i] + lMonoSpecClosedIntervArray[i];
        lXlWrkSht.Range(xlColID(j)+xlRowID(lRowNo+4)).Value := FormatInt(lTotal);
        lXlWrkSht.Range(xlColID(j)+xlRowID(lRowNo+5)).Value := FormatEuro(lMonoSpecClosedInvcAmtArray[i]);
        lXlWrkSht.Range(xlColID(j)+xlRowID(lRowNo+5)).NumberFormat := '0';

        lXlWrkSht.Range(xlColID(j)+xlRowID(lRowNo+6)).Value := FormatEuro(lInvoicedAmountArray[i]);
        lXlWrkSht.Range(xlColID(j)+xlRowID(lRowNo+6)).NumberFormat := '0';

        lXlWrkSht.Range(xlColID(j)+xlRowID(lRowNo+7)).Value := FormatInt(lInProgresMultiSpecIntervArray[i]);
        lXlWrkSht.Range(xlColID(j)+xlRowID(lRowNo+8)).Value := FormatInt(lClosedMultiSpecIntervArray[i]);

        lTotal += lInProgresMultiSpecIntervArray[i] + lClosedMultiSpecIntervArray[i];
        lXlWrkSht.Range(xlColID(j)+xlRowID(lRowNo+9)).Value := FormatInt(lTotal);
        lXlWrkSht.Range(xlColID(j)+xlRowID(lRowNo+10)).Value := FormatInt(lCancelIntervArray[i]);
      END;

      //Total Annee
      lXlWrkSht.Range(xlColID(15)+xlRowID(lRowNo+1)).Value := FORMAT(lText009);
      lXlWrkSht.Range(xlColID(15)+xlRowID(lRowNo+2)).Value := FormatInt(lMonoSpecInProcIntervTotal);
      lXlWrkSht.Range(xlColID(15)+xlRowID(lRowNo+3)).Value := FormatInt(lMonoSpecClosedIntervTotal);
      lTotal := lMonoSpecInProcIntervTotal + lMonoSpecClosedIntervTotal;
      lXlWrkSht.Range(xlColID(15)+xlRowID(lRowNo+4)).Value := FormatInt(lTotal);
      lXlWrkSht.Range(xlColID(15)+xlRowID(lRowNo+5)).Value := FormatEuro(lMonoSpecClosedInvcAmtTotal);
      lXlWrkSht.Range(xlColID(15)+xlRowID(lRowNo+5)).NumberFormat := '0';
      lXlWrkSht.Range(xlColID(15)+xlRowID(lRowNo+6)).Value := FormatEuro(lInvoicedAmountTotal);
      lXlWrkSht.Range(xlColID(15)+xlRowID(lRowNo+6)).NumberFormat := '0';

      lXlWrkSht.Range(xlColID(15)+xlRowID(lRowNo+7)).Value := FormatInt(lInProMultiSpecIntervTotal);
      lXlWrkSht.Range(xlColID(15)+xlRowID(lRowNo+8)).Value := FormatInt(lClosedMultiSpecIntervTotal);

      lTotal += lInProMultiSpecIntervTotal + lClosedMultiSpecIntervTotal;
      lXlWrkSht.Range(xlColID(15)+xlRowID(lRowNo+9)).Value := FormatInt(lTotal);
      lXlWrkSht.Range(xlColID(15)+xlRowID(lRowNo+10)).Value := FormatInt(lCancelIntervTotal);

      //Evolution %
      lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+1)).Value := FORMAT(lText011);
      IF lMonoSpecInProcIntervArray[13] > 0 THEN BEGIN
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+2)).Value :=
          FormatPercentage(((lMonoSpecInProcIntervTotal - lMonoSpecInProcIntervArray[13]) / lMonoSpecInProcIntervArray[13])*100) + '%';
          lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+2)).NumberFormat := FORMAT(TextFormatPercentage);
      END ELSE
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+2)).Value := FORMAT(0);
      IF lMonoSpecClosedIntervArray[13] > 0 THEN BEGIN
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+3)).Value :=
          FormatPercentage(((lMonoSpecClosedIntervTotal - lMonoSpecClosedIntervArray[13]) / lMonoSpecClosedIntervArray[13])*100) + '%';
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+3)).NumberFormat := FORMAT(TextFormatPercentage);
      END ELSE
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+3)).Value := FORMAT(0);
      //error(FormatPercentage(((lMonoSpecClosedIntervTotal - lMonoSpecClosedIntervArray[13]) / lMonoSpecClosedIntervArray[13])*100));
      lTotal := lMonoSpecInProcIntervTotal + lMonoSpecClosedIntervTotal;
      lTotal1 := lMonoSpecInProcIntervArray[13] + lMonoSpecClosedIntervArray[13];
      IF lTotal1 > 0 THEN BEGIN
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+4)).Value := FormatPercentage(((lTotal - lTotal1)/ lTotal1)*100) + '%';
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+4)).NumberFormat := FORMAT(TextFormatPercentage);
      END ELSE
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+4)).Value := FORMAT(0);
      IF lMonoSpecClosedInvcAmtArray[13] > 0 THEN BEGIN
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+5)).Value :=
          FormatPercentage(((lMonoSpecClosedInvcAmtTotal - lMonoSpecClosedInvcAmtArray[13]) / lMonoSpecClosedInvcAmtArray[13])*100) +
      '%';
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+5)).NumberFormat := FORMAT(TextFormatPercentage);
      END ELSE
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+5)).Value := FORMAT(0);

      IF lInvoicedAmountArray[13] > 0 THEN BEGIN
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+6)).Value :=
          FormatPercentage(((lInvoicedAmountTotal - lInvoicedAmountArray[13]) / lInvoicedAmountArray[13])*100) + '%';
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+6)).NumberFormat := FORMAT(TextFormatPercentage);
      END ELSE
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+6)).Value := FORMAT(0);


      IF lInProgresMultiSpecIntervArray[13] > 0 THEN BEGIN
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+7)).Value :=
          FormatPercentage(((lInProMultiSpecIntervTotal - lInProgresMultiSpecIntervArray[13])/
                      lInProgresMultiSpecIntervArray[13])*100) + '%';
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+7)).NumberFormat := FORMAT(TextFormatPercentage);
      END ELSE
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+7)).Value := FORMAT(0);

      IF lClosedMultiSpecIntervArray[13] > 0 THEN BEGIN
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+8)).Value :=
          FormatPercentage(((lClosedMultiSpecIntervTotal - lClosedMultiSpecIntervArray[13])/ lClosedMultiSpecIntervArray[13])*100) + '%'
      ;
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+8)).NumberFormat := FORMAT(TextFormatPercentage);
      END ELSE
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+8)).Value := FORMAT(0);

      lTotal += lInProMultiSpecIntervTotal + lClosedMultiSpecIntervTotal;
      lTotal1 += lInProgresMultiSpecIntervArray[13] + lClosedMultiSpecIntervArray[13];

      IF lTotal1 > 0 THEN BEGIN
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+9)).Value := FormatPercentage(((lTotal - lTotal1) / lTotal1)*100) + '%';
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+9)).NumberFormat := FORMAT(TextFormatPercentage);
      END ELSE
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+9)).Value := FORMAT(0);
      IF lCancelIntervArray[13] > 0 THEN BEGIN
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+10)).Value :=
          FormatPercentage(((lCancelIntervTotal - lCancelIntervArray[13]) / lCancelIntervArray[13])*100) + '%';
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+10)).NumberFormat := FORMAT(TextFormatPercentage);
      END ELSE
        lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+10)).Value := FORMAT(0);

      HeaderRowNb := lRowNo+10;

      //Presentation tableau
      lXlWrkSht.Range(xlColID(1)+':'+xlColID(1)).ColumnWidth := 38;
      lRowNo := HeaderRowNb - 10;

      lXlWrkSht.Range(xlColID(14)+':'+xlColID(14)).ColumnWidth := 2;
      lXlWrkSht.Range(xlColID(2)+':'+xlColID(13)).ColumnWidth := 8;
      lXlWrkSht.Range(xlColID(17)+':'+xlColID(17)).ColumnWidth := 10;
      lXlWrkSht.Range(xlColID(18)+':'+xlColID(18)).ColumnWidth := 4;
      lXlWrkSht.Range(xlColID(19)+':'+xlColID(19)).ColumnWidth := 4;

      AddRangeBorder(lXlWrkSht, 1, lRowNo+1, 13, lRowNo+1);
      AddRangeBorder(lXlWrkSht, 1, lRowNo+2, 13, lRowNo+4);
      AddRangeBorder(lXlWrkSht, 1, lRowNo+4, 13, lRowNo+5);
      AddRangeBorder(lXlWrkSht, 1, lRowNo+5, 13, lRowNo+6);
      AddRangeBorder(lXlWrkSht, 1, lRowNo+6, 13, lRowNo+7);
      AddRangeBorder(lXlWrkSht, 1, lRowNo+7, 13, lRowNo+8);
      AddRangeBorder(lXlWrkSht, 1, lRowNo+8, 13, lRowNo+9);
      AddRangeBorder(lXlWrkSht, 1, lRowNo+9, 13, lRowNo+10);
      AddRangeBorder(lXlWrkSht, 1, lRowNo+1, 1, lRowNo+10);

      AddRangeBorder(lXlWrkSht, 15, lRowNo+1, 17, lRowNo+1);
      AddRangeBorder(lXlWrkSht, 15, lRowNo+2, 17, lRowNo+4);
      AddRangeBorder(lXlWrkSht, 15, lRowNo+4, 17, lRowNo+5);
      AddRangeBorder(lXlWrkSht, 15, lRowNo+5, 17, lRowNo+6);
      AddRangeBorder(lXlWrkSht, 15, lRowNo+6, 17, lRowNo+7);
      AddRangeBorder(lXlWrkSht, 15, lRowNo+7, 17, lRowNo+8);
      AddRangeBorder(lXlWrkSht, 15, lRowNo+8, 17, lRowNo+9);
      AddRangeBorder(lXlWrkSht, 15, lRowNo+9, 17, lRowNo+10);
      AddRangeBorder(lXlWrkSht, 15, lRowNo+1, 16, lRowNo+10);

      FOR i := 2 TO 13 DO
        AddRangeBorder(lXlWrkSht, i, lRowNo+1, i, lRowNo+10);
      AddRangeBorder(lXlWrkSht, 15, lRowNo+1, 15, lRowNo+10);

      //Centrer les chiffres du tableau
      lXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo+1)+':'+xlColID(17)+xlRowID(lRowNo+1)).HorizontalAlignment := -4108;
      lXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo+1)+':'+xlColID(17)+xlRowID(lRowNo+1)).VerticalAlignment := -4108;

      lXlWrkSht.Range(xlColID(2)+xlRowID(lRowNo+2)+':'+xlColID(17)+xlRowID(lRowNo+10)).HorizontalAlignment := -4108;
      lXlWrkSht.Range(xlColID(2)+xlRowID(lRowNo+2)+':'+xlColID(17)+xlRowID(lRowNo+10)).VerticalAlignment := -4108;

      lXlWrkSht.Range(xlRowID(lRowNo+5)+':'+xlRowID(lRowNo+6)).HorizontalAlignment := 1;
      lXlWrkSht.Range(xlRowID(lRowNo+5)+':'+xlRowID(lRowNo+6)).VerticalAlignment := 1;

      lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+5)+':'+xlColID(17)+xlRowID(lRowNo+6)).HorizontalAlignment := -4108;
      lXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+5)+':'+xlColID(17)+xlRowID(lRowNo+6)).VerticalAlignment := -4108;

      lXlWrkSht.PageSetup.Zoom := FALSE;
    END;

    PROCEDURE CreateMissionSummaryDataSheet@1100281046(pProviderCode@1100281000 : Code[20];VAR pNbCorporate@1100281007 : Integer;VAR pNbServOrderType@1100281010 : Integer);
    VAR
      lText001@1100281008 : TextConst 'ENU=Total;FRA=Total';
      lText002@1100281009 : TextConst 'ENU=(*)Total without service qualification *no enquired*;FRA=(*) Total hors qualification de service *non renseign‚*';
      lXlWrkSht@1100281014 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";
      lCustomer@1100281003 : Record 18;
      lServOrderType@1100281011 : Record 5903;
      lCorporateRegion@1000000001 : Record 50058;
      l5MainServOrderTypeArray@1100281002 : ARRAY [5] OF Code[10];
      lResultByServOrderArray@1100281001 : ARRAY [6] OF Integer;
      lResultByServOrderTotalArray@1100281013 : ARRAY [7] OF Integer;
      lTotal@1100281015 : Integer;
      lToExport@1100281005 : Boolean;
      i@1100281006 : Integer;
      j@1100281004 : Integer;
      lText003@1100281012 : TextConst 'ENU=Others;FRA=Autres';
      n@1000000002 : Integer;
      lRegionNb@1000000000 : Integer;
    BEGIN
      //IMH01 isat.zw
      //Creation feuille de donn‚es ventilation des missions du prestataire

      pNbServOrderType := 0;
      pNbCorporate := 0;

      CreateSheet(lXlWrkSht, Text031,Text031,'','');
      ProviderScoringMgt.Get5ImportServOrderType(pProviderCode, WORKDATE, l5MainServOrderTypeArray);
      FOR j := 1 TO 5 DO
        IF l5MainServOrderTypeArray[j] <> '' THEN
          pNbServOrderType += 1;
      IF pNbServOrderType = 0 THEN
        EXIT;

      //Titre
      lXlWrkSht.Range(xlColID(1)+xlRowID(1)).Value := FORMAT(Text031);
      //lXlWrkSht.Range(xlColID(pNbServOrderType+3)+xlRowID(1)).Value := FORMAT(WORKDATE);
      //1ere ligne descripttion
      FOR j := 1 TO pNbServOrderType DO
        IF lServOrderType.GET(l5MainServOrderTypeArray[j]) THEN
          lXlWrkSht.Range(xlColID(j+2)+xlRowID(2)).Value := FORMAT(lServOrderType.Description);
      IF pNbServOrderType = 5 THEN BEGIN
        lXlWrkSht.Range(xlColID(pNbServOrderType+3)+xlRowID(2)).Value := FORMAT(lText003);
        lXlWrkSht.Range(xlColID(pNbServOrderType+4)+xlRowID(2)).Value := FORMAT(lText001+'*');
      END ELSE
        lXlWrkSht.Range(xlColID(pNbServOrderType+3)+xlRowID(2)).Value := FORMAT(lText001+'*');

      i := 3;
      lCustomer.SETRANGE("Service Contact", lCustomer."Service Contact"::"Corporate Customer");
      IF lCustomer.FINDFIRST THEN
        REPEAT
          CLEAR(lCorporateRegion);
          lRegionNb :=  0;

          lCorporateRegion.SETRANGE("Corporate No.", lCustomer."No.");
          lRegionNb := lCorporateRegion.COUNT + 1;

          FOR n := 1 TO lRegionNb DO BEGIN
            CLEAR(lResultByServOrderArray);
            lToExport := FALSE;
            lTotal := 0;
            ProviderScoringMgt.CalcIntervNbByCorporate(pProviderCode, lCustomer."No.", lCorporateRegion."Region Code", WORKDATE,
                l5MainServOrderTypeArray, lResultByServOrderArray);

            FOR j := 1 TO 6 DO
              IF lResultByServOrderArray[j] > 0 THEN
                lToExport := TRUE;
            IF lToExport THEN BEGIN
              //Code grand compte
              lXlWrkSht.Range(xlColID(1)+xlRowID(i)).Value := FORMAT(lCustomer.Name);
              lXlWrkSht.Range(xlColID(2)+xlRowID(i)).Value := FORMAT(lCorporateRegion.Name);
              FOR j := 1 TO pNbServOrderType DO BEGIN
                lXlWrkSht.Range(xlColID(j+2)+xlRowID(i)).Value := FormatInt(lResultByServOrderArray[j]);
                lTotal += lResultByServOrderArray[j];
                lResultByServOrderTotalArray[j] += lResultByServOrderArray[j];
              END;
              IF pNbServOrderType = 5 THEN BEGIN
                lXlWrkSht.Range(xlColID(pNbServOrderType+3)+xlRowID(i)).Value := FormatInt(lResultByServOrderArray[6]);
                lTotal += lResultByServOrderArray[6];
                lResultByServOrderTotalArray[6] += lResultByServOrderArray[6];
                lXlWrkSht.Range(xlColID(pNbServOrderType+4)+xlRowID(i)).Value := FormatInt(lTotal);
              END ELSE
                lXlWrkSht.Range(xlColID(pNbServOrderType+3)+xlRowID(i)).Value := FormatInt(lTotal);
              lResultByServOrderTotalArray[7] += lTotal;
              i += 1;
              pNbCorporate += 1;
            END;
            IF (lRegionNb > 1) THEN
              IF n = 1 THEN
                lCorporateRegion.FINDSET
              ELSE
                lCorporateRegion.NEXT;
          END;
        UNTIL lCustomer.NEXT = 0;
      //Total
      lXlWrkSht.Range(xlColID(1)+xlRowID(i)).Value := FORMAT(lText001);
      FOR j := 1 TO pNbServOrderType DO
        lXlWrkSht.Range(xlColID(j+2)+xlRowID(i)).Value := FormatInt(lResultByServOrderTotalArray[j]);
      IF pNbServOrderType = 5 THEN BEGIN
        lXlWrkSht.Range(xlColID(pNbServOrderType+3)+xlRowID(i)).Value := FormatInt(lResultByServOrderTotalArray[6]);
        lXlWrkSht.Range(xlColID(pNbServOrderType+4)+xlRowID(i)).Value := FormatInt(lResultByServOrderTotalArray[7]);
      END ELSE
        lXlWrkSht.Range(xlColID(pNbServOrderType+3)+xlRowID(i)).Value := FormatInt(lResultByServOrderTotalArray[7]);
      lXlWrkSht.Range(xlColID(1)+xlRowID(i+1)).Value := FORMAT(lText002);
      lXlWrkSht.PageSetup.Zoom := FALSE;
    END;

    PROCEDURE CreateAvrgTimeCustDateSheet@1100281009(pProviderCode@1100281000 : Code[20];VAR pNbSpec@1100281015 : Integer);
    VAR
      lNbSpecLine@1000000000 : Integer;
      lCostXlWrkSht@1100281011 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";
      lText002@1100281014 : TextConst 'ENU=Month;FRA=Mois';
      lText003@1100281013 : TextConst 'ENU=Total;FRA=Total';
      lText004@1100281012 : TextConst 'ENU=Average Cost;FRA=Co–t moyen (°)';
      lText005@1100281017 : TextConst 'ENU=Interventions Nb;FRA=Nb interventions';
      lText006@1100281018 : TextConst 'ENU=Specialization;FRA=Sp‚cialit‚';
      lText007@1100281019 : TextConst 'ENU=All provider average cost;FRA=Tous prestataires';
      lText008@1100281020 : TextConst 'ENU=Difference;FRA=Ecart';
      lTimeXlWrkSht@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";
      l3MainSpecTempTable@1100281002 : TEMPORARY Record 50031;
      lTimeProviderScoringBuffer@1100281004 : TEMPORARY Record 51005;
      lCostProviderScoringBuffer@1100281032 : TEMPORARY Record 51005;
      lCostAllScoringBuffer@1100281003 : TEMPORARY Record 51005;
      lTimeAllScoringBuffer@1100281033 : TEMPORARY Record 51005;
      lBeginDate@1100281010 : Date;
      lEndDate@1100281005 : Date;
      lTotalProviderCost@1100281021 : Decimal;
      lTotalAllCost@1100281022 : Decimal;
      lTotalIntervCost@1100281023 : Integer;
      lTotalAllIntervCost@1100281036 : Integer;
      lTotalProviderTime@1100281034 : Decimal;
      lTotalAllTime@1100281031 : Decimal;
      lTotalIntervTime@1100281030 : Integer;
      lTotalAllIntervTime@1100281037 : Integer;
      i@1100281006 : Integer;
      lText009@1100281007 : TextConst 'ENU=Provider;FRA=Prestataire';
      lText010@1100281008 : TextConst 'ENU=All Provider;FRA=Tous prestataires (p‚rimŠtres ‚quivalents)';
      j@1100281009 : Integer;
      lDec@1100281016 : Decimal;
      lProviderSpecialization@1100281024 : Record 50006;
      lSpecializationBuildingTrade@1100281025 : Record 50031;
      lAverageCostScore@1100281026 : Decimal;
      lAverageTimeScore@1100281027 : Decimal;
      lCostNoteByMonthArray@1100281029 : ARRAY [12] OF Decimal;
      lTimeNoteByMonthArray@1100281028 : ARRAY [12] OF Decimal;
      lText011@1100281035 : TextConst 'ENU=Average Time;FRA=D‚lai moyen';
      l12MonthTitle@1100281038 : ARRAY [12] OF Text[30];
      lInt@1000000001 : Integer;
    BEGIN
      //IMH01 isat.zw
      //Creation feuille de donn‚es Cout/delai moyen du prestataire

      pNbSpec := 0;
      CreateSheet(lCostXlWrkSht, Text033,Text033,'','');
      CreateSheet(lTimeXlWrkSht, Text032,Text032,'','');

      ProviderScoringMgt.GetProvider3MainSpec(pProviderCode, l3MainSpecTempTable);
      pNbSpec := l3MainSpecTempTable.COUNT;
      lNbSpecLine := pNbSpec;

      //Delai/cout moyen par specialite
      //lBeginDate := CALCDATE('-1' + TextYear, WORKDATE) + 1;
      GetCurrYearBeginEndDate(WORKDATE, lBeginDate, lEndDate);
      ProviderScoringMgt.LoadPrScoringBuf(pProviderCode, lBeginDate, lEndDate,
        l3MainSpecTempTable, 3, TRUE, 2, lTimeProviderScoringBuffer, lTimeAllScoringBuffer);
      ProviderScoringMgt.LoadPrScoringBuf(pProviderCode, lBeginDate, lEndDate,
        l3MainSpecTempTable, 2, TRUE, 2, lCostProviderScoringBuffer, lCostAllScoringBuffer);

      //Titre feuille
      lTimeXlWrkSht.Range(xlColID(1)+xlRowID(1)).Value := FORMAT(Text032);
      //lTimeXlWrkSht.Range(xlColID(14)+xlRowID(1)).Value := FORMAT(WORKDATE);
      lCostXlWrkSht.Range(xlColID(1)+xlRowID(1)).Value := FORMAT(Text033);
      //lCostXlWrkSht.Range(xlColID(14)+xlRowID(1)).Value := FORMAT(WORKDATE);

      //Titres Delai moyen
      lTimeXlWrkSht.Range(xlColID(2)+xlRowID(3)).Value := FORMAT(lText009);
      lTimeXlWrkSht.Range(xlColID(3)+xlRowID(3)).Value := FORMAT(lText010);
      //Titres Cout moyen
      lCostXlWrkSht.Range(xlColID(2)+xlRowID(3)).Value := FORMAT(lText009);
      lCostXlWrkSht.Range(xlColID(3)+xlRowID(3)).Value := FORMAT(lText010);
      //Cadrer tableau cout moyen / delai moyen
      //AddRangeAllBorder(lTimeXlWrkSht, 1, 3, 2, 9);
      //AddRangeAllBorder(lCostXlWrkSht, 1, 3, 2, 9);

      //une ligne de plus pour le titre feuille + une ligne entre 2 tableaux
      lNbSpecLine += 3;

      //Titres Tableau SythŠse Cout moyen
      lCostXlWrkSht.Range(xlColID(1)+xlRowID(2+lNbSpecLine+4)).Value := FORMAT(lText006);
      lCostXlWrkSht.Range(xlColID(2)+xlRowID(2+lNbSpecLine+4)).Value := FORMAT(lText004);
      lCostXlWrkSht.Range(xlColID(3)+xlRowID(2+lNbSpecLine+4)).Value := FORMAT(lText007);
      lCostXlWrkSht.Range(xlColID(4)+xlRowID(2+lNbSpecLine+4)).Value := FORMAT(lText008);
      lCostXlWrkSht.Range(xlColID(5)+xlRowID(2+lNbSpecLine+4)).Value := FORMAT(lText005);

      //Titres Tableau SythŠse d‚lai moyen
      lTimeXlWrkSht.Range(xlColID(1)+xlRowID(2+lNbSpecLine+4)).Value := FORMAT(lText006);
      lTimeXlWrkSht.Range(xlColID(2)+xlRowID(2+lNbSpecLine+4)).Value := FORMAT(lText011);
      lTimeXlWrkSht.Range(xlColID(3)+xlRowID(2+lNbSpecLine+4)).Value := FORMAT(lText007);
      lTimeXlWrkSht.Range(xlColID(4)+xlRowID(2+lNbSpecLine+4)).Value := FORMAT(lText008);
      lTimeXlWrkSht.Range(xlColID(5)+xlRowID(2+lNbSpecLine+4)).Value := FORMAT(lText005);

      i := 4;
      lTimeProviderScoringBuffer.RESET;
      lInt := lTimeProviderScoringBuffer.COUNT;
      lInt := lCostProviderScoringBuffer.COUNT;
      IF l3MainSpecTempTable.FINDFIRST THEN
        REPEAT
          IF NOT lTimeProviderScoringBuffer.GET(pProviderCode, l3MainSpecTempTable."Building Trade No.",
                l3MainSpecTempTable."Specialization Code", '', '', '', 0) THEN
            CLEAR(lTimeProviderScoringBuffer);
          IF NOT lTimeAllScoringBuffer.GET('', l3MainSpecTempTable."Building Trade No.",
                l3MainSpecTempTable."Specialization Code", '', '', '', 0) THEN
            CLEAR(lTimeAllScoringBuffer);
          IF NOT lCostProviderScoringBuffer.GET(pProviderCode, l3MainSpecTempTable."Building Trade No.",
                l3MainSpecTempTable."Specialization Code", '', '', '', 0) THEN
            CLEAR(lCostProviderScoringBuffer);
          IF NOT lCostAllScoringBuffer.GET('', l3MainSpecTempTable."Building Trade No.",
                l3MainSpecTempTable."Specialization Code", '', '', '', 0) THEN
            CLEAR(lCostAllScoringBuffer);

          //l3MainSpecTempTable.CALCFIELDS("Specialization Description");
          //Delai moyen
          lTimeXlWrkSht.Range(xlColID(1)+xlRowID(i)).Value := FORMAT(l3MainSpecTempTable."Specialization Description");
          IF lTimeProviderScoringBuffer."Intervention Nb" <> 0 THEN
            lTimeXlWrkSht.Range(xlColID(2)+xlRowID(i)).Value :=
              FormatDec(lTimeProviderScoringBuffer."Interv. Period Total" / lTimeProviderScoringBuffer."Intervention Nb")
          ELSE
            lTimeXlWrkSht.Range(xlColID(2)+xlRowID(i)).Value := FORMAT(0);
          IF lTimeAllScoringBuffer."Intervention Nb" <> 0 THEN
            lTimeXlWrkSht.Range(xlColID(3)+xlRowID(i)).Value :=
              FormatDec(lTimeAllScoringBuffer."Interv. Period Total" / lTimeAllScoringBuffer."Intervention Nb")
          ELSE
            lTimeXlWrkSht.Range(xlColID(3)+xlRowID(i)).Value := FORMAT(0);

          //Cout moyen
          lCostXlWrkSht.Range(xlColID(1)+xlRowID(i)).Value := FORMAT(l3MainSpecTempTable."Specialization Description");
          IF lCostProviderScoringBuffer."Intervention Nb" <> 0 THEN
            lCostXlWrkSht.Range(xlColID(2)+xlRowID(i)).Value :=
              FormatEuro(lCostProviderScoringBuffer."Intervention Amount" / lCostProviderScoringBuffer."Intervention Nb")
          ELSE
            lCostXlWrkSht.Range(xlColID(2)+xlRowID(i)).Value := FORMAT(0);
          lCostXlWrkSht.Range(xlColID(2)+xlRowID(i)).NumberFormat := '0';

          IF lCostAllScoringBuffer."Intervention Nb" <> 0 THEN
            lCostXlWrkSht.Range(xlColID(3)+xlRowID(i)).Value :=
              FormatEuro(lCostAllScoringBuffer."Intervention Amount" / lCostAllScoringBuffer."Intervention Nb")
          ELSE
            lCostXlWrkSht.Range(xlColID(3)+xlRowID(i)).Value := FORMAT(0);
          lCostXlWrkSht.Range(xlColID(3)+xlRowID(i)).NumberFormat := '0';

          //Tableau SythŠse Cout moyen
          lCostXlWrkSht.Range(xlColID(1)+xlRowID(i+lNbSpecLine+3)).Value := FORMAT(l3MainSpecTempTable."Specialization Description");
          IF lCostProviderScoringBuffer."Intervention Nb" <> 0 THEN
            lCostXlWrkSht.Range(xlColID(2)+xlRowID(i+lNbSpecLine+3)).Value :=
              FormatEuro(lCostProviderScoringBuffer."Intervention Amount" / lCostProviderScoringBuffer."Intervention Nb")
          ELSE
            lCostXlWrkSht.Range(xlColID(2)+xlRowID(i+lNbSpecLine+3)).Value := FORMAT(0);
          lCostXlWrkSht.Range(xlColID(2)+xlRowID(i+lNbSpecLine+3)).NumberFormat := '0';

          IF lCostAllScoringBuffer."Intervention Nb" <> 0 THEN
            lCostXlWrkSht.Range(xlColID(3)+xlRowID(i+lNbSpecLine+3)).Value :=
              FormatEuro(lCostAllScoringBuffer."Intervention Amount" / lCostAllScoringBuffer."Intervention Nb")
          ELSE
            lCostXlWrkSht.Range(xlColID(3)+xlRowID(i+lNbSpecLine+3)).Value := FORMAT(0);
          lCostXlWrkSht.Range(xlColID(3)+xlRowID(i+lNbSpecLine+3)).NumberFormat := '0';

          //Ecart
          IF (lCostAllScoringBuffer."Intervention Amount" <> 0)
             AND (lCostAllScoringBuffer."Intervention Nb" <> 0)
             AND (lCostProviderScoringBuffer."Intervention Nb" <> 0) THEN BEGIN
            lCostXlWrkSht.Range(xlColID(4) + xlRowID(i + lNbSpecLine + 3)).Value :=
              FormatPercentage((((lCostProviderScoringBuffer."Intervention Amount" / lCostProviderScoringBuffer."Intervention Nb")
                         - (lCostAllScoringBuffer."Intervention Amount" / lCostAllScoringBuffer."Intervention Nb")) /
                     (lCostAllScoringBuffer."Intervention Amount" / lCostAllScoringBuffer."Intervention Nb"))*100) + '%';
            lCostXlWrkSht.Range(xlColID(4) + xlRowID(i + lNbSpecLine + 3)).NumberFormat := FORMAT(TextFormatPercentage);
          END ELSE
            lCostXlWrkSht.Range(xlColID(4) + xlRowID(i + lNbSpecLine + 3)).Value := FORMAT(0);
          //Nb intervention
          lCostXlWrkSht.Range(xlColID(5) + xlRowID(i + lNbSpecLine + 3)).Value
            := FormatInt(lCostProviderScoringBuffer."Intervention Nb");

          //Tableau SythŠse d‚lai moyen
          lTimeXlWrkSht.Range(xlColID(1)+xlRowID(i+lNbSpecLine+3)).Value := FORMAT(l3MainSpecTempTable."Specialization Description");
          IF lTimeProviderScoringBuffer."Intervention Nb" <> 0 THEN
            lTimeXlWrkSht.Range(xlColID(2)+xlRowID(i+lNbSpecLine+3)).Value :=
              FormatDec(lTimeProviderScoringBuffer."Interv. Period Total" / lTimeProviderScoringBuffer."Intervention Nb")
          ELSE
            lTimeXlWrkSht.Range(xlColID(2)+xlRowID(i+lNbSpecLine+3)).Value := FORMAT(0);
          IF lTimeAllScoringBuffer."Intervention Nb" <> 0 THEN
            lTimeXlWrkSht.Range(xlColID(3)+xlRowID(i+lNbSpecLine+3)).Value :=
              FormatDec(lTimeAllScoringBuffer."Interv. Period Total" / lTimeAllScoringBuffer."Intervention Nb")
          ELSE
            lTimeXlWrkSht.Range(xlColID(3)+xlRowID(i+lNbSpecLine+3)).Value := FORMAT(0);
          //Ecart
          IF (lTimeAllScoringBuffer."Interv. Period Total" <> 0)
             AND (lTimeAllScoringBuffer."Intervention Nb" <> 0)
             AND (lTimeProviderScoringBuffer."Intervention Nb" <> 0) THEN BEGIN
            lTimeXlWrkSht.Range(xlColID(4) + xlRowID(i + lNbSpecLine + 3)).Value :=
              FormatPercentage((((lTimeProviderScoringBuffer."Interv. Period Total" / lTimeProviderScoringBuffer."Intervention Nb") -
                       (lTimeAllScoringBuffer."Interv. Period Total" / lTimeAllScoringBuffer."Intervention Nb")) /
                     (lTimeAllScoringBuffer."Interv. Period Total" / lTimeAllScoringBuffer."Intervention Nb"))*100) + '%';
            lTimeXlWrkSht.Range(xlColID(4) + xlRowID(i + lNbSpecLine + 3)).NumberFormat := FORMAT(TextFormatPercentage);
          END ELSE
            lTimeXlWrkSht.Range(xlColID(4) + xlRowID(i + lNbSpecLine + 3)).Value := FORMAT(0);
          //Nb intervention
          lTimeXlWrkSht.Range(xlColID(5) + xlRowID(i + lNbSpecLine + 3)).Value :=
            FormatInt(lTimeProviderScoringBuffer."Intervention Nb");
          i += 1;
        UNTIL l3MainSpecTempTable.NEXT = 0;


      lNbSpecLine += 1;
      i := i - 1;
      //Delai/cou moyen 12 mois
      //Titres Delai moyen
      lTimeXlWrkSht.Range(xlColID(1)+xlRowID(pNbSpec+6)).Value := FORMAT(lText009);
      lTimeXlWrkSht.Range(xlColID(1)+xlRowID(pNbSpec+7)).Value := FORMAT(lText010);
      //Titres cout moyen
      lCostXlWrkSht.Range(xlColID(1)+xlRowID(pNbSpec+6)).Value := FORMAT(lText009);
      lCostXlWrkSht.Range(xlColID(1)+xlRowID(pNbSpec+7)).Value := FORMAT(lText010);

      //Titres synthŠse cout moyen
      lCostXlWrkSht.Range(xlColID(1)+xlRowID(i+lNbSpecLine+4)).Value := FORMAT(lText002);
      lCostXlWrkSht.Range(xlColID(1)+xlRowID(i+lNbSpecLine+5)).Value := FORMAT(lText004);
      lCostXlWrkSht.Range(xlColID(1)+xlRowID(i+lNbSpecLine+6)).Value := FORMAT(lText008);
      lCostXlWrkSht.Range(xlColID(1)+xlRowID(i+lNbSpecLine+7)).Value := FORMAT(lText005);

      //Titres synthŠse TIme moyen
      lTimeXlWrkSht.Range(xlColID(1)+xlRowID(i+lNbSpecLine+4)).Value := FORMAT(lText002);
      lTimeXlWrkSht.Range(xlColID(1)+xlRowID(i+lNbSpecLine+5)).Value := FORMAT(lText011);
      lTimeXlWrkSht.Range(xlColID(1)+xlRowID(i+lNbSpecLine+6)).Value := FORMAT(lText008);
      lTimeXlWrkSht.Range(xlColID(1)+xlRowID(i+lNbSpecLine+7)).Value := FORMAT(lText005);

      //inserer la specialite principale dans la table 3mainSpecTempTable

      {
      l3MainSpecTempTable.DELETEALL;
      lProviderSpecialization.SETRANGE("Provider No.",  pProviderCode);
      lProviderSpecialization.SETRANGE("Main Specialization", TRUE);
      IF lProviderSpecialization.FINDFIRST THEN BEGIN
        IF lSpecializationBuildingTrade.GET(
             lProviderSpecialization."Building Trade No.",
             lProviderSpecialization."Specialization Code")
        THEN BEGIN
          l3MainSpecTempTable := lSpecializationBuildingTrade;
          l3MainSpecTempTable.INSERT;
          ProviderMainSpecDesc := lSpecializationBuildingTrade."Specialization Description";
        END;
      END;
      }
      //<<IMH02:ISAT.VA
      Get12MonthTitle(WORKDATE, l12MonthTitle);
      //>>IMH02:ISAT.VA

      //ProviderScoringMgt.CalcAllProvLastAvgCostTimeNote(WORKDATE, lCostNoteByMonthArray, lTimeNoteByMonthArray);

      j := 2;
      WHILE j < 14 DO BEGIN
        lCostProviderScoringBuffer.DELETEALL;
        lTimeProviderScoringBuffer.DELETEALL;
        CLEAR(lCostProviderScoringBuffer);
        CLEAR(lTimeProviderScoringBuffer);
        lCostAllScoringBuffer.DELETEALL;
        CLEAR(lCostAllScoringBuffer);
        lTimeAllScoringBuffer.DELETEALL;
        CLEAR(lTimeAllScoringBuffer);

        GetBeginEndDate(j-1, WORKDATE, lBeginDate, lEndDate);


        //delai moyen
        //<<IMH02:ISAT.VA
        //lTimeXlWrkSht.Range(xlColID(j)+xlRowID(i)).Value := FORMAT(j-1);
        lTimeXlWrkSht.Range(xlColID(j)+xlRowID(pNbSpec+5)).Value := FORMAT(l12MonthTitle[j-1]);
        //>>IMH02:ISAT.VA
        lTimeProviderScoringBuffer.DELETEALL;
        //lBeginDate := GetFirstNextWeekDate(lBeginDate);
        lTimeAllScoringBuffer.DELETEALL;

        //Note delai moyen de la specialit‚ principale
        //ProviderScoringMgt.LoadPrScoringBuf(pProviderCode, lBeginDate, lEndDate, l3MainSpecTempTable, 3,
        //  FALSE, 0, lProviderScoringBuffer, lTimeAllScoringBuffer);
        //IF lProviderScoringBuffer.FINDFIRST THEN;
        //lTimeAllScoringBuffer.DELETEALL;
        //lAverageTimeScore := ProviderScoringMgt.CalcAverageTimeNote(pProviderCode,
        //    lBeginDate, lEndDate, l3MainSpecTempTable, lTimeAllScoringBuffer);
        //lTimeXlWrkSht.Range(xlColID(j)+xlRowID(pNbSpec+6)).Value := FormatDec(lAverageTimeScore);

        //---???????????????TODO????????????--------
        ProviderScoringMgt.LoadPrScoringBuf(pProviderCode, lBeginDate, lEndDate, l3MainSpecTempTable, 3,
          TRUE, 2, lTimeProviderScoringBuffer, lTimeAllScoringBuffer);
        IF NOT lTimeProviderScoringBuffer.GET(pProviderCode, '', '', '', '', '', 0) THEN
          CLEAR(lTimeProviderScoringBuffer);
        IF NOT lTimeAllScoringBuffer.GET('', '', '', '', '', '', 0) THEN
          CLEAR(lTimeAllScoringBuffer);
        //Note moyen tous prestataire
        //lTimeXlWrkSht.Range(xlColID(j)+xlRowID(pNbSpec+7)).Value := FormatDec(lTimeNoteByMonthArray[j-1]);

        //D‚lai moyen prestataire
        IF lTimeProviderScoringBuffer."Intervention Nb" <> 0 THEN BEGIN
          lTimeXlWrkSht.Range(xlColID(j)+xlRowID(pNbSpec+6)).Value :=
            FormatDec(lTimeProviderScoringBuffer."Interv. Period Total" / lTimeProviderScoringBuffer."Intervention Nb");
        END ELSE
          lTimeXlWrkSht.Range(xlColID(j)+xlRowID(pNbSpec+6)).Value := FORMAT(0);

        //Cout moyen tous prestataire
        IF lTimeAllScoringBuffer."Intervention Nb" <> 0 THEN BEGIN
          lTimeXlWrkSht.Range(xlColID(j)+xlRowID(pNbSpec+7)).Value :=
            FormatDec(lTimeAllScoringBuffer."Interv. Period Total" / lTimeAllScoringBuffer."Intervention Nb");
        END ELSE
          lTimeXlWrkSht.Range(xlColID(j)+xlRowID(pNbSpec+7)).Value := FORMAT(0);

        //Cout moyen
        //<<IMH02:ISAT.VA
        //lCostXlWrkSht.Range(xlColID(j)+xlRowID(i)).Value := FORMAT(j-1);
        lCostXlWrkSht.Range(xlColID(j)+xlRowID(pNbSpec+5)).Value := FORMAT(l12MonthTitle[j-1]);
        //>>IMH02:ISAT.VA
        //Note delai moyen de la specialit‚ principale
        lCostProviderScoringBuffer.DELETEALL;
        //lBeginDate := GetFirstNextWeekDate(lBeginDate);
        lCostAllScoringBuffer.DELETEALL;

        //lAverageCostScore := ProviderScoringMgt.CalcAverageCostNote(pProviderCode,
        //  lBeginDate, lEndDate, l3MainSpecTempTable,lCostAllScoringBuffer);
        //lCostXlWrkSht.Range(xlColID(j)+xlRowID(pNbSpec+6)).Value := FormatDec(lAverageCostScore);
        //---???????????????TODO????????????--------
        ProviderScoringMgt.LoadPrScoringBuf(pProviderCode, lBeginDate, lEndDate, l3MainSpecTempTable, 2,
          TRUE, 2, lCostProviderScoringBuffer, lCostAllScoringBuffer);

        IF NOT lCostProviderScoringBuffer.GET(pProviderCode, '', '', '', '', '', 0) THEN
          CLEAR(lCostProviderScoringBuffer);
        IF NOT lCostAllScoringBuffer.GET('', '', '', '', '', '', 0) THEN
          CLEAR(lCostAllScoringBuffer);

        //Note moyen tous prestataire
        //lCostXlWrkSht.Range(xlColID(j)+xlRowID(pNbSpec+7)).Value := FormatDec(lCostNoteByMonthArray[j-1]);

        //Cout moyen prestataire
        IF lCostProviderScoringBuffer."Intervention Nb" <> 0 THEN BEGIN
          lCostXlWrkSht.Range(xlColID(j)+xlRowID(pNbSpec+6)).Value :=
            FormatEuro(lCostProviderScoringBuffer."Intervention Amount" / lCostProviderScoringBuffer."Intervention Nb");
        END ELSE
          lCostXlWrkSht.Range(xlColID(j)+xlRowID(pNbSpec+6)).Value := FORMAT(0);
        lCostXlWrkSht.Range(xlColID(j)+xlRowID(pNbSpec+6)).NumberFormat := '0';

        //Cout moyen tous prestataire
        IF lCostAllScoringBuffer."Intervention Nb" <> 0 THEN BEGIN
          lCostXlWrkSht.Range(xlColID(j)+xlRowID(pNbSpec+7)).Value :=
            FormatEuro(lCostAllScoringBuffer."Intervention Amount" / lCostAllScoringBuffer."Intervention Nb");
        END ELSE
          lCostXlWrkSht.Range(xlColID(j)+xlRowID(pNbSpec+7)).Value := FORMAT(0);
        lCostXlWrkSht.Range(xlColID(j)+xlRowID(pNbSpec+7)).NumberFormat := '0';

        //Tableau synthese Cout moyen
        //<<IMH02:ISAT.VA
        //lCostXlWrkSht.Range(xlColID(j+6)+xlRowID(i+lNbSpecLine+4)).Value := FORMAT(j-1);
        lCostXlWrkSht.Range(xlColID(j)+xlRowID(i+lNbSpecLine+4)).Value := FORMAT(l12MonthTitle[j-1]);
        //>>IMH02:ISAT.VA
        IF lCostProviderScoringBuffer."Intervention Nb" <> 0 THEN BEGIN
          lCostXlWrkSht.Range(xlColID(j)+xlRowID(i+lNbSpecLine+5)).Value :=
            FormatEuro(lCostProviderScoringBuffer."Intervention Amount" / lCostProviderScoringBuffer."Intervention Nb");
          lTotalProviderCost += lCostProviderScoringBuffer."Intervention Amount" / lCostProviderScoringBuffer."Intervention Nb";
        END ELSE
          lCostXlWrkSht.Range(xlColID(j)+xlRowID(i+lNbSpecLine+5)).Value := FORMAT(0);
        lCostXlWrkSht.Range(xlColID(j)+xlRowID(i+lNbSpecLine+5)).NumberFormat := '0';

        //Ecart
        IF (lCostAllScoringBuffer."Intervention Amount" <> 0)
           AND (lCostProviderScoringBuffer."Intervention Nb" <> 0)
           AND (lCostAllScoringBuffer."Intervention Nb" <> 0) THEN BEGIN
          lCostXlWrkSht.Range(xlColID(j)+xlRowID(i+lNbSpecLine+6)).Value :=
            FormatPercentage(
              (((lCostProviderScoringBuffer."Intervention Amount" / lCostProviderScoringBuffer."Intervention Nb") -
                     (lCostAllScoringBuffer."Intervention Amount" / lCostAllScoringBuffer."Intervention Nb")) /
                   (lCostAllScoringBuffer."Intervention Amount" / lCostAllScoringBuffer."Intervention Nb"))*100) + '%';
          lCostXlWrkSht.Range(xlColID(j)+xlRowID(i+lNbSpecLine+6)).NumberFormat := FORMAT(TextFormatPercentage);
        END ELSE
          lCostXlWrkSht.Range(xlColID(j)+xlRowID(i+lNbSpecLine+6)).Value := FORMAT(0);
        lCostXlWrkSht.Range(xlColID(j)+xlRowID(i+lNbSpecLine+7)).Value := FormatInt(lCostProviderScoringBuffer."Intervention Nb");
        IF lCostAllScoringBuffer."Intervention Nb" <> 0 THEN
          lTotalAllCost += lCostAllScoringBuffer."Intervention Amount" / lCostAllScoringBuffer."Intervention Nb";
        lTotalIntervCost += lCostProviderScoringBuffer."Intervention Nb";
        lTotalAllIntervCost += lCostAllScoringBuffer."Intervention Nb";

        //Tableau synthese delai moyen
        //<<IMH02:ISAT.VA
        //lTimeXlWrkSht.Range(xlColID(j)+xlRowID(i+lNbSpecLine+4)).Value := FORMAT(j-1);
        lTimeXlWrkSht.Range(xlColID(j)+xlRowID(i+lNbSpecLine+4)).Value := FORMAT(l12MonthTitle[j-1]);
        //>>IMH02:ISAT.VA
        IF lTimeProviderScoringBuffer."Intervention Nb" <> 0 THEN BEGIN
          lTimeXlWrkSht.Range(xlColID(j)+xlRowID(i+lNbSpecLine+5)).Value :=
            FormatDec(lTimeProviderScoringBuffer."Interv. Period Total" / lTimeProviderScoringBuffer."Intervention Nb");
          lTotalProviderTime += lTimeProviderScoringBuffer."Interv. Period Total" / lTimeProviderScoringBuffer."Intervention Nb";
        END ELSE
          lTimeXlWrkSht.Range(xlColID(j)+xlRowID(i+lNbSpecLine+5)).Value := FORMAT(0);
        //Ecart
        IF (lTimeAllScoringBuffer."Interv. Period Total" <> 0)
           AND (lTimeAllScoringBuffer."Intervention Nb" <> 0)
           AND (lTimeProviderScoringBuffer."Intervention Nb" <> 0) THEN BEGIN
          lTimeXlWrkSht.Range(xlColID(j)+xlRowID(i+lNbSpecLine+6)).Value :=
            FormatPercentage(
              (((lTimeProviderScoringBuffer."Interv. Period Total" / lTimeProviderScoringBuffer."Intervention Nb") -
                     (lTimeAllScoringBuffer."Interv. Period Total" / lTimeAllScoringBuffer."Intervention Nb")) /
                   (lTimeAllScoringBuffer."Interv. Period Total" / lTimeAllScoringBuffer."Intervention Nb"))*100) + '%';
          lTimeXlWrkSht.Range(xlColID(j)+xlRowID(i+lNbSpecLine+6)).NumberFormat := FORMAT(TextFormatPercentage);
        END ELSE
          lTimeXlWrkSht.Range(xlColID(j)+xlRowID(i+lNbSpecLine+6)).Value := FORMAT(0);
        lTimeXlWrkSht.Range(xlColID(j)+xlRowID(i+lNbSpecLine+7)).Value := FormatInt(lTimeProviderScoringBuffer."Intervention Nb");
        IF lTimeAllScoringBuffer."Intervention Nb" <> 0 THEN
          lTotalAllTime += lTimeAllScoringBuffer."Interv. Period Total" / lTimeAllScoringBuffer."Intervention Nb";
        lTotalIntervTime += lTimeProviderScoringBuffer."Intervention Nb";
        lTotalAllIntervTime += lTimeAllScoringBuffer."Intervention Nb";
        j+=1;
      END;
      //Total Tableau synthese Cout moyen
      lCostXlWrkSht.Range(xlColID(14)+xlRowID(i+lNbSpecLine+4)).Value := FORMAT(lText003);
      {
      lCostXlWrkSht.Range(xlColID(14)+xlRowID(i+lNbSpecLine+5)).Value := FormatDec(lTotalProviderCost / 12);
      //Ecart
      IF (lTotalAllCost <> 0) AND (lTotalIntervCost <> 0) AND (lTotalAllIntervCost <> 0) THEN
        lCostXlWrkSht.Range(xlColID(14)+xlRowID(i+lNbSpecLine+6)).Value :=
          FormatPercentage((((lTotalProviderCost / 12) -
                    (lTotalAllCost / 12)) / (lTotalAllCost / 12))*100) + '%'
      ELSE
        lCostXlWrkSht.Range(xlColID(14)+xlRowID(i+lNbSpecLine+6)).Value := FORMAT(0);
      }
      lCostXlWrkSht.Range(xlColID(14)+xlRowID(i+lNbSpecLine+7)).Value := FORMAT(lTotalIntervCost);

      //Total Tableau synthese Cout moyen
      lTimeXlWrkSht.Range(xlColID(14)+xlRowID(i+lNbSpecLine+4)).Value := FORMAT(lText003);
      {
      lTimeXlWrkSht.Range(xlColID(14)+xlRowID(i+lNbSpecLine+5)).Value := FormatDec(lTotalProviderTime / 12);
      //Ecart
      IF (lTotalAllTime <> 0) AND (lTotalIntervTime <> 0) AND (lTotalAllIntervTime <> 0) THEN
        lTimeXlWrkSht.Range(xlColID(14)+xlRowID(i+lNbSpecLine+6)).Value :=
          FormatPercentage((((lTotalProviderTime / 12) -
                    (lTotalAllTime / 12)) / (lTotalAllTime / 12))*100) + '%'
      ELSE
        lTimeXlWrkSht.Range(xlColID(14)+xlRowID(i+lNbSpecLine+6)).Value := FORMAT(0);
      }
      lTimeXlWrkSht.Range(xlColID(14)+xlRowID(i+lNbSpecLine+7)).Value := FORMAT(lTotalIntervTime);

      lTimeXlWrkSht.PageSetup.Zoom := FALSE;
      lCostXlWrkSht.PageSetup.Zoom := FALSE;
    END;

    PROCEDURE CreateTimeDateSheet@1100281000(pProviderCode@1100281000 : Code[20];VAR pNoteGlobal@1100281011 : Decimal;VAR pNoteByMonthArray@1100281007 : ARRAY [12] OF Decimal);
    VAR
      lXlWrkSht@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";
      lText001@1100281004 : TextConst 'ENU=Month;FRA=Mois';
      lText002@1100281003 : TextConst 'ENU=Interventions Nb;FRA=Nb interventions';
      lText003@1100281005 : TextConst 'ENU=Score;FRA=Note';
      lIntervNbByMonthArray@1100281006 : ARRAY [12] OF Decimal;
      lTotal@1100281009 : Integer;
      i@1100281008 : Integer;
      lText004@1100281010 : TextConst 'ENU=Total;FRA=Total';
      l12MonthTitle@1100281002 : ARRAY [12] OF Text[30];
      lAddLine@1000000000 : Integer;
    BEGIN
      //IMH01 isat.zw
      //Creation feuille de respect des delais du prestataire
      lAddLine := 1;
      CreateSheet(lXlWrkSht, Text034,Text034,'','');

      pNoteGlobal := ProviderScoringMgt.CalcTimeNote(pProviderCode, WORKDATE, pNoteByMonthArray, lIntervNbByMonthArray);

      //Titre feuille
      lXlWrkSht.Range(xlColID(1)+xlRowID(1)).Value := FORMAT(Text034);
      //lXlWrkSht.Range(xlColID(14)+xlRowID(1)).Value := FORMAT(WORKDATE);

      //Titre Note/mois
      lXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+2)).Value := FORMAT(lText001);
      lXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+3)).Value := FORMAT(lText003);
      //Titre Nb interventions/mois
      lXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+5)).Value := FORMAT(lText001);
      lXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+6)).Value := FORMAT(lText002);

      //<<IMH02:ISAT.VA
      Get12MonthTitle(WORKDATE, l12MonthTitle);
      //>>IMH02:ISAT.VA
      FOR i := 1 TO 12 DO BEGIN

        //Note/mois
        //>>IMH02:ISAT.VA
        //lXlWrkSht.Range(xlColID(i+1)+xlRowID(lAddLine+1)).Value := FORMAT(i);
        lXlWrkSht.Range(xlColID(i+1)+xlRowID(lAddLine+2)).Value := FORMAT(l12MonthTitle[i]);
        //>>IMH02:ISAT.VA
        lXlWrkSht.Range(xlColID(i+1)+xlRowID(lAddLine+3)).Value := FormatDec(pNoteByMonthArray[i]);

        //Nb interventions/mois
        //>>IMH02:ISAT.VA
        //lXlWrkSht.Range(xlColID(i+1)+xlRowID(lAddLine+3)).Value := FORMAT(i);
        lXlWrkSht.Range(xlColID(i+1)+xlRowID(lAddLine+5)).Value := FORMAT(l12MonthTitle[i]);
        //>>IMH02:ISAT.VA
        lXlWrkSht.Range(xlColID(i+1)+xlRowID(lAddLine+6)).Value := FormatInt(lIntervNbByMonthArray[i]);
        lTotal += lIntervNbByMonthArray[i];

      END;
      //Total Nb interventions/mois
      lXlWrkSht.Range(xlColID(14)+xlRowID(lAddLine+5)).Value := FORMAT(lText004);
      lXlWrkSht.Range(xlColID(14)+xlRowID(lAddLine+6)).Value := FORMAT(lTotal);

      lXlWrkSht.PageSetup.Zoom := FALSE;
    END;

    PROCEDURE CreateGlobalDateSheet@1100281004(pProviderCode@1100281000 : Code[20];pTimeNoteGlobal@1100281016 : Decimal;pTimeNoteByMonthArray@1100281007 : ARRAY [12] OF Decimal) rGlobalNote : Decimal;
    VAR
      lXlWrkSht@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";
      lText001@1100281004 : TextConst 'ENU=Disponibility;FRA=Disponibilit‚';
      lText002@1100281003 : TextConst 'ENU=Average Cost;FRA=Co–t moyen';
      lText003@1100281005 : TextConst 'ENU=Average Time;FRA=D‚lai moyen';
      lText004@1100281010 : TextConst 'ENU=Time;FRA=Respect des d‚lais';
      lText005@1100281011 : TextConst 'ENU=Quality Control;FRA=Contr“le qualit‚';
      lText006@1100281012 : TextConst 'ENU=Claim;FRA=Taux r‚clamation';
      lMainSpecTempTable@1100281002 : TEMPORARY Record 50031;
      lGlobalNote@1100281021 : Decimal;
      lDisponibilityNote@1100281015 : Decimal;
      lAverageCostScore@1100281014 : Decimal;
      lAverageTimeScore@1100281013 : Decimal;
      lTimeScore@1100281009 : Decimal;
      lQualityControlScore@1100281008 : Decimal;
      lClaimScore@1100281006 : Decimal;
      lBeginDate@1100281017 : Date;
      lEndDate@1100281018 : Date;
      i@1100281019 : Integer;
      lText007@1100281020 : TextConst 'ENU=Score;FRA=Note';
      lCostAllScoringBuffer@1100281023 : TEMPORARY Record 51005;
      lTimeAllScoringBuffer@1100281022 : TEMPORARY Record 51005;
      lProviderScoringBuffer@1100281024 : TEMPORARY Record 51005;
      lProviderSpecialization@1100281025 : Record 50006;
      lSpecializationBuildingTrade@1100281026 : Record 50031;
      lProviderScoringLedgerEntry@1000000002 : Record 50088;
      l12MonthTitle@1100281027 : ARRAY [12] OF Text[30];
      lRowNo@1000000000 : Integer;
      lText008@1000000001 : TextConst 'ENU=Month;FRA=Mois';
      lText009@1000000003 : TextConst 'ENU=Monthly average;FRA=Moyenne mensuelle';
    BEGIN
      //IMH01 isat.zw
      //Creation feuille de note globale du prestataire
      //-----  TODO ----- Note controle qualite

      CreateSheet(lXlWrkSht, Text035,Text035,'','');
      {
      //data Note globale
      lBeginDate := CALCDATE('-1' + TextYear, WORKDATE) + 1;
      lEndDate := WORKDATE;
      lProviderSpecialization.SETRANGE("Provider No.", pProviderCode);
      lProviderSpecialization.SETRANGE("Main Specialization", TRUE);
      IF lProviderSpecialization.FINDFIRST THEN
        IF lSpecializationBuildingTrade.GET(
             lProviderSpecialization."Building Trade No.",
             lProviderSpecialization."Specialization Code") THEN BEGIN
          lMainSpecTempTable := lSpecializationBuildingTrade;
          lMainSpecTempTable.INSERT;
        END;

      lDisponibilityNote := ProviderScoringMgt.CalcDisponibilityNote(pProviderCode, lBeginDate, lEndDate);
      ProviderScoringMgt.LoadPrScoringBuf('', lBeginDate, lEndDate, lMainSpecTempTable, 2,
        FALSE, 1, lProviderScoringBuffer, lCostAllScoringBuffer);
      ProviderScoringMgt.LoadPrScoringBuf('', lBeginDate, lEndDate, lMainSpecTempTable, 3,
        FALSE, 1, lProviderScoringBuffer, lTimeAllScoringBuffer);
      lAverageCostScore := ProviderScoringMgt.CalcAverageCostNote(pProviderCode,
        lBeginDate, lEndDate, lMainSpecTempTable, lCostAllScoringBuffer);
      lAverageTimeScore := ProviderScoringMgt.CalcAverageTimeNote(pProviderCode,
        lBeginDate, lEndDate, lMainSpecTempTable, lTimeAllScoringBuffer);
      lTimeScore := pTimeNoteGlobal;
      //---- TODO --- note controle qualite
      lQualityControlScore := ProviderScoringMgt.CalcQualityNote(pProviderCode, lBeginDate, lEndDate);  //IMH04
      lClaimScore := ProviderScoringMgt.CalcClaimNote(pProviderCode, lBeginDate, lEndDate);
      rGlobalNote := ProviderScoringMgt.CalcProviderScore(
        lDisponibilityNote,lAverageCostScore,lAverageTimeScore,lTimeScore,lQualityControlScore,lClaimScore);
      }
      //Dernier note scoring
      lProviderScoringLedgerEntry.SETRANGE("Provider No.", pProviderCode);
      IF lProviderScoringLedgerEntry.FINDLAST THEN BEGIN
        lDisponibilityNote := lProviderScoringLedgerEntry."Disponibility Note";
        lAverageCostScore := lProviderScoringLedgerEntry."Average Cost Note";
        lAverageTimeScore := lProviderScoringLedgerEntry."Average Time Note";
        lTimeScore := lProviderScoringLedgerEntry."Time Note";
        lQualityControlScore := lProviderScoringLedgerEntry."Quality Control Note";
        lClaimScore := lProviderScoringLedgerEntry."Claim Note";
        lGlobalNote := lProviderScoringLedgerEntry."Global Note";
        rGlobalNote := lGlobalNote;
      END;

      lXlWrkSht.Range(xlColID(1)+xlRowID(1)).Value := FORMAT(Text035);
      //lXlWrkSht.Range(xlColID(13)+xlRowID(1)).Value := FORMAT(WORKDATE);

      //Titre notes globales
      lXlWrkSht.Range(xlColID(2)+xlRowID(3)).Value := FORMAT(lText007);
      lXlWrkSht.Range(xlColID(1)+xlRowID(4)).Value := FORMAT(lText001);
      lXlWrkSht.Range(xlColID(1)+xlRowID(5)).Value := FORMAT(lText002);
      lXlWrkSht.Range(xlColID(1)+xlRowID(6)).Value := FORMAT(lText003);
      lXlWrkSht.Range(xlColID(1)+xlRowID(7)).Value := FORMAT(lText004);
      lXlWrkSht.Range(xlColID(1)+xlRowID(8)).Value := FORMAT(lText005);
      lXlWrkSht.Range(xlColID(1)+xlRowID(9)).Value := FORMAT(lText006);
      //Notes globales
      lXlWrkSht.Range(xlColID(2)+xlRowID(4)).Value := FormatDec(lDisponibilityNote);
      lXlWrkSht.Range(xlColID(2)+xlRowID(5)).Value := FormatDec(lAverageCostScore);
      lXlWrkSht.Range(xlColID(2)+xlRowID(6)).Value := FormatDec(lAverageTimeScore);
      lXlWrkSht.Range(xlColID(2)+xlRowID(7)).Value := FormatDec(lTimeScore);
      lXlWrkSht.Range(xlColID(2)+xlRowID(8)).Value := FormatDec(lQualityControlScore);
      lXlWrkSht.Range(xlColID(2)+xlRowID(9)).Value := FormatDec(lClaimScore);

      //Notes par mois
      lXlWrkSht.Range(xlColID(2)+xlRowID(11)).Value := FORMAT(lText008);
      lXlWrkSht.Range(xlColID(1)+xlRowID(12)).Value := FORMAT(lText001);
      lXlWrkSht.Range(xlColID(1)+xlRowID(13)).Value := FORMAT(lText002);
      lXlWrkSht.Range(xlColID(1)+xlRowID(14)).Value := FORMAT(lText003);
      lXlWrkSht.Range(xlColID(1)+xlRowID(15)).Value := FORMAT(lText004);
      lXlWrkSht.Range(xlColID(1)+xlRowID(16)).Value := FORMAT(lText005);
      lXlWrkSht.Range(xlColID(1)+xlRowID(17)).Value := FORMAT(lText006);
      lXlWrkSht.Range(xlColID(1)+xlRowID(18)).Value := FORMAT(lText009);

      //<<IMH02:ISAT.VA
      Get12MonthTitle(WORKDATE, l12MonthTitle);
      //>>IMH02:ISAT.VA

      FOR i := 2 TO 13 DO BEGIN
        GetBeginEndDate(i-1, WORKDATE, lBeginDate, lEndDate);
        ProviderScoringMgt.GetHistoryScoreByPeriod(pProviderCode,lBeginDate, lEndDate,
          lGlobalNote, lDisponibilityNote, lAverageCostScore, lAverageTimeScore, lTimeScore,
          lQualityControlScore, lClaimScore);

        //<<IMH02:ISAT.VA
        //  lXlWrkSht.Range(xlColID(i)+xlRowID(8)).Value := FORMAT(i-1);
        lXlWrkSht.Range(xlColID(i)+xlRowID(11)).Value := FORMAT(l12MonthTitle[i-1]);
        //>>IMH02:ISAT.VA
        lXlWrkSht.Range(xlColID(i)+xlRowID(12)).Value := FormatDec(lDisponibilityNote);
        lXlWrkSht.Range(xlColID(i)+xlRowID(13)).Value := FormatDec(lAverageCostScore);
        lXlWrkSht.Range(xlColID(i)+ xlRowID(14)).Value := FormatDec(lAverageTimeScore);
        lXlWrkSht.Range(xlColID(i)+xlRowID(15)).Value := FormatDec(lTimeScore);
        lXlWrkSht.Range(xlColID(i)+xlRowID(16)).Value := FormatDec(lQualityControlScore);
        lXlWrkSht.Range(xlColID(i)+xlRowID(17)).Value := FormatDec(lClaimScore);
        lXlWrkSht.Range(xlColID(i)+xlRowID(18)).Value := FormatDec(lGlobalNote);
      END;

      AddRangeAllBorder(lXlWrkSht, 1, 3, 2, 9);
      AddRangeAllBorder(lXlWrkSht, 1, 11, 13, 18);

      lXlWrkSht.Range(xlColID(2)+xlRowID(3)+':'+xlColID(2)+xlRowID(9)).HorizontalAlignment := -4108;
      lXlWrkSht.Range(xlColID(2)+xlRowID(3)+':'+xlColID(2)+xlRowID(9)).VerticalAlignment := -4108;
      lXlWrkSht.Range(xlColID(2)+xlRowID(11)+':'+xlColID(13)+xlRowID(18)).HorizontalAlignment := -4108;
      lXlWrkSht.Range(xlColID(2)+xlRowID(11)+':'+xlColID(13)+xlRowID(18)).VerticalAlignment := -4108;
      lXlWrkSht.Range(xlColID(1)+xlRowID(11)).HorizontalAlignment := -4108;
      lXlWrkSht.Range(xlColID(1)+xlRowID(11)).VerticalAlignment := -4108;

      lXlWrkSht.Range(xlColID(1)+ ':' + xlColID(1)).EntireColumn.AutoFit;
      lXlWrkSht.Range(xlColID(2)+ ':' + xlColID(13)).ColumnWidth := 10;
      lXlWrkSht.PageSetup.Zoom := FALSE;
    END;

    PROCEDURE CreateGraphicSheet@1100281001(VAR pXlWrkSht@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";pNbCorporate@1100281003 : Integer;pNbServOrderType@1100281002 : Integer;pNbSpec@1100281001 : Integer;pGlobalNote@1100281004 : Decimal);
    BEGIN
      //IMH01 isat.zw
      //Creation feuille repr‚sentation graphique
      CreateSheet(pXlWrkSht, Text036,Text036,'','');
      SetPrintPageParam(pXlWrkSht);

      //Tableau synthŠse activit‚
      CreateActivitySummaryGraphic(pXlWrkSht);
      //Ventilation des missions
      CreateMissionSummaryGraphic(pXlWrkSht, pNbCorporate, pNbServOrderType);
      //d‚lai moyen d'intervention
      CreateAvrgTimeGraphic(pXlWrkSht, pNbSpec);
      //respect des d‚lais
      CreateTimeGraphic(pXlWrkSht);
      //Cout moyen d'intervention
      CreateAvrgCostGraphic(pXlWrkSht, pNbSpec);
      //note globale
      CreateGlobalGraphic(pXlWrkSht, pGlobalNote);

      //Pied de page
      CreateGraphicSheetFooter(pXlWrkSht);
    END;

    PROCEDURE CreateActivitySummaryGraphic@1100281087(VAR pXlWrkSht@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet");
    VAR
      lCurrentXlWrkSht@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";
      lRowNo@1100281002 : Integer;
      i@1100281003 : Integer;
    BEGIN
      //IMH01 isat.zw
      //Creation graphique Tableau synthŠse activit‚

      lCurrentXlWrkSht := XlWrkBk.Worksheets.Item(FORMAT(Text030));
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(1)+':'+xlColID(20)+xlRowID(HeaderRowNb)).Copy;
      pXlWrkSht.Paste;

      //representation feuille de donn‚es
      lCurrentXlWrkSht.Range(xlColID(20)+xlRowID(1)).Value := '';
      lCurrentXlWrkSht.Range(xlColID(20)+xlRowID(2)).Value := '';

      lCurrentXlWrkSht.Range(xlColID(8)+xlRowID(1)).Value := lCurrentXlWrkSht.Range(xlColID(11)+xlRowID(1)).Value;
      lCurrentXlWrkSht.Range(xlColID(11)+xlRowID(1)).Value := '';
      lCurrentXlWrkSht.Range(xlColID(8)+xlRowID(2)).Value := lCurrentXlWrkSht.Range(xlColID(11)+xlRowID(2)).Value;
      lCurrentXlWrkSht.Range(xlColID(11)+xlRowID(2)).Value := '';
      //lCurrentXlWrkSht.Range(xlColID(17)+xlRowID(1)).Value := FORMAT(WORKDATE);

      //Entete feuille
      pXlWrkSht.Range(xlColID(1)+':'+xlColID(1)).ColumnWidth := 38;
      pXlWrkSht.Range(xlColID(1)+xlRowID(1)+':'+xlColID(10)+xlRowID(1)).Merge;
      pXlWrkSht.Range(xlColID(11)+xlRowID(1)+':'+xlColID(18)+xlRowID(1)).Merge;
      pXlWrkSht.Range(xlColID(2)+xlRowID(2)+':'+xlColID(10)+xlRowID(2)).Merge;
      pXlWrkSht.Range(xlColID(11)+xlRowID(2)+':'+xlColID(18)+xlRowID(2)).Merge;
      //pXlWrkSht.Range(xlRowID(1)+':'+xlRowID(1)).HorizonalAlignment := -4108;
      //pXlWrkSht.Range(xlRowID(1)+':'+xlRowID(1)).VerticalAlignment := -4108;

      FOR i := 3 TO HeaderRowNb - 11 DO
        pXlWrkSht.Range(xlColID(2)+xlRowID(i)+':'+xlColID(18)+xlRowID(i)).Merge;

      pXlWrkSht.Range(xlColID(1)+xlRowID(1)).Font.Size := 20;
      pXlWrkSht.Range(xlColID(1)+xlRowID(1)).Font.Bold := TRUE;

      lRowNo := HeaderRowNb - 10;

      //Cadre entete info prestataire
      AddRangeBorder(pXlWrkSht, 1, 1, 18, lRowNo-2);
      AddRangeBorder(pXlWrkSht, 20, 1, 20, 2);
      //Entete en jaune
      pXlWrkSht.Range(xlColID(1)+xlRowID(1)+':'+xlColID(18)+xlRowID(lRowNo-2)).Interior.Color := TitleColor;

      pXlWrkSht.Range(xlColID(14)+':'+xlColID(14)).ColumnWidth := 2;
      pXlWrkSht.Range(xlColID(2)+':'+xlColID(13)).ColumnWidth := 8;
      pXlWrkSht.Range(xlColID(17)+':'+xlColID(17)).ColumnWidth := 10;
      pXlWrkSht.Range(xlColID(18)+':'+xlColID(18)).ColumnWidth := 4;
      pXlWrkSht.Range(xlColID(19)+':'+xlColID(19)).ColumnWidth := 4;
      pXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo)).Font.Size := 14;
      pXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo)).Font.Underline := TRUE;
      pXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo)).Font.Italic := TRUE;
      pXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo)).Font.Bold := TRUE;
      pXlWrkSht.Range(xlRowID(lRowNo)+':'+xlRowID(lRowNo)).RowHeight := 30;
      pXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo)).VerticalAlignment := -4108;

      AddRangeBorder(pXlWrkSht, 1, lRowNo+1, 13, lRowNo+1);
      AddRangeBorder(pXlWrkSht, 1, lRowNo+2, 13, lRowNo+4);
      AddRangeBorder(pXlWrkSht, 1, lRowNo+4, 13, lRowNo+5);
      AddRangeBorder(pXlWrkSht, 1, lRowNo+5, 13, lRowNo+6);
      AddRangeBorder(pXlWrkSht, 1, lRowNo+6, 13, lRowNo+7);
      AddRangeBorder(pXlWrkSht, 1, lRowNo+7, 13, lRowNo+8);
      AddRangeBorder(pXlWrkSht, 1, lRowNo+8, 13, lRowNo+9);
      AddRangeBorder(pXlWrkSht, 1, lRowNo+9, 13, lRowNo+10);
      AddRangeBorder(pXlWrkSht, 1, lRowNo+1, 1, lRowNo+10);

      AddRangeBorder(pXlWrkSht, 15, lRowNo+1, 17, lRowNo+1);
      AddRangeBorder(pXlWrkSht, 15, lRowNo+2, 17, lRowNo+4);
      AddRangeBorder(pXlWrkSht, 15, lRowNo+4, 17, lRowNo+5);
      AddRangeBorder(pXlWrkSht, 15, lRowNo+5, 17, lRowNo+6);
      AddRangeBorder(pXlWrkSht, 15, lRowNo+6, 17, lRowNo+7);
      AddRangeBorder(pXlWrkSht, 15, lRowNo+7, 17, lRowNo+8);
      AddRangeBorder(pXlWrkSht, 15, lRowNo+8, 17, lRowNo+9);
      AddRangeBorder(pXlWrkSht, 15, lRowNo+9, 17, lRowNo+10);
      AddRangeBorder(pXlWrkSht, 15, lRowNo+1, 16, lRowNo+10);

      //Centrer les chiffres du tableau
      pXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo+1)+':'+xlColID(17)+xlRowID(lRowNo+1)).HorizontalAlignment := -4108;
      pXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo+1)+':'+xlColID(17)+xlRowID(lRowNo+1)).VerticalAlignment := -4108;

      pXlWrkSht.Range(xlColID(2)+xlRowID(lRowNo+2)+':'+xlColID(16)+xlRowID(lRowNo+10)).HorizontalAlignment := -4108;
      pXlWrkSht.Range(xlColID(2)+xlRowID(lRowNo+2)+':'+xlColID(16)+xlRowID(lRowNo+10)).VerticalAlignment := -4108;

      //toutes la ligne Total des interventions en gras
      pXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo+9)+':'+xlColID(17)+xlRowID(lRowNo+9)).Font.Bold := TRUE;
      pXlWrkSht.Range(xlRowID(lRowNo+5)+':'+xlRowID(lRowNo+6)).HorizontalAlignment := 1;
      pXlWrkSht.Range(xlRowID(lRowNo+5)+':'+xlRowID(lRowNo+6)).VerticalAlignment := 1;
      pXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+5)+':'+xlColID(17)+xlRowID(lRowNo+6)).HorizontalAlignment := -4108;
      pXlWrkSht.Range(xlColID(17)+xlRowID(lRowNo+5)+':'+xlColID(17)+xlRowID(lRowNo+6)).VerticalAlignment := -4108;

      //Entete en jaune
      pXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo+1)+':'+xlColID(13)+xlRowID(lRowNo+1)).Interior.Color := TitleColor;
      pXlWrkSht.Range(xlColID(15)+xlRowID(lRowNo+1)+':'+xlColID(17)+xlRowID(lRowNo+1)).Interior.Color := TitleColor;
      pXlWrkSht.Range(xlColID(1)+xlRowID(lRowNo+1)+':'+xlColID(1)+xlRowID(lRowNo+10)).Interior.Color := TitleColor;

      LastRowNb := HeaderRowNb + 1;
    END;

    PROCEDURE CreateMissionSummaryGraphic@1100281008(VAR pXlWrkSht@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";pNbCorporate@1100281002 : Integer;pNbServOrderType@1100281003 : Integer);
    VAR
      lCurrentXlWrkSht@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";
      lNbRow@1100281004 : Integer;
      lNbCol@1100281005 : Integer;
      lLastRowNb@1100281006 : Integer;
      lHight@1100281009 : Decimal;
      i@1100281007 : Integer;
      "1"@1100281008 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002443A-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Shapes";
    BEGIN
      //IMH01 isat.zw
      //Creation graphique Tableau ventilation mission

      lNbRow := pNbCorporate + 4;
      IF pNbServOrderType = 5 THEN
        lNbCol := 9
      ELSE
        lNbCol := pNbServOrderType + 3;
      lLastRowNb := pNbCorporate + 4;


      lCurrentXlWrkSht := XlWrkBk.Worksheets.Item(FORMAT(Text031));

      lCurrentXlWrkSht.Range(xlColID(1)+':'+xlColID(1)).ColumnWidth := 30;
      lCurrentXlWrkSht.Range(xlColID(2)+':'+xlColID(2)).ColumnWidth := 25;
      lCurrentXlWrkSht.Range(xlColID(3)+':'+xlColID(2+pNbServOrderType)).ColumnWidth := 10;
      lCurrentXlWrkSht.Range(xlColID(3)+xlRowID(2)+':'+xlColID(lNbCol)+xlRowID(lNbRow)).HorizontalAlignment := -4108;
      lCurrentXlWrkSht.Range(xlColID(3)+xlRowID(2)+':'+xlColID(lNbCol)+xlRowID(lNbRow)).VerticalAlignment := -4108;

      lCurrentXlWrkSht.Range(xlColID(lNbCol)+xlRowID(2)+':'+xlColID(lNbCol)+xlRowID(lNbRow)).Font.Bold := TRUE;
      lCurrentXlWrkSht.Range(xlRowID(lNbRow-1)+':'+xlRowID(lNbRow-1)).Font.Bold := TRUE;
      lCurrentXlWrkSht.Range(xlRowID(2)+':'+xlRowID(2)).WrapText := TRUE;
      //lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(1)+':'+xlColID(lNbCol)+xlRowID(1)).Merge;

      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lLastRowNb)+':'+xlColID(lNbCol)+xlRowID(lLastRowNb)).Merge;

      AddRangeBorder(lCurrentXlWrkSht, 1, 3, 2, lLastRowNb-1);
      FOR i := 3 TO lNbCol DO
        AddRangeBorder(lCurrentXlWrkSht, i, 2, i, lLastRowNb-1);
      AddRangeBorder(lCurrentXlWrkSht, 3, 2, lNbCol, 2);
      AddRangeBorder(lCurrentXlWrkSht, 1, lLastRowNb-1, lNbCol, lLastRowNb-1);

      //Titre
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Value := FORMAT(Text031);
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Size := 14;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Underline := TRUE;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Italic := TRUE;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Bold := TRUE;
      //pXlWrkSht.Range(xlRowID(LastRowNb+1)+':'+xlRowID(LastRowNb+1)).RowHeight := 30;
      //pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).VerticalAlignment := -4108;

      //Entete en jaune
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(2)+':'+xlColID(lNbCol)+xlRowID(lNbRow)).Interior.ThemeColor := 1;
      lCurrentXlWrkSht.Range(xlColID(3)+xlRowID(2)+':'+xlColID(lNbCol)+xlRowID(2)).Interior.Color := TitleColor;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(3)+':'+xlColID(2)+xlRowID(lNbRow-1)).Interior.Color := TitleColor;

      EVALUATE(lHight, FORMAT(pXlWrkSht.Range(xlColID(1)+xlRowID(lNbRow+1)).Top));;

      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(2)+':'+xlColID(lNbCol)+xlRowID(lNbRow)).CopyPicture;
      pXlWrkSht.Range(xlColID(3)+xlRowID(LastRowNb + 2)).Select;
      pXlWrkSht.Paste;

      lCurrentXlWrkSht.Range(xlColID(6)+':'+xlColID(6)).Font.Bold := FALSE;
      lCurrentXlWrkSht.Range(xlRowID(lNbRow)+':'+xlRowID(lNbRow)).Font.Bold := FALSE;

      lCurrentXlWrkSht.Range(xlColID(3)+xlRowID(2)+':'+xlColID(lNbCol)+xlRowID(2)).Interior.Pattern := -4142;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(3)+':'+xlColID(2)+xlRowID(lNbRow-1)).Interior.Pattern := -4142;
      lCurrentXlWrkSht.Range(xlColID(6)+xlRowID(2)+':'+xlColID(lNbCol)+xlRowID(lNbRow)).Font.Bold := FALSE;
      lCurrentXlWrkSht.Range(xlRowID(lNbRow-1)+':'+xlRowID(lNbRow-1)).Font.Bold := FALSE;

      lCurrentXlWrkSht.PageSetup.LeftHeader := '';

      LastRowNb := GetLastRowNo(pXlWrkSht, LastRowNb + 2, lHight);
    END;

    PROCEDURE CreateAvrgTimeGraphic@1100281129(VAR pXlWrkSht@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";pNbSpec@1100281003 : Integer);
    VAR
      lCurrentXlWrkSht@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";
      lXlShape@1100281005 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024439-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Shape";
      lXlChart@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart";
      lXlRange@1100281004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";
      lXlAxis@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020848-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Axis";
      lTop@1100281006 : Decimal;
      lTop2@1100281007 : Decimal;
      lLeft@1100281008 : Decimal;
      lLeft2@1100281009 : Decimal;
      lText001@1000000000 : TextConst 'ENU=Nbre days;FRA=Nbre de jours';
    BEGIN
      //IMH01 isat.zw
      //Creation graphique delai moyen

      lCurrentXlWrkSht := XlWrkBk.Worksheets.Item(FORMAT(Text032));

      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Value := FORMAT(Text032);
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Size := 14;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Underline := TRUE;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Italic := TRUE;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Bold := TRUE;
      pXlWrkSht.Range(xlRowID(LastRowNb+1)+':'+xlRowID(LastRowNb+1)).RowHeight := 30;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).VerticalAlignment := -4108;

      //pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+1)).Value := FORMAT(STRSUBSTNO(Text038, ProviderMainSpecDesc));
      pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+1)+':'+xlColID(16)+xlRowID(LastRowNb+1)).Merge;
      pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+1)+':'+xlColID(2)+xlRowID(LastRowNb+1)).HorizontalAlignment := -4108;
      pXlWrkSht.Range(xlColID(2)+xlRowID(LastRowNb+1)+':'+xlColID(2)+xlRowID(LastRowNb+1)).VerticalAlignment := -4108;

      //Graphe delai par specialite
      lXlShape := pXlWrkSht.Shapes.AddChart;
      lXlChart := lXlShape.Chart;
      lXlChart.ChartType := 51;
      lXlRange := lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(3)+':'+xlColID(3)+xlRowID(pNbSpec+3));
      lXlChart.SetSourceData(lXlRange);
      lXlAxis := lXlChart.Axes(2);
      lXlAxis.HasTitle := TRUE;
      lXlAxis.AxisTitle.Text := FORMAT(lText001);

      //lXlShape.ScaleHeight(0.7,0);
      //lXlShape.ScaleWidth(0.7,0);

      lXlShape.Top := pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+2)).Top;
      lXlShape.Left := pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+2)).Left;

      EVALUATE(lTop, FORMAT(pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+2)).Top));
      EVALUATE(lLeft, FORMAT(pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+2)).Left));
      EVALUATE(lTop2, FORMAT(pXlWrkSht.Range(xlColID(6)+xlRowID(LastRowNb+14)).Top));
      EVALUATE(lLeft2, FORMAT(pXlWrkSht.Range(xlColID(6)+xlRowID(LastRowNb+14)).Left));

      lXlShape.Height := lTop2 - lTop;
      lXlShape.Width := lLeft2 - lLeft;

      //Graphe delai 12 mois
      lXlShape := pXlWrkSht.Shapes.AddChart;
      lXlChart := lXlShape.Chart;
      lXlChart.ChartType := 4;
      lXlRange := lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(pNbSpec+5)+':'+xlColID(13)+xlRowID(pNbSpec+7));
      lXlChart.SetSourceData(lXlRange);
      lXlAxis := lXlChart.Axes(2);
      lXlAxis.HasTitle := TRUE;
      lXlAxis.AxisTitle.Text := FORMAT(lText001);

      //lXlShape.ScaleHeight(0.7,0);
      //lXlShape.ScaleWidth(0.6,0);

      lXlShape.Top := pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+2)).Top;
      lXlShape.Left := pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+2)).Left;
      EVALUATE(lTop, FORMAT(pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+2)).Top));
      EVALUATE(lLeft, FORMAT(pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+2)).Left));
      EVALUATE(lTop2, FORMAT(pXlWrkSht.Range(xlColID(17)+xlRowID(LastRowNb+14)).Top));
      EVALUATE(lLeft2, FORMAT(pXlWrkSht.Range(xlColID(17)+xlRowID(LastRowNb+14)).Left));

      lXlShape.Height := lTop2 - lTop;
      lXlShape.Width := lLeft2 - lLeft;

      //tabeau cout moyen
      CreateAvrgCostTableGraphic(pXlWrkSht, LastRowNb+15, pNbSpec,0);
    END;

    PROCEDURE CreateAvrgCostGraphic@1100281039(VAR pXlWrkSht@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";pNbSpec@1100281003 : Integer);
    VAR
      lCurrentXlWrkSht@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";
      lXlShape@1100281005 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024439-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Shape";
      lXlChart@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart";
      lXlRange@1100281004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";
      lXlAxis@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020848-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Axis";
      lTop@1100281006 : Decimal;
      lTop2@1100281007 : Decimal;
      lLeft@1100281008 : Decimal;
      lLeft2@1100281009 : Decimal;
      lText001@1000000001 : TextConst 'ENU=Average Cost (°);FRA=Co–t moyen (°)';
    BEGIN
      //IMH01 isat.zw
      //Creation graphique cout moyen

      lCurrentXlWrkSht := XlWrkBk.Worksheets.Item(FORMAT(Text033));

      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Value := FORMAT(Text033);
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Size := 14;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Underline := TRUE;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Italic := TRUE;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Bold := TRUE;
      pXlWrkSht.Range(xlRowID(LastRowNb+1)+':'+xlRowID(LastRowNb+1)).RowHeight := 30;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).VerticalAlignment := -4108;

      //pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+1)).Value := FORMAT(STRSUBSTNO(Text038, ProviderMainSpecDesc));
      pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+1)+':'+xlColID(16)+xlRowID(LastRowNb+1)).Merge;
      pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+1)+':'+xlColID(2)+xlRowID(LastRowNb+1)).HorizontalAlignment := -4108;
      pXlWrkSht.Range(xlColID(2)+xlRowID(LastRowNb+1)+':'+xlColID(2)+xlRowID(LastRowNb+1)).VerticalAlignment := -4108;

      //Graphe delai par specialite
      lXlShape := pXlWrkSht.Shapes.AddChart;
      lXlChart := lXlShape.Chart;
      lXlChart.ChartType := 51;
      lXlRange := lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(3)+':'+xlColID(3)+xlRowID(pNbSpec+3));
      lXlChart.SetSourceData(lXlRange);
      lXlAxis := lXlChart.Axes(2);
      lXlAxis.HasTitle := TRUE;
      lXlAxis.AxisTitle.Text := FORMAT(lText001);

      //lXlShape.ScaleHeight(0.7,0);
      //lXlShape.ScaleWidth(0.7,0);

      lXlShape.Top := pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+2)).Top;
      lXlShape.Left := pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+2)).Left;

      EVALUATE(lTop, FORMAT(pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+2)).Top));
      EVALUATE(lLeft, FORMAT(pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+2)).Left));
      EVALUATE(lTop2, FORMAT(pXlWrkSht.Range(xlColID(6)+xlRowID(LastRowNb+14)).Top));
      EVALUATE(lLeft2, FORMAT(pXlWrkSht.Range(xlColID(6)+xlRowID(LastRowNb+14)).Left));

      lXlShape.Height := lTop2 - lTop;
      lXlShape.Width := lLeft2 - lLeft;

      //Graphe delai 12 mois
      lXlShape := pXlWrkSht.Shapes.AddChart;
      lXlChart := lXlShape.Chart;
      lXlChart.ChartType := 4;
      lXlRange := lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(pNbSpec+5)+':'+xlColID(13)+xlRowID(pNbSpec+7));
      lXlChart.SetSourceData(lXlRange);
      lXlAxis := lXlChart.Axes(2);
      lXlAxis.HasTitle := TRUE;
      lXlAxis.AxisTitle.Text := FORMAT(lText001);

      //lXlShape.ScaleHeight(0.7,0);
      //lXlShape.ScaleWidth(0.6,0);

      lXlShape.Top := pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+2)).Top;
      lXlShape.Left := pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+2)).Left;
      EVALUATE(lTop, FORMAT(pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+2)).Top));
      EVALUATE(lLeft, FORMAT(pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+2)).Left));
      EVALUATE(lTop2, FORMAT(pXlWrkSht.Range(xlColID(17)+xlRowID(LastRowNb+14)).Top));
      EVALUATE(lLeft2, FORMAT(pXlWrkSht.Range(xlColID(17)+xlRowID(LastRowNb+14)).Left));

      lXlShape.Height := lTop2 - lTop;
      lXlShape.Width := lLeft2 - lLeft;

      //tabeau cout moyen
      CreateAvrgCostTableGraphic(pXlWrkSht, LastRowNb+15, pNbSpec,1);
    END;

    PROCEDURE CreateAvrgCostTableGraphic@1100281167(VAR pXlWrkSht@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";pRowNo@1100281003 : Integer;pNbSpec@1100281000 : Integer;pType@1100281007 : 'Time,Cost');
    VAR
      lCurrentXlWrkSht@1100281008 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";
      lLastRowNb@1100281005 : Integer;
      lHight@1100281002 : Decimal;
      lHight2@1100281006 : Decimal;
      lTop@1100281011 : Decimal;
      lTop2@1100281010 : Decimal;
      i@1100281004 : Integer;
      lAddLine@1000000000 : Integer;
    BEGIN
      //IMH01 isat.zw
      lAddLine := 1;

      lLastRowNb := pNbSpec + 9;
      CASE pType OF
        pType::Cost  : lCurrentXlWrkSht := XlWrkBk.Worksheets.Item(FORMAT(Text033));
        pType::Time  : lCurrentXlWrkSht := XlWrkBk.Worksheets.Item(FORMAT(Text032));
      END;

      //cout moyen / specialite
      lCurrentXlWrkSht.Range(xlColID(1)+':'+xlColID(1)).ColumnWidth := 15;
      lCurrentXlWrkSht.Range(xlColID(2)+':'+xlColID(14)).ColumnWidth := 11;
      //lCurrentXlWrkSht.Range(xlRowID(pNbSpec+5)+':'+xlRowID(pNbSpec+5)).RowHeight := 32.5;
      lCurrentXlWrkSht.Range(xlRowID(pNbSpec+9)+':'+xlRowID(pNbSpec+9)).WrapText := TRUE;

      lCurrentXlWrkSht.Range(xlRowID(pNbSpec+9)+':'+xlRowID(pNbSpec+9)).HorizontalAlignment := -4108;
      lCurrentXlWrkSht.Range(xlRowID(pNbSpec+9)+':'+xlRowID(pNbSpec+9)).VerticalAlignment := -4108;

      lCurrentXlWrkSht.Range(xlColID(2)+':'+xlColID(14)).HorizontalAlignment := -4108;
      IF pType = pType::Cost THEN BEGIN
        lCurrentXlWrkSht.Range(xlRowID(4)+':'+xlRowID(pNbSpec+4)).HorizontalAlignment := 1;
        lCurrentXlWrkSht.Range(xlRowID(pNbSpec+6)+':'+xlRowID(pNbSpec+7)).HorizontalAlignment := 1;
        lCurrentXlWrkSht.Range(xlColID(2)+xlRowID(pNbSpec+10)+':'+xlColID(3)+xlRowID(pNbSpec+pNbSpec+9)).HorizontalAlignment := 1;
        lCurrentXlWrkSht.Range(xlRowID(pNbSpec+pNbSpec+12)+':'+xlRowID(pNbSpec+pNbSpec+12)).HorizontalAlignment := 1;
      END;

      //Presentation : cadre + centrer tous les chiffre
      AddRangeAllBorder(lCurrentXlWrkSht, 1, 3, 3, pNbSpec+3);
      AddRangeAllBorder(lCurrentXlWrkSht, 1, pNbSpec+5, 13, pNbSpec+7);
      AddRangeAllBorder(lCurrentXlWrkSht, 1, pNbSpec+9, 5, pNbSpec+pNbSpec+9);
      AddRangeAllBorder(lCurrentXlWrkSht, 1, pNbSpec+pNbSpec+11, 14, pNbSpec+pNbSpec+14);
      //lCurrentXlWrkSht.Range(xlColID(4)+xlRowID(pNbSpec+9)+':'+xlColID(4)+xlRowID(pNbSpec+pNbSpec+8)).HorizontalAlignment := 1;

      //Entete en jaune
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(pNbSpec+8+lAddLine)+':'
        +xlColID(5)+xlRowID(pNbSpec+pNbSpec+8+lAddLine)).Interior.ThemeColor := 1;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+pNbSpec+pNbSpec+10)+
        ':'+xlColID(14)+xlRowID(lAddLine+pNbSpec+pNbSpec+13)).Interior.ThemeColor := 1;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+pNbSpec+8)+':'
        +xlColID(5)+xlRowID(lAddLine+pNbSpec+8)).Interior.Color := TitleColor;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+pNbSpec+pNbSpec+10)+':'
        +xlColID(14)+xlRowID(lAddLine+pNbSpec+pNbSpec+10)).Interior.Color
        := TitleColor;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+pNbSpec+pNbSpec+11)+':'
        +xlColID(1)+xlRowID(lAddLine+pNbSpec+pNbSpec+13)).Interior.Color
        := TitleColor;


      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+pNbSpec+8)+':'+xlColID(5)+xlRowID(lAddLine+pNbSpec+pNbSpec+8)).CopyPicture;
      pXlWrkSht.Range(xlColID(1)+xlRowID(pRowNo)).Select;
      pXlWrkSht.Paste;

      lCurrentXlWrkSht.Range(xlColID(2)+':'+xlColID(14)).ColumnWidth := 7.8;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+pNbSpec+pNbSpec+10)).HorizontalAlignment := -4108;
      lCurrentXlWrkSht.Range(xlRowID(lAddLine+pNbSpec+pNbSpec+12)+':'+xlRowID(lAddLine+pNbSpec+pNbSpec+12)).Font.Bold := TRUE;

      //cout moyen 12 mois
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+pNbSpec+pNbSpec+10)+':'
        +xlColID(14)+xlRowID(lAddLine+pNbSpec+pNbSpec+13)).CopyPicture;
      pXlWrkSht.Range(xlColID(6)+xlRowID(pRowNo)).Select;
      pXlWrkSht.Paste;

      EVALUATE(lTop, FORMAT(lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+pNbSpec+8)).Top));
      EVALUATE(lTop2, FORMAT(lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+pNbSpec+pNbSpec+9)).Top));
      lHight := lTop2 - lTop;

      EVALUATE(lTop, FORMAT(lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+pNbSpec+pNbSpec+10)).Top));
      EVALUATE(lTop2, FORMAT(lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+pNbSpec+pNbSpec+14)).Top));
      lHight2 := lTop2 - lTop;

      IF lHight > lHight2 THEN
        LastRowNb := GetLastRowNo(pXlWrkSht, pRowNo, lHight)
      ELSE
        LastRowNb := GetLastRowNo(pXlWrkSht, pRowNo , lHight2);

      lCurrentXlWrkSht.Range(xlColID(4)+':'+xlColID(14)).ColumnWidth := 10;
      lCurrentXlWrkSht.Range(xlRowID(lAddLine+pNbSpec+pNbSpec+12)+':'+xlRowID(lAddLine+pNbSpec+pNbSpec+12)).Font.Bold := FALSE;
      //Entete en jaune
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+pNbSpec+8)+':'
        +xlColID(5)+xlRowID(lAddLine+pNbSpec+8)).Interior.Pattern := -4142;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+pNbSpec+pNbSpec+10)+':'
        +xlColID(14)+xlRowID(lAddLine+pNbSpec+pNbSpec+10)).Interior.Pattern := -4142;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+pNbSpec+pNbSpec+11)+':'
        +xlColID(1)+xlRowID(lAddLine+pNbSpec+pNbSpec+13)).Interior.Pattern := -4142;

      lCurrentXlWrkSht.Range(xlRowID(3)+':'+xlRowID(3)).HorizontalAlignment := -4108;
      lCurrentXlWrkSht.Range(xlRowID(3)+':'+xlRowID(3)).VerticalAlignment := -4160;
      lCurrentXlWrkSht.Range(xlRowID(3)+':'+xlRowID(3)).WrapText := TRUE;
      lCurrentXlWrkSht.Range(xlRowID(3)+':'+xlRowID(3)).RowHeight := 39;

      lCurrentXlWrkSht.PageSetup.LeftHeader := '';
    END;

    PROCEDURE CreateTimeGraphic@1100281015(VAR pXlWrkSht@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet");
    VAR
      lCurrentXlWrkSht@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";
      lXlShape@1100281005 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024439-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Shape";
      lXlChart@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart";
      lXlRange@1100281004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";
      lXlAxis@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020848-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Axis";
      lTop@1100281006 : Decimal;
      lTop2@1100281007 : Decimal;
      lLeft@1100281008 : Decimal;
      lLeft2@1100281009 : Decimal;
      i@1100281003 : Integer;
      lText001@1000000001 : TextConst 'ENU=Note;FRA=Note';
      lAddLine@1000000002 : Integer;
    BEGIN
      //IMH01 isat.zw
      //Creation graphique respect des delais
      lAddLine := 1;
      lCurrentXlWrkSht := XlWrkBk.Worksheets.Item(FORMAT(Text034));

      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Value := FORMAT(Text034);
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Size := 14;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Underline := TRUE;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Italic := TRUE;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Bold := TRUE;
      pXlWrkSht.Range(xlRowID(LastRowNb+1)+':'+xlRowID(LastRowNb+1)).RowHeight := 30;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).VerticalAlignment := -4108;

      //Graphe note respect des delai 12 mois
      lXlShape := pXlWrkSht.Shapes.AddChart;
      lXlChart := lXlShape.Chart;
      lXlChart.ChartType := 4;
      //<<IMH03.ST
      //lXlRange := lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(2)+':'+xlColID(13)+xlRowID(2));
      lXlRange := lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+2)+':'+xlColID(13)+xlRowID(lAddLine+3));
      //>>IMH03.ST
      lXlChart.SetSourceData(lXlRange);
      lXlChart.ChartTitle.Delete;
      lXlChart.Legend.Delete;
      lXlAxis := lXlChart.Axes(2);
      lXlAxis.HasTitle := TRUE;
      lXlAxis.AxisTitle.Text := FORMAT(lText001);

      //Cadrer les tableau
      AddRangeAllBorder(lCurrentXlWrkSht, 1, 3, 13, 4);
      //Center les chiffres
      lCurrentXlWrkSht.Range(xlRowID(lAddLine+2)+':'+xlRowID(lAddLine+2)).HorizontalAlignment := -4108;
      lCurrentXlWrkSht.Range(xlRowID(lAddLine+2)+':'+xlRowID(lAddLine+2)).VerticalAlignment := -4108;
      lCurrentXlWrkSht.Range(xlColID(2)+':'+xlColID(14)).HorizontalAlignment := -4108;
      lCurrentXlWrkSht.Range(xlColID(2)+':'+xlColID(14)).VerticalAlignment := -4108;


      lXlShape.Top := pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+2)).Top;
      lXlShape.Left := pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+2)).Left;
      EVALUATE(lTop, FORMAT(pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+2)).Top));
      EVALUATE(lLeft, FORMAT(pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+2)).Left));
      EVALUATE(lTop2, FORMAT(pXlWrkSht.Range(xlColID(6)+xlRowID(LastRowNb+14)).Top));
      EVALUATE(lLeft2, FORMAT(pXlWrkSht.Range(xlColID(6)+xlRowID(LastRowNb+14)).Left));

      lXlShape.Height := lTop2 - lTop;
      lXlShape.Width := lLeft2 - lLeft;

      //Nb intervention par mois
      lCurrentXlWrkSht.Range(xlColID(1)+':'+xlColID(1)).ColumnWidth := 15;
      lCurrentXlWrkSht.Range(xlColID(2)+':'+xlColID(13)).ColumnWidth := 7.8;
      lCurrentXlWrkSht.Range(xlColID(14)+':'+xlColID(14)).ColumnWidth := 7.8;
      lCurrentXlWrkSht.Range(xlRowID(lAddLine+5)+':'+xlRowID(lAddLine+5)).HorizontalAlignment := -4108;
      lCurrentXlWrkSht.Range(xlRowID(lAddLine+5)+':'+xlRowID(lAddLine+5)).VerticalAlignment := -4108;
      AddRangeAllBorder(lCurrentXlWrkSht, 1, 6, 14, 7);

      //Entete en jaune
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+5)+':'+xlColID(14)+xlRowID(lAddLine+6)).Interior.ThemeColor := 1;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+5)+':'+xlColID(14)+xlRowID(lAddLine+5)).Interior.Color := TitleColor;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+6)).Interior.Color := TitleColor;

      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+5)+':'+xlColID(14)+xlRowID(lAddLine+6)).CopyPicture;
      pXlWrkSht.Range(xlColID(6)+xlRowID(LastRowNb+4)).Select;
      pXlWrkSht.Paste;
      lCurrentXlWrkSht.Range(xlColID(2)+':'+xlColID(13)).ColumnWidth := 6.88;
      lCurrentXlWrkSht.Range(xlColID(14)+':'+xlColID(14)).ColumnWidth := 10;
      //Entete en jaune
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+5)+':'+xlColID(14)+xlRowID(lAddLine+5)).Interior.Pattern := -4142;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(lAddLine+6)).Interior.Pattern := -4142;

      lCurrentXlWrkSht.PageSetup.LeftHeader := '';

      LastRowNb := LastRowNb+14;
    END;

    PROCEDURE CreateGlobalGraphic@1100281006(VAR pXlWrkSht@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";pGlobalNote@1100281011 : Decimal);
    VAR
      lCurrentXlWrkSht@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";
      lXlShape@1100281005 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024439-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Shape";
      lXlChart@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart";
      lXlRange@1100281004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";
      lTop@1100281006 : Decimal;
      lTop2@1100281007 : Decimal;
      lLeft@1100281008 : Decimal;
      lLeft2@1100281009 : Decimal;
      lText001@1100281003 : TextConst 'ENU=Last Scoring;FRA=Dernier Scoring';
      lText002@1100281010 : TextConst 'ENU=Global Note : %1;FRA=Note globale : %1';
      lText003@1000000000 : TextConst 'ENU=Global Note;FRA=Note globale';
    BEGIN
      //IMH01 isat.zw
      //Creation graphique note globale

      lCurrentXlWrkSht := XlWrkBk.Worksheets.Item(FORMAT(Text035));
      lCurrentXlWrkSht.Range(xlColID(2)+ ':' + xlColID(13)).ColumnWidth := 7.8;

      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Value := FORMAT(lText003);
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Size := 14;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Underline := TRUE;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Italic := TRUE;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).Font.Bold := TRUE;
      pXlWrkSht.Range(xlRowID(LastRowNb+1)+':'+xlRowID(LastRowNb+1)).RowHeight := 30;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+1)).VerticalAlignment := -4108;

      //Graphe delai par specialite
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+2)).Value := FORMAT(lText001);
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+2)).Font.Size := 12;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+2)).Font.Bold := TRUE;
      pXlWrkSht.Range(xlRowID(LastRowNb+2)+':'+xlRowID(LastRowNb+2)).RowHeight := 30;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+2)).VerticalAlignment := -4108;
      pXlWrkSht.Range(xlColID(2)+xlRowID(LastRowNb+2)).VerticalAlignment := -4108;

      pXlWrkSht.Range(xlColID(2)+xlRowID(LastRowNb+2)).Value := FORMAT(STRSUBSTNO(lText002, FormatDec(pGlobalNote)));
      pXlWrkSht.Range(xlColID(2)+xlRowID(LastRowNb+2)).Font.Size := 12;
      pXlWrkSht.Range(xlColID(2)+xlRowID(LastRowNb+2)).Font.Bold := TRUE;

      pXlWrkSht.Range(xlColID(2)+xlRowID(LastRowNb+2)+':'+xlColID(4)+xlRowID(LastRowNb+2)).Merge;
      lXlShape := pXlWrkSht.Shapes.AddChart;
      lXlChart := lXlShape.Chart;
      lXlChart.ChartType := -4151;
      lXlRange := lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(3)+':'+xlColID(2)+xlRowID(9));
      lXlChart.SetSourceData(lXlRange);
      lXlChart.Legend.Delete;
      lXlChart.ChartTitle.Delete;

      lXlShape.Top := pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+3)).Top;
      lXlShape.Left := pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+3)).Left;

      EVALUATE(lTop, FORMAT(pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+3)).Top));
      EVALUATE(lLeft, FORMAT(pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+3)).Left));
      EVALUATE(lTop2, FORMAT(pXlWrkSht.Range(xlColID(6)+xlRowID(LastRowNb+15)).Top));
      EVALUATE(lLeft2, FORMAT(pXlWrkSht.Range(xlColID(6)+xlRowID(LastRowNb+15)).Left));

      lXlShape.Height := lTop2 - lTop;
      lXlShape.Width := lLeft2 - lLeft;

      //Graphe delai 12 mois
      lXlShape := pXlWrkSht.Shapes.AddChart;
      lXlChart := lXlShape.Chart;
      lXlChart.ChartType := 65;
      lXlRange := lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(11)+':'+xlColID(14)+xlRowID(18));
      lXlChart.SetSourceData(lXlRange);

      lXlShape.Top := pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+2)).Top;
      lXlShape.Left := pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+2)).Left;
      EVALUATE(lTop, FORMAT(pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+2)).Top));
      EVALUATE(lLeft, FORMAT(pXlWrkSht.Range(xlColID(7)+xlRowID(LastRowNb+1)).Left));
      EVALUATE(lTop2, FORMAT(pXlWrkSht.Range(xlColID(17)+xlRowID(LastRowNb+15)).Top));
      EVALUATE(lLeft2, FORMAT(pXlWrkSht.Range(xlColID(17)+xlRowID(LastRowNb+15)).Left));

      lXlShape.Height := lTop2 - lTop;
      lXlShape.Width := lLeft2 - lLeft;

      //Entete en jaune
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(3)+':'+xlColID(2)+xlRowID(9)).Interior.ThemeColor := 1;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(11)+':'+xlColID(13)+xlRowID(9)).Interior.ThemeColor := 1;
      lCurrentXlWrkSht.Range(xlColID(2)+xlRowID(3)).Interior.Color := TitleColor;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(4)+':'+xlColID(1)+xlRowID(9)).Interior.Color := TitleColor;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(11)+':'+xlColID(13)+xlRowID(11)).Interior.Color := TitleColor;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(11)+':'+xlColID(1)+xlRowID(18)).Interior.Color := TitleColor;


      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(3)+':'+xlColID(2)+xlRowID(9)).CopyPicture;
      pXlWrkSht.Range(xlColID(1)+xlRowID(LastRowNb+16)).Select;
      pXlWrkSht.Paste;


      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(11)+':'+xlColID(13)+xlRowID(18)).CopyPicture;
      pXlWrkSht.Range(xlColID(6)+xlRowID(LastRowNb+16)).Select;
      pXlWrkSht.Paste;

      lCurrentXlWrkSht.Range(xlColID(2)+ ':' + xlColID(13)).ColumnWidth := 7;
      lCurrentXlWrkSht.Range(xlColID(13)+ ':' + xlColID(13)).ColumnWidth := 10;
      //Entete en jaune
      lCurrentXlWrkSht.Range(xlColID(2)+xlRowID(3)).Interior.Pattern := -4142;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(4)+':'+xlColID(1)+xlRowID(9)).Interior.Pattern := -4142;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(11)+':'+xlColID(13)+xlRowID(11)).Interior.Pattern := -4142;
      lCurrentXlWrkSht.Range(xlColID(1)+xlRowID(11)+':'+xlColID(1)+xlRowID(18)).Interior.Pattern := -4142;

      lCurrentXlWrkSht.PageSetup.LeftHeader := '';
    END;

    PROCEDURE CreateGraphicSheetFooter@1100281012(VAR pXlWrkSht@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet");
    VAR
      lFolderManagement@1100281001 : Codeunit 50004;
      lFileCompletNameBuffer@1100281002 : Text[1024];
      lTextFooter@1100281003 : Text[1024];
      lChar10@1100281004 : Char;
      lChar13@1100281005 : Char;
      lTempPath@1100281006 : Text[1024];
    BEGIN
      CompanyInfo.GET;
      CompanyInfo.CALCFIELDS("DPR Picture");
      CompanyInfo.TESTFIELD("Global Temp Root Path");
      lTempPath := CompanyInfo."Global Temp Root Path";
      IF NOT (lTempPath[STRLEN(lTempPath)] IN ['/', '\']) THEN
        lTempPath := lTempPath + '\';
      lTempPath := lTempPath + USERID + '\';
      lFolderManagement.CreateCompletePath(lTempPath, TRUE);

      lFileCompletNameBuffer := lTempPath + 'logIMH.bmp';
      CompanyInfo."DPR Picture".EXPORT(lFileCompletNameBuffer);

      pXlWrkSht.PageSetup.LeftFooterPicture.Filename := FORMAT(lFileCompletNameBuffer);

      lChar10 := 10;
      lTextFooter := STRSUBSTNO(Text040, CompanyInfo.Name, CompanyInfo.Address, CompanyInfo."Address 2",
                      CompanyInfo."Post Code", CompanyInfo.City) + FORMAT(lChar10) +
                      STRSUBSTNO(Text041, CompanyInfo."Stock Capital") + FORMAT(lChar10) +
                      STRSUBSTNO(Text042, CompanyInfo."Trade Register", DELCHR(CompanyInfo."Registration No.", '=', ' '),
                      CompanyInfo."DPR Phone No.", CompanyInfo."DPR Fax No.", Text043);

      pXlWrkSht.PageSetup.LeftFooter := '&G';
      pXlWrkSht.PageSetup.CenterFooter := FORMAT(lTextFooter);

      IF ERASE(lFileCompletNameBuffer) THEN;
    END;

    LOCAL PROCEDURE GetCurrYearBeginEndDate@1100281029(pPeriodEndDate@1100281003 : Date;VAR pBeginDate@1100281001 : Date;VAR pEndDate@1100281000 : Date);
    VAR
      lCurrentMonth@1100281004 : Integer;
      lCurrentYear@1100281006 : Integer;
    BEGIN
      //1-12 : periode d'un mois, 13  : periode ann‚e N-1
      lCurrentMonth := DATE2DMY(pPeriodEndDate, 2);
      lCurrentYear := DATE2DMY(pPeriodEndDate, 3);

      IF lCurrentMonth = 12 THEN BEGIN
        pBeginDate := DMY2DATE(1, 1, lCurrentYear);
        pEndDate := DMY2DATE(31, 12, lCurrentYear);
      END ELSE BEGIN
        pBeginDate := DMY2DATE(1, lCurrentMonth + 1, lCurrentYear - 1);
        pEndDate := DMY2DATE(1, lCurrentMonth+1, lCurrentYear)-1;
      END;
    END;

    PROCEDURE GetLastRowNo@1100281021(VAR pXlWrkSht@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";pRowNo@1100281001 : Integer;pHight@1100281002 : Decimal) rNewRowNo : Integer;
    VAR
      lTop@1100281003 : Decimal;
      lTop2@1100281004 : Decimal;
    BEGIN
      EVALUATE(lTop, FORMAT(pXlWrkSht.Range(xlColID(1)+xlRowID(pRowNo)).Top));
      rNewRowNo := pRowNo;
      WHILE lTop2 < lTop + pHight DO BEGIN
        rNewRowNo += 1;
        EVALUATE(lTop2, FORMAT(pXlWrkSht.Range(xlColID(1)+xlRowID(rNewRowNo)).Top));
      END;
    END;

    PROCEDURE AddRangeBorder@1100281054(VAR pXlWrkSht@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";pFromColID@1100281001 : Integer;pFromRowID@1100281002 : Integer;pToColID@1100281008 : Integer;pToRowID@1100281007 : Integer);
    VAR
      lXlEdgeBottom@1100281003 : Integer;
      lXlEdgeTop@1100281004 : Integer;
      lXlEdgeLeft@1100281005 : Integer;
      lXlEdgeRight@1100281006 : Integer;
      lRangeID@1100281009 : Text[50];
    BEGIN
      lXlEdgeBottom := 9;
      lXlEdgeTop := 8;
      lXlEdgeLeft := 7;
      lXlEdgeRight := 10;
      lRangeID := xlColID(pFromColID) + xlRowID(pFromRowID) + ':' + xlColID(pToColID) + xlRowID(pToRowID);
      pXlWrkSht.Range(lRangeID).Borders.Item(lXlEdgeLeft).LineStyle := 1;
      pXlWrkSht.Range(lRangeID).Borders.Item(lXlEdgeRight).LineStyle := 1;
      pXlWrkSht.Range(lRangeID).Borders.Item(lXlEdgeTop).LineStyle := 1;
      pXlWrkSht.Range(lRangeID).Borders.Item(lXlEdgeBottom).LineStyle := 1;
    END;

    PROCEDURE AddRangeAllBorder@1000000017(VAR pXlWrkSht@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";pFromColID@1100281001 : Integer;pFromRowID@1100281002 : Integer;pToColID@1100281008 : Integer;pToRowID@1100281007 : Integer);
    VAR
      lXlEdgeBottom@1100281003 : Integer;
      lXlEdgeTop@1100281004 : Integer;
      lXlEdgeLeft@1100281005 : Integer;
      lXlEdgeRight@1100281006 : Integer;
      lRangeID@1100281009 : Text[50];
      lxlInsideVertical@1000000000 : Integer;
      lxlInsideHorizontal@1000000001 : Integer;
      lxlNone@1000000002 : Integer;
    BEGIN
      lXlEdgeBottom := 9;
      lXlEdgeTop := 8;
      lXlEdgeLeft := 7;
      lXlEdgeRight := 10;
      lxlInsideVertical := 11;
      lxlInsideHorizontal := 12;
      lxlNone := -4142;

      lRangeID := xlColID(pFromColID) + xlRowID(pFromRowID) + ':' + xlColID(pToColID) + xlRowID(pToRowID);
      pXlWrkSht.Range(lRangeID).Borders.LineStyle := lxlNone;
      pXlWrkSht.Range(lRangeID).Borders.LineStyle := lxlNone;

      pXlWrkSht.Range(lRangeID).Borders.Item(lXlEdgeLeft).LineStyle := 1;
      pXlWrkSht.Range(lRangeID).Borders.Item(lXlEdgeRight).LineStyle := 1;
      pXlWrkSht.Range(lRangeID).Borders.Item(lXlEdgeTop).LineStyle := 1;
      pXlWrkSht.Range(lRangeID).Borders.Item(lXlEdgeBottom).LineStyle := 1;
      pXlWrkSht.Range(lRangeID).Borders.Item(lxlInsideVertical).LineStyle := 1;
      pXlWrkSht.Range(lRangeID).Borders.Item(lxlInsideHorizontal).LineStyle := 1;
    END;

    PROCEDURE SetPrintPageParam@1100281078(VAR pXlWrkSht@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet");
    BEGIN
      pXlWrkSht.PageSetup.Orientation := 1;
      pXlWrkSht.PageSetup.PaperSize := 9;
      pXlWrkSht.PageSetup.Zoom := FALSE;

      pXlWrkSht.PageSetup.LeftHeader := '';
      pXlWrkSht.PageSetup.CenterHeader := '';
      pXlWrkSht.PageSetup.RightHeader := '';

      pXlWrkSht.PageSetup.LeftMargin := XlApp.InchesToPoints(0.25);
      pXlWrkSht.PageSetup.RightMargin := XlApp.InchesToPoints(0.25);
      pXlWrkSht.PageSetup.TopMargin := XlApp.InchesToPoints(0.25);
      pXlWrkSht.PageSetup.BottomMargin := XlApp.InchesToPoints(0.25);
      pXlWrkSht.PageSetup.HeaderMargin := XlApp.InchesToPoints(0.3);
      pXlWrkSht.PageSetup.FooterMargin := XlApp.InchesToPoints(0.3);
    END;

    LOCAL PROCEDURE GetBeginEndDate@1100281014(i@1100281002 : Integer;pPeriodEndDate@1100281003 : Date;VAR pBeginDate@1100281001 : Date;VAR pEndDate@1100281000 : Date);
    VAR
      lCurrentMonth@1100281004 : Integer;
      lCurrentYear@1100281006 : Integer;
      lLastDate@1100281005 : Integer;
      lBeginYear@1100281007 : Integer;
    BEGIN
      //IMH02 isat.zw
      //1-12 : periode d'un mois, 13  : periode ann‚e N-1
      lCurrentMonth := DATE2DMY(pPeriodEndDate, 2);
      lCurrentYear := DATE2DMY(pPeriodEndDate, 3);

      IF i = 13 THEN BEGIN
        IF lCurrentMonth = 12 THEN BEGIN
          pBeginDate := DMY2DATE(1, 1, lCurrentYear - 1);
          pEndDate := DMY2DATE(31, 12, lCurrentYear - 1);
        END ELSE BEGIN
          pBeginDate := DMY2DATE(1, lCurrentMonth + 1, lCurrentYear - 2);
          pEndDate := DMY2DATE(1, lCurrentMonth+1, lCurrentYear - 1)-1;
        END;
      END ELSE BEGIN
        //i := 13 - i;
        lCurrentMonth := lCurrentMonth - 12 + i;
        IF lCurrentMonth <= 0 THEN BEGIN
          lCurrentMonth := lCurrentMonth + 12;
          lCurrentYear := lCurrentYear - 1;
        END;

        IF lCurrentMonth = 12 THEN BEGIN
          pBeginDate := DMY2DATE(1, 12, lCurrentYear);
          pEndDate := DMY2DATE(31, 12, lCurrentYear);
        END ELSE BEGIN
          pBeginDate := DMY2DATE(1, lCurrentMonth, lCurrentYear);
          pEndDate := DMY2DATE(1, lCurrentMonth+1, lCurrentYear)-1;
        END;
      END;
    END;

    PROCEDURE Get12MonthTitle@1100281011(pPeriodEndDate@1100281000 : Date;VAR p12MonthTitle@1100281001 : ARRAY [12] OF Text[30]);
    VAR
      lCurrentMonth@1100281005 : Integer;
      lCurrentYear@1100281004 : Integer;
      lLastDate@1100281003 : Integer;
      lBeginYear@1100281002 : Integer;
      i@1100281006 : Integer;
      lBeginDate@1100281007 : Date;
    BEGIN
      FOR i := 1 TO 12 DO BEGIN
        lCurrentMonth := DATE2DMY(pPeriodEndDate, 2);
        lCurrentYear := DATE2DMY(pPeriodEndDate, 3);
        lCurrentMonth := lCurrentMonth - 12 + i;
        IF lCurrentMonth <= 0 THEN BEGIN
          lCurrentMonth := lCurrentMonth + 12;
          lCurrentYear := lCurrentYear - 1;
        END;

        IF lCurrentMonth = 12 THEN BEGIN
          lBeginDate := DMY2DATE(1, 12, lCurrentYear);
        END ELSE BEGIN
          lBeginDate := DMY2DATE(1, lCurrentMonth, lCurrentYear);
        END;
        p12MonthTitle[i] := FORMAT(lBeginDate, 0, '<Month Text,4> <Year4>');
      END;
    END;

    PROCEDURE GetFirstNextWeekDate@1100281007(pDate@1100281000 : Date) rDate : Date;
    VAR
      lYear@1100281001 : Integer;
      lWeek@1100281002 : Integer;
      lLastWeekOfYear@1100281003 : Integer;
      lDate@1100281004 : Date;
    BEGIN
      lYear := DATE2DWY(pDate, 3);
      lWeek := DATE2DWY(pDate, 2);

      lDate := DWY2DATE(1,1,lYear+1);
      lLastWeekOfYear := DATE2DWY(lDate-1,2);
      IF lLastWeekOfYear > lWeek THEN
        rDate := DWY2DATE(1, lWeek + 1, lYear)
      ELSE
        rDate := DWY2DATE(1, 1, lYear + 1)
    END;

    PROCEDURE FormatDec@1100281071(pDec@1100281000 : Decimal) : Text[50];
    BEGIN
      EXIT(FORMAT(ROUND(pDec, 0.01), 0, 1));
    END;

    PROCEDURE CreateBook@1();
    VAR
      sheets@1100481000 : Automation "{00020813-0000-0000-C000-000000000046} 1.5:{000208D7-0000-0000-C000-000000000046}:Unknown Automation Server.Sheets";
    BEGIN
      //Cr‚ation Fichier Excel
      IF ISCLEAR(XlApp) THEN
        IF NOT CREATE(XlApp,TRUE, TRUE) THEN
          ERROR(Text000);
      XlApp.Visible(FALSE);
      IF XlApp.StandardFont <> 'Verdana' THEN BEGIN
        AppFont := XlApp.StandardFont;
        AppFontSize := XlApp.StandardFontSize;

        XlApp.StandardFont('Verdana');
        XlApp.StandardFontSize(10);
        XlApp.Quit;
        CLEAR(XlApp);
        IF ISCLEAR(XlApp) THEN
          IF NOT CREATE(XlApp,TRUE, TRUE) THEN
            ERROR(Text000);
        XlApp.Visible(FALSE);

        IF ISCLEAR(XlApp2) THEN
          IF NOT CREATE(XlApp2,TRUE, TRUE) THEN
            ERROR(Text000);
        XlApp2.Visible(FALSE);
        XlApp2.StandardFont(AppFont);
        XlApp2.StandardFontSize(AppFontSize);
        XlApp2.Quit;
        CLEAR(XlApp2);
      END;

      XlWrkBk := XlApp.Workbooks.Add;
    END;

    PROCEDURE CreateSheet@5(VAR XlWrkSht@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";SheetName@1000 : Text[250];ReportHeader@1001 : Text[80];CompanyName@1002 : Text[30];UserID2@1003 : Text[30]);
    VAR
      XlEdgeBottom@1004 : Integer;
      XlContinuous@1005 : Integer;
      XlLineStyleNone@1006 : Integer;
      XlLandscape@1007 : Integer;
      CRLF@1008 : Char;
      RecNo@1010 : Integer;
      InfoRecNo@1012 : Integer;
      TotalRecNo@1011 : Integer;
    BEGIN
      //Cr‚ation feuille Excel
      XlEdgeBottom := 9;
      XlContinuous := 1;
      XlLineStyleNone := -4142;
      XlLandscape := 2;
      CRLF := 10;
      RecNo := 1;
      RecNo := 0;

      XlWrkSht := XlWrkBk.Worksheets.Add;
      //XlWrkSht := XlWrkBk.Worksheets.Select;
      XlWrkSht.Name := SheetName;
      IF ReportHeader <> '' THEN
        XlWrkSht.PageSetup.LeftHeader :=
          STRSUBSTNO('%1%2%1%3%4',GetExcelReference(1),ReportHeader,CRLF,CompanyName);
      XlWrkSht.PageSetup.RightHeader :=
        STRSUBSTNO(Text006,GetExcelReference(2),GetExcelReference(3),CRLF,UserID2);
      XlWrkSht.PageSetup.Orientation := XlLandscape;
    END;

    PROCEDURE GiveUserControl@3();
    VAR
      lParamInt@1180113000 : Integer;
    BEGIN
      XlApp.Visible(TRUE);
      XlApp.UserControl(TRUE);
      CLEAR(XlApp);
    END;

    PROCEDURE GetExcelReference@10(Which@1000 : Integer) : Text[250];
    BEGIN
      CASE Which OF
        1:EXIT(Text013);
          // DO NOT TRANSLATE: &B is the Excel code to turn bold printing on or off for customized Header/Footer.
        2:EXIT(Text014);
          // DO NOT TRANSLATE: &D is the Excel code to print the current date in customized Header/Footer.
        3:EXIT(Text015);
          // DO NOT TRANSLATE: &P is the Excel code to print the page number in customized Header/Footer.
        4:EXIT('$');
          // DO NOT TRANSLATE: $ is the Excel code for absolute reference to cells.
        5:EXIT(Text016);
          // DO NOT TRANSLATE: A1 is the Excel reference of the first cell.
        6:EXIT(Text017);
          // DO NOT TRANSLATE: SUMIF is the name of the Excel function used to summarize values according to some conditions.
        7:EXIT(Text018);
          // DO NOT TRANSLATE: The #N/A Excel error value occurs when a value is not available to a function or formula.
        8:EXIT(Text019);
          // DO NOT TRANSLATE: GLAcc is used to define an Excel range name. You must refer to Excel rules to change this term.
        9:EXIT(Text020);
          // DO NOT TRANSLATE: Period is used to define an Excel range name. You must refer to Excel rules to change this term.
        10:EXIT(Text021);
          // DO NOT TRANSLATE: Budget is used to define an Excel worksheet name. You must refer to Excel rules to change this term.
      END;
    END;

    PROCEDURE xlRowID@1100281002(pRowNo@1100281000 : Integer) rxlRowID : Text[10];
    BEGIN
      //d‚termine l'id de la ligne dans excel
      rxlRowID := '';
      IF pRowNo <> 0 THEN
        rxlRowID := FORMAT(pRowNo);
    END;

    PROCEDURE xlColID@1100281003(pColNo@1100281000 : Integer) rxlColID : Text[10];
    VAR
      x@1100281003 : Integer;
      y@1100281005 : Integer;
      i@1100281002 : Integer;
      c@1100281001 : Char;
      t@1100281004 : Text[30];
    BEGIN
      //d‚termine l'id de la colonne dans excel
      rxlColID := '';

      x := pColNo;
      WHILE x > 26 DO BEGIN
        y := x MOD 26;
        IF y = 0 THEN
          y := 26;
        c := 64 + y;
        i := i + 1;
        t[i] := c;
        x := (x - y) DIV 26;
      END;
      IF x > 0 THEN BEGIN
        c := 64 + x;
        i := i + 1;
        t[i] := c;
      END;
      FOR x := 1 TO i DO
        rxlColID[x] := t[1 + i - x];
    END;

    PROCEDURE FormatEuro@1000000078(pDec@1000000000 : Decimal) : Text[100];
    BEGIN
      EXIT(FORMAT(ROUND(pDec, 1), 0, 1));
    END;

    PROCEDURE FormatPercentage@1000000079(pDec@1000000000 : Decimal) : Text[100];
    BEGIN
      EXIT(FORMAT(ROUND(pDec, 0.1), 0, 1));
    END;

    PROCEDURE FormatInt@1000000003(pInt@1000000000 : Integer) : Text[100];
    BEGIN
      EXIT(FORMAT(pInt, 0, 1));
    END;

    EVENT XlApp@1100281002::NewWorkbook@1565(Wb@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT XlApp@1100281002::SheetSelectionChange@1558(Sh@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT XlApp@1100281002::SheetBeforeDoubleClick@1559(Sh@1100281002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1100281002::SheetBeforeRightClick@1560(Sh@1100281002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1100281002::SheetActivate@1561(Sh@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlApp@1100281002::SheetDeactivate@1562(Sh@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlApp@1100281002::SheetCalculate@1563(Sh@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlApp@1100281002::SheetChange@1564(Sh@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookOpen@1567(Wb@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookActivate@1568(Wb@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookDeactivate@1569(Wb@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookBeforeClose@1570(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookBeforeSave@1571(Wb@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";SaveAsUI@1100281001 : Boolean;VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookBeforePrint@1572(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookNewSheet@1573(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Sh@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookAddinInstall@1574(Wb@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookAddinUninstall@1575(Wb@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT XlApp@1100281002::WindowResize@1554(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT XlApp@1100281002::WindowActivate@1556(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT XlApp@1100281002::WindowDeactivate@1557(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT XlApp@1100281002::SheetFollowHyperlink@1854(Sh@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT XlApp@1100281002::SheetPivotTableUpdate@2157(Sh@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookPivotTableCloseConnect@2160(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookPivotTableOpenConnecti@2161(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookSync@2289(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";SyncEventType@1100281000 : Integer);
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookBeforeXmlImport@2290(Wb@1100281004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1100281003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1100281002 : Text[1024];IsRefresh@1100281001 : Boolean;VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookAfterXmlImport@2291(Wb@1100281003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";IsRefresh@1100281001 : Boolean;Result@1100281000 : Integer);
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookBeforeXmlExport@2292(Wb@1100281003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1100281001 : Text[1024];VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookAfterXmlExport@2293(Wb@1100281003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1100281001 : Text[1024];Result@1100281000 : Integer);
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookRowsetComplete@2611(Wb@1100281003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Description@1100281002 : Text[1024];Sheet@1100281001 : Text[1024];Success@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1100281002::AfterCalculate@2612();
    BEGIN
    END;

    EVENT XlApp@1100281002::SheetPivotTableAfterValueChang@2895(Sh@1100281002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT XlApp@1100281002::SheetPivotTableBeforeAllocateC@2896(Sh@1100281004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100281003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1100281002 : Integer;ValueChangeEnd@1100281001 : Integer;VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1100281002::SheetPivotTableBeforeCommitCha@2897(Sh@1100281004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100281003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1100281002 : Integer;ValueChangeEnd@1100281001 : Integer;VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1100281002::SheetPivotTableBeforeDiscardCh@2898(Sh@1100281003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1100281001 : Integer;ValueChangeEnd@1100281000 : Integer);
    BEGIN
    END;

    EVENT XlApp@1100281002::ProtectedViewWindowOpen@2903(Pvw@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT XlApp@1100281002::ProtectedViewWindowBeforeEdit@2905(Pvw@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1100281002::ProtectedViewWindowBeforeClose@2906(Pvw@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow";Reason@1100281001 : Integer;VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1100281002::ProtectedViewWindowResize@2908(Pvw@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT XlApp@1100281002::ProtectedViewWindowActivate@2909(Pvw@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT XlApp@1100281002::ProtectedViewWindowDeactivate@2910(Pvw@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookAfterSave@2911(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Success@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp@1100281002::WorkbookNewChart@2912(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Ch@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::Open@1923();
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::Activate@304();
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::Deactivate@1530();
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::BeforeClose@1546(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::BeforeSave@1547(SaveAsUI@1100281001 : Boolean;VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::BeforePrint@1549(VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::NewSheet@1550(Sh@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::AddinInstall@1552();
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::AddinUninstall@1553();
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::WindowResize@1554(Wn@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::WindowActivate@1556(Wn@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::WindowDeactivate@1557(Wn@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::SheetSelectionChange@1558(Sh@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::SheetBeforeDoubleClick@1559(Sh@1100281002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::SheetBeforeRightClick@1560(Sh@1100281002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::SheetActivate@1561(Sh@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::SheetDeactivate@1562(Sh@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::SheetCalculate@1563(Sh@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::SheetChange@1564(Sh@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::SheetFollowHyperlink@1854(Sh@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::SheetPivotTableUpdate@2157(Sh@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::PivotTableCloseConnection@2158(Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::PivotTableOpenConnection@2159(Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::Sync@2266(SyncEventType@1100281000 : Integer);
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::BeforeXmlImport@2283(Map@1100281003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1100281002 : Text[1024];IsRefresh@1100281001 : Boolean;VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::AfterXmlImport@2285(Map@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";IsRefresh@1100281001 : Boolean;Result@1100281000 : Integer);
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::BeforeXmlExport@2287(Map@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1100281001 : Text[1024];VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::AfterXmlExport@2288(Map@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1100281001 : Text[1024];Result@1100281000 : Integer);
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::RowsetComplete@2610(Description@1100281002 : Text[1024];Sheet@1100281001 : Text[1024];Success@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::SheetPivotTableAfterValueChang@2895(Sh@1100281002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::SheetPivotTableBeforeAllocateC@2896(Sh@1100281004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100281003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1100281002 : Integer;ValueChangeEnd@1100281001 : Integer;VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::SheetPivotTableBeforeCommitCha@2897(Sh@1100281004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100281003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1100281002 : Integer;ValueChangeEnd@1100281001 : Integer;VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::SheetPivotTableBeforeDiscardCh@2898(Sh@1100281003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1100281001 : Integer;ValueChangeEnd@1100281000 : Integer);
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::SheetPivotTableChangeSync@2899(Sh@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::AfterSave@2900(Success@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlWrkBk@1100281001::NewChart@2901(Ch@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    EVENT XlApp2@1100281034::NewWorkbook@1565(Wb@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT XlApp2@1100281034::SheetSelectionChange@1558(Sh@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT XlApp2@1100281034::SheetBeforeDoubleClick@1559(Sh@1100281002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp2@1100281034::SheetBeforeRightClick@1560(Sh@1100281002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp2@1100281034::SheetActivate@1561(Sh@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlApp2@1100281034::SheetDeactivate@1562(Sh@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlApp2@1100281034::SheetCalculate@1563(Sh@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlApp2@1100281034::SheetChange@1564(Sh@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookOpen@1567(Wb@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookActivate@1568(Wb@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookDeactivate@1569(Wb@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookBeforeClose@1570(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookBeforeSave@1571(Wb@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";SaveAsUI@1100281001 : Boolean;VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookBeforePrint@1572(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookNewSheet@1573(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Sh@1100281000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookAddinInstall@1574(Wb@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookAddinUninstall@1575(Wb@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT XlApp2@1100281034::WindowResize@1554(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT XlApp2@1100281034::WindowActivate@1556(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT XlApp2@1100281034::WindowDeactivate@1557(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT XlApp2@1100281034::SheetFollowHyperlink@1854(Sh@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT XlApp2@1100281034::SheetPivotTableUpdate@2157(Sh@1100281001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookPivotTableCloseConnect@2160(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookPivotTableOpenConnecti@2161(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Target@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookSync@2289(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";SyncEventType@1100281000 : Integer);
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookBeforeXmlImport@2290(Wb@1100281004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1100281003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1100281002 : Text[1024];IsRefresh@1100281001 : Boolean;VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookAfterXmlImport@2291(Wb@1100281003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";IsRefresh@1100281001 : Boolean;Result@1100281000 : Integer);
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookBeforeXmlExport@2292(Wb@1100281003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1100281001 : Text[1024];VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookAfterXmlExport@2293(Wb@1100281003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1100281001 : Text[1024];Result@1100281000 : Integer);
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookRowsetComplete@2611(Wb@1100281003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Description@1100281002 : Text[1024];Sheet@1100281001 : Text[1024];Success@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp2@1100281034::AfterCalculate@2612();
    BEGIN
    END;

    EVENT XlApp2@1100281034::SheetPivotTableAfterValueChang@2895(Sh@1100281002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT XlApp2@1100281034::SheetPivotTableBeforeAllocateC@2896(Sh@1100281004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100281003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1100281002 : Integer;ValueChangeEnd@1100281001 : Integer;VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp2@1100281034::SheetPivotTableBeforeCommitCha@2897(Sh@1100281004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100281003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1100281002 : Integer;ValueChangeEnd@1100281001 : Integer;VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp2@1100281034::SheetPivotTableBeforeDiscardCh@2898(Sh@1100281003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1100281001 : Integer;ValueChangeEnd@1100281000 : Integer);
    BEGIN
    END;

    EVENT XlApp2@1100281034::ProtectedViewWindowOpen@2903(Pvw@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT XlApp2@1100281034::ProtectedViewWindowBeforeEdit@2905(Pvw@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow";VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp2@1100281034::ProtectedViewWindowBeforeClose@2906(Pvw@1100281002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow";Reason@1100281001 : Integer;VAR Cancel@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp2@1100281034::ProtectedViewWindowResize@2908(Pvw@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT XlApp2@1100281034::ProtectedViewWindowActivate@2909(Pvw@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT XlApp2@1100281034::ProtectedViewWindowDeactivate@2910(Pvw@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookAfterSave@2911(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Success@1100281000 : Boolean);
    BEGIN
    END;

    EVENT XlApp2@1100281034::WorkbookNewChart@2912(Wb@1100281001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Ch@1100281000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    BEGIN
    {
      /** @r IMH05 @d 14/10/13 @a ISAT.ST @v IMH6.01.353 @s Reorganisation region IMH @h 4760 @c Renommage CR / AR / R‚gion */
      /** @r IMH04 @d 06/04/12 @a ISAT.ZW @v IMH6.01.105 @s Scoring @c Note Qualit‚ */
      /** @r IMH03 @d 17/12/11 @a ISAT.ST @v IMH6.01.105 @s Scoring @h 2103 @c Ajout libell‚ mois graphique d‚lai */
      /** @r IMH02 @d 11/11/11 @a ISAT.VA @v IMH6.01.105 @s Scoring @c Add Date Format
      /** @r IMH01 @d 26/01/11 @a ISAT.ZW @v IMH6.01.105 @s Scoring @c Creation objet */
    }
    END.
  }
}