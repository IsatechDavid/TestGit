OBJECT Codeunit 50069 Process Form Mgt
{
  OBJECT-PROPERTIES
  {
    Date=26/03/13;
    Time=14:34:13;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ProcStatus@1100281000 : Record 50042;

    PROCEDURE CountRecAtStatuts@1100281001(pProcStatus@1100281000 : Record 50042) : Integer;
    BEGIN
      WITH pProcStatus DO BEGIN
        IF ("Process Code" = '') OR ("Status No." = 0) THEN
          EXIT;
        CALCFIELDS("Process Source Table No.");
        IF "Process Source Table No." = 0 THEN
          EXIT;
        EXIT(GetRec("Process Source Table No.", "Process Code", "Status No.", 1));
      END;
    END;

    PROCEDURE LookupRecAtStatuts@1100281002(pProcStatus@1100281000 : Record 50042);
    BEGIN
      WITH pProcStatus DO BEGIN
        IF ("Process Code" = '') OR ("Status No." = 0) THEN
          EXIT;
        CALCFIELDS("Process Source Table No.");
        IF "Process Source Table No." = 0 THEN
          EXIT;
        GetRec("Process Source Table No.", "Process Code", "Status No.", 0);
      END;
    END;

    PROCEDURE ExistRecAtStatuts@1100281000(pProcStatus@1100281000 : Record 50042) : Boolean;
    BEGIN
      WITH pProcStatus DO BEGIN
        IF ("Process Code" = '') OR ("Status No." = 0) THEN
          EXIT;
        CALCFIELDS("Process Source Table No.");
        IF "Process Source Table No." = 0 THEN
          EXIT;
        EXIT(GetRec("Process Source Table No.", "Process Code", "Status No.", 2) > 0);
      END;
    END;

    PROCEDURE GetRec@1100281017(pFromTable@1100281003 : Integer;pProcCode@1100281001 : Code[10];pProcStatus@1100281002 : Integer;pWhat@1100281000 : 'Show,Count,Exists') : Integer;
    BEGIN
      CASE pFromTable OF
        DATABASE::Service :
          EXIT(GetServ(pProcCode, pProcStatus, pWhat));
        DATABASE::"Service Header" :
          EXIT(GetServHeader(pProcCode, pProcStatus, pWhat));
        DATABASE::"Service Intervention Line" :
          EXIT(GetServInterv(pProcCode, pProcStatus, pWhat));
        DATABASE::"Service Intervention Quote" :
          EXIT(GetServQuote(pProcCode, pProcStatus, pWhat));
        DATABASE::Provider :
          EXIT(GetProvider(pProcCode, pProcStatus, pWhat));
        DATABASE::"Completness Task Setup" :
          EXIT(GetCompletness(pProcCode, pProcStatus, pWhat));
      END; // CASE
    END;

    LOCAL PROCEDURE GetServ@1100281006(pProcCode@1100281001 : Code[10];pProcStatus@1100281002 : Integer;pWhat@1100281003 : 'Show,Count,Exists') : Integer;
    VAR
      lRec@1100281000 : Record 50066;
    BEGIN
      lRec.FILTERGROUP(2);
      lRec.SETRANGE("Process Code", pProcCode);
      lRec.SETRANGE("Process Status No.", pProcStatus);
      lRec.FILTERGROUP(0);
      IF lRec.ISEMPTY THEN
        EXIT(0);
      CASE pWhat OF
        pWhat::Show :   FORM.RUNMODAL(0, lRec);
        pWhat::Count :  EXIT(lRec.COUNT);
        pWhat::Exists : EXIT(1);
      END;
    END;

    LOCAL PROCEDURE GetServHeader@1100281018(pProcCode@1100281001 : Code[10];pProcStatus@1100281002 : Integer;pWhat@1100281003 : 'Show,Count,Exists') : Integer;
    VAR
      lRec@1100281000 : Record 5900;
    BEGIN
      lRec.FILTERGROUP(2);
      //<<IMH02.PC
      lRec.SETCURRENTKEY("Process Code","Process Status No.");
      //>>IMH02.PC
      lRec.SETRANGE("Process Code", pProcCode);
      lRec.SETRANGE("Process Status No.", pProcStatus);
      lRec.FILTERGROUP(0);
      IF lRec.ISEMPTY THEN
        EXIT(0);
      CASE pWhat OF
        pWhat::Show :   FORM.RUNMODAL(0, lRec);
        pWhat::Count :  EXIT(lRec.COUNT);
        pWhat::Exists : EXIT(1);
      END;
    END;

    LOCAL PROCEDURE GetServInterv@1100281019(pProcCode@1100281001 : Code[10];pProcStatus@1100281002 : Integer;pWhat@1100281003 : 'Show,Count,Exists') : Integer;
    VAR
      lRec@1100281000 : Record 50075;
    BEGIN
      lRec.FILTERGROUP(2);
      //<<IMH02.PC
      lRec.SETCURRENTKEY("Process Code","Process Status No.");
      //>>IMH02.PC
      lRec.SETRANGE("Process Code", pProcCode);
      lRec.SETRANGE("Process Status No.", pProcStatus);
      lRec.FILTERGROUP(0);
      IF lRec.ISEMPTY THEN
        EXIT(0);
      CASE pWhat OF
        pWhat::Show :   FORM.RUNMODAL(0, lRec);
        pWhat::Count :  EXIT(lRec.COUNT);
        pWhat::Exists : EXIT(1);
      END;
    END;

    LOCAL PROCEDURE GetServQuote@1100281020(pProcCode@1100281001 : Code[10];pProcStatus@1100281002 : Integer;pWhat@1100281003 : 'Show,Count,Exists') : Integer;
    VAR
      lRec@1100281000 : Record 50076;
    BEGIN
      lRec.FILTERGROUP(2);
      lRec.SETRANGE("Process Code", pProcCode);
      lRec.SETRANGE("Process Status No.", pProcStatus);
      lRec.FILTERGROUP(0);
      IF lRec.ISEMPTY THEN
        EXIT(0);
      CASE pWhat OF
        pWhat::Show :   FORM.RUNMODAL(0, lRec);
        pWhat::Count :  EXIT(lRec.COUNT);
        pWhat::Exists : EXIT(1);
      END;
    END;

    LOCAL PROCEDURE GetProvider@1100281021(pProcCode@1100281001 : Code[10];pProcStatus@1100281002 : Integer;pWhat@1100281003 : 'Show,Count,Exists') : Integer;
    VAR
      lRec@1100281000 : Record 50000;
    BEGIN
      lRec.FILTERGROUP(2);
      lRec.SETRANGE("Process Code", pProcCode);
      lRec.SETRANGE("Process Status No.", pProcStatus);
      lRec.FILTERGROUP(0);
      IF lRec.ISEMPTY THEN
        EXIT(0);
      CASE pWhat OF
        pWhat::Show :   FORM.RUNMODAL(0, lRec);
        pWhat::Count :  EXIT(lRec.COUNT);
        pWhat::Exists : EXIT(1);
      END;
    END;

    LOCAL PROCEDURE GetCompletness@1100281022(pProcCode@1100281001 : Code[10];pProcStatus@1100281002 : Integer;pWhat@1100281003 : 'Show,Count,Exists') : Integer;
    VAR
      lRec@1100281000 : Record 50004;
    BEGIN
      lRec.FILTERGROUP(2);
      //lRec.SETRANGE("Process Code", pProcCode);
      //lRec.SETRANGE("Process Status No.", pProcStatus);
      lRec.FILTERGROUP(0);
      IF lRec.ISEMPTY THEN
        EXIT(0);
      CASE pWhat OF
        pWhat::Show :   FORM.RUNMODAL(0, lRec);
        pWhat::Count :  EXIT(lRec.COUNT);
        pWhat::Exists : EXIT(1);
      END;
    END;

    BEGIN
    {
      /** @r IMH02 @d 26/03/13 @a ISAT.PC @v @s Hotfix @c ajout des cl‚s */
      /** @r IMH01 @d 25/03/11 @a ISAT.ST @v IMH6.01.102 @s Gestion des statuts
          @c Cr‚ation objet pour accessibilit‚ form process */
    }
    END.
  }
}