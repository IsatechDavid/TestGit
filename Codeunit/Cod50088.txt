OBJECT Codeunit 50088 Color Managment
{
  OBJECT-PROPERTIES
  {
    Date=19/06/14;
    Time=12:51:57;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1100281002 : TextConst 'ENU=Service;FRA=Service';
      Text002@1100281001 : TextConst 'ENU=Product Line;FRA=Ligne produit';
      Text003@1100281000 : TextConst 'ENU=Intervention;FRA=Intervention';

    PROCEDURE GetRGBColor@1100281001(pColor@1100281000 : Integer;VAR pRed@1100281001 : Integer;VAR pGreen@1100281002 : Integer;VAR pBlue@1100281003 : Integer);
    BEGIN
      pBlue := ROUND(pColor / 65536,1,'<');
      pGreen := ROUND((pColor-pBlue*65536)/256,1,'<');
      pRed := pColor - pBlue * 65536 - pGreen * 256;
    END;

    PROCEDURE SelectColor@1100281000(VAR pColorID@1100281000 : Integer) : Boolean;
    VAR
      lFormColorChoose@1100281001 : Form 50212;
    BEGIN
      CLEAR(lFormColorChoose);

      //lFormColorChoose.SetColor(pColorID);
      lFormColorChoose.LOOKUPMODE(TRUE);
      IF lFormColorChoose.RUNMODAL = ACTION::LookupOK THEN BEGIN
        //pColorID := lFormColorChoose.GetColor;
      END;
    END;

    PROCEDURE SelectValueColorWithPalet@1000000001() rValue : Integer;
    VAR
      lScriptControl@1000000000 : Automation ":{00000000-0000-0000-0000-000000000000}:";
      lCommonDialog@1000000001 : OCX "{F9043C85-F6F2-101A-A3C9-08002B2F49FB}:'Microsoft Common Dialog Control, version 6.0'";
    BEGIN
      rValue := 0;
      CLEAR(lScriptControl);

      lCommonDialog.ShowColor;
      CREATE(lScriptControl);

      CLEAR(lScriptControl);
    END;

    PROCEDURE GetNavColor@1100281002(pColorRGB@1100281000 : Text[50];VAR pColor@1100281006 : Integer) : Boolean;
    VAR
      lText@1100281005 : Text[50];
      lPos@1100281001 : Integer;
      lRed@1100281002 : Integer;
      lGreen@1100281003 : Integer;
      lBlue@1100281004 : Integer;
    BEGIN
      lText := pColorRGB;
      lPos :=  STRPOS(lText,';');
      IF NOT EVALUATE(lRed,COPYSTR(lText,1,lPos-1)) THEN
        EXIT(FALSE);
      lText := COPYSTR(lText,lPos+1,STRLEN(lText)-lPos);
      lPos :=  STRPOS(lText,';');
      IF NOT EVALUATE(lGreen,COPYSTR(lText,1,lPos-1)) THEN
        EXIT(FALSE);
      IF NOT EVALUATE(lBlue,COPYSTR(lText,lPos+1,STRLEN(lText)-lPos)) THEN
        EXIT(FALSE);
      pColor := lRed + lBlue * 65536 + lGreen * 256;
      EXIT(TRUE);
    END;

    PROCEDURE PageIdentifLoadXML@1100281003(VAR pBigText@1100281000 : BigText;pTableId@1100281001 : Integer;pText@1100281004 : Text[30];pFontSize@1100281005 : Integer);
    VAR
      lColor@1100281003 : Text[30];
      lTitle@1100281002 : Text[30];
    BEGIN
      CLEAR(pBigText);
      InitXML(pTableId,lTitle,lColor);
      pBigText.ADDTEXT('<Page>');
      pBigText.ADDTEXT('<BackColor>'+lColor+'</BackColor>');
      pBigText.ADDTEXT('<FontColor>0;0;0</FontColor>');
      pBigText.ADDTEXT('<FontSize>'+FORMAT(pFontSize)+'</FontSize>');
      IF pText <> '' THEN
        lTitle := pText;
      pBigText.ADDTEXT('<Text>'+lTitle+'</Text>');
      pBigText.ADDTEXT('</Page>');
    END;

    PROCEDURE PageIdentifLoadXMLWithBigText@1000000002(VAR pBigText@1100281000 : BigText;pTableId@1100281001 : Integer;pBigTextValue@1100281004 : BigText;pFontSize@1100281005 : Integer);
    VAR
      lColor@1100281003 : Text[30];
      lTitle@1100281002 : Text[1024];
      i@1000000000 : Integer;
    BEGIN
      // IMH.PC

      CLEAR(pBigText);
      InitXML(pTableId,lTitle,lColor);
      pBigText.ADDTEXT('<Page>');
      pBigText.ADDTEXT('<BackColor>'+lColor+'</BackColor>');
      pBigText.ADDTEXT('<FontColor>0;0;0</FontColor>');
      pBigText.ADDTEXT('<FontSize>'+FORMAT(pFontSize)+'</FontSize>');
      IF pBigTextValue.LENGTH <> 0 THEN BEGIN
        i := 1;
        pBigText.ADDTEXT('<Text>');
        WHILE pBigTextValue.LENGTH > i DO BEGIN
           pBigTextValue.GETSUBTEXT(lTitle,i,i + 29);
           pBigText.ADDTEXT(lTitle);
           i += 30;
        END;
        pBigText.ADDTEXT('</Text>');
      END;
      pBigText.ADDTEXT('</Page>');
    END;

    PROCEDURE PageIdentifLoadTextXML@1000000000(VAR pXMLText@1100281000 : Text[250];pTableId@1100281001 : Integer;pText@1100281004 : Text[30];pFontSize@1100281005 : Integer);
    VAR
      lColor@1100281003 : Text[30];
      lTitle@1100281002 : Text[30];
    BEGIN
      //IMH02.ST
      CLEAR(pXMLText);
      InitXML(pTableId,lTitle,lColor);
      IF pText <> '' THEN
        lTitle := pText;

      pXMLText := '<Page>' +
                  STRSUBSTNO('<BackColor>%1</BackColor>', lColor) +
                  '<FontColor>0;0;0</FontColor>' +
                  STRSUBSTNO('<FontSize>%1</FontSize>', pFontSize) +
                  STRSUBSTNO('<Text>%1</Text>', lTitle) +
                  '</Page>';
    END;

    PROCEDURE InitXML@1100281004(pTableId@1100281008 : Integer;VAR pTitle@1100281006 : Text[30];VAR pColor@1100281007 : Text[30]) : Text[30];
    VAR
      lServiceMgt@1100281000 : Record 5911;
      lColorMgt@1100281001 : Codeunit 50088;
      lColor@1100281005 : Integer;
      lRed@1100281002 : Integer;
      lGreen@1100281003 : Integer;
      lBlue@1100281004 : Integer;
    BEGIN
      lServiceMgt.GET;
      CASE pTableId OF
        DATABASE::Service:
          BEGIN
            lColor := lServiceMgt."Service Color";
            pTitle := Text001;
          END;
        DATABASE::"Service Header":
          BEGIN
            lColor := lServiceMgt."Service Header Color";
            pTitle := Text002;
          END;
        DATABASE::"Service Intervention Line":
          BEGIN
            lColor := lServiceMgt."Intervention Line Color";
            pTitle := Text003;
          END;
      END;
      lColorMgt.GetRGBColor(lColor,lRed,lGreen,lBlue);
      pColor := FORMAT(lRed)+';'+FORMAT(lGreen)+';'+FORMAT(lBlue);
    END;

    PROCEDURE ReadXML@1100281005(pBigText@1100281000 : BigText;VAR pColor@1100281004 : Integer) : Boolean;
    VAR
      lColor@1100281001 : Text[50];
      lStartPos@1100281002 : Integer;
      lEndPos@1100281003 : Integer;
    BEGIN
      lStartPos := pBigText.TEXTPOS('<BackColor>') + + STRLEN('<BackColor>');
      lEndPos := pBigText.TEXTPOS('</BackColor>');
      pBigText.GETSUBTEXT(lColor
                ,lStartPos
                ,lEndPos - lStartPos);
      EXIT(GetNavColor(lColor,pColor));
    END;

    BEGIN
    {
      /** @r IMH02 @d 20/03/12 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Ajout PageIdentifLoadTextXML pour simplificiation */
      /** @r IMH01 @d 05/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Cr‚ation */
    }
    END.
  }
}