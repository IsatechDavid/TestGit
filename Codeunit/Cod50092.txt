OBJECT Codeunit 50092 Dialog Mgt
{
  OBJECT-PROPERTIES
  {
    Date=12/04/12;
    Time=14:38:00;
    Modified=Yes;
    Version List=IMH6.01.31;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Window@1100281000 : Dialog;
      TotalCount@1100281001 : Integer;
      UpdFreq@1100281002 : Integer;
      CurrCount@1100281003 : Integer;
      UpdIncrement@1100281004 : Integer;
      LogFile@1000000000 : File;
      LogFileActive@1000000001 : Boolean;

    LOCAL PROCEDURE InitVar@1100281003();
    BEGIN
      CLEAR(Window);
      // Todo : g‚rer plusieurs ID de progress (tables temp ou tableau ?)
      TotalCount := 0;
      CurrCount := 0;
      UpdFreq := 0;
      UpdIncrement := 0;
    END;

    PROCEDURE InitDialog@1100281000(pText@1100281000 : Text[1024]);
    BEGIN
      IF NOT GUIALLOWED THEN EXIT;
      InitVar;
      Window.OPEN(pText);
    END;

    PROCEDURE CloseDialog@1100281001();
    BEGIN
      IF NOT GUIALLOWED THEN EXIT;
      Window.CLOSE;
      InitVar;
    END;

    PROCEDURE InitProgress@1100281006(pControlID@1100281002 : Integer;pTotalCount@1100281000 : Integer;pUpdatePerc@1100281001 : Integer);
    BEGIN
      IF NOT GUIALLOWED THEN EXIT;
      IF pControlID = 0 THEN
        EXIT;
      TotalCount := pTotalCount;
      IF pUpdatePerc = -1 THEN
        UpdFreq := 1
      ELSE BEGIN
        IF pUpdatePerc = 0 THEN
          pUpdatePerc := 5; // Valeur par d‚faut = 5 %
        UpdFreq := ROUND(TotalCount / (100 / pUpdatePerc), 1);
        IF UpdFreq < 1 THEN
          UpdFreq := 1;
      END;
    END;

    PROCEDURE UpdateProgress@1100281002(pControlID@1100281000 : Integer);
    BEGIN
      IF NOT GUIALLOWED THEN EXIT;
      IF pControlID = 0 THEN
        EXIT;

      UpdIncrement += 1;
      IF UpdIncrement >= UpdFreq THEN BEGIN
        CurrCount += UpdIncrement;
        UpdIncrement := 0;
        Window.UPDATE(pControlID, ROUND(CurrCount * 10000 / TotalCount, 1));
      END;
    END;

    PROCEDURE UpdateValue@1100281004(pControlID@1100281000 : Integer;pValueText@1100281001 : Text[1024]);
    BEGIN
      IF NOT GUIALLOWED THEN EXIT;
      IF pControlID = 0 THEN
        EXIT;

      Window.UPDATE(pControlID, pValueText);
    END;

    PROCEDURE InitLogFile@1000000000();
    VAR
      lFileMgt@1000000000 : Codeunit 419;
      lFileName@1000000001 : Text[1024];
    BEGIN
      IF LogFileActive THEN
        ResetLogFile;
      LogFileActive := TRUE;
      lFileName := lFileMgt.ClientTempFileName('', 'TXT');
      LogFile.QUERYREPLACE(FALSE);
      LogFile.TEXTMODE(TRUE);
      LogFile.CREATE(lFileName);
    END;

    PROCEDURE AddLogFile@1000000001(pText@1000000000 : Text[1024]);
    VAR
      lText@1000000001 : Text[2];
    BEGIN
      IF NOT LogFileActive THEN
        EXIT;
      lText[1] := 13;
      lText[2] := 10;
      LogFile.WRITE(pText + lText);
    END;

    PROCEDURE ShowLogFile@1000000002();
    VAR
      lFileName@1000000000 : Text[1024];
    BEGIN
      IF NOT LogFileActive THEN
        EXIT;
      lFileName := LogFile.NAME;
      LogFile.CLOSE;
      LogFileActive := FALSE;
      HYPERLINK(lFileName);
    END;

    PROCEDURE ResetLogFile@1000000003();
    VAR
      lFileName@1000000000 : Text[1024];
    BEGIN
      IF LogFileActive THEN BEGIN
        lFileName := LogFile.NAME;
        LogFile.CLOSE;
        IF ERASE(lFileName) THEN;
      END;
      LogFileActive := FALSE;
    END;

    BEGIN
    END.
  }
}