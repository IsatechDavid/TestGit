OBJECT Codeunit 50098 Address Standardization
{
  OBJECT-PROPERTIES
  {
    Date=01/09/11;
    Time=11:38:04;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      PostCode@1100281000 : Record 225;
      Separator@1100281001 : TextConst 'FRA=!';
      Text001@1100281002 : TextConst 'ENU=Post Code %1 does not exist;FRA=Le code postal %1 n''existe pas, voulez-vous le cr‚er ?';
      Text002@1100281003 : TextConst 'FRA=La ville %1 associ‚e au code postal %2 n''existe pas, voulez-vous la cr‚er ?';
      Text003@1100281004 : TextConst 'ENU=Address format is Way No.%1Way%1Post Code%1City;FRA=Vous devez saisir une adresse au format Nø voie%1voie%1code postal%1ville';

    PROCEDURE AssistContactAddr@1100281000(VAR pContact@1100281000 : Record 5050);
    VAR
      lTempContAltAddress@1100281002 : Record 5051;
      lContAltAddress@1100281001 : Record 5051;
      lAddressRefForm@1100281003 : Form 50097;
    BEGIN
      //IMH01
      IF NOT CountryToAssist(DATABASE::Contact, pContact."Country/Region Code") THEN //IMH02 isat.zw
        EXIT;                                                                     //IMH02 isat.zw
      //<<IMH03
      lContAltAddress.SETRANGE("Contact No.",pContact."No.");
      lContAltAddress.SETRANGE("Contact Address",TRUE);
      IF lContAltAddress.FINDFIRST THEN BEGIN
        lTempContAltAddress := lContAltAddress;
      END;
      //>>IMH03
      lAddressRefForm.InitAddress(lTempContAltAddress);
      lAddressRefForm.SETTABLEVIEW(lTempContAltAddress);
      IF lAddressRefForm.RUNMODAL IN [ACTION::Yes,ACTION::OK] THEN BEGIN
        lAddressRefForm.GetAddress(lTempContAltAddress);
        //<<IMH03
        lContAltAddress.Address := lTempContAltAddress.Address;
        lContAltAddress."Address 2" := lTempContAltAddress."Address 2";
        lContAltAddress."Address 3" := lTempContAltAddress."Address 3";//IMH13
        lContAltAddress.City := lTempContAltAddress.City;
        lContAltAddress."Post Code" := lTempContAltAddress."Post Code";
        lContAltAddress.County := lTempContAltAddress.County;
        lContAltAddress."Country/Region Code" := lTempContAltAddress."Country/Region Code";
        //lContAltAddress."Way Type" := lTempContAltAddress."Way Type";
        lContAltAddress."Way No." := lTempContAltAddress."Way No.";
        lContAltAddress."Way No. Extension" := lTempContAltAddress."Way No. Extension";
        lContAltAddress."Way Name" := lTempContAltAddress."Way Name";
        lContAltAddress."Geo. Reference Code" := PostCode.GetReferenceGeoCode(lContAltAddress."Post Code",lContAltAddress.City);
        //<<IMH07
        lContAltAddress.Latitude := lTempContAltAddress.Latitude;
        lContAltAddress.Longitude := lTempContAltAddress.Longitude;
        lContAltAddress."Address Geocoded" := lTempContAltAddress."Address Geocoded";
        //>>IMH07
        lContAltAddress.MODIFY;
        //>>IMH03
        pContact.Address := lTempContAltAddress.Address;
        pContact."Address 2" := lTempContAltAddress."Address 2";
        pContact."Address 3" := lTempContAltAddress."Address 3";
        pContact."Post Code" := lTempContAltAddress."Post Code";
        pContact.City := lTempContAltAddress.City;
        pContact."Geo. Reference Code" := PostCode.GetReferenceGeoCode(pContact."Post Code",pContact.City);

        pContact.MODIFY(TRUE);

      END;
    END;

    PROCEDURE AssistCustAddr@1100281001(VAR pCustomer@1100281000 : Record 18);
    VAR
      lTempContAltAddress@1100281002 : Record 5051;
      lAddressRefForm@1100281001 : Form 50097;
    BEGIN
      //IMH02 isat.zw
      IF NOT CountryToAssist(DATABASE::Contact, pCustomer."Country/Region Code") THEN
        EXIT;

      lTempContAltAddress."Contact No." := pCustomer."No.";
      lTempContAltAddress."Country/Region Code" := pCustomer."Country/Region Code";
      lTempContAltAddress.Address := pCustomer.Address;
      lTempContAltAddress."Address 2" := pCustomer."Address 2";
      lTempContAltAddress."Address 3" := pCustomer."Address 3";//IMH13

      lTempContAltAddress.City := pCustomer.City;
      lTempContAltAddress."Post Code" := pCustomer."Post Code";
      DecomposeAddr(lTempContAltAddress, pCustomer.Address,FALSE);

      lAddressRefForm.InitAddress(lTempContAltAddress);
      lAddressRefForm.SETTABLEVIEW(lTempContAltAddress);
      IF lAddressRefForm.RUNMODAL IN [ACTION::Yes,ACTION::OK] THEN BEGIN
        lAddressRefForm.GetAddress(lTempContAltAddress);
        pCustomer.Address := lTempContAltAddress.Address;
        pCustomer."Address 2" := lTempContAltAddress."Address 2";
        pCustomer."Address 3" := lTempContAltAddress."Address 3";//IMH13
        pCustomer."Post Code" := lTempContAltAddress."Post Code";
        pCustomer.City := lTempContAltAddress.City;
        pCustomer.MODIFY(TRUE);
      END;
    END;

    PROCEDURE AssistVendAddr@1100281002(VAR pVendor@1100281000 : Record 23);
    VAR
      lTempContAltAddress@1100281002 : Record 5051;
      lAddressRefForm@1100281001 : Form 50097;
    BEGIN
      //IMH02 isat.zw
      IF NOT CountryToAssist(DATABASE::Contact, pVendor."Country/Region Code") THEN
        EXIT;

      lTempContAltAddress."Contact No." := pVendor."No.";
      lTempContAltAddress."Country/Region Code" := pVendor."Country/Region Code";
      lTempContAltAddress.Address := pVendor.Address;
      lTempContAltAddress."Address 2" := pVendor."Address 2";
      lTempContAltAddress."Address 3" := pVendor."Address 3";//IMH13
      lTempContAltAddress.City := pVendor.City;
      lTempContAltAddress."Post Code" := pVendor."Post Code";
      DecomposeAddr(lTempContAltAddress, pVendor.Address,FALSE);

      lAddressRefForm.InitAddress(lTempContAltAddress);
      lAddressRefForm.SETTABLEVIEW(lTempContAltAddress);
      IF lAddressRefForm.RUNMODAL IN [ACTION::Yes,ACTION::OK] THEN BEGIN
        lAddressRefForm.GetAddress(lTempContAltAddress);
        pVendor.Address := lTempContAltAddress.Address;
        pVendor."Address 2" := lTempContAltAddress."Address 2";
        pVendor."Address 3" := lTempContAltAddress."Address 3";//IMH13
        pVendor."Post Code" := lTempContAltAddress."Post Code";
        pVendor.City := lTempContAltAddress.City;
        pVendor.MODIFY(TRUE);
      END;
    END;

    PROCEDURE AssistBankAddr@1100281003(VAR pBank@1100281000 : Record 270);
    VAR
      lTempContAltAddress@1100281002 : Record 5051;
      lAddressRefForm@1100281001 : Form 50097;
    BEGIN
      //IMH02 isat.zw
      IF NOT CountryToAssist(DATABASE::Contact, pBank."Country/Region Code") THEN
        EXIT;

      lTempContAltAddress."Contact No." := pBank."No.";
      lTempContAltAddress."Country/Region Code" := pBank."Country/Region Code";
      lTempContAltAddress.Address := pBank.Address;
      lTempContAltAddress."Address 2" := pBank."Address 2";
      lTempContAltAddress.City := pBank.City;
      lTempContAltAddress."Post Code" := pBank."Post Code";
      DecomposeAddr(lTempContAltAddress, pBank.Address,FALSE);

      lAddressRefForm.InitAddress(lTempContAltAddress);
      lAddressRefForm.SETTABLEVIEW(lTempContAltAddress);
      IF lAddressRefForm.RUNMODAL IN [ACTION::Yes,ACTION::OK] THEN BEGIN
        lAddressRefForm.GetAddress(lTempContAltAddress);
        pBank.Address := lTempContAltAddress.Address;
        pBank."Address 2" := lTempContAltAddress."Address 2";
        pBank."Post Code" := lTempContAltAddress."Post Code";
        pBank.City := lTempContAltAddress.City;
        pBank.MODIFY(TRUE);
      END;
    END;

    PROCEDURE AssistContAltAddr@1100281004(VAR pContAltAddr@1100281000 : Record 5051);
    VAR
      lTempContAltAddress@1100281001 : TEMPORARY Record 5051;
      lAddressRefForm@1100281002 : Form 50097;
    BEGIN
      //IMH01
      IF NOT CountryToAssist(DATABASE::"Contact Alt. Address", pContAltAddr."Country/Region Code") THEN
        EXIT;

      lTempContAltAddress := pContAltAddr;

      lAddressRefForm.InitAddress(lTempContAltAddress);
      lAddressRefForm.SETTABLEVIEW(lTempContAltAddress);
      IF lAddressRefForm.RUNMODAL IN [ACTION::Yes,ACTION::OK] THEN BEGIN
        lAddressRefForm.GetAddress(lTempContAltAddress);
        pContAltAddr.Address := lTempContAltAddress.Address;
        pContAltAddr."Address 2" := lTempContAltAddress."Address 2";
        pContAltAddr."Address 3" := lTempContAltAddress."Address 3";//IMH13
        pContAltAddr."Post Code" := lTempContAltAddress."Post Code";
        pContAltAddr."Way No." := lTempContAltAddress."Way No.";
        pContAltAddr."Way No. Extension" := lTempContAltAddress."Way No. Extension";
        pContAltAddr."Way Name" := lTempContAltAddress."Way Name";
        pContAltAddr.City := lTempContAltAddress.City;
        pContAltAddr."Geo. Reference Code" := PostCode.GetReferenceGeoCode(pContAltAddr."Post Code",pContAltAddr.City);
        //<<IMH07
        pContAltAddr.Latitude := lTempContAltAddress.Latitude;
        pContAltAddr.Longitude := lTempContAltAddress.Longitude;
        pContAltAddr."Address Geocoded" := lTempContAltAddress."Address Geocoded";
        //>>IMH07

        pContAltAddr.MODIFY(TRUE);
      END;
    END;

    PROCEDURE AssistProviderAddr@1100281005(VAR pProvider@1100281000 : Record 50000);
    VAR
      lTempContAltAddress@1100281002 : TEMPORARY Record 5051;
      lContAltAddress@1100281003 : Record 5051;
      lAddressRefForm@1100281001 : Form 50097;
    BEGIN
      //IMH02 isat.zw
      IF NOT CountryToAssist(DATABASE::Contact, pProvider."Country/Region Code") THEN
        EXIT;

      //<<IMH03
      lContAltAddress.SETRANGE("Contact No.",pProvider."No.");
      lContAltAddress.SETRANGE("Contact Address",TRUE);
      IF lContAltAddress.FINDFIRST THEN BEGIN
        lTempContAltAddress := lContAltAddress;
      END;

      //DecomposeAddr(lTempContAltAddress, pProvider.Address,FALSE);
      //>>IMH03

      lAddressRefForm.InitAddress(lTempContAltAddress);
      lAddressRefForm.SETTABLEVIEW(lTempContAltAddress);
      IF lAddressRefForm.RUNMODAL IN [ACTION::Yes,ACTION::OK] THEN BEGIN
        lAddressRefForm.GetAddress(lTempContAltAddress);
        //<<IMH03
        lContAltAddress.Address := lTempContAltAddress.Address;
        lContAltAddress."Address 2" := lTempContAltAddress."Address 2";
        lContAltAddress."Address 3" := lTempContAltAddress."Address 3";//IMH13
        lContAltAddress.City := lTempContAltAddress.City;
        lContAltAddress."Post Code" := lTempContAltAddress."Post Code";
         lContAltAddress.County := lTempContAltAddress.County;
        lContAltAddress."Country/Region Code" := lTempContAltAddress."Country/Region Code";
        //lContAltAddress."Way Type" := lTempContAltAddress."Way Type";
        lContAltAddress."Way No." := lTempContAltAddress."Way No.";
        lContAltAddress."Way No. Extension" := lTempContAltAddress."Way No. Extension";
        lContAltAddress."Way Name" := lTempContAltAddress."Way Name";
        lContAltAddress."Geo. Reference Code" := PostCode.GetReferenceGeoCode(lContAltAddress."Post Code",lContAltAddress.City);
        //<<IMH07
        lContAltAddress.Latitude := lTempContAltAddress.Latitude;
        lContAltAddress.Longitude := lTempContAltAddress.Longitude;
        lContAltAddress."Address Geocoded" := lTempContAltAddress."Address Geocoded";
        //>>IMH07

        lContAltAddress.MODIFY;
        //>>IMH03

        pProvider.Address := lTempContAltAddress.Address;
        pProvider."Address 2" := lTempContAltAddress."Address 2";
        pProvider."Post Code" := lTempContAltAddress."Post Code";
        //<<IMH09
        pProvider.VALIDATE("Post Code");
        //>>IMH09
        pProvider.City := lTempContAltAddress.City;
        pProvider.MODIFY(TRUE);
      END;
    END;

    PROCEDURE CountryToAssist@1100281006(pTableRef@1100281000 : Integer;pCountyCode@1100281001 : Code[10]) : Boolean;
    VAR
      lCountryRegion@1100281002 : Record 9;
    BEGIN
      //IMH02
      IF pCountyCode = '' THEN BEGIN
        EXIT(TRUE);
      END;

      IF lCountryRegion.GET(pCountyCode) THEN;
      EXIT(lCountryRegion."Address Standardization");
    END;

    PROCEDURE DecomposeAddr@1100281007(VAR pContAltAddr@1100281000 : Record 5051;VAR pText@1100281001 : Text[1024];pFromQuickAddress@1100281012 : Boolean) : Boolean;
    VAR
      lPostCodeRec@1100281009 : Record 225;
      lToolsMgt@1100281010 : Codeunit 8016602;
      lAddr@1100281008 : Text[1024];
      lText@1100281007 : Text[100];
      lCity@1100281006 : Text[50];
      lWayType@1100281005 : Text[50];
      lWayName@1100281004 : Text[100];
      lPostCode@1100281003 : Code[10];
      lWayNo@1100281002 : Integer;
      lPos@1100281011 : Integer;
    BEGIN
      //IMH03
      //la saisie rapide a le format suivant
      // nø voie ! voie ! code postal ! ville
      // v‚rifie le format de saisie
      IF pFromQuickAddress THEN BEGIN
        EXIT(DecomposeQuickAddr(pContAltAddr,pText));
      END ELSE BEGIN
        EXIT(DecomposeAddrField(pContAltAddr,pText));
      END;
    END;

    PROCEDURE DecomposeAddrField@1100281010(VAR pContAltAddr@1100281000 : Record 5051;VAR pText@1100281001 : Text[1024]) : Boolean;
    VAR
      lPostCodeRec@1100281009 : Record 225;
      lToolsMgt@1100281010 : Codeunit 8016602;
      lAddr@1100281008 : Text[1024];
      lText@1100281007 : Text[100];
      lCity@1100281006 : Text[50];
      lWayType@1100281005 : Text[50];
      lWayName@1100281004 : Text[100];
      lPostCode@1100281003 : Code[10];
      lWayNo@1100281002 : Integer;
      lPos@1100281011 : Integer;
    BEGIN
      //IMH03
      // Decompose l'adresse pour initialiser le formulaire
      lPos := STRPOS(pText,' ');
      IF lPos > 1 THEN BEGIN
        //<<IMH06
        IF GetNumber(COPYSTR(pText,1,lPos-1),lWayNo, pContAltAddr."Way No. Extension") THEN BEGIN
        //IF EVALUATE(lWayNo,COPYSTR(pText,1,lPos-1)) THEN BEGIN
          pContAltAddr."Way No." := lWayNo;
          pContAltAddr."Way Name" := COPYSTR(pText,lPos+1,STRLEN(pText)-lPos);
        END;
      END ELSE BEGIN
        pContAltAddr."Way Name" := pText;
      END;
      EXIT(TRUE);
    END;

    PROCEDURE DecomposeQuickAddr@1100281008(VAR pContAltAddr@1100281000 : Record 5051;VAR pText@1100281001 : Text[1024]) : Boolean;
    VAR
      lPostCodeRec@1100281009 : Record 225;
      lNewPostCode@1100281012 : Record 225;
      lToolsMgt@1100281010 : Codeunit 8016602;
      lAbiGeoMgt@1100281013 : Codeunit 50011;
      lAddr@1100281008 : Text[1024];
      lText@1100281007 : Text[100];
      lCity@1100281006 : Text[50];
      lWayType@1100281005 : Text[50];
      lWayName@1100281004 : Text[100];
      lPostCode@1100281003 : Code[10];
      lWayNo@1100281002 : Integer;
      lPos@1100281011 : Integer;
      lEmptyStr@1100281014 : Text[50];
      lLongitude@1100281015 : Integer;
      lLatitude@1100281016 : Integer;
    BEGIN
      //IMH03
      //la saisie rapide a le format suivant
      // nø voie ! voie ! code postal ! ville
      // v‚rifie le format de saisie
      IF pText = '' THEN
        EXIT;
      IF lToolsMgt.GetCharNo(pText,Separator) <> 3 THEN BEGIN
        MESSAGE(STRSUBSTNO(Text003,Separator));
        EXIT;
      END;
      lAddr := CONVERTSTR(pText,',',' ');
      lAddr := CONVERTSTR(lAddr,Separator,',');
      // nø voie
      lPos := STRPOS(lAddr,',');
      IF lPos <> 1 THEN BEGIN
        lText := SELECTSTR(1,lAddr);
        IF lText = '' THEN
          lText := '0';
        //<<IMH06
        //EVALUATE(lWayNo,lText);
        GetNumber(lText,lWayNo, pContAltAddr."Way No. Extension");
        //>>IMH06
      END;
      lAddr := COPYSTR(lAddr,lPos+1,STRLEN(lAddr)-lPos);
      // voie
      lPos := STRPOS(lAddr,',');
      IF lPos <> 1 THEN BEGIN
        lText := SELECTSTR(1,lAddr);
        lWayName := lText;
      END;
      lAddr := COPYSTR(lAddr,lPos+1,STRLEN(lAddr)-lPos);
      // code postal
      lPos := STRPOS(lAddr,',');
      IF lPos <> 1 THEN BEGIN
        lText := SELECTSTR(1,lAddr);
        EVALUATE(lPostCode,lText);
      END;
      lAddr := COPYSTR(lAddr,lPos+1,STRLEN(lAddr)-lPos);
      // ville
      IF lAddr <> '' THEN BEGIN
        lText := SELECTSTR(1,lAddr);
        EVALUATE(lCity,lText);

      END;
      lPostCodeRec.SETRANGE(Code,lPostCode);
      IF lPostCodeRec.ISEMPTY THEN BEGIN
        //<<IMH09
        lPostCodeRec.RESET;
        lPostCodeRec.SETFILTER(Code,'%1',lPostCode+'*');
        lPostCodeRec.SETFILTER(City,'%1','*'+lCity+'*');
        IF lPostCodeRec.ISEMPTY THEN BEGIN
          //>>IMH09
          IF CONFIRM(STRSUBSTNO(Text001,lPostCode)) THEN BEGIN
            lNewPostCode.INIT;
            lNewPostCode.Code := lPostCode;
            lNewPostCode.VALIDATE(City,lCity);
            lNewPostCode.INSERT(TRUE);
          END ELSE BEGIN
            EXIT;
          END;
        //<<IMH09
        END ELSE BEGIN
          IF lPostCodeRec.COUNT = 1 THEN BEGIN
            lPostCodeRec.FINDFIRST;
            lPostCode := lPostCodeRec.Code;
            lCity := lPostCodeRec.City;
          END ELSE BEGIN
            IF FORM.RUNMODAL(0,lPostCodeRec) = ACTION::LookupOK THEN BEGIN
              lPostCode := lPostCodeRec.Code;
              lCity := lPostCodeRec.City;
            END;
          END;
        END;
        //>>IMH09

      END ELSE BEGIN
        IF lCity <> '' THEN BEGIN
          lPostCodeRec.RESET;
          lPostCodeRec.SETRANGE(City,lCity);
          lPostCodeRec.SETRANGE(Code,lPostCode);
          IF lPostCodeRec.ISEMPTY THEN BEGIN
            //<<IMH09
            lPostCodeRec.SETRANGE(City);
            lPostCodeRec.SETFILTER(City,'%1','*'+lCity+'*');
            IF lPostCodeRec.ISEMPTY THEN BEGIN
              //>>IMH09
              IF CONFIRM(STRSUBSTNO(Text002,lCity,lPostCode)) THEN BEGIN
                lNewPostCode.INIT;
                lNewPostCode.Code := lPostCode;
                lNewPostCode.VALIDATE(City,lCity);
                lNewPostCode.INSERT(TRUE);
              END ELSE BEGIN
                EXIT;
              END;
            //<<IMH09
            END ELSE BEGIN
              //<<IMH11
              //lPostCodeRec.FINDFIRST;
              //lCity := lPostCodeRec.City;
              IF lPostCodeRec.COUNT = 1 THEN BEGIN
                lPostCodeRec.FINDFIRST;
                lCity := lPostCodeRec.City;
              END ELSE BEGIN
                IF FORM.RUNMODAL(0,lPostCodeRec) = ACTION::LookupOK THEN BEGIN
                  lCity := lPostCodeRec.City;
                END;
              END;
              //>>IMH11
            END;
            //>>IMH09
          END;
        END;
      END;
      IF lCity <> '' THEN
        CheckCity(lCity);
      pContAltAddr.City := lCity;
      pContAltAddr.Address := lWayName;
      //
      IF (lPostCode <> '') THEN BEGIN
        IF (lCity = '') THEN
          pContAltAddr.VALIDATE("Post Code",lPostCode)
        ELSE
          pContAltAddr."Post Code" := lPostCode;
      END ELSE BEGIN
        IF lCity <> '' THEN
          pContAltAddr.VALIDATE(City,lCity)
        ELSE
          pContAltAddr.City := lCity;
      END;

      IF NOT NormalizeAddByAddRef(lWayName, lPostCode, lCity) THEN //IMH10 isat.zw
        //<<IMH08 isat.nfo
        IF lAbiGeoMgt.NormalizeAddress(lWayName,lEmptyStr,lPostCode,lCity,lLongitude,lLatitude) THEN BEGIN
          //"Address Geocoded" := (Longitude<>0) AND(Latitude<>0);
          //KeyboardingAddress := FORMAT("Way No.") + '|' + "Way Name" + '|' + "Post Code" + '|' + City;
        END;
        //>>IMH08 isat.nfo
      pContAltAddr."Way No." := lWayNo;
      pContAltAddr."Way Name" := lWayName;

      EXIT(TRUE);
    END;

    PROCEDURE AssistContactQuickAddress@1100281009(VAR pContact@1100281000 : Record 5050;VAR pText@1100281001 : Text[1024]) : Boolean;
    VAR
      lContAltAddress@1100281002 : Record 5051;
      lTempContAltAddress@1100281003 : Record 5051;
    BEGIN
      //IMH03



      IF NOT CountryToAssist(DATABASE::Contact, pContact."Country/Region Code") THEN
        EXIT;

      lContAltAddress.SETRANGE("Contact No.",pContact."No.");
      lContAltAddress.SETRANGE("Contact Address",TRUE);
      IF lContAltAddress.FINDFIRST THEN BEGIN
        lTempContAltAddress := lContAltAddress;
      END;
      IF DecomposeQuickAddr(lTempContAltAddress,pText) THEN BEGIN
        CreateAddress(TRUE,lTempContAltAddress);
        lContAltAddress.Address := lTempContAltAddress.Address;
        lContAltAddress."Address 2" := lTempContAltAddress."Address 2";
        lContAltAddress."Address 3" := lTempContAltAddress."Address 3";//IMH13
        lContAltAddress.City := lTempContAltAddress.City;
        lContAltAddress."Post Code" := lTempContAltAddress."Post Code";
        lContAltAddress.County := lTempContAltAddress.County;
        lContAltAddress."Country/Region Code" := lTempContAltAddress."Country/Region Code";
        //lContAltAddress."Way Type" := lTempContAltAddress."Way Type";
        lContAltAddress."Way No." := lTempContAltAddress."Way No.";
        lContAltAddress."Way No. Extension" := lTempContAltAddress."Way No. Extension";
        lContAltAddress."Way Name" := lTempContAltAddress."Way Name";

        lContAltAddress."Geo. Reference Code" := PostCode.GetReferenceGeoCode(lContAltAddress."Post Code",lContAltAddress.City);
        //<<IMH07
        lContAltAddress.Latitude := lTempContAltAddress.Latitude;
        lContAltAddress.Longitude := lTempContAltAddress.Longitude;
        lContAltAddress."Address Geocoded" := lTempContAltAddress."Address Geocoded";
        //>>IMH07

        lContAltAddress.MODIFY;

        pContact.Address := lTempContAltAddress.Address;
        pContact."Address 2" := lTempContAltAddress."Address 2";
        pContact."Address 3" := lTempContAltAddress."Address 3";//IMH13
        pContact."Post Code" := lTempContAltAddress."Post Code";
        pContact.City := lTempContAltAddress.City;
        pContact."Geo. Reference Code" := PostCode.GetReferenceGeoCode(pContact."Post Code",pContact.City);
        pContact.MODIFY(TRUE);
        EXIT(TRUE);
      END;
    END;

    PROCEDURE AssistCustQuickAddr@1100281013(VAR pCustomer@1100281000 : Record 18;VAR pText@1100281003 : Text[1024]) : Boolean;
    VAR
      lTempContAltAddress@1100281002 : Record 5051;
      lAddressRefForm@1100281001 : Form 50097;
    BEGIN
      //IMH03
      IF NOT CountryToAssist(DATABASE::Contact, pCustomer."Country/Region Code") THEN
        EXIT;

      lTempContAltAddress."Contact No." := pCustomer."No.";
      lTempContAltAddress."Country/Region Code" := pCustomer."Country/Region Code";
      lTempContAltAddress.Address := pCustomer.Address;
      lTempContAltAddress."Address 2" := pCustomer."Address 2";
      lTempContAltAddress."Address 3" := pCustomer."Address 3"; //IMH13
      lTempContAltAddress.City := pCustomer.City;
      lTempContAltAddress."Post Code" := pCustomer."Post Code";
      IF DecomposeQuickAddr(lTempContAltAddress,pText) THEN BEGIN
        CreateAddress(TRUE,lTempContAltAddress);
        pCustomer.Address := lTempContAltAddress.Address;
        pCustomer."Address 2" := lTempContAltAddress."Address 2";
        pCustomer."Address 3" := lTempContAltAddress."Address 3";//IMH13
        pCustomer."Post Code" := lTempContAltAddress."Post Code";
        pCustomer.City := lTempContAltAddress.City;
        pCustomer.MODIFY(TRUE);
        EXIT(TRUE);
      END;
    END;

    PROCEDURE AssistProviderQuickAddr@1100281015(VAR pProvider@1100281000 : Record 50000;VAR pText@1100281004 : Text[1024]) : Boolean;
    VAR
      lTempContAltAddress@1100281002 : TEMPORARY Record 5051;
      lContAltAddress@1100281003 : Record 5051;
      lAddressRefForm@1100281001 : Form 50097;
    BEGIN
      //IMH03
      IF NOT CountryToAssist(DATABASE::Contact, pProvider."Country/Region Code") THEN
        EXIT;

      lContAltAddress.SETRANGE("Contact No.",pProvider."No.");
      lContAltAddress.SETRANGE("Contact Address",TRUE);
      IF lContAltAddress.FINDFIRST THEN BEGIN
        lTempContAltAddress := lContAltAddress;
      END;
      IF DecomposeQuickAddr(lTempContAltAddress,pText) THEN BEGIN
        CreateAddress(TRUE,lTempContAltAddress);

        lContAltAddress.Address := lTempContAltAddress.Address;
        lContAltAddress."Address 2" := lTempContAltAddress."Address 2";
        lContAltAddress."Address 3" := lTempContAltAddress."Address 3";//IMH13
        lContAltAddress.City := lTempContAltAddress.City;
        lContAltAddress."Post Code" := lTempContAltAddress."Post Code";
        lContAltAddress.County := lTempContAltAddress.County;
        lContAltAddress."Country/Region Code" := lTempContAltAddress."Country/Region Code";
        //lContAltAddress."Way Type" := lTempContAltAddress."Way Type";
        lContAltAddress."Way No." := lTempContAltAddress."Way No.";
        lContAltAddress."Way No. Extension" := lTempContAltAddress."Way No. Extension";
        lContAltAddress."Way Name" := lTempContAltAddress."Way Name";
        lContAltAddress."Geo. Reference Code" := PostCode.GetReferenceGeoCode(lContAltAddress."Post Code",lContAltAddress.City);
        //<<IMH07
        lContAltAddress.Latitude := lTempContAltAddress.Latitude;
        lContAltAddress.Longitude := lTempContAltAddress.Longitude;
        lContAltAddress."Address Geocoded" := lTempContAltAddress."Address Geocoded";
        //>>IMH07

        lContAltAddress.MODIFY;

        pProvider.Address := lTempContAltAddress.Address;
        pProvider."Address 2" := lTempContAltAddress."Address 2";
        pProvider."Post Code" := lTempContAltAddress."Post Code";
        pProvider.City := lTempContAltAddress.City;
        pProvider."Geo. Reference Code" := PostCode.GetReferenceGeoCode(pProvider."Post Code",pProvider.City);
        //<<IMH09
        pProvider.VALIDATE("Post Code");
        //>>IMH09
        pProvider.City := lTempContAltAddress.City;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE CreateAddress@1100281011(pIncludeWayType@1100281001 : Boolean;VAR pAltAddress@1100281003 : Record 5051);
    VAR
      lCode@1100281000 : Record 50079;
      lWayTypeText@1100281002 : Text[50];
    BEGIN
      WITH pAltAddress DO BEGIN

      {IF lCode.GET(50077, 21, "Way Type") THEN;
      IF pIncludeWayType THEN
        lWayTypeText := lCode.Description;
      IF lWayTypeText <> '' THEN
        lWayTypeText := ' ' + lWayTypeText;
      }
      IF "Way No." = 0 THEN
        Address := COPYSTR("Way No. Extension" + lWayTypeText + ' ' + "Way Name",
                           1, MAXSTRLEN(Address))
      ELSE
        IF "Way No. Extension" <> '' THEN
          //<<IMH04
          //Address := COPYSTR(FORMAT("Way No.") + ' ' + "Way No. Extension" + lWayTypeText + ' ' + "Way Name",
          //                 1, MAXSTRLEN(Address))
          Address := COPYSTR(FORMAT("Way No.") + ' ' + "Way No. Extension" + ' ' + "Way Name",
                           1, MAXSTRLEN(Address))
          //>>IMH04
        ELSE
          //<<IMH04
          //Address := COPYSTR(FORMAT("Way No.") + lWayTypeText + ' ' + "Way Name",
          //                 1, MAXSTRLEN(Address));
          Address := COPYSTR(FORMAT("Way No.") + ' ' + "Way Name",
                           1, MAXSTRLEN(Address));
          //>>IMH04
      END;
    END;

    PROCEDURE CheckCity@1100281012(VAR pCity@1100281000 : Text[30]);
    VAR
      lPostCode@1100281001 : Record 225;
    BEGIN
      lPostCode.SETCURRENTKEY("Search City");
      lPostCode.SETRANGE("Search City",UPPERCASE(pCity));
      IF lPostCode.ISEMPTY THEN
        EXIT;
      lPostCode.FINDFIRST;
      pCity := lPostCode.City;
    END;

    PROCEDURE DecomposeSHAddr@1100281014(VAR pSHAddress@1100281000 : Record 50068;VAR pText@1100281001 : Text[1024];pFromQuickAddress@1100281012 : Boolean) : Boolean;
    VAR
      lPostCodeRec@1100281009 : Record 225;
      lToolsMgt@1100281010 : Codeunit 8016602;
      lAddr@1100281008 : Text[1024];
      lText@1100281007 : Text[100];
      lCity@1100281006 : Text[50];
      lWayType@1100281005 : Text[50];
      lWayName@1100281004 : Text[100];
      lPostCode@1100281003 : Code[10];
      lWayNo@1100281002 : Integer;
      lPos@1100281011 : Integer;
    BEGIN
      //IMH05
      //la saisie rapide a le format suivant
      // nø voie ! voie ! code postal ! ville
      // v‚rifie le format de saisie
      IF pFromQuickAddress THEN BEGIN
        EXIT(DecomposeSHQuickAddr(pSHAddress,pText));
      END ELSE BEGIN
        EXIT(DecomposeSHAddrField(pSHAddress,pText));
      END;
    END;

    PROCEDURE DecomposeSHQuickAddr@1100281016(VAR pSHAddress@1100281000 : Record 50068;VAR pText@1100281001 : Text[1024]) : Boolean;
    VAR
      lPostCodeRec@1100281009 : Record 225;
      lNewPostCode@1100281012 : Record 225;
      lToolsMgt@1100281010 : Codeunit 8016602;
      lAbiGeoMgt@1100281013 : Codeunit 50011;
      lAddr@1100281008 : Text[1024];
      lText@1100281007 : Text[100];
      lCity@1100281006 : Text[50];
      lWayType@1100281005 : Text[50];
      lWayName@1100281004 : Text[100];
      lPostCode@1100281003 : Code[10];
      lWayNo@1100281002 : Integer;
      lPos@1100281011 : Integer;
      lEmptyStr@1100281016 : Text[50];
      lLongitude@1100281015 : Integer;
      lLatitude@1100281014 : Integer;
    BEGIN
      //IMH05
      //la saisie rapide a le format suivant
      // nø voie ! voie ! code postal ! ville
      // v‚rifie le format de saisie
      IF pText = '' THEN
        EXIT;
      IF lToolsMgt.GetCharNo(pText,Separator) <> 3 THEN BEGIN
        MESSAGE(STRSUBSTNO(Text003,Separator));
        EXIT;
      END;
      lAddr := CONVERTSTR(pText,',',' ');
      lAddr := CONVERTSTR(lAddr,Separator,',');
      // nø voie
      lPos := STRPOS(lAddr,',');
      IF lPos <> 1 THEN BEGIN
        lText := SELECTSTR(1,lAddr);
        IF lText = '' THEN
          lText := '0';
        //<<IMH06
        //EVALUATE(lWayNo,lText);
        GetNumber(lText,lWayNo, pSHAddress."Way No. Extension");
        //>>IMH06
      END;
      lAddr := COPYSTR(lAddr,lPos+1,STRLEN(lAddr)-lPos);
      // voie
      lPos := STRPOS(lAddr,',');
      IF lPos <> 1 THEN BEGIN
        lText := SELECTSTR(1,lAddr);
        lWayName := lText;
      END;
      lAddr := COPYSTR(lAddr,lPos+1,STRLEN(lAddr)-lPos);
      // code postal
      lPos := STRPOS(lAddr,',');
      IF lPos <> 1 THEN BEGIN
        lText := SELECTSTR(1,lAddr);
        EVALUATE(lPostCode,lText);
      END;

      lAddr := COPYSTR(lAddr,lPos+1,STRLEN(lAddr)-lPos);
      // ville
      IF lAddr <> '' THEN BEGIN
        lText := SELECTSTR(1,lAddr);
        EVALUATE(lCity,lText);

      END;
      lPostCodeRec.SETRANGE(Code,lPostCode);
      IF lPostCodeRec.ISEMPTY THEN BEGIN
        //<<IMH09
        lPostCodeRec.RESET;
        lPostCodeRec.SETFILTER(Code,'%1',lPostCode+'*');
        lPostCodeRec.SETFILTER(City,'%1','*'+lCity+'*');
        //>>IMH09
        IF lPostCodeRec.ISEMPTY THEN BEGIN
          IF CONFIRM(STRSUBSTNO(Text001,lPostCode)) THEN BEGIN
            lNewPostCode.INIT;
            lNewPostCode.Code := lPostCode;
            lNewPostCode.VALIDATE(City,lCity);
            lNewPostCode.INSERT(TRUE);
          END ELSE BEGIN
            EXIT;
          END;
        //<<IMH09
        END ELSE BEGIN
          IF lPostCodeRec.COUNT = 1 THEN BEGIN
            lPostCodeRec.FINDFIRST;
            lPostCode := lPostCodeRec.Code;
            lCity := lPostCodeRec.City;
          END ELSE BEGIN
            IF FORM.RUNMODAL(0,lPostCodeRec) = ACTION::LookupOK THEN BEGIN
              lPostCode := lPostCodeRec.Code;
              lCity := lPostCodeRec.City;
            END;
          END;
        END;
        //>>IMH09
      END ELSE BEGIN
        IF lCity <> '' THEN BEGIN
          lPostCodeRec.RESET;
          lPostCodeRec.SETRANGE(City,lCity);
          lPostCodeRec.SETRANGE(Code,lPostCode);
          IF lPostCodeRec.ISEMPTY THEN BEGIN
            //<<IMH09
            lPostCodeRec.SETRANGE(City);
            lPostCodeRec.SETFILTER(City,'%1','*'+lCity+'*');
            IF lPostCodeRec.ISEMPTY THEN BEGIN
            //>>IMH09
              IF CONFIRM(STRSUBSTNO(Text002,lCity,lPostCode)) THEN BEGIN
                lNewPostCode.INIT;
                lNewPostCode.Code := lPostCode;
                lNewPostCode.VALIDATE(City,lCity);
                lNewPostCode.INSERT(TRUE);
              END ELSE BEGIN
                EXIT;
              END;
            //<<IMH09
            END ELSE BEGIN
              //<<IMH11
              //lPostCodeRec.FINDFIRST;
              //lCity := lPostCodeRec.City;
              IF lPostCodeRec.COUNT = 1 THEN BEGIN
                lPostCodeRec.FINDFIRST;
                lCity := lPostCodeRec.City;
              END ELSE BEGIN
                IF FORM.RUNMODAL(0,lPostCodeRec) = ACTION::LookupOK THEN BEGIN
                  lCity := lPostCodeRec.City;
                END;
              END;
              //>>IMH11
            END;
            //>>IMH09
          END;
        END;
      END;
      IF lCity <> '' THEN
        CheckCity(lCity);
      pSHAddress.City := lCity;
      pSHAddress.Address := lWayName;

      IF (lPostCode <> '') THEN BEGIN
        IF (lCity = '') THEN
          pSHAddress.VALIDATE("Post Code",lPostCode)
        ELSE
          pSHAddress."Post Code" := lPostCode;
      END ELSE BEGIN
        IF lCity <> '' THEN
          pSHAddress.VALIDATE(City,lCity)
        ELSE
          pSHAddress.City := lCity;
      END;
      //<<IMH12
      IF NOT NormalizeAddByAddRef(lWayName, lPostCode, lCity) THEN
        IF lAbiGeoMgt.NormalizeAddress(lWayName,lEmptyStr,lPostCode,lCity,lLongitude,lLatitude) THEN BEGIN
        END;
      //>>IMH12
      pSHAddress."Way No." := lWayNo;
      pSHAddress."Way Name" := lWayName;
      EXIT(TRUE);
    END;

    PROCEDURE DecomposeSHAddrField@1100281017(VAR pSHAddress@1100281000 : Record 50068;VAR pText@1100281001 : Text[1024]) : Boolean;
    VAR
      lPostCodeRec@1100281009 : Record 225;
      lToolsMgt@1100281010 : Codeunit 8016602;
      lAddr@1100281008 : Text[1024];
      lText@1100281007 : Text[100];
      lCity@1100281006 : Text[50];
      lWayType@1100281005 : Text[50];
      lWayName@1100281004 : Text[100];
      lPostCode@1100281003 : Code[10];
      lWayNo@1100281002 : Integer;
      lPos@1100281011 : Integer;
    BEGIN
      //IMH05
      // Decompose l'adresse pour initialiser le formulaire
      lPos := STRPOS(pText,' ');
      IF lPos > 1 THEN BEGIN
        IF EVALUATE(lWayNo,COPYSTR(pText,1,lPos-1)) THEN BEGIN
          pSHAddress."Way No." := lWayNo;
          pSHAddress."Way Name" := COPYSTR(pText,lPos+1,STRLEN(pText)-lPos);
        END;
      END ELSE BEGIN
        pSHAddress."Way Name" := pText;
      END;
      EXIT(TRUE);
    END;

    PROCEDURE GetNumber@1100281018(pText@1100281000 : Text[30];VAR pWayNo@1100281001 : Integer;VAR pExtention@1100281002 : Code[10]) : Boolean;
    VAR
      lCode@1100281006 : Record 50079;
      lInt@1100281003 : Integer;
      lInt2@1100281004 : Integer;
      lText@1100281005 : Text[30];
      i@1100281007 : Integer;
      lLen@1100281008 : Integer;
    BEGIN
      //IMH06
      IF pText = '' THEN
        EXIT;
      lLen := STRLEN(pText);
      IF EVALUATE(lInt,pText) THEN BEGIN
        pWayNo := lInt;
        EXIT(TRUE);
      END;
      i := 1;
      REPEAT
        lText :=COPYSTR(pText,1,i);
        i += 1;
      UNTIL NOT EVALUATE(lInt2,lText);
      IF i > 2 THEN
        i := i - 2;
      EVALUATE(pWayNo,COPYSTR(pText,1,i));
      IF i < lLen THEN BEGIN
        lText := COPYSTR(pText,i+1,lLen-i);
        lCode.SETRANGE("Table ID",DATABASE::"Contact Alt. Address");
        lCode.SETRANGE("Field ID",50062);
        lCode.SETFILTER(Code,'%1|%2',lText,UPPERCASE(lText));
        IF lCode.ISEMPTY THEN BEGIN
          lCode.SETRANGE(Code);
          lCode.SETRANGE(Description,lText);
        END;
        IF lCode.ISEMPTY THEN
          EXIT(TRUE);
        lCode.FINDFIRST;
        pExtention := lCode.Code;
      END;
      EXIT(TRUE);
    END;

    PROCEDURE GetContactAltAddQuickAddress@1100281019(VAR pContactAltAddress@1100281000 : Record 5051) rValue : Text[1024];
    VAR
      lWayExtension@1100281001 : Text[30];
    BEGIN
      IF pContactAltAddress."Way No. Extension" <> '' THEN
        lWayExtension := ' ' + pContactAltAddress."Way No. Extension";
      rValue := FORMAT(pContactAltAddress."Way No.") + lWayExtension + '!' + pContactAltAddress."Way Name" +
              '!' + pContactAltAddress."Post Code" + '!' + pContactAltAddress.City;
      EXIT(rValue);
    END;

    PROCEDURE GetContactQuickAddress@1100281020(VAR pContact@1100281000 : Record 5050) rValue : Text[1024];
    VAR
      lContactAltAddress@1100281002 : Record 5051;
      lWayExtension@1100281001 : Text[30];
    BEGIN
      lContactAltAddress.SETRANGE("Contact No.",pContact."No.");
      lContactAltAddress.SETRANGE("Contact Address",TRUE);
      IF lContactAltAddress.ISEMPTY THEN
        EXIT;
      lContactAltAddress.FINDFIRST;
      IF lContactAltAddress."Way No. Extension" <> '' THEN
        lWayExtension := ' ' + lContactAltAddress."Way No. Extension";
      rValue := FORMAT(lContactAltAddress."Way No.") + lWayExtension + '!' + lContactAltAddress."Way Name" +
              '!' + lContactAltAddress."Post Code" + '!' + lContactAltAddress.City;
      EXIT(rValue);
    END;

    PROCEDURE GetProviderQuickAddress@1100281022(VAR pProvider@1100281000 : Record 50000) rValue : Text[1024];
    VAR
      lContactAltAddress@1100281002 : Record 5051;
      lWayExtension@1100281001 : Text[30];
    BEGIN
      lContactAltAddress.SETRANGE("Contact No.",pProvider."No.");
      lContactAltAddress.SETRANGE("Contact Address",TRUE);
      IF lContactAltAddress.ISEMPTY THEN
        EXIT;
      lContactAltAddress.FINDFIRST;
      IF lContactAltAddress."Way No. Extension" <> '' THEN
        lWayExtension := ' ' + lContactAltAddress."Way No. Extension";
      rValue := FORMAT(lContactAltAddress."Way No.") + lWayExtension + '!' + lContactAltAddress."Way Name" +
              '!' + lContactAltAddress."Post Code" + '!' + lContactAltAddress.City;
      EXIT(rValue);
    END;

    PROCEDURE NormalizeAddByAddRef@1100281021(VAR pWayName@1100281005 : Text[50];pPostCode@1100281003 : Code[6];pCity@1100281008 : Text[30]) : Boolean;
    VAR
      lAddressReference@1100281007 : Record 50077;
      lRefContactAltAddr@1100281001 : TEMPORARY Record 5051;
      lBuffContactAltAddr@1100281006 : TEMPORARY Record 5051;
      lNormContactAltAddr@1100281004 : Form 50019;
      lOk@1100281002 : Boolean;
      lWayName@1100281000 : Text[50];
    BEGIN
      //IMH10 isat.zw
      lWayName := pWayName;
      lRefContactAltAddr."Way Name" := pWayName;
      lRefContactAltAddr."Post Code":= pPostCode;
      lRefContactAltAddr.City := pCity;

      lAddressReference.SETCURRENTKEY("Post Code", City, "Country/Region Code");
      lAddressReference.SETRANGE("Post Code", pPostCode);
      lAddressReference.SETRANGE(City, pCity);
      IF lWayName <> '' THEN
        lAddressReference.SETFILTER("Way Name", '@*' + ChangeSpecChar(lWayName)+'*');
      IF lAddressReference.ISEMPTY THEN
        EXIT(FALSE);
      lAddressReference.FINDFIRST;
      IF lAddressReference.COUNT = 1 THEN BEGIN
        pWayName := lAddressReference."Way Name";
        EXIT(TRUE);
      END ELSE BEGIN

        REPEAT
          lBuffContactAltAddr."Contact No." :=
            COPYSTR(FORMAT(lAddressReference."Entry No."), 1, MAXSTRLEN(lBuffContactAltAddr."Contact No."));
          lBuffContactAltAddr.Code := lAddressReference."Country/Region Code";
          lBuffContactAltAddr.Address := lAddressReference."Way Name";
          lBuffContactAltAddr."Post Code" := lAddressReference."Post Code";
          lBuffContactAltAddr.City := pCity;
          lBuffContactAltAddr.INSERT;
        UNTIL lAddressReference.NEXT = 0;
      END;
      lNormContactAltAddr.LoadTable(lRefContactAltAddr,lBuffContactAltAddr);
      IF lNormContactAltAddr.RUNMODAL = ACTION::LookupOK THEN BEGIN
        lNormContactAltAddr.GETRECORD(lBuffContactAltAddr);
        pWayName := lBuffContactAltAddr.Address;
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE ChangeSpecChar@1100281023(VAR pString@1100281000 : Text[1024]) : Text[1024];
    VAR
      lToolsMgt@1100281004 : Codeunit 8016602;
      lText001@1100281003 : TextConst 'ENU='';FRA=''';
    BEGIN
      //IMH10 isat.zw
      EXIT(lToolsMgt.ChangeSpecChar(pString, ' ' + lText001));
    END;

    BEGIN
    {
      /** @r IMH13 @d 01/09/11 @a ISAT.LLT @v IMH6.01.001 @s Normalisation des donn‚es
          @c Ajout adresse 3 */
      /** @r IMH12 @d 18/03/11 @a ISAT.LLT @v IMH6.01.001 @s Normalisation des donn‚es
          @c gestion normalisation adresse pour adresses ligne produit */
      /** @r IMH11 @d 02/03/11 @a ISAT.LLT @v IMH6.01.001 @s Normalisation des donn‚es
          @c Selection ville dans recherche rapide */
      /** @r IMH10 @d 07/02/11 @a ISAT.ZW @v IMH6.01.001 @s Normalisation des donn‚es
          @c fonction NormalizeAddByAddRef */
      /** @r IMH09 @d 27/01/11 @a ISAT.LLT @v IMH6.01.001 @s Normalisation des donn‚es
          @c Modif saisie adresse rapide
          @c Correction pb de transaction */
      /** @r IMH08 @d 26/01/11 @a ISAT.NFO @v IMH6.01.001 @s Normalisation des donn‚es
          @c g‚ocodage + normalisation */

      /** @r IMH07 @d 19/01/11 @a ISAT.NFO @v IMH6.01.001 @s Normalisation des donn‚es
          @c Copie des donn‚es g‚ographique */

      /** @r IMH06 @d 04/01/11 @a ISAT.LLT @v IMH6.01.001 @s Normalisation des donn‚es
          @c Gestion de l'extension */
      /** @r IMH05 @d 13/12/10 @a ISAT.LLT @v IMH6.01.001 @s Normalisation des donn‚es
          @c Ajout gestion adresse rapide pour les adresses tiers */
      /** @r IMH04 @d 01/12/10 @a ISAT.LLT @v IMH6.01.001 @s Normalisation des donn‚es
          @c Pas d'utilisation du champ Way Type pour le moment */
      /** @r IMH03 @d 10/11/10 @a ISAT.LLT @v IMH6.01.001 @s Normalisation des donn‚es
          @c Cr‚ation fonction DecomposeAddr
          @c Corrections */
      /** @r IMH02 @d 21/10/10 @a ISAT.ZW @v IMH6.01.001 @s Normalisation des donn‚es
          @c Ajout fonction CountryToAssist DecomposeAddr */
      /** @r IMH01 @d 23/09/10 @a ISAT.LLT @v IMH6.01.001 @s Normalisation des donn‚es @c Cr‚ation Normalisation adresse */
    }
    END.
  }
}