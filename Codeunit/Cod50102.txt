OBJECT Codeunit 50102 EXT In. Functions
{
  OBJECT-PROPERTIES
  {
    Date=19/01/11;
    Time=15:02:19;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Error002@1100281001 : TextConst 'ENU=XML Node %1 unfound.;FRA=Noeud XML %1 non trouv‚.';
      Error003@1100281000 : TextConst 'ENU=The field should not be empty.;FRA=Le champ %1 ne doit pas ˆtre vide.';

    PROCEDURE ReadXMLDocAttach@1100281001(pXMLDocumentNode@1100281002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";VAR pNewDocAttach@1100281000 : Record 50021;VAR pTempBlobDocAttach@1100281006 : Record 99008535);
    VAR
      lToolsMgt@1100281013 : Codeunit 8016602;
      lEAIXMLMgt@1100281012 : Codeunit 8016710;
      lEAIXMLDocMgt@1100281011 : Codeunit 8016713;
      lXMLDocTrayLineNode@1100281009 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNodeFound@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lText001@1100281001 : TextConst 'ENU=Address should not be empty.;FRA=Au moins une des trois adresses doit ˆtre renseign‚e.';
      lHasAddress@1100281003 : Boolean;
      lBigText@1100281004 : BigText;
      lOutStream@1100281005 : OutStream;
    BEGIN
      WITH lEAIXMLMgt DO BEGIN
        IF NOT FindFirstNode(pXMLDocumentNode,'Document',lXMLDocTrayLineNode) THEN
          ERROR(Error002,'Document');

      //Identifiant unique du document dans l'extranetO
        IF FindFirstNode(lXMLDocTrayLineNode,'DocumentId',lXMLNodeFound) THEN
        BEGIN
          IF lXMLNodeFound.text = '' THEN
            ERROR(Error003,'DocumentId');
        END ELSE
          ERROR(Error002,'DocumentId');
      //Identifiant du document dans GSHN
        IF FindFirstNode(lXMLDocTrayLineNode,'GSH_ReferenceDocument',lXMLNodeFound) THEN
        BEGIN
        END;
      //Titre du documentO
        IF FindFirstNode(lXMLDocTrayLineNode,'TitreDocument',lXMLNodeFound) THEN
        BEGIN
          IF lXMLNodeFound.text = '' THEN
            ERROR(Error003,'TitreDocument');
          pNewDocAttach.Description := COPYSTR(lXMLNodeFound.text,1,MAXSTRLEN(pNewDocAttach.Description))
        END ELSE
          ERROR(Error002,'TitreDocument');
      //Type MIME du fichier transf‚r‚O
        IF FindFirstNode(lXMLDocTrayLineNode,'TypeMIMEFichier',lXMLNodeFound) THEN
        BEGIN
          IF lXMLNodeFound.text = '' THEN
            ERROR(Error003,'TypeMIMEFichier');
        END ELSE
          ERROR(Error002,'TypeMIMEFichier');
      //Nom du fichierO
        IF FindFirstNode(lXMLDocTrayLineNode,'NomFichier',lXMLNodeFound) THEN
        BEGIN
          IF lXMLNodeFound.text = '' THEN
            ERROR(Error003,'NomFichier');
        END ELSE
          ERROR(Error002,'NomFichier');
      //Source du fichierO
        IF FindFirstNode(lXMLDocTrayLineNode,'SourceFichier',lXMLNodeFound) THEN
        BEGIN
          IF lXMLNodeFound.text = '' THEN
            ERROR(Error003,'SourceFichier');
        END ELSE
          ERROR(Error002,'SourceFichier');
      //Contenu binaire du fichierO
        IF FindFirstNode(lXMLDocTrayLineNode,'ContenuFileStream',lXMLNodeFound) THEN
        BEGIN
          pTempBlobDocAttach.Blob.CREATEOUTSTREAM(lOutStream);
          lOutStream.WRITE(lXMLNodeFound.text);
          IF NOT pTempBlobDocAttach.Blob.HASVALUE THEN
            ERROR(Error003,'ContenuFileStream');
        END ELSE
          ERROR(Error002,'ContenuFileStream');
      //Date de cr‚ation du documentO
        IF FindFirstNode(lXMLDocTrayLineNode,'DateCr‚ationDocument',lXMLNodeFound) THEN
        BEGIN
          IF lXMLNodeFound.text = '' THEN
            ERROR(Error003,'DateCr‚ationDocument');
          pNewDocAttach."Creation Date" := lToolsMgt.TextToDateTime(lXMLNodeFound.text);
        END ELSE
          ERROR(Error002,'DateCr‚ationDocument');
       END;
    END;

    PROCEDURE ProcessDocAttach@1100281005(VAR pDocAttach@1100281000 : Record 50021;VAR pNewDocAttach@1100281001 : Record 50021;VAR pTempBlobDocAttach@1100281002 : Record 99008535);
    BEGIN
      //Todo ------
    END;

    PROCEDURE GetCorrespondingCode@1100281002(pTableID@1100281000 : Integer;pCodeSource@1100281001 : Code[20]) : Code[20];
    BEGIN
      //TODO ------
      EXIT(pCodeSource);
    END;

    BEGIN
    END.
  }
}