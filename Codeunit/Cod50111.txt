OBJECT Codeunit 50111 EXT In. CONTACT
{
  OBJECT-PROPERTIES
  {
    Date=19/01/11;
    Time=14:51:36;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Error001@1100281001 : TextConst 'ENU=XML Stream is not well formated.;FRA=Le flux XML n''est pas bien format‚.';
      Error002@1100281000 : TextConst 'ENU=XML Node %1 unfound.;FRA=Noeud XML %1 non trouv‚.';
      Error003@1100281002 : TextConst 'ENU=The field should not be empty.;FRA=Le champ %1 ne doit pas ˆtre vide.';

    LOCAL PROCEDURE Code@1008844003(VAR pEAIRcvdMQBuffer@1008844001 : Record 8016721);
    VAR
      lEAIXMLDocMgt@1108844004 : Codeunit 8016713;
      lEAIDocumentEntryMgt@1100281001 : Codeunit 8016707;
      lXMLDocument@1008844005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      lXMLDocumentNode@1100281000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lOutStream@1008844004 : OutStream;
      lRecRef@1008844000 : RecordRef;
      lEAIAct@1108844005 : Record 8016706;
      lTempIntervLine@1108844001 : TEMPORARY Record 50075;
      lServiceHeader@1100281003 : Record 5900;
      lTmpServHeaderAddress@1100281005 : TEMPORARY Record 50068;
      lContactTypeNo@1100281004 : Integer;
      lMail@1100281002 : Text[80];
    BEGIN
      CLEAR(lXMLDocument);
      CREATE(lXMLDocument);

      pEAIRcvdMQBuffer.CALCFIELDS("XML Source");
      pEAIRcvdMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);
      lXMLDocument.load(lOutStream);

      lEAIAct.GET(pEAIRcvdMQBuffer."EAI Act Type Code",pEAIRcvdMQBuffer."EAI Act Code");

      //Lecture du document XML
      lEAIXMLDocMgt.ReadXMLDocuments(lXMLDocument,lXMLDocumentNode);

      //lecture service
      ReadXMLService(lXMLDocumentNode,lTempIntervLine);

      //Lecture contact
      ReadXMLContact(lXMLDocumentNode, lTmpServHeaderAddress, lContactTypeNo, lMail);

      //TODO ---- List<ContactMoyenCommunication>

      //traitement contact
      ProcessContact(lTempIntervLine, lTmpServHeaderAddress, lContactTypeNo, lMail);

      //cr‚ation suivi de document
      lEAIDocumentEntryMgt.AddEntryFromRcvdBuffer(
         DATABASE::"Service Header",0,lTempIntervLine."Service Header No.",'',
         0, pEAIRcvdMQBuffer);

      //Identifiant de la commande (ou derniŠre commande si allotie)
      lServiceHeader.GET(lTempIntervLine."Service Header No.");
      lRecRef.GETTABLE(lServiceHeader);
      pEAIRcvdMQBuffer.RecordId := lRecRef.RECORDID;
    END;

    PROCEDURE ReadXMLService@1100281015(pXMLDocumentNode@1100281002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";VAR pNewInterventionLine@1100281000 : Record 50075);
    VAR
      lToolsMgt@1100281013 : Codeunit 8016602;
      lEAIXMLMgt@1100281012 : Codeunit 8016710;
      lEAIXMLDocMgt@1100281011 : Codeunit 8016713;
      lXMLDocServNode@1100281009 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNodeFound@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      WITH lEAIXMLMgt DO BEGIN
        IF NOT FindFirstNode(pXMLDocumentNode,'Service',lXMLDocServNode) THEN
          ERROR(Error002,'Service');

        //---TODO----  Identifiant unique de l'intervention
        IF FindFirstNode(lXMLDocServNode,'ServiceId',lXMLNodeFound) THEN
        BEGIN
          IF lXMLNodeFound.text = '' THEN
            ERROR(Error003,'ServiceId');
        END ELSE
          ERROR(Error002,'GSH_NumeroIntervention');

        //Code intervention dans GSH
        IF FindFirstNode(lXMLDocServNode,'GSH_ReferenceService',lXMLNodeFound) THEN
        BEGIN
          IF lXMLNodeFound.text = '' THEN
            ERROR(Error003,'GSH_ReferenceService');
          pNewInterventionLine."Service Header No." := COPYSTR(lXMLNodeFound.text,1,MAXSTRLEN(pNewInterventionLine."Service Header No."))
        END ELSE
          ERROR(Error002,'GSH_ReferenceService');
       END;
    END;

    PROCEDURE ReadXMLContact@1100281001(pXMLDocumentNode@1100281002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";VAR pNewServHeaderAddress@1100281000 : Record 50068;VAR pContactTypeNo@1100281003 : Integer;VAR pMail@1100281015 : Text[80]);
    VAR
      lToolsMgt@1100281013 : Codeunit 8016602;
      lEAIXMLMgt@1100281012 : Codeunit 8016710;
      lEAIXMLDocMgt@1100281011 : Codeunit 8016713;
      lXMLDocContactNode@1100281001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNodeFound@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLCurrNode@1100281004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNodeList@1100281005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
      lID@1100281010 : Text[50];
      lRefGSH@1100281009 : Integer;
      lCode@1100281007 : Code[1];
      lValue@1100281006 : Text[80];
      i@1100281014 : Integer;
    BEGIN
      WITH lEAIXMLMgt DO BEGIN
        IF NOT FindFirstNode(pXMLDocumentNode,'Contact',lXMLDocContactNode) THEN
          ERROR(Error002,'Contact');

        //Identifiant du contact dans GSH
        IF FindFirstNode(lXMLDocContactNode,'GSH_ReferenceContact',lXMLNodeFound) THEN
        BEGIN
          pContactTypeNo := lToolsMgt.TextToInteger(lXMLNodeFound.text);
        END;


        //TODO ---- Code categorie du contact dans GSH
        IF FindFirstNode(lXMLDocContactNode,'GSH_CategorieContact',lXMLNodeFound) THEN
        BEGIN
          IF lXMLNodeFound.text = '' THEN
            ERROR(Error003,'GSH_CategorieContact');
        END ELSE
          ERROR(Error002,'GSH_CategorieContact');


        //Code fonction du contact dans GSH
        IF FindFirstNode(lXMLDocContactNode,'CodeFonctionContact',lXMLNodeFound) THEN
        BEGIN
          IF lXMLNodeFound.text = '' THEN
            ERROR(Error003,'CodeFonctionContact');
          pNewServHeaderAddress."Role Code" := COPYSTR(lXMLNodeFound.text,1,MAXSTRLEN(pNewServHeaderAddress."Role Code"))
        END ELSE
          ERROR(Error002,'CodeFonctionContact');

        //Code de la civilit‚ du contact dans GSH
        IF FindFirstNode(lXMLDocContactNode,'CodeCiviliteContact',lXMLNodeFound) THEN
        BEGIN
          pNewServHeaderAddress."Salutation Code" := COPYSTR(lXMLNodeFound.text,1,MAXSTRLEN(pNewServHeaderAddress."Salutation Code"))
        END;

        //Nom du contact
        IF FindFirstNode(lXMLDocContactNode,'NomContact',lXMLNodeFound) THEN
        BEGIN
          IF lXMLNodeFound.text = '' THEN
            ERROR(Error003,'NomContact');
          pNewServHeaderAddress.Name := COPYSTR(lXMLNodeFound.text,1,MAXSTRLEN(pNewServHeaderAddress.Name))
        END ELSE
          ERROR(Error002,'NomContact');

        //Pr‚nom du contact
        IF FindFirstNode(lXMLDocContactNode,'PrenomContact',lXMLNodeFound) THEN
        BEGIN
          pNewServHeaderAddress."First Name" := COPYSTR(lXMLNodeFound.text,1,MAXSTRLEN(pNewServHeaderAddress."First Name"))
        END;

        //D‚tail de l'adresse
        IF FindFirstNode(lXMLDocContactNode,'AdresseLigne1',lXMLNodeFound) THEN
        BEGIN
          pNewServHeaderAddress.Address := COPYSTR(lXMLNodeFound.text,1,MAXSTRLEN(pNewServHeaderAddress.Address))
        END;

        //D‚tail de l'adresse
        IF FindFirstNode(lXMLDocContactNode,'AdresseLigne2',lXMLNodeFound) THEN
        BEGIN
          pNewServHeaderAddress."Address 2" := COPYSTR(lXMLNodeFound.text,1,MAXSTRLEN(pNewServHeaderAddress."Address 2"))
        END;

        //D‚tail de l'adresse
        IF FindFirstNode(lXMLDocContactNode,'AdresseLigne3',lXMLNodeFound) THEN
        BEGIN
          pNewServHeaderAddress.County := COPYSTR(lXMLNodeFound.text,1,MAXSTRLEN(pNewServHeaderAddress.County))
        END;

        //Code postal du contact
        IF FindFirstNode(lXMLDocContactNode,'CodePostal',lXMLNodeFound) THEN
        BEGIN
          pNewServHeaderAddress."Post Code" := COPYSTR(lXMLNodeFound.text,1,MAXSTRLEN(pNewServHeaderAddress."Post Code"))
        END;

        //Ville du contact
        IF FindFirstNode(lXMLDocContactNode,'Ville',lXMLNodeFound) THEN
        BEGIN
          pNewServHeaderAddress.City := COPYSTR(lXMLNodeFound.text,1,MAXSTRLEN(pNewServHeaderAddress.City))
        END;

        //Pays du contact
        IF FindFirstNode(lXMLDocContactNode,'Pays',lXMLNodeFound) THEN
        BEGIN
          pNewServHeaderAddress."Country/Region Code" :=
              COPYSTR(lXMLNodeFound.text,1,MAXSTRLEN(pNewServHeaderAddress."Country/Region Code"))
        END;

        //Moyen communication
        lEAIXMLDocMgt.ReadXMLDocument(lXMLDocContactNode,lXMLNodeList);

        FOR i := 0 TO lXMLNodeList.length-1 DO
        BEGIN
          lXMLCurrNode := lXMLNodeList.item(i);
          lID := '';
          lRefGSH := 0;
          lCode := '';
          lValue := '';
          IF lXMLCurrNode.nodeName = 'ContactMoyenCommunication' THEN BEGIN
            ReadXMLCommunication(lXMLCurrNode, lID, lRefGSH, lCode, lValue);
            CASE lCode OF
              'F' : pNewServHeaderAddress."Fax No." := lValue;
              'M' : pMail := lValue;
              'P' : pNewServHeaderAddress."Mobile Phone No." := lValue;
              'T' : pNewServHeaderAddress."Phone No." := lValue;
            END;
          END;
        END;
       END;
    END;

    PROCEDURE ReadXMLCommunication@1100281000(pXMLDocumentNode@1100281002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";VAR pID@1100281001 : Text[50];VAR pRefGSH@1100281000 : Integer;VAR pCode@1100281003 : Code[1];VAR pValue@1100281004 : Text[80]);
    VAR
      lToolsMgt@1100281009 : Codeunit 8016602;
      lEAIXMLMgt@1100281008 : Codeunit 8016710;
      lEAIXMLDocMgt@1100281007 : Codeunit 8016713;
      lXMLDocCommuNode@1100281006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNodeFound@1100281005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      WITH lEAIXMLMgt DO BEGIN
        IF NOT FindFirstNode(pXMLDocumentNode,'ContactMoyenCommunication',lXMLDocCommuNode) THEN
          ERROR(Error002,'ContactMoyenCommunication');

        //TODO ---- Identifiant unique du moyen de communication Extranet
        IF FindFirstNode(lXMLDocCommuNode,'ContactMoyenCommunicationId',lXMLNodeFound) THEN
        BEGIN
          IF lXMLNodeFound.text = '' THEN
            ERROR(Error003,'ContactMoyenCommunicationId');
          pID := COPYSTR(lXMLNodeFound.text,1,MAXSTRLEN(pID));
        END ELSE
          ERROR(Error002,'ContactMoyenCommunicationId');

        //TODO --- Identifiant du moyen de communication dans GSH
        IF FindFirstNode(lXMLDocCommuNode,'GSH_ReferenceMoyenCommunication',lXMLNodeFound) THEN
        BEGIN
          pRefGSH := lToolsMgt.TextToInteger(lXMLNodeFound.text);
        END;
        //Code du moyen de communication
        IF FindFirstNode(lXMLDocCommuNode,'CodeMoyenCommunication',lXMLNodeFound) THEN
        BEGIN
          IF lXMLNodeFound.text = '' THEN
            ERROR(Error003,'CodeMoyenCommunication');
          pCode := COPYSTR(lXMLNodeFound.text,1,1);
        END ELSE
          ERROR(Error002,'CodeMoyenCommunication');
        //Valeur du moyen de communication
        IF FindFirstNode(lXMLDocCommuNode,'ValeurMoyenCommunication',lXMLNodeFound) THEN
        BEGIN
          pValue := COPYSTR(lXMLNodeFound.text,1,MAXSTRLEN(pValue));
        END;
      END;
    END;

    PROCEDURE ProcessContact@1100281003(VAR pInterventionLine@1100281000 : Record 50075;VAR pServHeaderAddress@1100281003 : Record 50068;VAR pContactTypeNo@1100281001 : Integer;VAR pMail@1100281006 : Text[80]);
    VAR
      lServiceHeader@1100281004 : Record 5900;
      lContact@1100281005 : Record 5050;
      lNewServHeaderAddress@1100281002 : Record 50068;
    BEGIN
      CASE TRUE OF
        pContactTypeNo = 1 : BEGIN
          lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, pInterventionLine."Service Header No.");
          lContact.GET(lServiceHeader."Contact No.");
          WITH lContact DO BEGIN
            //TODO ---- Code categorie du contact dans GSH
            //TODO ---- Code fonction du contact dans GSH
            IF pServHeaderAddress."Salutation Code" <> '' THEN
              VALIDATE("Salutation Code", pServHeaderAddress."Salutation Code");
            IF pServHeaderAddress.Name <> '' THEN
              VALIDATE(Name, pServHeaderAddress.Name);
            IF pServHeaderAddress."First Name" <> '' THEN
              VALIDATE("First Name", pServHeaderAddress."First Name");
            IF pServHeaderAddress.Address <> '' THEN
              VALIDATE(Address, pServHeaderAddress.Address);
            IF pServHeaderAddress."Address 2" <> '' THEN
              VALIDATE("Address 2", pServHeaderAddress."Address 2");
            IF pServHeaderAddress.County <> '' THEN
              VALIDATE(County, pServHeaderAddress.County);
            IF pServHeaderAddress."Post Code" <> '' THEN
              VALIDATE("Post Code", pServHeaderAddress."Post Code");
            IF pServHeaderAddress.City <> '' THEN
              VALIDATE(City, pServHeaderAddress.City);
            IF pServHeaderAddress."Country/Region Code" <> '' THEN
              VALIDATE("Country/Region Code", pServHeaderAddress."Country/Region Code");
            IF pServHeaderAddress."Fax No." <> '' THEN
              VALIDATE("Fax No.", pServHeaderAddress."Fax No.");
            IF pMail <> '' THEN
              VALIDATE("E-Mail", pMail);
            IF pServHeaderAddress."Mobile Phone No." <> '' THEN
              VALIDATE("Mobile Phone No.", pServHeaderAddress."Mobile Phone No.");
            IF pServHeaderAddress."Phone No." <> '' THEN
              VALIDATE("Phone No.", pServHeaderAddress."Phone No.");
            MODIFY(TRUE);
          END;
        END;
        pContactTypeNo > 100 : BEGIN
          lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, pInterventionLine."Service Header No.");
          lNewServHeaderAddress.GET(pInterventionLine."Service Header No.", lNewServHeaderAddress."Address Type"::"Annexe Contact",
                                    lNewServHeaderAddress."Address No.");
          WITH lNewServHeaderAddress DO BEGIN
            //TODO ---- Code categorie du contact dans GSH
            IF pServHeaderAddress."Role Code" <> '' THEN
              VALIDATE("Role Code", pServHeaderAddress."Role Code");
            IF pServHeaderAddress."Salutation Code" <> '' THEN
              VALIDATE("Salutation Code", pServHeaderAddress."Salutation Code");
            IF pServHeaderAddress.Name <> '' THEN
              VALIDATE(Name, pServHeaderAddress.Name);
            IF pServHeaderAddress."First Name" <> '' THEN
              VALIDATE("First Name", pServHeaderAddress."First Name");
            IF pServHeaderAddress.Address <> '' THEN
              VALIDATE(Address, pServHeaderAddress.Address);
            IF pServHeaderAddress."Address 2" <> '' THEN
              VALIDATE("Address 2", pServHeaderAddress."Address 2");
            IF pServHeaderAddress.County <> '' THEN
              VALIDATE(County, pServHeaderAddress.County);
            IF pServHeaderAddress."Post Code" <> '' THEN
              VALIDATE("Post Code", pServHeaderAddress."Post Code");
            IF pServHeaderAddress.City <> '' THEN
              VALIDATE(City, pServHeaderAddress.City);
            IF pServHeaderAddress."Country/Region Code" <> '' THEN
              VALIDATE("Country/Region Code", pServHeaderAddress."Country/Region Code");
            IF pServHeaderAddress."Fax No." <> '' THEN
              VALIDATE("Fax No.", pServHeaderAddress."Fax No.");
            IF pServHeaderAddress."Mobile Phone No." <> '' THEN
              VALIDATE("Mobile Phone No.", pServHeaderAddress."Mobile Phone No.");
            IF pServHeaderAddress."Phone No." <> '' THEN
              VALIDATE("Phone No.", pServHeaderAddress."Phone No.");
            MODIFY(TRUE);
          END;
        END;
        ELSE BEGIN
          lNewServHeaderAddress := pServHeaderAddress;
          lNewServHeaderAddress."Address Type" := lNewServHeaderAddress."Address Type"::"Annexe Contact";
          lNewServHeaderAddress."Service Header No." := pServHeaderAddress."Service Header No.";
          lNewServHeaderAddress."Address No." := 0;
          lNewServHeaderAddress.INSERT(TRUE);
        END;
      END;
    END;

    BEGIN
    {
      /** @r IHM01 @d 18/01/11 @a ISAT.ZW @v IMH6.01.131 @s Interface EAI @c Creation */
    }
    END.
  }
}