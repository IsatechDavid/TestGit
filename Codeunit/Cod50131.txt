OBJECT Codeunit 50131 IMA Sales Order Sent Act
{
  OBJECT-PROPERTIES
  {
    Date=02/11/11;
    Time=10:05:04;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    TableNo=8016720;
    Permissions=TableData 50007=rimd,
                TableData 8016709=rimd;
    OnRun=VAR
            lEAISentMQBuffer@1100281000 : TEMPORARY Record 8016720;
          BEGIN
            lEAISentMQBuffer := Rec;
            Code(lEAISentMQBuffer);
            Rec := lEAISentMQBuffer;
            lEAISentMQBuffer.CALCFIELDS("XML Source");
            "XML Source" := lEAISentMQBuffer."XML Source";
          END;

  }
  CODE
  {
    VAR
      EAISetup@1100281004 : Record 8016700;
      Tools@1100481002 : Codeunit 8016602;
      Text000@1100281002 : TextConst 'ENU=Trouble during adding node %1.;FRA=ProblŠme lors de l''ajout de la balise %1.';
      EAIXmlDocMgt@1100281001 : Codeunit 8016713;
      InvoicingMgt@1100281000 : Codeunit 50080;
      FromServIntervMin@1100281003 : Boolean;

    LOCAL PROCEDURE Code@1100281003(VAR pEAISentMQBuffer@1100281001 : Record 8016720);
    VAR
      lEAIAct@1100481004 : Record 8016706;
      lServHeader@1100481000 : Record 5900;
      lServIntervMinutes@1100281007 : Record 50084;
      lServIntervLine@1100281008 : Record 50075;
      lProvider@1100281009 : Record 50000;
      lProviderSetup@1100281010 : Record 50011;
      lEAIDocEntryMgt@1100481001 : Codeunit 8016707;
      lXMLDocument@1100481006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      lXMLRootNode@1100481009 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLDocumentsNode@1100281003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLDocumentNode@1100481007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewNode@1100281000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lRecID@1100481003 : RecordID;
      lRecRef@1100481002 : RecordRef;
      lInStr@1100481005 : InStream;
      lNameSpace@1100481011 : Text[30];
      lReturnTableName@1100281002 : Text[250];
      lCustNo@1100281004 : Code[20];
      lAmt@1100281005 : Decimal;
      lServInterLineNo@1100281006 : Integer;
      lCommissionPerc@1100281011 : Decimal;
    BEGIN
      CLEAR(lXMLDocument);
      CREATE(lXMLDocument);

      EAISetup.GET;
      lNameSpace := '';

      lEAIAct.GET(pEAISentMQBuffer."EAI Act Type Code",pEAISentMQBuffer."EAI Act Code");

      //On r‚cup‚re l'enregistrement
      lRecID := pEAISentMQBuffer.RecordId;
      lRecRef := lRecID.GETRECORD;

      CASE lRecID.TABLENO OF
        DATABASE::"Service Header" :
          BEGIN
            lRecRef.SETTABLE(lServHeader);
            lServHeader.SETRECFILTER;
            lServHeader.LOCKTABLE;
            lServHeader.FINDFIRST;

            //**eb
            //lCustNo:= lServHeader."Contact No.";

            IF (pEAISentMQBuffer."EAI Act Type Code" = EAISetup."IMA Provider Order Act Type") AND
               (pEAISentMQBuffer."EAI Act Code" = EAISetup."IMA Provider Order Act Code")
            THEN BEGIN
              lServIntervLine.RESET;
              lServIntervLine.SETRANGE("Service Header No.",lServHeader."No.");
              IF NOT lServIntervLine.FINDFIRST THEN
                EXIT;

              lProvider.GET(lServIntervLine."Provider No.");

              lCustNo := lServIntervLine."Provider No.";
              IF lProvider."Percentage Commission" = 0 THEN BEGIN
                lProviderSetup.GET;
                lCommissionPerc := lProviderSetup."Percentage Commission";
              END ELSE BEGIN
                lCommissionPerc := lProvider."Percentage Commission";
              END;

              //lAmt := 0;
            END ELSE BEGIN
              lCustNo:= lServHeader."Contact No.";
              lAmt := lServHeader."Deposit Amount";
            END;
            //**

            FromServIntervMin := FALSE;
          END;
        DATABASE::"Service Intervention Minutes" :
          BEGIN
            lRecRef.SETTABLE(lServIntervMinutes);
            lServIntervMinutes.SETRECFILTER;
            lServIntervMinutes.LOCKTABLE;
            lServIntervMinutes.FINDFIRST;

            lServHeader.GET(lServHeader."Document Type"::Invoice,lServIntervMinutes."Service Header No.");

            IF (pEAISentMQBuffer."EAI Act Type Code" = EAISetup."IMA Provider Order Act Type") AND
               (pEAISentMQBuffer."EAI Act Code" = EAISetup."IMA Provider Order Act Code")
            THEN BEGIN
              lServIntervLine.GET(lServIntervMinutes."Service Header No.",lServIntervMinutes."Service Intervention Line No.");
              lProvider.GET(lServIntervLine."Provider No.");

              lCustNo := lServIntervLine."Provider No.";
              IF lProvider."Percentage Commission" = 0 THEN BEGIN
                lProviderSetup.GET;
                lCommissionPerc := lProviderSetup."Percentage Commission";
              END ELSE BEGIN
                lCommissionPerc := lProvider."Percentage Commission";
              END;
              lAmt := lServIntervMinutes.Amount * lCommissionPerc / 100;
            END ELSE BEGIN
              lCustNo:= lServHeader."Contact No.";
              lAmt := lServHeader."Deposit Amount";
            END;
            lServInterLineNo := lServIntervMinutes."Service Intervention Line No.";
            FromServIntervMin := TRUE;
          END;
      END;


      EAIXmlDocMgt.WriteXMLMessageHeader(lXMLDocument,lXMLNewNode,pEAISentMQBuffer,lReturnTableName);
      lXMLRootNode := lXMLDocument.documentElement;
      EAIXmlDocMgt.WriteXMLDocuments(lXMLRootNode,lXMLDocumentsNode,lReturnTableName);
      EAIXmlDocMgt.WriteXMLDocument(lXMLDocumentsNode,lXMLDocumentNode,lReturnTableName);

      WriteDocumentHeader(lXMLDocumentNode,lServHeader,lCustNo,lAmt,lServInterLineNo,lEAIAct,lNameSpace,lXMLNewNode);

      pEAISentMQBuffer."XML Source".CREATEINSTREAM(lInStr);
      lXMLDocument.save(lInStr);

      //Enregistrement dans la table "‚riture document EDI"
      lEAIDocEntryMgt.AddEntryFromSentBuffer(
        DATABASE::"Service Header",lServHeader."Document Type",
        lServHeader."No.",'',0,pEAISentMQBuffer);
    END;

    PROCEDURE WriteDocumentHeader@1100481003(VAR pXMLDocumentNode@1100481005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";pServHeader@1100481000 : Record 5900;pCustNo@1100281000 : Code[20];pAmt@1100281001 : Decimal;pServInterLineNo@1100281002 : Integer;pEAIAct@1100481014 : Record 8016706;pNameSpace@1100481006 : Text[30];VAR pXMLNode@1100481022 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode");
    VAR
      lEAIXMLMgt@1100481015 : Codeunit 8016710;
      lXMLDocHeaderNode@1100481017 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewNode@1100481016 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lServOrderType@1100281003 : Record 5903;
    BEGIN
      EAIXmlDocMgt.WriteXMLDocHeader(pXMLDocumentNode,lXMLDocHeaderNode,pNameSpace);

      WITH lEAIXMLMgt DO BEGIN
        IF NOT IsAddElement(lXMLDocHeaderNode,'SERVICE_NO',pServHeader."Service No.",pNameSpace,lXMLNewNode) THEN
          ERROR(Text000,'SERVICE_NO');

        IF NOT IsAddElement(lXMLDocHeaderNode,'SERVICE_ORDER_NO',pServHeader."No.",pNameSpace,lXMLNewNode) THEN
          ERROR(Text000,'SERVICE_ORDER_NO');

        IF FromServIntervMin THEN BEGIN
          IF NOT IsAddElement(lXMLDocHeaderNode,'SERVICE_INTERV_LINE_NO',
            Tools.IntegerToText(pServInterLineNo),pNameSpace,lXMLNewNode)
          THEN
            ERROR(Text000,'SERVICE_INTERV_LINE_NO');
        END;

        IF NOT IsAddElement(lXMLDocHeaderNode,'SERVICE_ORDER_TYPE',pServHeader."Service Order Type",pNameSpace,lXMLNewNode) THEN
          ERROR(Text000,'SERVICE_ORDER_TYPE');

        IF NOT IsAddElement(lXMLDocHeaderNode,'CORPORATE_NO',pServHeader."Corporate No.",pNameSpace,lXMLNewNode) THEN
          ERROR(Text000,'CORPORATE_NO');

        IF NOT IsAddElement(lXMLDocHeaderNode,'CORPORATE_REGION',pServHeader."Corporate Region Code",pNameSpace,lXMLNewNode) THEN
          ERROR(Text000,'CORPORATE_REGION');
      //<<IMH02.ST
        IF NOT FromServIntervMin THEN BEGIN
          IF lServOrderType.GET(pServHeader."Service Order Type") THEN BEGIN
            IF lServOrderType."Home Service" THEN BEGIN
              IF NOT IsAddElement(lXMLDocHeaderNode, 'DEPOSIT_AMOUNT', Tools.SQLDecimalToText(pServHeader."Deposit Amount"),
                                  pNameSpace, lXMLNewNode) THEN
                ERROR(Text000,'DEPOSIT_AMOUNT');
            END;
          END;
        END;
      //>>IMH02.ST

        IF NOT IsAddElement(lXMLDocHeaderNode,'CUSTOMER_NO',pCustNo,pNameSpace,lXMLNewNode) THEN
          ERROR(Text000,'CUSTOMER_NO');

        IF FromServIntervMin THEN BEGIN
          IF NOT IsAddElement(lXMLDocHeaderNode,'AMOUNT',Tools.SQLDecimalToText(pAmt),pNameSpace,lXMLNewNode) THEN
            ERROR(Text000,'AMOUNT');
        END;

      END;
    END;

    BEGIN
    {
      /** @r IMH02 @d 17/08/11 @a ISAT.ST @v IMH6.01.159 @s Envoi montant frais dossier */
      /** @r IMH01 @d 16/05/11 @a ISAT.EBA @v IMH6.01.159 @s Comptabilit‚ - IMA Service */
    }
    END.
  }
}