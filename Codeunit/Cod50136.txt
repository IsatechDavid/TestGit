OBJECT Codeunit 50136 Extranet Modif Jnl.-Post Line
{
  OBJECT-PROPERTIES
  {
    Date=09/12/13;
    Time=09:49:27;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    TableNo=50150;
    OnRun=BEGIN
            RunWithCheck(Rec);
          END;

  }
  CODE
  {
    VAR
      ExtranetModifJournalLine@1100281000 : Record 50150;
      Text001@1100281001 : TextConst 'ENU=Invalide data type : %1.;FRA=Type de donn‚e non valide : %1.';
      ExtranetModifJournalField@1100281002 : Record 50156;

    PROCEDURE RunWithCheck@1100281000(VAR pExtranetModifJournalLine@1100281000 : Record 50150);
    BEGIN
      ExtranetModifJournalLine.COPY(pExtranetModifJournalLine);
      Code(TRUE);
      pExtranetModifJournalLine := ExtranetModifJournalLine;
    END;

    LOCAL PROCEDURE Code@1100281002(pRunWithCheck@1100281002 : Boolean);
    VAR
      lRecID@1100281000 : RecordID;
      lRecRef@1100281001 : RecordRef;
      lXRecRef@1100281003 : RecordRef;
      lChangLogMgt@1100281004 : Codeunit 423;
      lIsModify@1100281005 : Boolean;
      lProvider@1000000000 : Record 50000;
      lXProvider@1000000001 : Record 50000;
      lProviderChangeCalendar@1100281006 : Record 50007;
      lXProviderChangeCalendar@1100281007 : Record 50007;
      lProviderSpecialization@1100281008 : Record 50006;
      lCode@1100281009 : Record 50079;
    BEGIN
      //IF ExtranetModifJournalLine.Status <> ExtranetModifJournalLine.Status::"To Post" THEN
      //  EXIT;
      CASE ExtranetModifJournalLine."Type of Change" OF
        ExtranetModifJournalLine."Type of Change"::Insertion,
        ExtranetModifJournalLine."Type of Change"::Modification : BEGIN
          IF ExtranetModifJournalLine."Type of Change" = ExtranetModifJournalLine."Type of Change"::Modification THEN BEGIN
            IF FORMAT(ExtranetModifJournalLine.RecordId) <> '' THEN BEGIN
              lRecID := ExtranetModifJournalLine.RecordId;
              lRecRef := lRecID.GETRECORD;
              lXRecRef := lRecID.GETRECORD;
              lRecRef.SETRECFILTER; //IMH02.ST
              lXRecRef.SETRECFILTER; //IMH02.ST
              IF NOT lRecRef.FINDFIRST THEN BEGIN
                lRecRef.OPEN(ExtranetModifJournalLine."Source Table ID");
              END ELSE BEGIN
                lIsModify := TRUE;
                IF lXRecRef.FINDFIRST THEN;
              END;
            END ELSE BEGIN
              lRecRef.OPEN(ExtranetModifJournalLine."Source Table ID");
              lIsModify := FALSE;
            END;
          END ELSE BEGIN
            lRecRef.OPEN(ExtranetModifJournalLine."Source Table ID");
            lIsModify := FALSE;
          END;
          ExtranetModifJournalField.SETRANGE("Source Table ID", ExtranetModifJournalLine."Source Table ID");
          ExtranetModifJournalField.SETRANGE("Source No.", ExtranetModifJournalLine."Source No.");
          ExtranetModifJournalField.SETRANGE("Source No. 2", ExtranetModifJournalLine."Source No. 2");
          ExtranetModifJournalField.SETRANGE("Source No. 3", ExtranetModifJournalLine."Source No. 3");
          ExtranetModifJournalField.SETRANGE("Source No. 4", ExtranetModifJournalLine."Source No. 4");
          ExtranetModifJournalField.SETRANGE("Source No. 5", ExtranetModifJournalLine."Source No. 5");
          ExtranetModifJournalField.SETRANGE("Source Boolean", ExtranetModifJournalLine."Source Boolean");
          ExtranetModifJournalField.SETRANGE("Source Date", ExtranetModifJournalLine."Source Date");
          ExtranetModifJournalField.SETRANGE("Entry No.", ExtranetModifJournalLine."Entry No.");
          IF ExtranetModifJournalField.FINDSET THEN BEGIN
            REPEAT
              SetConditionFieldValue(lRecRef);
              SetFieldValue(lRecRef);
            UNTIL ExtranetModifJournalField.NEXT = 0;
          END;
          IF lIsModify THEN BEGIN
            lChangLogMgt.LogModification(lRecRef,lXRecRef);
            //<<IMH03
            CASE lRecRef.NUMBER OF
              DATABASE::Provider : BEGIN
                lRecRef.SETTABLE(lProvider);
                lXProvider.GET(lProvider."No.");
                lProvider.ChangeContactOnModify(lXProvider);
                lProvider.MODIFY(TRUE);
              END;
              //<<IMH04
              DATABASE::"Provider Change Calendar" : BEGIN
                lRecRef.SETTABLE(lProviderChangeCalendar);
                lXProviderChangeCalendar.FIND('=');
                IF lProviderSpecialization.GET(lProviderChangeCalendar."Provider No.",
                      lProviderChangeCalendar."Specialization Code") THEN BEGIN
                  lProviderChangeCalendar.BuildingChangeCalendarModify(lProviderChangeCalendar, lXProviderChangeCalendar,
                    lProviderSpecialization."Building Trade No.",
                    lXProviderChangeCalendar."Unavailability Reason Code");
                END;
                IF lProviderChangeCalendar."Unavailability Reason Code" <> lXProviderChangeCalendar."Unavailability Reason Code" THEN
                  lProviderChangeCalendar.Description :=
                    lCode.GetDescription(DATABASE::"Provider Change Calendar",40,lProviderChangeCalendar."Unavailability Reason Code");
                lProviderChangeCalendar.MODIFY(TRUE);
              END;
              //>>IMH04
              ELSE
                lRecRef.MODIFY(TRUE);
            END;
            //>>IMH03
            //lRecRef.MODIFY(TRUE)
          END ELSE BEGIN
            //<<IMH04
            lChangLogMgt.LogInsertion(lRecRef);
            CASE lRecRef.NUMBER OF
              DATABASE::"Provider Change Calendar" : BEGIN
                lRecRef.SETTABLE(lProviderChangeCalendar);
                lProviderChangeCalendar.Description :=
                  lCode.GetDescription(DATABASE::"Provider Change Calendar",40,lProviderChangeCalendar."Unavailability Reason Code");
                IF lProviderSpecialization.GET(lProviderChangeCalendar."Provider No.",
                      lProviderChangeCalendar."Specialization Code") THEN BEGIN
                  lProviderChangeCalendar.BuildingChangeCalendar(lProviderChangeCalendar,lProviderSpecialization."Building Trade No.");
                END;
                IF lProviderChangeCalendar.INSERT(TRUE) THEN;
              END;
              ELSE BEGIN
                lRecRef.INSERT(TRUE);
              END;
            END;
            //>>IMH04
          END;
        END;
        ExtranetModifJournalLine."Type of Change"::Deletion : BEGIN
          lRecID := ExtranetModifJournalLine.RecordId;
          lRecRef := lRecID.GETRECORD;
          IF lRecRef.FIND('=') THEN;
          lChangLogMgt.LogDeletion(lRecRef);
          //<<IMH04
          CASE lRecRef.NUMBER OF
            DATABASE::"Provider Change Calendar" : BEGIN
              lRecRef.SETTABLE(lProviderChangeCalendar);
              IF lProviderSpecialization.GET(lProviderChangeCalendar."Provider No.",
                    lProviderChangeCalendar."Specialization Code") THEN BEGIN
                lProviderChangeCalendar.BuildingChangeCalendarDel(lProviderChangeCalendar,lProviderSpecialization."Building Trade No.");
              END;
              IF lProviderChangeCalendar.DELETE(TRUE) THEN;
            END;
            ELSE BEGIN
              lRecRef.DELETE(TRUE);
            END;
          END;
          //lRecRef.DELETE(TRUE);
          //<<IMH04
        END;
      END;
    END;

    LOCAL PROCEDURE SetFieldValue@1100281005(VAR pRecRef@1100281001 : RecordRef);
    VAR
      lFieldRef@1100281002 : FieldRef;
      lBool@1100281011 : Boolean;
      lInt@1100281010 : Integer;
      lDec@1100281009 : Decimal;
      lText@1100281008 : Text[1024];
      lCode@1100281007 : Code[1024];
      lDate@1100281006 : Date;
      lTime@1100281005 : Time;
      lDateTime@1100281004 : DateTime;
      lBigInt@1100281003 : BigInteger;
    BEGIN
      IF ExtranetModifJournalField."Field No." = 0 THEN
        ExtranetModifJournalField.FIELDERROR("Field No.");
      lFieldRef := pRecRef.FIELD(ExtranetModifJournalField."Field No.");
      CASE UPPERCASE(FORMAT(lFieldRef.TYPE)) OF
        'BOOLEAN', 'OPTION' : BEGIN
          lFieldRef.VALIDATE(ExtranetModifJournalField."New Integer Value");
        END;
        'INTEGER', 'DURATION' : BEGIN
          EVALUATE(lInt, ExtranetModifJournalField."New Value");
          lFieldRef.VALIDATE(lInt);
        END;
        'BIGINTEGER' : BEGIN
          EVALUATE(lBigInt, ExtranetModifJournalField."New Value");
          lFieldRef.VALIDATE(lBigInt);
        END;
        'DECIMAL' : BEGIN
          EVALUATE(lDec, ExtranetModifJournalField."New Value");
          lFieldRef.VALIDATE(lDec);
        END;
        'CODE' : BEGIN
          EVALUATE(lCode, ExtranetModifJournalField."New Value");
          lFieldRef.VALIDATE(lCode);
        END;
        'DATE' : BEGIN
          //<<IMH05.ZW
          {
          //<<IMH04
          IF ExtranetModifJournalField."New Date Value" <> 0D THEN BEGIN
            lDate := ExtranetModifJournalField."New Date Value";
          END ELSE BEGIN
            EVALUATE(lDate, ExtranetModifJournalField."New Value");
          END;
          //<<IMH04
          }
          EVALUATE(lDate, ExtranetModifJournalField."New Value");
          //>>IMH05.ZW
          lFieldRef.VALIDATE(lDate);
        END;
        'TIME' : BEGIN
          EVALUATE(lTime, ExtranetModifJournalField."New Value");
          lFieldRef.VALIDATE(lTime);
        END;
        'DATETIME' : BEGIN
          EVALUATE(lDateTime, ExtranetModifJournalField."New Value");
          lFieldRef.VALIDATE(lDateTime);
        END;
        'TEXT' : BEGIN
          lFieldRef.VALIDATE(ExtranetModifJournalField."New Value");
        END;
        ELSE
          ERROR(Text001, UPPERCASE(FORMAT(lFieldRef.TYPE)));
      END; //CASE
    END;

    LOCAL PROCEDURE SetConditionFieldValue@1100281006(VAR pRecRef@1100281001 : RecordRef);
    VAR
      lFieldRef@1100281002 : FieldRef;
      lBool@1100281011 : Boolean;
      lInt@1100281010 : Integer;
      lDec@1100281009 : Decimal;
      lText@1100281008 : Text[1024];
      lCode@1100281007 : Code[1024];
      lDate@1100281006 : Date;
      lTime@1100281005 : Time;
      lDateTime@1100281004 : DateTime;
      lBigInt@1100281003 : BigInteger;
    BEGIN
      IF ExtranetModifJournalField."Condition Field No." = 0 THEN
        EXIT;
      lFieldRef := pRecRef.FIELD(ExtranetModifJournalField."Condition Field No.");
      CASE UPPERCASE(FORMAT(lFieldRef.TYPE)) OF
        'BOOLEAN', 'OPTION' : BEGIN
          lFieldRef.VALIDATE(ExtranetModifJournalField."Condition Field Int Value");
        END;
        'INTEGER', 'DURATION' : BEGIN
          EVALUATE(lInt, ExtranetModifJournalField."Condition Field Value");
          lFieldRef.VALUE(lInt);
        END;
        'BIGINTEGER' : BEGIN
          EVALUATE(lBigInt, ExtranetModifJournalField."Condition Field Value");
          lFieldRef.VALUE(lBigInt);
        END;
        'DECIMAL' : BEGIN
          EVALUATE(lDec, ExtranetModifJournalField."Condition Field Value");
          lFieldRef.VALUE(lDec);
        END;
        'CODE' : BEGIN
          EVALUATE(lCode, ExtranetModifJournalField."Condition Field Value");
          lFieldRef.VALUE(lCode);
        END;
        'DATE' : BEGIN
          EVALUATE(lDate, ExtranetModifJournalField."Condition Field Value");
          lFieldRef.VALUE(lDate);
        END;
        'TIME' : BEGIN
          EVALUATE(lTime, ExtranetModifJournalField."Condition Field Value");
          lFieldRef.VALUE(lTime);
        END;
        'DATETIME' : BEGIN
          EVALUATE(lDateTime, ExtranetModifJournalField."Condition Field Value");
          lFieldRef.VALUE(lDateTime);
        END;
        'TEXT' : BEGIN
          lFieldRef.VALUE(ExtranetModifJournalField."Condition Field Value");
        END;
        ELSE
          ERROR(Text001, UPPERCASE(FORMAT(lFieldRef.TYPE)));
      END; //CASE
    END;

    BEGIN
    {
      /** @r IHM05 @d 06/08/13 @a ISAT.ZW @v IMH6.01.223 @s NEP00003 @c Extranet @h 4142 @c Gestion dates  */
      /** @r IHM04 @d 05/09/12 @a ISAT.ZW @v IMH6.01.223 @s NEP00003 @c Extranet @h 2096 @c Gestion MAJ calendrier  */
      /** @r IHM03 @d 14/08/12 @a ISAT.ZW @v IMH6.01.223 @s NEP00003 @c Extranet @h 2096 @c Correction  */
      /** @r IHM02 @d 19/12/11 @a ISAT.ST @v IMH6.01.165 @s Extranet @c Mise … jour du bon prestataire */
      /** @r IHM01 @d 06/07/11 @a ISAT.ZW @v IMH6.01.165 @s Extranet @c Creation */
    }
    END.
  }
}