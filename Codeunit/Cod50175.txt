OBJECT Codeunit 50175 DARVA Sent SDR64 Gen. Act
{
  OBJECT-PROPERTIES
  {
    Date=20/03/14;
    Time=16:31:08;
    Modified=Yes;
    Version List=IMH6.01,NEP00011,NEPIMH5,DARVA1.3,JUIN,V1.7;
  }
  PROPERTIES
  {
    TableNo=8016720;
    OnRun=VAR
            lEAISentMQBuffer@1100281000 : TEMPORARY Record 8016720;
          BEGIN
            lEAISentMQBuffer := Rec;
            Code(lEAISentMQBuffer);
            lEAISentMQBuffer.CALCFIELDS("XML Source");
            Rec := lEAISentMQBuffer;
            "XML Source" := lEAISentMQBuffer."XML Source";
          END;

  }
  CODE
  {
    VAR
      EAISetup@1100281000 : Record 8016700;
      EAIXMLDocMgt@1100281003 : Codeunit 8016713;
      NASHandler@1100281008 : Codeunit 8016720;
      DARVAXMLMgt@1100281009 : Codeunit 50154;
      DARVAMgt@1100281001 : Codeunit 50150;
      Text001@1000000000 : TextConst 'ENU=All interventions are cancelled;FRA=Toutes les lignes d''intervention ont ‚t‚ annul‚es';
      Text013@1000000001 : TextConst 'ENU=Service header has been created defore 01/01/12 - Use DARVA site.;FRA=Ligne produit cr‚‚ avant le 01/01/2012 - Utiliser le lien URL Darva';

    PROCEDURE Code@1100281005(VAR pEAISentMQBuffer@1100281000 : Record 8016720);
    VAR
      lEAIAct@1100281014 : Record 8016706;
      lEAIPartner@1100281003 : Record 8016707;
      lOriginServiceInterventionLine@1100281019 : Record 50075;
      lServiceInterventionLine@1000000001 : Record 50075;
      lInterventionDescription@1100281028 : Record 50070;
      lIntervDescriptionDetail@1100281027 : Record 50161;
      lService@1100281018 : Record 50066;
      lServiceHeader@1100281016 : Record 5900;
      lCompanyInformation@1100281011 : Record 79;
      lCustomer@1100281023 : Record 18;
      lCodeBuffer@1100281029 : TEMPORARY Record 50079;
      lProvider@1100281030 : Record 50000;
      lDARVALot@1100281031 : Record 50169;
      lDARVAMission@1100281032 : Record 50168;
      lProviderBuffer@1000000002 : TEMPORARY Record 50000;
      lEAIDocEntryMgt@1100281002 : Codeunit 8016707;
      lToolsMgt@1100281024 : Codeunit 8016602;
      lXMLDocument@1100281001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      lXMLNewChild0@1100281010 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild1@1100281004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild2@1100281007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild3@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild4@1100281009 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild5@1100281012 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild6@1100281013 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild7@1100281021 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild8@1100281020 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lRecRef@1100281017 : RecordRef;
      lInStream@1100281005 : InStream;
      lNameSpace@1100281006 : Text[250];
      lDate@1100281022 : Date;
      lDARVACorporateNo@1100281015 : Code[20];
      lTempCorporateNo@1100281025 : Code[20];
      i@1100281026 : Integer;
      lAssignedProvider@1000000000 : Integer;
    BEGIN
      CLEAR(lXMLDocument);
      CREATE(lXMLDocument);

      lEAIPartner.GET(pEAISentMQBuffer."EAI Partner Code");
      lRecRef.GETTABLE(lOriginServiceInterventionLine);
      lRecRef.GET(pEAISentMQBuffer.RecordId);
      lRecRef.SETTABLE(lOriginServiceInterventionLine);
      lService.GET(lOriginServiceInterventionLine."Service No.");
      lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,lOriginServiceInterventionLine."Service Header No.");
      //<<IMH09.PC
      IF DT2DATE(lServiceHeader."Creation Date") < 010112D THEN BEGIN
        ERROR(Text013);
      END;
      //>>IMH09.PC

      // Recherche du nombre de prestataire assign‚ sur les interventions
      lServiceInterventionLine.RESET;
      lServiceInterventionLine.SETRANGE("Service Header No.",lServiceHeader."No.");
      lServiceInterventionLine.SETFILTER("Intervention Status",'<>%1',lServiceInterventionLine."Intervention Status"::Cancel);
      IF lServiceInterventionLine.FINDSET THEN BEGIN
        REPEAT
          IF NOT lProviderBuffer.GET(lServiceInterventionLine."Provider No.") THEN BEGIN
            lProviderBuffer."No." := lServiceInterventionLine."Provider No.";
            lProviderBuffer.INSERT;
          END;
        UNTIL lServiceInterventionLine.NEXT = 0;
      END ELSE BEGIN
        ERROR(Text001);
      END;
      lAssignedProvider := lProviderBuffer.COUNT;

      //<<IMH04.LLT
      lDate := GetMinDate(lOriginServiceInterventionLine."Service Header No.");
      //>>IMH04.LLT
      EAISetup.GET;

      //Root Node
      lXMLDocument.async := FALSE;
      DARVAXMLMgt.SetType(1);
      lXMLDocument.setProperty('SelectionNamespaces', DARVAXMLMgt.GetSelectionNameSpace);
      DARVAXMLMgt.CreateWSHeader(lXMLDocument,lXMLNewChild2,lEAIPartner.Username,lEAIPartner.Password);
      WITH EAIXMLDocMgt DO BEGIN
        lNameSpace := DARVAXMLMgt.GetNameSpace(1);
        AddElement(lXMLNewChild2,'sch:SoumettreSuiviDossierReparateurDesignationPrestataireDemande','',lNameSpace,lXMLNewChild3);
        //Context
        DARVAXMLMgt.Sent_InsertContext(lEAIPartner,lXMLNewChild3);
        //Dossier
        DARVAXMLMgt.Sent_InsertService(lEAIPartner,lService, lXMLNewChild3);
        //Partenaires
        DARVAXMLMgt.Sent_InsertPartners(lEAIPartner,lServiceHeader,lXMLNewChild3);
        lNameSpace := DARVAXMLMgt.GetNameSpace(2);
        AddElement(lXMLNewChild3,'ns:suiviDossierReparateurDesignationPrestataire','',lNameSpace,lXMLNewChild4);
        AddElement(lXMLNewChild4,'ns:prestataires','',lNameSpace,lXMLNewChild5);

        // Parcours des lots de travaux
        lDARVALot.RESET;
        lDARVALot.SETCURRENTKEY("Service No.","Service Header No.");
        lDARVALot.SETRANGE("Service No.",lServiceInterventionLine."Service No.");
        lDARVALot.SETRANGE("Service Header No.",lServiceInterventionLine."Service Header No.");
        lDARVALot.SETFILTER("Lot No.",'<>%1','');
        IF lDARVALot.FINDSET THEN BEGIN
          REPEAT
            lServiceInterventionLine.RESET;
            lServiceInterventionLine.SETRANGE("Service Header No.", lServiceInterventionLine."Service Header No.");
            lServiceInterventionLine.SETFILTER("Intervention Status",'<>%1',lServiceInterventionLine."Intervention Status"::Cancel);
            lServiceInterventionLine.FINDSET;
            REPEAT
              AddElement(lXMLNewChild5,'ns:prestataire','',lNameSpace,lXMLNewChild6);
              lProvider.GET(lServiceInterventionLine."Provider No.");
              AddElement(
                lXMLNewChild6,
                'ns:codeEntrepriseAgreee',
                //<<IMH07
                //DARVAMgt.GetDarvaCorporateNo(
                //  lServiceHeader."Corporate No.",lServiceHeader."Corporate Region Code",
                //  lProvider."No.",lEAIPartner.Code,TRUE),
                COPYSTR(GetAgreement(lServiceHeader, lServiceInterventionLine),1,7),
                //>>IMH07
                lNameSpace,
                lXMLNewChild7);
              AddElement(lXMLNewChild6,'ns:numeroLotTravaux',COPYSTR(lDARVALot."Lot No.",1,35),lNameSpace,lXMLNewChild7);
              //<<IMH13.PC
              //AddElement(lXMLNewChild6,'ns:referenceMission',COPYSTR(lDARVALot."Mission No.",1,35),lNameSpace,lXMLNewChild7);
              AddElement(lXMLNewChild6,'ns:referenceMission',COPYSTR(lServiceHeader."No.",1,35),lNameSpace,lXMLNewChild7);
              //>>IMH13.PC
              AddElement(lXMLNewChild6,'ns:dateRendezVous',(FORMAT(lDate,0,'<Year4>-<Month,2>-<Day,2>')),lNameSpace,lXMLNewChild7);
              IF lAssignedProvider = 1 THEN BEGIN
                //<<IMH10.PC
                //AddElement(lXMLNewChild6,'ns:nomPrenom',COPYSTR(lProvider.Name,1,32),lNameSpace,lXMLNewChild7);
                AddElement(lXMLNewChild6,'ns:nomPrenom',ReplaceSpecialChar(COPYSTR(lProvider.Name,1,32)),lNameSpace,lXMLNewChild7);
                //>>IMH10.PC
                AddElement(lXMLNewChild6,'ns:adresse','',lNameSpace,lXMLNewChild7);
                //<<IMH10.PC
                //AddElement(lXMLNewChild7,'ns:adresse1',COPYSTR(lProvider.Address,1,32),lNameSpace,lXMLNewChild8);
                //AddElement(lXMLNewChild7,'ns:adresse2',COPYSTR(lProvider."Address 2",1,32),lNameSpace,lXMLNewChild8);
                AddElement(lXMLNewChild7,'ns:adresse1',ReplaceSpecialChar(COPYSTR(lProvider.Address,1,32)),lNameSpace,lXMLNewChild8);
                AddElement(lXMLNewChild7,'ns:adresse2',ReplaceSpecialChar(COPYSTR(lProvider."Address 2",1,32)),lNameSpace,lXMLNewChild8)
      ;
                //>>IMH10.PC
                AddElement(lXMLNewChild7,'ns:codePostal',COPYSTR(lProvider."Post Code",1,5),lNameSpace,lXMLNewChild8);
                //<<IMH10.PC
                //AddElement(lXMLNewChild7,'ns:localite',COPYSTR(lProvider.City,1,26),lNameSpace,lXMLNewChild8);
                AddElement(lXMLNewChild7,'ns:localite',ReplaceSpecialChar(COPYSTR(lProvider.City,1,26)),lNameSpace,lXMLNewChild8);
                //>>IMH10.PC
                IF lProvider."Phone No." <> '' THEN BEGIN
                  AddElement(lXMLNewChild6,'ns:telephone',COPYSTR(DELCHR(lProvider."Phone No.",'=',' '),1,10),lNameSpace,lXMLNewChild7);
                END;
                IF lProvider."E-Mail" <> '' THEN BEGIN
                  //<<IMH12
                  //AddElement(lXMLNewChild6,'ns:mail',COPYSTR(lProvider."E-Mail",1,32),lNameSpace,lXMLNewChild7);
                  AddElement(lXMLNewChild6,'ns:mail',COPYSTR(DeleteMailInvalidChar(lProvider."E-Mail"),1,32),lNameSpace,lXMLNewChild7);
                  //IMH12
                END;
              END ELSE  BEGIN
                // Partie Information soci‚t‚ IMH
                lCompanyInformation.GET;
                AddElement(lXMLNewChild6,'ns:nomPrenom',COPYSTR(lCompanyInformation.Name,1,32),lNameSpace,lXMLNewChild7);
                AddElement(lXMLNewChild6,'ns:adresse','',lNameSpace,lXMLNewChild7);
                AddElement(lXMLNewChild7,'ns:adresse1',COPYSTR(lCompanyInformation.Address,1,32),lNameSpace,lXMLNewChild8);
                AddElement(lXMLNewChild7,'ns:adresse2',COPYSTR(lCompanyInformation."Address 2",1,32),lNameSpace,lXMLNewChild8);
                AddElement(lXMLNewChild7,'ns:codePostal',COPYSTR(lCompanyInformation."Post Code",1,5),lNameSpace,lXMLNewChild8);
                AddElement(lXMLNewChild7,'ns:localite',COPYSTR(lCompanyInformation.City,1,26),lNameSpace,lXMLNewChild8);
                IF lCompanyInformation."Phone No." <> '' THEN BEGIN
                  AddElement(lXMLNewChild6,'ns:telephone',
                    COPYSTR(DELCHR(lCompanyInformation."Phone No.",'=',' '),1,10),lNameSpace,lXMLNewChild7);
                END;
                IF lCompanyInformation."E-Mail" <> '' THEN BEGIN
                  //<<IMH12
                  //AddElement(lXMLNewChild6,'ns:mail',COPYSTR(lCompanyInformation."E-Mail",1,32),lNameSpace,lXMLNewChild7);
                  AddElement(lXMLNewChild6,'ns:mail',
                      COPYSTR(DeleteMailInvalidChar(lCompanyInformation."E-Mail"),1,32),lNameSpace,lXMLNewChild7);
                  //>>IMH12
                END;
              END;
            UNTIL lServiceInterventionLine.NEXT = 0;
          UNTIL lDARVALot.NEXT = 0;
        END ELSE BEGIN
          //<<IMH05.PC
          lDARVAMission.SETRANGE("Service No.",lServiceInterventionLine."Service No.");
          lDARVAMission.SETRANGE("Service Header No.",lServiceInterventionLine."Service Header No.");
          lDARVAMission.FINDFIRST;
          //>>IMH05.PC
          CASE lServiceHeader."Corporate No." OF
            EAISetup."MACIF Customer No." : BEGIN
              lServiceInterventionLine.RESET;
              lServiceInterventionLine.SETRANGE("Service Header No.", lServiceInterventionLine."Service Header No.");
              lServiceInterventionLine.SETFILTER("Intervention Status",'<>%1',lServiceInterventionLine."Intervention Status"::Cancel);
              lServiceInterventionLine.FINDFIRST;
              AddElement(lXMLNewChild5,'ns:prestataire','',lNameSpace,lXMLNewChild6);
              lProvider.GET(lServiceInterventionLine."Provider No.");
              AddElement(
                lXMLNewChild6,
                'ns:codeEntrepriseAgreee',
                //<<IMH07
                //DARVAMgt.GetDarvaCorporateNo(
                //  lServiceHeader."Corporate No.",lServiceHeader."Corporate Region Code",
                //  lProvider."No.",lEAIPartner.Code,TRUE),
                GetAgreement(lServiceHeader, lServiceInterventionLine),
                //>>IMH07
                lNameSpace,
                lXMLNewChild7);
              //<<IMH13.PC
              //AddElement(lXMLNewChild6,'ns:referenceMission',COPYSTR(lDARVAMission."Mission No.",1,35),lNameSpace,lXMLNewChild7);
              AddElement(lXMLNewChild6,'ns:referenceMission',COPYSTR(lServiceHeader."No.",1,35),lNameSpace,lXMLNewChild7);
              //>>IMH13.PC
              AddElement(lXMLNewChild6,'ns:dateRendezVous',(FORMAT(lDate,0,'<Year4>-<Month,2>-<Day,2>')),lNameSpace,lXMLNewChild7);
              //<<IMH10.PC
              //AddElement(lXMLNewChild6,'ns:nomPrenom',COPYSTR(lProvider.Name,1,32),lNameSpace,lXMLNewChild7);
              AddElement(lXMLNewChild6,'ns:nomPrenom',ReplaceSpecialChar(COPYSTR(lProvider.Name,1,32)),lNameSpace,lXMLNewChild7);
              //>>IMH10.PC
              AddElement(lXMLNewChild6,'ns:adresse','',lNameSpace,lXMLNewChild7);
              //<<IMH10.PC
              //AddElement(lXMLNewChild7,'ns:adresse1',COPYSTR(lProvider.Address,1,32),lNameSpace,lXMLNewChild8);
              //AddElement(lXMLNewChild7,'ns:adresse2',COPYSTR(lProvider."Address 2",1,32),lNameSpace,lXMLNewChild8);
              AddElement(lXMLNewChild7,'ns:adresse1',ReplaceSpecialChar(COPYSTR(lProvider.Address,1,32)),lNameSpace,lXMLNewChild8);
              AddElement(lXMLNewChild7,'ns:adresse2',ReplaceSpecialChar(COPYSTR(lProvider."Address 2",1,32)),lNameSpace,lXMLNewChild8);
              //>>IMH10.PC
              AddElement(lXMLNewChild7,'ns:codePostal',COPYSTR(lProvider."Post Code",1,5),lNameSpace,lXMLNewChild8);
              //<<IMH10.PC
              //AddElement(lXMLNewChild7,'ns:localite',COPYSTR(lProvider.City,1,26),lNameSpace,lXMLNewChild8);
              AddElement(lXMLNewChild7,'ns:localite',ReplaceSpecialChar(COPYSTR(lProvider.City,1,26)),lNameSpace,lXMLNewChild8);
              //>>IMH10.PC
              IF lProvider."Phone No." <> '' THEN BEGIN
                AddElement(lXMLNewChild6,'ns:telephone',COPYSTR(DELCHR(lProvider."Phone No.",'=',' '),1,10),lNameSpace,lXMLNewChild7);
              END;
              IF lProvider."E-Mail" <> '' THEN BEGIN
                //<<IMH12
                //AddElement(lXMLNewChild6,'ns:mail',COPYSTR(lProvider."E-Mail",1,32),lNameSpace,lXMLNewChild7);
                AddElement(lXMLNewChild6,'ns:mail',COPYSTR(DeleteMailInvalidChar(lProvider."E-Mail"),1,32),lNameSpace,lXMLNewChild7);
                //>>IMH12
              END;
            END;
            EAISetup."AGPM Customer No." : BEGIN
              lServiceInterventionLine.RESET;
              lServiceInterventionLine.SETRANGE("Service Header No.",lServiceHeader."No.");
              lServiceInterventionLine.SETFILTER("Intervention Status",'<>%1',lServiceInterventionLine."Intervention Status"::Cancel);
              //<<IMH11.PC
              //lServiceInterventionLine.FINDSET;
              //REPEAT
              lServiceInterventionLine.FINDFIRST;
              //>>IMH11.PC
              AddElement(lXMLNewChild5,'ns:prestataire','',lNameSpace,lXMLNewChild6);
              lProvider.GET(lServiceInterventionLine."Provider No.");
              AddElement(
                lXMLNewChild6,
                'ns:codeEntrepriseAgreee',
                //<<IMH07
                //DARVAMgt.GetDarvaCorporateNo(
                //  lServiceHeader."Corporate No.",lServiceHeader."Corporate Region Code",
                //  lProvider."No.",lEAIPartner.Code,TRUE),
                GetAgreement(lServiceHeader, lServiceInterventionLine),
                //>>IMH07
                lNameSpace,
                lXMLNewChild7);
              //<<IMH13.PC
              //AddElement(lXMLNewChild6,'ns:referenceMission',COPYSTR(lDARVAMission."Mission No.",1,35),lNameSpace,lXMLNewChild7);
              AddElement(lXMLNewChild6,'ns:referenceMission',COPYSTR(lServiceHeader."No.",1,35),lNameSpace,lXMLNewChild7);
              //>>IMH13.PC
              AddElement(lXMLNewChild6,'ns:dateRendezVous',(FORMAT(lDate,0,'<Year4>-<Month,2>-<Day,2>')),lNameSpace,lXMLNewChild7);
              //<<IMH09.PC
              //IF lAssignedProvider = 1 THEN BEGIN
              //  AddElement(lXMLNewChild6,'ns:nomPrenom',COPYSTR(lProvider.Name,1,32),lNameSpace,lXMLNewChild7);
              //END ELSE  BEGIN
              //  // Partie Information soci‚t‚ IMH
              //  lCompanyInformation.GET;
              //  AddElement(lXMLNewChild6,'ns:nomPrenom',COPYSTR(lCompanyInformation.Name,1,32),lNameSpace,lXMLNewChild7);
              //END;
              //<<IMH10.PC
              //AddElement(lXMLNewChild6,'ns:nomPrenom',COPYSTR(lProvider.Name,1,32),lNameSpace,lXMLNewChild7);
              AddElement(lXMLNewChild6,'ns:nomPrenom',ReplaceSpecialChar(COPYSTR(lProvider.Name,1,32)),lNameSpace,lXMLNewChild7);
              //>>IMH10.PC
              //>>IMH09.PC
              //<<IMH11.PC
              //UNTIL lServiceInterventionLine.NEXT = 0;
              //>>IMH11.PC
            END;
          END;
        END;
        // Mise des informations prestataires en commentaires
        GetProviderInformation(lServiceHeader."No.",lXMLNewChild4,lNameSpace);
      END;

      CLEAR(pEAISentMQBuffer."XML Source");
      pEAISentMQBuffer."XML Source".CREATEINSTREAM(lInStream);
      lXMLDocument.save(lInStream);
      // Gestion des tests
      IF NASHandler.IsDebug THEN BEGIN
        lXMLDocument.save(TEMPORARYPATH + 'EnvoiSDR64 - ' + lServiceHeader."No." + '.xml');
      END;

      //Enregistrement dans la table "‚criture document EDI"
      lEAIDocEntryMgt.AddEntryFromSentBuffer(
        DATABASE::"Service Header",lServiceHeader."Document Type", lServiceHeader."No.", '', 0, pEAISentMQBuffer);
    END;

    LOCAL PROCEDURE GetProviderInformation@1100281008(pServiceHeaderNo@1100281001 : Code[20];VAR pXMLNode@1100281003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";pNameSpace@1100281005 : Text[250]);
    VAR
      lProvider@1100281002 : Record 50000;
      lServiceInterventionLine@1100281000 : Record 50075;
      lCodeBuffer@1100281009 : TEMPORARY Record 50079;
      lTempXMLNode@1100281006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lTempText@1100281004 : Text[1024];
      lTempText2@1100281008 : Text[1024];
      lBigtext@1100281007 : BigText;
    BEGIN
      // IMH02.PC
      // Permet les informations des prestataires assign‚s sur l'intervention et elles sont stock‚es en commentaires

      WITH lServiceInterventionLine DO BEGIN
        SETRANGE("Service Header No.",pServiceHeaderNo);
        //<<IMH06.PC
        SETFILTER("Intervention Status",'<>%1',"Intervention Status"::Cancel);
        //>>IMH06.PC
        IF FINDSET THEN BEGIN
          REPEAT
            lTempText := '';
            lTempText2 := '';

            IF lProvider.GET("Provider No.") THEN BEGIN
              IF NOT lCodeBuffer.GET(0,0,lProvider."No.") THEN BEGIN
                lCodeBuffer."Table ID" := 0;
                lCodeBuffer."Field ID" := 0;
                lCodeBuffer.Code := lProvider."No.";
                lCodeBuffer.INSERT;

                IF lBigtext.LENGTH <> 0 THEN BEGIN
                  lBigtext.ADDTEXT(' * ');
                END;

                IF lProvider.Name <> '' THEN BEGIN
                  //<<IMH15
                  //lTempText := lProvider.Name;
                  lTempText := ReplaceSpecialChar(lProvider.Name);
                  //>>IMH15
                END;

                lTempText2 := GetProviderPhoneNo(lProvider."No.");
                IF lTempText2 <> '' THEN BEGIN
                  IF lTempText <> '' THEN BEGIN
                    lTempText += ' - ';
                  END;
                  lTempText += lTempText2;
                END;

                //<<IMH15
                //lTempText2 := lProvider."Post Code" + ' ' + lProvider.City;
                lTempText2 := lProvider."Post Code" + ' ' + ReplaceSpecialChar(lProvider.City);
                //>>IMH15
                IF lTempText2 <> '' THEN BEGIN
                  IF lTempText <> '' THEN BEGIN
                    lTempText += ' - ';
                  END;
                  lTempText += lTempText2;
                END;

                //<<IMH15
                //<<IMH14
                lBigtext.ADDTEXT(lTempText);
                //lBigtext.ADDTEXT(ReplaceSpecialChar(lTempText));
                //>>IMH14
                //>>IMH15
              END;
            END;
          UNTIL NEXT = 0;
        END;
      END;
      IF lBigtext.LENGTH <> 0 THEN BEGIN
        EAIXMLDocMgt.AddBigTextElement(pXMLNode,'ns:commentaireLibre',lBigtext,pNameSpace,lTempXMLNode);
      END;
    END;

    LOCAL PROCEDURE GetProviderPhoneNo@1100281004(pProviderNo@1100281001 : Code[20]) rValue : Text[30];
    VAR
      lProvider@1100281000 : Record 50000;
      lContact@1100281002 : Record 5050;
    BEGIN
      // IMH02.PC
      // Permet de r‚cup‚rer le premier nø de t‚l‚phone d'un prestataire

      rValue := '';

      IF NOT lProvider.GET(pProviderNo) THEN BEGIN
        EXIT;
      END;
      WITH lContact DO BEGIN
        IF GET(lProvider."Admin. Contact No.") THEN BEGIN
          IF "Phone No." <> '' THEN BEGIN
            rValue := "Phone No.";
          END;
          IF ("Mobile Phone No." <> '') AND (rValue = '') THEN BEGIN
            rValue := "Mobile Phone No.";
          END;
          IF ("Mobile Phone No. 2" <> '') AND (rValue = '') THEN BEGIN
            rValue := "Mobile Phone No. 2";
          END;
          IF ("Business Phone No." <> '') AND (rValue = '') THEN BEGIN
            rValue := "Business Phone No.";
          END;
          IF ("Constraint Phone No." <> '') AND (rValue = '') THEN BEGIN
            rValue := "Constraint Phone No.";
          END;
        END;
      END;
      IF rValue = '' THEN BEGIN
        WITH lProvider DO BEGIN
          IF "Phone No." <> '' THEN BEGIN
            rValue := "Phone No.";
          END;
          IF ("Mobile Phone No." <> '') AND (rValue = '') THEN BEGIN
            rValue := "Mobile Phone No.";
          END;
          IF ("Mobile Phone No. 2" <> '') AND (rValue = '') THEN BEGIN
            rValue := "Mobile Phone No. 2";
          END;
          IF ("Business Phone No." <> '') AND (rValue = '') THEN BEGIN
            rValue := "Business Phone No.";
          END;
          IF ("Constraint Phone No." <> '') AND (rValue = '') THEN BEGIN
            rValue := "Constraint Phone No.";
          END;
        END;
      END;
      rValue := DELCHR(rValue,'=',' ');
    END;

    LOCAL PROCEDURE GetMinDate@1100281007(pServiceHeaderNo@1100281000 : Code[20]) rDate : Date;
    VAR
      lServIntervLine@1100281001 : Record 50075;
      lDate@1100281002 : Date;
    BEGIN
      //<<IMH08.PC
      EXIT(TODAY);
      //>>IMH08.PC
      lServIntervLine.SETRANGE("Service Header No.",pServiceHeaderNo);
      IF lServIntervLine.FINDSET THEN BEGIN
        REPEAT
          IF lServIntervLine."Previsit Date" <> 0D THEN BEGIN
            lDate := lServIntervLine."Previsit Date";
          END ELSE BEGIN
            lDate := lServIntervLine."Expected Previsit Date";
          END;
          IF rDate = 0D THEN BEGIN
            rDate := lDate;
          END ELSE BEGIN
            IF rDate > lDate THEN BEGIN
              rDate := lDate;
            END;
          END;
        UNTIL lServIntervLine.NEXT = 0;
      END;
      IF rDate = 0D THEN BEGIN
        rDate := WORKDATE;
      END;
    END;

    LOCAL PROCEDURE GetAgreement@1100281003(pServiceHeader@1000000000 : Record 5900;pIntervention@1000000001 : Record 50075) : Code[10];
    VAR
      lProviderAgreement@1100281000 : Record 50012;
      lCorporateRegion@1100281001 : Record 50058;
    BEGIN
      //IMH07
      lProviderAgreement.SETCURRENTKEY("Detail Corporate No.","Detail Corporate Region Code");
      lProviderAgreement.SETRANGE("Detail Corporate No.",pServiceHeader."Corporate No.");
      lProviderAgreement.SETRANGE("Detail Corporate Region Code",pServiceHeader."Corporate Region Code");
      lProviderAgreement.SETRANGE("Provider No.",pIntervention."Provider No.");
      IF lProviderAgreement.ISEMPTY THEN BEGIN
        lProviderAgreement.SETRANGE("Detail Corporate Region Code");
      END;
      IF NOT lProviderAgreement.ISEMPTY THEN BEGIN
        IF lProviderAgreement.FINDFIRST THEN BEGIN
          EXIT(lProviderAgreement."Agreement No.");
        END;
      END ELSE BEGIN
        lCorporateRegion.SETRANGE("Corporate No.",pServiceHeader."Corporate No.");
        lCorporateRegion.SETRANGE("Region Code",pServiceHeader."Corporate Region Code");
        IF lCorporateRegion.COUNT = 1 THEN BEGIN
          lCorporateRegion.FINDFIRST;
          EXIT(lCorporateRegion."SDR64 Provider No.");
        END;
      END;
    END;

    LOCAL PROCEDURE ReplaceSpecialChar@1100281001(pText@1100281000 : Text[80]) rValue : Text[80];
    BEGIN
      // IMH10.PC

      rValue := DARVAMgt.ReplaceSpecialChar(pText);
    END;

    PROCEDURE DeleteMailInvalidChar@1100281000(pText@1100281000 : Text[250]) : Text[250];
    BEGIN
      //IMH12
      EXIT(DELCHR(pText,'=',' '));
    END;

    BEGIN
    {
      /** @r IMH15 @d 20/03/14 @a ISAT.ZW @v IMH6.01.4922 @h 4922 @s caractŠres sp‚ciaux @c Correction */
      /** @r IMH14 @d 19/02/14 @a ISAT.ZW @v IMH6.01.4922 @h 4922 @s caractŠres sp‚ciaux @c Suppression caractŠres sp‚ciaux */
      /** @r IMH13 @d 03/06/12 @a ISAT.PC @v IMH6.01.347 @h 4531 @s Juin @c Mantis du mois de juin */
      /** @r IMH12 @d 16/05/12 @a ISAT.ZW @v IMH6.01.339 @h 4005 @s DARVA1.3 @c Supprimer caractŠres invalide de Email */
      /** @r IMH11 @d 25/04/12 @a ISAT.PC @v IMH6.01.345 @h 4032 @s NEP IMH 5 */
      /** @r IMH10 @d 28/09/12 @a ISAT.PC @v IMH6.01.228 @h 3958 @s NEP00011 */
      /** @r IMH09 @d 04/07/12 @a ISAT.PC @v IMH6.01.134 @h 3644 @s Correction */
      /** @r IMH08 @d 20/06/12 @a ISAT.PC @v IMH6.01.134 @h 3639 @s V‚rification avant accŠs DARVA */
      /** @r IMH07 @d 07/06/12 @a ISAT.ZW @v IMH6.01.134 @s DARVA Management @h 3574 @c Ajout fonction GetAgreement */
      /** @r IMH06 @d 07/05/12 @a ISAT.PC @v IMH6.01.134 @s DARVA Management @h 3330 @c Gestion Darva Mission */
      /** @r IMH05 @d 23/04/12 @a ISAT.PC @v IMH6.01.134 @s DARVA Management @h 2543 @c Gestion Darva Mission */
      /** @r IMH04 @d 20/03/12 @a ISAT.LLT @v IMH6.01.134 @s DARVA Management @h 2834 @c Evolution SDR64 */
      /** @r IMH03 @d 15/09/11 @a ISAT.ZW @v IMH6.01.134 @s DARVA Management @s
          @c SDR64 : Soumettre Suivi Dossier Reparateur Designation Prestataire Demande */
      /** @r IMH02 @d 07/09/11 @a ISAT.PC @v IMH6.01.134 @s DARVA Management @s Modification */
      /** @r IMH01 @d 13/07/11 @a ISAT.MA @v IMH6.01.134 @s DARVA Management @s Cr‚ation */
    }
    END.
  }
}