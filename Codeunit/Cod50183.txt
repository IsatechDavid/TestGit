OBJECT Codeunit 50183 FUSION Rcvd Doc List Val. Act
{
  OBJECT-PROPERTIES
  {
    Date=28/05/13;
    Time=16:45:27;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    TableNo=8016721;
    OnRun=VAR
            lEAIRcvdMQBuffer@1100281001 : TEMPORARY Record 8016721;
          BEGIN
            EAIRcvdMQBufferRec := Rec;
            Rec.CALCFIELDS("XML Source");
            EAIRcvdMQBufferRec."XML Source" := Rec."XML Source";
            Code(lEAIRcvdMQBuffer);

            Rec.DELETEALL;
            IF lEAIRcvdMQBuffer.FINDFIRST THEN
              REPEAT
                Rec := lEAIRcvdMQBuffer;
                lEAIRcvdMQBuffer.CALCFIELDS("XML Source");
                Rec."XML Source" := lEAIRcvdMQBuffer."XML Source";
                Rec.INSERT;
              UNTIL lEAIRcvdMQBuffer.NEXT = 0;
          END;

  }
  CODE
  {
    VAR
      EAIRcvdMQBufferRec@1100281000 : Record 8016721;
      EAIMQBufferMgt@1100281001 : Codeunit 8016708;

    PROCEDURE Code@1100281000(VAR pEAIRcvdMQBuffer@1100281000 : Record 8016721);
    VAR
      lEAIExchangeType@1100281001 : Record 8016717;
      lEAIMessageQueue@1100281010 : Record 8016704;
      lEAIRcvdMQBuffer@1100281011 : TEMPORARY Record 8016721;
      lInterfaceSetup@1100281012 : Record 50139;
      lwinHTTPService@1100281006 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDoc@1100281005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lXmlDom@1100281003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lXmlNodeList@1100281004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
      lXmlDomElement@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      lAttributeNode@1100281007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lInStream@1100281002 : InStream;
      i@1100281009 : Integer;
      lNbDocToGet@1100281013 : Integer;
      lRefNo@1100281014 : Text[30];
    BEGIN

      lEAIExchangeType.GET(lEAIExchangeType.Type::Inbound, EAIRcvdMQBufferRec."EAI Exchange Type Code");
      lEAIExchangeType.TESTFIELD("Ingoing Queue Label");

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',lEAIExchangeType."Ingoing Queue Label",0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','"http://tempuri.org/IEdiService/GetListeFluxSortant"');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      CREATE(lXmlDoc);
      EAIRcvdMQBufferRec.CALCFIELDS("XML Source");
      EAIRcvdMQBufferRec."XML Source".CREATEINSTREAM(lInStream);
      lXmlDoc.load(lInStream);
      //lXmlDoc.save('z:\Fob\Fusion\Fusiontest.xml');
      lwinHTTPService.Send(lXmlDoc);
      CLEAR(lInStream);
      CLEAR(lXmlDoc);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');
      CLEAR(EAIRcvdMQBufferRec."XML Source");
      EAIRcvdMQBufferRec."XML Source".CREATEINSTREAM(lInStream);
      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(lInStream);
      //lXmlDom.save('Z:\Temp\test fusion\ReponseListeDoc.xml');

      lEAIMessageQueue.GET(EAIRcvdMQBufferRec."EAI MQ Code");
      EAIMQBufferMgt._GetReceivedBufferFromMQ(lEAIMessageQueue,lEAIRcvdMQBuffer);
      lInterfaceSetup.GET;
      lNbDocToGet := lInterfaceSetup."Fusion GetDocList Max Nb.";

      lXmlNodeList := lXmlDom.getElementsByTagName('a:FluxSortant');
      //IF (lXmlNodeList.length() < lNbDocToGet) OR (lNbDocToGet = 0) THEN
        lNbDocToGet := lXmlNodeList.length();
      FOR i := 0 TO lNbDocToGet-1 DO BEGIN
        lXmlDomElement := lXmlNodeList.item(i);
        lAttributeNode := lXmlDomElement.selectSingleNode('a:R‚f‚renceServiceFusion');
        lRefNo := lAttributeNode.text;
        lAttributeNode := lXmlDomElement.selectSingleNode('a:FluxSortantId');
        lEAIRcvdMQBuffer.SETCURRENTKEY("EAI Exchange Type Code","Message ID");
        lEAIRcvdMQBuffer.SETRANGE("EAI Exchange Type Code",EAIRcvdMQBufferRec."EAI Exchange Type Code");
        lEAIRcvdMQBuffer.SETRANGE("Message ID",lAttributeNode.text);
        IF lEAIRcvdMQBuffer.ISEMPTY THEN
        BEGIN
          pEAIRcvdMQBuffer := EAIRcvdMQBufferRec;
          pEAIRcvdMQBuffer."GUID Fusion Code" := lAttributeNode.text;
          pEAIRcvdMQBuffer."Message ID" := pEAIRcvdMQBuffer."GUID Fusion Code";
          //Type flux sortant : ServiceFusion, DevisContr“l‚ParDtc
          lAttributeNode := lXmlDomElement.selectSingleNode('a:TypeContenuFlux');
          CASE lAttributeNode.text OF
            'InterventionFusion' : pEAIRcvdMQBuffer."Fusion Flow Type" := pEAIRcvdMQBuffer."Fusion Flow Type"::Service;
            'DevisContr“l‚ParDtc' : pEAIRcvdMQBuffer."Fusion Flow Type" := pEAIRcvdMQBuffer."Fusion Flow Type"::Quote;
          END;
          pEAIRcvdMQBuffer."Reference No." := lRefNo;
          pEAIRcvdMQBuffer."Entry No." := '';
          CLEAR(pEAIRcvdMQBuffer."XML Source");
          pEAIRcvdMQBuffer.INSERT(TRUE);
        END;
      END;
    END;

    BEGIN
    {
      /** @r IMH02 @d 06/05/13 @a ISAT.PC @v IMH6.01.222 @s Uniformisation Darva
          @c Modification de la gestion pour r‚cup‚rer le type d'‚change */
      /** @r IMH01 @d 12/04/11 @a ISAT.ZW @v IMH6.01.136 @s Interface Fusion @c cr‚ation */
    }
    END.
  }
}