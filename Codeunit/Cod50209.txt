OBJECT Codeunit 50209 DARVA Sent SDR99NDT Gen. Act
{
  OBJECT-PROPERTIES
  {
    Date=11/06/12;
    Time=11:51:00;
    Modified=Yes;
    Version List=IMH6.01,IMH6.01.23;
  }
  PROPERTIES
  {
    TableNo=8016720;
    OnRun=VAR
            lEAISentMQBuffer@1100281000 : TEMPORARY Record 8016720;
          BEGIN
            lEAISentMQBuffer := Rec;
            Code(lEAISentMQBuffer);
            lEAISentMQBuffer.CALCFIELDS("XML Source");
            "XML Source" := lEAISentMQBuffer."XML Source";
            Rec := lEAISentMQBuffer;
          END;

  }
  CODE
  {
    VAR
      EAIPartner@1100281002 : Record 8016707;
      EAISetup@1100281008 : Record 8016700;
      DARVAXMLMgt@1100281004 : Codeunit 50154;
      EAIXMLDocMgt@1100281003 : Codeunit 8016713;
      Text001@1100281007 : TextConst 'FRA=http://www.w3.org/2003/05/soap-envelope';
      Text002@1100281006 : TextConst 'FRA=http://www.darva.com/ws/ird/reparateur/2010/11/schema';
      Text003@1100281005 : TextConst 'FRA=http://www.darva.com/ws/datatype/2010/11';
      NASHandler@1100281009 : Codeunit 8016720;
      Text004@1100281000 : TextConst 'FRA=Merci de nous transmettre une nouvelle demande de travaux avec les lots de travaux suivants :';
      Text005@1100281001 : TextConst 'FRA="(%1 - %2 - %3) "';
      Text006@1000000000 : TextConst 'FRA="(Raison sociale - Nø agr‚ment - Corps de m‚tier assign‚) "';
      Text007@1000000001 : TextConst 'ENU=Thanks to resend new DT wtih following working lot :;FRA="Merci de nous transmettre une nouvelle demande de travaux avec les lot de travaux suivants : "';

    PROCEDURE Code@1100281000(VAR pEAISentMQBuffer@1100281000 : Record 8016720);
    VAR
      lServiceHeader@1100281018 : Record 5900;
      lService@1100281017 : Record 50066;
      lAdvCommentLine@1100281011 : Record 50056;
      lAdvCommentLine2@1100281013 : Record 50056;
      lEAIAct@1100281014 : Record 8016706;
      lEAIPartner@1100281003 : Record 8016707;
      lCorporateRegion@1100281019 : Record 50058;
      lInterfaceReference@1100281022 : Record 50164;
      lEAISetup@1100281024 : Record 8016700;
      lServiceOrderType@1100281025 : Record 5903;
      lDocumentAttachment@1100281020 : Record 50021;
      lFile@1100281027 : Record 2000000022;
      lEAIDocEntryMgt@1100281002 : Codeunit 8016707;
      lXMLDocument@1100281001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      lXMLNewChild0@1100281010 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild1@1100281004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild2@1100281007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild3@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild4@1100281009 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild5@1100281012 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lInStream@1100281005 : InStream;
      lNameSpace@1100281006 : Text[250];
      lBigText@1100281028 : BigText;
      lRecRef@1100281016 : RecordRef;
      lRecRef2@1100281021 : RecordRef;
      lRecID@1100281015 : RecordID;
      lManagerTodoText@1000000000 : Text[1];
      lSDR64Send@1100281023 : Boolean;
      lSDR99ChoiceSend@1100281026 : Boolean;
    BEGIN
      CLEAR(lXMLDocument);
      CREATE(lXMLDocument);

      EAIPartner.GET(pEAISentMQBuffer."EAI Partner Code");
      EAISetup.GET;
      lRecID := pEAISentMQBuffer.RecordId;
      lRecRef := lRecID.GETRECORD;
      lRecRef.LOCKTABLE;
      IF lRecRef.FIND('=') THEN;
      lRecRef.SETTABLE(lAdvCommentLine);

      lEAIPartner.GET(pEAISentMQBuffer."EAI Partner Code");
      lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,lAdvCommentLine."Source No. 2");
      lService.GET(lServiceHeader."Service No.");
      lServiceHeader.TESTFIELD("DARVA Interface",TRUE);
      //Root Node
      lXMLDocument.async := FALSE;
      DARVAXMLMgt.SetType(1);
      lXMLDocument.setProperty('SelectionNamespaces',DARVAXMLMgt.GetSelectionNameSpace);
      DARVAXMLMgt.CreateWSHeader(lXMLDocument,lXMLNewChild2,lEAIPartner.Username,lEAIPartner.Password);
      lNameSpace := DARVAXMLMgt.GetNameSpace(1);
      EAIXMLDocMgt.AddElement(lXMLNewChild2,'sch:SoumettreSuiviDossierReparateurCommentaireDemande','',lNameSpace,lXMLNewChild3);

      lNameSpace := DARVAXMLMgt.GetNameSpace(2);
      //context
      DARVAXMLMgt.Sent_InsertContext(lEAIPartner, lXMLNewChild3);
      //dossier
      DARVAXMLMgt.Sent_InsertService(lEAIPartner, lService, lXMLNewChild3);
      //Partenaire
      DARVAXMLMgt.Sent_InsertPartners(lEAIPartner, lServiceHeader, lXMLNewChild3);
      EAIXMLDocMgt.AddElement(lXMLNewChild3,'ns:suiviDossierReparateurCommentaire','',lNameSpace,lXMLNewChild4);

      GetComment(lBigText,lServiceHeader);
      EAIXMLDocMgt.AddBigTextElement(lXMLNewChild4,'ns:commentaireLibre',lBigText,lNameSpace,lXMLNewChild5);

      CLEAR(pEAISentMQBuffer."XML Source");
      pEAISentMQBuffer."XML Source".CREATEINSTREAM(lInStream);
      //lXMLDocument.load(lInStream);
      lXMLDocument.save(lInStream);

      //IF NASHandler.IsDebug THEN
      //  lXMLDocument.save(TEMPORARYPATH + 'EnvoiSDR99_1.xml'); // pour test
      //              lXMLDocument.save('\\imha.local\imha\Support$\Navision\test99.xml');
      //Enregistrement dans la table "‚criture document EDI"
      lEAIDocEntryMgt.AddEntryFromSentBuffer(DATABASE::"Service Header",
             lServiceHeader."Document Type", lServiceHeader."No.", '', 0, pEAISentMQBuffer);
    END;

    PROCEDURE AddAttachment@1000000000(pAttachNo@1000000003 : Integer;VAR pBigText@1000000005 : BigText);
    VAR
      lAttachment@1000000004 : Record 5062;
      lEAISentMQBuffer@1000000006 : TEMPORARY Record 8016720;
      lToolsMgt@1000000002 : Codeunit 8016602;
      lOutStream@1000000001 : OutStream;
      lInStreamToAdd@1000000000 : InStream;
      lText@1100281000 : Text[1024];
      lLength@1000000007 : Integer;
    BEGIN
      // IMH03.PC
      IF pAttachNo = 0 THEN BEGIN
        EXIT;
      END;
      IF NOT lAttachment.GET(pAttachNo) THEN BEGIN
        EXIT;
      END;
      lAttachment.CALCFIELDS(Attachment);
      IF NOT lAttachment.Attachment.HASVALUE THEN BEGIN
        EXIT;
      END;

      lAttachment.Attachment.CREATEINSTREAM(lInStreamToAdd);
      lEAISentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);
      lToolsMgt.EncodeBase64(lInStreamToAdd,lOutStream);
      lEAISentMQBuffer.CALCFIELDS("XML Source");
      lEAISentMQBuffer."XML Source".CREATEINSTREAM(lInStreamToAdd);
      WHILE NOT lInStreamToAdd.EOS DO BEGIN
        lText := '';
        IF lInStreamToAdd.READ(lText) <> 0 THEN BEGIN
          pBigText.ADDTEXT(lText);
        END;
      END;
      lLength := pBigText.LENGTH;
      lAttachment.DELETE;
    END;

    PROCEDURE GetComment@1100281001(VAR pBigText@1100281000 : BigText;VAR ServiceHeader@1100281003 : Record 5900);
    VAR
      lInterv@1100281002 : Record 50075;
      lInterfaceSetup@1000000001 : Record 50139;
      lProvider@1100281005 : Record 50000;
      lEAISetup@1000000000 : Record 8016700;
      lDARVAMgt@1100281004 : Codeunit 50150;
      lLineNo@1100281007 : Integer;
    BEGIN
      lEAISetup.GET;
      lInterfaceSetup.GET;

      lInterv.SETRANGE("Service Header No.",ServiceHeader."No.");
      lInterv.SETFILTER("Intervention Status",'<>%1',lInterv."Intervention Status"::Cancel);
      IF lInterv.ISEMPTY THEN
        EXIT;

      pBigText.ADDTEXT(Text007);
      pBigText.ADDTEXT(Text006);

      lInterv.FINDSET;
      REPEAT
        lProvider.GET(lInterv."Provider No.");
        lInterv.CALCFIELDS("Building Trade Description");
        pBigText.ADDTEXT(
          STRSUBSTNO(
            Text005,
            lProvider.Name,
            //<<IMH05.PC
            //lDARVAMgt.GetDarvaCorporateNo(
            //  ServiceHeader."Corporate No.",
            //  ServiceHeader."Corporate Region Code",
            //  lProvider."No.",
            //  lInterfaceSetup."DARVA EAI Partner Code",
            //  (ServiceHeader."Corporate No." = lEAISetup."MACIF Customer No.")),
            GetAgreement(ServiceHeader,lInterv),
            //>>IMH05.PC
            lInterv."Building Trade Description"));
      UNTIL lInterv.NEXT = 0;
    END;

    LOCAL PROCEDURE GetAgreement@1100281003(pServiceHeader@1000000000 : Record 5900;pIntervention@1000000001 : Record 50075) : Code[10];
    VAR
      lProviderAgreement@1100281000 : Record 50012;
      lCorporateRegion@1100281001 : Record 50058;
    BEGIN
      //IMH07
      lProviderAgreement.SETCURRENTKEY("Detail Corporate No.","Detail Corporate Region Code");
      lProviderAgreement.SETRANGE("Detail Corporate No.",pServiceHeader."Corporate No.");
      lProviderAgreement.SETRANGE("Detail Corporate Region Code",pServiceHeader."Corporate Region Code");
      lProviderAgreement.SETRANGE("Provider No.",pIntervention."Provider No.");
      IF lProviderAgreement.ISEMPTY THEN BEGIN
        lProviderAgreement.SETRANGE("Detail Corporate Region Code");
      END;
      IF NOT lProviderAgreement.ISEMPTY THEN BEGIN
        IF lProviderAgreement.FINDFIRST THEN BEGIN
          EXIT(lProviderAgreement."Agreement No.");
        END;
      END ELSE BEGIN
        lCorporateRegion.SETRANGE("Corporate No.",pServiceHeader."Corporate No.");
        lCorporateRegion.SETRANGE("Region Code",pServiceHeader."Corporate Region Code");
        IF lCorporateRegion.COUNT = 1 THEN BEGIN
          lCorporateRegion.FINDFIRST;
          EXIT(lCorporateRegion."SDR64 Provider No.");
        END;
      END;
    END;

    BEGIN
    {
      /** @r IMH05 @d 11/06/12 @a ISAT.PC @v IMH6.01.134 @s DARVA Management @h 3574 @c Ajout fonction GetAgreement */
      /** @r IMH04 @d 06/01/12 @a ISAT.PC @v IMH6.01.0134 @s DARVA Management @h mantis 2610 @c Evolution SDR99 pour MACIF */
      /** @r IMH03 @d 09/11/11 @a ISAT.PC @v IMH6.01.0134 @s DARVA Management @c Gestion des piŠces jointes AGPM */
      /** @r IMH02 @d 15/09/11 @a ISAT.ZW @v IMH6.01.0134 @s DARVA Management
          @c SDR99 : Soumettre Suivi Dossier Reparateur Commentaire Demande */
      /** @r IMH01 @d 13/07/11 @a ISAT.MA @v IMH6.01.0134 @s DARVA Management @s Cr‚ation */
    }
    END.
  }
}