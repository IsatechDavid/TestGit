OBJECT Codeunit 50218 EDM Rcvd. Ack. Val. Act.
{
  OBJECT-PROPERTIES
  {
    Date=20/09/12;
    Time=12:00:00;
    Modified=Yes;
    Version List=IMH6.01,GED;
  }
  PROPERTIES
  {
    TableNo=8016721;
    OnRun=VAR
            lEAIReceiveMQBuffer@1100281000 : TEMPORARY Record 8016721;
          BEGIN
            lEAIReceiveMQBuffer := Rec;
            Code(lEAIReceiveMQBuffer);
            lEAIReceiveMQBuffer.CALCFIELDS("XML Source");
            "XML Source" := lEAIReceiveMQBuffer."XML Source";
            Rec := lEAIReceiveMQBuffer;
          END;

  }
  CODE
  {
    VAR
      InterfaceSetup@1100281001 : Record 50139;
      NASHandler@1100281000 : Codeunit 8016720;
      EAIExchangeTypeMgt@1100281002 : Codeunit 8016712;
      EDMManagement@1100281003 : Codeunit 50214;
      EAIXMLDocMgt@1100281004 : Codeunit 8016713;

    PROCEDURE Code@1100281000(VAR pEAIReceiveMQBuffer@1100281000 : Record 8016721);
    VAR
      lExchangeType@1100281017 : Record 8016717;
      lReturnExchangeType@1100281016 : Record 8016719;
      lDocumentAttachement@1100281020 : Record 50021;
      lEAIMQBufferMgt@1100281001 : Codeunit 8016708;
      lwinHTTPService@1100281014 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXMLDocument@1100281015 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      lInStream@1100281007 : InStream;
      Error001@1100281018 : TextConst 'ENU=No %1 found.;FRA=Aucun %1 trouv‚.';
      lOutStream@1100281002 : OutStream;
      lPath@1100281025 : Text[1024];
      lText@1100281026 : Text[1024];
    BEGIN
      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      IF NOT EAIExchangeTypeMgt.GetExchangeTypePerReceiveMQ(pEAIReceiveMQBuffer,lReturnExchangeType) THEN BEGIN
        ERROR(Error001,lReturnExchangeType.TABLECAPTION);
      END;
      lExchangeType.GET(lExchangeType.Type::Inbound,lReturnExchangeType."EAI Exchange Type Code");

      InterfaceSetup.GET;
      lwinHTTPService.Open('POST',lExchangeType."Ingoing Queue Label",0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=utf-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','http://tempuri.org/IGedService/IntegrationEffectueesAValider');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      CREATE(lXMLDocument);
      pEAIReceiveMQBuffer.CALCFIELDS("XML Source");
      pEAIReceiveMQBuffer."XML Source".CREATEINSTREAM(lInStream);
      lXMLDocument.load(lInStream);
      lwinHTTPService.Send(lXMLDocument);
      CLEAR(lInStream);
      CLEAR(lXMLDocument);

      IF NOT lwinHTTPService.WaitForResponse(60) THEN BEGIN
        ERROR('Request timed out.');
      END;

      IF lwinHTTPService.Status = 200 THEN BEGIN
        CLEAR(lXMLDocument);
        CREATE(lXMLDocument);
        lXMLDocument.load(lwinHTTPService.ResponseStream);

        IF NASHandler.IsDebug THEN BEGIN
          lPath := NASHandler.GetDebugPath;

          lText :=
            lPath + 'IntEfAVal_EnvoiGEDAck_' +
            FORMAT(CURRENTDATETIME,0,'<Day,2>-<Month,2>-<Year>-<Hours24>-<Minutes,2>') + '.xml'; // pour test

          lXMLDocument.save(lText);
        END;
        EDMManagement.CreateReceiptMQAckResponse(lXMLDocument);
      END ELSE BEGIN
        CLEAR(lXMLDocument);
        CREATE(lXMLDocument);
        lXMLDocument.load(lwinHTTPService.ResponseStream);
        CLEAR(pEAIReceiveMQBuffer."Response XML Source");
        pEAIReceiveMQBuffer."Response XML Source".CREATEOUTSTREAM(lOutStream);
        lXMLDocument.save(lOutStream);
        lEAIMQBufferMgt.TransferRcvdMQBufferToRcvdMQ(pEAIReceiveMQBuffer);
        COMMIT;
        ERROR(lwinHTTPService.StatusText);
      END;
    END;

    BEGIN
    {
      /** @r IMH01 @d 16/07/12 @a ISAT.PC @v IMH6.01.P006 @s Interface GED @c cr‚ation */
      /** @r IMH01 @d 18/07/12 @a ISAT.RC @v IMH6.01.P006 @s Interface GED @c cr‚ation */
    }
    END.
  }
}