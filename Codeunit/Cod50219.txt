OBJECT Codeunit 50219 EDM Decode Ack. Response
{
  OBJECT-PROPERTIES
  {
    Date=25/04/14;
    Time=12:31:30;
    Modified=Yes;
    Version List=IMH6.01,GED;
  }
  PROPERTIES
  {
    TableNo=8016721;
    OnRun=VAR
            lEAIRcvdMQBuffer@1100281000 : TEMPORARY Record 8016721;
          BEGIN
            lEAIRcvdMQBuffer.COPY(Rec,TRUE);
            Rec.CALCFIELDS("XML Source");
            lEAIRcvdMQBuffer."XML Source" := "XML Source";
            Code(lEAIRcvdMQBuffer);
            COPY(lEAIRcvdMQBuffer,TRUE);
          END;

  }
  CODE
  {

    PROCEDURE Code@1100281000(VAR pEAIRcvdMQBuffer@1100281000 : Record 8016721);
    VAR
      lEDMDocAttachementBuffer@1100281007 : TEMPORARY Record 50182;
      lEDMDocAttachement@1100281002 : Record 50182;
      lEAIAct@1000000002 : Record 8016706;
      lEAIDocEntryMgt@1000000000 : Codeunit 8016707;
      lXMLNodeList@1100281003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
      lXmlDomElement@1100281005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      lXmlDom@1000000003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lInStream@1100281001 : InStream;
      i@1000000005 : Integer;
    BEGIN
      pEAIRcvdMQBuffer.CALCFIELDS("XML Source");
      pEAIRcvdMQBuffer."XML Source".CREATEINSTREAM(lInStream);
      CREATE(lXmlDom);
      lXmlDom.load(lInStream);

      lXMLNodeList := lXmlDom.getElementsByTagName('a:AccuseIntegrationFichier');
      IF lXMLNodeList.length = 0 THEN BEGIN
        EXIT;
      END;

      FOR i := 0 TO lXMLNodeList.length() - 1 DO BEGIN
        CLEAR(lXmlDomElement);
        lXmlDomElement := lXMLNodeList.item(i);
        IF DecodeAckResponse(lXmlDomElement,lEDMDocAttachementBuffer) THEN BEGIN
        END;
      END;
      lEDMDocAttachementBuffer.RESET;
      IF lEDMDocAttachementBuffer.FINDSET THEN BEGIN
        REPEAT
          IF lEDMDocAttachement.GET(
               lEDMDocAttachementBuffer."Referent Table No.",
               lEDMDocAttachementBuffer."Key Integer 1",
               lEDMDocAttachementBuffer."Key Integer 2",
               lEDMDocAttachementBuffer."Key Code 1",
               lEDMDocAttachementBuffer."Key Code 2",
               lEDMDocAttachementBuffer."Entry No.")
          THEN BEGIN
            lEDMDocAttachement."EDM ID" := lEDMDocAttachementBuffer."EDM ID";
            lEDMDocAttachement."Acknowledge Date" := lEDMDocAttachementBuffer."Acknowledge Date";
            lEDMDocAttachement.Acknowledge := TRUE;
            lEDMDocAttachement.MODIFY;
          END;
        UNTIL lEDMDocAttachementBuffer.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE DecodeAckResponse@1000000000(VAR pXmlDomElement@1100281017 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";VAR pEDMDocAttachementBuffer@1100281003 : TEMPORARY Record 50182) rValue : Boolean;
    VAR
      lToolsManagement@1100281000 : Codeunit 8016602;
      lXMLNodeList@1000000005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
      lXMLNodeList2@1000000001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
      lXMLNodeList3@1000000003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
      lXmlDomElement@1000000010 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      lXmlDomElement2@1000000007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      lXmlDomElement3@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      lXmlDomElement4@1000000004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      lFilterArray@1100281014 : ARRAY [6] OF Code[50];
      lFilterLevel@1100281015 : Integer;
      i@1000000006 : Integer;
      j@1000000002 : Integer;
      k@1000000008 : Integer;
      lErreurIntegration@1100281018 : Boolean;
      lCheckNodeValue@1100281002 : Text[1024];
      lCheckNodeText@1100281016 : Text[1024];
      lIntegrationDate@1100281021 : Text[250];
      lEDMID@1100281020 : Text[250];
      lAcknowledgementDate@1100281019 : DateTime;
    BEGIN
      rValue := FALSE;

      CLEAR(pEDMDocAttachementBuffer);
      lXMLNodeList := pXmlDomElement.childNodes;
      FOR i := 0 TO lXMLNodeList.length - 1 DO BEGIN
        lXmlDomElement2 := lXMLNodeList.item(i);
        lCheckNodeValue := lXmlDomElement2.nodeName;
        lCheckNodeText := lXmlDomElement2.text;
        CASE lXmlDomElement2.nodeName OF
          'a:ErreurInt‚gration' : BEGIN
            lErreurIntegration := lToolsManagement.TextToBoolean2(lXmlDomElement2.text);
            IF lErreurIntegration THEN BEGIN
            // TODO : Gestion de l'erreur
              EXIT;
            END;
          END;
          'a:horodatageInt‚gration' : lAcknowledgementDate := lToolsManagement.TextToDateTime2(lXmlDomElement2.text);
          'a:identifiantDocumentGed' : BEGIN
            lXMLNodeList2 := lXmlDomElement2.childNodes;
            FOR j := 0 TO lXMLNodeList2.length - 1 DO BEGIN
              lXmlDomElement3 := lXMLNodeList2.item(j);
              lCheckNodeValue := lXmlDomElement3.nodeName;
              lCheckNodeText := lXmlDomElement3.text;
              CASE lXmlDomElement3.nodeName OF
                'a:identifiantDocument' : lEDMID := lXmlDomElement3.text;
              END;
            END;
          END;
          'a:m‚taDonn‚es' : BEGIN
            lXMLNodeList2 := lXmlDomElement2.childNodes;
            FOR j := 0 TO lXMLNodeList2.length - 1 DO BEGIN
              lXmlDomElement3 := lXMLNodeList2.item(j);
              lCheckNodeValue := lXmlDomElement3.nodeName;
              lCheckNodeText := lXmlDomElement3.text;
              lXMLNodeList3 := lXmlDomElement3.childNodes;
              FOR k := 0 TO lXMLNodeList3.length - 1 DO BEGIN
                lXmlDomElement4 := lXMLNodeList3.item(k);
                lCheckNodeValue := lXmlDomElement4.nodeName;
                lCheckNodeText := lXmlDomElement4.text;
                CASE lXmlDomElement4.nodeName OF
                  'a:Cl‚' : BEGIN
                    lFilterLevel := 0;
                    CASE FORMAT(lXmlDomElement4.text) OF
                      'Referente Table No.' : lFilterLevel := 1;
                      'Key Integer 1' : lFilterLevel := 2;
                      'Key Integer 2' : lFilterLevel := 3;
                      'Key Code 1' : lFilterLevel := 4;
                      'Key Code 2' : lFilterLevel := 5;
                      'Entry No.' : lFilterLevel := 6;
                    END;
                  END;
                  'a:Valeur' : lFilterArray[lFilterLevel] := FORMAT(lXmlDomElement4.text);
                END;
              END;
            END;
          END;
        END;
      END;

      IF (lFilterArray[1] = '') OR
         ((lFilterArray[2] = '') AND (lFilterArray[3] = '') AND
          (lFilterArray[4] = '') AND (lFilterArray[5] = '') OR
          (lFilterArray[6] = ''))
      THEN BEGIN
        EXIT;
      END;

      WITH pEDMDocAttachementBuffer DO BEGIN
        INIT;
        EVALUATE("Referent Table No.",lFilterArray[1]);
        IF lFilterArray[2] <> '' THEN BEGIN
          EVALUATE("Key Integer 1",lFilterArray[2]);
        END;
        IF lFilterArray[3] <> '' THEN BEGIN
          EVALUATE("Key Integer 2",lFilterArray[3]);
        END;
        EVALUATE("Key Code 1",lFilterArray[4]);
        EVALUATE("Key Code 2",lFilterArray[5]);
        EVALUATE("Entry No.",lFilterArray[6]);
        "EDM ID" := lEDMID;
        "Acknowledge Date" := lAcknowledgementDate;
        IF "Acknowledge Date" = 0DT THEN BEGIN
          "Acknowledge Date" := CURRENTDATETIME;
        END;
        IF NOT INSERT THEN BEGIN
          MODIFY;
        END;
      END;

      rValue := TRUE;
    END;

    BEGIN
    {
      /** @r IMH01 @d 25/07/12 @a ISAT.RC @v IMH6.01.P006 @s Interface GED @c cr‚ation */
    }
    END.
  }
}