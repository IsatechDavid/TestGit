OBJECT Codeunit 50246 DARVA Sent SDR64 Matmut
{
  OBJECT-PROPERTIES
  {
    Date=20/03/14;
    Time=16:41:20;
    Modified=Yes;
    Version List=IMH6.01,MATMUT01;
  }
  PROPERTIES
  {
    TableNo=8016720;
    OnRun=VAR
            lEAISentMQBuffer@1100281000 : TEMPORARY Record 8016720;
          BEGIN
            lEAISentMQBuffer := Rec;
            Code(lEAISentMQBuffer);
            lEAISentMQBuffer.CALCFIELDS("XML Source");
            Rec := lEAISentMQBuffer;
            "XML Source" := lEAISentMQBuffer."XML Source";
          END;

  }
  CODE
  {
    VAR
      EAIXMLDocMgt@1100281003 : Codeunit 8016713;
      DARVAXMLMgt@1100281009 : Codeunit 50252;
      DARVAMgt@1100281001 : Codeunit 50150;
      Text001@1000000000 : TextConst 'ENU=All interventions are cancelled;FRA=Toutes les lignes d''intervention ont ‚t‚ annul‚es';
      Text002@1100281000 : TextConst 'ENU=Remplace and cancel mission about society(ies);FRA=Annule et remplace les missions des entreprises :';
      Text013@1000000001 : TextConst 'ENU=Service header has been created defore 01/01/12 - Use DARVA site.;FRA=Ligne produit cr‚‚ avant le 01/01/2012 - Utiliser le lien URL Darva';
      Error001@1000000002 : TextConst 'ENU=No %1 found.;FRA=Aucun %1 trouv‚.';
      Text003@1000000003 : TextConst 'ENU="Remplace and cancel mission about society ";FRA="Annule et remplace la mission de l''entreprise "';

    PROCEDURE Code@1100281005(VAR pEAISentMQBuffer@1100281000 : Record 8016720);
    VAR
      lEAIPartner@1100281003 : Record 8016707;
      lServiceInterventionLine@1000000001 : Record 50075;
      lService@1100281018 : Record 50066;
      lServiceHeader@1100281016 : Record 5900;
      lProvider@1100281030 : Record 50000;
      lEAIDocEntryMgt@1100281002 : Codeunit 8016707;
      lXMLDocument@1100281001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      lLevel0@1100281004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lLevel1@1100281007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lLevel2@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lLevel3@1100281009 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lLevel4@1100281012 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lLevel5@1100281013 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lLevel6@1100281021 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lRecRef@1100281017 : RecordRef;
      lInStream@1100281005 : InStream;
      lNameSpace@1100281006 : Text[250];
      lTextBuffer@1100281010 : Text[50];
      lTextBufferComment@1100281011 : Text[770];
      lAgreementCode@1100281022 : Code[10];
      lSchURL@1000000002 : Text[150];
      lNsURL@1000000000 : Text[150];
    BEGIN
      CLEAR(lXMLDocument);
      CREATE(lXMLDocument);

      lEAIPartner.GET(pEAISentMQBuffer."EAI Partner Code");
      lRecRef.GETTABLE(lServiceInterventionLine);
      lRecRef.GET(pEAISentMQBuffer.RecordId);
      lRecRef.SETTABLE(lServiceInterventionLine);
      lService.GET(lServiceInterventionLine."Service No.");
      lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,lServiceInterventionLine."Service Header No.");
      lProvider.GET(lServiceInterventionLine."Provider No.");

      IF DT2DATE(lServiceHeader."Creation Date") < 010112D THEN BEGIN
        ERROR(Text013);
      END;

      lXMLDocument.async := FALSE;
      //<<IMH01.ACO
      //lSchURL := 'http://www.darva.com/ws/ird/reparateur/v1/schema';
      //lNsURL := 'http://www.darva.com/ws/datatype/v1';
      pEAISentMQBuffer.GetNamespaceFromExchangeType(lSchURL,lNsURL);
      DARVAXMLMgt.SetSendURL(lSchURL,lNsURL);
      //>>IMH01.ACO

      DARVAXMLMgt.SetType(1);
      lXMLDocument.setProperty('SelectionNamespaces', DARVAXMLMgt.GetSelectionNameSpace);
      //<<IMH01.ACO
      //DARVAXMLMgt.CreateWSHeader(lXMLDocument,lLevel0,lEAIPartner.Username,lEAIPartner.Password);
      DARVAXMLMgt.CreateWSHeader(lXMLDocument,lLevel0,lEAIPartner.Username,lEAIPartner.Password, lSchURL, lNsURL);
      //>>IMH01.ACO
      WITH EAIXMLDocMgt DO BEGIN
        lNameSpace := DARVAXMLMgt.GetNameSpace(1);
        AddElement(lLevel0,'sch:SoumettreSuiviDossierReparateurDesignationPrestataireDemande','',lNameSpace,lLevel1);
        DARVAXMLMgt.Sent_InsertContext(lEAIPartner,lLevel1);
        DARVAXMLMgt.Sent_InsertService(lEAIPartner,lService,lLevel1);
        DARVAXMLMgt.Sent_InsertPartners(lEAIPartner,lServiceHeader,lLevel1);
        lNameSpace := DARVAXMLMgt.GetNameSpace(2);
        AddElement(lLevel1,'ns:suiviDossierReparateurDesignationPrestataire','',lNameSpace,lLevel2);
        AddElement(lLevel2,'ns:prestataires','',lNameSpace,lLevel3);
        AddElement(lLevel3,'ns:prestataire','',lNameSpace,lLevel4);
        lProvider.GET(lServiceInterventionLine."Provider No.");
        //<<IMH04.ACO
        {AddElement(
          lLevel4,
          'ns:codeEntrepriseAgreee',
          COPYSTR(GetAgreement(lServiceHeader,lServiceInterventionLine),1,7),
          lNameSpace,
          lLevel5);}
        AddElement(
          lLevel4,
          'ns:codeEntrepriseAgreee',
          COPYSTR(lProvider.GetMatmutAgreement(lServiceHeader,lServiceInterventionLine),1,7),
          lNameSpace,
          lLevel5);

        //>>IMH04.ACO
        //<<IMH01.ACO
        AddElement(
          lLevel4,
          'ns:codeEntrepriseAgreeePlateforme',
          COPYSTR(lProvider."No.",1,35),
          lNameSpace,
          lLevel5);
        //>>IMH01.ACO
        AddElement(lLevel4,'ns:referenceMission',COPYSTR(lServiceHeader."No.",1,35),lNameSpace,lLevel5);
        AddElement(lLevel4,'ns:nomPrenom',ReplaceSpecialChar(COPYSTR(lProvider.Name,1,32)),lNameSpace,lLevel5);
        AddElement(lLevel4,'ns:adresse','',lNameSpace,lLevel5);
        IF lProvider.Address <> '' THEN BEGIN
          AddElement(lLevel5,'ns:adresse1',ReplaceSpecialChar(COPYSTR(lProvider.Address,1,32)),lNameSpace,lLevel6);
        END;
        IF lProvider."Address 2" <> '' THEN BEGIN
          AddElement(lLevel5,'ns:adresse2',ReplaceSpecialChar(COPYSTR(lProvider."Address 2",1,32)),lNameSpace,lLevel6);
        END;
        AddElement(lLevel5,'ns:codePostal',COPYSTR(lProvider."Post Code",1,5),lNameSpace,lLevel6);
        AddElement(lLevel5,'ns:localite',ReplaceSpecialChar(COPYSTR(lProvider.City,1,26)),lNameSpace,lLevel6);
        lTextBuffer := GetProviderPhoneNo(lServiceInterventionLine."Provider No.");
        IF lTextBuffer <> '' THEN BEGIN
          AddElement(lLevel4,'ns:telephone',COPYSTR(DELCHR(lTextBuffer,'=',' '),1,10),lNameSpace,lLevel5);
        END;
        IF lProvider."E-Mail" <> '' THEN BEGIN
          AddElement(lLevel4,'ns:mail',COPYSTR(DeleteMailInvalidChar(lProvider."E-Mail"),1,32),lNameSpace,lLevel5);
        END;
      END;

      IF GetComments(pEAISentMQBuffer,lTextBufferComment) THEN BEGIN
        EAIXMLDocMgt.AddElement(lLevel2,'ns:commentaireLibre',lTextBufferComment,lNameSpace,lLevel3);
      END
      //<<IMH03.ACO
      //;
      ELSE
        EAIXMLDocMgt.AddElement(lLevel2,'ns:commentaireLibre',' ',lNameSpace,lLevel3);
      //>>IMH03.ACO

      CLEAR(pEAISentMQBuffer."XML Source");
      pEAISentMQBuffer."XML Source".CREATEINSTREAM(lInStream);
      lXMLDocument.save(lInStream);

      //Enregistrement dans la table "‚criture document EDI"
      lEAIDocEntryMgt.AddEntryFromSentBuffer(
        DATABASE::"Service Header",lServiceHeader."Document Type", lServiceHeader."No.", '', 0, pEAISentMQBuffer);
    END;

    LOCAL PROCEDURE GetAgreement@1100281003(pServiceHeader@1000000000 : Record 5900;pIntervention@1000000001 : Record 50075) : Code[10];
    VAR
      lProviderAgreement@1100281000 : Record 50012;
      lCorporateRegion@1100281001 : Record 50058;
    BEGIN
      //IMH07
      lProviderAgreement.SETCURRENTKEY("Detail Corporate No.","Detail Corporate Region Code");
      lProviderAgreement.SETRANGE("Detail Corporate No.",pServiceHeader."Corporate No.");
      lProviderAgreement.SETRANGE("Detail Corporate Region Code",pServiceHeader."Corporate Region Code");
      lProviderAgreement.SETRANGE("Provider No.",pIntervention."Provider No.");
      IF lProviderAgreement.ISEMPTY THEN BEGIN
        lProviderAgreement.SETRANGE("Detail Corporate Region Code");
      END;
      IF NOT lProviderAgreement.ISEMPTY THEN BEGIN
        IF lProviderAgreement.FINDFIRST THEN BEGIN
          EXIT(lProviderAgreement."Agreement No.");
        END;
      //<<IMH02.ACO
      END;
      //END ELSE BEGIN
      //  lCorporateRegion.SETRANGE("Corporate No.",pServiceHeader."Corporate No.");
      //  lCorporateRegion.SETRANGE("Region Code",pServiceHeader."Corporate Region Code");
      //  IF lCorporateRegion.COUNT = 1 THEN BEGIN
      //    lCorporateRegion.FINDFIRST;
      //    EXIT(lCorporateRegion."SDR64 Provider No.");
      //  END;
      //END;
      //EXIT('99999');
      EXIT('9999 9');
      //>>IMH02.ACO
    END;

    LOCAL PROCEDURE GetProviderPhoneNo@1100281004(pProviderNo@1100281001 : Code[20]) rValue : Text[30];
    VAR
      lProvider@1100281000 : Record 50000;
      lContact@1100281002 : Record 5050;
    BEGIN
      // IMH02.PC
      // Permet de r‚cup‚rer le premier nø de t‚l‚phone d'un prestataire

      rValue := '';

      IF NOT lProvider.GET(pProviderNo) THEN BEGIN
        EXIT;
      END;
      WITH lContact DO BEGIN
        IF GET(lProvider."Admin. Contact No.") THEN BEGIN
          IF "Phone No." <> '' THEN BEGIN
            rValue := "Phone No.";
          END;
          IF ("Mobile Phone No." <> '') AND (rValue = '') THEN BEGIN
            rValue := "Mobile Phone No.";
          END;
          IF ("Mobile Phone No. 2" <> '') AND (rValue = '') THEN BEGIN
            rValue := "Mobile Phone No. 2";
          END;
          IF ("Business Phone No." <> '') AND (rValue = '') THEN BEGIN
            rValue := "Business Phone No.";
          END;
          IF ("Constraint Phone No." <> '') AND (rValue = '') THEN BEGIN
            rValue := "Constraint Phone No.";
          END;
        END;
      END;
      IF rValue = '' THEN BEGIN
        WITH lProvider DO BEGIN
          IF "Phone No." <> '' THEN BEGIN
            rValue := "Phone No.";
          END;
          IF ("Mobile Phone No." <> '') AND (rValue = '') THEN BEGIN
            rValue := "Mobile Phone No.";
          END;
          IF ("Mobile Phone No. 2" <> '') AND (rValue = '') THEN BEGIN
            rValue := "Mobile Phone No. 2";
          END;
          IF ("Business Phone No." <> '') AND (rValue = '') THEN BEGIN
            rValue := "Business Phone No.";
          END;
          IF ("Constraint Phone No." <> '') AND (rValue = '') THEN BEGIN
            rValue := "Constraint Phone No.";
          END;
        END;
      END;
      rValue := DELCHR(rValue,'=',' ');
    END;

    LOCAL PROCEDURE GetComments@1100281013(VAR pEAISentMQBuffer@1100281000 : Record 8016720;VAR pValue@1100281014 : Text[770]) rValue : Boolean;
    VAR
      lServiceInterventionLine@1100281013 : Record 50075;
      lXmlDom@1100281004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lXmlNodeList@1100281006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
      lXmlNode@1100281005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      lXmlNode1@1100281009 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      lInStream@1100281003 : InStream;
      lLength@1100281007 : Integer;
      i@1100281008 : Integer;
      lServiceNo@1100281010 : Code[20];
      lServiceHeaderNo@1100281011 : Code[20];
      lIntervNo@1100281012 : Integer;
      lFirstTime@1100281001 : Boolean;
      lProviderToInsert@1100281002 : Text[250];
    BEGIN
      rValue := FALSE;
      pValue := '';

      pEAISentMQBuffer.CALCFIELDS("To Generate XML Source");
      IF NOT pEAISentMQBuffer."To Generate XML Source".HASVALUE THEN BEGIN
        EXIT;
      END;
      pEAISentMQBuffer."To Generate XML Source".CREATEINSTREAM(lInStream);
      CREATE(lXmlDom);
      lXmlDom.load(lInStream);
      lXmlNodeList := lXmlDom.getElementsByTagName('Interv');
      lLength := lXmlNodeList.length;
      IF lLength = 0 THEN BEGIN
        EXIT;
      END;

      lFirstTime := FALSE;
      FOR i := 1 TO lLength DO BEGIN
        lServiceNo := '';
        lServiceHeaderNo := '';
        lIntervNo := 0;
        lXmlNode := lXmlNodeList.item(i - 1);
        lXmlNode1 := lXmlNode.selectSingleNode('ServiceNo');
        IF NOT ISCLEAR(lXmlNode1) THEN BEGIN
          lServiceNo := lXmlNode1.text;
        END;
        lXmlNode1 := lXmlNode.selectSingleNode('ServiceHeaderNo');
        IF NOT ISCLEAR(lXmlNode1) THEN BEGIN
          lServiceHeaderNo := lXmlNode1.text;
        END;
        lXmlNode1 := lXmlNode.selectSingleNode('IntervNo');
        IF NOT ISCLEAR(lXmlNode1) THEN BEGIN
          EVALUATE(lIntervNo,lXmlNode1.text);
        END;
        IF lServiceInterventionLine.GET(lServiceHeaderNo,lIntervNo) THEN BEGIN
          lProviderToInsert :=
            STRSUBSTNO(
              '(%1 - %2)',
              lServiceInterventionLine."Provider No.",
              //<<IMH05
              //lServiceInterventionLine."Provider Name");
              ReplaceSpecialChar(lServiceInterventionLine."Provider Name"));
              //>>IMH05
          IF NOT lFirstTime THEN BEGIN
            lFirstTime := TRUE;
            //<<IMH03.ACO
            //pValue := Text002;
            IF lLength = 1 THEN
               pValue := Text003
            ELSE
               pValue := Text002;
            //>>IMH03.ACO
            IF STRLEN(pValue) + STRLEN(lProviderToInsert) <= 770 THEN BEGIN
              pValue += lProviderToInsert;
            END;
          END ELSE BEGIN
            IF STRLEN(pValue) + STRLEN(lProviderToInsert) + 3 <= 770 THEN BEGIN
              pValue += ' & ' + lProviderToInsert;
            END;
          END;
        END;
      END;

      rValue := TRUE;
    END;

    LOCAL PROCEDURE ReplaceSpecialChar@1100281001(pText@1100281000 : Text[80]) rValue : Text[80];
    BEGIN
      // IMH10.PC

      rValue := DARVAMgt.ReplaceSpecialChar(pText);
    END;

    LOCAL PROCEDURE DeleteMailInvalidChar@1100281000(pText@1100281000 : Text[250]) : Text[250];
    BEGIN
      //IMH12
      EXIT(DELCHR(pText,'=',' '));
    END;

    BEGIN
    {
      /** @r IMH05 @d 20/03/14 @a ISAT.ZW @v IMH6.01.4922 @h 4922 @s caractŠres sp‚ciaux @c Gestion sur commentaire */
      /** @r IMH04 @d 18/10/13 @a ISAT.ACO @v IMH6.01.348 @s DARVA MATMUT Lot 1 @h 4827
          @c Modification r‚cup‚ration agr‚‚ment MATMUT */
      /** @r IMH03 @d 10/10/13 @a ISAT.ACO @v IMH6.01.348 @h 4788 @s DARVA MATMUT Lot 1
          @c Commentaire "Annule et remplace" diff‚rents selon nombre d'entreprises
          @c Commentaire " " si pas d'intervention annul‚e li‚e */
      /** @r IMH02 @d 07/10/13 @a ISAT.ACO @v IMH6.01.348 @s DARVA MATMUT Lot 1 @h 4780
          @c Modification de la r‚cup‚ration de l'agr‚ment */
      /** @r IMH01 @d 02/10/13 @a ISAT.ACO @v IMH6.01.348 @h DARVA MATMUT Lot 1 @h 4751
          @c Renseignement des URL xmlns:sch et xmlns:ns de l'enveloppe SOAP selon le grand compte
          @c Ajout de la balise "codeEntrepriseAgreeePlateforme"
          @c DARVA XML Management pointe vers DARVA XML Management MATMUT */
      /** @r IMH00 @d 21/08/13 @a ISAT.ACO @v IMH6.01.348 @s DARVA MATMUT Lot 1 @s Cr‚ation */
    }
    END.
  }
}