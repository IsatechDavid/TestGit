OBJECT Codeunit 50252 DARVA XML Mgt MATMUT
{
  OBJECT-PROPERTIES
  {
    Date=06/12/13;
    Time=11:06:52;
    Modified=Yes;
    Version List=IMH6.01,MATMUT01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      InterfaceSetup@1100281001 : Record 50139;
      EAIXMLMgt@1100281000 : Codeunit 8016710;
      NS000Text@1100281005 : TextConst 'FRA=http://www.w3.org/2003/05/soap-envelope';
      NS001Text@1100281004 : TextConst 'FRA=http://www.darva.com/ws/ird/2010/11/schema';
      NS001bisText@1100281007 : TextConst 'FRA=http://www.darva.com/ws/ird/reparateur/2010/11/schema';
      NS002Text@1100281003 : TextConst 'FRA=http://www.darva.com/ws/datatype/2010/11';
      EncodingType@1100281002 : TextConst 'FRA="EncodingType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"""';
      NASHandler@1100281006 : Codeunit 8016720;
      NS000@1100281010 : Text[250];
      NS001@1100281008 : Text[250];
      NS002@1100281009 : Text[250];
      Text001@1100281011 : TextConst 'ENU=There is no node %1;FRA=Impossible de localiser le  noeud %1 (suppr. flux pour r‚g‚n‚ration DARVA).';
      InterfaceSetupOK@1100281012 : Boolean;
      TextError001@1100281013 : TextConst 'ENU=Any Darva version selected.;FRA=Aucune version de DARVA de s‚lectionn‚e';
      DARVAMgt@1000000000 : Codeunit 50150;
      SchURL@1000000001 : Text[150];
      NsURL@1000000002 : Text[150];
      Error002@1000000003 : TextConst 'ENU=No %1 found.;FRA=Aucun %1 trouv‚.';

    PROCEDURE SetType@1100281008(pType@1100281000 : ' ,Send,Receive');
    BEGIN
      CASE pType OF
        pType::Send :
        BEGIN
          NS000 := NS000Text;
          NS001 := SchURL; //xmlns:sch d‚pend du WS
          NS002 := NsURL; //xmlns:ns d‚pend du WS
        END;
        pType::Receive :
        BEGIN
          NS000 := NS000Text;
          NS001 := NS001Text;
          NS002 := NS002Text;
        END;
      END;
    END;

    PROCEDURE GetNameSpace@1100281006(pWhich@1100281000 : Integer) : Text[1024];
    BEGIN
      CASE pWhich OF
        0 : EXIT(NS000);
        1 : EXIT(NS001);
        2 : EXIT(NS002);
      END;
    END;

    PROCEDURE GetSelectionNameSpace@1100281003() : Text[1024];
    BEGIN
      EXIT(STRSUBSTNO('xmlns:soap="%1" xmlns:sch="%2" xmlns:ns="%3"',NS000,NS001,NS002))
    END;

    PROCEDURE Sent_InsertContext@1100281000(pPartner@1100281000 : Record 8016707;VAR pXMLNode@1100281007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode");
    VAR
      lXMLNewChild1@1100281005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild2@1100281004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild3@1100281003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      GetInterfaceSetup;

      WITH EAIXMLMgt DO BEGIN
        AddElement(pXMLNode,'ns:contexteDemande','',NS002,lXMLNewChild1);
        AddAttribute(lXMLNewChild1,'ctxVersion','01.00');
        AddElement(lXMLNewChild1,'ns:base',pPartner.Base,NS002,lXMLNewChild2);
        IF pPartner."Test Mode" THEN
          AddElement(lXMLNewChild1,'ns:modeTest','true',NS002,lXMLNewChild2)
        ELSE
          AddElement(lXMLNewChild1,'ns:modeTest','false',NS002,lXMLNewChild2);
        AddElement(lXMLNewChild1,'ns:norme','',NS002,lXMLNewChild2);
        AddElement(lXMLNewChild2,'ns:nom', pPartner."Norm Name",NS002,lXMLNewChild3);
      END;
    END;

    PROCEDURE Sent_InsertContextDRT@1000000005(pPartner@1100281000 : Record 8016707;VAR pXMLNode@1100281007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode");
    VAR
      lXMLNewChild1@1100281005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild2@1100281004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild3@1100281003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      GetInterfaceSetup;

      WITH EAIXMLMgt DO BEGIN
        AddElement(pXMLNode,'ns:contexteDemande','',NS002,lXMLNewChild1);
        AddElement(lXMLNewChild1,'ns:base',pPartner.Base,NS002,lXMLNewChild2);
        IF pPartner."Test Mode" THEN
          AddElement(lXMLNewChild1,'ns:modeTest','true',NS002,lXMLNewChild2)
        ELSE
          AddElement(lXMLNewChild1,'ns:modeTest','false',NS002,lXMLNewChild2);
        AddElement(lXMLNewChild1,'ns:norme','',NS002,lXMLNewChild2);
        AddElement(lXMLNewChild2,'ns:nom', pPartner."Norm Name",NS002,lXMLNewChild3);
        AddElement(lXMLNewChild2,'ns:version',pPartner."Norm Version",NS002,lXMLNewChild3);
      END;
    END;

    PROCEDURE Rcpt_InsertContext@1000000000(pPartner@1100281000 : Record 8016707;VAR pXMLNode@1100281007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode");
    VAR
      lXMLNewChild1@1100281005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild2@1100281004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild3@1100281003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
    BEGIN
      WITH EAIXMLMgt DO BEGIN
        pPartner.TESTFIELD("Norm Name");
        pPartner.TESTFIELD("Norm Version");
        AddElement(pXMLNode,'ns:contexteDemande','',NS002,lXMLNewChild1);
        AddElement(lXMLNewChild1,'ns:base',pPartner.Base,NS002,lXMLNewChild2);
        IF pPartner."Test Mode" THEN BEGIN
          AddElement(lXMLNewChild1,'ns:modeTest','true',NS002,lXMLNewChild2);
        END ELSE BEGIN
          AddElement(lXMLNewChild1,'ns:modeTest','false',NS002,lXMLNewChild2);
        END;
        AddElement(lXMLNewChild1,'ns:norme','',NS002,lXMLNewChild2);
        AddElement(lXMLNewChild2,'ns:nom',pPartner."Norm Name",NS002,lXMLNewChild3);
        AddElement(lXMLNewChild2,'ns:version',pPartner."Norm Version",NS002,lXMLNewChild3);
      END;
    END;

    PROCEDURE Sent_InsertService@1100281001(pPartner@1100281007 : Record 8016707;pService@1100281001 : Record 50066;VAR pXMLNode@1100281000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode");
    VAR
      lXMLNewChild1@1100281004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild2@1100281003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lEAIPartnerCrossRef@1100281005 : Record 8016748;
      lCorporateRegion@1100281002 : Record 50058;
      lCustomer@1100281008 : Record 18;
      lDarvaCorporateNo@1100281006 : Code[20];
      lCorporateNo@1100281009 : Code[20];
    BEGIN
      WITH EAIXMLMgt DO BEGIN
        AddElement(pXMLNode,'ns:dossier','',NS002,lXMLNewChild1);

        lEAIPartnerCrossRef."Table ID" := DATABASE::Customer;
        IF lCorporateRegion.GET(pService."Corporate No.",pService."Corporate Region Code")
         //<<IMH01.ACO
        AND (STRLEN(lCorporateRegion."Sell-to Customer No.") <= 4)
        //>>IMH01.ACO
          THEN
          lCorporateNo := lCorporateRegion."Sell-to Customer No."
        ELSE
          lCorporateNo := pService."Corporate No.";
        lEAIPartnerCrossRef."Source No." := lCorporateNo;
        lEAIPartnerCrossRef."Partner Code" := pPartner.Code;
        IF lEAIPartnerCrossRef.GetPartnerCrossRef THEN
          lDarvaCorporateNo := lEAIPartnerCrossRef."Partner Reference"
        ELSE
          lDarvaCorporateNo := lCorporateNo;
        AddElement(lXMLNewChild1,'ns:codeSocieteAssurance',lDarvaCorporateNo,NS002,lXMLNewChild2);
        // Optional
      //  AddElement(lXMLNewChild1,'ns:codeComplementaireSocieteAssurance','',NS001,lXMLNewChild2);
        IF pService."Corporate No." = 'MACIF' THEN BEGIN
          IF pService."Reference No." <> '' THEN BEGIN
            FormatStr(pService."Reference No.", '0', 17);
          END;
        END;
        AddElement(lXMLNewChild1,'ns:referenceSinistreAssureur',pService."Reference No.",NS002,lXMLNewChild2);
        // Optional
      //  AddElement(lXMLNewChild1,'ns:numeroMissionAssureur','',NS001,lXMLNewChild5);
      END; // WITH
    END;

    PROCEDURE Sent_InsertPartners@1100281002(pPartner@1100281002 : Record 8016707;pServHeader@1100281001 : Record 5900;VAR pXMLNode@1100281000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode");
    VAR
      lXMLNewChild1@1100281005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild2@1100281004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lCorporateRegion@1000000002 : Record 50058;
      lCorporate@1000000001 : Record 18;
      lToDest@1000000000 : Text[80];
    BEGIN
      //WITH EAIXMLMgt DO BEGIN
        //AddElement(pXMLNode,'ns:partenaires','',NS002,lXMLNewChild1);
      //  AddElement(lXMLNewChild1,'ns:numeroAbonneEmetteur',pPartner."Our Subscriber No.", NS001,lXMLNewChild2);
        //AddElement(lXMLNewChild1,'ns:numeroAbonneEmetteur',pServHeader."DARVA Recipient Subscriber No.", NS002,lXMLNewChild2);
        //AddElement(lXMLNewChild1,'ns:numeroAbonneDestinataire',pServHeader."DARVA Carrier Subscriber No.",NS002,lXMLNewChild2);
        //AddElement(lXMLNewChild1,'ns:numeroAbonneDestinataire',pPartner."Our Subscriber No.", NS001,lXMLNewChild2);
      //END; // WITH

      {// En ‚mission
      // de IMH REN vers MATMUT/AMF
      // destinaire de la DT vers Nø abonn‚e r‚gion grand compte
      WITH EAIXMLMgt DO BEGIN
        AddElement(pXMLNode,'ns:partenaires','',NS002,lXMLNewChild1);
        AddElement(lXMLNewChild1,'ns:numeroAbonneEmetteur',pServHeader."DARVA Recipient Subscriber No.", NS002,lXMLNewChild2);
        // Envoi … la r‚gion / corporate du service
        IF pServHeader."Corporate Region Code" <> '' THEN
          IF lCorporateRegion.GET(pServHeader."Corporate No.", pServHeader."Corporate Region Code") THEN
            lToDest := lCorporateRegion."DARVA Subscriber No.";
        IF lToDest = '' THEN BEGIN
          lCorporate.GET(pServHeader."Corporate No.");
          lCorporate.TESTFIELD("DARVA Subscriber No.");
          lToDest := lCorporate."DARVA Subscriber No.";
        END;
        AddElement(lXMLNewChild1,'ns:numeroAbonneDestinataire',lToDest, NS002,lXMLNewChild2);
      END;
      }

      WITH EAIXMLMgt DO BEGIN
        AddElement(pXMLNode,'ns:partenaires','',NS002,lXMLNewChild1);
        AddElement(lXMLNewChild1,'ns:numeroAbonneEmetteur',pServHeader."DARVA Recipient Subscriber No.", NS002,lXMLNewChild2);
        AddElement(lXMLNewChild1,'ns:numeroAbonneDestinataire',pServHeader."DARVA Carrier Subscriber No.",NS002,lXMLNewChild2);
      END; // WITH
    END;

    PROCEDURE Sent_InsertPartnersSDR99@1100281010(pPartner@1100281002 : Record 8016707;pServHeader@1100281001 : Record 5900;VAR pXMLNode@1100281000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode");
    VAR
      lXMLNewChild1@1100281005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild2@1100281004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lCorporateRegion@1000000002 : Record 50058;
      lCorporate@1000000001 : Record 18;
      lToDest@1000000000 : Text[80];
    BEGIN
      //WITH EAIXMLMgt DO BEGIN
      //  AddElement(pXMLNode,'ns:partenaires','',NS002,lXMLNewChild1);
      //  AddElement(lXMLNewChild1,'ns:numeroAbonneEmetteur',pServHeader."DARVA Recipient Subscriber No.", NS002,lXMLNewChild2);
      //  AddElement(lXMLNewChild1,'ns:numeroAbonneDestinataire',pDARVACarrierSubscriberNo,NS002,lXMLNewChild2);
      //END;

      // En ‚mission
      // de IMH REN vers MATMUT/AMF
      // destinaire de la DT vers Nø abonn‚e r‚gion grand compte
      WITH EAIXMLMgt DO BEGIN
        AddElement(pXMLNode,'ns:partenaires','',NS002,lXMLNewChild1);
        AddElement(lXMLNewChild1,'ns:numeroAbonneEmetteur',pServHeader."DARVA Recipient Subscriber No.", NS002,lXMLNewChild2);
        // Envoi … la r‚gion / corporate du service
        IF pServHeader."Corporate Region Code" <> '' THEN
          IF lCorporateRegion.GET(pServHeader."Corporate No.", pServHeader."Corporate Region Code") THEN
            lToDest := lCorporateRegion."DARVA Subscriber No.";
        IF lToDest = '' THEN BEGIN
          lCorporate.GET(pServHeader."Corporate No.");
          lCorporate.TESTFIELD("DARVA Subscriber No.");
          lToDest := lCorporate."DARVA Subscriber No.";
        END;
        AddElement(lXMLNewChild1,'ns:numeroAbonneDestinataire',lToDest, NS002,lXMLNewChild2);
      END;
    END;

    PROCEDURE Sent_InsertPartnersDRT@1100281011(pPartner@1100281002 : Record 8016707;pServHeader@1100281001 : Record 5900;VAR pXMLNode@1100281000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode");
    VAR
      lXMLNewChild1@1100281005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lXMLNewChild2@1100281004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lCorporateRegion@1100281006 : Record 50058;
      lCorporate@1100281008 : Record 18;
      lToDest@1100281007 : Text[80];
    BEGIN
      WITH EAIXMLMgt DO BEGIN
        AddElement(pXMLNode,'ns:partenaires','',NS002,lXMLNewChild1);
        AddElement(lXMLNewChild1,'ns:numeroAbonneEmetteur',pServHeader."DARVA Recipient Subscriber No.", NS002,lXMLNewChild2);
        // Envoi … la r‚gion / corporate du service
        IF pServHeader."Corporate Region Code" <> '' THEN
          IF lCorporateRegion.GET(pServHeader."Corporate No.", pServHeader."Corporate Region Code") THEN
            lToDest := lCorporateRegion."DARVA Subscriber No.";
        IF lToDest = '' THEN BEGIN
          lCorporate.GET(pServHeader."Corporate No.");
          lCorporate.TESTFIELD("DARVA Subscriber No.");
          lToDest := lCorporate."DARVA Subscriber No.";
        END;
        AddElement(lXMLNewChild1,'ns:numeroAbonneDestinataire',lToDest, NS002,lXMLNewChild2);
      END;
    END;

    PROCEDURE CreateWSHeader@1000000002(VAR pXmlDoc@1000000008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";VAR pSoapBodyNode@1000000007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";pUserName@1000000006 : Text[30];pPassword@1000000002 : Text[30];pSchURL@1000000001 : Text[150];pNsURL@1000000000 : Text[150]);
    VAR
      lTempBlob@1000000005 : Record 99008535;
      lInstream@1000000004 : InStream;
      lOutStream@1000000003 : OutStream;
      lXmlNodeList@1000000010 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
      lXmlDomElement@1000000009 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
    BEGIN
      //IMH02.ACO
      // Utilis‚ notamment par la MATMUT et AMF car demande une enveloppe soap avec moins de namespace
      //InterfaceSetup.GET;
      lTempBlob.Blob.CREATEOUTSTREAM(lOutStream);
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" ');
      //lOutStream.WRITETEXT('xmlns:sch="http://www.darva.com/ws/ird/2010/11/schema" ');

      //Namespace … inclure dans l'enveloppe Soap
      CreateXmlnsSoapEnvelop(lOutStream, pSchURL, pNsURL);

      //Soap Header
      CreateSoapHeader(lOutStream, pUserName, pPassword);

      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      lTempBlob.CALCFIELDS(Blob);
      lTempBlob.Blob.CREATEINSTREAM(lInstream);
      pXmlDoc.load(lInstream);
      lXmlNodeList := pXmlDoc.getElementsByTagName('soap:Envelope');
      lXmlDomElement := lXmlNodeList.item(0);
      pSoapBodyNode := lXmlDomElement.selectSingleNode('soap:Body');
    END;

    PROCEDURE CreateWSHeaderDRT@1100281007(VAR pXmlDoc@1000000008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";VAR pSoapBodyNode@1000000007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";pUserName@1000000006 : Text[30];pPassword@1000000002 : Text[30];pSchURL@1000000001 : Text[150];pNsURL@1000000000 : Text[150]);
    VAR
      lTempBlob@1000000005 : Record 99008535;
      lInstream@1000000004 : InStream;
      lOutStream@1000000003 : OutStream;
      lXmlNodeList@1000000010 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
      lXmlDomElement@1000000009 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
    BEGIN
      // IMH02.PC
      // Utilis‚ pour la cr‚ation de l'enveloppe SOAP de la DRT
      lTempBlob.Blob.CREATEOUTSTREAM(lOutStream);
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" ');
      lOutStream.WRITETEXT('xmlns:sch="' + pSchURL + '" ');
      lOutStream.WRITETEXT('xmlns:ns="' + pNsURL + '" ');
      lOutStream.WRITETEXT('xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"' + ' ');
      lOutStream.WRITETEXT('xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">');
      // Security Soap Header
      CreateSoapHeader(lOutStream, pUserName, pPassword);
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      lTempBlob.CALCFIELDS(Blob);
      lTempBlob.Blob.CREATEINSTREAM(lInstream);
      pXmlDoc.load(lInstream);
      lXmlNodeList := pXmlDoc.getElementsByTagName('soap:Envelope');
      lXmlDomElement := lXmlNodeList.item(0);
      pSoapBodyNode := lXmlDomElement.selectSingleNode('soap:Body');
    END;

    PROCEDURE CreateWSHeader2@1100281005(VAR pXmlDoc@1100281001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";VAR pSoapBodyNode@1100281000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode");
    VAR
      XMLDOM@1100281003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      XMLNode@1100281002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      locFile@1100281007 : File;
      locFile2@1100281006 : File;
      lXMLDoc@1100281009 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lXMLDoc2@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
    BEGIN
      {
      IF ISCLEAR(lConnector) THEN
        CREATE(lConnector);

      lConnector.Property('EndPointURL','https://services-vabf.darva.com/irdwssr/ws/');
      lConnector.Connect;
      lConnector.Property('AuthUser','30204wsip');
      lConnector.Property('AuthPassword','30204wsip');
      lConnector.Property('Timeout',300);
      //lConnector.Property('SoapAction','');
      lConnector.BeginMessage;

      IF ISCLEAR(lSerializer) THEN
        CREATE(lSerializer);

      lSerializer.Init(lConnector.InputStream);

      //lSerializer.StartEnvelope('','STANDARD','utf-8');
      lSerializer.StartEnvelope('None');
      lSerializer.SoapNamespace('sch', '"http://www.darva.com/ws/ird/2010/11/schema"');
      lSerializer.SoapNamespace('ns', '"http://www.darva.com/ws/datatype/2010/11"');
      lSerializer.SoapNamespace('soap','"http://www.w3.org/2003/05/soap-envelope"');

      lSerializer.StartBody('None');
      lSerializer.StartElement('ListerDocumentsDemande','sch');
        lSerializer.StartElement('ContexteDemande','ns'); // ctxVersion = 1.00
        lSerializer.SoapAttribute('ctxVersion', '','"01.00"');
          lSerializer.StartElement('environnement','ns');
            lSerializer.WriteString('VABF');
          lSerializer.EndElement();
          lSerializer.StartElement('base','ns');
            lSerializer.WriteString('TEST');
          lSerializer.EndElement();
          lSerializer.StartElement('modeTest','ns');
            lSerializer.WriteString('true');
          lSerializer.EndElement();
          lSerializer.StartElement('norme','ns');
            lSerializer.StartElement('nom','ns');
              lSerializer.WriteString('Ird2005');
            lSerializer.EndElement();
          lSerializer.EndElement();
        lSerializer.EndElement();
        lSerializer.StartElement('filtreDossier','ns');
        lSerializer.WriteString('');
        lSerializer.EndElement();
      lSerializer.EndElement();
      lSerializer.EndBody;
      lSerializer.EndEnvelope();
      //lSerializer.SoapFault()
      lConnector.EndMessage;

      locFile.CREATE(TEMPORARYPATH + 'TestSOAP.txt');
      locFile.OPEN(TEMPORARYPATH + 'TestSOAP.txt');
      locFile.WRITE(lConnector.OutputStream());
      locFile.CLOSE;

      locFile2.CREATE(TEMPORARYPATH + 'TestSOAP2.txt');
      locFile2.OPEN(TEMPORARYPATH + 'TestSOAP2.txt');
      locFile2.WRITE(lConnector.InputStream());
      locFile2.CLOSE;

      IF NASHandler.IsDebug THEN BEGIN
        CREATE(lXMLDoc);
        lXMLDoc.load(lConnector.OutputStream);
        lXMLDoc.save(TEMPORARYPATH + '\TestSOAP.xml');
        CREATE(lXMLDoc2);
        lXMLDoc2.load(lConnector.InputStream);
        lXMLDoc2.save(TEMPORARYPATH + '\TestSOAP2.xml');
      END;

      CLEAR(lConnector);
      }
    END;

    PROCEDURE CreateWSHeader3@1100281004();
    VAR
      XMLDOM@1100281003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      XMLNode@1100281002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      locFile@1100281005 : File;
      locFile2@1100281004 : File;
      lXMLDoc@1100281001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lXMLDoc2@1100281000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
    BEGIN
      //CreateWSHeader(pXmlDoc,pSoapBodyNode);
      //EXIT;
      {
      IF ISCLEAR(lConnector) THEN
        CREATE(lConnector);

      lConnector.Property('EndPointURL','https://services-vabf.darva.com/irdwssr/ws/');
      lConnector.Connect; //
      lConnector.Property('AuthUser','30204wrep');
      lConnector.Property('AuthPassword','30204wrep');

      lConnector.Property('Timeout',3 * 100);
      lConnector.Property('SoapAction','');
      lConnector.BeginMessage;

      IF ISCLEAR(lSerializer) THEN
        CREATE(lSerializer);

      lSerializer.Init(lConnector.InputStream);

      //lSerializer.StartEnvelope('','STANDARD','utf-8');
      lSerializer.StartEnvelope('','STANDARD','UTF-8');
      lSerializer.SoapNamespace('sch', '"http://www.darva.com/ws/ird/2010/11/schema"');
      lSerializer.SoapNamespace('ns', '"http://www.darva.com/ws/datatype/2010/11"');
      lSerializer.SoapNamespace('soap','"http://www.w3.org/2003/05/soap-envelope"');

      lSerializer.StartBody('None');
      lSerializer.StartElement('ListerDocumentsDemande','sch');
        lSerializer.StartElement('ContexteDemande','ns'); // ctxVersion = 1.00
        lSerializer.SoapAttribute('ctxVersion', '','"01.00"');
          lSerializer.StartElement('environnement','ns');
            lSerializer.WriteString('VABF');
          lSerializer.EndElement();
          lSerializer.StartElement('base','ns');
            lSerializer.WriteString('TEST');
          lSerializer.EndElement();
          lSerializer.StartElement('modeTest','ns');
            lSerializer.WriteString('true');
          lSerializer.EndElement();
          lSerializer.StartElement('norme','ns');
            lSerializer.StartElement('nom','ns');
              lSerializer.WriteString('Ird2005');
            lSerializer.EndElement();
          lSerializer.EndElement();
        lSerializer.EndElement();
        lSerializer.StartElement('filtreDossier','ns');
        lSerializer.WriteString('');
        lSerializer.EndElement();
      lSerializer.EndElement();
      lSerializer.EndBody;
      lSerializer.EndEnvelope();
      //lSerializer.SoapFault()
      lConnector.EndMessage;

      IF NASHandler.IsDebug THEN BEGIN
        locFile.CREATE(TEMPORARYPATH + 'TestSOAP.txt');
        locFile.OPEN(TEMPORARYPATH + 'TestSOAP.txt');
        locFile.WRITE(lConnector.OutputStream());
        locFile.CLOSE;

        locFile2.CREATE(TEMPORARYPATH + 'TestSOAP2.txt');
        locFile2.OPEN(TEMPORARYPATH + 'TestSOAP2.txt');
        locFile2.WRITE(lConnector.InputStream());
        locFile2.CLOSE;

        CREATE(lXMLDoc);
        lXMLDoc.load(lConnector.OutputStream);
        lXMLDoc.save(TEMPORARYPATH + '\TestSOAP.xml');

        CREATE(lXMLDoc2);
        lXMLDoc2.load(lConnector.InputStream);
        lXMLDoc2.save(TEMPORARYPATH + '\TestSOAP2.xml');
      END;

      CLEAR(lConnector);
      }
    END;

    PROCEDURE CreateSoapHeader@1000000004(VAR pOutStream@1000000000 : OutStream;pUserName@1000000002 : Text[30];pPassword@1000000001 : Text[30]);
    BEGIN
      pOutStream.WRITETEXT('<soap:Header>');
      pOutStream.WRITETEXT('<wsse:Security soap:mustUnderstand="true" ');
      pOutStream.WRITETEXT('xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">');
      pOutStream.WRITETEXT('<wsu:Timestamp wsu:Id="Timestamp-6" ');
      pOutStream.WRITETEXT('xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">');
      pOutStream.WRITETEXT('</wsu:Timestamp>');
      pOutStream.WRITETEXT('<wsse:UsernameToken wsu:Id="UsernameToken-5" ');
      pOutStream.WRITETEXT('xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">');
      pOutStream.WRITETEXT('<wsse:Username>' + pUserName + '</wsse:Username>');
      pOutStream.WRITETEXT('<wsse:Password ');
      pOutStream.WRITETEXT('Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">');
      pOutStream.WRITETEXT(pPassword);
      pOutStream.WRITETEXT('</wsse:Password>');
      pOutStream.WRITETEXT('<wsse:Nonce ' + EncodingType + '>' + 'BiN25uGYauHtGn1yzHmj8Q==</wsse:Nonce>');
      pOutStream.WRITETEXT('</wsse:UsernameToken>');
      pOutStream.WRITETEXT('</wsse:Security>');
      pOutStream.WRITETEXT('</soap:Header>');
    END;

    PROCEDURE CreateXmlnsSoapEnvelop@1000000009(VAR pOutStream@1000000002 : OutStream;pSchURL@1000000001 : Text[150];pNsURL@1000000000 : Text[150]);
    BEGIN
      pOutStream.WRITETEXT('xmlns:sch="'+pSchURL+'" ');
      pOutStream.WRITETEXT('xmlns:ns="'+pNsURL+'" ');

      pOutStream.WRITETEXT(' >');
    END;

    PROCEDURE Date2Text@1100281009(pDate@1100281000 : Date) : Text[30];
    BEGIN
      EXIT(FORMAT(pDate,0,'<Year4>-<Month,2>-<Day,2>'));
    END;

    PROCEDURE InitXMLDom@1100281014(pOldXMLDom@1100281000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";VAR pNewXMLDom@1100281001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument");
    VAR
      lAdoStream@1100281005 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000566-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Stream";
      lXmlNodeList@1100281006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
      lXMLDomNode@1100281007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      lInStream@1100281008 : InStream;
      lTempFile@1100281004 : File;
      lFileName@1100281003 : Text[250];
      lText@1000000000 : Text[150];
    BEGIN
      lXmlNodeList := pOldXMLDom.getElementsByTagName('ns2:formatXml');
      IF lXmlNodeList.length = 0 THEN BEGIN
        ERROR(Text001, 'ns2:formatXml');
      END;


      lXMLDomNode := lXmlNodeList.item(0);
      CLEAR(lAdoStream);
      CREATE(lAdoStream);
      lAdoStream.Open;
      lAdoStream.Charset('UTF-8');
      EAIXMLMgt.GetADOStreamNodeValue(lXMLDomNode,lAdoStream);
      lTempFile.CREATETEMPFILE;
      lFileName := lTempFile.NAME + '.xml';
      lAdoStream.SaveToFile(lFileName);
      lAdoStream.Close;
      lTempFile.CLOSE;
      lTempFile.OPEN(lFileName);
      lTempFile.CREATEINSTREAM(lInStream);

      CLEAR(pNewXMLDom);
      CREATE(pNewXMLDom);
      pNewXMLDom.load(lInStream);
      lTempFile.CLOSE;

      IF ERASE(lFileName) THEN;
    END;

    LOCAL PROCEDURE FormatStr@1100281012(VAR pText@1100281000 : Code[30];pAddRight@1100281001 : Text[1];pLen@1100281002 : Integer);
    BEGIN
      IF STRLEN(pText) >= pLen THEN
        EXIT;
      REPEAT
        pText := pAddRight + pText;
      UNTIL STRLEN(pText) = pLen;
    END;

    LOCAL PROCEDURE GetInterfaceSetup@1100281013();
    BEGIN
      IF InterfaceSetupOK THEN BEGIN
        EXIT;
      END;

      InterfaceSetup.GET;
      InterfaceSetupOK := TRUE;
    END;

    PROCEDURE GetDARVAGTACode@1000000001(XmlDom@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument") : Code[20];
    VAR
      lXmlDomElement@1100281001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      lXmlDomElement2@1100281000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
    BEGIN
      lXmlDomElement := XmlDom.getElementsByTagName('GR010101').item(0);
      lXmlDomElement2 := lXmlDomElement.selectSingleNode('SE0020101');
      // Code societ‚ assurance ou GTA
      EXIT(DARVAMgt.GetNodeValue(lXmlDomElement2,'DE00460101'));
    END;

    PROCEDURE SetSendURL@1000000003(pSchURL@1000000000 : Text[150];pNsURL@1000000001 : Text[150]);
    BEGIN
      SchURL := pSchURL;
      NsURL := pNsURL;
    END;

    BEGIN
    {
      /** @r IMH02 @d 25/10/13 @a ISAT.PC @v IMH6.01.348 @s DARVA MATMUT Lot 1 @h xxxx
          @c Ajout fonction Sent_InsertContextDRT
          @c ajout fonction CreateWSHeaderDRT */
      /** @r IMH01 @d 03/10/13 @a ISAT.ACO @v IMH6.01.348 @s DARVA MATMUT Lot 1 @h 4752
          @c longueur du champ codeSoci‚t‚Assurance ne doit pas exc‚der 4 caractŠres */
      /** @r IMH00 @d 03/10/13 @a ISAT.ACO @v IMH6.01.348 @s DARVA MATMUT Lot 1
          @c Cr‚ation depuis codunit 50154 DARVA XML Management
          @c balise environnement de l'entˆte ne doit pas ˆtre pr‚sente
          @c balise version de l'en-tˆte est facultative
          @c Enveloppe SOAP diffŠre selon URL WS r‚parateur
          @c Partenaires en ‚mission */
    }
    END.
  }
}