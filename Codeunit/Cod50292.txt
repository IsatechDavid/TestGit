OBJECT Codeunit 50292 WS Test
{
  OBJECT-PROPERTIES
  {
    Date=05/10/12;
    Time=14:12:49;
    Modified=Yes;
    Version List=Test accent;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      InterfaceSetup@1100281001 : Record 50139;
      DARVAMgt@1000000036 : Codeunit 50150;
      EAIXmlDocMgt@1000000043 : Codeunit 8016713;
      ToolsMgt@1100281002 : Codeunit 8016602;
      NameSpace@1100281000 : Text[30];

    PROCEDURE ImportFile@1100281000(VAR pFileXML@1000000000 : BigText);
    VAR
      lTempBlob@1000000005 : TEMPORARY Record 99008535;
      lXMLDocument@1100281006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lAdoStream@1100281001 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000566-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Stream";
      lInstream@1100281000 : InStream;
      lText001@1000000007 : TextConst 'ENU=Transmitted file is empty;FRA=Le fichier transmis est vide';
      lText002@1100281003 : TextConst 'ENU=Impossible to load XML;FRA=Impossible charger le fichier XML';
      lOutStream@1100281002 : OutStream;
      lFile@1100281004 : File;
      lFile2@1000000001 : File;
      lExitLoop@1000000004 : Integer;
      lCount@1000000006 : Integer;
      lPos@1000000008 : Integer;
      lBigText@1000000009 : BigText;
      lTextBuffer@1000000010 : Text[1024];
    BEGIN
      // Gestion de l'encoding

      lFile.WRITEMODE := TRUE;
      lFile.TEXTMODE := TRUE;
      lFile.CREATE('\\imha.local\imha\Support$\Temp\FOU\essai.xml');
      lFile.CREATEOUTSTREAM(lOutStream);
      pFileXML.WRITE(lOutStream);
      lFile.CLOSE;
      lFile.OPEN('\\imha.local\imha\Support$\Temp\FOU\essai.xml');

      IF ERASE('\\imha.local\imha\Support$\Temp\FOU\essai2.xml') THEN;

      lFile2.WRITEMODE := TRUE;
      lFile2.TEXTMODE := TRUE;
      lFile2.CREATE('\\imha.local\imha\Support$\Temp\FOU\essai2.xml');
      lCount := 1;
      WHILE lFile.READ(lTextBuffer) <> 0 DO BEGIN
        IF (lCount = 1) AND (COPYSTR(lTextBuffer,1,1) = '?') THEN BEGIN
          lTextBuffer := COPYSTR(lTextBuffer,2);
        END;

        lPos := STRPOS(lTextBuffer,'UTF-8');
        IF lPos = 0 THEN BEGIN
          lPos := STRPOS(lTextBuffer,'utf-8');
        END;
        IF lPos <> 0 THEN BEGIN
          lTextBuffer := COPYSTR(lTextBuffer,1,lPos - 1) + 'ISO-8859-1' + COPYSTR(lTextBuffer,lPos + 5);
        END;

        lTextBuffer := ToolsMgt.FormatImport(lTextBuffer);

        lFile2.WRITE(lTextBuffer);
        lCount += 1;
      END;

      lFile2.CLOSE;

      lFile2.OPEN('\\imha.local\imha\Support$\Temp\FOU\essai2.xml');

      lFile2.CREATEINSTREAM(lInstream);
      IF ISCLEAR(lXMLDocument) THEN BEGIN
        CREATE(lXMLDocument);
      END;

      IF NOT lXMLDocument.load(lInstream) THEN BEGIN
        ERROR('Erreur Chargement XML');
      END ELSE BEGIN
        ERROR('Chargement XML OK');
      END;
    END;

    BEGIN
    {
      lPos := 1;
      lCount := 1;
      lExitLoop := 1;
      WHILE lExitLoop <> 0 DO BEGIN
        lExitLoop := pFileXML.GETSUBTEXT(lTextBuffer,lCount,200);
        IF lTextBuffer <> '' THEN BEGIN
          lPos := STRPOS(lTextBuffer,'UTF-8');
          IF lPos = 0 THEN BEGIN
            lPos := STRPOS(lTextBuffer,'utf-8');
          END;
          IF lPos <> 0 THEN BEGIN
            lTextBuffer := COPYSTR(lTextBuffer,1,lPos - 1) + 'ISO-8859-1' + COPYSTR(lTextBuffer,lPos + 5);
          END;

          lTextBuffer := ToolsMgt.FormatImport(lTextBuffer);

          //lAdoStream.WriteText(lTextBuffer);
          //lBigText.ADDTEXT(lTextBuffer);
          lFile.WRITE(lTextBuffer);
          lTextBuffer := '';
        END;
        lCount += 200;
      END;

      lFile.CLOSE;

      lFile.OPEN('\\imha.local\imha\Support$\Temp\FOU\essai.xml');
      }
    }
    END.
  }
}