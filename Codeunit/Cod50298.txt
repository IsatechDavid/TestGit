OBJECT Codeunit 50298 Test Extranet Intervention
{
  OBJECT-PROPERTIES
  {
    Date=17/12/13;
    Time=17:16:58;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnRun=VAR
            lExtranetIntervWebServ@1100281000 : Codeunit 50198;
            lFileNameToExport@1100281001 : Text[1024];
          BEGIN
            WebServiceAddress := 'http://simhns01:7061/NST2009R2_DEV_IMH/WS/IMH - Dev/Codeunit/ExtranetIntervention';
            //WebServiceAddress := 'http://simhns01:7061/NST2009R2_DEV_IMH/WS/IMH - Dev/Codeunit/ExtranetIntervention';
            //WebServiceAddress := 'http://simhns07:7061/NST2009R2_DEV_IMH/WS/IMH - Dev/Codeunit/ExtranetIntervention';
            //WebServiceAddress := 'http://simhns07:7059/NST2009R2_EXP_IMH/WS/IMH/Codeunit/ExtranetIntervention';
            // Prod
            //WebServiceAddress := 'http://simhns07:7059/NST2009R2_EXP_IMH/WS/IMH/Codeunit/ExtranetIntervention';
            lFileNameToExport := CommonDialogMgt.OpenFile(Text005,'',4,Text008,1);
            //TestDate(lFileNameToExport);
            //EXIT;
            //lFileNameToExport := 'c:\test.txt';
            IF lFileNameToExport = '' THEN BEGIN
              ERROR(Text001);
            END;

            {
            TestAddComment(
              lFileNameToExport,
              '339429G','600058-ASSI1',10000,
              'Test suivi avec notif',
              'pcabel','CABEL','Philipppe',TRUE);
            TestAddComment(
              lFileNameToExport,
              '339429G','600058-ASSI1',10000,
              'Test suivi sans notif',
              'pcabel','CABEL','Philipppe',FALSE)
            }

            {
            TestUpdateContact(
              lFileNameToExport,
              '600058-ASSI1',10000,
              'MR','COULON','PHILIPPE',
              '94 rue des fleurs','',
              '69005','LYON','FRA',
              '',
              '04 72 56 10 94','',
              'pcabel','CABEL','Philipppe')
            }
            {
            TestAddContact(
              lFileNameToExport,
              '339429G','600058-ASSI1',10000,'MR','COULON','PHILIPPE',
              '94 rue des fleurs','',
              '69005','LYON','FRA',
              '',
              '04 72 56 10 94','',
              'pcabel','CABEL','Philipppe')
            }

            {TestGetUnplannedPreVisitReason(lFileNameToExport,'101146F','604412-REN1',10000,'RETRAC',
              'Test du detail de la fonction GetUnplannedPreVisitReason pour la verification de ce parametre j''avais piscine',
              'pcabel','CABEL','Philipppe');
            }

            {TestGetEndTaskDelayReason(lFileNameToExport,'101146F','604412-REN1',10000,'RETRAC',
              'Test du detail de la fonction GetEndTaskDelayReason pour la verification de ce parametre',
              CREATEDATETIME(311212D,0T),
              'pcabel','CABEL','Philipppe');
            }
            {
            TestGetUnStartedTaskReason(lFileNameToExport,'101146F','604412-REN1',10000,'RETRAC',
              'Test du detail de la fonction Get UnstartedTaskReason pour la verification de ce parametre',
              CREATEDATETIME(311212D,0T),CREATEDATETIME(311212D,0T),
              'pcabel','CABEL','Philipppe');
            }
            {
            TestGetUnplannedTaskReason(lFileNameToExport,'101146F','604412-REN1',10000,'RETRAC',
              'Test du detail de la fonction GetUnplannedTaskReason pour la verification de ce parametre',
              'pcabel','CABEL','Philipppe');
            }
            {
            TestGetUnrealizedIntervReason(lFileNameToExport,'101146F','604412-REN1',10000,'RETRAC',
              'Test du detail de la fonctionGetUnrealized pour la verification de ce parametre',
              CREATEDATETIME(311212D,0T),
              'pcabel','CABEL','Philipppe');
            }

            {
            TestGetUnrealizedIntervReason(lFileNameToExport,'102147M','604256-GCIMH1',10000,'RETRAC',
              'Test du detail de la fonctionGetUnrealized pour la verification de ce parametre',
              CREATEDATETIME(311212D,0T),
              'pcabel','CABEL','Philipppe');
            TestDeclareUnrealizedPreVisit(lFileNameToExport,'101146F','604412-REN1',10000,'RETRAC',
              'Test du detail de la fonction DeclareUnrealizedPreVisit IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH' +
              'IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH' +
              'IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH' +
              'IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH' +
              'IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH' +
              'IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH' +
              'IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH IMH',
              CREATEDATETIME(311212D,0T),
              'pcabel','CABEL','Philipppe');
            }
            //TestListDocumentToQualify(lFileNameToExport,'250557D');

            //TestListDocAttachment(lFileNameToExport,'235110K','844185-ARN1',10000,0);

            //TestAddDocument(
            //  lFileNameToExport,'338876Z','608456-ARN1',10000,'testisatech.txt','txt',22,'pcabel','Philippe','CABEL');

            //TestGetDocBinaryWithServiceKey(lFileNameToExport,'214323F','604108','604108-REN1',30000,30000);
            //TestGetDocBinaryWithFullKey(lFileNameToExport,'323830E',50054,0,126,'EXTRANET','',1);
            //TestGetDocumentBinaryContent(lFileNameToExport,'323830E','EXTRANET',124,1);
            TestGetInvoiceList(lFileNameToExport,'242567K','604001-REXP1',10000);
            //TestGetInvoiceListProvider(lFileNameToExport,'326070A');
            //TestPathDoc(lFileNameToExport);

            {
            TestAddQuote(
              lFileNameToExport,'500002','601367-ARN1',10000,'Extranet',543,
              'test',100,100,0,CURRENTDATETIME,'test 215',
              'pcabel','Philippe','CABEL');
            }
            {
            lExtranetIntervWebServ.AddQuote(
              '323830E','000223615',50000,'Extranet',225,
              'test',119.6,100,19.6,CURRENTDATETIME,'test 215',
              'pcabel','Philippe','CABEL');
            }
            //TestConfirmBeginTask(lFileNameToExport,'323830E','000223615',50000,CREATEDATETIME(WORKDATE,TIME),CREATEDATETIME(01011754D,TIME));
            //TestConfirmEndTask(lFileNameToExport,'323830E','000374707',10000,CREATEDATETIME(221111D,TIME));
            {
            TestConfirmPreVisit(
              lFileNameToExport,
              '186176F','606863-REXP1',10000,
              CREATEDATETIME(121011D,080000T),FALSE,TRUE,100,
              CREATEDATETIME(051111D,080000T));

            TestConfirmPreVisit(
              lFileNameToExport,
              '347403T','604289-REXP1',10000,
              CREATEDATETIME(011211D,080000T),FALSE,TRUE,100,
              CREATEDATETIME(051211D,080000T));
            }
            {
            TestAddInvoice(
              lFileNameToExport,
              '500002','601367-ARN1',10000,'EXTRANET',551,'test ISatech','119.6','100','19.6',
              CURRENTDATETIME,'F323830E-123','10000','pcabel','Philippe','CABEL');
            }
            // ******************** Test In Navision ****************************
            //lExtranetIntervWebServ.AddInvoice(
            //  '500002','601367-ARN1',10000,'EXTRANET',551,'test ISatech',100,100,0,
            //  CURRENTDATETIME,'F323830E-123','10000','pcabel','Philippe','CABEL');

            //TestContactBeneficiarie(lFileNameToExport,'323830E','606295-REN1',10000,CURRENTDATETIME);
            //lExtranetIntervWebServ.AddQuote(
            //  '186176F','608484-REN1',10000,'Extranet',358,
            //  'test',192.07,160.78,31.29,CURRENTDATETIME,'test 215',
            //  'pcabel','Philippe','CABEL');
            //lExtranetIntervWebServ.UpdateDocumentQualification('338876Z','EXTRANET',410,5,'608456-ARN1',10000);
          END;

  }
  CODE
  {
    VAR
      ToolsMgt@1100281006 : Codeunit 8016602;
      CommonDialogMgt@1100281000 : Codeunit 412;
      Text001@1100281003 : TextConst 'FRA=Veuilllez s‚lectionner une sortie';
      Text005@1100281002 : TextConst 'ENU=Export Attachment;FRA=Rep document';
      Text008@1100281001 : TextConst 'ENU=Files XML (*.XML)|*.XML;FRA=Fichiers XML (*.XML)|*.XML';
      WebServiceAddress@1100281004 : Text[1024];
      Text009@1100281005 : TextConst 'ENU=Files XML (*.XML)|*.XML;FRA=Tous Fichiers (*.*)|*.*';

    PROCEDURE TestDate@1100281021(pFileNameToExport@1100281008 : Text[1024]);
    VAR
      lSentMQBuffer@1100281017 : Record 8016720;
      lwinHTTPService@1100281016 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281015 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281014 : File;
      lOutStream@1100281013 : OutStream;
      lInStream@1100281012 : InStream;
      lInStreamToAdd@1100281011 : InStream;
      lFilePathToAdd@1100281010 : Text[1024];
      lTempText@1100281009 : Text[1024];
    BEGIN
      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<AddComment xmlns="urn:microsoft-dynamics-schemas/codeunit/TestDate">');
      lOutStream.WRITETEXT('</AddComment>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'AddComment_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'AddComment_Response.xml');
      //HYPERLINK(pFileNameToExport + 'AddComment_Response.xml');
    END;

    PROCEDURE TestAddComment@1100281019(pFileNameToExport@1100281008 : Text[1024];pProviderNo@1100281007 : Code[20];pServiceHeaderNo@1100281006 : Code[20];pInterventionNo@1100281005 : Integer;pComment@1100281004 : Text[1024];pExtranetUserNo@1100281003 : Code[20];pExtranetUserName@1100281002 : Text[50];pExtranetUserFirstName@1100281001 : Text[50];pNotifyIMH@1100281000 : Boolean);
    VAR
      lSentMQBuffer@1100281017 : Record 8016720;
      lwinHTTPService@1100281016 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281015 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281014 : File;
      lOutStream@1100281013 : OutStream;
      lInStream@1100281012 : InStream;
      lInStreamToAdd@1100281011 : InStream;
      lFilePathToAdd@1100281010 : Text[1024];
      lTempText@1100281009 : Text[1024];
    BEGIN
      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<AddComment xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pInterventionNo>' + FORMAT(pInterventionNo) + '</pInterventionNo>');
      IF pComment <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pComment>' + pComment + '</pComment>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pComment/>');
      END;
      IF pExtranetUserNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo>' + pExtranetUserNo + '</pExtranetUserNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo/>');
      END;
      IF pExtranetUserName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName>' + pExtranetUserName + '</pExtranetUserName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName/>');
      END;
      IF pExtranetUserFirstName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName>' + pExtranetUserFirstName + '</pExtranetUserFirstName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName/>');
      END;
      lOutStream.WRITETEXT('<pNotifyIMH>' + FORMATBool(pNotifyIMH) + '</pNotifyIMH>');

      lOutStream.WRITETEXT('</AddComment>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'AddComment_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'AddComment_Response.xml');
      //HYPERLINK(pFileNameToExport + 'AddComment_Response.xml');
    END;

    PROCEDURE TestContactBeneficiarie@1100281016(pFileNameToExport@1100281007 : Text[1024];pProviderNo@1100281024 : Code[20];pServiceHeaderNo@1100281023 : Code[20];pInterventionNo@1100281022 : Integer;pPreVisitDateTime@1100281003 : DateTime);
    VAR
      lSentMQBuffer@1100281010 : Record 8016720;
      lwinHTTPService@1100281009 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281006 : File;
      lOutStream@1100281005 : OutStream;
      lInStream@1100281004 : InStream;
      lInStreamToAdd@1100281002 : InStream;
      lFilePathToAdd@1100281001 : Text[1024];
      lTempText@1100281000 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<ContactBeneficiarie xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pInterventionNo>' + FORMAT(pInterventionNo) + '</pInterventionNo>');
      IF pPreVisitDateTime <> 0DT THEN BEGIN
        lOutStream.WRITETEXT('<pPreVisitDateTime>' + FORMAT(pPreVisitDateTime,0,9) + '</pPreVisitDateTime>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pPreVisitDateTime/>');
      END;

      lOutStream.WRITETEXT('</ContactBeneficiarie>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'ContactBeneficiary_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'ContactBeneficiary_Response.xml');
      HYPERLINK(pFileNameToExport + 'ContactBeneficiary_Response.xml');
    END;

    PROCEDURE TestAddInvoice@1100281017(pFileNameToExport@1100281007 : Text[1024];pProviderNo@1100281024 : Code[20];pServiceHeaderNo@1100281023 : Code[20];pInterventionNo@1100281022 : Integer;pFlowCode@1100281021 : Code[10];pDocEntryNo@1100281020 : Integer;pDocDescrQualification@1100281019 : Text[250];pAmountInclVAT@1100281018 : Text[30];pAmountExclVAT@1100281017 : Text[30];pAmountVAT@1100281016 : Text[30];pDocDate@1100281015 : DateTime;pDocReference@1100281014 : Text[80];pNavQuote@1100281013 : Code[20];pExtranetUserNo@1100281012 : Code[20];pExtranetUserName@1100281011 : Text[50];pExtranetUserFirstName@1100281003 : Text[50]);
    VAR
      lSentMQBuffer@1100281010 : Record 8016720;
      lwinHTTPService@1100281009 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281006 : File;
      lOutStream@1100281005 : OutStream;
      lInStream@1100281004 : InStream;
      lInStreamToAdd@1100281002 : InStream;
      lFilePathToAdd@1100281001 : Text[1024];
      lTempText@1100281000 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<AddInvoice xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pInterventionNo>' + FORMAT(pInterventionNo) + '</pInterventionNo>');
      IF pFlowCode <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pFlowCode>' + pFlowCode + '</pFlowCode>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pFlowCode/>');
      END;

      lOutStream.WRITETEXT('<pDocEntryNo>' + FORMAT(pDocEntryNo,0,1) + '</pDocEntryNo>');
      IF pDocDescrQualification <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pDocDescrQualification>' + pDocDescrQualification + '</pDocDescrQualification>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pDocDescrQualification/>');
      END;
      lOutStream.WRITETEXT('<pAmountInclVAT>' + FORMAT(pAmountInclVAT,0,1) + '</pAmountInclVAT>');
      lOutStream.WRITETEXT('<pAmountExclVAT>' + FORMAT(pAmountExclVAT,0,1) + '</pAmountExclVAT>');
      lOutStream.WRITETEXT('<pAmountVAT>' + FORMAT(pAmountVAT,0,1) + '</pAmountVAT>');
      IF pDocDate <> 0DT THEN BEGIN
        lOutStream.WRITETEXT('<pDocDate>' + FORMAT(pDocDate,0,9) + '</pDocDate>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pDocDate/>');
      END;
      IF pDocReference <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pDocReference>' + pDocReference + '</pDocReference>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pDocReference/>');
      END;
      lOutStream.WRITETEXT('<pNavQuote>' + FORMAT(pNavQuote,0,1) + '</pNavQuote>');

      IF pExtranetUserNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo>' + pExtranetUserNo + '</pExtranetUserNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo/>');
      END;
      IF pExtranetUserName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName>' + pExtranetUserName + '</pExtranetUserName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName/>');
      END;
      IF pExtranetUserFirstName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName>' + pExtranetUserFirstName + '</pExtranetUserFirstName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName/>');
      END;

      lOutStream.WRITETEXT('</AddInvoice>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'AddInvoice_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'AddInvoice_Response.xml');
      HYPERLINK(pFileNameToExport + 'AddInvoice_Response.xml');
    END;

    PROCEDURE TestConfirmPreVisit@1100281015(pFileNameToExport@1100281007 : Text[1024];pProviderNo@1100281022 : Code[20];pServiceHeaderNo@1100281021 : Code[20];pInterventionNo@1100281020 : Integer;pPreVisitDateTime@1100281019 : DateTime;pCNRStatus@1100281018 : Boolean;pTHStatus@1100281017 : Boolean;pTHValue@1100281016 : Decimal;pFuturePreVisitDateTime@1100281003 : DateTime);
    VAR
      lSentMQBuffer@1100281010 : Record 8016720;
      lwinHTTPService@1100281009 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281006 : File;
      lOutStream@1100281005 : OutStream;
      lInStream@1100281004 : InStream;
      lInStreamToAdd@1100281002 : InStream;
      lFilePathToAdd@1100281001 : Text[1024];
      lTempText@1100281000 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<ConfirmPreVisit xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pInterventionNo>' + FORMAT(pInterventionNo) + '</pInterventionNo>');
      lOutStream.WRITETEXT('<pPreVisitDateTime>' + FORMAT(pPreVisitDateTime,0,9) + '</pPreVisitDateTime>');
      IF pCNRStatus THEN BEGIN
        lOutStream.WRITETEXT('<pCNRStatus>true</pCNRStatus>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pCNRStatus>false</pCNRStatus>');
      END;
      IF pTHStatus THEN BEGIN
        lOutStream.WRITETEXT('<pTHStatus>true</pTHStatus>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pTHStatus>false</pTHStatus>');
      END;
      lOutStream.WRITETEXT('<pTHValue>' + FORMAT(pTHValue,0,1) + '</pTHValue>');
      lOutStream.WRITETEXT('<pFuturePreVisitDateTime>' + FORMAT(pFuturePreVisitDateTime,0,9) + '</pFuturePreVisitDateTime>');

      lOutStream.WRITETEXT('</ConfirmPreVisit>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'ConfirmPreVisit_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'ConfirmPreVisit_Response.xml');
      HYPERLINK(pFileNameToExport + 'ConfirmPreVisit_Response.xml');
    END;

    PROCEDURE TestConfirmBeginTask@1100281022(pFileNameToExport@1100281007 : Text[1024];pProviderNo@1100281015 : Code[20];pServiceHeaderNo@1100281014 : Code[20];pInterventionNo@1100281013 : Integer;pBeginDateTime@1100281012 : DateTime;pEndDateTime@1100281011 : DateTime);
    VAR
      lSentMQBuffer@1100281010 : Record 8016720;
      lwinHTTPService@1100281009 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281006 : File;
      lOutStream@1100281005 : OutStream;
      lInStream@1100281004 : InStream;
      lInStreamToAdd@1100281002 : InStream;
      lFilePathToAdd@1100281001 : Text[1024];
      lTempText@1100281000 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<ConfirmBeginTask xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pInterventionNo>' + FORMAT(pInterventionNo) + '</pInterventionNo>');
      lOutStream.WRITETEXT('<pBeginDateTime>' + FORMAT(pBeginDateTime,0,9) + '</pBeginDateTime>');
      lOutStream.WRITETEXT('<pEndDateTime>' + FORMAT(pEndDateTime,0,9) + '</pEndDateTime>');

      lOutStream.WRITETEXT('</ConfirmBeginTask>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'ConfirmBeginTask_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'ConfirmBeginTask_Response.xml');
      HYPERLINK(pFileNameToExport + 'ConfirmBeginTask_Response.xml');
    END;

    PROCEDURE TestConfirmEndTask@1100281014(pFileNameToExport@1100281007 : Text[1024];pProviderNo@1100281015 : Code[20];pServiceHeaderNo@1100281014 : Code[20];pInterventionNo@1100281013 : Integer;pEndDateTime@1100281011 : DateTime);
    VAR
      lSentMQBuffer@1100281010 : Record 8016720;
      lwinHTTPService@1100281009 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281006 : File;
      lOutStream@1100281005 : OutStream;
      lInStream@1100281004 : InStream;
      lInStreamToAdd@1100281002 : InStream;
      lFilePathToAdd@1100281001 : Text[1024];
      lTempText@1100281000 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<ConfirmEndTask xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pInterventionNo>' + FORMAT(pInterventionNo) + '</pInterventionNo>');
      lOutStream.WRITETEXT('<pEndDateTime>' + FORMAT(pEndDateTime,0,9) + '</pEndDateTime>');

      lOutStream.WRITETEXT('</ConfirmEndTask>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'ConfirmEndTask_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'ConfirmEndTask_Response.xml');
      HYPERLINK(pFileNameToExport + 'ConfirmEndTask_Response.xml');
    END;

    PROCEDURE TestAddQuote@1100281013(pFileNameToExport@1100281007 : Text[1024];pProviderNo@1100281032 : Code[20];pServiceHeaderNo@1100281031 : Code[20];pInterventionNo@1100281030 : Integer;pFlowCode@1100281029 : Code[10];pDocEntryNo@1100281028 : Integer;pDocDescrQualification@1100281027 : Text[250];pAmountInclVAT@1100281026 : Decimal;pAmountExclVAT@1100281025 : Decimal;pAmountVAT@1100281024 : Decimal;pDocDate@1100281023 : DateTime;pDocReference@1100281022 : Text[80];pExtranetUserNo@1100281021 : Code[20];pExtranetUserName@1100281020 : Text[50];pExtranetUserFirstName@1100281019 : Text[50]);
    VAR
      lSentMQBuffer@1100281010 : Record 8016720;
      lwinHTTPService@1100281009 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281006 : File;
      lOutStream@1100281005 : OutStream;
      lInStream@1100281004 : InStream;
      lInStreamToAdd@1100281002 : InStream;
      lFilePathToAdd@1100281001 : Text[1024];
      lTempText@1100281000 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<AddQuote xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pInterventionNo>' + FORMAT(pInterventionNo) + '</pInterventionNo>');
      IF pFlowCode <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pFlowCode>' + pFlowCode + '</pFlowCode>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pFlowCode/>');
      END;

      lOutStream.WRITETEXT('<pDocEntryNo>' + FORMAT(pDocEntryNo,0,1) + '</pDocEntryNo>');
      IF pDocDescrQualification <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pDocDescrQualification>' + pDocDescrQualification + '</pDocDescrQualification>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pDocDescrQualification/>');
      END;
      lOutStream.WRITETEXT('<pAmountInclVAT>' + FORMAT(pAmountInclVAT,0,1) + '</pAmountInclVAT>');
      lOutStream.WRITETEXT('<pAmountExclVAT>' + FORMAT(pAmountExclVAT,0,1) + '</pAmountExclVAT>');
      lOutStream.WRITETEXT('<pAmountVAT>' + FORMAT(pAmountVAT,0,1) + '</pAmountVAT>');
      IF pDocDate <> 0DT THEN BEGIN
        lOutStream.WRITETEXT('<pDocDate>' + FORMAT(pDocDate,0,9) + '</pDocDate>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pDocDate/>');
      END;
      IF pDocReference <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pDocReference>' + pDocReference + '</pDocReference>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pDocReference/>');
      END;

      IF pExtranetUserNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo>' + pExtranetUserNo + '</pExtranetUserNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo/>');
      END;
      IF pExtranetUserName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName>' + pExtranetUserName + '</pExtranetUserName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName/>');
      END;
      IF pExtranetUserFirstName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName>' + pExtranetUserFirstName + '</pExtranetUserFirstName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName/>');
      END;

      lOutStream.WRITETEXT('</AddQuote>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'AddQuote_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'AddQuote_Response.xml');
      HYPERLINK(pFileNameToExport + 'AddQuote_Response.xml');
    END;

    PROCEDURE TestDeclareUnrealizedPreVisit@1100281012(pFileNameToExport@1100281007 : Text[1024];pProviderNo@1100281018 : Code[20];pServiceHeaderNo@1100281017 : Code[20];pInterventionNo@1100281016 : Integer;pReasonDescription@1100281015 : Text[80];pDetailReasonDescription@1100281014 : Text[1024];pNewPrevisitDateTime@1100281013 : DateTime;pExtranetUserNo@1100281012 : Code[20];pExtranetUserName@1100281011 : Text[50];pExtranetUserFirstName@1100281003 : Text[50]);
    VAR
      lSentMQBuffer@1100281010 : Record 8016720;
      lwinHTTPService@1100281009 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281006 : File;
      lOutStream@1100281005 : OutStream;
      lInStream@1100281004 : InStream;
      lInStreamToAdd@1100281002 : InStream;
      lFilePathToAdd@1100281001 : Text[1024];
      lTempText@1100281000 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<DeclareUnrealizedPreVisit xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pInterventionNo>' + FORMAT(pInterventionNo) + '</pInterventionNo>');
      IF pReasonDescription <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pReasonDescription>' + pReasonDescription + '</pReasonDescription>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pReasonDescription/>');
      END;
      IF pDetailReasonDescription <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pDetailReasonDescription>' + pDetailReasonDescription + '</pDetailReasonDescription>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pDetailReasonDescription/>');
      END;
      IF pNewPrevisitDateTime <> 0DT THEN BEGIN
        lOutStream.WRITETEXT('<pNewPrevisitDateTime>' + FORMAT(pNewPrevisitDateTime,0,9) + '</pNewPrevisitDateTime>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pNewPrevisitDateTime/>');
      END;
      IF pExtranetUserNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo>' + pExtranetUserNo + '</pExtranetUserNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo/>');
      END;
      IF pExtranetUserName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName>' + pExtranetUserName + '</pExtranetUserName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName/>');
      END;
      IF pExtranetUserFirstName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName>' + pExtranetUserFirstName + '</pExtranetUserFirstName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName/>');
      END;

      lOutStream.WRITETEXT('</DeclareUnrealizedPreVisit>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'DeclareUnrealizedPreVisit_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'DeclareUnrealizedPreVisit_Response.xml');
      HYPERLINK(pFileNameToExport + 'DeclareUnrealizedPreVisit_Response.xml');
    END;

    PROCEDURE TestGetUnplannedPreVisitReason@1100281004(pFileNameToExport@1100281007 : Text[1024];pProviderNo@1100281017 : Code[20];pServiceHeaderNo@1100281016 : Code[20];pInterventionNo@1100281015 : Integer;pReasonDescription@1100281014 : Text[80];pDetailReasonDescription@1100281013 : Text[1024];pExtranetUserNo@1100281012 : Code[20];pExtranetUserName@1100281011 : Text[50];pExtranetUserFirstName@1100281003 : Text[50]);
    VAR
      lSentMQBuffer@1100281010 : Record 8016720;
      lwinHTTPService@1100281009 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281006 : File;
      lOutStream@1100281005 : OutStream;
      lInStream@1100281004 : InStream;
      lInStreamToAdd@1100281002 : InStream;
      lFilePathToAdd@1100281001 : Text[1024];
      lTempText@1100281000 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<GetUnplannedPreVisitReason xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pInterventionNo>' + FORMAT(pInterventionNo) + '</pInterventionNo>');
      IF pReasonDescription <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pReasonDescription>' + pReasonDescription + '</pReasonDescription>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pReasonDescription/>');
      END;
      IF pDetailReasonDescription <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pDetailReasonDescription>' + pDetailReasonDescription + '</pDetailReasonDescription>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pDetailReasonDescription/>');
      END;
      IF pExtranetUserNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo>' + pExtranetUserNo + '</pExtranetUserNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo/>');
      END;
      IF pExtranetUserName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName>' + pExtranetUserName + '</pExtranetUserName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName/>');
      END;
      IF pExtranetUserFirstName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName>' + pExtranetUserFirstName + '</pExtranetUserFirstName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName/>');
      END;

      lOutStream.WRITETEXT('</GetUnplannedPreVisitReason>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'GetUnplannedPreVisitReason_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'GetUnplannedPreVisitReason_Response.xml');
      HYPERLINK(pFileNameToExport + 'GetUnplannedPreVisitReason_Response.xml');
    END;

    PROCEDURE TestGetEndTaskDelayReason@1100281011(pFileNameToExport@1100281007 : Text[1024];pProviderNo@1100281018 : Code[20];pServiceHeaderNo@1100281017 : Code[20];pInterventionNo@1100281016 : Integer;pReasonDescription@1100281015 : Text[80];pDetailReasonDescription@1100281014 : Text[1024];pNewEndDate@1100281013 : DateTime;pExtranetUserNo@1100281012 : Code[20];pExtranetUserName@1100281011 : Text[50];pExtranetUserFirstName@1100281003 : Text[50]);
    VAR
      lSentMQBuffer@1100281010 : Record 8016720;
      lwinHTTPService@1100281009 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281006 : File;
      lOutStream@1100281005 : OutStream;
      lInStream@1100281004 : InStream;
      lInStreamToAdd@1100281002 : InStream;
      lFilePathToAdd@1100281001 : Text[1024];
      lTempText@1100281000 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<GetEndTaskDelayReason xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pInterventionNo>' + FORMAT(pInterventionNo) + '</pInterventionNo>');
      IF pReasonDescription <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pReasonDescription>' + pReasonDescription + '</pReasonDescription>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pReasonDescription/>');
      END;
      IF pDetailReasonDescription <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pDetailReasonDescription>' + pDetailReasonDescription + '</pDetailReasonDescription>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pDetailReasonDescription/>');
      END;
      IF pNewEndDate <> 0DT THEN BEGIN
        lOutStream.WRITETEXT('<pNewEndDate>' + FORMAT(pNewEndDate,0,9) + '</pNewEndDate>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pNewEndDate/>');
      END;
      IF pExtranetUserNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo>' + pExtranetUserNo + '</pExtranetUserNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo/>');
      END;
      IF pExtranetUserName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName>' + pExtranetUserName + '</pExtranetUserName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName/>');
      END;
      IF pExtranetUserFirstName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName>' + pExtranetUserFirstName + '</pExtranetUserFirstName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName/>');
      END;

      lOutStream.WRITETEXT('</GetEndTaskDelayReason>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'GetEndTaskDelayReason_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'GetEndTaskDelayReason_Response.xml');
      HYPERLINK(pFileNameToExport + 'GetEndTaskDelayReason_Response.xml');
    END;

    PROCEDURE TestUpdateContact@1100281000(pFileNameToExport@1100281007 : Text[1024];pServiceHeaderNo@1100281026 : Code[20];pAddressNo@1100281025 : Integer;pContactSalutationCode@1100281024 : Code[10];pContactSurName@1100281023 : Text[30];pContactFirstName@1100281022 : Text[30];pContactAddress@1100281021 : Text[50];pContactAddress2@1100281020 : Text[50];pContactPostCode@1100281019 : Code[20];pContactCity@1100281018 : Text[30];pContactCountryCode@1100281017 : Code[10];pContactComment@1100281016 : Text[80];pContactPhoneNo@1100281015 : Text[30];pContactMobilePhoneNo@1100281014 : Text[20];pExtranetUserNo@1100281013 : Code[20];pExtranetUserName@1100281012 : Text[50];pExtranetUserFirstName@1100281011 : Text[50]);
    VAR
      lSentMQBuffer@1100281010 : Record 8016720;
      lwinHTTPService@1100281009 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281006 : File;
      lOutStream@1100281005 : OutStream;
      lInStream@1100281004 : InStream;
      lInStreamToAdd@1100281002 : InStream;
      lFilePathToAdd@1100281001 : Text[1024];
      lTempText@1100281000 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<UpdateContact xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pAddressNo>' + FORMAT(pAddressNo,0,1) + '</pAddressNo>');
      IF pContactSalutationCode <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactSalutationCode>' + pContactSalutationCode + '</pContactSalutationCode>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactSalutationCode/>');
      END;
      IF pContactSurName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactSurName>' + pContactSurName + '</pContactSurName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactSurName/>');
      END;
      IF pContactFirstName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactFirstName>' + pContactFirstName + '</pContactFirstName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactFirstName/>');
      END;
      IF pContactAddress <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactAddress>' + pContactAddress + '</pContactAddress>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactAddress/>');
      END;
      IF pContactAddress2 <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactAddress2>' + pContactAddress2 + '</pContactAddress2>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactAddress2/>');
      END;
      IF pContactPostCode <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactPostCode>' + pContactPostCode + '</pContactPostCode>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactPostCode/>');
      END;
      IF pContactCity <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactCity>' + pContactCity + '</pContactCity>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactCity/>');
      END;
      IF pContactCountryCode <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactCountryCode>' + pContactCountryCode + '</pContactCountryCode>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactCountryCode/>');
      END;
      IF pContactComment <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactComment>' + pContactComment + '</pContactComment>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactComment/>');
      END;
      IF pContactPhoneNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactPhoneNo>' + pContactPhoneNo + '</pContactPhoneNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactPhoneNo/>');
      END;
      IF pContactMobilePhoneNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactMobilePhoneNo>' + pContactMobilePhoneNo + '</pContactMobilePhoneNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactMobilePhoneNo/>');
      END;
      IF pExtranetUserNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo>' + pExtranetUserNo + '</pExtranetUserNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo/>');
      END;
      IF pExtranetUserName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName>' + pExtranetUserName + '</pExtranetUserName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName/>');
      END;
      IF pExtranetUserFirstName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName>' + pExtranetUserFirstName + '</pExtranetUserFirstName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName/>');
      END;

      lOutStream.WRITETEXT('</UpdateContact>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'UpdateContact_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'UpdateContact_Response.xml');
      HYPERLINK(pFileNameToExport + 'UpdateContact_Response.xml');
    END;

    PROCEDURE TestAddContact@1100281018(pFileNameToExport@1100281007 : Text[1024];pServiceHeaderNo@1100281026 : Code[20];pContactSalutationCode@1100281024 : Code[10];pContactSurName@1100281023 : Text[30];pContactFirstName@1100281022 : Text[30];pContactAddress@1100281021 : Text[50];pContactAddress2@1100281020 : Text[50];pContactPostCode@1100281019 : Code[20];pContactCity@1100281018 : Text[30];pContactCountryCode@1100281017 : Code[10];pContactComment@1100281016 : Text[80];pContactPhoneNo@1100281015 : Text[30];pContactMobilePhoneNo@1100281014 : Text[20];pExtranetUserNo@1100281013 : Code[20];pExtranetUserName@1100281012 : Text[50];pExtranetUserFirstName@1100281011 : Text[50]);
    VAR
      lSentMQBuffer@1100281010 : Record 8016720;
      lwinHTTPService@1100281009 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281006 : File;
      lOutStream@1100281005 : OutStream;
      lInStream@1100281004 : InStream;
      lInStreamToAdd@1100281002 : InStream;
      lFilePathToAdd@1100281001 : Text[1024];
      lTempText@1100281000 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<AddContact xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      IF pContactSalutationCode <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactSalutationCode>' + pContactSalutationCode + '</pContactSalutationCode>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactSalutationCode/>');
      END;
      IF pContactSurName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactSurName>' + pContactSurName + '</pContactSurName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactSurName/>');
      END;
      IF pContactFirstName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactFirstName>' + pContactFirstName + '</pContactFirstName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactFirstName/>');
      END;
      IF pContactAddress <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactAddress>' + pContactAddress + '</pContactAddress>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactAddress/>');
      END;
      IF pContactAddress2 <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactAddress2>' + pContactAddress2 + '</pContactAddress2>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactAddress2/>');
      END;
      IF pContactPostCode <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactPostCode>' + pContactPostCode + '</pContactPostCode>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactPostCode/>');
      END;
      IF pContactCity <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactCity>' + pContactCity + '</pContactCity>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactCity/>');
      END;
      IF pContactCountryCode <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactCountryCode>' + pContactCountryCode + '</pContactCountryCode>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactCountryCode/>');
      END;
      IF pContactComment <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactComment>' + pContactComment + '</pContactComment>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactComment/>');
      END;
      IF pContactPhoneNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactPhoneNo>' + pContactPhoneNo + '</pContactPhoneNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactPhoneNo/>');
      END;
      IF pContactMobilePhoneNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pContactMobilePhoneNo>' + pContactMobilePhoneNo + '</pContactMobilePhoneNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pContactMobilePhoneNo/>');
      END;
      IF pExtranetUserNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo>' + pExtranetUserNo + '</pExtranetUserNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo/>');
      END;
      IF pExtranetUserName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName>' + pExtranetUserName + '</pExtranetUserName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName/>');
      END;
      IF pExtranetUserFirstName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName>' + pExtranetUserFirstName + '</pExtranetUserFirstName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName/>');
      END;

      lOutStream.WRITETEXT('</AddContact>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'UpdateContact_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'UpdateContact_Response.xml');
      HYPERLINK(pFileNameToExport + 'UpdateContact_Response.xml');
    END;

    PROCEDURE TestListDocumentToQualify@1100281010(pFileNameToExport@1100281007 : Text[1024];pProviderNo@1100281003 : Code[20]);
    VAR
      lSentMQBuffer@1100281010 : Record 8016720;
      lwinHTTPService@1100281009 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281006 : File;
      lOutStream@1100281005 : OutStream;
      lInStream@1100281004 : InStream;
      lInStreamToAdd@1100281002 : InStream;
      lFilePathToAdd@1100281001 : Text[1024];
      lTempText@1100281000 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<ListDocumentToQualify xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      lOutStream.WRITETEXT('<pDocumentList/>');

      lOutStream.WRITETEXT('</ListDocumentToQualify>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'ListDocumentToQualify_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'ListDocumentToQualify_Response.xml');
      HYPERLINK(pFileNameToExport + 'ListDocumentToQUalify_Response.xml');
    END;

    PROCEDURE TestListDocAttachment@1100281009(pFileNameToExport@1100281010 : Text[1024];pProviderNo@1100281009 : Code[20];pServiceHeaderNo@1100281011 : Code[20];pInterventionNo@1100281012 : Integer;pInterventionQuoteLineNo@1100281013 : Integer);
    VAR
      lSentMQBuffer@1100281008 : Record 8016720;
      lwinHTTPService@1100281007 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281005 : File;
      lOutStream@1100281004 : OutStream;
      lInStream@1100281003 : InStream;
      lInStreamToAdd@1100281002 : InStream;
      lFilePathToAdd@1100281001 : Text[1024];
      lTempText@1100281000 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<ListDocAttachment xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pInterventionNo>' + FORMAT(pInterventionNo) + '</pInterventionNo>');
      lOutStream.WRITETEXT('<pInterventionQuoteLineNo>' + FORMAT(pInterventionQuoteLineNo) + '</pInterventionQuoteLineNo>');
      lOutStream.WRITETEXT('<pDocumentList/>');

      lOutStream.WRITETEXT('</ListDocAttachment>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'ListDocAttachment_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'ListDocAttachment_Response.xml');
      HYPERLINK(pFileNameToExport + 'ListDocAttachment_Response.xml');
    END;

    PROCEDURE TestAddDocument@1100281008(pFileNameToExport@1100281015 : Text[1024];pProviderNo@1100281018 : Code[20];pServiceHeaderNo@1100281017 : Code[20];pInterventionNo@1100281016 : Integer;pDocName@1100281014 : Text[50];pDocFileExtension@1100281013 : Text[30];pDocSize@1100281011 : Decimal;pExtranetUserNo@1100281009 : Code[20];pExtranetUserName@1100281007 : Text[50];pExtranetUserFirstName@1100281004 : Text[50]);
    VAR
      lSentMQBuffer@1100281002 : Record 8016720;
      lwinHTTPService@1100281010 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281001 : File;
      lOutStream@1100281006 : OutStream;
      lInStream@1100281005 : InStream;
      lInStreamToAdd@1100281003 : InStream;
      lFilePathToAdd@1100281000 : Text[1024];
      lTempText@1100281012 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<AddDocument xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pInterventionNo>' + FORMAT(pInterventionNo) + '</pInterventionNo>');
      IF pDocName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pDocName>' + pDocName + '</pDocName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pDocName/>');
      END;
      IF pDocFileExtension <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pDocFileExtension>' + pDocFileExtension + '</pDocFileExtension>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pDocFileExtension/>');
      END;

      lOutStream.WRITETEXT('<pDocBinaryContent>');
      lFilePathToAdd := CommonDialogMgt.OpenFile(Text005,'',4,Text009,1);
      //lFilePathToAdd := '\\imha.local\imha\Support$\Temp\test.txt';
      lFileToAdd.OPEN(lFilePathToAdd);
      lFileToAdd.CREATEINSTREAM(lInStreamToAdd);
      ToolsMgt.EncodeBase64(lInStreamToAdd,lOutStream);
      lOutStream.WRITETEXT('</pDocBinaryContent>');

      lOutStream.WRITETEXT('<pDocSize>' + FORMAT(pDocSize,0,1) + '</pDocSize>');

      IF pExtranetUserNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo>' + pExtranetUserNo + '</pExtranetUserNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo/>');
      END;
      IF pExtranetUserName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName>' + pExtranetUserName + '</pExtranetUserName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName/>');
      END;
      IF pExtranetUserFirstName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName>' + pExtranetUserFirstName + '</pExtranetUserFirstName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName/>');
      END;
      lOutStream.WRITETEXT('<pFlowCode/>');
      lOutStream.WRITETEXT('<pDocEntryNo>0</pDocEntryNo>');
      lOutStream.WRITETEXT('<pAttachEntryNo>0</pAttachEntryNo>');
      lOutStream.WRITETEXT('<pTableID>0</pTableID>');
      lOutStream.WRITETEXT('<pKeyInteger1>0</pKeyInteger1>');
      lOutStream.WRITETEXT('<pKeyInteger2>0</pKeyInteger2>');
      lOutStream.WRITETEXT('<pKeyCode1/>');
      lOutStream.WRITETEXT('<pKeyCode2/>');
      lOutStream.WRITETEXT('<pEntryNo>0</pEntryNo>');

      lOutStream.WRITETEXT('</AddDocument>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'AddDocument_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'AddDocument_Response.xml');
      HYPERLINK(pFileNameToExport + 'AddDocument_Response.xml');
    END;

    PROCEDURE TestUpdateDocumentQualificatio@1000000000(pFileNameToExport@1100281015 : Text[1024];pProviderNo@1000000005 : Code[20];pFlowCode@1000000004 : Code[10];pDocEntryNo@1000000003 : Integer;pDocumentNature@1000000002 : Integer;pServiceHeaderNo@1000000001 : Code[20];pInterventionNo@1000000000 : Integer);
    VAR
      lSentMQBuffer@1100281002 : Record 8016720;
      lwinHTTPService@1100281010 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281001 : File;
      lOutStream@1100281006 : OutStream;
      lInStream@1100281005 : InStream;
      lInStreamToAdd@1100281003 : InStream;
      lFilePathToAdd@1100281000 : Text[1024];
      lTempText@1100281012 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<UpdateDocumentQualification xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pFlowCode>' + pFlowCode + '</pFlowCode>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pFlowCode/>');
      END;
      lOutStream.WRITETEXT('<pDocEntryNo>' + FORMAT(pDocEntryNo) + '</pDocEntryNo>');
      lOutStream.WRITETEXT('<pDocumentNature>' + FORMAT(pDocumentNature) + '</pDocumentNature>');
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pInterventionNo>' + FORMAT(pInterventionNo) + '</pInterventionNo>');

      lOutStream.WRITETEXT('</UpdateDocumentQualification>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'UpdateDocQual_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'UpdateDocQual_Response.xml');
      HYPERLINK(pFileNameToExport + 'UpdateDocQual_Response.xml');
    END;

    PROCEDURE TestGetDocBinaryWithServiceKey@1100281001(pFileNameToExport@1100281015 : Text[1024];pProviderNo@1100281012 : Code[20];pServiceNo@1100281011 : Code[20];pServiceHeaderNo@1100281009 : Code[20];pInterventionLineNo@1100281007 : Integer;pInterventionQuoteLineNo@1100281004 : Integer);
    VAR
      lSentMQBuffer@1100281002 : Record 8016720;
      lwinHTTPService@1100281010 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lOutStream@1100281006 : OutStream;
      lInStream@1100281005 : InStream;
    BEGIN
      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<GetDocBinaryWithServiceKey xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceNo>' + pServiceNo + '</pServiceNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;

      lOutStream.WRITETEXT('<pInterventionLineNo>' + FORMAT(pInterventionLineNo) + '</pInterventionLineNo>');
      lOutStream.WRITETEXT('<pInterventionQuoteLineNo>' + FORMAT(pInterventionQuoteLineNo) + '</pInterventionQuoteLineNo>');
      lOutStream.WRITETEXT('<pDocBinaryContent/>');

      lOutStream.WRITETEXT('</GetDocBinaryWithServiceKey>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'GetDocBinaryWithServiceKey_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'GetDocBinaryWithServiceKey_Response.xml');
      HYPERLINK(pFileNameToExport + 'GetDocBinaryWithServiceKey_Response.xml');
    END;

    PROCEDURE TestGetDocBinaryWithFullKey@1100281005(pFileNameToExport@1100281015 : Text[1024];pProviderNo@1100281012 : Code[20];pTableID@1100281011 : Integer;pKeyInteger1@1100281009 : Integer;pKeyInteger2@1100281007 : Integer;pKeyCode1@1100281004 : Code[20];pKeyCode2@1100281003 : Code[20];pEntryNo@1100281001 : Integer);
    VAR
      lSentMQBuffer@1100281002 : Record 8016720;
      lwinHTTPService@1100281010 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lOutStream@1100281006 : OutStream;
      lInStream@1100281005 : InStream;
    BEGIN
      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<GetDocBinaryWithFullKey xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      lOutStream.WRITETEXT('<pTableID>' + FORMAT(pTableID) + '</pTableID>');
      lOutStream.WRITETEXT('<pKeyInteger1>' + FORMAT(pKeyInteger1) + '</pKeyInteger1>');
      lOutStream.WRITETEXT('<pKeyInteger2>' + FORMAT(pKeyInteger2) + '</pKeyInteger2>');
      IF pKeyCode1 <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pKeyCode1>' + pKeyCode1 + '</pKeyCode1>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pKeyCode1/>');
      END;
      IF pKeyCode2 <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pKeyCode2>' + pKeyCode2 + '</pKeyCode2>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pKeyCode2/>');
      END;
      lOutStream.WRITETEXT('<pEntryNo>' + FORMAT(pEntryNo) + '</pEntryNo>');
      lOutStream.WRITETEXT('<pDocBinaryContent/>');

      lOutStream.WRITETEXT('</GetDocBinaryWithFullKey>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'GetDocBinaryWithFullKey_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'GetDocBinaryWithFullKey_Response.xml');
      HYPERLINK(pFileNameToExport + 'GetDocBinaryWithFullKey_Response.xml');
    END;

    PROCEDURE TestGetDocumentBinaryContent@1100281007(pFileNameToExport@1100281015 : Text[1024];pProvider@1100281011 : Code[20];pFlowCode@1100281012 : Code[20];pDocEntryNo@1100281013 : Integer;pAttachEntryNo@1100281014 : Integer);
    VAR
      lSentMQBuffer@1100281002 : Record 8016720;
      lwinHTTPService@1100281010 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lOutStream@1100281006 : OutStream;
      lInStream@1100281005 : InStream;
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<GetDocumentBinaryContent xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProvider <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProvider + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pFlowCode <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pFlowCode>' + pProvider + '</pFlowCode>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pFlowCode/>');
      END;
      lOutStream.WRITETEXT('<pDocEntryNo>' + FORMAT(pDocEntryNo) + '</pDocEntryNo>');
      lOutStream.WRITETEXT('<pAttachEntryNo>' + FORMAT(pAttachEntryNo) + '</pAttachEntryNo>');
      lOutStream.WRITETEXT('<pDocBinaryContent/>');

      lOutStream.WRITETEXT('</GetDocumentBinaryContent>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'GetDocumentBinaryContent_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'GetDocumentBinaryContent_Response.xml');
      HYPERLINK(pFileNameToExport + 'GetDocumentBinaryContent_Response.xml');
    END;

    PROCEDURE TestGetInvoiceList@1100281006(pFileNameToExport@1100281007 : Text[1024];pProviderNo@1100281000 : Code[20];pServiceHeaderNo@1100281001 : Code[20];pInterventionNo@1100281002 : Integer);
    VAR
      lSentMQBuffer@1100281004 : Record 8016720;
      lwinHTTPService@1100281011 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281009 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lOutStream@1100281003 : OutStream;
      lInStream@1100281005 : InStream;
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);
      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<GetInvoicesList xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pInterventionNo>' + FORMAT(pInterventionNo) + '</pInterventionNo>');
      lOutStream.WRITETEXT('<pDocumentList/>');

      lOutStream.WRITETEXT('</GetInvoicesList>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      // Envoi de la demande au webservice
      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'GetInvoicesList_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'GetInvoicesList_Response.xml');
      HYPERLINK(pFileNameToExport + 'GetInvoicesList_Response.xml');
    END;

    PROCEDURE TestGetInvoiceListProvider@1000000001(pFileNameToExport@1100281007 : Text[1024];pProviderNo@1100281000 : Code[20]);
    VAR
      lSentMQBuffer@1100281004 : Record 8016720;
      lwinHTTPService@1100281011 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281009 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lOutStream@1100281003 : OutStream;
      lInStream@1100281005 : InStream;
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);
      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<GetInvoicesListProvider xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      lOutStream.WRITETEXT('<pDocumentList/>');

      lOutStream.WRITETEXT('</GetInvoicesListProvider>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      // Envoi de la demande au webservice
      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'GetInvoicesListProvider_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'GetInvoicesListProvider_Response.xml');
      HYPERLINK(pFileNameToExport + 'GetInvoicesListProvider_Response.xml');
    END;

    PROCEDURE TestPathDoc@1100281002(pFileNameToExport@1100281007 : Text[1024]);
    VAR
      lSentMQBuffer@1100281004 : Record 8016720;
      lwinHTTPService@1100281011 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281009 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lOutStream@1100281003 : OutStream;
      lInStream@1100281005 : InStream;
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);
      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<TestPathDoc xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');
      lOutStream.WRITETEXT('</TestPathDoc>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      // Envoi de la demande au webservice
      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'TestPathDoc_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'TestPathDoc_Response.xml');
      HYPERLINK(pFileNameToExport + 'TestPathDoc_Response.xml');
    END;

    PROCEDURE GetDocAttachementFileName@1100281003();
    VAR
      lDocumentAttachment@1100281000 : Record 50021;
      lRecRef@1100281001 : RecordRef;
      lAttachTreeviewMgt@1100281002 : Codeunit 50001;
      lBigText@1100281003 : BigText;
      lOutStream@1100281006 : OutStream;
      lInstream@1100281007 : InStream;
      lFileName@1100281005 : Text[1024];
      lFile@1100281004 : File;
    BEGIN
      //GetOriginalRecRef("Referent Table No.","Key Integer 1","Key Integer 2","Key Code 1","Key Code 2",lRecRef);
      //lFromFileName := AttachTreeviewMgt.GetPathAndFileName(lAttachment,lRecRef);
      lDocumentAttachment.GET(5065,1048075,0,'','',1);
      lDocumentAttachment.SETRECFILTER;
      lRecRef.GETTABLE(lDocumentAttachment);
      MESSAGE('%1',lAttachTreeviewMgt.GetCompletFileName(lDocumentAttachment));

      IF lFile.OPEN(lAttachTreeviewMgt.GetCompletFileName(lDocumentAttachment)) THEN BEGIN
        lFile.CREATEINSTREAM(lInstream);
        lBigText.READ(lInstream);
        lFile.CLOSE;
      END;

      IF lBigText.LENGTH = 0 THEN
        EXIT;
      lFileName := GetTempFilename;
      IF lFile.CREATE(lFileName) THEN BEGIN
        lFile.CREATEOUTSTREAM(lOutStream);
        lBigText.WRITE(lOutStream);
        lFile.CLOSE;
      END;
      HYPERLINK(lFileName);
    END;

    LOCAL PROCEDURE GetTempFilename@9() FileName@1000 : Text[260];
    VAR
      I@1001 : Integer;
      DocNo@1002 : Text[30];
      TempFile@1100281000 : File;
      lText001@1100281001 : TextConst 'ENU=\Doc;FRA=\Doc';
    BEGIN
      TempFile.CREATETEMPFILE;
      FileName := TempFile.NAME + '.xml';
      TempFile.CLOSE;
      EXIT;
      REPEAT
        IF I <> 0 THEN
          DocNo := FORMAT(I);
        IF NOT ISSERVICETIER THEN BEGIN
          FileName := TEMPORARYPATH + lText001 + DocNo + '.xml';
        END ELSE BEGIN
          TempFile.CREATETEMPFILE;
          FileName := TempFile.NAME + '.' + '.xml';
          TempFile.CLOSE;
        END;

        IF NOT EXISTS(FileName) THEN
          EXIT;
        I := I +1;
      UNTIL I=999;
    END;

    LOCAL PROCEDURE FORMATBool@1100281020(pBoolean@1100281000 : Boolean) : Text[30];
    BEGIN
      IF pBoolean THEN BEGIN
        EXIT('true');
      END ELSE BEGIN
        EXIT('false');
      END;
    END;

    PROCEDURE TestGetUnrealizedIntervReason@1000000002(pFileNameToExport@1100281007 : Text[1024];pProviderNo@1100281018 : Code[20];pServiceHeaderNo@1100281017 : Code[20];pInterventionNo@1100281016 : Integer;pReasonCode@1100281015 : Text[80];pReasonDescription@1100281014 : Text[1024];pReplanDate@1100281013 : DateTime;pExtranetUserNo@1100281012 : Code[20];pExtranetUserName@1100281011 : Text[50];pExtranetUserFirstName@1100281003 : Text[50]);
    VAR
      lSentMQBuffer@1100281010 : Record 8016720;
      lwinHTTPService@1100281009 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281006 : File;
      lOutStream@1100281005 : OutStream;
      lInStream@1100281004 : InStream;
      lInStreamToAdd@1100281002 : InStream;
      lFilePathToAdd@1100281001 : Text[1024];
      lTempText@1100281000 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<GetUnrealizedIntervReason xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pInterventionNo>' + FORMAT(pInterventionNo) + '</pInterventionNo>');
      IF pReasonCode <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pReasonCode>' + pReasonCode + '</pReasonCode>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pReasonCode/>');
      END;

      IF pReasonDescription <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pReasonDescription>' + pReasonDescription + '</pReasonDescription>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pReasonDescription/>');
      END;
      IF pReplanDate <> 0DT THEN BEGIN
        lOutStream.WRITETEXT('<pReplanDate>' + FORMAT(pReplanDate,0,9) + '</pReplanDate>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pReplanDate/>');
      END;
      IF pExtranetUserNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo>' + pExtranetUserNo + '</pExtranetUserNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo/>');
      END;
      IF pExtranetUserName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName>' + pExtranetUserName + '</pExtranetUserName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName/>');
      END;
      IF pExtranetUserFirstName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName>' + pExtranetUserFirstName + '</pExtranetUserFirstName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName/>');
      END;

      lOutStream.WRITETEXT('</GetUnrealizedIntervReason>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'GetUnrealizedIntervReason_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'GetUnrealizedIntervReason_Response.xml');
      HYPERLINK(pFileNameToExport + 'GetUnrealizedIntervReason_Response.xml');
    END;

    PROCEDURE TestGetUnStartedTaskReason@1000000005(pFileNameToExport@1000000002 : Text[1024];pProviderNo@1100281018 : Code[20];pServiceHeaderNo@1100281017 : Code[20];pInterventionNo@1100281016 : Integer;pReasonDescription@1100281014 : Text[1024];pDetailReasonDescription@1000000000 : Text[1024];pNewExpectedStartDate@1100281013 : DateTime;pNewExpectedEndDate@1000000001 : DateTime;pExtranetUserNo@1100281012 : Code[20];pExtranetUserName@1100281011 : Text[50];pExtranetUserFirstName@1100281003 : Text[50]);
    VAR
      lSentMQBuffer@1100281010 : Record 8016720;
      lwinHTTPService@1100281009 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281006 : File;
      lOutStream@1100281005 : OutStream;
      lInStream@1100281004 : InStream;
      lInStreamToAdd@1100281002 : InStream;
      lFilePathToAdd@1100281001 : Text[1024];
      lTempText@1100281000 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<GetUnstartedTaskReason xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pInterventionNo>' + FORMAT(pInterventionNo) + '</pInterventionNo>');

      IF pReasonDescription <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pReasonDescription>' + pReasonDescription + '</pReasonDescription>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pReasonDescription/>');
      END;

      IF pDetailReasonDescription <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pDetailReasonDescription>' + pDetailReasonDescription + '</pDetailReasonDescription>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pDetailReasonDescription/>');
      END;

      IF pNewExpectedStartDate <> 0DT THEN BEGIN
        lOutStream.WRITETEXT('<NewExpectedStartDate>' + FORMAT(pNewExpectedStartDate,0,9) + '</NewExpectedStartDate>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<NewExpectedStartDate/>');
      END;
      IF pNewExpectedEndDate <> 0DT THEN BEGIN
        lOutStream.WRITETEXT('<NewExpectedEndDate>' + FORMAT(pNewExpectedEndDate,0,9) + '</NewExpectedEndDate>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<NewExpectedEndDate/>');
      END;

      IF pExtranetUserNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo>' + pExtranetUserNo + '</pExtranetUserNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo/>');
      END;
      IF pExtranetUserName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName>' + pExtranetUserName + '</pExtranetUserName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName/>');
      END;
      IF pExtranetUserFirstName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName>' + pExtranetUserFirstName + '</pExtranetUserFirstName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName/>');
      END;

      lOutStream.WRITETEXT('</GetUnstartedTaskReason>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'GetUnstartedTaskReason_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'GetUnstartedTaskReason_Response.xml');
      HYPERLINK(pFileNameToExport + 'GetUnstartedTaskReason_Response.xml');
    END;

    PROCEDURE TestGetUnplannedTaskReason@1000000006(pFileNameToExport@1000000001 : Text[1024];pProviderNo@1100281018 : Code[20];pServiceHeaderNo@1100281017 : Code[20];pInterventionNo@1100281016 : Integer;pReasonDescription@1100281014 : Text[1024];pDetailReasonDescription@1000000000 : Text[1024];pExtranetUserNo@1100281012 : Code[20];pExtranetUserName@1100281011 : Text[50];pExtranetUserFirstName@1100281003 : Text[50]);
    VAR
      lSentMQBuffer@1100281010 : Record 8016720;
      lwinHTTPService@1100281009 : Automation "{662901FC-6951-4854-9EB2-D9A2570F2B2E} 5.1:{2087C2F4-2CEF-4953-A8AB-66779B670495}:'Microsoft WinHTTP Services, version 5.1'.WinHttpRequest";
      lXmlDom@1100281008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
      lFileToAdd@1100281006 : File;
      lOutStream@1100281005 : OutStream;
      lInStream@1100281004 : InStream;
      lInStreamToAdd@1100281002 : InStream;
      lFilePathToAdd@1100281001 : Text[1024];
      lTempText@1100281000 : Text[1024];
    BEGIN

      lSentMQBuffer."XML Source".CREATEOUTSTREAM(lOutStream);

      lOutStream.WRITETEXT('<?xml version="1.0"  encoding="utf-8"?>');
      lOutStream.WRITETEXT('<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" ');
      lOutStream.WRITETEXT('xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" ');
      lOutStream.WRITETEXT('xmlns:xsd="http://www.w3.org/1999/XMLSchema"> ');
      lOutStream.WRITETEXT('<soap:Body>');
      lOutStream.WRITETEXT('<GetUnplannedTaskReason xmlns="urn:microsoft-dynamics-schemas/codeunit/ExtranetIntervention">');

      // ParamŠtre de fonction
      IF pProviderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pProviderNo>' + pProviderNo + '</pProviderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pProviderNo/>');
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo>' + pServiceHeaderNo + '</pServiceHeaderNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pServiceHeaderNo/>');
      END;
      lOutStream.WRITETEXT('<pInterventionNo>' + FORMAT(pInterventionNo) + '</pInterventionNo>');

      IF pReasonDescription <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pReasonDescription>' + pReasonDescription + '</pReasonDescription>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pReasonDescription/>');
      END;
      IF pDetailReasonDescription <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pDetailReasonDescription>' + pDetailReasonDescription + '</pDetailReasonDescription>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pDetailReasonDescription/>');
      END;

      IF pExtranetUserNo <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo>' + pExtranetUserNo + '</pExtranetUserNo>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserNo/>');
      END;
      IF pExtranetUserName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName>' + pExtranetUserName + '</pExtranetUserName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserName/>');
      END;
      IF pExtranetUserFirstName <> '' THEN BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName>' + pExtranetUserFirstName + '</pExtranetUserFirstName>');
      END ELSE BEGIN
        lOutStream.WRITETEXT('<pExtranetUserFirstName/>');
      END;

      lOutStream.WRITETEXT('</GetUnplannedTaskReason>');
      lOutStream.WRITETEXT('</soap:Body>');
      lOutStream.WRITETEXT('</soap:Envelope>');

      IF ISCLEAR(lwinHTTPService) THEN
        CREATE(lwinHTTPService);

      lwinHTTPService.Open('POST',WebServiceAddress,0);
      lwinHTTPService.SetAutoLogonPolicy(0);
      lwinHTTPService.SetRequestHeader('Content-type','text/xml; charset=UTF-8');
      lwinHTTPService.SetRequestHeader('SOAPAction','""');
      //The last parameter set to zero allows to wait till webservice finishes
      lwinHTTPService.SetTimeouts(10000,10000,10000,0);

      lSentMQBuffer.CALCFIELDS("XML Source");
      lSentMQBuffer."XML Source".EXPORT(pFileNameToExport + 'GetUnplannedTaskReasonn_Send.xml');
      lSentMQBuffer."XML Source".CREATEINSTREAM(lInStream);

      // Envoi de la demande au webservice
      lwinHTTPService.Send(lInStream);

      IF NOT lwinHTTPService.WaitForResponse(600) THEN ERROR('Request timed out.');

      CREATE(lXmlDom);
      lXmlDom.load(lwinHTTPService.ResponseStream);
      lXmlDom.save(pFileNameToExport + 'GetUnplannedTaskReason_Response.xml');
      HYPERLINK(pFileNameToExport + 'GetUnplannedTaskReason_Response.xml');
    END;

    BEGIN
    END.
  }
}