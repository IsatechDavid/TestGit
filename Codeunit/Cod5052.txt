OBJECT Codeunit 5052 AttachmentManagement
{
  OBJECT-PROPERTIES
  {
    Date=06/12/13;
    Time=11:08:45;
    Modified=Yes;
    Version List=NAVW16.00,IMH6.01.08,NEPIMH4;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Send attachments...\\;FRA=Envoi des documents joints...\\';
      Text001@1001 : TextConst 'ENU=Preparing;FRA=Pr‚paration';
      Text002@1002 : TextConst 'ENU=Deliver misc.;FRA=Envoi divers';
      Text005@1005 : TextConst 'ENU=\Attachment.%1;FRA=\Document joint.%1';
      Text008@1003 : TextConst 'ENU=You must select an interaction template with an attachment.;FRA=Vous devez s‚lectionner un modŠle d''interaction avec une piŠce jointe.';
      InteractionTemplate@1100281000 : Record 5064;
      HideDialog@1100281001 : Boolean;
      CompanyInfo@1100281002 : Record 79;

    PROCEDURE InsertAttachment@14(AttachmentNo@1000 : Integer) : Integer;
    VAR
      Attachment@1001 : Record 5062;
      Attachment3@1003 : Record 5062;
    BEGIN
      IF AttachmentNo <> 0 THEN BEGIN
        Attachment.GET(AttachmentNo);
        IF Attachment."Storage Type" = Attachment."Storage Type"::Embedded THEN
          Attachment.CALCFIELDS(Attachment);
        Attachment3 := Attachment; // Remember "from" attachment
      END;

      Attachment.INSERT(TRUE);

      IF AttachmentNo <> 0 THEN

        // New attachment is based on old attachment
        TransferAttachment(Attachment3,Attachment); // Transfer attachments of different types.

      EXIT(Attachment."No.");
    END;

    PROCEDURE Send@1(VAR DeliverySorter@1000 : Record 5074);
    VAR
      Attachment@1001 : Record 5062;
      TempDeliverySorterWord@1002 : TEMPORARY Record 5074;
      TempDeliverySorterOther@1003 : TEMPORARY Record 5074;
      InteractLogEntry@1004 : Record 5065;
      Contact@1005 : Record 5050;
      RBAutoMgt@1012 : Codeunit 419;
      WordManagement@1006 : Codeunit 5054;
      Mail@1007 : Codeunit 397;
      FileName@1008 : Text[260];
      Window@1009 : Dialog;
      NoOfAttachments@1010 : Integer;
      I@1011 : Integer;
      lDocumentAttachment@1100281000 : Record 50021;
    BEGIN
      //<<IMH02.ST
      HideDialog := NOT GUIALLOWED;
      IF NOT HideDialog THEN BEGIN
      //>>IMH02.ST
      Window.OPEN(
        Text000 +
        '#1############ @2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\' +
        '#3############ @4@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@');

      Window.UPDATE(1,Text001);
      Window.UPDATE(3,Text002);
      END; //IMH02.ST

      IF DeliverySorter.FIND('-') THEN BEGIN
        NoOfAttachments := DeliverySorter.COUNT;
        REPEAT
          DeliverySorter.TESTFIELD("Correspondence Type");
          //<<IMH05.PC
          IF DeliverySorter."Attach. Referent Table No." <> 0 THEN BEGIN
            IF NOT lDocumentAttachment.GET(
                     DeliverySorter."Attach. Referent Table No.",
                     DeliverySorter."Attach. Key Integer 1",
                     DeliverySorter."Attach. Key Integer 2",
                     DeliverySorter."Attach. Key Code 1",
                     DeliverySorter."Attach. Key Code 2",
                     DeliverySorter."Attachment No.")
            THEN BEGIN
              ERROR(Text008);
            END;
            IF UseComServer(lDocumentAttachment."File Extension",
              DeliverySorter."Correspondence Type" <> DeliverySorter."Correspondence Type"::"E-Mail")
            THEN BEGIN
              TempDeliverySorterWord := DeliverySorter;
              TempDeliverySorterWord.INSERT;
            END ELSE BEGIN
              TempDeliverySorterOther := DeliverySorter;
              TempDeliverySorterOther.INSERT;
            END;
          END ELSE BEGIN
          //>>IMH05.PC
            IF NOT Attachment.GET(DeliverySorter."Attachment No.") THEN
              ERROR(Text008);
            IF UseComServer(Attachment."File Extension",
              DeliverySorter."Correspondence Type" <> DeliverySorter."Correspondence Type"::"E-Mail")
            THEN BEGIN
              TempDeliverySorterWord := DeliverySorter;
              TempDeliverySorterWord.INSERT;
            END ELSE BEGIN
              TempDeliverySorterOther := DeliverySorter;
              TempDeliverySorterOther.INSERT;
            END;
          END;
          I := I + 1;
          IF NOT HideDialog THEN //IMH02.ST
          Window.UPDATE(2,ROUND(I / NoOfAttachments * 10000,1));
        UNTIL DeliverySorter.NEXT = 0;
      END;

      // MS Word merge
      IF TempDeliverySorterWord.FIND('-') THEN BEGIN
        WordManagement.SetInteractionTemplate(InteractionTemplate.Code);//IMH01
        WordManagement.Merge(TempDeliverySorterWord);
      END;
      // Deliver other types
      IF TempDeliverySorterOther.FIND('-') THEN BEGIN
        I := 0;
        NoOfAttachments := TempDeliverySorterOther.COUNT;
        REPEAT
          InteractLogEntry.LOCKTABLE;
          InteractLogEntry.GET(TempDeliverySorterOther."No.");
          IF TempDeliverySorterOther."Correspondence Type" = TempDeliverySorterOther."Correspondence Type"::"E-Mail" THEN BEGIN
            Attachment.GET(TempDeliverySorterOther."Attachment No.");
            Attachment.TESTFIELD("File Extension");
            FileName := RBAutoMgt.EnvironFileName(Text005,Attachment."File Extension");
            Attachment.ExportAttachment(FileName);
            Contact.GET(InteractLogEntry."Contact No.");
            Mail.NewMessage(InteractionEMail(InteractLogEntry),'',TempDeliverySorterOther.Subject,'',FileName,FALSE);
            Attachment.DeleteFile(FileName);
            InteractLogEntry."Delivery Status" := InteractLogEntry."Delivery Status"::" ";
            InteractLogEntry.MODIFY;
          END ELSE BEGIN
            InteractLogEntry."Delivery Status" := InteractLogEntry."Delivery Status"::Error;
            InteractLogEntry.MODIFY;
          END;
          COMMIT;
          I := I + 1;
          IF NOT HideDialog THEN //IMH02.ST
          Window.UPDATE(4,ROUND(I / NoOfAttachments * 10000,1));
        UNTIL TempDeliverySorterOther.NEXT = 0;
      END;
      IF NOT HideDialog THEN //IMH02.ST
      Window.CLOSE;
    END;

    PROCEDURE FileExtension@4(FileName@1001 : Text[260]) Extension@1000 : Text[260];
    VAR
      I@1002 : Integer;
    BEGIN
      I := STRLEN(FileName);
      WHILE COPYSTR(FileName,I,1) <> '.' DO
        I := I - 1;
      Extension := COPYSTR(FileName,I + 1,STRLEN(FileName) - I);
    END;

    LOCAL PROCEDURE TransferAttachment@5(FromAttachment@1000 : Record 5062;VAR ToAttachment@1001 : Record 5062);
    VAR
      RMSetup@1002 : Record 5079;
      FileName@1003 : Text[1024];
    BEGIN
      // Transfer attachments of different types

      IF (FromAttachment."Storage Type" = FromAttachment."Storage Type"::Embedded) AND
         (ToAttachment."Storage Type" = ToAttachment."Storage Type"::"Disk File")
      THEN BEGIN
        FileName := ToAttachment.ConstDiskFileName;
        FromAttachment.Attachment.EXPORT(FileName); // Export blob to UNC location
        WITH ToAttachment DO BEGIN
          CLEAR(Attachment);
          RMSetup.GET;
          RMSetup.TESTFIELD("Attachment Storage Location");
          "Storage Pointer" := RMSetup."Attachment Storage Location";
          MODIFY;
        END;
      END;

      IF (FromAttachment."Storage Type" = FromAttachment."Storage Type"::"Disk File") AND
         (ToAttachment."Storage Type" = ToAttachment."Storage Type"::"Disk File")
      THEN BEGIN
          // Copy external attachment (to new storage)
          RMSetup.GET;
          RMSetup.TESTFIELD("Attachment Storage Location");
          ToAttachment."Storage Pointer" := RMSetup."Attachment Storage Location";
          ToAttachment.MODIFY;
          FILE.COPY(FromAttachment.ConstDiskFileName,ToAttachment.ConstDiskFileName);
      END;

      IF (FromAttachment."Storage Type" = FromAttachment."Storage Type"::"Disk File") AND
         (ToAttachment."Storage Type" = ToAttachment."Storage Type"::Embedded)
      THEN BEGIN

        // Transfer External to Embedded attachment
        WITH ToAttachment DO BEGIN
          Attachment.IMPORT(FromAttachment.ConstDiskFileName); // Import file from UNC location
          "File Extension" := FromAttachment."File Extension";
          "Storage Pointer" := '';
          MODIFY;
        END;
      END;
    END;

    PROCEDURE UseComServer@2(FileExtension@1001 : Text[250];RequireAutomation@1002 : Boolean) : Boolean;
    VAR
      VersionNo@1004 : Decimal;
      DecimalSymbol@1007 : Text[1];
    BEGIN
      IF (UPPERCASE(FileExtension) <> 'DOC') AND
         (UPPERCASE(FileExtension) <> 'DOCX')
      THEN
        EXIT(FALSE);

      // 5.1 do not support Automation Server table. We assume that MS Word is installed and has a valid version.
      EXIT(TRUE);
    END;

    PROCEDURE InteractionEMail@6(VAR InteractLogEntry@1000 : Record 5065) : Text[80];
    VAR
      Cont@1001 : Record 5050;
      ContAltAddr@1002 : Record 5051;
      lInteractionTemp@1100281000 : Record 5064;
      lEmail@1100281001 : Text[80];
      lServiceHeader@1000000000 : Record 5900;
      lProductCatalog@1000000001 : Record 50060;
      lCorporateRegion@1000000002 : Record 50058;
      lCustomer@1000000003 : Record 18;
      lContactNo@1000000004 : Code[20];
    BEGIN
      //<<IMH07.ISAT.EBA
      ////<<IMH06
      //CompanyInformation.GET;
      //IF CompanyInformation."Activate E-mail Debug" THEN BEGIN
      //  EXIT(CompanyInformation."E-mail Debug");
      //END;
      ////<<IMH06

      CompanyInfo.GET;
      lEmail := CompanyInfo.GetDBTypeEmail;
      IF lEmail <> '' THEN
        EXIT(lEmail);
      //>>IMH07.ISAT.EBA
      IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, InteractLogEntry."Service Header No.") THEN
        IF lProductCatalog.GET(lServiceHeader."Corporate No.", lServiceHeader."Service Order Type") THEN
          IF lProductCatalog."Mail Object Auto" THEN
            IF lInteractionTemp.GET(InteractLogEntry."Interaction Template Code") THEN
              IF lInteractionTemp."Mail Object Auto" THEN
                IF lCorporateRegion.GET(lServiceHeader."Corporate No.", lServiceHeader."Corporate Region Code") THEN
                  IF lCustomer.GET(lCorporateRegion."Sell-to Customer No.") THEN BEGIN
                    lCustomer.GetContactNo(lContactNo);
                    IF Cont.GET(lContactNo) THEN
                      IF Cont."Declaration E-Mail" <> '' THEN BEGIN
                        EXIT(Cont."Declaration E-Mail");
                      END;
                  END;

      //<<IMH03
      IF lInteractionTemp.GET(InteractLogEntry."Interaction Template Code") THEN BEGIN
        Cont.GET(InteractLogEntry."Contact No.");
        IF lInteractionTemp."Service Contact Dest." = lInteractionTemp."Service Contact Dest."::"Declaration Contact" THEN
          IF Cont."Declaration E-Mail" <> '' THEN
            EXIT(Cont."Declaration E-Mail");
      END;
      //>>IMH03

      IF InteractLogEntry."Contact Alt. Address Code" = '' THEN BEGIN
        Cont.GET(InteractLogEntry."Contact No.");
        Cont.TESTFIELD("E-Mail"); //IMH04.ST
        EXIT(Cont."E-Mail");
      END ELSE BEGIN
        ContAltAddr.GET(InteractLogEntry."Contact No.",InteractLogEntry."Contact Alt. Address Code");
        IF ContAltAddr."E-mail" <> '' THEN
          EXIT(ContAltAddr."E-mail")
        ELSE BEGIN
          Cont.GET(InteractLogEntry."Contact No.");
          Cont.TESTFIELD("E-Mail"); //IMH04.ST
          EXIT(Cont."E-Mail");
        END;
      END;
    END;

    PROCEDURE InteractionCCEMail@1100281003(VAR pInteractLogEntry@1000 : Record 5065;VAR pTempCCContactList@1100281009 : Record 5050) rCCList : Text[1024];
    VAR
      lCont@1001 : Record 5050;
      lContAltAddr@1002 : Record 5051;
      lInteractionTemp@1100281000 : Record 5064;
      lEmail@1100281001 : Text[80];
      lService@1100281002 : Record 50066;
      lContBusRel@1100281003 : Record 5054;
      lServiceHeader@1000000000 : Record 5900;
      lIntervention@1100281004 : Record 50075;
      lProductCatalog@1000000001 : Record 50060;
      lCorporateRegion@1000000002 : Record 50058;
      lCustomer@1000000003 : Record 18;
      lContactNo@1000000004 : Code[20];
      lContactCompany@1100281005 : Record 5050;
      lServiceOrderType@1100281006 : Record 5903;
      lProvider@1100281007 : Record 50000;
      lUserSetup@1100281008 : Record 91;
      lProviderNo@1100281010 : Code[20];
    BEGIN
      //IMH08.ISAT.ZW

      CompanyInfo.GET;
      lEmail := CompanyInfo.GetDBTypeEmail;
      IF lEmail <> '' THEN
        EXIT;

      IF NOT lInteractionTemp.GET(pInteractLogEntry."Interaction Template Code") THEN
        EXIT;

      CASE lInteractionTemp."Service Contact Dest. CC" OF
        lInteractionTemp."Service Contact Dest. CC"::Beneficiairy : BEGIN
          IF lService.GET(pInteractLogEntry."Service No.") THEN
            lContactNo := lService."Contact No.";
        END;

        lInteractionTemp."Service Contact Dest. CC"::Corporate : BEGIN
          IF NOT lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, pInteractLogEntry."Service Header No.") THEN
            CLEAR(lServiceHeader);
          IF lServiceHeader."Corporate Contact No." <> '' THEN BEGIN
            lContactNo := lServiceHeader."Corporate Contact No.";
          END
          ELSE BEGIN
            lContBusRel.SETCURRENTKEY("Link to Table","No.");
            lContBusRel.SETRANGE("Link to Table", lContBusRel."Link to Table"::Customer);
            lContBusRel.SETRANGE("No.", lServiceHeader."Corporate No.");
            IF lContBusRel.FINDFIRST THEN BEGIN
              lContactNo := lContBusRel."Contact No.";
            END;
          END;
        END;

        lInteractionTemp."Service Contact Dest. CC"::Provider : BEGIN
          IF lIntervention.GET(pInteractLogEntry."Service Header No.", pInteractLogEntry."Intervention Line No.") THEN BEGIN
            lIntervention.TESTFIELD("Provider No.");
            lContactNo := lIntervention."Provider No.";

            lContactCompany.GET(lContactNo);

            lCont.RESET;
            lCont.SETCURRENTKEY("Company No.");
            lCont.SETRANGE("Company No.",lContactNo);
            lCont.SETRANGE("Preferred Contact DGS",TRUE);
            IF NOT lCont.ISEMPTY THEN
              IF lCont.FINDFIRST THEN
                lContactNo := lCont."No.";
          END ELSE BEGIN
            IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, pInteractLogEntry."Service Header No.") THEN
              IF lServiceOrderType.GET(lServiceHeader."Service Order Type") THEN BEGIN
                IF lServiceOrderType."Provider Search" = lServiceOrderType."Provider Search"::UniqueProvider THEN
                  IF lProvider.GET(lServiceOrderType."Provider No.") THEN BEGIN
                    lContactNo := lServiceOrderType."Provider No.";
                  END;
              //<<IMH09
              END;
              IF lContactNo = '' THEN BEGIN
                IF lServiceHeader."Provider No." <> '' THEN BEGIN
                  lContactNo := lServiceHeader."Provider No.";

                  IF lContactCompany.GET(lContactNo) THEN;

                  lCont.RESET;
                  lCont.SETCURRENTKEY("Company No.");
                  lCont.SETRANGE("Company No.",lContactNo);
                  lCont.SETRANGE("Preferred Contact DGS",TRUE);
                  IF NOT lCont.ISEMPTY THEN
                    IF lCont.FINDFIRST THEN
                      lContactNo := lCont."No.";
                END;
              END;
              //>>IMH09
          END;
        END;
        lInteractionTemp."Service Contact Dest. CC"::"Declaration Contact" : BEGIN
          IF NOT lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, pInteractLogEntry."Service Header No.") THEN
            CLEAR(lServiceHeader);
          IF lServiceHeader."Declaration Contact No." <> '' THEN BEGIN
            lContactNo := lServiceHeader."Declaration Contact No.";
          END ELSE BEGIN
            lContactNo := lServiceHeader.GetDeclarationContact(lServiceHeader."Corporate No.");
          END;
        END;
        lInteractionTemp."Service Contact Dest. CC"::"Corporate Region" : BEGIN
          IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, pInteractLogEntry."Service Header No.") THEN
            IF lCorporateRegion.GET(lServiceHeader."Corporate No.", lServiceHeader."Corporate Region Code") THEN BEGIN
              lContBusRel.SETCURRENTKEY("Link to Table","No.");
              lContBusRel.SETRANGE("Link to Table", lContBusRel."Link to Table"::Customer);
              lContBusRel.SETRANGE("No.", lCorporateRegion."Sell-to Customer No.");
              IF lContBusRel.FINDFIRST THEN BEGIN
                lContactNo := lContBusRel."Contact No.";
              END;
            END;
        END;
        lInteractionTemp."Service Contact Dest. CC"::"Network Facilitator" : BEGIN
          IF lIntervention.GET(pInteractLogEntry."Service Header No.", pInteractLogEntry."Intervention Line No.") THEN BEGIN
            lIntervention.TESTFIELD("Provider No.");
            lProviderNo := lIntervention."Provider No.";
          //<<IMH09
          END ELSE BEGIN
            IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, pInteractLogEntry."Service Header No.") THEN BEGIN
              IF lServiceOrderType.GET(lServiceHeader."Service Order Type") THEN BEGIN
                IF lServiceOrderType."Provider Search" = lServiceOrderType."Provider Search"::UniqueProvider THEN
                  lProviderNo := lServiceOrderType."Provider No.";
              END;
              IF lProviderNo = '' THEN
                IF lServiceHeader."Provider No." <> '' THEN
                  lProviderNo := lServiceHeader."Provider No.";
            END;
          END;
          IF lProviderNo <> '' THEN BEGIN
            lProvider.GET(lProviderNo);
      //<<IMH10.ST
      //      IF lUserSetup.GET(lProvider."Regional Coordinator") THEN BEGIN
            IF lUserSetup.GET(lProvider."Network Facilitator") THEN BEGIN
      //>>IMH10.ST
              lUserSetup.CALCFIELDS("Contact No.");
              lUserSetup.TESTFIELD("Contact No.");
              IF lCont.GET(lUserSetup."Contact No.") THEN
                lContactNo := lCont."No.";
            END;
          END;
          //>>IMH09
        END;
      END;

      CASE  lInteractionTemp."Service Contact Dest. CC" OF
        lInteractionTemp."Service Contact Dest. CC"::"Declaration Contact" : BEGIN
          IF lCont.GET(lContactNo) THEN
            IF lCont."Declaration E-Mail" <> '' THEN BEGIN
              rCCList := lCont."Declaration E-Mail";
              pTempCCContactList := lCont;
              pTempCCContactList."E-Mail" := lCont."Declaration E-Mail";
              pTempCCContactList.INSERT;
            END ELSE BEGIN
              lCont.TESTFIELD("E-Mail");
              rCCList := lCont."E-Mail";
              pTempCCContactList := lCont;
              pTempCCContactList.INSERT;
            END;
        END;
        lInteractionTemp."Service Contact Dest. CC"::CGF : BEGIN
          IF CompanyInfo."DFC E-Mail" <> '' THEN BEGIN
            pTempCCContactList."No." := 'CGF';
            pTempCCContactList."E-Mail" := CompanyInfo."DFC E-Mail";
            pTempCCContactList.INSERT;
          END;
        END;
        ELSE BEGIN
          IF lCont.GET(lContactNo) THEN BEGIN
            lCont.TESTFIELD("E-Mail");
            rCCList := lCont."E-Mail";
            pTempCCContactList := lCont;
            pTempCCContactList.INSERT;
          END;
        END;
      END;
    END;

    PROCEDURE InteractionFax@7(VAR InteractLogEntry@1000 : Record 5065) : Text[30];
    VAR
      Cont@1001 : Record 5050;
      ContAltAddr@1002 : Record 5051;
      lMarketingSetup@1100281000 : Record 5079;
      lEmailFax@1100281001 : Text[80];
    BEGIN
      //<<IMH07.ISAT.EBA
      ////<<IMH06
      //CompanyInformation.GET;
      //IF CompanyInformation."Activate Fax Debug" THEN BEGIN
      //  EXIT(CompanyInformation."Fax Debug");
      //END;
      //<<IMH06

      CompanyInfo.GET;
      lEmailFax := CompanyInfo.GetDBTypeEmailFax;
      IF lEmailFax <> '' THEN
        EXIT(lEmailFax);
      //>>IMH07.ISAT.EBA

      lMarketingSetup.GET; //IMH04.ST
      IF InteractLogEntry."Contact Alt. Address Code" = '' THEN BEGIN
        Cont.GET(InteractLogEntry."Contact No.");
      //<<IMH04.ST
        Cont.TESTFIELD("Fax No.");
        IF lMarketingSetup."Fax via E-mail" THEN
          EXIT(DELCHR(Cont."Fax No.", '=', ' ') + lMarketingSetup."Fax E-mail Address Extension")
        ELSE
      //>>IMH04.ST
          EXIT(Cont."Fax No.");
      END ELSE BEGIN
        ContAltAddr.GET(InteractLogEntry."Contact No.",InteractLogEntry."Contact Alt. Address Code");
        IF ContAltAddr."Fax No." <> '' THEN BEGIN
      //<<IMH04.ST
          IF lMarketingSetup."Fax via E-mail" THEN
            EXIT(DELCHR(ContAltAddr."Fax No.", '=', ' ') + lMarketingSetup."Fax E-mail Address Extension")
          ELSE
      //>>IMH04.ST
          EXIT(ContAltAddr."Fax No.")
        END ELSE BEGIN
          Cont.GET(InteractLogEntry."Contact No.");
      //<<IMH04.ST
          Cont.TESTFIELD("Fax No.");
          IF lMarketingSetup."Fax via E-mail" THEN
            EXIT(DELCHR(Cont."Fax No.", '=', ' ') + lMarketingSetup."Fax E-mail Address Extension")
          ELSE
      //>>IMH04.ST
          EXIT(Cont."Fax No.");
        END;
      END;
    END;

    PROCEDURE SetInteractionTemplate@1100281000(pInteractionTemplateCode@1100281000 : Code[10]);
    BEGIN
      //IMH01
      IF NOT InteractionTemplate.GET(pInteractionTemplateCode) THEN
        CLEAR(InteractionTemplate);
    END;

    PROCEDURE SegLineEMail@1100281002(VAR pSegLine@1000 : Record 5077) : Text[80];
    VAR
      lInteraction@1100281001 : Record 5065;
    BEGIN
      //IMH04.ST
      lInteraction."Contact No." := pSegLine."Contact No.";
      lInteraction."Contact Alt. Address Code" := pSegLine."Contact Alt. Address Code";
      lInteraction."Interaction Template Code" := pSegLine."Interaction Template Code";
      lInteraction."Service Header No." := pSegLine."Service Header No.";
      EXIT(InteractionEMail(lInteraction));
    END;

    PROCEDURE SegLineFax@1100281001(VAR pSegLine@1000 : Record 5077) : Text[30];
    VAR
      lInteraction@1100281000 : Record 5065;
    BEGIN
      //IMH04.ST
      lInteraction."Contact No." := pSegLine."Contact No.";
      lInteraction."Contact Alt. Address Code" := pSegLine."Contact Alt. Address Code";
      lInteraction."Interaction Template Code" := pSegLine."Interaction Template Code";
      EXIT(InteractionFax(lInteraction));
    END;

    BEGIN
    {
      /** @r IMH10 @d 15/10/13 @a ISAT.ST @v IMH6.01.353 @s Reorganisation region IMH @h 4802 @c CC de mail au CPR */
      /** @r IMH09 @d 04/03/13 @a ISAT.ZW @v IMH6.01.340 @s NEP IMH 4 @h 4264 @c Gestion Destinataire en copie prestataire sur les LP */
      /** @r IMH08 @d 06/09/12 @a ISAT.ZW @v IMH6.01.226 @s version 1.4 @h 3444
          @c Gestion champ Destinataire Service en copie */
      /** @r IMH07 @d 06/09/11 @a ISAT.EBA @v IMH6.01.200 @s Type de base */
      /** @r IMH06 @d 29/08/11 @a ISAT.ZW @v IMH6.01.108 @d Interactions @c Email/fax Mode debug */
      /** @r IMH05 @d 28/08/11 @a ISAT.PC @v IMH6.01.108 @s Interactions @c Gestion de la fct renvoyer report 5183 */
      /** @r IMH04 @d 11/07/11 @a ISAT.ST @v IMH6.01.108 @s Interactions @c Test emailn, gestion interaction fax */
      /** @r IMH03 @d 24/03/11 @a ISAT.ZW @v IMH6.01.108 @d Interactions @c Email declaration contact */
      /** @r IMH02 @d 25/01/11 @a ISAT.ST @v IMH6.01.108 @s Interactions @c Gestion du HideDialog */
      /** @r IMH01 @d 22/12/10 @a ISAT.LLT @v IMH6.01.108 @d Interactions @c Suivi du modŠle d'interaction */
    }
    END.
  }
}