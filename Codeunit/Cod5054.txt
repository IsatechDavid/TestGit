OBJECT Codeunit 5054 WordManagement
{
  OBJECT-PROPERTIES
  {
    Date=12/12/13;
    Time=14:28:15;
    Modified=Yes;
    Version List=NAVW16.00.01,IMH6.01.08;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text003@1003 : TextConst 'ENU=Merging Microsoft Word Documents...\\;FRA=Fusion des documents Microsoft Word...\\';
      Text004@1004 : TextConst 'ENU=Preparing;FRA=Pr‚paration';
      Text005@1005 : TextConst 'ENU=Program status;FRA=Statut programme';
      Text006@1006 : TextConst 'ENU=Preparing Merge...;FRA=Pr‚paration de la fusion...';
      Text007@1007 : TextConst 'ENU=Waiting for print job...;FRA=Impression...';
      Text008@1008 : TextConst 'ENU=Transferring %1 data to Microsoft Word...;FRA=Transfert des donn‚es %1 vers Microsoft Word...';
      Text010@1010 : TextConst 'ENU=%1 %2 must have %3 DOC.;FRA=%1 %2 doit avoir %3 DOC.';
      Text011@1011 : TextConst 'ENU=Attachment file error;FRA=Erreur fichier attach‚';
      Text012@1012 : TextConst 'ENU=Creating merge source...;FRA=Cr‚ation en cours...';
      Text013@1013 : TextConst 'ENU=Microsoft Word is opening merge source...;FRA=Microsoft Word ouvre les fichiers source...';
      Text014@1014 : TextConst 'ENU=Merging %1 in Microsoft Word...;FRA=Fusion de %1 dans Microsoft Word...';
      Text015@1015 : TextConst 'ENU=FaxMailTo;FRA=DestinataireT‚l‚copieEMail';
      Text017@1017 : TextConst 'ENU=The merge source file is locked by another process.\;FRA=Le fichier source est verrouill‚ par un autre programme.\';
      Text018@1018 : TextConst 'ENU=Please try again later.;FRA=Veuillez r‚essayer ult‚rieurement.';
      Text019@1019 : TextConst 'ENU=" Mail Address";FRA=" Adresse courrier"';
      Text020@1020 : TextConst 'ENU="Document ";FRA="Document "';
      Text021@1021 : TextConst 'ENU="Import attachment ";FRA="Importer document joint "';
      Text022@1022 : TextConst 'ENU=Delete %1?;FRA=Souhaitez-vous supprimer %1 ?';
      Text023@1023 : TextConst 'ENU=Another user has modified the record for this %1\after you retrieved it from the database.\\;FRA=Un autre utilisateur a modifi‚ cet enregistrement pour ce %1\aprŠs son extraction de la base de donn‚es.\\';
      Text025@1025 : TextConst 'ENU=Enter the changes again in the updated document.;FRA=Entrez … nouveau les modifications dans la version modifi‚e du document.';
      Text027@1027 : TextConst 'ENU=\Doc;FRA=\Doc';
      Text029@1029 : TextConst 'ENU=\MergeSource;FRA=\FusionSource';
      InteractionTemplate@1100281002 : Record 5064;
      Window@1034 : Dialog;
      AttachmentManagement@1035 : Codeunit 5052;
      Text030@1001 : TextConst 'ENU=Formal Salutation;FRA=Formule formelle';
      Text031@1000 : TextConst 'ENU=Informal Salutation;FRA=Formule informelle';
      MergeSourceBufferFileName@1002 : Text[260];
      MergeSourceBufferFile@1016 : File;
      Text032@1024 : TextConst 'ENU=*.htm|*.htm;FRA=*.htm|*.htm';
      Text033@1026 : TextConst 'ENU=*.doc|*.doc;FRA=*.doc|*.doc';
      Text034@1028 : TextConst 'ENU=Download data source file;FRA=T‚l‚charger fichier source donn‚es';
      Text035@1030 : TextConst 'ENU=Download main mail merge file;FRA=T‚l‚charger fichier de fusion et publipostage principal';
      Text036@1031 : TextConst 'ENU=Save main mail merge file to the database;FRA=Enregistrer fichier de fusion et publipostage principal dans la base de donn‚es';
      Text037@1032 : TextConst 'ENU=Default.doc;FRA=Default.doc';
      Text038@1033 : TextConst 'ENU=You are accessing the Mail Merge functionality that allows you to create and edit messages. To continue working, download the template and data files.;FRA=Vous acc‚dez … la fonctionnalit‚ Fusion et publipostage qui permet de cr‚er et de modifier des messages. Pour continuer, t‚l‚chargez les fichiers de modŠle et de donn‚es.';
      Text039@1036 : TextConst 'ENU=Do you want to upload the modified template file to the server?;FRA=Voulez-vous t‚l‚charger le fichier de modŠle modifi‚ sur le serveur ?';
      RBAutoMgt@1040 : Codeunit 419;
      Text040@1100281000 : TextConst 'ENU=\Attachment.%1;FRA=\Document joint.';
      wdExportFormatPDF@1100281001 : Integer;
      Text041@1100281003 : TextConst 'ENU=Error, incorrect table;FRA=Erreur … la g‚n‚ration du document, table incorrecte';
      HideDialog@1100281004 : Boolean;
      Text50000@1100281005 : TextConst 'ENU=Attachment;FRA=DocumentJoint';
      Text50001@1100281006 : TextConst 'ENU=No document to send.;FRA=Aucun document … envoyer.';
      Text50002@1100281007 : TextConst 'ENU=E-mail address is not valid.;FRA=L''adresse mail n''est pas correcte.';
      DocIsImported@1100281008 : Boolean;
      Text50010@1100281009 : TextConst 'ENU=Built Field %1;FRA=Champ construit %1';
      Text50011@1100281016 : TextConst 'ENU=Quote %1;FRA=Devis %1';
      Text50012@1100281010 : TextConst 'ENU=Address %1;FRA=Lieu %1';
      Text50013@1100281011 : TextConst 'ENU=Detail %1;FRA=D‚tail %1';
      Text50014@1100281012 : TextConst 'ENU=Speciality %1;FRA=Sp‚cialit‚ %1';
      Text50015@1100281013 : TextConst 'ENU=Comment %1;FRA=Commentaire %1';
      Text50016@1100281014 : TextConst 'ENU=Options;FRA=Options';
      CharVT@1100281015 : Char;
      MergeFieldText@1100281018 : TextConst 'ENU=MERGEFIELD;FRA=MERGEFIELD';
      CharSpecFieldFusionWord@1100281017 : TextConst 'ENU=ø-();FRA=ø-()';
      TextFieldIncorrect@1100281019 : TextConst 'FRA="Champs incorrects : "';
      Text50017@1100281020 : TextConst 'ENU=Verification success.;FRA=V‚rification r‚ussite.';
      Text50018@1000000000 : TextConst 'ENU=Do you want to add attachments ?;FRA=Souhaitez-vous ajouter des piŠces jointes ?';
      Mail@1100281021 : Codeunit 397;
      Text50019@1100281022 : TextConst 'ENU=The intervention No. is obligatory.;FRA=Le nø intervention est obligatoire.';

    PROCEDURE CreateWordAttachment@13(WordCaption@1001 : Text[260]) NewAttachNo@1000 : Integer;
    VAR
      Attachment@1002 : Record 5062;
      AttachmentManagement@1003 : Codeunit 5052;
      wrdApp@1009 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{000209FF-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      wrdDoc@1008 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{00020906-0000-0000-C000-000000000046}:Unknown Automation Server.Document";
      wrdMergefile@1007 : Automation "{3C2554FE-2B41-4543-B3E8-E64296773DA5} 2.0:{40D88563-F0DA-4B3D-AD1B-34EFA8C3978A}:Unknown Automation Server.MergeHandler";
      FileName@1004 : Text[260];
      MergeFileName@1005 : Text[260];
      ParamInt@1006 : Integer;
    BEGIN
      IF ISCLEAR(wrdMergefile) THEN
        CREATE(wrdMergefile,FALSE,TRUE);

      MergeFileName := RBAutoMgt.ClientTempFileName(Text029,'.HTM');
      CreateHeader(wrdMergefile,TRUE,MergeFileName); // Header without data

      IF ISCLEAR(wrdApp) THEN
        CREATE(wrdApp,FALSE,TRUE);
      Attachment."File Extension" := GetWordDocExt(wrdApp.Version);
      wrdDoc := wrdApp.Documents.Add;
      wrdDoc.MailMerge.MainDocumentType := 0; // 0 = wdFormLetters
      ParamInt := 7; // 7 = HTML
      wrdDoc.MailMerge.OpenDataSource(MergeFileName,ParamInt);

      FileName := Attachment.ConstFilename;
      wrdDoc.SaveAs(FileName);
      IF WordHandler(wrdDoc,Attachment,WordCaption,FALSE,FileName,FALSE) THEN
        NewAttachNo := Attachment."No."
      ELSE
        NewAttachNo := 0;

      CLEAR(wrdMergefile);
      CLEAR(wrdDoc);
      CLEAR(wrdApp);

      DeleteFile(MergeFileName);
    END;

    PROCEDURE OpenWordAttachment@5(VAR Attachment@1000 : Record 5062;FileName@1001 : Text[260];Caption@1002 : Text[260];IsTemporary@1003 : Boolean);
    VAR
      wrdApp@1009 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{000209FF-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      wrdDoc@1008 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{00020906-0000-0000-C000-000000000046}:Unknown Automation Server.Document";
      wrdMergefile@1007 : Automation "{3C2554FE-2B41-4543-B3E8-E64296773DA5} 2.0:{40D88563-F0DA-4B3D-AD1B-34EFA8C3978A}:Unknown Automation Server.MergeHandler";
      ParamFalse@1004 : Boolean;
      MergeFileName@1005 : Text[260];
      ParamInt@1006 : Integer;
    BEGIN
      IF ISCLEAR(wrdMergefile) THEN
        CREATE(wrdMergefile,FALSE,TRUE);

      MergeFileName := RBAutoMgt.ClientTempFileName(Text029,'.HTM');
      CreateHeader(wrdMergefile,TRUE,MergeFileName);

      IF ISCLEAR(wrdApp) THEN
        CREATE(wrdApp,FALSE,TRUE);
      ParamFalse := FALSE;
      wrdDoc := wrdApp.Documents.Open(FileName,ParamFalse,Attachment."Read Only");
      IF wrdDoc.MailMerge.MainDocumentType = -1 THEN BEGIN
        wrdDoc.MailMerge.MainDocumentType := 0; // 0 = wdFormLetters
        wrdDoc.MailMerge.OpenDataSource(MergeFileName,ParamInt);
      END;

      IF wrdDoc.MailMerge.Fields.Count > 0 THEN BEGIN
        ParamInt := 7; // 7 = HTML
        wrdDoc.MailMerge.OpenDataSource(MergeFileName,ParamInt);
      END;

      WordHandler(wrdDoc,Attachment,Caption,IsTemporary,FileName,FALSE);

      CLEAR(wrdMergefile);
      CLEAR(wrdDoc);
      CLEAR(wrdApp);

      DeleteFile(MergeFileName);
    END;

    PROCEDURE Merge@1(VAR TempDeliverySorter@1000 : TEMPORARY Record 5074);
    VAR
      TempDeliverySorter2@1001 : TEMPORARY Record 5074;
      wrdApp@1012 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{000209FF-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      LastAttachmentNo@1002 : Integer;
      LastCorrType@1003 : Integer;
      LastSubject@1004 : Text[50];
      LastSendWordDocsAsAttmt@1005 : Boolean;
      LineCount@1006 : Integer;
      NoOfRecords@1007 : Integer;
      WordHided@1008 : Boolean;
      Param@1009 : Boolean;
      FirstRecord@1010 : Boolean;
      lLastAttachKeyInt1@1100281000 : Integer;
      lLastAttachKeyInt2@1100281001 : Integer;
      lLastAttachKeyCode1@1100281002 : Code[20];
      lLastAttachKeyCode2@1100281003 : Code[20];
      lLastAttachtableRef@1100281004 : Integer;
    BEGIN
      //<<IMH05.ST
      IF NOT HideDialog THEN
        HideDialog := NOT GUIALLOWED;
      IF NOT HideDialog THEN BEGIN
      //>>IMH05.ST
      Window.OPEN(
        Text003 +
        '#1############ @2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\' +
        '#3############ @4@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\\' +
        '#5############ #6################################');

      Window.UPDATE(1,Text004);
      Window.UPDATE(5,Text005);
      //<<IMH05.ST
      END;
      IF NOT GUIALLOWED THEN BEGIN
        CODEUNIT.RUN(CODEUNIT::"NAS Office Appl Mgt"); // lance word attach‚ au service
      END;
      //>>IMH05.ST
      IF ISCLEAR(wrdApp) THEN
        CREATE(wrdApp,FALSE,TRUE);
      IF wrdApp.Documents.Count > 0 THEN BEGIN
        wrdApp.Visible := FALSE;
        WordHided := TRUE;
      END;
      IF NOT HideDialog THEN //IMH05.ST
      Window.UPDATE(6,Text006);
      //<<IMH01 isat.zw
      //TempDeliverySorter.SETCURRENTKEY(
      //  "Attachment No.","Correspondence Type",Subject,"Send Word Docs. as Attmt.");
      TempDeliverySorter.SETCURRENTKEY("Attach. Referent Table No.",
        "Attach. Key Integer 1", "Attach. Key Integer 2",
        "Attach. Key Code 1", "Attach. Key Code 2",
        "Attachment No.","Correspondence Type",Subject,"Send Word Docs. as Attmt.");
      //>>IMH01 isat.zw

      //TempDeliverySorter.SETFILTER(TempDeliverySorter."Correspondence Type",'<>0'); //IMH06 d‚sactiv‚

      NoOfRecords := TempDeliverySorter.COUNT;
      TempDeliverySorter.FIND('-');
      FirstRecord := TRUE;
      REPEAT
        LineCount := LineCount + 1;
        IF NOT HideDialog THEN BEGIN //IMH05.ST
        Window.UPDATE(2,ROUND(LineCount / NoOfRecords * 10000,1));
        Window.UPDATE(3,STRSUBSTNO('%1',TempDeliverySorter."Correspondence Type"));
        END; //IMH05.ST
        IF NOT FirstRecord AND
          ((TempDeliverySorter."Attach. Referent Table No." <> lLastAttachtableRef) OR
          (TempDeliverySorter."Attach. Key Integer 1" <> lLastAttachKeyInt1) OR //IMH01 isat.zw
          (TempDeliverySorter."Attach. Key Integer 2" <> lLastAttachKeyInt2) OR  //IMH01 isat.zw
          (TempDeliverySorter."Attach. Key Code 1" <> lLastAttachKeyCode1) OR  //IMH01 isat.zw
          (TempDeliverySorter."Attach. Key Code 2" <> lLastAttachKeyCode2) OR  //IMH01 isat.zw
          ((TempDeliverySorter."Attachment No." <> LastAttachmentNo)) OR
          ((TempDeliverySorter."Correspondence Type" <> LastCorrType)) OR
          ((TempDeliverySorter.Subject <> LastSubject)) OR
          ((TempDeliverySorter."Send Word Docs. as Attmt." <> LastSendWordDocsAsAttmt)))
        THEN BEGIN
          ExecuteMerge(wrdApp,TempDeliverySorter2);
          TempDeliverySorter2.DELETEALL;
          IF ((TempDeliverySorter."Attachment No." <> LastAttachmentNo) OR
             (TempDeliverySorter."Attach. Referent Table No." <> lLastAttachtableRef) OR
             (TempDeliverySorter."Attach. Key Integer 1" <> lLastAttachKeyInt1) OR //IMH01 isat.zw
             (TempDeliverySorter."Attach. Key Integer 2" <> lLastAttachKeyInt2) OR  //IMH01 isat.zw
             (TempDeliverySorter."Attach. Key Code 1" <> lLastAttachKeyCode1) OR  //IMH01 isat.zw
             (TempDeliverySorter."Attach. Key Code 2" <> lLastAttachKeyCode2))  //IMH01 isat.zw
            THEN
            ; // supprim‚ par l'execute merge
      //      ImportMergeSourceFileByDocAtt(lLastAttachtableRef, lLastAttachKeyInt1, lLastAttachKeyInt2,
      //                             lLastAttachKeyCode1, lLastAttachKeyCode2, LastAttachmentNo);
        END;

        TempDeliverySorter2 := TempDeliverySorter;
        TempDeliverySorter2.INSERT;
        //<<IMH01 isat.zw
        lLastAttachtableRef := TempDeliverySorter."Attach. Referent Table No.";
        lLastAttachKeyInt1 := TempDeliverySorter."Attach. Key Integer 1";
        lLastAttachKeyInt2 := TempDeliverySorter."Attach. Key Integer 2";
        lLastAttachKeyCode1 := TempDeliverySorter."Attach. Key Code 1";
        lLastAttachKeyCode2 := TempDeliverySorter."Attach. Key Code 2";
        //>>IMH01 isat.zw
        LastAttachmentNo := TempDeliverySorter."Attachment No.";
        LastCorrType := TempDeliverySorter."Correspondence Type";
        LastSubject := TempDeliverySorter.Subject;
        LastSendWordDocsAsAttmt := TempDeliverySorter."Send Word Docs. as Attmt.";

        FirstRecord := FALSE;
      UNTIL TempDeliverySorter.NEXT = 0;
      IF TempDeliverySorter2.FIND('-') THEN BEGIN
        ExecuteMerge(wrdApp,TempDeliverySorter2);
       // supprim‚ par l'execute merge
      //  ImportMergeSourceFileByDocAtt(TempDeliverySorter2."Attach. Referent Table No.",
      //                        TempDeliverySorter2."Attach. Key Integer 1", TempDeliverySorter2."Attach. Key Integer 2",
      //                        TempDeliverySorter2."Attach. Key Code 1", TempDeliverySorter2."Attach. Key Code 2",
      //                        TempDeliverySorter2."Attachment No.");
      END;
      IF WordHided THEN
        wrdApp.Visible := TRUE
      //DEBUG  wrdApp.Visible := GUIALLOWED
      ELSE BEGIN

        // Wait for print job to finish
        IF wrdApp.BackgroundPrintingStatus <> 0 THEN
          REPEAT
            IF NOT HideDialog THEN //IMH05.ST
            Window.UPDATE(6,Text007);
            SLEEP(500);
          UNTIL wrdApp.BackgroundPrintingStatus = 0;

        IF GUIALLOWED THEN BEGIN //DEBUG.ST
        Param := FALSE;
        wrdApp.Quit(Param)
        END; //DEBUG.ST
      END;
      CLEAR(wrdApp);
      IF NOT HideDialog THEN //IMH05.ST
      Window.CLOSE;
    END;

    LOCAL PROCEDURE ExecuteMerge@6(VAR wrdApp@1021 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{000209FF-0000-0000-C000-000000000046}:Unknown Automation Server.Application";VAR TempDeliverySorter@1000 : Record 5074);
    VAR
      lAttachmentDoc@1001 : Record 50021;
      InteractLogEntry@1002 : Record 5065;
      Salesperson@1003 : Record 13;
      Country@1004 : Record 9;
      Country2@1005 : Record 9;
      Contact@1006 : Record 5050;
      CompanyInfo@1007 : Record 79;
      lInteractionTemplate@1100281007 : Record 5064;
      wrdDoc@1020 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{00020906-0000-0000-C000-000000000046}:Unknown Automation Server.Document";
      wrdMergefile@1019 : Automation "{3C2554FE-2B41-4543-B3E8-E64296773DA5} 2.0:{40D88563-F0DA-4B3D-AD1B-34EFA8C3978A}:Unknown Automation Server.MergeHandler";
      wrdOLEFormat@1027 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{00020933-0000-0000-C000-000000000046}:Unknown Automation Server.OLEFormat";
      FormatAddr@1008 : Codeunit 365;
      FolderMgt@1100281005 : Codeunit 50004;
      MergeFileName@1010 : Text[260];
      MainFileName@1011 : Text[260];
      MainFileNamePDF@1100281004 : Text[260];
      NoOfRecords@1012 : Integer;
      ParamBln@1013 : Boolean;
      ParamInt@1014 : Integer;
      ContAddr@1015 : ARRAY [8] OF Text[50];
      ContAddr2@1022 : ARRAY [8] OF Text[50];
      MultiAddress@1016 : ARRAY [2] OF Text[260];
      i@1017 : Integer;
      Row@1018 : Integer;
      wrdLinkFormat@1023 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{00020931-0000-0000-C000-000000000046}:Unknown Automation Server.LinkFormat";
      MergeFile@1025 : File;
      ShapesIndex@1024 : Integer;
      HeaderIsReady@1026 : Boolean;
      lAttachmentMgt@1100281000 : Codeunit 50002;
      lFieldCount@1100281003 : Integer;
      lFile@1100281001 : File;
      lDocClosed@1100281002 : Boolean;
      lwrdDoc2@1100281008 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{00020906-0000-0000-C000-000000000046}:Unknown Automation Server.Document";
      lWrdRange@1100281009 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{0002095E-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      lWrdRange2@1100281006 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{0002095E-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      lInStream@1100281010 : InStream;
      lOutStream@1100281011 : OutStream;
      lMergeFieldExist@1100281012 : Boolean;
      lEmail@1100281013 : Text[80];
      lSendFrom@1100281014 : Text[80];
      lMail@1100281015 : Codeunit 397;
      lOutlookMailItem@1100281016 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem";
      lHasAttachment@1000000000 : Boolean;
      lTempAttach@1000000001 : TEMPORARY Record 50021;
      lTempCCList@1100281017 : TEMPORARY Record 5050;
      lCC@1100281018 : Text[1024];
    BEGIN
      //IMH01 isat.zw Changer Attachment --> Doc Attachment
      IF NOT HideDialog THEN //IMH05.ST
      Window.UPDATE(
        6,STRSUBSTNO(Text008,
        FORMAT(TempDeliverySorter."Correspondence Type")));
      IF TempDeliverySorter.FIND('-') THEN
        NoOfRecords := TempDeliverySorter.COUNT;

      lAttachmentDoc.GET(TempDeliverySorter."Attach. Referent Table No.",
                         TempDeliverySorter."Attach. Key Integer 1", TempDeliverySorter."Attach. Key Integer 2",
                         TempDeliverySorter."Attach. Key Code 1", TempDeliverySorter."Attach. Key Code 2",
                         TempDeliverySorter."Attachment No.");

      WITH TempDeliverySorter DO BEGIN
        SETCURRENTKEY("Attachment No.","Correspondence Type",Subject);
        FIND('-');
      END;
      Row := 2;

      //MainFileName := ConstDocFilename;
      TempDeliverySorter.FIND('-');
      lAttachmentDoc.GET(TempDeliverySorter."Attach. Referent Table No.",
                         TempDeliverySorter."Attach. Key Integer 1", TempDeliverySorter."Attach. Key Integer 2",
                         TempDeliverySorter."Attach. Key Code 1", TempDeliverySorter."Attach. Key Code 2",
                         TempDeliverySorter."Attachment No.");
      IF NOT lAttachmentMgt.UseComServer(lAttachmentDoc."File Extension",TRUE) THEN
        ERROR(STRSUBSTNO(Text010,lAttachmentDoc.TABLECAPTION,lAttachmentDoc."Entry No.", lAttachmentDoc.FIELDCAPTION("File Extension")))
      ;
      //IF ISSERVICETIER THEN
        //lFileFilter := UPPERCASE(lAttachmentDoc."File Extension") + ' (*.'
        //    + lAttachmentDoc."File Extension" + ')|*.' + lAttachmentDoc."File Extension";
        //if DOWNLOAD(ConstDiskFileName,Text005,'',FileFilter,ExportToFile) then;
      //else
      //message(MainFileName);
      //  IF NOT lAttachmentMgt.ExportAttachment(lAttachmentDoc, MainFileName) THEN
        IF NOT lAttachmentMgt.DownToTempFile(lAttachmentDoc, MainFileName) THEN
          ERROR(Text011);
      //Error(MainFileName);
      IF NOT HideDialog THEN //IMH05.ST
      Window.UPDATE(6,Text012);
      lAttachmentDoc.CALCFIELDS("Merge Source");
      IF lAttachmentDoc."Merge Source".HASVALUE THEN BEGIN
        IF NOT InteractLogEntry.GET(TempDeliverySorter."No.") THEN
          CLEAR(InteractLogEntry);
        MergeFile.WRITEMODE := TRUE;
        MergeFile.TEXTMODE := TRUE;
        MergeFileName := RBAutoMgt.ServerTempFileName(Text029,'.HTM');
        MergeFile.CREATE(MergeFileName);
        REPEAT
            CreateILEMergeSourceByDocAtt(MergeFile,lAttachmentDoc,TempDeliverySorter."No.",
            HeaderIsReady,TempDeliverySorter."Correspondence Type");
          Row := Row + 1;
          IF NOT HideDialog THEN //IMH05.ST
          Window.UPDATE(4,ROUND(Row / NoOfRecords * 10000,1))
        UNTIL TempDeliverySorter.NEXT = 0;
        MergeFile.WRITE('</table>');
        MergeFile.WRITE('</body>');
        MergeFile.WRITE('</html>');
        MergeFile.CLOSE;
        MergeFileName := RBAutoMgt.DownloadTempFile(MergeFileName);

      END ELSE BEGIN
        MergeFileName := RBAutoMgt.ClientTempFileName(Text029,'.HTM');
        IF ISCLEAR(wrdMergefile) THEN
          CREATE(wrdMergefile,FALSE,TRUE);
        //<<IMH02
        IF InteractLogEntry."Interaction Template Code" <> '' THEN
          InteractionTemplate.GET(InteractLogEntry."Interaction Template Code");
        //>>IMH02
        CreateHeader(wrdMergefile,FALSE,MergeFileName);

        REPEAT
          InteractLogEntry.GET(TempDeliverySorter."No.");
          Contact.GET(InteractLogEntry."Contact No.");
          CompanyInfo.GET;
          IF NOT Country2.GET(CompanyInfo."Country/Region Code") THEN
            CLEAR(Country2);

          IF NOT Country.GET(Contact."Country/Region Code") THEN
            CLEAR(Country);
          IF NOT Salesperson.GET(InteractLogEntry."Salesperson Code") THEN
            CLEAR(Salesperson);

          //This field must come first in the merge source file
          wrdMergefile.AddField(FORMAT(InteractLogEntry."Entry No."));

          //<<IMH02
          lFieldCount := AddFieldToWrdMergeFile(wrdMergefile,
                          InteractLogEntry."Contact No.",
                          InteractLogEntry."Service No.",
                          InteractLogEntry."Service Header No.",
                          InteractLogEntry."Intervention Line No.",
                          InteractLogEntry."Corporate No.",
                          InteractLogEntry."Salesperson Code", //IMH08.ST
                          InteractLogEntry."Interaction Language Code",
                          InteractLogEntry."Document Type",
                          InteractLogEntry."Document No.",
                          InteractLogEntry."Provider No.",lMergeFieldExist);
          //<<IMH11.ISAT.EBA
          AddBuiltMergeFields(
            wrdMergefile,
            InteractLogEntry."Contact No.",
            InteractLogEntry."Service No.",
            InteractLogEntry."Service Header No.",
            InteractLogEntry."Intervention Line No.",
            InteractLogEntry."Corporate No.",
            InteractLogEntry."Salesperson Code",
            InteractLogEntry."Provider No.");
          //>>IMH11.ISAT.EBA

          IF (lFieldCount = 0) AND (NOT lMergeFieldExist) THEN BEGIN
          //>>IMH02
            // Add mulitline fielddata
            i := 1;
            CLEAR(MultiAddress);
            FormatAddr.ContactAddrAlt(ContAddr,Contact,InteractLogEntry."Contact Alt. Address Code",InteractLogEntry.Date);

            wrdMergefile.NewMultiField;
            COPYARRAY(ContAddr2,ContAddr,1);
            COMPRESSARRAY(ContAddr2);
            WHILE ContAddr2[1] <> '' DO BEGIN
              IF ContAddr[i] <> '' THEN BEGIN
                wrdMergefile.AddMultiToField(ContAddr[i]);
                ContAddr2[1] := '';
                COMPRESSARRAY(ContAddr2);
              END ELSE
                wrdMergefile.AddMultiToField('&nbsp;');
              i := i + 1;
            END;
            wrdMergefile.EndMultiField;

            WITH wrdMergefile DO BEGIN
              AddField(Contact."No.");
              AddField(Contact."Company Name");
              AddField(Contact.Name);
              AddField(Contact."Name 2");
              AddField(Contact.Address);
              AddField(Contact."Address 2");
              AddField(Contact."Post Code");
              AddField(Contact.City);
              AddField(Contact.County);
              AddField(Country.Name);
              AddField(Contact."Job Title");
              AddField(Contact."Phone No.");
              AddField(Contact."Fax No.");
              AddField(Contact."E-Mail");
              AddField(Contact."Mobile Phone No.");
              AddField(Contact."VAT Registration No.");
              AddField(Contact."Home Page");
              AddField(Contact.GetSalutation(0,InteractLogEntry."Interaction Language Code"));
              AddField(Contact.GetSalutation(1,InteractLogEntry."Interaction Language Code"));
              AddField(Salesperson.Code);
              AddField(Salesperson.Name);
              AddField(Salesperson."Job Title");
              AddField(Salesperson."Phone No.");
              AddField(Salesperson."E-Mail");
              AddField(FORMAT(InteractLogEntry.Date));
              AddField(InteractLogEntry."Campaign No.");
              AddField(InteractLogEntry."Segment No.");
              AddField(InteractLogEntry.Description);
              AddField(InteractLogEntry.Subject);
              AddField(CompanyInfo.Name);
              AddField(CompanyInfo."Name 2");
              AddField(CompanyInfo.Address);
              AddField(CompanyInfo."Address 2");
              //???
              CharVT := 9;
              AddField(CompanyInfo."Post Code" + FORMAT(CharVT) + CompanyInfo.City);
              //AddField(CompanyInfo."Post Code");
              //???
              AddField(CompanyInfo.City);
              AddField(CompanyInfo.County);
              AddField(Country2.Name);
              //AddField(CompanyInfo."VAT Registration No.");
              //AddField(CompanyInfo."Registration No.");
              AddField(CompanyInfo."Phone No.");
              AddField(CompanyInfo."Fax No.");
              //AddField(CompanyInfo."Bank Branch No.");
              //AddField(CompanyInfo."Bank Name");
              //AddField(CompanyInfo."Bank Account No.");
              //AddField(CompanyInfo."Giro No.");
              //This field must come last in the merge source file
              CASE TempDeliverySorter."Correspondence Type" OF
                TempDeliverySorter."Correspondence Type"::Fax:
                  AddField(AttachmentManagement.InteractionFax(InteractLogEntry));
                TempDeliverySorter."Correspondence Type"::"E-Mail":
                  AddField(AttachmentManagement.InteractionEMail(InteractLogEntry));
                ELSE
                  AddField('');
              END;
              WriteLine;
            END;
          //<<IMH02 (lFieldCount = 0)
          END ELSE BEGIN
            //This field must come last in the merge source file
            CASE TempDeliverySorter."Correspondence Type" OF
              TempDeliverySorter."Correspondence Type"::Fax:
                wrdMergefile.AddField(AttachmentManagement.InteractionFax(InteractLogEntry));
              TempDeliverySorter."Correspondence Type"::"E-Mail":
                wrdMergefile.AddField(AttachmentManagement.InteractionEMail(InteractLogEntry));
              ELSE
                wrdMergefile.AddField('');
            END;
            wrdMergefile.WriteLine;
          END;
          //>>IMH02
          Row := Row + 1;
          IF NOT HideDialog THEN //IMH05.ST
          Window.UPDATE(4,ROUND(Row / NoOfRecords * 10000,1))
        UNTIL TempDeliverySorter.NEXT = 0;
        wrdMergefile.CloseFile;
      END;
      wrdDoc := wrdApp.Documents.Open(MainFileName);
      wrdDoc.MailMerge.MainDocumentType := 0;

      IF NOT HideDialog THEN //IMH05.ST
      Window.UPDATE(6,Text013);
      ParamInt := 7; // 7 = HTML
      wrdDoc.MailMerge.OpenDataSource(MergeFileName,ParamInt);
      IF NOT HideDialog THEN //IMH05.ST
      Window.UPDATE(6,STRSUBSTNO(Text014,TempDeliverySorter."Correspondence Type"));
      FOR ShapesIndex := 1 TO wrdDoc.InlineShapes.Count DO BEGIN
        wrdLinkFormat := wrdDoc.InlineShapes.Item(ShapesIndex).LinkFormat;
        wrdOLEFormat := wrdDoc.InlineShapes.Item(ShapesIndex).OLEFormat;
        IF NOT ISCLEAR(wrdOLEFormat) THEN
          wrdDoc.MailMerge.MailAsAttachment := wrdDoc.MailMerge.MailAsAttachment OR wrdOLEFormat.DisplayAsIcon;
        IF NOT ISCLEAR(wrdLinkFormat) THEN
          wrdLinkFormat.SavePictureWithDocument := TRUE;
      END;

      //<<IMH34.ST
      IF TempDeliverySorter."Correspondence Type" IN [TempDeliverySorter."Correspondence Type"::Fax,
                                                      TempDeliverySorter."Correspondence Type"::"E-Mail"] THEN BEGIN
        IF NOT lInteractionTemplate.GET(InteractLogEntry."Interaction Template Code") THEN
          lInteractionTemplate.INIT;
        IF lInteractionTemplate."Mail Attachment Name" = '' THEN
          lInteractionTemplate."Mail Attachment Name" := Text50000;

      //<<<IMH36.ST
        IF lInteractionTemplate."Ask For Attachment" AND GUIALLOWED THEN
          lHasAttachment := AddAttachDoc(InteractLogEntry, lTempAttach)
        ELSE
          lHasAttachment := FALSE;
      //>>IMH36.ST
      END;
      //>>IMH34.ST

      CASE TempDeliverySorter."Correspondence Type" OF
        TempDeliverySorter."Correspondence Type"::Fax:
          BEGIN
            //<<IMHZW
            //wrdDoc.MailMerge.Destination := 3;
            wrdDoc.MailMerge.Destination := 2;
            //>>IMHZW
      //<<IMH29.ST
            ParamInt := 0;
            wrdDoc.MailMerge.ViewMailMergeFieldCodes(ParamInt);
      //>>IMH29.ST
            wrdDoc.MailMerge.MailAddressFieldName := Text015;
            wrdDoc.MailMerge.MailAsAttachment := TRUE;
            lSendFrom := lMail.GetSenderEMail(TempDeliverySorter."Process Code");
            IF (lSendFrom <> '') OR lHasAttachment THEN BEGIN
              wrdDoc.MailMerge.Destination := 0; // 0 = wdSendToNewDocument
        //      wrdDoc.MailMerge.ViewMailMergeFieldCodes := 9999998; // 9999998 = wdToggle;
              wrdDoc.MailMerge.Execute;
      //<<IMH34.ST
      {
              lOutlookMailItem := wrdDoc.MailEnvelope.Item;

              lOutlookMailItem.SentOnBehalfOfName(lSendFrom);
              lOutlookMailItem."To" := AttachmentManagement.InteractionFax(InteractLogEntry);   //IMH.ZW 020212 correction Mail-->Fax
              lOutlookMailItem.Subject := wrdDoc.MailMerge.MailSubject;
              lOutlookMailItem.Send;
      }
              // Export en PDF avant envoi du mail
              wdExportFormatPDF := 17; //pdf format;
              MainFileNamePDF := FolderMgt.GetPathForFile(MainFileName) + lInteractionTemplate."Mail Attachment Name" + '.PDF';
              wrdApp.ActiveDocument.SaveAs2(MainFileNamePDF,wdExportFormatPDF);
              lEmail := AttachmentManagement.InteractionFax(InteractLogEntry);          //isat.zw correction
              lTempCCList.DELETEALL;  //IMH41 liste contact en copie
              SendMail(InteractLogEntry."Interaction Template Code"
              ,lEmail
              ,lTempCCList  //IMH41 liste contact en copie
              ,TempDeliverySorter.Subject
              ,''//BODY
              ,MainFileNamePDF
              ,lTempAttach //IMH36.ST
              ,lAttachmentDoc //IMH36.ST
              ,NOT lInteractionTemplate."Automatic Send Mail");
      //>>IMH34.ST
            END
            ELSE BEGIN
      //>>IMH31.ST
              wrdDoc.MailMerge.Destination := 2;
              wrdDoc.MailMerge.Execute;
            END; //IMH31.ST
            CheckWordPDF(lAttachmentDoc, wrdApp);
          END;
        TempDeliverySorter."Correspondence Type"::"E-Mail":
          BEGIN
      //<<IMH05.ST
            //<<IMH41
            lCC := AttachmentManagement.InteractionCCEMail(InteractLogEntry, lTempCCList);
            //>>IMH41
            IF GUIALLOWED THEN BEGIN
        //>>IMH05.ST
              //wrdDoc.MailMerge.Destination := 2;
        //<<IMH29.ST
              ParamInt := 0;
              wrdDoc.MailMerge.ViewMailMergeFieldCodes(ParamInt);
        //>>IMH29.ST
              wrdDoc.MailMerge.MailAddressFieldName := Text015;
              wrdDoc.MailMerge.MailSubject := TempDeliverySorter.Subject;
              wrdDoc.MailMerge.MailAsAttachment :=
                wrdDoc.MailMerge.MailAsAttachment OR TempDeliverySorter."Send Word Docs. as Attmt.";
              //<<IMH03
              //wrdDoc.MailMerge.Execute;
              IF lInteractionTemplate."Mail Attachment"THEN BEGIN
                wrdDoc.MailMerge.Destination := 0; // 0 = wdSendToNewDocument
                wrdDoc.MailMerge.Execute;
                // Export en PDF avant envoi du mail
                wdExportFormatPDF := 17; //pdf format;
                MainFileNamePDF := FolderMgt.GetPathForFile(MainFileName) + lInteractionTemplate."Mail Attachment Name" + '.PDF';
                wrdApp.ActiveDocument.SaveAs2(MainFileNamePDF,wdExportFormatPDF);
                //<<IMH22
                //<<IMH23.ISAT.EBA
                //CompanyInformation.GET;
                //IF CompanyInformation."Activate E-mail Debug" THEN BEGIN
                //  lEmail := CompanyInformation."E-mail Debug";
                //END ELSE
                //>>IMH23.ISAT.EBA
                  //lEmail := Contact."E-Mail";
                  lEmail := AttachmentManagement.InteractionEMail(InteractLogEntry);
                //>>IMH22
                SendMail(InteractLogEntry."Interaction Template Code"
                ,lEmail
                ,lTempCCList  //IMH41 liste contact en copie
                ,TempDeliverySorter.Subject
                ,''//BODY
                ,MainFileNamePDF
                ,lTempAttach //IMH36.ST
                ,lAttachmentDoc //IMH36.ST
                ,NOT lInteractionTemplate."Automatic Send Mail");
                CheckFilePDF(lAttachmentDoc, MainFileNamePDF);
              END ELSE BEGIN
        //<<IMH29.ST
                ParamInt := 0;
                wrdDoc.MailMerge.ViewMailMergeFieldCodes(ParamInt);
        //>>IMH29.ST
        //<<IMH31.ST
                lSendFrom := lMail.GetSenderEMail(TempDeliverySorter."Process Code");
                //<<IMH41
                //IF (lSendFrom <> '') OR lHasAttachment THEN BEGIN
                IF (lSendFrom <> '') OR lHasAttachment OR (lCC <> '') THEN BEGIN
                //>>IMH41
                  wrdDoc.MailMerge.Destination := 0; // 0 = wdSendToNewDocument
            //      wrdDoc.MailMerge.ViewMailMergeFieldCodes := 9999998; // 9999998 = wdToggle;
                  wrdDoc.MailMerge.Execute;
        //<<IMH36.ST
        //          lOutlookMailItem := wrdDoc.MailEnvelope.Item;
        //          lOutlookMailItem.SentOnBehalfOfName(lSendFrom);
        //          lOutlookMailItem."To" := AttachmentManagement.InteractionEMail(InteractLogEntry);
        //          lOutlookMailItem.Subject := wrdDoc.MailMerge.MailSubject;
        //          lOutlookMailItem.Send;
                  //<<IMH41
                  //SendWordMail(AttachmentManagement.InteractionEMail(InteractLogEntry),'',wrdDoc.MailMerge.MailSubject,
                  SendWordMail(AttachmentManagement.InteractionEMail(InteractLogEntry),lCC,lTempCCList, wrdDoc.MailMerge.MailSubject,
                  //>>IMH41
                               wrdDoc,'',lTempAttach, lAttachmentDoc, NOT lInteractionTemplate."Automatic Send Mail");
        //>>IMH36.ST
                END
                ELSE BEGIN
        //>>IMH31.ST
                  wrdDoc.MailMerge.Destination := 2;
                  wrdDoc.MailMerge.Execute;
                END; //IMH31.ST
                CheckWordPDF(lAttachmentDoc, wrdApp);
              END;
              //>>IMH03
              //<<IMH05.ST
            END ELSE BEGIN
              IF ISSERVICETIER THEN BEGIN
                // Mode WebService
                SaveDelivery(TempDeliverySorter);
                TempDeliverySorter.DELETE;
              END
              ELSE BEGIN
                // Mode NAS
                // MergeDoc
      //<<IMH29.ST
                ParamInt := 0;
                wrdDoc.MailMerge.ViewMailMergeFieldCodes(ParamInt);
      //>>IMH29.ST
                wrdDoc.MailMerge.Destination := 0; // 0 = wdSendToNewDocument
                wrdDoc.MailMerge.Execute;
                // Mail du doc
                IF lInteractionTemplate."Mail Attachment" THEN BEGIN
                  // Export en PDF avant envoi du mail
                  wdExportFormatPDF := 17; //pdf format;
                  MainFileNamePDF := FolderMgt.GetPathForFile(MainFileName) + lInteractionTemplate."Mail Attachment Name" + '.PDF';
                  wrdDoc.SaveAs2(MainFileNamePDF,wdExportFormatPDF);
                  //<<IMH22
                  lEmail := AttachmentManagement.InteractionEMail(InteractLogEntry);
                  //>>IMH22
        //          SendSMTPMail('','',lEmail,TempDeliverySorter.Subject,MainFileNamePDF,TRUE);
                  //<<IMH41
                  //SendOutlookMail(lEmail, TempDeliverySorter.Subject,MainFileNamePDF, TempDeliverySorter."Process Code");
                  SendOutlookMail(lEmail, lCC, TempDeliverySorter.Subject,MainFileNamePDF, TempDeliverySorter."Process Code");
                  //>>IMH41
                END // Mail Attachment
                ELSE BEGIN
        //<<IMH31.ST
                  wrdDoc.MailMerge.Destination := 0; // 0 = wdSendToNewDocument
          //      wrdDoc.MailMerge.ViewMailMergeFieldCodes := 9999998; // 9999998 = wdToggle;
                  wrdDoc.MailMerge.Execute;
                  lOutlookMailItem := wrdDoc.MailEnvelope.Item;
                  lSendFrom := lMail.GetSenderEMail(TempDeliverySorter."Process Code");
                  IF lSendFrom <> '' THEN
                    lOutlookMailItem.SentOnBehalfOfName(lSendFrom);
                  lOutlookMailItem."To" := AttachmentManagement.InteractionEMail(InteractLogEntry);
                  //<<IMH41
                  lOutlookMailItem.CC := lCC;
                  //>>IMH41
                  lOutlookMailItem.Subject := wrdDoc.MailMerge.MailSubject;
                  lOutlookMailItem.Send;
                END; // Mail Doc
        //        IF FILE.EXISTS(MainFileNamePDF) THEN
        //          FILE.ERASE(MainFileNamePDF);
                CheckFilePDF(lAttachmentDoc, MainFileNamePDF);
              END; // NOT ServiceTier
            END;
            //>>IMH05.ST
          END;
        TempDeliverySorter."Correspondence Type"::"Hard Copy":
          BEGIN
      //<<IMH29.ST
            ParamInt := 0;
            wrdDoc.MailMerge.ViewMailMergeFieldCodes(ParamInt);
      //>>IMH29.ST
            wrdDoc.MailMerge.Destination := 0; // 0 = wdSendToNewDocument
            wrdDoc.MailMerge.Execute;
            CheckWordPDF(lAttachmentDoc,wrdApp);
            wrdApp.ActiveDocument.PrintOut;
            ParamBln := FALSE;
            wrdApp.ActiveDocument.Close(ParamBln);
          END;
      //<<IMH35.ST
        TempDeliverySorter."Correspondence Type"::" " : BEGIN
          ParamInt := 0;
          wrdDoc.MailMerge.ViewMailMergeFieldCodes(ParamInt);
          wrdDoc.MailMerge.Destination := 0; // 0 = wdSendToNewDocument
          wrdDoc.MailMerge.Execute;
          // Export en PDF
          wdExportFormatPDF := 17; //pdf format;
          MainFileNamePDF := MainFileName + '.PDF';
          wrdApp.ActiveDocument.SaveAs2(MainFileNamePDF,wdExportFormatPDF);
          CheckFilePDF(lAttachmentDoc, MainFileNamePDF);
        END;
      //>>IMH35.ST
      END;

      // Update delivery status on Interaction Log Entry
      IF TempDeliverySorter.FIND('-') THEN BEGIN
        InteractLogEntry.LOCKTABLE;
        REPEAT
          WITH InteractLogEntry DO BEGIN
            GET(TempDeliverySorter."No.");
            "Delivery Status" := InteractLogEntry."Delivery Status"::" ";
            MODIFY;
          END;
        UNTIL TempDeliverySorter.NEXT = 0;
        COMMIT;
      END;

      IF NOT lDocClosed THEN BEGIN //IMH05.ST
      ParamBln := FALSE;
      wrdDoc.Close(ParamBln);
      END; //IMH05.ST

      //<<IMH04.ST
      IF DocContainMergefieldsByDocAtt(lAttachmentDoc) THEN
        IF NOT lAttachmentDoc."Merge Source".HASVALUE THEN BEGIN
          IF ISSERVICETIER THEN BEGIN
            IF UPLOADINTOSTREAM('','','TEMP',MergeFileName,lInStream) THEN BEGIN
              lAttachmentDoc."Merge Source".CREATEOUTSTREAM(lOutStream);
              COPYSTREAM(lOutStream,lInStream);
            END;
          END ELSE
            lAttachmentDoc."Merge Source".IMPORT(MergeFileName);
          lAttachmentDoc.MODIFY;
        END;
      //>>IMH04.ST

      IF NOT lAttachmentDoc."Merge Source".HASVALUE THEN
        AppendToMergeSource(MergeFileName);
      DeleteFile(MainFileName);
      DeleteFile(MainFileNamePDF);//IMH03
      DeleteFile(MergeFileName);

      IF NOT ISCLEAR(wrdLinkFormat)
        THEN CLEAR(wrdLinkFormat);
      IF NOT ISCLEAR(wrdOLEFormat)
        THEN CLEAR(wrdOLEFormat);
      CLEAR(wrdMergefile);
      CLEAR(wrdDoc);
    END;

    PROCEDURE ShowMergedDocument@11(VAR SegLine@1000 : Record 5077;VAR Attachment@1001 : Record 5062;WordCaption@1002 : Text[260];IsTemporary@1016 : Boolean);
    VAR
      Salesperson@1003 : Record 13;
      Country@1004 : Record 9;
      Country2@1005 : Record 9;
      Contact@1006 : Record 5050;
      CompanyInfo@1007 : Record 79;
      wrdMergefile@1017 : Automation "{3C2554FE-2B41-4543-B3E8-E64296773DA5} 2.0:{40D88563-F0DA-4B3D-AD1B-34EFA8C3978A}:Unknown Automation Server.MergeHandler";
      wrdApp@1019 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{000209FF-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      wrdDoc@1018 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{00020906-0000-0000-C000-000000000046}:Unknown Automation Server.Document";
      FormatAddr@1008 : Codeunit 365;
      MergeFileName@1009 : Text[260];
      MainFileName@1010 : Text[260];
      ParamInt@1011 : Integer;
      ParamFalse@1012 : Boolean;
      ContAddr@1013 : ARRAY [8] OF Text[50];
      ContAddr2@1020 : ARRAY [8] OF Text[50];
      MultiAddress@1014 : ARRAY [2] OF Text[260];
      TempFileName@1025 : Text[1024];
      I@1015 : Integer;
      IsInherited@1021 : Boolean;
      MergeFile@1022 : File;
      HeaderIsReady@1023 : Boolean;
      MergeFileNameServer@1024 : Text[260];
      lFieldCount@1100281000 : Integer;
      lMergeFieldExist@1100281001 : Boolean;
    BEGIN
      MergeDocument(SegLine, Attachment, WordCaption, IsTemporary, FALSE, '');
    END;

    PROCEDURE ExportMergedDocument@1100281017(VAR SegLine@1100281003 : Record 5077;VAR Attachment@1100281002 : Record 5062;WordCaption@1100281001 : Text[260];IsTemporary@1100281000 : Boolean;ExportPath@1100281004 : Text[1024]);
    BEGIN
      MergeDocument(SegLine, Attachment, WordCaption, IsTemporary, TRUE, ExportPath);
    END;

    PROCEDURE MergeDocument@1100281018(VAR SegLine@1000 : Record 5077;VAR Attachment@1001 : Record 5062;WordCaption@1002 : Text[260];IsTemporary@1016 : Boolean;ToExport@1100281002 : Boolean;ExportPath@1100281003 : Text[1024]);
    VAR
      Salesperson@1003 : Record 13;
      Country@1004 : Record 9;
      Country2@1005 : Record 9;
      Contact@1006 : Record 5050;
      CompanyInfo@1007 : Record 79;
      wrdMergefile@1017 : Automation "{3C2554FE-2B41-4543-B3E8-E64296773DA5} 2.0:{40D88563-F0DA-4B3D-AD1B-34EFA8C3978A}:Unknown Automation Server.MergeHandler";
      wrdApp@1019 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{000209FF-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      wrdDoc@1018 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{00020906-0000-0000-C000-000000000046}:Unknown Automation Server.Document";
      FormatAddr@1008 : Codeunit 365;
      MergeFileName@1009 : Text[260];
      MainFileName@1010 : Text[260];
      ParamInt@1011 : Integer;
      ParamFalse@1012 : Boolean;
      ContAddr@1013 : ARRAY [8] OF Text[50];
      ContAddr2@1020 : ARRAY [8] OF Text[50];
      MultiAddress@1014 : ARRAY [2] OF Text[260];
      TempFileName@1025 : Text[1024];
      I@1015 : Integer;
      IsInherited@1021 : Boolean;
      MergeFile@1022 : File;
      HeaderIsReady@1023 : Boolean;
      MergeFileNameServer@1024 : Text[260];
      lFieldCount@1100281000 : Integer;
      lMergeFieldExist@1100281001 : Boolean;
      ParamBln@1100281004 : Boolean;
    BEGIN
      IF NOT AttachmentManagement.UseComServer(Attachment."File Extension",TRUE) THEN
        ERROR(STRSUBSTNO(Text010,Attachment.TABLECAPTION,Attachment."No.",
          Attachment.FIELDCAPTION("File Extension")));


      IF SegLine.AttachmentInherited THEN
        IsInherited := TRUE;
      // Handle Word documents without mergefields

      IF NOT DocContainMergefields(Attachment) THEN BEGIN
        MainFileName := ConstDocFilename;
        Attachment.ExportAttachment(MainFileName);
        ParamFalse := FALSE;

        IF ISCLEAR(wrdApp) THEN
          CREATE(wrdApp,FALSE,TRUE);
        wrdDoc := wrdApp.Documents.Open(MainFileName,ParamFalse,Attachment."Read Only");
      END ELSE BEGIN
        // Merge possible
        MainFileName := ConstDocFilename;
        IF NOT Attachment.ExportAttachment(MainFileName) THEN
          ERROR(Text011);

        Attachment.CALCFIELDS("Merge Source");
        IF Attachment."Merge Source".HASVALUE THEN BEGIN
          MergeFileNameServer := RBAutoMgt.ServerTempFileName(Text029,'.HTM');
          MergeFile.WRITEMODE := TRUE;
          MergeFile.TEXTMODE := TRUE;
          MergeFile.CREATE(MergeFileNameServer);
          CreateILEMergeSource(MergeFile,Attachment,SegLine."Line No.",HeaderIsReady,0);
          MergeFile.WRITE('</table>');
          MergeFile.WRITE('</body>');
          MergeFile.WRITE('</html>');
          MergeFile.CLOSE;
          MergeFileName := RBAutoMgt.DownloadTempFile(MergeFileNameServer);
          IF ISSERVICETIER THEN //We don't need the file any more on ServiceTier
            ERASE(MergeFileNameServer);

        END ELSE BEGIN
          MergeFileName := RBAutoMgt.ClientTempFileName(Text029,'.HTM');
          IF ISCLEAR(wrdMergefile) THEN
            CREATE(wrdMergefile,FALSE,TRUE);
          //<<IMH02
          IF SegLine."Interaction Template Code" <> '' THEN
            InteractionTemplate.GET(SegLine."Interaction Template Code");
          //>>IMH02
          CreateHeader(wrdMergefile,FALSE,MergeFileName);
          Contact.GET(SegLine."Contact No.");
          CompanyInfo.GET;
          IF NOT Country2.GET(CompanyInfo."Country/Region Code") THEN
            CLEAR(Country2);

          IF NOT Country.GET(Contact."Country/Region Code") THEN
            CLEAR(Country);
          IF NOT Salesperson.GET(SegLine."Salesperson Code") THEN
            CLEAR(Salesperson);

          //This field must come first in the merge source file
          wrdMergefile.AddField(FORMAT(SegLine."Line No."));

          lFieldCount := AddFieldToWrdMergeFile(wrdMergefile,
                          SegLine."Contact No.",
                          SegLine."Service No.",
                          SegLine."Service Header No.",
                          SegLine."Intervention Line No.",
                          SegLine."Corporate No.",
                          SegLine."Salesperson Code", //IMH08.ST
                          SegLine."Language Code",
                          SegLine."Document Type",
                          SegLine."Document No.", //IMH02
                          SegLine."Provider No.",lMergeFieldExist);
          //<<IMH11.ISAT.EBA
          AddBuiltMergeFields(
            wrdMergefile,
            SegLine."Contact No.",
            SegLine."Service No.",
            SegLine."Service Header No.",
            SegLine."Intervention Line No.",
            SegLine."Corporate No.",
            SegLine."Salesperson Code",
            SegLine."Provider No.");
          //>>IMH11.ISAT.EBA

          IF (lFieldCount = 0) AND (NOT lMergeFieldExist) THEN BEGIN

            // Add mulitline fielddata
            I := 1;
            CLEAR(MultiAddress);
            FormatAddr.ContactAddrAlt(ContAddr,Contact,SegLine."Contact Alt. Address Code",SegLine.Date);
            wrdMergefile.NewMultiField;
            COPYARRAY(ContAddr2,ContAddr,1);
            COMPRESSARRAY(ContAddr2);
            WHILE ContAddr2[1] <> '' DO BEGIN
              IF ContAddr[I] <> '' THEN BEGIN
                wrdMergefile.AddMultiToField(ContAddr[I]);
                ContAddr2[1] := '';
                COMPRESSARRAY(ContAddr2);
              END ELSE
                wrdMergefile.AddMultiToField('&nbsp;');
              I := I + 1;
            END;
            wrdMergefile.EndMultiField;

            WITH wrdMergefile DO BEGIN
                AddField(Contact."No.");
                AddField(Contact."Company Name");
                AddField(Contact.Name);
                AddField(Contact."Name 2");
                AddField(Contact.Address);
                AddField(Contact."Address 2");
                AddField(Contact."Post Code");
                AddField(Contact.City);
                AddField(Contact.County);
                AddField(Country.Name);
                AddField(Contact."Job Title");
                AddField(Contact."Phone No.");
                AddField(Contact."Fax No.");
                AddField(Contact."E-Mail");
                AddField(Contact."Mobile Phone No.");
                AddField(Contact."VAT Registration No.");
                AddField(Contact."Home Page");
                AddField(Contact.GetSalutation(0,SegLine."Language Code"));
                AddField(Contact.GetSalutation(1,SegLine."Language Code"));
                AddField(Salesperson.Code);
                AddField(Salesperson.Name);
                AddField(Salesperson."Job Title");
                AddField(Salesperson."Phone No.");
                AddField(Salesperson."E-Mail");
                AddField(FORMAT(SegLine.Date));
                AddField(FORMAT(SegLine."Campaign No."));
                AddField(SegLine."Segment No.");
                AddField(SegLine.Description);
                AddField(SegLine.Subject);
                AddField(CompanyInfo.Name);
                AddField(CompanyInfo."Name 2");
                AddField(CompanyInfo.Address);
                AddField(CompanyInfo."Address 2");
                AddField(CompanyInfo."Post Code");
                AddField(CompanyInfo.City);
                AddField(CompanyInfo.County);
                AddField(Country2.Name);
                //<<IMH02
                //AddField(CompanyInfo."VAT Registration No.");
                //AddField(CompanyInfo."Registration No.");
                //<<IMH02
                AddField(CompanyInfo."Phone No.");
                AddField(CompanyInfo."Fax No.");
                //<<IMH02
                //AddField(CompanyInfo."Bank Branch No.");
                //AddField(CompanyInfo."Bank Name");
                //AddField(CompanyInfo."Bank Account No.");
                //AddField(CompanyInfo."Giro No.");
                //>>IMH02
            END;
          END;//IMH02
          //This field must come last in the merge source file
      //<<IMH19.ST
          CASE SegLine."Correspondence Type" OF
            SegLine."Correspondence Type"::Fax:
              wrdMergefile.AddField(AttachmentManagement.SegLineFax(SegLine));
            SegLine."Correspondence Type"::"E-Mail":
              wrdMergefile.AddField(AttachmentManagement.SegLineEMail(SegLine));
            ELSE
              wrdMergefile.AddField('');
          END;
      //>>IMH19.ST
          wrdMergefile.WriteLine;
          wrdMergefile.CloseFile;
        END;

        ParamFalse := FALSE;
        IF ISCLEAR(wrdApp) THEN
          CREATE(wrdApp,FALSE,TRUE);
        wrdDoc := wrdApp.Documents.Open(MainFileName,ParamFalse,Attachment."Read Only");
        wrdDoc.MailMerge.MainDocumentType := 0;
        ParamInt := 7; // 7 = HTML
        wrdDoc.MailMerge.OpenDataSource(MergeFileName,ParamInt);
        IF NOT ToExport THEN BEGIN
      //<<IMH29.ST
      //    ParamInt := 9999998; // 9999998 = wdToggle
          ParamInt := 0;
      //>>IMH29.ST
          wrdDoc.MailMerge.ViewMailMergeFieldCodes(ParamInt);
        END;

      END;

      IF NOT ToExport THEN
        DocIsImported := WordHandler(wrdDoc,Attachment,WordCaption,IsTemporary,MainFileName,IsInherited)
      ELSE BEGIN
        wrdDoc.MailMerge.Destination := 0;
        wrdDoc.MailMerge.Execute;
        wrdApp.ActiveDocument.SaveAs2(ExportPath);;
        ParamBln := FALSE;
        wrdApp.ActiveDocument.Close(ParamBln);
        wrdDoc.Close(ParamBln);
      END;

      CLEAR(wrdMergefile);
      CLEAR(wrdDoc);
      CLEAR(wrdApp);

      DeleteFile(MergeFileName);
    END;

    LOCAL PROCEDURE CreateHeader@4(VAR wrdMergefile@1011 : Automation "{3C2554FE-2B41-4543-B3E8-E64296773DA5} 2.0:{40D88563-F0DA-4B3D-AD1B-34EFA8C3978A}:Unknown Automation Server.MergeHandler";MergeFieldsOnly@1000 : Boolean;MergeFileName@1001 : Text[260]);
    VAR
      Salesperson@1002 : Record 13;
      Country@1003 : Record 9;
      Contact@1004 : Record 5050;
      SegLine@1005 : Record 5077;
      CompanyInfo@1006 : Record 79;
      RMSetup@1010 : Record 5079;
      InteractionLogEntry@1012 : Record 5065;
      I@1007 : Integer;
      MainLanguage@1009 : Integer;
      CreateOk@1008 : Boolean;
      lFieldCount@1100281000 : Integer;
      lNbLoc@1100281001 : Integer;
    BEGIN
      CreateOk := TRUE;
      IF NOT wrdMergefile.CreateFile(MergeFileName) THEN
        ERROR(Text017+Text018);
      InteractionTemplate.TESTFIELD(Code);
      // Create HTML Header source
      WITH wrdMergefile DO BEGIN
        MainLanguage := GLOBALLANGUAGE;
        RMSetup.GET;
        IF RMSetup."Mergefield Language ID" <> 0 THEN
          GLOBALLANGUAGE := RMSetup."Mergefield Language ID";
        AddField(InteractionLogEntry.FIELDCAPTION("Entry No."));
       lFieldCount := AddFieldCaptionToWrdMergeFile(wrdMergefile);

        //<<IMH14.ISAT.EBA
        AddField(Text50016);
        //>>IMH14.ISAT.EBA

        //<<IMH11.ISAT.EBA
        lNbLoc := InteractionTemplate."Location Formula Nb";

        FOR I := 1 TO InteractionTemplate."Built Field Nb" DO
          AddField(STRSUBSTNO(Text50010,I));

        FOR I := 1 TO InteractionTemplate."Quote Formula Nb" DO
          AddField(STRSUBSTNO(Text50011,I));

        FOR I := 1 TO InteractionTemplate."Location Formula Nb" DO
          AddField(STRSUBSTNO(Text50012,I));
        //>>IMH11.ISAT.EBA

      //IMH16 Mise en commentaire par VA
      {  //<<IMH13.ISAT.EBA
        FOR I := 1 TO lNbLoc DO
          AddField(STRSUBSTNO(Text50013,I));

        FOR I := 1 TO lNbLoc DO
          AddField(STRSUBSTNO(Text50014,I));

        FOR I := 1 TO lNbLoc DO
          AddField(STRSUBSTNO(Text50015,I));
        //>>IMH13.ISAT.EBA
      }

       IF lFieldCount = 0 THEN BEGIN
        AddField(Contact.TABLECAPTION + Text019);
        AddField(Contact.TABLECAPTION + ' ' + Contact.FIELDCAPTION(Contact."No."));
        AddField(Contact.TABLECAPTION + ' ' + Contact.FIELDCAPTION("Company Name"));
        AddField(Contact.TABLECAPTION + ' ' + Contact.FIELDCAPTION(Name));
        AddField(Contact.TABLECAPTION + ' ' + Contact.FIELDCAPTION("Name 2"));
        AddField(Contact.TABLECAPTION + ' ' + Contact.FIELDCAPTION(Address));
        AddField(Contact.TABLECAPTION + ' ' + Contact.FIELDCAPTION("Address 2"));
        AddField(Contact.TABLECAPTION + ' ' + Contact.FIELDCAPTION("Post Code"));
        AddField(Contact.TABLECAPTION + ' ' + Contact.FIELDCAPTION(City));
        AddField(Contact.TABLECAPTION + ' ' + Contact.FIELDCAPTION(County));
        AddField(Contact.TABLECAPTION + ' ' + Country.TABLECAPTION + ' ' + Country.FIELDCAPTION(Name));
        AddField(Contact.TABLECAPTION + ' ' + Contact.FIELDCAPTION("Job Title"));
        AddField(Contact.TABLECAPTION + ' ' + Contact.FIELDCAPTION("Phone No."));
        AddField(Contact.TABLECAPTION + ' ' + Contact.FIELDCAPTION("Fax No."));
        AddField(Contact.TABLECAPTION + ' ' + Contact.FIELDCAPTION("E-Mail"));
        AddField(Contact.TABLECAPTION + ' ' + Contact.FIELDCAPTION("Mobile Phone No."));
        AddField(Contact.TABLECAPTION + ' ' + Contact.FIELDCAPTION("VAT Registration No."));
        AddField(Contact.TABLECAPTION + ' ' + Contact.FIELDCAPTION("Home Page"));
        AddField(Text030);
        AddField(Text031);
        AddField(Salesperson.TABLECAPTION + ' ' + Salesperson.FIELDCAPTION(Code));
        AddField(Salesperson.TABLECAPTION + ' ' + Salesperson.FIELDCAPTION(Name));
        AddField(Salesperson.TABLECAPTION + ' ' + Salesperson.FIELDCAPTION("Job Title"));
        AddField(Salesperson.TABLECAPTION + ' ' + Salesperson.FIELDCAPTION("Phone No."));
        AddField(Salesperson.TABLECAPTION + ' ' + Salesperson.FIELDCAPTION("E-Mail"));
        AddField(Text020 + SegLine.FIELDCAPTION(Date));
        AddField(Text020 + SegLine.FIELDCAPTION("Campaign No."));
        AddField(Text020 + SegLine.FIELDCAPTION("Segment No."));
        AddField(Text020 + SegLine.FIELDCAPTION(Description));
        AddField(Text020 + SegLine.FIELDCAPTION(Subject));
        AddField(CompanyInfo.TABLECAPTION + ' ' + CompanyInfo.FIELDCAPTION(Name));
        AddField(CompanyInfo.TABLECAPTION + ' ' + CompanyInfo.FIELDCAPTION("Name 2"));
        AddField(CompanyInfo.TABLECAPTION + ' ' + CompanyInfo.FIELDCAPTION(Address));
        AddField(CompanyInfo.TABLECAPTION + ' ' + CompanyInfo.FIELDCAPTION("Address 2"));
        AddField(CompanyInfo.TABLECAPTION + ' ' + CompanyInfo.FIELDCAPTION("Post Code"));
        AddField(CompanyInfo.TABLECAPTION + ' ' + CompanyInfo.FIELDCAPTION(City));
        AddField(CompanyInfo.TABLECAPTION + ' ' + CompanyInfo.FIELDCAPTION(County));
        AddField(CompanyInfo.TABLECAPTION + ' ' + Country.TABLECAPTION + ' ' +
          Country.FIELDCAPTION(Name));
        //<<IMH02
        //AddField(CompanyInfo.TABLECAPTION + ' ' + CompanyInfo.FIELDCAPTION("VAT Registration No."));
        //AddField(CompanyInfo.TABLECAPTION + ' ' + CompanyInfo.FIELDCAPTION("Registration No."));
        //>>IMH02
        AddField(CompanyInfo.TABLECAPTION + ' ' + CompanyInfo.FIELDCAPTION("Phone No."));
        AddField(CompanyInfo.TABLECAPTION + ' ' + CompanyInfo.FIELDCAPTION("Fax No."));
        //<<IMH02
        //AddField(CompanyInfo.TABLECAPTION + ' ' + CompanyInfo.FIELDCAPTION("Bank Branch No."));
        //AddField(CompanyInfo.TABLECAPTION + ' ' + CompanyInfo.FIELDCAPTION("Bank Name"));
        //AddField(CompanyInfo.TABLECAPTION + ' ' + CompanyInfo.FIELDCAPTION("Bank Account No."));
        //AddField(CompanyInfo.TABLECAPTION + ' ' + CompanyInfo.FIELDCAPTION("Giro No."));
      //  lFieldCount := AddFieldCaptionToWrdMergeFile(wrdMergefile);
        //>>IMH02
          lFieldCount := 40;
        END;//IMH02
        GLOBALLANGUAGE := MainLanguage;
        AddField(Text015);
        WriteLine;

        // Mergesource must be at least two lines
        IF MergeFieldsOnly THEN BEGIN
          //FOR I := 1 TO 47 DO
          FOR I := 1 TO lFieldCount +1  DO
            AddField('');
          WriteLine;
          CloseFile;
        END;
      END;
    END;

    PROCEDURE WordHandler@7(VAR wrdDoc@1009 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{00020906-0000-0000-C000-000000000046}:Unknown Automation Server.Document";VAR Attachment@1001 : Record 5062;Caption@1002 : Text[260];IsTemporary@1003 : Boolean;FileName@1004 : Text[260];IsInherited@1008 : Boolean) DocImported@1000 : Boolean;
    VAR
      Attachment2@1005 : Record 5062;
      wrdHandler@1006 : Automation "{3C2554FE-2B41-4543-B3E8-E64296773DA5} 2.0:{D9487004-7ED7-4F2A-A9FC-28C1202992CD}:Unknown Automation Server.WordHandler";
      NewFileName@1007 : Text[260];
    BEGIN
      CREATE(wrdHandler,FALSE,TRUE);

      wrdDoc.ActiveWindow.Caption := Caption;
      wrdDoc.ActiveWindow.WindowState := 1; // 1 = wdWindowStateMaximize
      wrdDoc.Saved := TRUE;
      wrdDoc.Application.Visible := TRUE;
      wrdDoc.Application.Activate;

      //<<IMH17.ST
      IF Attachment."Read Only" THEN BEGIN
        IF NOT ISCLEAR(wrdHandler) THEN
          CLEAR(wrdHandler);
        EXIT;
      END;
      //>>IMH17.ST

      NewFileName := wrdHandler.WaitForDocument(wrdDoc);
      IF NOT Attachment."Read Only" THEN
        IF wrdHandler.DocIsClosed THEN
          IF wrdHandler.DocChanged THEN BEGIN
            CLEAR(wrdHandler);
            IF CONFIRM(Text021 + Caption +'?',TRUE) THEN BEGIN
              IF (NOT IsTemporary) AND Attachment2.GET(Attachment."No.") THEN
                IF Attachment2."Last Time Modified" <> Attachment."Last Time Modified" THEN BEGIN
                  DeleteFile(FileName);
                  IF NewFileName <> FileName THEN
                    IF CONFIRM(
                      STRSUBSTNO(Text022,NewFileName), FALSE)
                    THEN
                      DeleteFile(NewFileName);
                  ERROR(
                    STRSUBSTNO(Text023+Text025,Attachment.TABLECAPTION));
                END;
              Attachment.ImportAttachment(NewFileName,IsTemporary,IsInherited);
              DeleteFile(NewFileName);
              DocImported := TRUE;
            END;
          END;

      IF NOT ISCLEAR(wrdHandler) THEN
        CLEAR(wrdHandler);

      DeleteFile(FileName);
    END;

    PROCEDURE DeleteFile@8(FileName@1001 : Text[1024]) DeleteOk@1000 : Boolean;
    VAR
      I@1002 : Integer;
    BEGIN
      // Wait for Word to release files
      IF FileName = '' THEN
        EXIT(FALSE);

      IF ISSERVICETIER THEN
        EXIT(TRUE);

      IF NOT EXISTS(FileName) THEN
        EXIT(TRUE);

      REPEAT
        SLEEP(250);
        I := I + 1;
      UNTIL ERASE(FileName) OR (I = 25);
      EXIT(NOT EXISTS(FileName));
    END;

    PROCEDURE ConstDocFilename@9() FileName@1000 : Text[260];
    VAR
      I@1001 : Integer;
      DocNo@1002 : Text[30];
    BEGIN
      FileName := RBAutoMgt.ServerTempFileName(Text027,'.DOC');
    END;

    PROCEDURE DocContainMergefields@2(VAR Attachment@1001 : Record 5062) MergeFields@1000 : Boolean;
    VAR
      wrdApp@1005 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{000209FF-0000-0000-C000-000000000046}:Unknown Automation Server.Application" WITHEVENTS;
      wrdDoc@1004 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{00020906-0000-0000-C000-000000000046}:Unknown Automation Server.Document";
      ParamBln@1002 : Boolean;
      FileName@1003 : Text[260];
    BEGIN
      IF ISCLEAR(wrdApp) THEN
        CREATE(wrdApp,FALSE,TRUE);

      IF (UPPERCASE(Attachment."File Extension") <> 'DOC') AND
         (UPPERCASE(Attachment."File Extension") <> 'DOCX')
      THEN
        EXIT(FALSE);
      FileName := Attachment.ConstFilename;
      Attachment.ExportAttachment(FileName);
      wrdDoc := wrdApp.Documents.Open(FileName);
      MergeFields := (wrdDoc.MailMerge.Fields.Count > 0);
      ParamBln := FALSE;
      wrdDoc.Close(ParamBln);
      DeleteFile(FileName);

      CLEAR(wrdDoc);
      CLEAR(wrdApp);
    END;

    PROCEDURE DocContainMergefieldsByDocAtt@1100281002(VAR pDocAttachment@1001 : Record 50021) MergeFields@1000 : Boolean;
    VAR
      wrdApp@1005 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{000209FF-0000-0000-C000-000000000046}:Unknown Automation Server.Application" WITHEVENTS;
      wrdDoc@1004 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{00020906-0000-0000-C000-000000000046}:Unknown Automation Server.Document";
      ParamBln@1002 : Boolean;
      lFileName@1003 : Text[260];
      lAttachmentMgt@1100281000 : Codeunit 50002;
      lRBAutoMgt@1100281002 : Codeunit 419;
    BEGIN
      //IMH01 isat.zw Changer Attachment --> Doc Attachment
      IF ISCLEAR(wrdApp) THEN
        CREATE(wrdApp,FALSE,TRUE);

      IF (UPPERCASE(pDocAttachment."File Extension") <> 'DOC') AND
         (UPPERCASE(pDocAttachment."File Extension") <> 'DOCX')
      THEN
        EXIT(FALSE);

      //lFileName := lRBAutoMgt.EnvironFileName(Text040,pDocAttachment."File Extension");
      //lAttachmentMgt.ExportAttachment(pDocAttachment, lFileName);

      IF NOT lAttachmentMgt.DownToTempFile(pDocAttachment, lFileName) THEN
        ERROR(Text011);

      //FileName := Attachment.ConstFilename;
      //Attachment.ExportAttachment(FileName);

      wrdDoc := wrdApp.Documents.Open(lFileName);
      MergeFields := (wrdDoc.MailMerge.Fields.Count > 0);
      ParamBln := FALSE;
      wrdDoc.Close(ParamBln);
      DeleteFile(lFileName);

      CLEAR(wrdDoc);
      CLEAR(wrdApp);
    END;

    LOCAL PROCEDURE CreateILEMergeSource@12(VAR MergeFile@1000 : File;VAR Attachment@1009 : Record 5062;EntryNo@1008 : Integer;VAR HeaderIsReady@1001 : Boolean;CorrespondenceType@1005 : ' ,Hard Copy,E-Mail,Fax') LineIsFound : Boolean;
    VAR
      InteractLogEntry@1004 : Record 5065;
      CurrentLine@1003 : Text[250];
      NewLine@1002 : Text[250];
      SearchValue@1007 : Text[30];
      InStreamBLOB@1006 : InStream;
    BEGIN
      SearchValue := '<td>' + FORMAT(EntryNo) + '</td>';
      Attachment.CALCFIELDS("Merge Source");
      Attachment."Merge Source".CREATEINSTREAM(InStreamBLOB);
      REPEAT
        InStreamBLOB.READTEXT(CurrentLine);
        IF (CurrentLine = '<tr>') AND HeaderIsReady THEN BEGIN
          InStreamBLOB.READTEXT(NewLine);
          IF NewLine = SearchValue THEN BEGIN
            MergeFile.WRITE(CurrentLine);
            MergeFile.WRITE(NewLine);
            LineIsFound := TRUE
          END
        END;

        IF NOT HeaderIsReady THEN BEGIN
          MergeFile.WRITE(CurrentLine);
          IF (CurrentLine = '</tr>') THEN
            HeaderIsReady := TRUE
        END
      UNTIL LineIsFound OR InStreamBLOB.EOS;

      IF LineIsFound THEN BEGIN
        InStreamBLOB.READTEXT(NewLine);
        WHILE (NewLine <> '</tr>') DO BEGIN
          CurrentLine := NewLine;
          InStreamBLOB.READTEXT(NewLine);
          IF NewLine <> '</tr>' THEN
            MergeFile.WRITE(CurrentLine);
        END;
        IF InteractLogEntry.GET(EntryNo) THEN BEGIN
          CASE CorrespondenceType OF
            CorrespondenceType::Fax:
              MergeFile.WRITE('<td>' + AttachmentManagement.InteractionFax(InteractLogEntry) + '</td>');
            CorrespondenceType::"E-Mail":
              MergeFile.WRITE('<td>' + AttachmentManagement.InteractionEMail(InteractLogEntry) + '</td>')
            ELSE
              MergeFile.WRITE('<td></td>')
          END
        END
      END
    END;

    LOCAL PROCEDURE ImportMergeSourceFile@10(AttachmentNo@1000 : Integer);
    VAR
      Attachment@1001 : Record 5062;
    BEGIN
      Attachment.GET(AttachmentNo);
      Attachment.CALCFIELDS("Merge Source");
      IF NOT Attachment."Merge Source".HASVALUE THEN BEGIN
        IF NOT DocContainMergefields(Attachment) THEN
          EXIT;
        MergeSourceBufferFile.WRITE('</table>');
        MergeSourceBufferFile.WRITE('</body>');
        MergeSourceBufferFile.WRITE('</html>');
        MergeSourceBufferFile.CLOSE;
        Attachment."Merge Source".IMPORT(MergeSourceBufferFileName);
        Attachment.MODIFY;
        DeleteFile(MergeSourceBufferFileName);
        MergeSourceBufferFileName := ''
      END
    END;

    LOCAL PROCEDURE CreateILEMergeSourceByDocAtt@1100281005(VAR MergeFile@1000 : File;VAR pDocAttachment@1009 : Record 50021;EntryNo@1008 : Integer;VAR HeaderIsReady@1001 : Boolean;CorrespondenceType@1005 : ' ,Hard Copy,E-Mail,Fax') LineIsFound : Boolean;
    VAR
      InteractLogEntry@1004 : Record 5065;
      CurrentLine@1003 : Text[250];
      NewLine@1002 : Text[250];
      SearchValue@1007 : Text[30];
      InStreamBLOB@1006 : InStream;
    BEGIN
      //IMH01 isat.zw Changer Attachment --> Doc Attachment
      SearchValue := '<td>' + FORMAT(EntryNo) + '</td>';
      pDocAttachment.CALCFIELDS("Merge Source");
      pDocAttachment."Merge Source".CREATEINSTREAM(InStreamBLOB);
      REPEAT
        InStreamBLOB.READTEXT(CurrentLine);
        IF (CurrentLine = '<tr>') AND HeaderIsReady THEN BEGIN
          InStreamBLOB.READTEXT(NewLine);
          IF NewLine = SearchValue THEN BEGIN
            MergeFile.WRITE(CurrentLine);
            MergeFile.WRITE(NewLine);
            LineIsFound := TRUE
          END
        END;

        IF NOT HeaderIsReady THEN BEGIN
          MergeFile.WRITE(CurrentLine);
          IF (CurrentLine = '</tr>') THEN
            HeaderIsReady := TRUE
        END
      UNTIL LineIsFound OR InStreamBLOB.EOS;

      IF LineIsFound THEN BEGIN
        InStreamBLOB.READTEXT(NewLine);
        WHILE (NewLine <> '</tr>') DO BEGIN
          CurrentLine := NewLine;
          InStreamBLOB.READTEXT(NewLine);
          IF NewLine <> '</tr>' THEN
            MergeFile.WRITE(CurrentLine);
        END;
        IF InteractLogEntry.GET(EntryNo) THEN BEGIN
          CASE CorrespondenceType OF
            CorrespondenceType::Fax:
              MergeFile.WRITE('<td>' + AttachmentManagement.InteractionFax(InteractLogEntry) + '</td>');
            CorrespondenceType::"E-Mail":
              MergeFile.WRITE('<td>' + AttachmentManagement.InteractionEMail(InteractLogEntry) + '</td>')
            ELSE
              MergeFile.WRITE('<td></td>')
          END
        END
      END
    END;

    LOCAL PROCEDURE ImportMergeSourceFileByDocAtt@1100281001(pAttachTableRef@1100281004 : Integer;pAttachKeyInt1@1100281000 : Integer;pAttachKeyInt2@1100281001 : Integer;pAttachKeyCode1@1100281002 : Code[20];pAttachKeyCode2@1100281003 : Code[20];pAttachmentNo@1000 : Integer);
    VAR
      lDocAttachment@1001 : Record 50021;
    BEGIN
      //IMH01 isat.zw Changer Attachment --> Doc Attachment
      lDocAttachment.GET(pAttachTableRef, pAttachKeyInt1, pAttachKeyInt2, pAttachKeyCode1, pAttachKeyCode2, pAttachmentNo);
      lDocAttachment.CALCFIELDS("Merge Source");
      //IF NOT lDocAttachment."Merge Source".HASVALUE THEN BEGIN
      IF lDocAttachment."Merge Source".HASVALUE THEN
        CLEAR(lDocAttachment."Merge Source");
      IF NOT DocContainMergefieldsByDocAtt(lDocAttachment) THEN
        EXIT;
      MergeSourceBufferFile.WRITE('</table>');
      MergeSourceBufferFile.WRITE('</body>');
      MergeSourceBufferFile.WRITE('</html>');
      MergeSourceBufferFile.CLOSE;
      lDocAttachment."Merge Source".IMPORT(MergeSourceBufferFileName);
      lDocAttachment.MODIFY;
      DeleteFile(MergeSourceBufferFileName);
      MergeSourceBufferFileName := '';
    END;

    LOCAL PROCEDURE AppendToMergeSource@41(MergeFileName@1000 : Text[260]);
    VAR
      SourceFile@1003 : File;
      CurrentLine@1004 : Text[250];
      SkipHeader@1005 : Boolean;
      MergeFileNameServer@1006 : Text[260];
    BEGIN
      IF MergeSourceBufferFileName = '' THEN BEGIN
        MergeSourceBufferFileName := RBAutoMgt.ServerTempFileName(Text029,'.HTM');
        MergeSourceBufferFile.WRITEMODE := TRUE;
        MergeSourceBufferFile.TEXTMODE := TRUE;
        MergeSourceBufferFile.CREATE(MergeSourceBufferFileName);
      END ELSE
        SkipHeader := TRUE;
      SourceFile.TEXTMODE := TRUE;

      IF ISSERVICETIER THEN BEGIN
        MergeFileNameServer :=  RBAutoMgt.ServerTempFileName(Text029,'.HTM');
        UPLOAD(Text021, '', Text032, MergeFileName, MergeFileNameServer)
      END ELSE
        MergeFileNameServer := MergeFileName;

      SourceFile.OPEN(MergeFileNameServer);
      IF SkipHeader THEN
        REPEAT
          SourceFile.READ(CurrentLine)
        UNTIL (CurrentLine = '</tr>');
      WHILE (CurrentLine <> '</table>') AND (SourceFile.POS <> SourceFile.LEN) DO BEGIN
        SourceFile.READ(CurrentLine);
        IF CurrentLine <> '</table>' THEN
          MergeSourceBufferFile.WRITE(CurrentLine);
      END;
      SourceFile.CLOSE;

      IF ISSERVICETIER THEN
        ERASE(MergeFileNameServer);
    END;

    PROCEDURE OpenMailMergeInRoleBasedClient@14(InvitationMessage@1000 : Text[1024];MainFileName@1001 : Text[1024];MergeFileName@1002 : Text[1024];UploadMessage@1004 : Text[1024]) ToFile : Text[1024];
    VAR
      FromFolder@1005 : Text[1024];
      FromFile@1003 : Text[255];
    BEGIN
      IF CONFIRM(InvitationMessage) THEN BEGIN
        IF STRPOS(Text029,'\') <> 0 THEN
          ToFile := COPYSTR(Text029,2,STRLEN(Text029)-1) + '.HTM';
        DOWNLOAD(MergeFileName,Text034,'',Text032,ToFile);
        ToFile := Text037;
        DOWNLOAD(MainFileName,Text035,'',Text033,ToFile);

        GetFileFolderPart(ToFile,FromFolder,FromFile);
        ToFile := '';
        IF UploadMessage <> '' THEN
          IF CONFIRM(UploadMessage) THEN
            UPLOAD(Text036,FromFolder,Text033,FromFile,ToFile);
      END
    END;

    PROCEDURE GetFileFolderPart@15(FileName@1000 : Text[1024];VAR FolderPart@1005 : Text[1024];VAR FilePart@1004 : Text[1024]);
    VAR
      i@1001 : Integer;
      returnStr@1003 : Integer;
      tempStr@1002 : Text[1024];
    BEGIN
      tempStr := COPYSTR(FileName,1,STRPOS(FileName,'\'));
      FolderPart := tempStr;

      WHILE (tempStr <> '') DO BEGIN
        FileName := COPYSTR(FileName,STRLEN(tempStr)+1,STRLEN(FileName)-STRLEN(tempStr));
        tempStr := COPYSTR(FileName,1,STRPOS(FileName,'\'));
        FolderPart := FolderPart + tempStr;
      END;
      FilePart := FileName;
    END;

    PROCEDURE GetWordDocExt@17(VersionTxt@1001 : Text[30]) : Code[4];
    VAR
      Version@1200 : Decimal;
      SeparatorPos@1201 : Integer;
      CommaStr@1202 : Code[1];
      DefaultStr@1203 : Code[10];
      EvalOK@1204 : Boolean;
    BEGIN
      DefaultStr := 'DOC';
      SeparatorPos := STRPOS(VersionTxt,'.');
      IF SeparatorPos = 0 THEN
        SeparatorPos := STRPOS(VersionTxt,',');
      IF SeparatorPos = 0 THEN
        EvalOK := EVALUATE(Version,VersionTxt)
      ELSE BEGIN
        CommaStr := COPYSTR(FORMAT(11/10),2,1);
        EvalOK :=
          EVALUATE(Version,COPYSTR(VersionTxt,1,SeparatorPos - 1) + CommaStr + COPYSTR(VersionTxt,SeparatorPos + 1));
      END;
      IF EvalOK AND (Version >= 12.0) THEN
        EXIT('DOCX');
      EXIT(DefaultStr);
    END;

    PROCEDURE SetInteractionTemplate@1100281000(pInteractionTemplateCode@1100281000 : Code[10]);
    BEGIN
      //IMH02
      IF NOT InteractionTemplate.GET(pInteractionTemplateCode) THEN
        CLEAR(InteractionTemplate);
    END;

    PROCEDURE AddFieldToWrdMergeFile@1100281003(VAR pwrdMergefile@1100281001 : Automation "{3C2554FE-2B41-4543-B3E8-E64296773DA5} 2.0:{40D88563-F0DA-4B3D-AD1B-34EFA8C3978A}:Unknown Automation Server.MergeHandler";pContactNo@1100281009 : Code[20];pServiceNo@1100281006 : Code[20];pServiceHeaderNo@1100281007 : Code[20];pInterventionLineNo@1100281008 : Integer;pCustomerNo@1100281011 : Code[20];pSalesperson@1100281017 : Code[10];pInteractionLangCode@1100281016 : Code[10];pDocumentType@1100281033 : Integer;pDocumentNo@1100281034 : Code[20];pUseProviderNo@1100281035 : Code[20];VAR pMergeFieldExist@1100281036 : Boolean) : Integer;
    VAR
      lInteractionTemplateField@1100281000 : Record 50083;
      lFieldRef@1100281002 : FieldRef;
      lFieldRef1@1100281003 : FieldRef;
      lFieldRef2@1100281010 : FieldRef;
      lFieldRef3@1100281022 : FieldRef;
      lRecRef@1100281004 : RecordRef;
      lFieldCount@1100281005 : Integer;
      lProviderNo@1100281012 : Code[20];
      lSalutationField@1100281013 : Boolean;
      lProvider@1100281014 : Record 50000;
      lContact@1100281015 : Record 5050;
      lTempInteractfield@1100281018 : TEMPORARY Record 50083;
      lRecIteration@1100281020 : Integer;
      lInt@1100281019 : Integer;
      lEmptyRec@1100281021 : Boolean;
      lCode@1100281023 : Record 50079;
      lServHeader@1100281024 : Record 5900;
      lServ@1100281025 : Record 50066;
      lServInterventionLine@1100281032 : Record 50075;
      lCust@1100281026 : Record 18;
      lCorpRegion@1100281027 : Record 50058;
      lPhoneNo@1100281028 : Text[30];
      lStandardText@1100281029 : Record 7;
      lOrganizationalLevel@1100281030 : Record 5070;
      lJobResponsibility@1100281031 : Record 5066;
      lProviderSetup@1100281037 : Record 50011;
      lCompletnessTask@1100281038 : Record 50004;
    BEGIN
      //IMH02
      //Alimente les champs de fusions avec la table 50083
      pMergeFieldExist := FALSE;
      lInteractionTemplateField.SETRANGE("Interaction Template Code", InteractionTemplate.Code);
      lInteractionTemplateField.SETFILTER("Source Field No.", '<>%1' , 0); //IMH27.ST
      IF lInteractionTemplateField.ISEMPTY THEN
        EXIT;
      pMergeFieldExist := TRUE;
      lInteractionTemplateField.FINDSET;
      REPEAT
      //<<IMH08.ST
        IF lInteractionTemplateField.GetMaxIteration > 1 THEN BEGIN
          lTempInteractfield := lInteractionTemplateField;
          lTempInteractfield.INSERT;
        END
        ELSE BEGIN
      //>>IMH08.ST
        lSalutationField := FALSE;  //IMH07
        lRecRef.OPEN(lInteractionTemplateField."Source Table ID");
        CASE lInteractionTemplateField."Source Table ID" OF
          DATABASE::"Company Information":;//IMH04
          DATABASE::Contact:
            BEGIN
              //<<IMH07
              CASE lInteractionTemplateField."Source Field No." OF
                5101 : BEGIN
                  lContact.GET(pContactNo);
                  pwrdMergefile.AddField(lContact.GetSalutation(0,pInteractionLangCode));
                  pwrdMergefile.AddField(lContact.GetSalutation(1,pInteractionLangCode));
                  lSalutationField := TRUE;
                  lFieldCount += 2;
                END ;
                91:BEGIN
                  lContact.GET(pContactNo);
                  pwrdMergefile.AddField(lContact."Post Code" + ' ' + lContact.City);
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                ELSE BEGIN
                  //>>IMH07
                  lFieldRef := lRecRef.FIELD(1);
                  lFieldRef.SETFILTER(pContactNo);
                END;
              END;
            END;
          DATABASE::Service:
            BEGIN
              //<<IMH11.ST
              CASE lInteractionTemplateField."Source Field No."  OF
                27:BEGIN
                  lServ.GET(pServiceNo);
                  lContact.GET(lServ."Contact No.");
                  pwrdMergefile.AddField(lContact.GetSalutation(0,pInteractionLangCode));
                  pwrdMergefile.AddField(lContact.GetSalutation(1,pInteractionLangCode));
                  lSalutationField := TRUE;
                  lFieldCount += 2;
                END;
                22:BEGIN
                  lServ.GET(pServiceNo);
                  pwrdMergefile.AddField(lServ."Post Code" + ' ' + lServ.City);
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                49:BEGIN
                  lServ.GET(pServiceNo);
                  pwrdMergefile.AddField(FORMAT(lServ."Event Time",0,'<Hours24>H<Minutes,2>'));
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                71:BEGIN
                  lServ.GET(pServiceNo);
                  lServ.CALCFIELDS("Corporate Contact Name");
                  pwrdMergefile.AddField(lServ."Corporate Contact Name");
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                50525:BEGIN
                  lServ.GET(pServiceNo);
                  lServ.CALCFIELDS("Job Title");
                  IF lJobResponsibility.GET(lServ."Job Title") THEN
                    pwrdMergefile.AddField(lJobResponsibility.Description)
                  ELSE
                    pwrdMergefile.AddField('');
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                50526:BEGIN
                  lServ.GET(pServiceNo);
                  lServ.CALCFIELDS("Organizational Level Code");
                  IF lOrganizationalLevel.GET(lServ."Organizational Level Code") THEN
                    pwrdMergefile.AddField(lOrganizationalLevel.Description)
                  ELSE
                    pwrdMergefile.AddField('');
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                50527:BEGIN
                  lServ.GET(pServiceNo);
                  lServ.CALCFIELDS(lServ."First Job Responsibilities");
                  IF lJobResponsibility.GET(lServ."First Job Responsibilities") THEN
                    pwrdMergefile.AddField(lJobResponsibility.Description)
                  ELSE
                    pwrdMergefile.AddField('');
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                ELSE BEGIN
                  //>>IMH11.ST
                  lFieldRef := lRecRef.FIELD(1);
                  lFieldRef.SETFILTER(pServiceNo);
                END;
              END;
            END;
          DATABASE::"Service Header":
            BEGIN
              CASE lInteractionTemplateField."Source Field No." OF
                5101 : BEGIN
                  IF lServHeader.GET(lServHeader."Document Type"::Invoice,pServiceHeaderNo) THEN
                    IF lCode.GET('5900','5101',lServHeader."Declaration Comment Code") THEN BEGIN
                      pwrdMergefile.AddField(lCode.Description);
                      lSalutationField := TRUE;
                      lFieldCount += 1;
                    END;
                END;
                50485 : BEGIN
                  IF lServHeader.GET(lServHeader."Document Type"::Invoice,pServiceHeaderNo) THEN
                  BEGIN
                      lServHeader.CALCFIELDS("Service Order Type Description");
                      pwrdMergefile.AddField(lServHeader."Service Order Type Description");
                      lSalutationField := TRUE;
                      lFieldCount += 1;
                    END;
                END;
                85 : BEGIN
                  IF lServHeader.GET(lServHeader."Document Type"::Invoice,pServiceHeaderNo) THEN
                    BEGIN
                      pwrdMergefile.AddField(lServHeader."Bill-to Post Code" +' ' + lServHeader."Bill-to City");
                      lSalutationField := TRUE;
                      lFieldCount += 1;
                    END;
                END ;
                88 : BEGIN
                  IF lServHeader.GET(lServHeader."Document Type"::Invoice,pServiceHeaderNo) THEN
                    BEGIN
                      pwrdMergefile.AddField(lServHeader."Post Code" +' ' + lServHeader.City);
                      lSalutationField := TRUE;
                      lFieldCount += 1;
                    END;
                END ;
                91 : BEGIN
                  IF lServHeader.GET(lServHeader."Document Type"::Invoice,pServiceHeaderNo) THEN
                    BEGIN
                      pwrdMergefile.AddField(lServHeader."Ship-to Post Code" +' ' + lServHeader."Ship-to City");
                      lSalutationField := TRUE;
                      lFieldCount += 1;
                    END;
                END ;
                50416 : BEGIN
                  IF lServHeader.GET(lServHeader."Document Type"::Invoice,pServiceHeaderNo) THEN
                    BEGIN
                      IF lServHeader."9h-12h" THEN
                        pwrdMergefile.AddField('Oui')
                      ELSE
                        pwrdMergefile.AddField('');
                      lSalutationField := TRUE;
                      lFieldCount += 1;
                    END;
                END ;
                50417 : BEGIN
                  IF lServHeader.GET(lServHeader."Document Type"::Invoice,pServiceHeaderNo) THEN
                    BEGIN
                      IF lServHeader."14h-17h" THEN
                        pwrdMergefile.AddField('Oui')
                      ELSE
                        pwrdMergefile.AddField('');
                      lSalutationField := TRUE;
                      lFieldCount += 1;
                    END;
                END ;
                50418 : BEGIN
                  IF lServHeader.GET(lServHeader."Document Type"::Invoice,pServiceHeaderNo) THEN
                    BEGIN
                      IF lStandardText.GET(lServHeader."Declaration Comment Code") THEN
                        pwrdMergefile.AddField(lStandardText.Description)
                      ELSE
                        pwrdMergefile.AddField('');
                      lSalutationField := TRUE;
                      lFieldCount += 1;
                    END;
                END;
                50036 :
                  IF lServHeader.GET(lServHeader."Document Type"::Invoice,pServiceHeaderNo) THEN BEGIN
                    pwrdMergefile.AddField(lServHeader.GetInterventionCeiling(TRUE));
                    lSalutationField := TRUE;
                    lFieldCount += 1;
                  END ;
                ELSE BEGIN
      //<<IMH27.ST
                  lFieldRef := lRecRef.FIELD(1); //Document type
                  lFieldRef.SETFILTER('2');
      //>>IMH27.ST
                  lFieldRef := lRecRef.FIELD(3);
                  lFieldRef.SETFILTER(pServiceHeaderNo);
                END;
              END;
            END;
          DATABASE::"Service Intervention Line":
            BEGIN
              //<<IMH40
              IF NOT lServInterventionLine.GET(pServiceHeaderNo,pInterventionLineNo) THEN BEGIN
                lServHeader.GET(lServHeader."Document Type"::Invoice, pServiceHeaderNo);
                IF NOT lServHeader.Claim THEN
                  ERROR(Text50019);
                lServInterventionLine.SETRANGE("Service Header No.", pServiceHeaderNo);
                lServInterventionLine.FINDFIRST;
              END;
              //>>IMH40
              CASE lInteractionTemplateField."Source Field No." OF
                24:BEGIN
                  //lServInterventionLine.GET(pServiceHeaderNo,pInterventionLineNo);  //IMH40 d‚sactiv‚
                  pwrdMergefile.AddField(lServInterventionLine."Post Code" + ' ' + lServInterventionLine.City);
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                //<<IMH39
                64 : BEGIN
                  //lServInterventionLine.GET(pServiceHeaderNo,pInterventionLineNo);     //IMH40 d‚sactiv‚
                  IF lServInterventionLine."Next Appointment Date" <> 0D THEN BEGIN
                    pwrdMergefile.AddField(
                      //FORMAT(DATE2DWY(lServInterventionLine."Next Appointment Date",2)) + ' - ' +
                      FORMAT(lServInterventionLine."Next Appointment Date",0,'<Month Text> <Year4>'));
                  END ELSE BEGIN
                    pwrdMergefile.AddField('');
                  END;
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                //>>IMH39
                105:BEGIN
                  //lServInterventionLine.GET(pServiceHeaderNo,pInterventionLineNo);   //IMH40 d‚sactiv‚
                  pwrdMergefile.AddField(lServInterventionLine."Provider Post Code" + ' ' + lServInterventionLine."Provider City");
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                305:BEGIN
                  //lServInterventionLine.GET(pServiceHeaderNo,pInterventionLineNo);  //IMH40 d‚sactiv‚
                  lServInterventionLine.CALCFIELDS("Quote Amount Incl. VAT (LCY)");
                  pwrdMergefile.AddField(FORMAT(lServInterventionLine."Quote Amount Incl. VAT (LCY)"));
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                306:BEGIN
                  //lServInterventionLine.GET(pServiceHeaderNo,pInterventionLineNo); //IMH40 d‚sactiv‚
                  lServInterventionLine.CALCFIELDS("Quote Amount Incl. VAT");
                  pwrdMergefile.AddField(FORMAT(lServInterventionLine."Quote Amount Incl. VAT"));
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                317:BEGIN
                  //lServInterventionLine.GET(pServiceHeaderNo,pInterventionLineNo); //IMH40 d‚sactiv‚
                  lServInterventionLine.CALCFIELDS("Quote Amount Excl. VAT (LCY)");
                  pwrdMergefile.AddField(FORMAT(lServInterventionLine."Quote Amount Excl. VAT (LCY)"));
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                318:BEGIN
                  //lServInterventionLine.GET(pServiceHeaderNo,pInterventionLineNo); //IMH40 d‚sactiv‚
                  lServInterventionLine.CALCFIELDS("Quote Amount Excl. VAT");
                  pwrdMergefile.AddField(FORMAT(lServInterventionLine."Quote Amount Incl. VAT (LCY)"));
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                ELSE BEGIN
                  lFieldRef := lRecRef.FIELD(3);
                  //<<IMH40
                  IF pInterventionLineNo <> 0 THEN
                    lFieldRef1 := lRecRef.FIELD(4);
                  //>>IMH40
                  lFieldRef.SETFILTER(pServiceHeaderNo);
                  //<<IMH40
                  IF pInterventionLineNo <> 0 THEN
                    lFieldRef1.SETFILTER(FORMAT(pInterventionLineNo));
                  //>>IMH40
                END;
              END;
            END;
          //<<IMH45 IMH.WGA
          DATABASE::"Service Intervention Quote": BEGIN
            CASE lInteractionTemplateField."Source Field No." OF
                0: BEGIN
                END;
              ELSE BEGIN
                lFieldRef := lRecRef.FIELD(3);   // Service Header No
                lFieldRef.SETRANGE(pServiceHeaderNo);

                lFieldRef1 := lRecRef.FIELD(4);   // Service Intervention Line No
                lFieldRef1.SETRANGE(pInterventionLineNo);

                lFieldRef2 := lRecRef.FIELD(44);   // Active
                lFieldRef2.SETRANGE(TRUE);

               END;
            END;
          END;
          //>>IMH45

          DATABASE::Customer:
            BEGIN
              CASE lInteractionTemplateField."Source Field No." OF
                5:BEGIN
                  lServ.GET(pServiceNo);
                  IF lCorpRegion.GET(lServ."Corporate No.",lServ."Corporate Region Code") THEN
                    lCust.GET(lCorpRegion."Sell-to Customer No.")
                  ELSE
                    lCust.GET(pCustomerNo);
                  pwrdMergefile.AddField(lCust.Address);
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                6:BEGIN
                  lServ.GET(pServiceNo);
                  IF lCorpRegion.GET(lServ."Corporate No.",lServ."Corporate Region Code") THEN
                    lCust.GET(lCorpRegion."Sell-to Customer No.")
                  ELSE
                    lCust.GET(pCustomerNo);
                  pwrdMergefile.AddField(lCust."Address 2");
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                7:BEGIN
                  lServ.GET(pServiceNo);
                  IF lCorpRegion.GET(lServ."Corporate No.",lServ."Corporate Region Code") THEN
                    lCust.GET(lCorpRegion."Sell-to Customer No.")
                  ELSE
                    lCust.GET(pCustomerNo);
                  pwrdMergefile.AddField(lCust.City);
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                91:BEGIN
                  lServ.GET(pServiceNo);
                  IF lCorpRegion.GET(lServ."Corporate No.",lServ."Corporate Region Code") THEN
                    lCust.GET(lCorpRegion."Sell-to Customer No.")
                  ELSE
                    lCust.GET(pCustomerNo);
                  pwrdMergefile.AddField(lCust."Post Code" + ' ' + lCust.City);
                  lSalutationField := TRUE;
                  lFieldCount += 1;
                END;
                ELSE BEGIN
                  lFieldRef := lRecRef.FIELD(1);
                  lFieldRef.SETFILTER(pCustomerNo);
                END;
              END;
            END;
      //<<IMH08.ST
          DATABASE::"Salesperson/Purchaser" :
            BEGIN
              lFieldRef := lRecRef.FIELD(1);
              lFieldRef.SETFILTER(pSalesperson);
            END;
      //>>IMH08.ST
          //<<IMH04
          DATABASE::Provider:
            BEGIN
              IF GetProviderNo(pContactNo, pServiceHeaderNo,pInterventionLineNo,pUseProviderNo,lProviderNo) THEN BEGIN
                //<<IMH07
                CASE lInteractionTemplateField."Source Field No." OF
                  5101 : BEGIN
                    lProvider.GET(lProviderNo);
                    pwrdMergefile.AddField(lProvider.GetSalutation(0,pInteractionLangCode));
                    pwrdMergefile.AddField(lProvider.GetSalutation(1,pInteractionLangCode));
                    lSalutationField := TRUE;
                    lFieldCount += 2;
                  END;
                  91 : BEGIN
                    lProvider.GET(lProviderNo);
                    pwrdMergefile.AddField(lProvider."Post Code" +' ' + lProvider.City);
                    lSalutationField := TRUE;
                    lFieldCount += 1;
                  END;
                  2500 : BEGIN
                    lProviderSetup.GET;
                    lCompletnessTask.RESET;
                    lCompletnessTask.SETRANGE("Provider No.",lProviderNo);
                    lCompletnessTask.SETRANGE("Document Code",lProviderSetup."Doc. Code service convention");
                    IF lCompletnessTask.FINDFIRST THEN
                      pwrdMergefile.AddField(FORMAT(lCompletnessTask."Receive Date"))
                    ELSE
                      pwrdMergefile.AddField('');
                    lSalutationField := TRUE;
                    lFieldCount += 1;
                  END;
                  9 : BEGIN
                    lProvider.GET(lProviderNo);
                    lPhoneNo := '';
                    IF (lProvider."Phone No." <> '') THEN
                      lPhoneNo := lProvider."Phone No.";
                    IF (lPhoneNo = '') AND (lProvider."Business Phone No." <> '') THEN
                      lPhoneNo := lProvider."Business Phone No.";
                    IF (lPhoneNo = '') AND (lProvider."Mobile Phone No." <> '') THEN
                      lPhoneNo := lProvider."Mobile Phone No.";
                    IF (lPhoneNo = '') AND (lProvider."Mobile Phone No. 2" <> '') THEN
                      lPhoneNo := lProvider."Mobile Phone No. 2";
                    pwrdMergefile.AddField(lPhoneNo);
                    lSalutationField := TRUE;
                    lFieldCount += 1;
                  END;
                    //<<IMH15
                  54032 :BEGIN
                    lProvider.GET(lProviderNo);
                    IF lContact.GET(lProvider."Admin. Contact No.") THEN BEGIN
                      pwrdMergefile.AddField(lContact.GetSalutation(0,pInteractionLangCode));
                      pwrdMergefile.AddField(lContact.GetSalutation(1,pInteractionLangCode));
                    END ELSE BEGIN
                      pwrdMergefile.AddField('');
                      pwrdMergefile.AddField('');
                    END;
                    lSalutationField := TRUE;
                    lFieldCount += 2;
                  END;
                  //>>IMH15
                  ELSE BEGIN
                    lFieldRef := lRecRef.FIELD(1);
                    lFieldRef.SETFILTER(lProviderNo);
                  END;
                END;
              END ELSE BEGIN
                lSalutationField := TRUE;  //IMH07 No provider non trouv‚
                pwrdMergefile.AddField('');
                IF lInteractionTemplateField."Source Field No." = 5101 THEN
                  pwrdMergefile.AddField('');
              END;
              //>>IMH07
            END;
          DATABASE::"Purchase Header":
            BEGIN
              //<<IMH07
              CASE lInteractionTemplateField."Source Field No." OF
                  0: BEGIN
                  END;
                ELSE BEGIN
                  //>>IMH07
                  lFieldRef := lRecRef.FIELD(3);
                  lFieldRef.SETFILTER(pDocumentNo);
                END;
              END;
            END;
          DATABASE::"Purch. Inv. Header":
            BEGIN
              //<<IMH07
              CASE lInteractionTemplateField."Source Field No." OF
                  0: BEGIN
                  END;
                ELSE BEGIN
                  //>>IMH07
                  lFieldRef := lRecRef.FIELD(3);
                  lFieldRef.SETFILTER(pDocumentNo);
                END;
              END;
            END;
          //<<IMH25
          DATABASE::"Service Header Device":
            BEGIN
              //<<IMH07
              CASE lInteractionTemplateField."Source Field No." OF
                  0: BEGIN
                  END;
                ELSE BEGIN
                  //>>IMH07
                  lFieldRef := lRecRef.FIELD(3);
                  lFieldRef.SETFILTER(pServiceHeaderNo);
                END;
              END;
            END;
          DATABASE::"Service Header Claims":
            BEGIN
              //<<IMH07
              CASE lInteractionTemplateField."Source Field No." OF
                  0: BEGIN
                  END;
                ELSE BEGIN
                  //>>IMH07
                  lFieldRef := lRecRef.FIELD(1);
                  lFieldRef.SETFILTER(pServiceHeaderNo);
                END;
              END;
            END;
          //<<IMH32
          DATABASE::"Service Header Address":
            BEGIN
              CASE lInteractionTemplateField."Source Field No." OF
                0: BEGIN
                END;
                ELSE BEGIN
                  lServInterventionLine.GET(pServiceHeaderNo,pInterventionLineNo);
                  lFieldRef := lRecRef.FIELD(3);
                  lFieldRef1 := lRecRef.FIELD(4);
                  lFieldRef2 := lRecRef.FIELD(5);
                  lFieldRef.SETFILTER(pServiceHeaderNo);
                  lFieldRef1.SETFILTER(FORMAT(lServInterventionLine."Address Type"));
                  lFieldRef2.SETFILTER(FORMAT(lServInterventionLine."Address No."));
                END;
              END;
            END;
          //>>IMH32
          //<<IMH33
          DATABASE::"Network Visit":
            BEGIN
              //<<IMH07
              CASE lInteractionTemplateField."Source Field No." OF
                  0: BEGIN
                  END;
                ELSE BEGIN
                  //>>IMH07
                  lFieldRef := lRecRef.FIELD(1);
                  lFieldRef.SETFILTER(pDocumentNo);
                END;
              END;
            END;
          //>>IMH33
      //<<IMH44.ST
          DATABASE::"User Setup" : BEGIN
            lFieldRef := lRecRef.FIELD(1);
            lFieldRef.SETFILTER(USERID);
          END;
      //>>IMH44.ST
          //>>IMH25
          ELSE BEGIN
            ERROR(Text041);
          END;
          //>>IMH04
        END; // CASE
        IF NOT lSalutationField THEN            //IMH07
          IF lRecRef.FINDFIRST THEN BEGIN
            lFieldRef2 := lRecRef.FIELD(lInteractionTemplateField."Source Field No.");
            IF FORMAT(lFieldRef2.CLASS) = 'FlowField' THEN
              lFieldRef2.CALCFIELD;
            pwrdMergefile.AddField(FORMAT(lFieldRef2.VALUE));
            lFieldCount += 1;
          END ELSE
            pwrdMergefile.AddField('');

        lRecRef.CLOSE;
        END; //IMH08.ST
      UNTIL lInteractionTemplateField.NEXT = 0;

      //<<IMH08.ST
      WITH lTempInteractfield DO BEGIN
        IF FINDFIRST THEN
          REPEAT
            SETRANGE("Source Table ID", "Source Table ID");
            // Gestion recref
            lRecRef.OPEN("Source Table ID");
            CASE "Source Table ID" OF
              DATABASE::"Service Intervention Quote" : BEGIN
                lFieldRef := lRecRef.FIELD(3); // Nø ligne produit
                IF pServiceHeaderNo = '' THEN
                  lFieldRef.SETRANGE('')
                ELSE
                  lFieldRef.SETFILTER(STRSUBSTNO('=%1', pServiceHeaderNo));
                IF pInterventionLineNo <> 0 THEN BEGIN
                  lFieldRef1 := lRecRef.FIELD(4); // Nø ligne intervention
                  lFieldRef1.SETRANGE(pInterventionLineNo);
                END;
                lFieldRef3 := lRecRef.FIELD(44);
                lFieldRef3.SETRANGE(TRUE);
              END;
              ELSE
                ERROR(Text041);
            END; // CASE

            lRecIteration := GetMaxIteration;
            lInt := 0;
            REPEAT
              // Gestion  des champs
              lInt += 1;
              IF lInt = 1 THEN
                lEmptyRec := NOT lRecRef.FINDFIRST
              ELSE BEGIN
                IF NOT lEmptyRec THEN
                  lEmptyRec := (lRecRef.NEXT = 0);
              END;
              FINDFIRST;
              REPEAT
                IF lEmptyRec THEN BEGIN
                  pwrdMergefile.AddField('');
                  lFieldCount += 1;
                END
                ELSE BEGIN
                  lFieldRef2 := lRecRef.FIELD("Source Field No.");
                  IF FORMAT(lFieldRef2.CLASS) = 'FlowField' THEN
                    lFieldRef2.CALCFIELD;
                  pwrdMergefile.AddField(FORMAT(lFieldRef2.VALUE));
                  lFieldCount += 1;
                END;
              UNTIL NEXT = 0;
            UNTIL lInt = lRecIteration;
            DELETEALL(FALSE);
            SETRANGE("Source Table ID");
          UNTIL NOT FINDFIRST;
      END; // WITH
      //>>IMH08.ST
      EXIT(lFieldCount);
    END;

    PROCEDURE AddFieldCaptionToWrdMergeFile@1100281012(VAR pwrdMergefile@1100281001 : Automation "{3C2554FE-2B41-4543-B3E8-E64296773DA5} 2.0:{40D88563-F0DA-4B3D-AD1B-34EFA8C3978A}:Unknown Automation Server.MergeHandler") : Integer;
    VAR
      lInteractionTemplateField@1100281000 : Record 50083;
      lFieldRef@1100281002 : FieldRef;
      lRecRef@1100281004 : RecordRef;
      lFieldCount@1100281005 : Integer;
      lSalutationField@1100281003 : Boolean;
      lTempInteractField@1100281006 : TEMPORARY Record 50083;
      lTempInteractionTempField@1100281009 : TEMPORARY Record 5064;
      lRecIteration@1100281007 : Integer;
      lInt@1100281008 : Integer;
    BEGIN
      //IMH18 Passer les codes dans la fonction LoadTempFieldToWrdMergeFile
      //IMH02
      //Alimente les champs de fusions avec la table 50083
      //<<IMH18
      lFieldCount := LoadTempFieldToWrdMergeFile(lTempInteractionTempField);
      IF lTempInteractionTempField.FINDFIRST THEN
        REPEAT
          pwrdMergefile.AddField(lTempInteractionTempField."Mail Attachment Name");
        UNTIL lTempInteractionTempField.NEXT = 0;
      EXIT(lFieldCount);
      //>>IMH18
      {
      //<<IMH18 remplacer par la fonction  LoadTempFieldToWrdMergeFile

      //IMH02
      //Alimente les champs de fusions avec la table 50083
      lInteractionTemplateField.SETRANGE("Interaction Template Code", InteractionTemplate.Code);
      lInteractionTemplateField.SETFILTER("Source FIeld No.", '<>%1' , 0); //IMH27.ST
      IF lInteractionTemplateField.ISEMPTY THEN
        EXIT;
      lInteractionTemplateField.FINDSET(FALSE);
      REPEAT
      //<<IMH08.ST
        IF lInteractionTemplateField.GetMaxIteration > 1 THEN BEGIN
          lTempInteractField := lInteractionTemplateField;
          lTempInteractField.INSERT(FALSE);
        END
        ELSE BEGIN
      //>>IMH08.ST
        //<<IMH07
        lSalutationField := FALSE;
        CASE lInteractionTemplateField."Source Table ID" OF
          DATABASE::Contact :  lSalutationField := lInteractionTemplateField."Source Field No." = 5101;
          DATABASE::Provider : lSalutationField := (lInteractionTemplateField."Source Field No." = 5101)
                                                    OR (lInteractionTemplateField."Source Field No." = 54032);  //IMH15
          DATABASE::Service : lSalutationField := lInteractionTemplateField."Source Field No." = 27; //IMH11.ST
        END;
        IF lSalutationField THEN BEGIN
          pwrdMergefile.AddField(lInteractionTemplateField."Merge Field Name" + '_' + Text030);
          pwrdMergefile.AddField(lInteractionTemplateField."Merge Field Name" + '_' + Text031);
          lFieldCount += 2;
        END ELSE BEGIN  //>>IMH07
          pwrdMergefile.AddField(lInteractionTemplateField."Merge Field Name");
          lFieldCount += 1;
        END;
        END; //IMH08.ST
      UNTIL lInteractionTemplateField.NEXT = 0;
      //<<IMH08.ST
      WITH lTempInteractField DO BEGIN
        IF FINDFIRST THEN
          REPEAT
            SETRANGE("Source Table ID", "Source Table ID");
            lRecIteration := GetMaxIteration;
            lInt := 0;
            REPEAT
              lInt += 1;
              FINDFIRST;
              REPEAT
                pwrdMergefile.AddField("Merge Field Name" + STRSUBSTNO('_%1',lInt));
                lFieldCount += 1;
              UNTIL NEXT = 0;
            UNTIL lInt = lRecIteration;
            DELETEALL(FALSE);
            SETRANGE("Source Table ID");
          UNTIL NOT FINDFIRST;
      END;// WITH
      //>>IMH08.ST
      EXIT(lFieldCount);
      }
    END;

    PROCEDURE LoadTempFieldToWrdMergeFile@1100281016(VAR pTempInteractionTemplateField@1100281009 : Record 5064) : Integer;
    VAR
      lInteractionTemplateField@1100281000 : Record 50083;
      lFieldRef@1100281002 : FieldRef;
      lRecRef@1100281004 : RecordRef;
      lFieldCount@1100281005 : Integer;
      lSalutationField@1100281003 : Boolean;
      lTempInteractField@1100281006 : TEMPORARY Record 50083;
      lRecIteration@1100281007 : Integer;
      lInt@1100281008 : Integer;
      lLineNo@1100281001 : Integer;
    BEGIN
      //IMH02
      IF NOT pTempInteractionTemplateField.ISEMPTY THEN
        EXIT;

      lInteractionTemplateField.SETRANGE("Interaction Template Code", InteractionTemplate.Code);
      lInteractionTemplateField.SETFILTER("Source Field No.", '<>%1' , 0); //IMH27.ST
      IF lInteractionTemplateField.ISEMPTY THEN
        EXIT;
      lInteractionTemplateField.FINDSET(FALSE);
      REPEAT
      //<<IMH08.ST
        IF lInteractionTemplateField.GetMaxIteration > 1 THEN BEGIN
          lTempInteractField := lInteractionTemplateField;
          lTempInteractField.INSERT(FALSE);
        END
        ELSE BEGIN
      //>>IMH08.ST
        //<<IMH07
        lSalutationField := FALSE;
        CASE lInteractionTemplateField."Source Table ID" OF
          DATABASE::Contact :  lSalutationField := lInteractionTemplateField."Source Field No." = 5101;
          DATABASE::Provider : lSalutationField := (lInteractionTemplateField."Source Field No." = 5101)
                                                    OR (lInteractionTemplateField."Source Field No." = 54032);  //IMH15
          DATABASE::Service : lSalutationField := lInteractionTemplateField."Source Field No." = 27; //IMH11.ST
        END;
        IF lSalutationField THEN BEGIN
          pTempInteractionTemplateField.Code := FORMAT(lLineNo);
          pTempInteractionTemplateField."Mail Attachment Name" := lInteractionTemplateField."Merge Field Name" + '_' + Text030;
          pTempInteractionTemplateField.INSERT(FALSE);
          lLineNo += 1;
          pTempInteractionTemplateField.Code := FORMAT(lLineNo);
          pTempInteractionTemplateField."Mail Attachment Name" := lInteractionTemplateField."Merge Field Name" + '_' + Text031;
          pTempInteractionTemplateField.INSERT(FALSE);
          lLineNo += 1;

          //pwrdMergefile.AddField(lInteractionTemplateField."Merge Field Name" + '_' + Text030);
          //pwrdMergefile.AddField(lInteractionTemplateField."Merge Field Name" + '_' + Text031);
          lFieldCount += 2;
        END ELSE BEGIN  //>>IMH07
          pTempInteractionTemplateField.Code := FORMAT(lLineNo);
          pTempInteractionTemplateField."Mail Attachment Name" := lInteractionTemplateField."Merge Field Name";
          pTempInteractionTemplateField.INSERT(FALSE);
          lLineNo += 1;
          //pwrdMergefile.AddField(lInteractionTemplateField."Merge Field Name");
          lFieldCount += 1;
        END;
        END; //IMH08.ST
      UNTIL lInteractionTemplateField.NEXT = 0;
      //<<IMH08.ST
      WITH lTempInteractField DO BEGIN
        IF FINDFIRST THEN
          REPEAT
            SETRANGE("Source Table ID", "Source Table ID");
            lRecIteration := GetMaxIteration;
            lInt := 0;
            REPEAT
              lInt += 1;
              FINDFIRST;
              REPEAT
                //pwrdMergefile.AddField("Merge Field Name" + STRSUBSTNO('_%1',lInt));
                pTempInteractionTemplateField.Code := FORMAT(lLineNo);
                pTempInteractionTemplateField."Mail Attachment Name" := "Merge Field Name" + STRSUBSTNO('_%1',lInt);
                pTempInteractionTemplateField.INSERT(FALSE);
                lLineNo += 1;
                lFieldCount += 1;
              UNTIL NEXT = 0;
            UNTIL lInt = lRecIteration;
            DELETEALL(FALSE);
            SETRANGE("Source Table ID");
          UNTIL NOT FINDFIRST;
      END;// WITH
      //>>IMH08.ST
      EXIT(lFieldCount);
    END;

    PROCEDURE CheckFields@1100281013(VAR Attachment@1100281008 : Record 5062;FileName@1100281007 : Text[260]) : Boolean;
    VAR
      wrdApp@1100281004 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{000209FF-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      wrdDoc@1100281003 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{00020906-0000-0000-C000-000000000046}:Unknown Automation Server.Document";
      wrdField@1100281006 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{0002092F-0000-0000-C000-000000000046}:Unknown Automation Server.Field";
      ParamFalse@1100281002 : Boolean;
      lFusionWordFieldName@1100281005 : Text[1024];
      lFusionWordFieldName2@1100281009 : Text[1024];
      lTempInteractionTemplateField@1100281000 : TEMPORARY Record 5064;
      i@1100281001 : Integer;
      lFound@1100281010 : Boolean;
      lFound2@1100281013 : Boolean;
      lMergeFieldNamePrefix@1100281011 : Integer;
      lMessage@1100281012 : Text[1024];
      lLineNo@1100281014 : Integer;
    BEGIN
      IF ISCLEAR(wrdApp) THEN
        CREATE(wrdApp,FALSE,TRUE);

      ParamFalse := FALSE;
      wrdDoc := wrdApp.Documents.Open(FileName,ParamFalse,Attachment."Read Only");
      LoadTempFieldToWrdMergeFile(lTempInteractionTemplateField);
      IF lTempInteractionTemplateField.ISEMPTY THEN
        //<<IMH42
        //EXIT(TRUE);
        EXIT(FALSE);
        //>>IMH42

      lTempInteractionTemplateField.FINDLAST;
      IF EVALUATE(lLineNo, lTempInteractionTemplateField.Code) THEN;
      lLineNo += 1;

      FOR i := 1 TO InteractionTemplate."Built Field Nb" DO BEGIN
        lTempInteractionTemplateField.Code := FORMAT(lLineNo);
        lTempInteractionTemplateField."Mail Attachment Name" := STRSUBSTNO(Text50010,i);
        lTempInteractionTemplateField.INSERT(FALSE);
        lLineNo += 1;
      END;

      FOR i := 1 TO InteractionTemplate."Quote Formula Nb" DO BEGIN
        lTempInteractionTemplateField.Code := FORMAT(lLineNo);
        lTempInteractionTemplateField."Mail Attachment Name" := STRSUBSTNO(Text50011,i);
        lTempInteractionTemplateField.INSERT(FALSE);
        lLineNo += 1;
      END;
      FOR i := 1 TO InteractionTemplate."Location Formula Nb" DO BEGIN
        lTempInteractionTemplateField.Code := FORMAT(lLineNo);
        lTempInteractionTemplateField."Mail Attachment Name" := STRSUBSTNO(Text50012,i);
        lTempInteractionTemplateField.INSERT(FALSE);
        lLineNo += 1;
      END;

      IF lTempInteractionTemplateField.FINDFIRST THEN
        REPEAT
          lTempInteractionTemplateField."Mail Attachment Name" :=
            DELCHR(lTempInteractionTemplateField."Mail Attachment Name", '=', CharSpecFieldFusionWord);
          lTempInteractionTemplateField."Mail Attachment Name" :=
            CONVERTSTR(lTempInteractionTemplateField."Mail Attachment Name", ' ', '_');
          lTempInteractionTemplateField.MODIFY(FALSE);
        UNTIL lTempInteractionTemplateField.NEXT = 0;


      lMessage := TextFieldIncorrect;
      lFound := TRUE;
      FOR i := 1 TO wrdDoc.Fields.Count DO BEGIN
        wrdField := wrdDoc.Fields.Item(i);
        lFusionWordFieldName := wrdField.Code.Text;
        lMergeFieldNamePrefix := 12;
        lFound2 := (STRPOS(lFusionWordFieldName, MergeFieldText) = 0);
        IF NOT lFound2 THEN BEGIN
          lFusionWordFieldName := COPYSTR(lFusionWordFieldName, lMergeFieldNamePrefix + 1);
          //lFusionWordFieldName := DELCHR(lFusionWordFieldName, '<', MergeFieldText);
          lFusionWordFieldName := DELCHR(lFusionWordFieldName, '=', ' "''');
          //lInteractionTemplateField.SETRANGE("Interaction Template Code", InteractionTemplate.Code);
          lFusionWordFieldName := lFusionWordFieldName + '*';
          lTempInteractionTemplateField.SETFILTER("Mail Attachment Name", lFusionWordFieldName);
          IF lFound THEN
            lFound := (NOT lTempInteractionTemplateField.ISEMPTY);
          lFound2 := (NOT lTempInteractionTemplateField.ISEMPTY);
          {
            IF lTempInteractionTemplateField.FINDFIRST THEN
              REPEAT
                lFusionWordFieldName2 := lTempInteractionTemplateField."Mail Attachment Name";
                lFusionWordFieldName2 := DELCHR(lFusionWordFieldName2, '=', CharSpecFieldFusionWord);
                lFusionWordFieldName2 := CONVERTSTR(lFusionWordFieldName2, ' ', '_');
                IF lFusionWordFieldName = lFusionWordFieldName2 THEN BEGIN
                  lFound := TRUE;
                END;
              UNTIL (lTempInteractionTemplateField.NEXT = 0) OR lFound;
            }
          IF NOT lFound2 THEN
            IF STRLEN(lMessage) + STRLEN(lFusionWordFieldName) <= 1024 THEN
              lMessage := lMessage + lFusionWordFieldName + '\';
        END;
      END;
      {
        IF NOT lFound THEN BEGIN
          wrdDoc.Close;
          CLEAR(wrdDoc);
          CLEAR(wrdApp);
          EXIT(FALSE);
        END;
      }

      IF NOT lFound THEN
        MESSAGE(lMessage)
      ELSE
        MESSAGE(Text50017);

      wrdDoc.Close;
      CLEAR(wrdDoc);
      CLEAR(wrdApp);
      EXIT(lFound);
    END;

    PROCEDURE SendMail@1100281004(pInteractionTemplateCode@1100281006 : Code[20];pToName@1100281003 : Text[80];VAR pTempCCList@1100281000 : TEMPORARY Record 5050;pSubject@1100281004 : Text[260];pBody@1100281005 : Text[260];pAttachFile@1100281002 : Text[260];VAR pAttachFileList@1000000000 : Record 50021;VAR pSourceDocAttach@1000000006 : Record 50021;pOpenDialog@1100281007 : Boolean);
    VAR
      lMail@1100281001 : Codeunit 397;
      lTempToList@1000000004 : TEMPORARY Record 5050;
      lTempCCiList@1000000002 : TEMPORARY Record 5050;
      lFileName@1000000001 : Text[1024];
      lBigText@1000000005 : BigText;
      lSendMail@1000000007 : Codeunit 50128;
      lCCName@1100281008 : Text[1024];
    BEGIN
      //IMH03
      IF pAttachFileList.ISEMPTY THEN BEGIN //IMH36.ST
        //<<IMH41
        lCCName := lMail.MakeMailList(pTempCCList);
        //lMail.NewMessage(pToName,'',pSubject,pBody,pAttachFile,pOpenDialog)
        lMail.NewMessage(pToName,lCCName,pSubject,pBody,pAttachFile,pOpenDialog);
        //>>IMH41
      //<<IMH36.ST
      END ELSE BEGIN
        lTempToList."E-Mail" := pToName;
        lTempToList.INSERT;
        lBigText.ADDTEXT(pBody);
        lFileName := RBAutoMgt.ClientTempFileName('','MSG');
        //<<IMH37
        IF pAttachFile <> '' THEN
          lSendMail.AddFileByFile(pAttachFileList, pAttachFile);
        //>>IMH37
        //<<IMH41
        //lMail.NewOutlookMessage2('', pSubject, 0, lBigText, lTempToList, lTempCCList, lTempCCiList, pAttachFileList,
        lMail.NewOutlookMessage2('', pSubject, 0, lBigText, lTempToList, pTempCCList, lTempCCiList, pAttachFileList,
        //>>IMH41
                                 pOpenDialog, lFileName);
        // Sauvegarde du fichier joint sur l'interaction
        ChangeAttachmentDoc(pSourceDocAttach, lFileName);
      END;
      //>>IMH36.ST
    END;

    PROCEDURE SendWordMail@1100281019(pToName@1100281003 : Text[80];pCCName@1100281005 : Text[80];VAR pTempCCList@1100281006 : TEMPORARY Record 5050;pSubject@1100281004 : Text[260];VAR pWrdDoc@1100281000 : Automation "{00020905-0000-0000-C000-000000000046} 8.5:{00020906-0000-0000-C000-000000000046}:'Microsoft Word 14.0 Object Library'.Document";pAttachFile@1100281002 : Text[260];VAR pAttachFileList@1000000004 : Record 50021;VAR pSourceDocAttach@1000000005 : Record 50021;pOpenDialog@1100281007 : Boolean);
    VAR
      lMail@1100281001 : Codeunit 397;
      lTempToList@1000000000 : TEMPORARY Record 5050;
      lTempCCiList@1000000002 : TEMPORARY Record 5050;
      lFileName@1000000003 : Text[1024];
    BEGIN
      //IMH26
      //<<IMH43.ZW
      {
      //D‚sactiv‚
      IF pAttachFileList.ISEMPTY THEN //IMH36.ST
        lMail.NewWordMessage(pToName,pCCName, pSubject,pWrdDoc,pAttachFile,pOpenDialog)
      //<<IMH36.ST
      ELSE BEGIN
      }
      //>>IMH43.ZW
        lTempToList."E-Mail" := pToName;
        lTempToList.INSERT;
        //<<IMH41
        IF pCCName <> '' THEN BEGIN
      //<<IMH44.ST
      // Eviter de mettre en doublon
          pTempCCList.RESET;
          pTempCCList.SETRANGE("E-Mail", pCCName);
          IF NOT pTempCCList.FINDFIRST THEN BEGIN
            pTempCCList."No." := '';
      //>>IMH44.ST
          pTempCCList."E-Mail" := pCCName;
          pTempCCList.INSERT;
      //<<IMH44.ST
          END;
          pTempCCList.RESET;
      //>>IMH44.ST
        END;
        //>>IMH41
        lFileName := RBAutoMgt.ClientTempFileName('','MSG');
        //<<IMH41
        //lMail.NewWordMessage2('', pSubject, pWrdDoc, lTempToList, lTempCCList, lTempCCiList, pAttachFileList, pOpenDialog, lFileName);
        lMail.NewWordMessage2('', pSubject, pWrdDoc, lTempToList, pTempCCList, lTempCCiList, pAttachFileList, pOpenDialog, lFileName);
        //>>IMH41
        // Sauvegarde du fichier joint sur l'interaction
        ChangeAttachmentDoc(pSourceDocAttach, lFileName);
      //END;  //IMH43 D‚sactiv‚
      //>>IMH36.ST
    END;

    PROCEDURE GetProviderNo@1100281006(pContactNo@1100281002 : Code[20];pServiceHeaderNo@1100281000 : Code[20];pInterventionLine@1100281001 : Integer;pUseProviderNo@1100281008 : Code[20];VAR pProviderNo@1100281003 : Code[20]) : Boolean;
    VAR
      lServiceHeader@1100281005 : Record 5900;
      lServiceInterventionLine@1100281006 : Record 50075;
      lContact@1100281004 : Record 5050;
      lProvider@1100281007 : Record 50000;
      lServiceOrderType@1000000000 : Record 5903;
    BEGIN
      //IMH04
      IF pInterventionLine <> 0 THEN BEGIN
        IF NOT lServiceInterventionLine.GET(pServiceHeaderNo,pInterventionLine) THEN
          EXIT(FALSE);
        pProviderNo := lServiceInterventionLine."Provider No.";
        EXIT(TRUE);
      END;
      IF pServiceHeaderNo <> '' THEN BEGIN
        IF NOT lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,pServiceHeaderNo) THEN
          EXIT(FALSE);
        pProviderNo := lServiceHeader."Provider No.";
        IF pProviderNo <> '' THEN
          EXIT(TRUE)
        ELSE BEGIN
          IF lServiceOrderType.GET(lServiceHeader."Service Order Type") THEN
            IF lServiceOrderType."Provider Search" = lServiceOrderType."Provider Search"::UniqueProvider THEN
              IF lProvider.GET(lServiceOrderType."Provider No.") THEN BEGIN
                pProviderNo := lServiceOrderType."Provider No.";
                EXIT(TRUE);
              END;
        END;
      END;
      //<<IMH09.isat.PC
      {
      IF pContactNo <> '' THEN BEGIN
        IF lContact.GET(pContactNo) THEN
          IF lContact."Service Contact" = lContact."Service Contact"::Provider THEN BEGIN
            pProviderNo := pContactNo;
            EXIT(TRUE);
          END;
      END;
      }
      IF pUseProviderNo <> '' THEN
        pContactNo := pUseProviderNo;
      IF pContactNo <> '' THEN BEGIN
        IF NOT lProvider.GET(pContactNo) THEN BEGIN
          IF lContact.GET(pContactNo) THEN BEGIN
            IF lProvider.GET(lContact."Company No.") THEN BEGIN
              pProviderNo := lContact."Company No.";
              EXIT(TRUE);
            END;
          END;
        END ELSE BEGIN
          pProviderNo := pContactNo;
          EXIT(TRUE);
        END;
      END;
      //>>IMH09.isat.PC
      EXIT(FALSE);
    END;

    PROCEDURE SendSMTPMail@1100281015(pSenderName@1100281013 : Text[100];pSenderAddress@1100281006 : Text[50];pRecipients@1100281005 : Text[1024];pSubject@1100281004 : Text[200];VAR pFileName@1100281010 : Text[1024];pAttachDoc@1100281002 : Boolean);
    BEGIN
      //IMH21
      SendSMTPMailWithCC(pSenderName, pSenderAddress, '','', pRecipients, pSubject, pFileName, pAttachDoc);
    END;

    PROCEDURE SendSMTPMailWithCC@1100281014(pSenderName@1100281013 : Text[100];pSenderAddress@1100281006 : Text[50];pRecipients@1100281005 : Text[1024];pCCRecipients@1100281011 : Text[1024];pBCCRecipients@1100281009 : Text[1024];pSubject@1100281004 : Text[200];VAR pFileName@1100281010 : Text[1024];pAttachDoc@1100281002 : Boolean);
    VAR
      lSMTPMail@1100281007 : Codeunit 400;
      lFile@1100281000 : File;
      lText@1100281001 : Text[1024];
      lInstream@1100281003 : InStream;
      lUserSetup@1100281008 : Record 91;
    BEGIN
      //IMH05.ST
      IF (pFileName = '') THEN
        ERROR(Text50001);
      IF (pRecipients = '') THEN
        ERROR(Text50002);

      IF pSenderName = '' THEN
        pSenderName := COMPANYNAME;
      IF pSenderAddress = '' THEN BEGIN
        lUserSetup.GET(USERID);
        //lUserSetup.TESTFIELD("E-Mail");
        IF lUserSetup."Group E-Mail" <> '' THEN
          pSenderAddress := lUserSetup."Group E-Mail"
        ELSE
          pSenderAddress := lUserSetup."E-Mail";
      END;

      lSMTPMail.CreateMessage(pSenderName,pSenderAddress,pRecipients,pSubject,'',TRUE);
      lSMTPMail.AddCC(pCCRecipients);     //IMH21
      lSMTPMail.AddBCC(pBCCRecipients);   //IMH21

      IF pAttachDoc THEN BEGIN
        lSMTPMail.AddAttachment(pFileName)
      END
      ELSE BEGIN
        // Lecture du fichier
        lFile.WRITEMODE(FALSE);
        lFile.TEXTMODE(TRUE);
        lFile.OPEN(pFileName);
        lFile.CREATEINSTREAM(lInstream);
        lSMTPMail.SetBodyStream(lInstream);
        lFile.CLOSE;
      END;
      // Envoi du message
      lSMTPMail.Send();
    END;

    PROCEDURE SetHideDialog@1100281007(pHideDialog@1100281000 : Boolean);
    BEGIN
      HideDialog := pHideDialog;
    END;

    PROCEDURE GetDocIsImported@1100281008(VAR pDocIsImported@1100281000 : Boolean);
    BEGIN
      //IMH06
      pDocIsImported := DocIsImported;
    END;

    PROCEDURE AddBuiltMergeFields@1100281009(VAR pwrdMergefile@1100281003 : Automation "{3C2554FE-2B41-4543-B3E8-E64296773DA5} 2.0:{40D88563-F0DA-4B3D-AD1B-34EFA8C3978A}:Unknown Automation Server.MergeHandler";pContactNo@1100281011 : Code[20];pServiceNo@1100281010 : Code[20];pServiceHeaderNo@1100281009 : Code[20];pInterventionLineNo@1100281008 : Integer;pCustomerNo@1100281007 : Code[20];pSalesperson@1100281006 : Code[10];pProviderNo@1100281021 : Code[20]);
    VAR
      lMarketingSetup@1100281013 : Record 5079;
      lServHeader@1100281015 : Record 5900;
      lServIntervQuote@1100281012 : Record 50076;
      lIntervDesc@1100281014 : Record 50070;
      lServAccommOption@1100281020 : Record 50073;
      lMergeFields@1100281004 : ARRAY [10] OF Text[1024];
      lQuoteFields@1100281001 : ARRAY [20] OF Text[1024];
      lLocationFields@1100281002 : ARRAY [20] OF Text[300];
      lDetailFields@1100281016 : ARRAY [20] OF Text[100];
      lSpecialityFields@1100281017 : ARRAY [20] OF Text[100];
      lCommentFields@1100281018 : ARRAY [20] OF Text[100];
      lSentenceNo@1100281005 : Code[10];
      I@1100281000 : Integer;
      lNbLoc@1100281019 : Integer;
      lSpecialityFilter@1100281022 : Text[1024];
      lServiceCode@1100281023 : Record 50040;
      lOptionDesc@1100281024 : Text[200];
    BEGIN
      //<<IMH11.ISAT.EBA
      IF InteractionTemplate."Built Field Code 1" <> '' THEN BEGIN
        lSentenceNo := GetSentenceNo(InteractionTemplate."Built Field Code 1",pServiceNo,pServiceHeaderNo,pInterventionLineNo);
        IF lSentenceNo <> '' THEN
          lMergeFields[1] := GetSentence(
            InteractionTemplate."Built Field Code 1",lSentenceNo,
            pContactNo,pServiceNo,pServiceHeaderNo,pInterventionLineNo,0,pCustomerNo,pSalesperson,'','','',pProviderNo);
      END;

      IF InteractionTemplate."Built Field Code 2" <> '' THEN BEGIN
        lSentenceNo := GetSentenceNo(InteractionTemplate."Built Field Code 2",pServiceNo,pServiceHeaderNo,pInterventionLineNo);
        IF lSentenceNo <> '' THEN
          lMergeFields[2] := GetSentence(
            InteractionTemplate."Built Field Code 2",lSentenceNo,
            pContactNo,pServiceNo,pServiceHeaderNo,pInterventionLineNo,0,pCustomerNo,pSalesperson,'','','',pProviderNo);
      END;

      IF InteractionTemplate."Built Field Code 3" <> '' THEN BEGIN
        lSentenceNo := GetSentenceNo(InteractionTemplate."Built Field Code 3",pServiceNo,pServiceHeaderNo,pInterventionLineNo);
        IF lSentenceNo <> '' THEN
          lMergeFields[3] := GetSentence(
            InteractionTemplate."Built Field Code 3",lSentenceNo,
            pContactNo,pServiceNo,pServiceHeaderNo,pInterventionLineNo,0,pCustomerNo,pSalesperson,'','','',pProviderNo);
      END;

      IF InteractionTemplate."Built Field Code 4" <> '' THEN BEGIN
        lSentenceNo := GetSentenceNo(InteractionTemplate."Built Field Code 4",pServiceNo,pServiceHeaderNo,pInterventionLineNo);
        IF lSentenceNo <> '' THEN
          lMergeFields[4] := GetSentence(
            InteractionTemplate."Built Field Code 4",lSentenceNo,
            pContactNo,pServiceNo,pServiceHeaderNo,pInterventionLineNo,0,pCustomerNo,pSalesperson,'','','',pProviderNo);
      END;

      IF InteractionTemplate."Built Field Code 5" <> '' THEN BEGIN
        lSentenceNo := GetSentenceNo(InteractionTemplate."Built Field Code 5",pServiceNo,pServiceHeaderNo,pInterventionLineNo);
        IF lSentenceNo <> '' THEN
          lMergeFields[5] := GetSentence(
            InteractionTemplate."Built Field Code 5",lSentenceNo,
            pContactNo,pServiceNo,pServiceHeaderNo,pInterventionLineNo,0,pCustomerNo,pSalesperson,'','','',pProviderNo);
      END;

      IF InteractionTemplate."Built Field Code 6" <> '' THEN BEGIN
        lSentenceNo := GetSentenceNo(InteractionTemplate."Built Field Code 6",pServiceNo,pServiceHeaderNo,pInterventionLineNo);
        IF lSentenceNo <> '' THEN
          lMergeFields[6] := GetSentence(
            InteractionTemplate."Built Field Code 6",lSentenceNo,
            pContactNo,pServiceNo,pServiceHeaderNo,pInterventionLineNo,0,pCustomerNo,pSalesperson,'','','',pProviderNo);
      END;

      IF InteractionTemplate."Built Field Code 7" <> '' THEN BEGIN
        lSentenceNo := GetSentenceNo(InteractionTemplate."Built Field Code 7",pServiceNo,pServiceHeaderNo,pInterventionLineNo);
        IF lSentenceNo <> '' THEN
          lMergeFields[7] := GetSentence(
            InteractionTemplate."Built Field Code 7",lSentenceNo,
            pContactNo,pServiceNo,pServiceHeaderNo,pInterventionLineNo,0,pCustomerNo,pSalesperson,'','','',pProviderNo);
      END;

      IF InteractionTemplate."Built Field Code 8" <> '' THEN BEGIN
        lSentenceNo := GetSentenceNo(InteractionTemplate."Built Field Code 8",pServiceNo,pServiceHeaderNo,pInterventionLineNo);
        IF lSentenceNo <> '' THEN
          lMergeFields[8] := GetSentence(
            InteractionTemplate."Built Field Code 8",lSentenceNo,
            pContactNo,pServiceNo,pServiceHeaderNo,pInterventionLineNo,0,pCustomerNo,pSalesperson,'','','',pProviderNo);
      END;

      IF InteractionTemplate."Built Field Code 9" <> '' THEN BEGIN
        lSentenceNo := GetSentenceNo(InteractionTemplate."Built Field Code 9",pServiceNo,pServiceHeaderNo,pInterventionLineNo);
        IF lSentenceNo <> '' THEN
          lMergeFields[9] := GetSentence(
            InteractionTemplate."Built Field Code 9",lSentenceNo,
            pContactNo,pServiceNo,pServiceHeaderNo,pInterventionLineNo,0,pCustomerNo,pSalesperson,'','','',pProviderNo);
      END;

      IF InteractionTemplate."Built Field Code 10" <> '' THEN BEGIN
        lSentenceNo := GetSentenceNo(InteractionTemplate."Built Field Code 10",pServiceNo,pServiceHeaderNo,pInterventionLineNo);
        IF lSentenceNo <> '' THEN
          lMergeFields[10] := GetSentence(
            InteractionTemplate."Built Field Code 10",lSentenceNo,
            pContactNo,pServiceNo,pServiceHeaderNo,pInterventionLineNo,0,pCustomerNo,pSalesperson,'','','',pProviderNo);
      END;

      IF InteractionTemplate."Quote Formula" <> '' THEN BEGIN
        lMarketingSetup.GET;
        lMarketingSetup.TESTFIELD("Quote Built Field Code");

        I := 0;
        lServHeader.RESET;
        IF pServiceHeaderNo <> '' THEN BEGIN
          lServHeader.SETRANGE("Document Type",lServHeader."Document Type"::Invoice);
          lServHeader.SETRANGE("No.",pServiceHeaderNo);
        END ELSE IF pServiceNo <> '' THEN BEGIN
          lServHeader.SETCURRENTKEY("Service No.");
          lServHeader.SETRANGE("Service No.",pServiceNo);
          lServHeader.SETRANGE("Document Type",lServHeader."Document Type"::Invoice);
        END ELSE BEGIN
          lServHeader.SETCURRENTKEY("Contact No.","Corporate No.","No.");
          lServHeader.SETRANGE("Contact No.",pContactNo);
          lServHeader.SETRANGE("Document Type",lServHeader."Document Type"::Invoice);
        END;
        IF lServHeader.FINDSET THEN BEGIN
          REPEAT
            lServIntervQuote.SETRANGE("Service Header No.",lServHeader."No.");
            IF pInterventionLineNo <> 0 THEN
              lServIntervQuote.SETRANGE("Intervention Line No.",pInterventionLineNo);
            IF lServIntervQuote.FINDSET THEN BEGIN
              REPEAT
                I := I + 1;
                lQuoteFields[I] := GetSentence(
                  lMarketingSetup."Quote Built Field Code",InteractionTemplate."Quote Formula",
                  pContactNo,pServiceNo,pServiceHeaderNo,pInterventionLineNo,lServIntervQuote."Line No.",
                  pCustomerNo,pSalesperson,'','','',pProviderNo);

              UNTIL (lServIntervQuote.NEXT = 0) OR (I >= InteractionTemplate."Quote Formula Nb");
            END;
          UNTIL (lServHeader.NEXT = 0) OR (I >= InteractionTemplate."Quote Formula Nb");
        END;
      END;

      //<<IMH13.ISAT.EBA
      //IF InteractionTemplate."Location Formula" <> '' THEN BEGIN
      //  lMarketingSetup.GET;
      //  lMarketingSetup.TESTFIELD("Location Built Field Code");
      //>>IMH13.ISAT.EBA

      lNbLoc := InteractionTemplate."Location Formula Nb";
      I := 0;
      lServHeader.RESET;
      IF pServiceHeaderNo <> '' THEN BEGIN
        lServHeader.SETRANGE("Document Type",lServHeader."Document Type"::Invoice);
        lServHeader.SETRANGE("No.",pServiceHeaderNo);
      END ELSE IF pServiceNo <> '' THEN BEGIN
        lServHeader.SETCURRENTKEY("Service No.");
        lServHeader.SETRANGE("Service No.",pServiceNo);
        lServHeader.SETRANGE("Document Type",lServHeader."Document Type"::Invoice);
      END ELSE BEGIN
        lServHeader.SETCURRENTKEY("Contact No.","Corporate No.","No.");
        lServHeader.SETRANGE("Contact No.",pContactNo);
        lServHeader.SETRANGE("Document Type",lServHeader."Document Type"::Invoice);
      END;

      lSpecialityFilter := '';
      lServiceCode.RESET;
      lServiceCode.SETRANGE("Service Type",lServiceCode."Service Type"::Intervention);
      lServiceCode.SETRANGE("Service No.",pServiceNo);
      lServiceCode.SETRANGE("Service Header No.",pServiceHeaderNo);
      lServiceCode.SETRANGE("Intervention Line No.",pInterventionLineNo);
      IF lServiceCode.FINDSET THEN
      BEGIN
        REPEAT
          IF lSpecialityFilter <> '' THEN
            lSpecialityFilter += '|';
          lSpecialityFilter += lServiceCode.Code;
        UNTIL(lServiceCode.NEXT = 0);
      END;


      IF lServHeader.FINDSET THEN BEGIN
        REPEAT
          lIntervDesc.SETRANGE("Service Header No.",lServHeader."No.");
          lIntervDesc.SETFILTER("Speciality Code",lSpecialityFilter);
          IF lIntervDesc.FINDSET THEN BEGIN
            REPEAT
              I := I + 1;

              //<<IMH13.ISAT.EBA
              //lLocationFields[I] := GetSentence(
              //  lMarketingSetup."Location Built Field Code",InteractionTemplate."Location Formula",
              //  pContactNo,pServiceNo,pServiceHeaderNo,pInterventionLineNo,0,pCustomerNo,pSalesperson,
              //  lIntervDesc."Affected Location Code",lIntervDesc."Speciality Code",lIntervDesc."Building Trade No.");

              lIntervDesc.CALCFIELDS("Speciality Description");
              lLocationFields[I] := lIntervDesc."Affected Location Description" + '&#9;' +
                                    lIntervDesc."Location Detail Description" + '&#9;' +
                                    lIntervDesc."Speciality Description" + '&#9;' +
                                    lIntervDesc.Comment;
              //>>IMH13.ISAT.EBA

            UNTIL (lIntervDesc.NEXT = 0) OR (I >= lNbLoc);
          END;
        UNTIL (lServHeader.NEXT = 0) OR (I >= lNbLoc);
      END;

      //<<IMH14.ISAT.EBA
      pwrdMergefile.NewMultiField;

      lServAccommOption.RESET;
      lServAccommOption.SETRANGE("Service Header No.",pServiceHeaderNo);
      lServAccommOption.SETRANGE(Used,TRUE);
      IF lServAccommOption.FINDSET THEN BEGIN
        REPEAT
          lServAccommOption.CALCFIELDS("Option Description");
          //<<IMH14.ISAT.EBA
          //pwrdMergefile.AddMultiToField(lServAccommOption."Option Description");
          lOptionDesc := lServAccommOption."Option Description";
          IF lServAccommOption.Comment <> '' THEN
            lOptionDesc := lOptionDesc + '&#9;' + lServAccommOption.Comment;

          pwrdMergefile.AddMultiToField(lOptionDesc);
          //>>IMH14.ISAT.EBA
        UNTIL lServAccommOption.NEXT = 0;
      END ELSE
        pwrdMergefile.AddMultiToField('&nbsp;');
      pwrdMergefile.EndMultiField;
      //>>IMH14.ISAT.EBA

      FOR I := 1 TO InteractionTemplate."Built Field Nb" DO
        pwrdMergefile.AddField(lMergeFields[I]);

      FOR I := 1 TO InteractionTemplate."Quote Formula Nb" DO
        pwrdMergefile.AddField(lQuoteFields[I]);

      FOR I := 1 TO InteractionTemplate."Location Formula Nb" DO
        pwrdMergefile.AddField(lLocationFields[I]);
      //>>IMH11.ISAT.EBA

      //IMH16
      {
      //<<IMH13.ISAT.EBA
      FOR I := 1 TO lNbLoc DO
        pwrdMergefile.AddField(lDetailFields[I]);

      FOR I := 1 TO lNbLoc DO
        pwrdMergefile.AddField(lSpecialityFields[I]);

      FOR I := 1 TO lNbLoc DO
        pwrdMergefile.AddField(lCommentFields[I]);
      //>>IMH13.ISAT.EBA
      }
    END;

    PROCEDURE GetSentenceNo@1100281011(pBuiltMergeField@1100281007 : Code[10];pServiceNo@1100281006 : Code[20];pServiceHeaderNo@1100281005 : Code[20];pInterventionLineNo@1100281004 : Integer) : Code[10];
    VAR
      lBuiltMergeFld@1100281000 : Record 50140;
      lService@1100281003 : Record 50066;
      lServHeader@1100281002 : Record 5900;
      lServIntervLine@1100281001 : Record 50075;
      lMoistureexist@1100281008 : Boolean;
    BEGIN
      //<<IMH11.ISAT.EBA
      IF NOT lService.GET(pServiceNo) THEN
        lService.INIT;

      IF NOT lServHeader.GET(lServHeader."Document Type"::Invoice,pServiceHeaderNo) THEN BEGIN
        lServHeader.INIT;

        lServHeader."Corporate No." := lService."Corporate No.";
        lServHeader.Requisitioner := lService.Requisitioner;
      END;

      IF NOT lServIntervLine.GET(pServiceHeaderNo,pInterventionLineNo) THEN BEGIN
        lServIntervLine.INIT;

        lServIntervLine."Corporate No." := lServHeader."Corporate No.";
        lServIntervLine."Service Order Type" := lServHeader."Service Order Type";
      END;

      lServIntervLine.SETRANGE("Quote Acceptance Status Filter",lServIntervLine."Quote Acceptance Status Filter"::Yes);
      lServIntervLine.CALCFIELDS("No. of Active Quotes");

      WITH lBuiltMergeFld DO BEGIN
        SETRANGE(Code,pBuiltMergeField);
        SETRANGE("Corporate No.",lServIntervLine."Corporate No.");
        SETRANGE("Service Order Type",lServIntervLine."Service Order Type");
        SETRANGE(Requisitioner,lServHeader.Requisitioner);
        SETRANGE("Service Reason Code",lService."Service Cause");
        SETRANGE("Moisture %",lServIntervLine."Moisture %");
        SETRANGE("Next Appointment Date",lServIntervLine."Next Appointment Date");
        IF lServIntervLine."Next Appointment Date Modified" THEN
          SETRANGE("Next Appointment Date Modified",1)
        ELSE
          SETRANGE("Next Appointment Date Modified",2);
        IF (lServIntervLine."No. of Active Quotes" > 0) THEN
          SETRANGE("Accepted Actif Quote Exists",1)
        ELSE
          SETRANGE("Accepted Actif Quote Exists",2);
        SETRANGE("Cancel Reason Code",lServIntervLine."Cancel Reason Code");
        SETRANGE("Occupier Nature",lServHeader."Occupier Nature");
        SETRANGE("Housing Type",lServHeader."Housing Type");
        IF (lServIntervLine."Expected Work End Date" <> 0D) THEN
          SETRANGE("Expected Work End Date Exist",1)
        ELSE
          SETRANGE("Expected Work End Date Exist",2);
        IF (lServIntervLine."Moisture %" > 20) THEN
          SETRANGE("Moisture Exist",1)
        ELSE
          SETRANGE("Moisture Exist",2);
        IF (lServIntervLine."Next Appointment Date" <> 0D) THEN
          SETRANGE("Next Appointment Date Edit",1)
        ELSE
          SETRANGE("Next Appointment Date Edit",2);
        IF (lServIntervLine."Quote Managment") THEN
          SETRANGE("Quote Demand",1)
        ELSE
          SETRANGE("Quote Demand",2);
        //<<IMH24
        IF (lServIntervLine."Deductible Amount" + lServIntervLine."Unsecured Depreciation Amount" > 0) THEN
          SETRANGE(lBuiltMergeFld."Deductible + Depreciation Amt.",1)
        ELSE
          SETRANGE(lBuiltMergeFld."Deductible + Depreciation Amt.",2);
        //>>IMH24

        //<<IMH30.ISAT.EBA
        SETRANGE("Payment Method",lServHeader."Payment Method");
        //>>IMH30.ISAT.EBA


        //<<IMH46.IMH.DBR
        SETRANGE("Closed Reason Code", lServHeader."Closed Reason Code");
        //>>IMH46.IMH.DBR

        IF FINDLAST THEN
          EXIT("Sentence No.");

        SETFILTER("Corporate No.",'=%1|=%2','',lServIntervLine."Corporate No.");
        IF FINDLAST THEN
          EXIT("Sentence No.");

        SETFILTER("Service Order Type",'=%1|=%2','',lServIntervLine."Service Order Type");
        IF FINDLAST THEN
          EXIT("Sentence No.");

        SETFILTER(Requisitioner,'=%1|=%2','',lServHeader.Requisitioner);
        IF FINDLAST THEN
          EXIT("Sentence No.");

        SETFILTER("Service Reason Code",'=%1|=%2','',lService."Service Cause");
        IF FINDLAST THEN
          EXIT("Sentence No.");

        SETFILTER("Next Appointment Date",'=%1|=%2',0D,lServIntervLine."Next Appointment Date");
        IF FINDLAST THEN
          EXIT("Sentence No.");

        SETFILTER("Housing Type",'=%1|=%2','',lServHeader."Housing Type");
        IF FINDLAST THEN
          EXIT("Sentence No.");

        SETFILTER("Moisture %",'=%1|=%2',0,lServIntervLine."Moisture %");
        IF FINDLAST THEN
          EXIT("Sentence No.");

        SETFILTER("Cancel Reason Code",'=%1|=%2','',lServIntervLine."Cancel Reason Code");
        IF FINDLAST THEN
          EXIT("Sentence No.");

        SETFILTER("Occupier Nature",'=%1|=%2','',lServHeader."Occupier Nature");
        IF FINDLAST THEN
          EXIT("Sentence No.");

        IF lServIntervLine."Next Appointment Date Modified" THEN
          SETFILTER("Next Appointment Date Modified",'=%1|=%2',0,1)
        ELSE
          SETFILTER("Next Appointment Date Modified",'=%1|=%2',0,2);
        IF FINDLAST THEN
          EXIT("Sentence No.");

        IF (lServIntervLine."No. of Active Quotes" > 0) THEN
          SETFILTER("Accepted Actif Quote Exists",'=%1|=%2',0,1)
        ELSE
          SETFILTER("Accepted Actif Quote Exists",'=%1|=%2',0,2);
        IF FINDLAST THEN
          EXIT("Sentence No.");

        IF (lServIntervLine."Expected Work End Date" <> 0D) THEN
          SETFILTER("Expected Work End Date Exist",'=%1|=%2',0,1)
        ELSE
          SETFILTER("Expected Work End Date Exist",'=%1|=%2',0,2);
        IF FINDLAST THEN
          EXIT("Sentence No.");

        IF (lServIntervLine."Moisture %" > 20) THEN
          SETFILTER("Moisture Exist",'=%1|=%2',0,1)
        ELSE
          SETFILTER("Moisture Exist",'=%1|=%2',0,2);
        IF FINDLAST THEN
          EXIT("Sentence No.");


        IF (lServIntervLine."Next Appointment Date" <> 0D) THEN
          SETFILTER("Next Appointment Date Edit",'=%1|=%2',0,1)
        ELSE
          SETFILTER("Next Appointment Date Edit",'=%1|=%2',0,2);
        IF FINDLAST THEN
          EXIT("Sentence No.");

        IF (lServIntervLine."Quote Managment") THEN
          SETFILTER("Quote Demand",'=%1|=%2',0,1)
        ELSE
          SETFILTER("Quote Demand",'=%1|=%2',0,2);
        IF FINDLAST THEN
          EXIT("Sentence No.");
          //<<IMH24
        IF (lServIntervLine."Deductible Amount" + lServIntervLine."Unsecured Depreciation Amount" > 0) THEN
          SETFILTER(lBuiltMergeFld."Deductible + Depreciation Amt.",'=%1|=%2',0,1)
        ELSE
          SETFILTER(lBuiltMergeFld."Deductible + Depreciation Amt.",'=%1|=%2',0,2);
        IF FINDLAST THEN
          EXIT("Sentence No.");
        //>>IMH24

        //<<IMH30.ISAT.EBA
        SETFILTER("Payment Method",'=%1|=%2',"Payment Method"::" ",lServHeader."Payment Method");
        IF FINDLAST THEN
          EXIT("Sentence No.");
        //>>IMH30.ISAT.EBA

        //<<IMH46.IMH.DBR
        SETFILTER("Closed Reason Code",'=%1|=%2', '', lServHeader."Closed Reason Code");
        IF FINDLAST THEN
          EXIT("Sentence No.");
        //<<IMH46.IMH.DBR

        IF FINDLAST THEN
          EXIT("Sentence No.")
        ELSE
          EXIT('');

      END;
      //>>IMH11.ISAT.EBA
    END;

    PROCEDURE GetSentence@1100281010(Code@1100281000 : Code[10];SentenceNo@1100281001 : Code[10];pContactNo@1100281016 : Code[20];pServiceNo@1100281015 : Code[20];pServiceHeaderNo@1100281014 : Code[20];pIntervLineNo@1100281013 : Integer;pIntervQuoteLineNo@1100281007 : Integer;pCustomerNo@1100281009 : Code[20];pSalesperson@1100281008 : Code[10];pAffectedLocCode@1100281012 : Code[10];pSpecialityCode@1100281011 : Code[10];pBuildingTradeNo@1100281010 : Code[20];pProviderNo@1100281017 : Code[20]) : Text[1024];
    VAR
      lBuiltMergeFldDetail@1100281002 : Record 50141;
      lFieldValue@1100281003 : ARRAY [10] OF Text[50];
      lNewSentence@1100281004 : Text[1024];
      i@1100281005 : Integer;
      lSubStr@1100281006 : Text[10];
    BEGIN
      //<<IMH11.ISAT.EBA
      IF NOT lBuiltMergeFldDetail.GET(Code,SentenceNo) THEN
        EXIT('');

      WITH lBuiltMergeFldDetail DO BEGIN
        IF "Source Field No. 1" <> 0 THEN
          lFieldValue[1] := GetFieldValue(
            "Source Table ID 1","Source Field No. 1",pContactNo,pServiceNo,pServiceHeaderNo,pIntervLineNo,
            pIntervQuoteLineNo,pCustomerNo,pSalesperson,pAffectedLocCode,pSpecialityCode,pBuildingTradeNo,pProviderNo);

        IF "Source Field No. 2" <> 0 THEN
          lFieldValue[2] := GetFieldValue(
            "Source Table ID 2","Source Field No. 2",pContactNo,pServiceNo,pServiceHeaderNo,pIntervLineNo,
            pIntervQuoteLineNo,pCustomerNo,pSalesperson,pAffectedLocCode,pSpecialityCode,pBuildingTradeNo,pProviderNo);

        IF "Source Field No. 3" <> 0 THEN
          lFieldValue[3] := GetFieldValue(
            "Source Table ID 3","Source Field No. 3",pContactNo,pServiceNo,pServiceHeaderNo,pIntervLineNo,
            pIntervQuoteLineNo,pCustomerNo,pSalesperson,pAffectedLocCode,pSpecialityCode,pBuildingTradeNo,pProviderNo);

        IF "Source Field No. 4" <> 0 THEN
          lFieldValue[4] := GetFieldValue(
            "Source Table ID 4","Source Field No. 4",pContactNo,pServiceNo,pServiceHeaderNo,pIntervLineNo,
            pIntervQuoteLineNo,pCustomerNo,pSalesperson,pAffectedLocCode,pSpecialityCode,pBuildingTradeNo,pProviderNo);

        IF "Source Field No. 5" <> 0 THEN
          lFieldValue[5] := GetFieldValue(
            "Source Table ID 5","Source Field No. 5",pContactNo,pServiceNo,pServiceHeaderNo,pIntervLineNo,
            pIntervQuoteLineNo,pCustomerNo,pSalesperson,pAffectedLocCode,pSpecialityCode,pBuildingTradeNo,pProviderNo);

        IF "Source Field No. 6" <> 0 THEN
          lFieldValue[6] := GetFieldValue(
            "Source Table ID 6","Source Field No. 6",pContactNo,pServiceNo,pServiceHeaderNo,pIntervLineNo,
            pIntervQuoteLineNo,pCustomerNo,pSalesperson,pAffectedLocCode,pSpecialityCode,pBuildingTradeNo,pProviderNo);

        IF "Source Field No. 7" <> 0 THEN
          lFieldValue[7] := GetFieldValue(
            "Source Table ID 7","Source Field No. 7",pContactNo,pServiceNo,pServiceHeaderNo,pIntervLineNo,
            pIntervQuoteLineNo,pCustomerNo,pSalesperson,pAffectedLocCode,pSpecialityCode,pBuildingTradeNo,pProviderNo);

        IF "Source Field No. 8" <> 0 THEN
          lFieldValue[8] := GetFieldValue(
            "Source Table ID 8","Source Field No. 8",pContactNo,pServiceNo,pServiceHeaderNo,pIntervLineNo,
            pIntervQuoteLineNo,pCustomerNo,pSalesperson,pAffectedLocCode,pSpecialityCode,pBuildingTradeNo,pProviderNo);

        IF "Source Field No. 9" <> 0 THEN
          lFieldValue[9] := GetFieldValue(
            "Source Table ID 9","Source Field No. 9",pContactNo,pServiceNo,pServiceHeaderNo,pIntervLineNo,
            pIntervQuoteLineNo,pCustomerNo,pSalesperson,pAffectedLocCode,pSpecialityCode,pBuildingTradeNo,pProviderNo);

        IF "Source Field No. 10" <> 0 THEN
          lFieldValue[10] := GetFieldValue(
          "Source Table ID 10","Source Field No. 10",pContactNo,pServiceNo,pServiceHeaderNo,pIntervLineNo,
          pIntervQuoteLineNo,pCustomerNo,pSalesperson,pAffectedLocCode,pSpecialityCode,pBuildingTradeNo,pProviderNo);
      END;

      lNewSentence := lBuiltMergeFldDetail.Sentence;

      FOR i := 1 TO 10 DO
        IF lFieldValue[i] = '' THEN BEGIN
          lSubStr := '%' + FORMAT(i) + ' ';
          IF STRPOS(lNewSentence,lSubStr) > 0 THEN
            lNewSentence := DELSTR(lNewSentence,STRPOS(lNewSentence,lSubStr),3);
        END;

      lNewSentence := STRSUBSTNO(
        lNewSentence,
        lFieldValue[1],lFieldValue[2],lFieldValue[3],lFieldValue[4],lFieldValue[5],
        lFieldValue[6],lFieldValue[7],lFieldValue[8],lFieldValue[9],lFieldValue[10]);

      EXIT(lNewSentence);
      //>>IMH11.ISAT.EBA
    END;

    PROCEDURE GetFieldValue@1100281020(pTableNo@1100281007 : Integer;pFieldNo@1100281008 : Integer;pContactNo@1100281006 : Code[20];pServiceNo@1100281005 : Code[20];pServiceHeaderNo@1100281004 : Code[20];pInterventionLineNo@1100281003 : Integer;pIntervQuoteLineNo@1100281022 : Integer;pCustomerNo@1100281002 : Code[20];pSalesperson@1100281001 : Code[10];pAffectedLocCode@1100281024 : Code[10];pSpecialityCode@1100281025 : Code[10];pBuildingTradeNo@1100281026 : Code[20];pProviderNo@1100281031 : Code[20]) Result : Text[50];
    VAR
      lContact@1100281014 : Record 5050;
      lProvider@1100281021 : Record 50000;
      lTempInteractfield@1100281013 : TEMPORARY Record 50083;
      lCode@1100281012 : Record 50079;
      lService@1100281016 : Record 50066;
      lServHeader@1100281011 : Record 5900;
      lServIntervLine@1100281017 : Record 50075;
      lCust@1100281018 : Record 18;
      lSalesperson@1100281019 : Record 13;
      lCompanyInfo@1100281000 : Record 79;
      lServIntervQuote@1100281015 : Record 50076;
      lIntervDescription@1100281023 : Record 50070;
      lRecRef@1100281010 : RecordRef;
      lFieldRef@1100281009 : FieldRef;
      lProviderNo@1100281020 : Code[20];
      lSalutationField@1100281027 : Boolean;
      lFieldCount@1100281028 : Integer;
      lJobResponsibility@1100281029 : Record 5066;
      lOrganizationalLevel@1100281030 : Record 5070;
      lUserSetup@1100281032 : Record 91;
    BEGIN
      //<<IMH11.ISAT.EBA
      Result := '';

      lRecRef.OPEN(pTableNo);
      CASE pTableNo OF
        DATABASE::Contact :
          IF lContact.GET(pContactNo) THEN BEGIN
            lRecRef.GETTABLE(lContact);
            lFieldRef := lRecRef.FIELD(pFieldNo);
          END ELSE
            EXIT('');

        DATABASE::Provider :
          IF GetProviderNo(pContactNo, pServiceHeaderNo,pInterventionLineNo,pProviderNo,lProviderNo) THEN BEGIN
            IF lProvider.GET(lProviderNo) THEN BEGIN
              lRecRef.GETTABLE(lProvider);
              lFieldRef := lRecRef.FIELD(pFieldNo);
            END ELSE
              EXIT('');
          END ELSE
            EXIT('');

        DATABASE::Service :
          IF lService.GET(pServiceNo) THEN BEGIN
            //<<IMH11.ST
            CASE pFieldNo  OF
              49:BEGIN
                lService.GET(pServiceNo);
                Result := FORMAT(lService."Event Time",0,'<Hours24>H<Minutes,2>');
                lSalutationField := TRUE;
                lFieldCount += 1;
                EXIT;
              END;
              71:BEGIN
                lService.GET(pServiceNo);
                lService.CALCFIELDS("Corporate Contact Name");
                Result := lService."Corporate Contact Name";
                lSalutationField := TRUE;
                lFieldCount += 1;
                EXIT;
              END;
              50525:BEGIN
                lService.GET(pServiceNo);
                lService.CALCFIELDS("Job Title");
                IF lJobResponsibility.GET(lService."Job Title") THEN
                  Result := lJobResponsibility.Description
                ELSE
                  Result := '';
                lSalutationField := TRUE;
                lFieldCount += 1;
                EXIT;
              END;
              50526:BEGIN
                lService.GET(pServiceNo);
                lService.CALCFIELDS("Organizational Level Code");
                IF lOrganizationalLevel.GET(lService."Organizational Level Code") THEN
                  Result := lOrganizationalLevel.Description
                ELSE
                  Result := '';
                lSalutationField := TRUE;
                lFieldCount += 1;
                EXIT;
              END;
              50527:BEGIN
                lService.GET(pServiceNo);
                lService.CALCFIELDS(lService."First Job Responsibilities");
                IF lJobResponsibility.GET(lService."First Job Responsibilities") THEN
                  Result := lJobResponsibility.Description
                ELSE
                  Result := '';
                lSalutationField := TRUE;
                lFieldCount += 1;
                EXIT;
              END;
              ELSE BEGIN
                //>>IMH11.ST
                lRecRef.GETTABLE(lServHeader);
                lFieldRef := lRecRef.FIELD(pFieldNo);
              END;
            END;
          END ELSE
            EXIT('');

        DATABASE::"Service Header" :
          IF lServHeader.GET(lServHeader."Document Type"::Invoice,pServiceHeaderNo) THEN BEGIN
            lRecRef.GETTABLE(lServHeader);
            lFieldRef := lRecRef.FIELD(pFieldNo);
          END ELSE
            EXIT('');

        DATABASE::"Service Intervention Line" : BEGIN
          //<<IMH40
          IF NOT lServIntervLine.GET(pServiceHeaderNo,pInterventionLineNo) THEN BEGIN
            IF lServHeader.GET(lServHeader."Document Type"::Invoice, pServiceHeaderNo) THEN BEGIN
              IF NOT lServHeader.Claim THEN
                EXIT('');
              lServIntervLine.SETRANGE("Service Header No.", pServiceHeaderNo);
              IF NOT lServIntervLine.FINDFIRST THEN
                EXIT('');
            END ELSE
              EXIT('');
          END;
          //>>IMH40
          //<<IMH39.PC
          //lRecRef.GETTABLE(lServIntervLine);
          //lFieldRef := lRecRef.FIELD(pFieldNo);
          CASE pFieldNo  OF
            64 : BEGIN
              IF lServIntervLine."Next Appointment Date" <> 0D THEN BEGIN
                Result :=
                  //FORMAT(DATE2DWY(lServIntervLine."Next Appointment Date",2)) + ' - ' +
                  FORMAT(lServIntervLine."Next Appointment Date",0,'<Month Text> <Year4>');
              END ELSE BEGIN
                Result := '';
              END;
              lFieldCount += 1;
              EXIT;
            END;
            ELSE BEGIN
              lRecRef.GETTABLE(lServIntervLine);
              lFieldRef := lRecRef.FIELD(pFieldNo);
            END;
          END;
          //>>IMH39.PC
        END;

        DATABASE::Customer :
          IF lCust.GET(pCustomerNo) THEN BEGIN
            lRecRef.GETTABLE(lCust);
            lFieldRef := lRecRef.FIELD(pFieldNo);
          END ELSE
            EXIT('');

        DATABASE::"Company Information" :
          BEGIN
            lCompanyInfo.GET;
            lRecRef.GETTABLE(lCompanyInfo);
            lFieldRef := lRecRef.FIELD(pFieldNo);
          END;

        DATABASE::"Salesperson/Purchaser" :
          IF lSalesperson.GET(pSalesperson) THEN BEGIN
            lRecRef.GETTABLE(lSalesperson);
            lFieldRef := lRecRef.FIELD(pFieldNo);
          END ELSE
            EXIT('');

        DATABASE::"Service Intervention Quote" :
          IF lServIntervQuote.GET(pServiceHeaderNo,pInterventionLineNo,pIntervQuoteLineNo) THEN BEGIN
            lRecRef.GETTABLE(lServIntervQuote);
            lFieldRef := lRecRef.FIELD(pFieldNo);
          END ELSE
             EXIT('');

        DATABASE::"Intervention Description" :
          IF lIntervDescription.GET(pServiceHeaderNo,pAffectedLocCode,pSpecialityCode,pBuildingTradeNo) THEN BEGIN
            lRecRef.GETTABLE(lIntervDescription);
            lFieldRef := lRecRef.FIELD(pFieldNo);
          END ELSE
            EXIT('');
      //<<IMH44.ST
        DATABASE::"User Setup" :
          IF lUserSetup.GET(USERID) THEN BEGIN
            lRecRef.GETTABLE(lUserSetup);
            lFieldRef := lRecRef.FIELD(pFieldNo);
          END
          ELSE EXIT('');
      //>>IMH44.ST
        ELSE
          EXIT('');
      END;

      IF FORMAT(lFieldRef.CLASS) = 'FlowField' THEN
        lFieldRef.CALCFIELD;
      IF (Result <> '') THEN
        EXIT(Result)
      ELSE
        EXIT(FORMAT(lFieldRef.VALUE));
      //>>IMH11.ISAT.EBA
    END;

    PROCEDURE ConvertDocToPdf@1000000001(VAR pDocAttach@1000 : Record 50021;VAR pPDFFileName@1000000014 : Text[1024];pKeepWordOpen@1000000016 : Boolean) rValue : Boolean;
    VAR
      lMainFileName@1000000000 : Text[1024];
      lMergeFile@1000000001 : File;
      lMergeFileName@1000000002 : Text[1024];
      lwrdApp@1000000006 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{000209FF-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      lwrdDoc@1000000005 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{00020906-0000-0000-C000-000000000046}:Unknown Automation Server.Document";
      lwrdMergefile@1000000004 : Automation "{3C2554FE-2B41-4543-B3E8-E64296773DA5} 2.0:{40D88563-F0DA-4B3D-AD1B-34EFA8C3978A}:Unknown Automation Server.MergeHandler";
      lwrdOLEFormat@1000000012 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{00020933-0000-0000-C000-000000000046}:Unknown Automation Server.OLEFormat";
      lwrdLinkFormat@1000000011 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{00020931-0000-0000-C000-000000000046}:Unknown Automation Server.LinkFormat";
      lWordHided@1000000003 : Boolean;
      lAttachmentMgt@1000000007 : Codeunit 50002;
      lMergeMode@1000000008 : Boolean;
      lParamInt@1000000009 : Integer;
      lShapesIndex@1000000010 : Integer;
      lwdExportFormatPDF@1000000013 : Integer;
      lParamBool@1000000015 : Boolean;
    BEGIN
      //IMH29.ST Fonction de conversion d'un document word en PDF
      rValue := FALSE;

      IF ISCLEAR(lwrdApp) THEN BEGIN
        CREATE(lwrdApp,FALSE,TRUE);
      END;

      IF lwrdApp.Documents.Count > 0 THEN BEGIN
        lwrdApp.Visible := FALSE;
        lWordHided := TRUE;
      END;

      lMainFileName := RBAutoMgt.ServerTempFileName('Word','.DOCX');
      FILE.COPY(lAttachmentMgt.GetFilePath(pDocAttach), lMainFileName);
      lwrdDoc := lwrdApp.Documents.Open(lMainFileName);
      IF lwrdDoc.MailMerge.Fields.Count > 0 THEN BEGIN
        pDocAttach.CALCFIELDS("Merge Source");
        IF NOT pDocAttach."Merge Source".HASVALUE THEN BEGIN
          lwrdDoc.Close;
          CLEAR(lwrdDoc);
          CLEAR(lwrdApp);
          EXIT(FALSE);
        END;
        // Mode merge
        lMergeMode := TRUE;
        lMergeFile.WRITEMODE := TRUE;
        lMergeFile.TEXTMODE := TRUE;
        lMergeFileName := RBAutoMgt.ServerTempFileName(Text029,'.HTM');
        lMergeFile.CREATE(lMergeFileName);
        lParamBool := FALSE;
        CreateILEMergeSourceByDocAtt(lMergeFile,pDocAttach,pDocAttach."Key Integer 1",lParamBool,0);
        lMergeFile.WRITE('</table>');
        lMergeFile.WRITE('</body>');
        lMergeFile.WRITE('</html>');
        lMergeFile.CLOSE;
      END
      ELSE BEGIN
        // Mode document
        lMergeMode := FALSE;
      END;
      IF lMergeMode THEN BEGIN
        lwrdDoc.MailMerge.MainDocumentType := 0;
        lParamInt := 7; // 7 = HTML
        lwrdDoc.MailMerge.OpenDataSource(lMergeFileName,lParamInt);
      END;
      FOR lShapesIndex := 1 TO lwrdDoc.InlineShapes.Count DO BEGIN
        lwrdLinkFormat := lwrdDoc.InlineShapes.Item(lShapesIndex).LinkFormat;
        lwrdOLEFormat := lwrdDoc.InlineShapes.Item(lShapesIndex).OLEFormat;
        IF NOT ISCLEAR(lwrdOLEFormat) THEN
          lwrdDoc.MailMerge.MailAsAttachment := lwrdDoc.MailMerge.MailAsAttachment OR lwrdOLEFormat.DisplayAsIcon;
        IF NOT ISCLEAR(lwrdLinkFormat) THEN
          lwrdLinkFormat.SavePictureWithDocument := TRUE;
      END;
      IF NOT ISCLEAR(lwrdLinkFormat) THEN CLEAR(lwrdLinkFormat);
      IF NOT ISCLEAR(lwrdOLEFormat)  THEN CLEAR(lwrdOLEFormat);
      IF lMergeMode THEN BEGIN
      //<<IMH29.ST
        lParamInt := 0;
        lwrdDoc.MailMerge.ViewMailMergeFieldCodes(lParamInt);
      //>>IMH29.ST

        lwrdDoc.MailMerge.Destination := 0; // 0 = wdSendToNewDocument
        lwrdDoc.MailMerge.Execute;
      END;
      lwdExportFormatPDF := 17; //pdf format;
      IF pPDFFileName = '' THEN
        pPDFFileName := lMainFileName + '.PDF';
      lwrdApp.ActiveDocument.SaveAs2(pPDFFileName,lwdExportFormatPDF);
      lParamBool := FALSE;
      lwrdApp.ActiveDocument.Close(lParamBool);
      IF lwrdApp.Documents.Count > 0 THEN BEGIN
        lwrdApp.ActiveDocument.Close(lParamBool);
        IF lwrdApp.Documents.Count > 0 THEN BEGIN
          lwrdApp.ActiveDocument.Close(lParamBool);
        END;
      END;
      CLEAR(lwrdDoc);
      DeleteFile(lMainFileName);
      DeleteFile(lMergeFileName);

      IF GUIALLOWED THEN BEGIN
        IF lWordHided THEN
          lwrdApp.Visible := TRUE
        ELSE
          IF NOT pKeepWordOpen THEN
            lwrdApp.Quit(lParamBool)
      END;
      CLEAR(lwrdApp);
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CheckWordPDF@1100281021(VAR pAttachment@1100281000 : Record 50021;VAR pwrdApp@1100281001 : Automation "{00020905-0000-0000-C000-000000000046} 8.1:{000209FF-0000-0000-C000-000000000046}:Unknown Automation Server.Application");
    VAR
      lwdExportFormatPDF@1100281002 : Integer;
      lPDFFile@1100281003 : Text[1024];
    BEGIN
      IF pAttachment."PDF Exist" THEN
        EXIT;
      lwdExportFormatPDF := 17; //pdf format;
      lPDFFile := RBAutoMgt.ClientTempFileName(FORMAT(pAttachment."Key Integer 1"), 'PDF');
      pwrdApp.ActiveDocument.SaveAs2(lPDFFile,lwdExportFormatPDF);
      CheckFilePDF(pAttachment, lPDFFile);
      DeleteFile(lPDFFile);
    END;

    LOCAL PROCEDURE CheckFilePDF@1100281023(VAR pAttachment@1100281001 : Record 50021;VAR pFileName@1100281000 : Text[1024]);
    VAR
      lCurrFileName@1100281002 : Text[1024];
      lNewFileName@1100281003 : Text[1024];
      lAttachMgt@1100281004 : Codeunit 50002;
      lInStream@1000000000 : InStream;
      lOutStream@1000000001 : OutStream;
      lNewFIle@1000000003 : File;
    BEGIN
      IF pAttachment."PDF Exist" THEN
        EXIT;
      lCurrFileName := lAttachMgt.GetFilePath(pAttachment);
      IF lCurrFileName = '' THEN
        EXIT;
      lNewFileName := lCurrFileName + '.PDF';
      IF ISSERVICETIER THEN BEGIN
        IF NOT UPLOADINTOSTREAM('', '', '', pFileName, lInStream) THEN
          EXIT;
        lNewFIle.WRITEMODE := TRUE;
        lNewFIle.CREATE(lNewFileName);
        lNewFIle.CREATEOUTSTREAM(lOutStream);
        COPYSTREAM(lOutStream, lInStream);
        lNewFIle.CLOSE;
      END
      ELSE BEGIN
        IF NOT COPY(pFileName, lNewFileName) THEN
          EXIT;
      END;
      pAttachment."PDF Exist" := TRUE;
      pAttachment.MODIFY;
    END;

    LOCAL PROCEDURE SendOutlookMail@1000000002(pToEmail@1000000000 : Text[80];pCCList@1100281000 : Text[1024];pSubject@1000000001 : Text[250];pAttachFileName@1000000005 : Text[1024];pProcessCode@1000000008 : Code[10]);
    VAR
      lOutlookApp@1000000006 : Codeunit 50029;
      lOApp@1000000007 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.2:{0006F03A-0000-0000-C000-000000000046}:'Microsoft Outlook 11.0 Object Library'.Application";
      lOMailItem@1000000002 : Automation "{00062FFF-0000-0000-C000-000000000046} 9.4:{00061033-0000-0000-C000-000000000046}:'Microsoft Outlook 14.0 Object Library'.MailItem";
      lSendFrom@1000000003 : Text[80];
      lMail@1000000004 : Codeunit 397;
    BEGIN
      // IMH31.ST
      // Envoi le mail via l'automation Outlook car SMTP ne gŠre pas les piŠces jointes => NAS, WS uniquement

      lOutlookApp.SetRunOnServer(TRUE);
      lOutlookApp.RUN;
      lOutlookApp.GetOutlookApp(lOApp);

      lOMailItem := lOApp.CreateItem(0);
      lSendFrom := lMail.GetSenderEMail(pProcessCode);
      IF lSendFrom <> '' THEN
        lOMailItem.SentOnBehalfOfName(lSendFrom);
      lOMailItem."To" := pToEmail;
      //<<IMH41
      lOMailItem.CC := pCCList;
      //>>IMH41
      lOMailItem.Subject := pSubject;
      lOMailItem.Attachments.Add(pAttachFileName,1,1,pAttachFileName);
      lOMailItem.Send;
      CLEAR(lOMailItem);
    END;

    PROCEDURE SaveDelivery@1100281022(pDelivery@1100281000 : Record 5074);
    VAR
      lDeliverySorter@1100281001 : Record 5074;
    BEGIN
      lDeliverySorter := pDelivery;
      IF lDeliverySorter.INSERT THEN;
    END;

    LOCAL PROCEDURE AddAttachDoc@1000000003(pInterLogEntry@1000000000 : Record 5065;VAR pTempAttach@1000000001 : Record 50021) : Boolean;
    VAR
      lSendNavMail@1000000002 : Codeunit 50128;
      lService@1000000003 : Record 50066;
      lServHeader@1000000004 : Record 5900;
      lInterv@1000000005 : Record 50075;
      lTempContact@1000000006 : TEMPORARY Record 5050;
      lTempAttach@1000000007 : TEMPORARY Record 50021;
      lMailAttachList@1000000008 : Form 50290;
    BEGIN
      //IMH36.ST
      IF NOT GUIALLOWED THEN
        EXIT(FALSE);

      IF NOT CONFIRM(Text50018, FALSE) THEN
        EXIT(FALSE);

      // Load attachment list
      WITH pInterLogEntry DO BEGIN
        IF "Service No." <> '' THEN
          IF lService.GET("Service No.") THEN
            lSendNavMail.LoadServData(lService, FALSE, TRUE);
        IF "Service Header No." <> '' THEN BEGIN
          IF lServHeader.GET(lServHeader."Document Type"::Invoice, "Service Header No.") THEN
            lSendNavMail.LoadServHeaderData(lServHeader, FALSE, TRUE);
          IF "Intervention Line No." <> 0 THEN
            IF lInterv.GET("Service Header No.", "Intervention Line No.") THEN
              lSendNavMail.LoadIntervData(lInterv, FALSE, TRUE);
        END;
      END;
      lSendNavMail.RetrieveTempData(lTempContact, lTempAttach);
      // Suppression du document en cours
      IF pInterLogEntry."Entry No." <> 0 THEN BEGIN
        lTempAttach.RESET;
        lTempAttach.SETFILTER("Interaction Log Entry No.", '<>%1', pInterLogEntry."Entry No.");
      END;
      lMailAttachList.InitList(lTempAttach);
      lMailAttachList.LOOKUPMODE(TRUE);
      IF lMailAttachList.RUNMODAL <> ACTION::LookupOK THEN
        EXIT(FALSE);
      lMailAttachList.RetrieveDocumentList(pTempAttach);
      pTempAttach.RESET;
      EXIT(NOT pTempAttach.ISEMPTY);
    END;

    PROCEDURE ChangeAttachmentDoc@1000000004(VAR pDocAttach@1000000000 : Record 50021;pNewFile@1000000001 : Text[1024]);
    VAR
      lAttachMgt@1000000002 : Codeunit 50002;
    BEGIN
      //IMH36.ST
      IF lAttachMgt.ChangeAttachmentFile(pDocAttach, pNewFile) THEN;
    END;

    BEGIN
    {
      /** @r IMH46 @d 12/12/13 @a IMH.DBR @v IMH6.01.2812 @s MAD Carence depuis ligne produit @h 2812
          @c Carence ne fonctionne pas depuis la ligne produit quand il n'y a pas d'intervention  */
      /** @r IMH45 @d 11/12/13 @a IMH.WGA @v IMH6.01.4903 @s MAD Champ Description Type Devis @h 4903
          @c Modification fonction AddFieldToWrdMergeFile ajout Gestion Table Devis */
      /** @r IMH44 @d 15/10/13 @a ISAT.ST @v IMH6.01.353 @s Reorganisation region IMH @h 4807 @c Ajout table User Setup
          @c Correction CCList */
      /** @r IMH43 @d 16/07/13 @a ISAT.ZW @v IMH6.01.218 @s Juillet @h 3872
          @c Correction message d'erreur body */
      /** @r IMH42 @d 26/09/12 @a ISAT.ZW @v IMH6.01.218 @s NEP00009 @h 3748
          @c Correction fonction v‚rification champs fusion */
      /** @r IMH41 @d 06/09/12 @a ISAT.ZW @v IMH6.01.226 @s version 1.4 @h 3444
          @c Gestion champ Destinataire Service en copie */
      /** @r IMH40 @d 16/07/12 @a ISAT.PC @v IMH6.01.226 @s version 1.4 @h 1441
          @c Intervention r‚cla */
      /** @r IMH39 @d 05/07/12 @a ISAT.PC @v IMH6.01.226 @s version 1.4 @h 2051 @c ajout format champ date prochain controle */
      /** @r IMH37 @d 19/06/12 @a ISAT.ZW @v IMH6.01.108 @s Ajout de piŠce jointe lors de l'envoi @h 2844 @ correction */
      /** @r IMH36 @d 16/05/12 @a ISAT.ST @v IMH6.01.108 @s Ajout de piŠce jointe lors de l'envoi @h 2844 */
      /** @r IMH35 @d 05/04/12 @a ISAT.ST @v IMH6.01.108 @s Interaction sans envoi @h 3083 */
      /** @r IMH34 @d 19/03/12 @a ISAT.ST @v IMH6.01.108 @s Interaction fax @c Envoi en piŠce jointe */
      /** @r IMH33 @d 16/03/12 @a ISAT.ZW @v IMH6.01.108 @c champ fusion table Visite r‚seau */
      /** @r IMH32 @d 07/12/11 @a ISAT.ZW @v IMH6.01.108 @c champ fusion table Service Header Address */
      /** @r IMH31 @d 30/11/11 @a ISAT.ST @v IMH6.01.108 @s Publipostage - Envoi De */
      /** @r IMH30 @d 14/11/11 @a ISAT.EBA @v IMH6.01.108 @s Publipostage - Champ de fusion construit
          @c Gestion champ "Payment Method" */
      /** @r IMH29 @d 09/11/11 @a ISAT.ST @v IMH6.01.108 @s Publipostage @c Sauvegarde doc en pdf */
      /** @r IMH28 @d 04/11/11 @a ISAT.EBA @v IMH6.01.108 @s Publipostage - Liste des options */
      /** @r IMH27 @d 03/11/11 @a ISAT.ST @v IMH6.01.108 @s Interactions
          @c Exclusion Interaction Template Field … 0
          @c Filtre document type */
      /** @r IMH26 @d 05/10/11 @a ISAT.ZW @v IMH6.01.108 @s Interactions
          @c Gestion report interacton */
      /** @r IMH25 @d 02/10/11 @a ISAT.ZW @v IMH6.01.108 @s Interactions
          @c Ajout table champs li‚ D‚tails r‚clamations ligne produit,Appareil ligne produit */
      /** @r IMH24 @d 26/09/11 @a ISAT.ZW @v IMH6.01.200 @s Ajout champ construit montant franchise + v‚tusit‚ > 0 */
      /** @r IMH23 @d 06/09/11 @a ISAT.EBA @v IMH6.01.200 @s Type de base */
      /** @r IMH22 @d 29/08/11 @a ISAT.ZW @v IMH6.01.108 @s Interactions @c fonction email en mode debug */
      /** @r IMH21 @d 25/07/11 @a ISAT.ZW @v IMH6.01.108 @s Interactions @c fonction SendSMTPMailWithCC */
      /** @r IMH20 @d 22/07/11 @a ISAT.ZW @v IMH6.01.108 @s Interactions @c Save document word */
      /** @r IMH19 @d 11/07/11 @a ISAT.ST @v IMH6.01.108 @s Interactions @c Ajout champs d'envoi */
      /** @r IMH18 @d 08/07/10 @a ISAT.ZW @v IMH6.01.108 @s Interactions @c AJout fonction CheckFields */
      /** @r IMH17 @d 08/07/11 @a ISAT.ST @v IMH6.01.108 @s Pas de waitfor document si readonly */
      /** @r IMH16 @d 27/06/11 @a ISAT.VA @v IMH6.01.108 @s Ajout de 5 champs de fusion suppl‚mentaire */
      /** @r IMH15 @d 23/06/11 @a ISAT.ZW @v IMH6.01.108 @s ajout champ civilit‚ contact adm. prestataire */
      /** @r IMH14 @d 27/05/11 @a ISAT.EBA @v IMH6.01.108 @s Publipostage - Liste des options */
      /** @r IMH13 @d 19/05/11 @a ISAT.EBA @v IMH6.01.108 @s Publipostage - Champ de fusion construit
          @c Gestion champs de fusion "lieu"  */
      /** @r IMH12 @d 07/04/11 @a ISAT.ST @v IMH6.01.108 @d Interactions @c AJout salutation sur service */
      /** @r IMH11 @d 13/04/11 @a ISAT.EBA @v IMH6.01.108 @s Publipostage - Champ de fusion construit
          @c Ajout de fonctions : "AddBuiltMergeFields", "GetSentenceNo", "GetSentence", "GetFieldValue" */
      /** @r IMH10 @d 24/03/11 @a ISAT.ZW @v IMH6.01.108 @d Interactions
          @c publipostage : envoie description commentaire pour service header*/
      /** @r IMH09 @d 09/03/11 @a ISAT.PC @v IMH6.01.108 @d Interactions @c Correctif*/
      /** @r IMH08 @d 21/02/11 @a ISAT.ST @v IMH6.01.108 @d Interactions
          @c Ajout vendeur dans les champs possibles en publipostage
          @c Ajout lignes multiples dans les publipostages */
      /** @r IMH07 @d 15/02/11 @a ISAT.ZW @v IMH6.01.108 @d Interactions
          @c ajouter la formule appelative format‚e, dans la liste des champs de fusions */
      /** @r IMH06 @d 07/02/11 @a ISAT.ZW @v IMH6.01.108 @d Interactions @c Gestion de "merge source" */
      /** @r IMH05 @d 25/01/11 @a ISAT.ST @v IMH6.01.108 @d Interactions @c Gestion du HideDialog */
      /** @r IMH04 @d 25/01/11 @a ISAT.LLT @v IMH6.01.108 @d Interactions @c Gestion du prestataire */
      /** @r IMH03 @d 22/12/10 @a ISAT.LLT @v IMH6.01.108 @d Interactions @c Enregistrement en PDF */
      /** @r IMH02 @d 14/12/10 @a ISAT.LLT @v IMH6.01.108 @s Interactions @c gestion champs de fusion */
      /** @r IHM01 @d 26/11/10 @a ISAT.ZW @v IMH6.01.004 @s GED @c Modification table Doc joint */
    }
    END.
  }
}