OBJECT Codeunit 6810 EP Request Handler
{
  OBJECT-PROPERTIES
  {
    Date=04/07/11;
    Time=23:17:39;
    Modified=Yes;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=VAR
            XMLConfig@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";
            EncodeXML@1001 : Codeunit 6814;
          BEGIN
            IF IsRunning THEN BEGIN
              IF GUIALLOWED THEN
                MESSAGE(Text003);
              EXIT;
            END;

            GetNASSetup;

            CREATE(XMLConfig);
            EncodeXML.CreateListenerConfig(XMLConfig,NASID,FALSE);
            CLEAR(XMLConfig);

            IsRunning := TRUE;

            MESSAGE(Text002);
          END;

  }
  CODE
  {
    VAR
      EPNASSetup@1009 : Record 6870;
      XMLDocumentRecv@1005 : Codeunit 6811;
      XMLDocIn@1000000001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";
      XMLDocOut@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";
      Text001@1000000004 : TextConst 'ENU=Employee Portal Setup not found.;FRA=ParamŠtres Employee Portal introuvables.';
      Text002@1000000008 : TextConst 'ENU=NAS for Employee Portal started.;FRA=NAS pour Employee Portal d‚marr‚.';
      Text003@1002 : TextConst 'ENU=The NAS has already been started for Employee Portal.;FRA=NAS d‚j… d‚marr‚ pour Employee Portal.';
      Text004@1003 : TextConst 'ENU=There is a problem with the queue listener.;FRA=ProblŠme avec le processus d''‚coute de file d''attente.';
      IsRunning@1007 : Boolean;
      Text005@1008 : TextConst 'ENU=Error sending message.;FRA=Erreur lors de l''envoi du message.';
      NASID@1006 : Code[20];
      Text007@1011 : TextConst 'ENU=Error receiving Backend private key.;FRA=Erreur lors de la r‚ception de la cl‚ priv‚e principale.';
      Text008@1004 : TextConst 'ENU=Error receiving Frontend public key.;FRA=Erreur lors de la r‚ception de la cl‚ publique frontale.';

    PROCEDURE Version@1() : Text[8];
    BEGIN
      EXIT('01.00.00');
    END;

    PROCEDURE AddVersion@2(VAR XMLDoc@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument");
    VAR
      XMLNode@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
      XMLNode2@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
      XMLNewChild@1002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
    BEGIN
      XMLNode := XMLDoc.documentElement;
      XMLNode2 := XMLNode.selectSingleNode('//GUID');
      XMLNewChild := XMLNode.ownerDocument.createNode('element','VERSION','');
      XMLNewChild.text := Version;

      XMLNode.insertBefore(XMLNewChild,XMLNode2);
    END;

    PROCEDURE CompareVersion@3(VAR XMLDoc@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument") : Boolean;
    VAR
      XMLNode@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
    BEGIN
      XMLNode := XMLDoc.documentElement;
      XMLNode := XMLNode.selectSingleNode('//VERSION');

      IF ISCLEAR(XMLNode) THEN
        EXIT(FALSE);

      IF XMLNode.text <> '' THEN
        IF XMLNode.text = Version THEN
          EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE WrongVersion@4(VAR XMLDocIn1@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";VAR XMLDocOut1@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument");
    VAR
      DecodeXML@1006 : Codeunit 6813;
      EncodeXML@1005 : Codeunit 6814;
      SupportFunctions@1004 : Codeunit 6815;
      XMLDocOutData@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";
      XMLDocErrors@1008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";
      XMLNode1@1007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
      XMLNode2@1009 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
      GUID@1002 : Text[50];
    BEGIN
      DecodeXML.GetGUIDFromIn(XMLDocIn1,GUID);
      CREATE(XMLDocOutData);
      CREATE(XMLDocErrors);

      XMLDocOut1.loadXML('<EMPLOYEEPORTAL/>');
      XMLNode1 := XMLDocOut1.documentElement;
      EncodeXML.AddGUID(XMLDocOut1,GUID);

      EncodeXML.CreateErrors(XMLDocErrors);
      EncodeXML.AddErrors(XMLDocErrors,4,'','','');
      XMLDocOutData.loadXML('<DATA/>');
      SupportFunctions.MergeErrorsPartToData(XMLDocOutData,XMLDocErrors);

      XMLNode2 := XMLDocOutData.documentElement;
      XMLNode1.appendChild(XMLNode2);

      CLEAR(XMLDocOutData);
      CLEAR(XMLDocErrors);
    END;

    PROCEDURE SetNASID@1000000003(ID@1000000000 : Code[20]);
    BEGIN
      NASID := ID;
    END;

    LOCAL PROCEDURE GetNASSetup@5();
    BEGIN
      IF NOT EPNASSetup.GET(NASID) THEN
        ERROR(Text001)
    END;

    PROCEDURE GetBackendKey@6(VAR XMLDoc@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument");
    VAR
      EPSetup@1002 : Record 6800;
      OutStream@1001 : OutStream;
    BEGIN
      EPSetup.GET;
      EPSetup.CALCFIELDS("Back End Private Key");
      IF NOT EPSetup."Back End Private Key".HASVALUE THEN
        ERROR(Text007);

      EPSetup."Back End Private Key".CREATEOUTSTREAM(OutStream);
      XMLDoc.load(OutStream);
    END;

    PROCEDURE GetPublicKey@7(VAR XMLDoc@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";PartnerID@1000 : Text[50]);
    VAR
      TrustedSites@1003 : Record 6872;
      OutStream@1002 : OutStream;
    BEGIN
      TrustedSites.SETCURRENTKEY("Site Identifier");
      TrustedSites.SETRANGE("Site Identifier",PartnerID);
      IF NOT TrustedSites.FIND('-') THEN
        ERROR(Text008);

      TrustedSites.CALCFIELDS("Partner Public Key");
      IF TrustedSites."Partner Public Key".HASVALUE AND TrustedSites."Answer Sent" THEN BEGIN
        TrustedSites."Partner Public Key".CREATEOUTSTREAM(OutStream);
        XMLDoc.load(OutStream);
      END ELSE
        ERROR(Text008);
    END;

    PROCEDURE StopQueue@8();
    BEGIN
    END;

    EVENT XMLDocIn@1000000001::ondataavailable@198();
    BEGIN
    END;

    EVENT XMLDocIn@1000000001::onreadystatechange@-609();
    BEGIN
    END;

    EVENT XMLDocOut@1000000000::ondataavailable@198();
    BEGIN
    END;

    EVENT XMLDocOut@1000000000::onreadystatechange@-609();
    BEGIN
    END;

    BEGIN
    END.
  }
}