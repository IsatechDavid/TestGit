OBJECT Codeunit 6871 EP Trust Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=25/05/05;
    Time=12:00:00;
    Version List=NAVW14.00.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=An acknowledgement has already been sent to partner %1.;FRA=Un accus‚ de r‚ception a d‚j… ‚t‚ envoy‚ au partenaire %1.';
      Text002@1000 : TextConst 'ENU=Do you want to send an acknowledgement to partner %1?;FRA=Voulez-vous envoyer un accus‚ de r‚ception au partenaire %1 ?';
      Text003@1002 : TextConst 'ENU=No Backend Public Key exists.;FRA=Il n''existe aucune cl‚ publique principale.';
      Text004@1003 : TextConst 'ENU=Request for Partner %1 already exists.;FRA=La demande du partenaire %1 existe d‚j….';
      Text005@1004 : TextConst 'ENU=Please restart all Employee Portal Application Servers after the answer is sent to the frontend system.;FRA=Red‚marrez tous les serveurs d''application Employee Portal une fois la r‚ponse envoy‚e au systŠme frontal.';

    PROCEDURE SetTrust@1000000001(VAR EPTrustedPartners@1000000000 : Record 6872);
    BEGIN
      IF EPTrustedPartners."Site Trust" THEN
        ERROR(Text001,EPTrustedPartners."Entry ID");

      IF NOT CONFIRM(STRSUBSTNO(Text002,EPTrustedPartners."Entry ID")) THEN
        EXIT;

      EPTrustedPartners."Site Trust" := TRUE;
      EPTrustedPartners."Trust Date" := WORKDATE;
      EPTrustedPartners."Trust Time" := TIME;
      EPTrustedPartners.MODIFY;

      MESSAGE(Text005);
    END;

    PROCEDURE GetBackendPublic@1000000003(VAR XMLDocIn@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";VAR XMLDocOut@1000000001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument");
    VAR
      BackendPublicKey@1000 : Record 6800;
      XMLDomMgt@1003 : Codeunit 6812;
      DecodeXML@1002 : Codeunit 6813;
      OutStream@1001 : OutStream;
      XMLBackendKey@1000000009 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";
      XMLNodeDocOut@1000000006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
      XMLNodeData@1000000012 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
      XMLNodeKey@1000000022 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
      XMLDocOutData@1000000019 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";
      XMLNewChild@1000000004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
      NameSpace@1000000003 : Text[30];
      GUID@1000000008 : Text[50];
      UserID@1000000010 : Code[50];
      RequestType@1000000011 : Code[20];
    BEGIN
      DecodeXML.GetGUIDFromIn(XMLDocIn,GUID);
      DecodeXML.GetRequestTypeStatic(XMLDocIn,RequestType);

      BackendPublicKey.GET;
      BackendPublicKey.CALCFIELDS("Back End Public Key");
      IF NOT BackendPublicKey."Back End Public Key".HASVALUE THEN
        ERROR(Text003);

      BackendPublicKey."Back End Public Key".CREATEOUTSTREAM(OutStream);

      CREATE(XMLBackendKey);
      XMLBackendKey.load(OutStream);

      XMLDocOut.loadXML('<EMPLOYEEPORTAL/>');
      XMLNodeDocOut := XMLDocOut.documentElement;

      WITH XMLDomMgt DO BEGIN
        IF AddElement(XMLNodeDocOut,'GUID',GUID,NameSpace,XMLNewChild) > 0 THEN
          EXIT;
        IF AddElement(XMLNodeDocOut,'REQUESTTYPE',RequestType,NameSpace,XMLNewChild) > 0 THEN
          EXIT;
      END;


      IF ISCLEAR(XMLDocOutData) THEN
        CREATE(XMLDocOutData);

      XMLDocOutData.loadXML('<DATA/>');
      XMLNodeData := XMLDocOutData.documentElement;

      WITH XMLDomMgt DO BEGIN
        IF AddElement(XMLNodeData,'BEPUBLIC','',NameSpace,XMLNewChild) > 0 THEN
          EXIT;
      END;

      XMLNodeKey := XMLBackendKey.documentElement;
      XMLNewChild.appendChild(XMLNodeKey);

      XMLNodeDocOut.appendChild(XMLNodeData);

      CLEAR(XMLDocOutData);
    END;

    PROCEDURE CreateAckDoc@1000000000(VAR EPTrustedPartners@1000000001 : Record 6872;VAR XMLDocOut@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument") ReturnValue : Boolean;
    VAR
      XMLDomMgt@1001 : Codeunit 6812;
      EPCryptoMgt@1002 : Codeunit 6872;
      XMLCurrNode@1000000002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
      XMLNewChild@1000000004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
      XMLDocMsg@1000000008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";
      XMLNode1@1000000010 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
      XMLNode2@1000000007 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
      XMLDocSymKey@1000000011 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";
      NameSpace@1003 : Text[30];
      XMLDocInitVector@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";
    BEGIN
      ReturnValue := FALSE;
      XMLDocOut.loadXML('<EMPLOYEEPORTAL/>');
      XMLCurrNode := XMLDocOut.documentElement;

      WITH XMLDomMgt DO BEGIN
        IF AddElement(XMLCurrNode,'GUID',EPTrustedPartners."Req. Message GUID",NameSpace,XMLNewChild) > 0 THEN
          EXIT;

        IF AddElement(XMLCurrNode,'REQUESTTYPE','REGISTER',NameSpace,XMLNewChild) > 0 THEN
          EXIT;

        IF AddElement(XMLCurrNode,'ID',EPTrustedPartners."Site Identifier",NameSpace,XMLNewChild) > 0 THEN
          EXIT;
      END;
      ReturnValue := TRUE;
    END;

    PROCEDURE ReceiveTrustRequest@1000000002(VAR XMLDocIn@1000000001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument");
    VAR
      EPTrustedPartners@1000000002 : Record 6872;
      XMLDomMgt@1002 : Codeunit 6812;
      EPCryptoMgt@1006 : Codeunit 6872;
      ObjInStream@1000 : InStream;
      XMLDOMPublicKey@1000000008 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";
      XMLNode@1000000005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
      XMLNodeFound@1000000004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v3.0'.IXMLDOMNode";
      XMLDocSymKey@1000000015 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";
      NextEntryID@1003 : Integer;
      Status@1000000016 : Integer;
      GUID@1004 : Text[50];
      Name@1000000017 : Text[250];
      Address@1000000018 : Text[250];
      PartnerID@1000000019 : Text[50];
      XMLDocInitVector@1001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";
      XMLDocSymData@1005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 3.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v3.0'.DOMDocument";
      DecodeXML@1007 : Codeunit 6813;
    BEGIN
      Status := 0;

      XMLNode := XMLDocIn.documentElement;
      XMLNodeFound := XMLNode.selectSingleNode('//GUID');
      GUID := XMLNodeFound.text;

      XMLNode := XMLDocIn.documentElement;
      WITH XMLDomMgt DO BEGIN
        IF FindNode(XMLNode,'//NAME',XMLNodeFound) THEN
          IF STRLEN(XMLNodeFound.text) > 0 THEN
            Name := XMLNodeFound.text;
        IF FindNode(XMLNode,'//ADDRESS',XMLNodeFound) THEN
          IF STRLEN(XMLNodeFound.text) > 0 THEN
            Address := XMLNodeFound.text;
        IF FindNode(XMLNode,'//PARTNERID',XMLNodeFound) THEN
          IF STRLEN(XMLNodeFound.text) > 0 THEN
            PartnerID := XMLNodeFound.text;

        IF FindNode(XMLNode,'//FEPUBLIC',XMLNodeFound) THEN
          IF STRLEN(XMLNodeFound.text) > 0 THEN BEGIN
            CREATE(XMLDOMPublicKey);
            XMLDOMPublicKey.documentElement(XMLNodeFound);
          END;
      END;

      EPTrustedPartners.RESET;
      EPTrustedPartners.SETCURRENTKEY("Site Identifier");
      EPTrustedPartners.SETRANGE("Site Identifier",PartnerID);
      IF EPTrustedPartners.FIND('-') THEN BEGIN
        CLEAR(XMLDOMPublicKey);
        ERROR(Text004,PartnerID);
      END;

      EPTrustedPartners.RESET;
      IF EPTrustedPartners.FIND('+') THEN
        NextEntryID := EPTrustedPartners."Entry ID" + 10000
      ELSE
        NextEntryID := 10000;

      EPTrustedPartners.INIT;
      EPTrustedPartners."Entry ID" := NextEntryID;
      EPTrustedPartners."Req. Message GUID" := GUID;
      EPTrustedPartners."Site Name" := Name;
      EPTrustedPartners."Site Address" := Address;
      EPTrustedPartners."Site Identifier" := PartnerID;
      EPTrustedPartners."Partner Public Key".CREATEINSTREAM(ObjInStream);
      XMLDOMPublicKey.save(ObjInStream);
      EPTrustedPartners."Request Date" := WORKDATE;
      EPTrustedPartners."Request Time" := TIME;
      EPTrustedPartners.INSERT;

      CLEAR(XMLDOMPublicKey);

      COMMIT;
    END;

    BEGIN
    END.
  }
}