OBJECT Codeunit 8016700 EAI Tools
{
  OBJECT-PROPERTIES
  {
    Date=22/01/10;
    Time=10:48:47;
    Version List=ISAEAI1.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE ShowObjects@1100481002(pTableNo@1100481001 : Integer;pFieldNo@1100481002 : Integer;pSubtype@1100481003 : Integer;pType@1100481005 : Integer;pValue@1100481006 : Integer) : Integer;
    VAR
      lReferedObjNAV@1100481004 : Record 8016715;
    BEGIN
      // Permet d'acc‚der rapidement … un objet NAV r‚f‚renc‚ dans une table

      IF lReferedObjNAV.GET(pTableNo,pFieldNo,pSubtype,pType,pValue) THEN;

      lReferedObjNAV.FILTERGROUP(2);
      lReferedObjNAV.SETRANGE("Table No.",pTableNo);
      lReferedObjNAV.SETRANGE("Field No.",pFieldNo);
      lReferedObjNAV.SETRANGE(Subtype,pSubtype);
      lReferedObjNAV.FILTERGROUP(0);
      IF FORM.RUNMODAL(0,lReferedObjNAV) = ACTION::LookupOK THEN BEGIN
        EXIT(lReferedObjNAV."Object Id");
      END ELSE
        EXIT(pValue);
    END;

    PROCEDURE GetObjectName@1100481000(pObjType@1100481000 : Integer;pObjId@1100481001 : Integer) : Text[30];
    VAR
      lAllObjects@1100481002 : Record 2000000038;
    BEGIN
      // Retourne le nom d'un objet

      IF lAllObjects.GET(pObjType,pObjId) THEN
        EXIT(lAllObjects."Object Name")
      ELSE
        EXIT('');
    END;

    PROCEDURE IsNormalField@1100481016(pTableNumber@1100481000 : Integer;pFieldNumber@1100481001 : Integer) : Boolean;
    VAR
      lRecField@1100481002 : Record 2000000041;
    BEGIN
      // Retourne vrai si le champ est de classez normal

      GetField(pTableNumber,pFieldNumber,lRecField);
      EXIT((lRecField.Class = lRecField.Class::Normal) AND (lRecField.Type <> lRecField.Type::BLOB) );
    END;

    PROCEDURE GetField@1100481020(pTableNumber@1100481000 : Integer;pFieldNumber@1100481001 : Integer;VAR pRecField@1100481002 : Record 2000000041);
    BEGIN
      // Retourne le Record Field correspondant

      pRecField.GET(pTableNumber,pFieldNumber);
      {
      IF NOT TempField.GET(TableNumber,FieldNumber) THEN BEGIN
        Field.GET(TableNumber,FieldNumber);
        TempField := Field;
        TempField.INSERT;
      END;
      Field2 := TempField;
      }
    END;

    PROCEDURE GetParameterTab@1100481005(pParametersString@1100481001 : Text[1024];VAR pReturnParamTab@1100481000 : ARRAY [10] OF Text[50]);
    VAR
      lAuxText@1100481002 : Text[250];
      lParamName@1100481003 : Code[10];
      lParamValue@1100481004 : Text[50];
    BEGIN
      //<<EAI01.ISAT.PB
      //D‚coupe la chaine de caractŠres et remplit un tableau de BOOLEAN
      //syntaxe nom_param_1=valeur;nom_param_2=valeur;nom_param_3=valeur;...
      CLEAR(pReturnParamTab);

      IF STRLEN(pParametersString) = 0 THEN
        EXIT;

      REPEAT
        IF STRPOS(pParametersString,';') = 0 THEN
        BEGIN
          lAuxText := pParametersString;
          pParametersString := '';
        END ELSE BEGIN
          lAuxText := COPYSTR(pParametersString,1,STRPOS(pParametersString,';') - 1);
          pParametersString := COPYSTR(pParametersString,STRPOS(pParametersString,';') + 1);
        END;

        IF STRPOS(lAuxText,'=') <> 0 THEN
        BEGIN
          lParamName := '';

          IF EVALUATE(lParamName,COPYSTR(lAuxText,1,STRPOS(lAuxText,'=') - 1)) THEN
            IF NOT EVALUATE(lParamValue,COPYSTR(lAuxText,STRPOS(lAuxText,'=') + 1)) THEN
              lParamValue := '';

          CASE lParamName OF
            'RELEASE':   pReturnParamTab[1] := lParamValue;
            'POST':      pReturnParamTab[2] := lParamValue;
            'PRINT':     pReturnParamTab[3] := lParamValue;
            'TEMPLATE' : pReturnParamTab[4] := lParamValue;
            'BATCH' :    pReturnParamTab[5] := lParamValue;
            'PRODAT' :   pReturnParamTab[6] := lParamValue;
          END;

        END;

      UNTIL STRLEN(pParametersString)=0;
    END;

    BEGIN
    {
      /** @r EAI01 @d 15/10/09 @a ISAT.PB @v ISAEAI5.01.00.00 @s EAI
          @c Ajout fonct GetParameterTab */

      /** @r EAI00 @d 12/11/08 @a ISAT.MGI @v ISAEAI5.01.00.00 @s Cr‚ation de l'objet
          @c Codeunit de fonctions g‚n‚riques pour le moteur EAI */
    }
    END.
  }
}