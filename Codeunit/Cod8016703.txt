OBJECT Codeunit 8016703 EAI Act Management
{
  OBJECT-PROPERTIES
  {
    Date=22/10/13;
    Time=16:23:09;
    Modified=Yes;
    Version List=ISAEAI1.01,SysAgDarva;
  }
  PROPERTIES
  {
    TableNo=8016706;
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE GetMQFromEAIAct@1100481003(pEAIAct@1100481000 : Record 8016706;VAR pMQ@1100481001 : Record 8016704);
    VAR
      lProcessAct@1100481002 : Record 8016714;
      lProcess@1100481003 : Record 8016702;
      ProcessMgt@1100481004 : Codeunit 8016702;
    BEGIN
      // Recherche la file de message pour un acte EAI

      IF ProcessMgt.GetProcessActFromEAIAct(pEAIAct,lProcessAct) THEN BEGIN
        lProcess.GET(lProcessAct."EAI Process Code");
        pMQ.GET(lProcess."EAI Message Queue Code");
      END;
    END;

    PROCEDURE GetActVersion@1100481002(pActTypeCode@1100481000 : Code[20];pActCode@1100481001 : Code[20];pDate@1100481002 : Date;pOnlyActive@1100481003 : Boolean) : Integer;
    VAR
      lEAIActVersion@1100481004 : Record 8016713;
    BEGIN
      lEAIActVersion.SETCURRENTKEY(lEAIActVersion."EAI Act Type Code",lEAIActVersion."EAI Act Code");
      lEAIActVersion.SETRANGE("EAI Act Type Code",pActTypeCode);
      lEAIActVersion.SETRANGE("EAI Act Code",pActCode);

      lEAIActVersion.SETFILTER("Starting Date",'%1|..%2',0D,pDate);
      IF pOnlyActive THEN
        lEAIActVersion.SETRANGE(Status,lEAIActVersion.Status::Active);
      IF NOT lEAIActVersion.FIND('+') THEN
        CLEAR(lEAIActVersion);

      EXIT(lEAIActVersion."Version No.");
    END;

    PROCEDURE GetTestActiveEAIActVersion@1100481000(VAR pEAIAct@1100481006 : Record 8016706;VAR pEAIActVersion@1100481005 : Record 8016713;pActTypeCode@1100481002 : Code[20];pActCode@1100481003 : Code[20];pDate@1100481004 : Date) : Integer;
    BEGIN
      CLEAR(pEAIAct);
      CLEAR(pEAIActVersion);
      pEAIAct.GET(pActTypeCode,pActCode);
      pEAIActVersion.SETCURRENTKEY("EAI Act Type Code","EAI Act Code","Starting Date");
      pEAIActVersion.SETRANGE("EAI Act Type Code",pEAIAct."EAI Act Type Code");
      pEAIActVersion.SETRANGE("EAI Act Code",pEAIAct.Code);
      pEAIActVersion.SETFILTER("Starting Date",'%1|..%2',0D,pDate);
      IF pEAIActVersion.FIND('+') THEN
        pEAIActVersion.TESTFIELD(Status,pEAIActVersion.Status::Active)
      ELSE
      {//<EAI02
        pEAIActVersion.TESTFIELD(Status,pEAIAct.Status::Active);
      }
        pEAIAct.TESTFIELD(Status,pEAIAct.Status::Active);
      //>>EAI01
      EXIT(pEAIActVersion."Version No.");
    END;

    PROCEDURE GetGenerationCodeUnitNo@1100481005(pEAIActType@1100281004 : Code[20];pEAIActCode@1100281000 : Code[20];pRefDate@1100281002 : Date) : Integer;
    VAR
      lEAIAct@1100281003 : Record 8016706;
      lEAIActVersion@1100481004 : Record 8016713;
      lEAIActVersionNo@1100281001 : Integer;
    BEGIN
      IF (pEAIActCode = '') THEN
        EXIT(0);

      IF NOT lEAIAct.GET(pEAIActType,pEAIActCode) THEN
        EXIT(0);

      lEAIActVersionNo := GetActVersion(lEAIAct."EAI Act Type Code",lEAIAct.Code,pRefDate,TRUE);

      IF lEAIActVersionNo = 0 THEN
        EXIT(lEAIAct."Creating Codeunit No.");

      lEAIActVersion.GET(lEAIAct."EAI Act Type Code",lEAIAct.Code,lEAIActVersionNo);

      EXIT(lEAIActVersion."Creating Codeunit No.");
    END;

    PROCEDURE GetValidationCodeUnitNo@1100481006(pEAIActType@1100281002 : Code[20];pEAIActCode@1100281001 : Code[20];pRefDate@1100481002 : Date) : Integer;
    VAR
      lEAIAct@1100281003 : Record 8016706;
      lEAIActVersion@1100481004 : Record 8016713;
      lEAIActVersionNo@1100281000 : Integer;
    BEGIN
      IF (pEAIActCode = '') THEN
        EXIT(0);

      IF NOT lEAIAct.GET(pEAIActType,pEAIActCode) THEN
        EXIT(0);

      lEAIActVersionNo := GetActVersion(lEAIAct."EAI Act Type Code",lEAIAct.Code,pRefDate,TRUE);

      IF lEAIActVersionNo = 0 THEN
        EXIT(lEAIAct."Posting Codeunit No.");

      lEAIActVersion.GET(lEAIAct."EAI Act Type Code",lEAIAct.Code,lEAIActVersionNo);

      EXIT(lEAIActVersion."Posting Codeunit No.");
    END;

    PROCEDURE AutoValidate@1100481001(pEAIActType@1100481002 : Code[20];pEAIActCode@1100481001 : Code[20]) : Boolean;
    VAR
      lEAIAct@1100481000 : Record 8016706;
    BEGIN
      IF (pEAIActCode = '') THEN
        EXIT(FALSE);

      IF NOT lEAIAct.GET(pEAIActType,pEAIActCode) THEN
        EXIT(FALSE)
      ELSE
        EXIT(lEAIAct."Auto. Posting")
    END;

    PROCEDURE GetEAIActCode@1100281000(pMessageCode@1100281000 : Code[20];pMessageVersion@1100281004 : Code[20];pMessageRelease@1100281008 : Code[20];pMessageSubtype@1100281001 : Code[20];pCorporateNo@1100281006 : Code[20];pCorporateRegionCode@1100281007 : Code[20];VAR pEAIPartnerCode@1100281002 : Code[20]) : Code[20];
    VAR
      lEAIAct@1100281003 : Record 8016706;
      lDARVASwitch@1100281005 : Record 50180;
    BEGIN
      //<< IMH02.ACO
      // IMH01.ISAT.MA
      {
      lEAIAct.SETRANGE("EAI Act Type Code",pEAIActTypeCode);
      IF pMessageTypeCode <> '' THEN
        lEAIAct.SETRANGE("Message Type Code",pMessageTypeCode);
      lEAIAct.SETRANGE("Document Type Code",pDocumentType);
      lEAIAct.SETRANGE("Document ID Code",pDocumentID);
      IF lEAIAct.ISEMPTY THEN
        EXIT('');
      lEAIAct.FINDFIRST;
      EXIT(lEAIAct.Code);
      }

      //<<IMH04.ACO
      pEAIPartnerCode := '';
      //>>IMH04.ACO

      lDARVASwitch.SETCURRENTKEY("Message Code", "Message Version", "Message Release", "Message Sub-type");
      lDARVASwitch.SETRANGE("Message Code", pMessageCode);
      lDARVASwitch.SETRANGE("Message Version", pMessageVersion);
      lDARVASwitch.SETRANGE("Message Release", pMessageRelease);
      lDARVASwitch.SETRANGE("Message Sub-type", pMessageSubtype);
      lDARVASwitch.SETRANGE("Corporate No.", pCorporateNo);
      lDARVASwitch.SETRANGE("Corporate Region Code", pCorporateRegionCode);
      lDARVASwitch.SETRANGE(Direction, lDARVASwitch.Direction::Receipt);
      lDARVASwitch.SETRANGE("Line Type", lDARVASwitch."Line Type"::Default);
      IF lDARVASwitch.ISEMPTY THEN BEGIN
        lDARVASwitch.SETRANGE("Corporate Region Code",'');
      END;
      IF lDARVASwitch.ISEMPTY THEN BEGIN
        EXIT('');
      END;
      lDARVASwitch.FINDFIRST;
      //<<IMH04.ACO
      pEAIPartnerCode := lDARVASwitch."Partner Code";
      //>>IMH04.ACO
      EXIT(lDARVASwitch."Act Code");

      //>> IMH02.ACO
    END;

    BEGIN
    {
      /** @r IMH04 @d 08/10/13 @a ISAT.ACO @v IMH6.01.350 @d SystŠme d'aiguillage
          @c R‚cup‚ration du EAI Partnet Code dans m‚thode GetEAIActCode */
      /** @r IMH03 @d 08/10/13 @a ISAT.ACO @v IMH6.01.350 @s SystŠme d'aiguillage @ 4785 @c GetEAIActCode doit retourner un code 20 */
      /** @r IMH02 @d 25/06/13 @a ISAT.ACO @v IMH6.01.350 @s SystŠme d'aiguillage @c modification r‚cup‚ration code acte */
      /** @r IMH01 @d 03/05/11 @a ISAT.MA  @v IMH6.01.135 @s Interface Web-Service @c Ajout fonction GetEAIActCode() */
      /** @r EAI02 @d 24/10/09 @a ISAT.JR  @v ISAEAI5.01.01.00 @s Moteur EAI @c Bug sur les versions */
      /** @r EAI01 @d 09/09/09 @a ISAT.JR  @v ISAEAI5.01.01.00 @s Ajout fonction "AutoValidate" */
      /** @r EAI00 @d 04/12/08 @a ISAT.MGI @v ISAEAI5.01.01.00 @s Cr‚ation de l'objet
          @c Codeunit de fonctions li‚es … la gestion des actes */
    }
    END.
  }
}