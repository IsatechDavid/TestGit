OBJECT Codeunit 8016704 EAI MQ Management
{
  OBJECT-PROPERTIES
  {
    Date=04/10/12;
    Time=16:03:30;
    Modified=Yes;
    Version List=ISAEAI1.00;
  }
  PROPERTIES
  {
    TableNo=8016704;
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE MQProcessAdd@1100481003(VAR pProcess@1100481000 : Record 8016702;pMQCode@1100481001 : Code[20]);
    BEGIN
      // Ajout de processus … une file de message

      IF pProcess.FINDSET(TRUE,TRUE) THEN BEGIN
        REPEAT
          pProcess.VALIDATE("EAI Message Queue Code",pMQCode);
          pProcess.MODIFY(TRUE);
        UNTIL pProcess.NEXT = 0;
      END;
    END;

    PROCEDURE MQProcessRetreive@1100481000(VAR pProcess@1100481001 : Record 8016702;pMQCode@1100481002 : Code[20]);
    VAR
      lText000@1100481000 : TextConst 'ENU=Do you confirm selected process retrieve of NAS %1;FRA=Confirmez-vous la reprise du processus s‚lectionn‚ du NAS %1 ?';
    BEGIN
      // Annulation de l'affectation de processus … une file de message

      IF NOT CONFIRM(STRSUBSTNO(lText000,pMQCode)) THEN
        EXIT;

      IF pProcess.FINDSET(TRUE,TRUE) THEN BEGIN
        REPEAT
          pProcess.VALIDATE("EAI Message Queue Code",'');
          pProcess.MODIFY(TRUE);
        UNTIL pProcess.NEXT = 0;
      END;
    END;

    PROCEDURE GetMQFromProcess@1100281000(pProcess@1100481000 : Record 8016702;VAR pMQ@1100481001 : Record 8016704);
    BEGIN
      // lit la file de message d'un processus
      pMQ.GET(pProcess."EAI Message Queue Code");
    END;

    PROCEDURE CheckExecuteTimeByPlanning@1100281001(pEAIMQCode@1100281000 : Code[20];pExecuteTime@1100281001 : DateTime) : Boolean;
    VAR
      lEAIMessageQueue@1100281002 : Record 8016704;
      lTime@1100281003 : Time;
      lDay@1100281004 : Integer;
    BEGIN

      IF lEAIMessageQueue.GET(pEAIMQCode) THEN BEGIN
        //<<IMH02
        IF NOT lEAIMessageQueue."Use Planification" THEN
          EXIT(TRUE);
        //>>IMH02
        lTime := DT2TIME(pExecuteTime);
        lDay := DATE2DWY(DT2DATE(pExecuteTime), 1);
        IF lTime IN [lEAIMessageQueue."EveryDay Execution Begin Time"..lEAIMessageQueue."EveryDay Execution End Time"] THEN
        BEGIN
          CASE lDay OF
            1 :
              EXIT(lEAIMessageQueue."Monday Execution");
            2 :
              EXIT(lEAIMessageQueue."Tuesday Execution");
            3 :
              EXIT(lEAIMessageQueue."Wednesday Execution");
            4 :
              EXIT(lEAIMessageQueue."Thursday Execution");
            5 :
              EXIT(lEAIMessageQueue."Friday Execution");
            6 :
              EXIT(lEAIMessageQueue."Saturday Execution");
            7 :
              EXIT(lEAIMessageQueue."Sunday Execution");
          END;
        END;
        EXIT(FALSE)
      END;
      EXIT(FALSE);
    END;

    BEGIN
    {
      /** @r IMH02 @d 04/10/12 @a ISAT.ML @v IMH6.01.213 @s Projet SMS
          @c Ajout champ Utiliser planification */
      /** @r IMH01 @d 28/09/12 @a ISAT.ML @v IMH6.01.213 @s Projet SMS
          @c Ajout Fonction CheckExecuteTimeByPlanning */
      /** @r EAI00 @d 12/11/08 @a ISAT.MGI @v ISAEAI5.01.00.00 @s Cr‚ation de l'objet
          @c Codeunit de fonctions li‚es … la gestion des files de message */
    }
    END.
  }
}