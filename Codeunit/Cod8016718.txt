OBJECT Codeunit 8016718 EAI Task Process 1 Handler
{
  OBJECT-PROPERTIES
  {
    Date=01/07/11;
    Time=12:26:58;
    Modified=Yes;
    Version List=ISAEAI1.00;
  }
  PROPERTIES
  {
    TableNo=8016702;
    SingleInstance=Yes;
    OnRun=VAR
            lText000@1100281000 : TextConst 'ENU=%1 - %2 : Task Process Handler started (%3);FRA=%1 - %2 : D‚marrage du handler de processus … tƒches (nø %3)';
          BEGIN
            Process := Rec;

            WITH Process DO BEGIN
              TESTFIELD(Type,Type::Task);
              TESTFIELD(Activated,TRUE);
              TESTFIELD("Task Handler Codeunit No.");

              IF "Timer Interval" = 0 THEN BEGIN
                "Timer Interval" := 60;
                MODIFY;
                COMMIT;
              END;

              RunTimer;

              MESSAGE(lText000,"EAI NAS Code",Code,CODEUNIT::"EAI Task Process 1 Handler");
            END;
          END;

  }
  CODE
  {
    VAR
      Process@1100481002 : Record 8016702;
      TaskTimer@1100481001 : Automation "{3B311C81-140E-11D5-8B18-00D0590B4EC5} 1.0:{3B311C92-140E-11D5-8B18-00D0590B4EC5}:'Navision Timer 1.0'.Timer" WITHEVENTS;
      IsRunning@1100481000 : Boolean;

    LOCAL PROCEDURE ExecuteProcessTask@1100481000();
    BEGIN
      WITH Process DO BEGIN
        IF NOT Process.GET(Process.Code) THEN
          EXIT;

        IF Type <> Type::Task THEN
          EXIT;

        IF NOT Activated THEN
          EXIT;

        COMMIT;
        CODEUNIT.RUN(CODEUNIT::"EAI Task Process Management",Process);
        COMMIT;
      END;
    END;

    LOCAL PROCEDURE RunTimer@1100281003();
    BEGIN
      IF ISCLEAR(TaskTimer) THEN
        CREATE(TaskTimer);

      TaskTimer.Interval(Process."Timer Interval" * 1000);
      TaskTimer.Enabled(TRUE);
    END;

    PROCEDURE StopNAS@1100481001();
    VAR
      lText000@1100481000 : TextConst 'ENU=Process Task %1 stopped.;FRA=Arrˆt du processus %1.';
    BEGIN
      // EAI01 isat.eb
      TaskTimer.Enabled(FALSE);
      MESSAGE(lText000,Process.Code);
    END;

    EVENT TaskTimer@1100481001::Timer@1(Milliseconds@1100481000 : Integer);
    BEGIN
      IF NOT IsRunning THEN BEGIN
        IsRunning := TRUE;
        SELECTLATESTVERSION;
        ExecuteProcessTask;
        IsRunning := FALSE;
      END;
    END;

    EVENT TaskTimer@1100481001::TimerError@2(ErrorString@1100481000 : Text[1024]);
    BEGIN
      IsRunning := FALSE;
      RunTimer;
    END;

    BEGIN
    {
      /** @r EAI01 @d 06/04/09 @a ISAT.EB @v ISAEAI5.01.00.00 @s Finalisation processus … tƒches */
      /** @r EAI00 @d 16/03/09 @a ISAT.EB @v ISAEAI5.01.00.00 @s Cr‚ation de l'objet
          @c Handler 1 pour les processus … tƒches */
    }
    END.
  }
}