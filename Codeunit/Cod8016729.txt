OBJECT Codeunit 8016729 EAI WS Send
{
  OBJECT-PROPERTIES
  {
    Date=06/01/11;
    Time=15:43:04;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnRun=VAR
            s@1100281000 : BigText;
          BEGIN
          END;

  }
  CODE
  {

    PROCEDURE GetXMLDoc@1100281000(pMessageType@1100281000 : Code[20];pMessageID@1100281001 : Code[20];VAR pXML@1100281002 : BigText) : Boolean;
    VAR
      lSentMQBuffer@1100281004 : TEMPORARY Record 8016720;
      lExchangeType@1100281003 : Record 8016717;
      lEAIProcessAct@1100281005 : Record 8016714;
      lEAIAct@1100281006 : Record 8016706;
      lEAIProcess@1100281008 : Record 8016702;
      lEAIMessageQueue@1100281009 : Record 8016704;
      lProcessFind@1100281007 : Boolean;
      lInstream@1100281010 : InStream;
      lFile@1100281011 : File;
      lXmlDoc@1100281012 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{F6D90F11-9C73-11D3-B32E-00C04F990BB4}:'Microsoft XML, v6.0'.DOMDocument";
    BEGIN
      //Cette fonction ira chercher les messages du type en attente d'‚mission

      lEAIAct.SETCURRENTKEY("Message Type Code","Document Type Code","Document ID Code");
      lEAIAct.SETRANGE("Message Type Code", pMessageType);

      IF lEAIAct.ISEMPTY THEN
        EXIT(FALSE);
      lEAIAct.FINDFIRST;

      LoadSendMQBuffer(lSentMQBuffer, lEAIAct, lEAIMessageQueue, pMessageID);
      IF lSentMQBuffer.ISEMPTY THEN
        EXIT(FALSE);
      lSentMQBuffer.FINDFIRST;
      lSentMQBuffer.CALCFIELDS("XML Source");
      IF lSentMQBuffer."XML Source".HASVALUE THEN BEGIN
        lSentMQBuffer."XML Source".CREATEINSTREAM(lInstream);
        pXML.READ(lInstream);
        CLEAR(lInstream);
      END;

      ValidateSendMQBuffer(lSentMQBuffer);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE LoadSendMQBuffer@1100281001(VAR pSentMQBuffer@1100281007 : Record 8016720;pEAIAct@1100281006 : Record 8016706;pEAIMessageQueue@1100281000 : Record 8016704;pMessageID@1100281008 : Code[20]);
    VAR
      lSentMq1@1100281005 : Record 8016722;
      lSentMq2@1100281004 : Record 8016723;
      lSentMq3@1100281003 : Record 8016724;
      lSentMq4@1100281002 : Record 8016725;
      lSentMq5@1100281001 : Record 8016726;
    BEGIN
      //File de messages emis 1
      lSentMq1.SETCURRENTKEY("EAI Act Type Code","EAI Act Code");
      lSentMq1.SETRANGE("EAI Act Type Code", pEAIAct."EAI Act Type Code");
      lSentMq1.SETRANGE("EAI Act Code", pEAIAct.Code);
      lSentMq1.SETRANGE(Step, lSentMq1.Step::Validation);
      lSentMq1.SETFILTER(Status, '<>%1&<>%2', lSentMq1.Status::Processing, lSentMq1.Status::Error);
      IF pMessageID <> '' THEN
        lSentMq1.SETRANGE("Message ID", pMessageID);

      IF lSentMq1.FINDFIRST THEN BEGIN
      //  REPEAT
        pSentMQBuffer.TRANSFERFIELDS(lSentMq1);
        lSentMq1.CALCFIELDS("XML Source");
        pSentMQBuffer."XML Source" := lSentMq1."XML Source";
        pSentMQBuffer.INSERT;
        EXIT;
      //  UNTIL lSentMq1.NEXT = 0;
      END;

      //File de messages emis 2
      lSentMq2.SETCURRENTKEY("EAI Act Type Code","EAI Act Code");
      lSentMq2.SETRANGE("EAI Act Type Code", pEAIAct."EAI Act Type Code");
      lSentMq2.SETRANGE("EAI Act Code", pEAIAct.Code);
      lSentMq2.SETRANGE(Step, lSentMq2.Step::Validation);
      lSentMq2.SETFILTER(Status, '<>%1&<>%2', lSentMq2.Status::Processing, lSentMq2.Status::Error);
      IF pMessageID <> '' THEN
        lSentMq2.SETRANGE("Message ID", pMessageID);

      IF lSentMq2.FINDFIRST THEN BEGIN
      //  REPEAT
          pSentMQBuffer.TRANSFERFIELDS(lSentMq2);
          lSentMq2.CALCFIELDS("XML Source");
          pSentMQBuffer."XML Source" := lSentMq2."XML Source";
          pSentMQBuffer.INSERT;
          EXIT;
      //  UNTIL lSentMq2.NEXT = 0;
      END;

      //File de messages emis 3
      lSentMq3.SETCURRENTKEY("EAI Act Type Code","EAI Act Code");
      lSentMq3.SETRANGE("EAI Act Type Code", pEAIAct."EAI Act Type Code");
      lSentMq3.SETRANGE("EAI Act Code", pEAIAct.Code);
      lSentMq3.SETRANGE(Step, lSentMq3.Step::Validation);
      lSentMq3.SETFILTER(Status, '<>%1&<>%2', lSentMq3.Status::Processing, lSentMq3.Status::Error);
      IF pMessageID <> '' THEN
        lSentMq3.SETRANGE("Message ID", pMessageID);

      IF lSentMq3.FINDFIRST THEN BEGIN
      //  REPEAT
          pSentMQBuffer.TRANSFERFIELDS(lSentMq3);
          lSentMq3.CALCFIELDS("XML Source");
          pSentMQBuffer."XML Source" := lSentMq3."XML Source";
          pSentMQBuffer.INSERT;
          EXIT;
      //  UNTIL lSentMq3.NEXT = 0;
      END;

      //File de messages emis 4
      lSentMq4.SETCURRENTKEY("EAI Act Type Code","EAI Act Code");
      lSentMq4.SETRANGE("EAI Act Type Code", pEAIAct."EAI Act Type Code");
      lSentMq4.SETRANGE("EAI Act Code", pEAIAct.Code);
      lSentMq4.SETRANGE(Step, lSentMq4.Step::Validation);
      lSentMq4.SETFILTER(Status, '<>%1&<>%2', lSentMq4.Status::Processing, lSentMq4.Status::Error);
      IF pMessageID <> '' THEN
        lSentMq4.SETRANGE("Message ID", pMessageID);

      IF lSentMq4.FINDFIRST THEN BEGIN
      //  REPEAT
          pSentMQBuffer.TRANSFERFIELDS(lSentMq4);
          lSentMq4.CALCFIELDS("XML Source");
          pSentMQBuffer."XML Source" := lSentMq4."XML Source";
          pSentMQBuffer.INSERT;
          EXIT;
      //  UNTIL lSentMq4.NEXT = 0;
      END;

      //File de messages emis 5
      lSentMq5.SETCURRENTKEY("EAI Act Type Code","EAI Act Code");
      lSentMq5.SETRANGE("EAI Act Type Code", pEAIAct."EAI Act Type Code");
      lSentMq5.SETRANGE("EAI Act Code", pEAIAct.Code);
      lSentMq5.SETRANGE(Step, lSentMq5.Step::Validation);
      lSentMq5.SETFILTER(Status, '<>%1&<>%2', lSentMq5.Status::Processing, lSentMq5.Status::Error);
      IF pMessageID <> '' THEN
        lSentMq5.SETRANGE("Message ID", pMessageID);

      IF lSentMq5.FINDFIRST THEN BEGIN
      //  REPEAT
          pSentMQBuffer.TRANSFERFIELDS(lSentMq5);
          lSentMq5.CALCFIELDS("XML Source");
          pSentMQBuffer."XML Source" := lSentMq5."XML Source";
          pSentMQBuffer.INSERT;
          EXIT;
      //  UNTIL lSentMq5.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE ValidateSendMQBuffer@1100281003(VAR pSentMQBuffer@1100281000 : Record 8016720);
    VAR
      lEAIRegisterMgt@1100281002 : Codeunit 8016711;
      lEAIMQBufferManagement@1100281001 : Codeunit 8016708;
    BEGIN
      //Suppression / Archivage des messages
      lEAIMQBufferManagement.LockCurrentSendMQ(pSentMQBuffer);

      lEAIMQBufferManagement.TransferSendMQBufferToHistoMQ(pSentMQBuffer);

      lEAIRegisterMgt.UpdateSentActRegister(pSentMQBuffer."EAI Act Type Code",pSentMQBuffer."EAI Act Code",WORKDATE)
    END;

    BEGIN
    {
      /** @r IHM01 @d 04/01/11 @a ISAT.ZW @v IMH6.01.131 @s Interface EAI @c Creation */
    }
    END.
  }
}