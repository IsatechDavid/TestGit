OBJECT Codeunit 8700 Mobile Document Dispatcher
{
  OBJECT-PROPERTIES
  {
    Date=04/07/11;
    Time=23:18:11;
    Modified=Yes;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    Permissions=TableData 8705=i;
    SingleInstance=Yes;
    OnRun=BEGIN
            Start('MOB PORT=8080');
          END;

  }
  CODE
  {
    VAR
      MobDocMgt@1000 : Codeunit 8701;
      Text001@1004 : TextConst 'ENU=Mobile Document Dispatcher is started.\Mobile Document Dispatcher is listening for connections at port %1.;FRA=Mobile Document Dispatcher a ‚t‚ d‚marr‚.\Il ‚coute les connexions sur le port %1.';
      Text002@1005 : TextConst 'ENU=Unable to start Mobile Document Dispatcher.;FRA=Impossible de d‚marrer Mobile Document Dispatcher.';
      Text003@1006 : TextConst 'ENU=%1 is required.;FRA=%1 est obligatoire.';
      Text004@1007 : TextConst 'ENU=%1 exceeds the maximum length.;FRA=%1 d‚passe la longueur maximale.';
      MobDocProcessor@1002 : Report 8700;
      Port@1003 : Integer;
      Running@1008 : Boolean;
      Text005@1009 : TextConst 'ENU=Mobile Document Dispatcher is stopped;FRA=Mobile Document Dispatcher est arrˆt‚';

    PROCEDURE Start@2(NASParameter@1000 : Text[1024]);
    BEGIN
      IF MobDocMgt.GetParamPart(NASParameter,'PORT') <> '' THEN
        EVALUATE(Port,MobDocMgt.GetParamPart(NASParameter,'PORT'));
    END;

    PROCEDURE Stop@5();
    BEGIN
      IF NOT Running THEN
        EXIT;


      MESSAGE(Text005);
    END;

    LOCAL PROCEDURE ProcessRequest@11(VAR XMLRequestDoc@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";MobileUserID@1015 : Text[1024];DeviceID@1014 : Text[1024];MessageID@1006 : Text[1024]);
    VAR
      MobDocType@1008 : Record 8704;
      MobDocQueue@1001 : Record 8705;
      XMLResponseDoc@1000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
    BEGIN
      IF NOT ISSERVICETIER THEN
        WITH MobDocQueue DO BEGIN

          ValidateRequest(XMLRequestDoc,MobileUserID,DeviceID,MessageID);

          INIT;
          "Message ID" := MessageID;
          "Device ID" := DeviceID;
          "Mobile User ID" := MobileUserID;
          "NAS User ID" := USERID;
          "NAS Host Name" := COPYSTR(ENVIRON('COMPUTERNAME'),1,MAXSTRLEN("NAS Host Name"));
          "NAS Port" := Port;

          SaveXMLRequestDoc(XMLRequestDoc);

          MobDocMgt.ValidateUser("Mobile User ID");

          MobDocMgt.ValidateXMLLAX(XMLRequestDoc);

          "Document Type" := MobDocMgt.GetDocumentType(XMLRequestDoc);

          MobDocMgt.ValidateDocumentType("Document Type");

          MobDocType.GET("Document Type");
          "Process Type" := MobDocType."Process Type";

          MobDocMgt.ValidateUserDocumentType("Mobile User ID","Document Type");

          IF NOT MobDocMgt.ReceivedBefore(MobDocQueue,XMLResponseDoc) THEN BEGIN

            CASE "Process Type" OF
              "Process Type"::Queue:
                BEGIN
                  Status := Status::New;
                  INSERT;
                  COMMIT;
                  MobDocProcessor.CreateXMLResponseDocReceived(XMLResponseDoc,MobDocQueue);
                  SaveXMLAnswerDoc(XMLResponseDoc);
                  MODIFY;
                END;
              "Process Type"::Direct:
                BEGIN
                  Status := Status::Processing;
                  INSERT;
                  COMMIT;
                  MobDocMgt.ProcessDocument(MobDocQueue);
                  LoadXMLResultDoc(XMLResponseDoc);
                  SaveXMLAnswerDoc(XMLResponseDoc);
                  MODIFY;
                END;
            END;
            COMMIT;
          END;
        END;
    END;

    LOCAL PROCEDURE ProcessError@3(VAR XMLErrorDoc@1012 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";MessageID@1000 : Text[1024]);
    VAR
      MobDocQueue@1002 : Record 8705;
    BEGIN
      IF NOT ISSERVICETIER THEN
        WITH MobDocQueue DO BEGIN
          IF STRLEN(MessageID) <= MAXSTRLEN("Message ID") THEN BEGIN
            IF GET(MessageID) THEN BEGIN
              SaveXMLResultDoc(XMLErrorDoc);
              SaveXMLAnswerDoc(XMLErrorDoc);
              Status := Status::Error;
              MODIFY;
            END;
          END;
        END;
    END;

    LOCAL PROCEDURE ValidateRequest@1(VAR XMLRequestDoc@1003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";MobileUserID@1005 : Text[1024];DeviceID@1004 : Text[1024];MessageID@1013 : Text[1024]);
    VAR
      MobDocQueue@1000 : Record 8705;
    BEGIN
      IF NOT ISSERVICETIER THEN
        WITH MobDocQueue DO BEGIN
          IF MobileUserID = '' THEN
            ERROR(Text003,FIELDCAPTION("Mobile User ID"));

          IF STRLEN(MobileUserID) > MAXSTRLEN("Mobile User ID") THEN
            ERROR(Text004,FIELDCAPTION("Mobile User ID"));

          IF DeviceID = '' THEN
            ERROR(Text003,FIELDCAPTION("Device ID"));

          IF STRLEN(DeviceID) > MAXSTRLEN("Device ID") THEN
            ERROR(Text004,FIELDCAPTION("Device ID"));

          IF MessageID = '' THEN
            ERROR(Text003,FIELDCAPTION("Message ID"));

          IF STRLEN(MessageID) > MAXSTRLEN("Message ID") THEN
            ERROR(Text004,FIELDCAPTION("Message ID"));

          IF ISCLEAR(XMLRequestDoc) THEN
            ERROR(Text003,FIELDCAPTION("Request XML"));
        END;
    END;

    LOCAL PROCEDURE ValidateUser@4(MobileUserID@1005 : Text[1024]);
    VAR
      MobDocQueue@1000 : Record 8705;
    BEGIN
      IF NOT ISSERVICETIER THEN
        WITH MobDocQueue DO BEGIN
          IF MobileUserID = '' THEN
            ERROR(Text003,FIELDCAPTION("Mobile User ID"));

          IF STRLEN(MobileUserID) > MAXSTRLEN("Mobile User ID") THEN
            ERROR(Text004,FIELDCAPTION("Mobile User ID"));

          MobDocMgt.ValidateUser(MobileUserID);
        END;
    END;

    BEGIN
    END.
  }
}