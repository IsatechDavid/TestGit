OBJECT Dataport 8016602 Bank Acc. Reconciliation
{
  OBJECT-PROPERTIES
  {
    Date=14/10/09;
    Time=12:00:00;
    Version List=ISA6.00;
  }
  PROPERTIES
  {
    Permissions=TableData 271=rm;
    CaptionML=[ENU=Bank Acc. Reconciliation;
               FRA=Rapprochement bancaire];
    Import=No;
    FileFormat=Fixed;
    FieldSeparator=|;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table271;
        DataItemTableView=SORTING(Bank Account No.,Posting Date);
        ReqFilterFields=Bank Account No.,Posting Date;
        OnPreDataItem=VAR
                        GLSetup@8016600 : Record 98;
                      BEGIN
                        VarTypeecriture := ' 1'; //1 est le 'code dossier LESTER dans Manager
                        Varlinenumber := '   ';

                        VarEmptystring := '                              ';
                        GLSetup.FIND('-');
                        Currency := GLSetup."LCY Code";
                      END;

        OnBeforeExportRecord=BEGIN
                               VarDates[1] := FormatDatetext("Posting Date");
                               VarDates[2] := FormatDatetext("Document Date");
                               VarDates[3] := FormatDatetext("Posting Date");
                               VarDates[4] := FormatDatetext("Posting Date");

                               IF Positive THEN
                                 VarSensEcriture := 'D'
                               ELSE
                                 VarSensEcriture := 'C';

                               AmountLCY := FormatDecText(FORMAT(ABS("Amount (LCY)"),15,'<Precision,2:2><Standard Format,1>'),15);

                               IF GrpComptaBq.GET("Bank Acc. Posting Group") THEN
                                 VarAccountNo := COPYSTR(GrpComptaBq."G/L Bank Account No.",1,8)
                               ELSE
                                 VarAccountNo := '';
                             END;

        OnPostDataItem=BEGIN
                         Finfichier[1] := 13;
                         Finfichier[2] := 10;
                         CurrFile.WRITE(Finfichier);
                       END;

      }
      FIELDS
      {
        { 1    ;2    ;VarTypeecriture      }
        { 4    ;3    ;"Source Code"        }
        { 8    ;8    ;VarDates[1]          }
        { 17   ;8    ;"Entry No."          }
        { 26   ;3    ;Varlinenumber        }
        { 30   ;8    ;VarAccountNo         }
        { 39   ;8    ;"Document No."       }
        { 48   ;8    ;VarDates[2]          }
        { 57   ;1    ;nature               }
        { 59   ;6    ;VarEmptystring       }
        { 66   ;25   ;Description          }
        { 92   ;8    ;"Bal. Account No."   }
        { 101  ;1    ;VarSensEcriture      }
        { 103  ;15   ;AmountLCY            }
        { 119  ;8    ;VarDates[3]          }
        { 128  ;8    ;VarDates[4]          }
        { 137  ;3    ;Currency             }
        { 141  ;1    ;VarEmptystring       }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      VarTypeecriture@8016600 : Text[2];
      VarDates@8016603 : ARRAY [4] OF Text[8];
      VarAccountNo@8016614 : Text[8];
      AmountLCY@8016611 : Text[15];
      GrpComptaBq@8016615 : Record 277;
      Finfichier@8016616 : Text[2];
      Varlinenumber@8016617 : Text[3];
      VarEmptystring@8016602 : Text[30];
      VarSensEcriture@8016601 : Text[1];
      Currency@8016604 : Text[3];
      nature@8016605 : Text[1];

    PROCEDURE FormatDecText@8016600(Text@8016600 : Text[30];len@8016602 : Integer) : Text[30];
    VAR
      i@8016601 : Integer;
      LocText@8016603 : Text[30];
    BEGIN
      LocText := DELCHR(Text,'=',' ');
      i := 1;
      REPEAT
        IF LocText[i] = ',' THEN
          LocText[i] := '.';

        i := i + 1;
      UNTIL i > STRLEN(LocText);

      IF STRLEN(LocText) < len THEN BEGIN
        REPEAT
          LocText := '0' + LocText;
        UNTIL STRLEN(LocText) >= len;
      END;
      EXIT(LocText);
    END;

    PROCEDURE FormatDatetext@8016601(VAR ParamDate@8016600 : Date) ReturnText : Text[30];
    VAR
      Day@8016601 : Text[2];
      Month@8016602 : Text[2];
      Year@8016603 : Text[4];
    BEGIN
      IF ParamDate = 0D THEN BEGIN
        Day := '  ';
        Month := '  ';
        Year := '    ';
      END ELSE BEGIN
        Day := FORMAT(DATE2DMY(ParamDate,1));
        Month := FORMAT(DATE2DMY(ParamDate,2));
        Year := FORMAT(DATE2DMY(ParamDate,3));
        IF STRLEN(Month) = 1 THEN
          Month := '0' + Month;

        IF STRLEN(Day) = 1 THEN
          Day := '0' + Day;
      END;

      ReturnText := Day + Month + Year;
    END;

    BEGIN
    {
      /** @r ISA01 @d 07/07/09 @a ISAT.MA @v ISA6.00.00.01 @s Migration v6 **/
    }
    END.
  }
}