OBJECT Form 25003 Check Kit Item Availability
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=KITNA5.00,NAVNA6.00.01;
  }
  PROPERTIES
  {
    Width=16060;
    Height=11220;
    Editable=No;
    CaptionML=[ENU=Check Kit Item Availability;
               FRA=V‚rifier la disponibilit‚ de l'article de kit];
    SourceTable=Table25002;
    OnOpenForm=BEGIN
                 CurrForm.No.ACTIVATE;
               END;

    OnFindRecord=BEGIN
                   KitComp := Rec;
                   IF NOT KitComp.FIND(Which) THEN
                     EXIT(FALSE);
                   Rec := KitComp;
                   EXIT(TRUE);
                 END;

    OnNextRecord=BEGIN
                   KitComp := Rec;
                   CurrentSteps := KitComp.NEXT(Steps);
                   IF CurrentSteps <> 0 THEN
                     Rec := KitComp;
                   EXIT(CurrentSteps);
                 END;

  }
  CONTROLS
  {
    { 1480005;CommandButton;13530;10450;2200;550;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 1480014;CommandButton;8800;10450;2200;550 ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=Yes }
    { 1480015;CommandButton;11220;10450;2200;550;Name=No;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=No }
    { 1   ;Frame        ;220  ;5610 ;15620;4620 ;HorzGlue=Both;
                                                 VertGlue=Both;
                                                 ShowCaption=No }
    { 1480008;TableBox  ;220  ;5610 ;15620;4620 ;HorzGlue=Both;
                                                 VertGlue=Both;
                                                 ParentControl=1;
                                                 InFrame=Yes }
    { 1480009;TextBox   ;26   ;10340;1700 ;440  ;ParentControl=1480008;
                                                 InColumn=Yes;
                                                 SourceExpr="Item No." }
    { 1480010;Label     ;0    ;0    ;0    ;0    ;ParentControl=1480009;
                                                 InColumnHeading=Yes }
    { 1480011;TextBox   ;1726 ;10340;4400 ;440  ;ParentControl=1480008;
                                                 InColumn=Yes;
                                                 SourceExpr=Description }
    { 1480012;Label     ;0    ;0    ;0    ;0    ;ParentControl=1480011;
                                                 InColumnHeading=Yes }
    { 1480007;TextBox   ;5689 ;6490 ;2200 ;440  ;ParentControl=1480008;
                                                 InColumn=Yes;
                                                 SourceExpr=Inventory }
    { 1480013;Label     ;0    ;0    ;0    ;0    ;ParentControl=1480007;
                                                 InColumnHeading=Yes }
    { 1480016;TextBox   ;7858 ;6490 ;2200 ;440  ;ParentControl=1480008;
                                                 InColumn=Yes;
                                                 SourceExpr="Gross Requirement" }
    { 1480017;Label     ;0    ;0    ;0    ;0    ;ParentControl=1480016;
                                                 InColumnHeading=Yes }
    { 1480024;TextBox   ;14288;6490 ;2200 ;440  ;ParentControl=1480008;
                                                 InColumn=Yes;
                                                 SourceExpr="Scheduled Receipt" }
    { 1480025;Label     ;0    ;0    ;0    ;0    ;ParentControl=1480024;
                                                 InColumnHeading=Yes }
    { 1480018;TextBox   ;9922 ;6600 ;2200 ;440  ;ParentControl=1480008;
                                                 InColumn=Yes;
                                                 SourceExpr="Current Quantity" }
    { 1480019;Label     ;0    ;0    ;0    ;0    ;ParentControl=1480018;
                                                 InColumnHeading=Yes }
    { 1480020;TextBox   ;12515;6490 ;2200 ;440  ;ParentControl=1480008;
                                                 InColumn=Yes;
                                                 SourceExpr="Total Quantity" }
    { 1480021;Label     ;0    ;0    ;0    ;0    ;ParentControl=1480020;
                                                 InColumnHeading=Yes }
    { 1480022;TextBox   ;13732;6490 ;1700 ;440  ;ParentControl=1480008;
                                                 InColumn=Yes;
                                                 SourceExpr="Earliest Available Date" }
    { 1480023;Label     ;0    ;0    ;0    ;0    ;ParentControl=1480022;
                                                 InColumnHeading=Yes }
    { 1480046;TextBox   ;14341;6490 ;2200 ;440  ;ParentControl=1480008;
                                                 InColumn=Yes;
                                                 SourceExpr="Quantity per" }
    { 1480047;Label     ;0    ;0    ;0    ;0    ;ParentControl=1480046;
                                                 InColumnHeading=Yes }
    { 1480048;TextBox   ;14949;6490 ;2200 ;440  ;ParentControl=1480008;
                                                 InColumn=Yes;
                                                 SourceExpr="Able to Make Qty." }
    { 1480049;Label     ;0    ;0    ;0    ;0    ;ParentControl=1480048;
                                                 InColumnHeading=Yes }
    { 1480027;Label     ;2090 ;220  ;7590 ;1100 ;MultiLine=Yes;
                                                 LeaderDots=No;
                                                 CaptionML=[ENU=The quantity on inventory is not sufficient to cover the net change in inventory. Do you still want to record the quantity?;
                                                            FRA=La quantit‚ disponible en stock n'est pas suffisante pour couvrir votre demande. Souhaitez-vous n‚anmoins enregistrer cette quantit‚ ?] }
    { 1480026;Image     ;550  ;220  ;1100 ;1100 ;ParentControl=1480027;
                                                 Bitmap=5 }
    { 2   ;Frame        ;220  ;1650 ;15620;3630 ;HorzGlue=Left;
                                                 VertGlue=Top;
                                                 ShowCaption=No }
    { 1480030;TextBox   ;4070 ;2420 ;5060 ;440  ;Editable=No;
                                                 ParentControl=2;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Description;
                                                            FRA=D‚signation];
                                                 SourceExpr=KitComp2.Description }
    { 1480031;Label     ;440  ;2420 ;3520 ;440  ;ParentControl=1480030 }
    { 1480029;TextBox   ;4070 ;1870 ;2750 ;440  ;Editable=No;
                                                 ParentControl=2;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=No.;
                                                            FRA=Nø];
                                                 SourceExpr=KitComp2."Item No." }
    { 1480028;Label     ;440  ;1870 ;3520 ;440  ;ParentControl=1480029 }
    { 1480032;TextBox   ;12870;1870 ;2750 ;440  ;Name=InventoryQty;
                                                 Editable=No;
                                                 ParentControl=2;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Inventory;
                                                            FRA=Stocks];
                                                 DecimalPlaces=0:5;
                                                 SourceExpr=KitComp2.Inventory;
                                                 AutoCalcField=No }
    { 1480033;Label     ;9460 ;1870 ;3300 ;440  ;Name=<Control11>;
                                                 ParentControl=1480032 }
    { 1480034;TextBox   ;12870;2420 ;2750 ;440  ;Name=GrossReq;
                                                 Editable=No;
                                                 ParentControl=2;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Gross Requirement;
                                                            FRA=Besoin brut];
                                                 DecimalPlaces=0:5;
                                                 SourceExpr=KitComp2."Gross Requirement";
                                                 AutoCalcField=No }
    { 1480035;Label     ;9460 ;2420 ;3300 ;440  ;ParentControl=1480034 }
    { 1480036;TextBox   ;12870;2970 ;2750 ;440  ;Editable=No;
                                                 ParentControl=2;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Scheduled Receipt;
                                                            FRA=R‚ception planifi‚e];
                                                 DecimalPlaces=0:5;
                                                 SourceExpr=KitComp2."Scheduled Receipt";
                                                 AutoCalcField=No }
    { 1480037;Label     ;9460 ;2970 ;3300 ;440  ;ParentControl=1480036 }
    { 1480038;TextBox   ;12870;3520 ;2750 ;440  ;Editable=No;
                                                 ParentControl=2;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Current Quantity;
                                                            FRA=Quantit‚ actuelle];
                                                 DecimalPlaces=0:5;
                                                 SourceExpr=-KitComp2."Current Quantity";
                                                 AutoCalcField=No }
    { 1480039;Label     ;9460 ;3520 ;3300 ;440  ;ParentControl=1480038 }
    { 1480040;TextBox   ;12870;4070 ;2750 ;440  ;Editable=No;
                                                 ParentControl=2;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Total Quantity;
                                                            FRA=Quantit‚ totale];
                                                 DecimalPlaces=0:5;
                                                 SourceExpr=KitComp2."Total Quantity";
                                                 AutoCalcField=No }
    { 1480041;Label     ;9460 ;4070 ;3300 ;440  ;ParentControl=1480040 }
    { 1480044;CheckBox  ;12870;4620 ;440  ;440  ;ParentControl=2;
                                                 InFrame=Yes;
                                                 ShowCaption=No;
                                                 CaptionML=[ENU=Substitutes Exist;
                                                            FRA=Article de substitution];
                                                 SourceExpr=Item."Substitutes Exist" }
    { 1480045;Label     ;9460 ;4620 ;3300 ;440  ;ParentControl=1480044 }
    { 1480001;Frame     ;440  ;3300 ;6600 ;1760 ;ParentControl=2;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Kitting;
                                                            FRA=Montage] }
    { 1480006;TextBox   ;4070 ;3740 ;2750 ;440  ;Editable=No;
                                                 ParentControl=1480001;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Total Quantity;
                                                            FRA=Quantit‚ totale];
                                                 DecimalPlaces=0:5;
                                                 SourceExpr=KitComp2."Able to Make Qty.";
                                                 AutoCalcField=No }
    { 1480002;Label     ;660  ;3740 ;3300 ;440  ;ParentControl=1480006;
                                                 CaptionML=[ENU=Qty. Available to Make;
                                                            FRA=Qt‚ disponible pour ‚tablissement] }
    { 1480004;TextBox   ;4070 ;4400 ;2750 ;440  ;Editable=No;
                                                 ParentControl=1480001;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Earliest Availability Date;
                                                            FRA=Date dispo. au plus t“t];
                                                 DecimalPlaces=0:5;
                                                 SourceExpr=KitComp2."Earliest Available Date";
                                                 AutoCalcField=No }
    { 1480003;Label     ;660  ;4400 ;3300 ;440  ;ParentControl=1480001;
                                                 InFrame=Yes;
                                                 CaptionML=[ENU=Earliest Availability Date;
                                                            FRA=Date dispo. au plus t“t] }
  }
  CODE
  {
    VAR
      Item@1480010 : Record 27;
      KitComp@1480000 : TEMPORARY Record 25002;
      KitComp2@1480011 : Record 25002;
      CheckItemAvail@1480024 : Form 342;
      KitManagement@1480025 : Codeunit 25000;
      CurrentSteps@1480009 : Integer;
      StockOut@1480023 : Boolean;

    PROCEDURE SalesLineShowWarning@1480008(SalesLine@1480000 : Record 37;VAR TempKitSalesLine@1480001 : TEMPORARY Record 25000) : Boolean;
    BEGIN
      StockOut := FALSE;
      KitComp.DELETEALL;
      CLEAR(CheckItemAvail);
      CheckItemAvail.SalesLineShowWarning(SalesLine);
      Item.GET(SalesLine."No.");
      Item.CALCFIELDS("Substitutes Exist");
      WITH KitComp2 DO BEGIN
        INIT;
        "Item No." := Item."No.";
        Description := Item.Description;
        CheckItemAvail.GetParam(
          Inventory,"Gross Requirement","Scheduled Receipt","Current Quantity",
          "Total Quantity","Earliest Available Date");
        "Total Quantity" := "Total Quantity" + "Current Quantity";
      END;

      TempKitSalesLine.RESET;
      IF TempKitSalesLine.ISEMPTY THEN
        KitManagement.GetKitSales(SalesLine,TempKitSalesLine);
      TempKitSalesLine.SETRANGE(Type,TempKitSalesLine.Type::Item);
      TempKitSalesLine.SETFILTER("No.",'<>%1','');
      TempKitSalesLine.SETFILTER("Extended Quantity",'<>0');
      IF TempKitSalesLine.FINDSET THEN
        REPEAT
          CLEAR(CheckItemAvail);
          StockOut := StockOut OR CheckItemAvail.KitSalesLineShowWarning(TempKitSalesLine);
          WITH KitComp DO BEGIN
            INIT;
            "Line No." := TempKitSalesLine."Line No.";
            "Item No." := TempKitSalesLine."No.";
            Description := TempKitSalesLine.Description;
            "Quantity per" := TempKitSalesLine."Quantity per";
            CheckItemAvail.GetParam(
              Inventory,"Gross Requirement","Scheduled Receipt","Current Quantity",
              "Total Quantity","Earliest Available Date");
            "Total Quantity" := "Total Quantity" + "Current Quantity";
            "Current Quantity" := -"Current Quantity";
            IF (("Total Quantity" + "Current Quantity") > 0) AND ("Quantity per" <> 0) THEN
              "Able to Make Qty." := ROUND(("Total Quantity" + "Current Quantity") / "Quantity per",1,'<')
            ELSE
              "Able to Make Qty." := 0;
            INSERT;
          END;
        UNTIL TempKitSalesLine.NEXT = 0;
      IF KitComp.FINDSET THEN BEGIN
        KitComp2."Able to Make Qty." := KitComp."Able to Make Qty.";
        KitComp2."Earliest Available Date" := KitComp."Earliest Available Date";
        REPEAT
          IF KitComp2."Able to Make Qty." > KitComp."Able to Make Qty." THEN
            KitComp2."Able to Make Qty." := KitComp."Able to Make Qty.";
          IF KitComp2."Earliest Available Date" < KitComp."Earliest Available Date" THEN
            KitComp2."Earliest Available Date" := KitComp."Earliest Available Date"
        UNTIL KitComp.NEXT = 0;
      END;
      EXIT(StockOut);
    END;

    BEGIN
    END.
  }
}