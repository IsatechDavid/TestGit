OBJECT Form 50047 Service Search Card
{
  OBJECT-PROPERTIES
  {
    Date=23/04/12;
    Time=11:14:43;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    Width=19250;
    Height=15290;
    CaptionML=[ENU=Service Search Card;
               FRA=Recherche de service];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table5900;
    SourceTableTemporary=Yes;
    OnOpenForm=BEGIN
                 CurrForm.ButtonCreate.ENABLED(FALSE);

                 "Document Type" := "Document Type"::Invoice;
                 "No." := '';
                 INSERT(FALSE);

                 IF ("Service No." <> '') OR ("No." <> '') OR ("Contact No." <> '') OR (ServiceHeaderNo <> '') THEN
                   SearchResults(FALSE);
                 EnableFields;
               END;

  }
  CONTROLS
  {
    { 1100281000;TabControl;220;220 ;18810;7480 ;HorzGlue=Both;
                                                 VertGlue=Top;
                                                 PageNamesML=FRA=G‚n‚ral }
    { 1100281001;TextBox;3850 ;990  ;2420 ;440  ;ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=Search Type;
                                                            FRA=Type de recherche];
                                                 OptionCaptionML=[ENU=Service,Service Header,Service Intervention Line;
                                                                  FRA=Service,Ligne produit,Intervention];
                                                 OptionString=Service,Service Header,Service Intervention Line;
                                                 SourceExpr=Type;
                                                 OnValidate=BEGIN
                                                              ResetFields;
                                                            END;

                                                 OnAfterValidate=BEGIN
                                                                   EnableFields;
                                                                 END;
                                                                  }
    { 1100281002;Label  ;440  ;990  ;3300 ;440  ;ParentControl=1100281001 }
    { 1100281037;CommandButton;6820;2090;440;440;Name=ContactSearch;
                                                 ParentControl=1100281000;
                                                 InPage=0;
                                                 ShowCaption=No;
                                                 Bitmap=44;
                                                 ToolTipML=[ENU=Contact Search;
                                                            FRA=Recherche contact];
                                                 OnPush=BEGIN
                                                          SearchContact;
                                                        END;
                                                         }
    { 1100281042;TextBox;3850 ;1540 ;5500 ;440  ;Enabled=Yes;
                                                 Editable=Yes;
                                                 ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=Contact Name;
                                                            FRA=Nom b‚n‚ficiaire];
                                                 SourceExpr="Contact Name";
                                                 OnValidate=BEGIN
                                                              SearchResults(FALSE);
                                                            END;
                                                             }
    { 1100281043;Label  ;440  ;1540 ;3300 ;440  ;ParentControl=1100281042 }
    { 1100281044;TextBox;3850 ;4840 ;2750 ;440  ;Name=ServiceHeaderNo;
                                                 ValidateTableRelation=No;
                                                 Enabled=Yes;
                                                 Editable=Yes;
                                                 ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=Service Header No.;
                                                            FRA=Nø ligne produit];
                                                 SourceExpr=ServiceHeaderNo;
                                                 TableRelation="Service Header".No. WHERE (Document Type=FILTER(Invoice));
                                                 OnValidate=BEGIN
                                                              MODIFY(FALSE);
                                                              SearchResults(FALSE);
                                                            END;
                                                             }
    { 1100281045;Label  ;440  ;4840 ;3300 ;440  ;ParentControl=1100281044 }
    { 1100281003;TextBox;3850 ;2090 ;2750 ;440  ;Enabled=Yes;
                                                 Editable=Yes;
                                                 ParentControl=1100281000;
                                                 InPage=0;
                                                 SourceExpr="Contact No.";
                                                 OnValidate=BEGIN
                                                              SearchResults(FALSE);
                                                            END;
                                                             }
    { 1100281007;Label  ;440  ;2090 ;3300 ;440  ;ParentControl=1100281003 }
    { 1100281017;TextBox;3850 ;4290 ;2750 ;440  ;Name=ServiceOrderType;
                                                 Editable=Yes;
                                                 Focusable=Yes;
                                                 ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=Service Order Type;
                                                            FRA=Type produit];
                                                 SourceExpr=ServiceOrderType;
                                                 TableRelation="Service Order Type";
                                                 OnValidate=BEGIN
                                                              SearchResults(FALSE);
                                                            END;
                                                             }
    { 1100281018;Label  ;440  ;4290 ;3300 ;440  ;ParentControl=1100281017 }
    { 1100281029;TextBox;3850 ;5390 ;1700 ;440  ;ValidateTableRelation=No;
                                                 Enabled=Yes;
                                                 Editable=Yes;
                                                 ParentControl=1100281000;
                                                 InPage=0;
                                                 BlankZero=Yes;
                                                 SourceExpr="Service No.";
                                                 OnValidate=BEGIN
                                                              SearchResults(FALSE);
                                                            END;
                                                             }
    { 1100281030;Label  ;440  ;5390 ;3300 ;440  ;ParentControl=1100281029 }
    { 1100281040;TextBox;3850 ;2640 ;2750 ;440  ;Enabled=Yes;
                                                 Editable=Yes;
                                                 ParentControl=1100281000;
                                                 InPage=0;
                                                 SourceExpr="Corporate No.";
                                                 OnValidate=BEGIN
                                                              SearchResults(FALSE);
                                                            END;
                                                             }
    { 1100281041;Label  ;440  ;2640 ;3300 ;440  ;ParentControl=1100281040 }
    { 1100281046;TextBox;3850 ;3190 ;2750 ;440  ;Enabled=Yes;
                                                 Editable=Yes;
                                                 ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=Corporate Region Code;
                                                            FRA=R‚gion grand compte];
                                                 SourceExpr="Corporate Region Code";
                                                 OnValidate=BEGIN
                                                              SearchResults(FALSE);
                                                            END;
                                                             }
    { 1100281047;Label  ;440  ;3190 ;3300 ;440  ;ParentControl=1100281046 }
    { 1100281015;TextBox;3850 ;5940 ;5500 ;440  ;Name=DateCreation;
                                                 ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=CreationDate;
                                                            FRA=Date cr‚ation];
                                                 SourceExpr=DateTimeFilter;
                                                 OnAfterValidate=BEGIN
                                                                   ApplicationMgt.MakeDateTimeFilter(DateTimeFilter);
                                                                 END;
                                                                  }
    { 1100281016;Label  ;440  ;5940 ;3300 ;440  ;ParentControl=1100281015 }
    { 1100281021;TextBox;3850 ;3740 ;1700 ;440  ;Name=MemberNo;
                                                 ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=Member No.;
                                                            FRA=Nø b‚n‚ficiaire];
                                                 SourceExpr=MemberNo;
                                                 OnValidate=BEGIN
                                                              SearchResults(FALSE);
                                                            END;
                                                             }
    { 1100281022;Label  ;440  ;3740 ;3300 ;440  ;ParentControl=1100281021 }
    { 1100281019;CommandButton;16830;14520;2200;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 1100281020;SubForm;220  ;7920 ;18810;6380 ;Name=ServiceList;
                                                 HorzGlue=Both;
                                                 VertGlue=Both;
                                                 Border=No;
                                                 SubFormID=Form50046 }
    { 1100281025;MenuButton;9570;14520;2200;550 ;Name=LineMenuButton;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=&Line;
                                                            FRA=&Ligne];
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=1100281005;
                                                     ShortCutKey=Maj+F5;
                                                     CaptionML=[ENU=Card;
                                                                FRA=Fiche];
                                                     OnPush=BEGIN
                                                              OpenCard;
                                                            END;
                                                             }
                                                   { ID=1100281010;
                                                     ShortCutKey=Ctrl+Alt+R;
                                                     CaptionML=[ENU=Sea&rch;
                                                                FRA=&Rechercher];
                                                     OnPush=BEGIN
                                                              SearchResults(TRUE);
                                                            END;
                                                             }
                                                 }
                                                  }
    { 1100281004;CommandButton;14410;14520;2200;550;
                                                 Name=ButtonCancel;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=Close;
                                                 CaptionML=[ENU=Can&cel;
                                                            FRA=A&nnuler] }
    { 1100281008;CommandButton;11990;14520;2200;550;
                                                 Name=ButtonOK;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=LookupOK;
                                                 CaptionML=[ENU=&OK;
                                                            FRA=&OK] }
    { 1100281006;CommandButton;4730;14520;2200;550;
                                                 Name=ButtonSearch;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=Sea&rch;
                                                            FRA=&Recherche];
                                                 OnPush=BEGIN
                                                          SearchResults(TRUE);
                                                        END;
                                                         }
    { 1100281011;CommandButton;220;14520;2200;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=Re&set;
                                                            FRA=Remi&se … vide];
                                                 OnPush=BEGIN
                                                          ResetFields;
                                                        END;
                                                         }
    { 1100281036;CommandButton;7150;14520;2200;550;
                                                 Name=ButtonCreate;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=&Create;
                                                            FRA=&Cr‚er];
                                                 OnPush=BEGIN
                                                          CreateService(TRUE);
                                                        END;
                                                         }
    { 1100281031;SubForm;220  ;7920 ;18810;6380 ;Name=ServiceHeaderList;
                                                 HorzGlue=Both;
                                                 VertGlue=Both;
                                                 Border=No;
                                                 SubFormID=Form50045 }
    { 1100281032;SubForm;220  ;7920 ;18810;6380 ;Name=ServiceInterventionList;
                                                 HorzGlue=Both;
                                                 VertGlue=Both;
                                                 Border=No;
                                                 SubFormID=Form50044 }
    { 1000000000;CommandButton;2530;14520;2090;550;
                                                 Name=ButtonSearch;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=Extract;
                                                            FRA=Extraire];
                                                 OnPush=BEGIN
                                                          Extract;//IMH05
                                                        END;
                                                         }
  }
  CODE
  {
    VAR
      TempServiceFilter@1100281000 : Record 50066;
      TempServiceHeaderFilter@1100281017 : Record 5900;
      TempServiceIntervFilter@1100281019 : Record 50075;
      ServiceSearchMgt@1100281020 : Codeunit 50060;
      ApplicationMgt@1100281003 : Codeunit 1;
      DialBox@1100281024 : Dialog;
      Type@1100281001 : 'Service,Service Header,Service Intervention Line';
      ServiceHeaderNo@1100281007 : Code[20];
      MemberNo@1100281009 : Code[20];
      ServiceOrderType@1100281008 : Code[10];
      ResultServiceHeader@1100281021 : Code[20];
      ResultServiceIntervLine@1100281022 : Integer;
      ResultService@1100281011 : Code[20];
      CloseFromCreate@1100281014 : Boolean;
      Search@1100281013 : Boolean;
      ContactFilterSet@1100281018 : Boolean;
      RunFromCodeunit@1100281006 : Boolean;
      ResultCount@1100281012 : Integer;
      Text001@1100281025 : TextConst 'ENU=Search in progress;FRA=Recherche en cours ...';
      DateTimeFilter@1100281004 : Text[1024];

    PROCEDURE SetServiceFilter@1100281005(VAR pService@1100281000 : Record 50066);
    BEGIN
      IF pService.GETFILTER("Service No.") <> '' THEN
        EVALUATE("Service No.",pService.GETFILTER("Service No."));
      "Contact No." := pService.GETFILTER("Contact No.");
      "Contact Name" := pService.GETFILTER("Contact Name");
      "Corporate No." := pService.GETFILTER("Corporate No.");
      "Corporate Region Code" := pService.GETFILTER("Corporate Region Code");
      "Contract Form Code" := pService.GETFILTER("Contract Form Code");
      DateTimeFilter := pService.GETFILTER("Creation Date");
      MemberNo := pService."Member No."; //IHM03
      Type := Type::Service;
    END;

    PROCEDURE SetServiceHeaderFilter@1100281011(VAR pServiceHeader@1100281000 : Record 5900);
    BEGIN
      IF pServiceHeader.GETFILTER("Service No.") <> '' THEN
        EVALUATE("Service No.",pServiceHeader.GETFILTER("Service No."));
      ServiceHeaderNo := pServiceHeader.GETFILTER("No.");
      "Contact No." := pServiceHeader.GETFILTER("Contact No.");
      "Contact Name" := pServiceHeader.GETFILTER("Contact Name");
      "Corporate No." := pServiceHeader.GETFILTER("Corporate No.");
      "Corporate Region Code" := pServiceHeader.GETFILTER("Corporate Region Code");
      "Contract Form Code" := pServiceHeader.GETFILTER("Contract Form Code");
      ServiceOrderType := pServiceHeader.GETFILTER("Service Order Type");
      DateTimeFilter := pServiceHeader.GETFILTER("Creation Date");

      Type := Type::"Service Header";
    END;

    PROCEDURE SetInterventionFilter@1100281013(VAR pServiceInterv@1100281000 : Record 50075);
    BEGIN
      IF pServiceInterv.GETFILTER("Service No.") <> '' THEN
        EVALUATE("Service No.",pServiceInterv.GETFILTER("Service No."));
      "Contact No." := pServiceInterv.GETFILTER("Contact No.");
      "Contact Name" := pServiceInterv.GETFILTER("Contact Name");
      ServiceHeaderNo := pServiceInterv.GETFILTER("Service Header No.");
      "Corporate No." := pServiceInterv.GETFILTER("Corporate No.");
      "Corporate Region Code" := pServiceInterv.GETFILTER("Corporate Region Code");
      "Contract Form Code" := pServiceInterv.GETFILTER("Contract Form Code");
      ServiceOrderType := pServiceInterv.GETFILTER("Service Order Type");
      "Provider No." := pServiceInterv.GETFILTER("Provider No.");
      DateTimeFilter := pServiceInterv.GETFILTER("Creation Date");

      Type := Type::"Service Intervention Line";
    END;

    LOCAL PROCEDURE SetFiltersToService@1100481000(VAR pService@1100481000 : Record 50066);
    BEGIN
      //Initialise la variable contact contenant les filtres
      pService.RESET;
      IF "Service No." <> '' THEN
        pService.SETFILTER("Service No.",FORMAT("Service No."));
      IF "Contact No." <> '' THEN
        pService.SETFILTER("Contact No.","Contact No.");
      IF "Contact Name" <> '' THEN
        pService.SETFILTER("Contact Name","Contact Name");
      IF "Corporate No." <> '' THEN
        pService.SETFILTER("Corporate No.","Corporate No.");
      IF "Corporate Region Code" <> '' THEN
        pService.SETFILTER("Corporate Region Code","Corporate Region Code");
      IF "Contract Form Code" <> '' THEN
        pService.SETFILTER("Contract Form Code","Contract Form Code");
      IF DateTimeFilter <> '' THEN
        pService.SETFILTER("Creation Date",DateTimeFilter);
      //<<IMH03
      IF MemberNo <> '' THEN
        pService.SETFILTER("Member No.",MemberNo);
      //>>IMH03
    END;

    LOCAL PROCEDURE SetFiltersToServiceHeader@1100281015(VAR pServiceHeader@1100481000 : Record 5900);
    BEGIN
      //Initialise la variable contact contenant les filtres
      pServiceHeader.RESET;
      IF "Service No." <> '' THEN
        pServiceHeader.SETFILTER("Service No.",FORMAT("Service No."));
      IF ServiceHeaderNo <> '' THEN
        pServiceHeader.SETFILTER("No.",FORMAT(ServiceHeaderNo));
      IF "Contact No." <> '' THEN
        pServiceHeader.SETFILTER("Contact No.","Contact No.");
      IF "Contact Name" <> '' THEN
        pServiceHeader.SETFILTER("Contact Name","Contact Name");
      IF "Corporate No." <> '' THEN
        pServiceHeader.SETFILTER("Corporate No.","Corporate No.");
      IF "Corporate Region Code" <> '' THEN
        pServiceHeader.SETFILTER("Corporate Region Code","Corporate Region Code");
      IF "Contract Form Code" <> '' THEN
        pServiceHeader.SETFILTER("Contract Form Code","Contract Form Code");
      IF ServiceOrderType <> '' THEN
        pServiceHeader.SETFILTER("Service Order Type",ServiceOrderType);
      IF DateTimeFilter <> '' THEN
        pServiceHeader.SETFILTER("Creation Date",DateTimeFilter);
    END;

    LOCAL PROCEDURE SetFiltersToIntervention@1100281016(VAR pServiceInterv@1100481000 : Record 50075);
    BEGIN
      //Initialise la variable contact contenant les filtres
      pServiceInterv.RESET;
      IF "Service No." <> '' THEN
        pServiceInterv.SETFILTER("Service No.",FORMAT("Service No."));
      IF "Contact No." <> '' THEN
        pServiceInterv.SETFILTER("Contact No.","Contact No.");
      IF "Contact Name" <> '' THEN
        pServiceInterv.SETFILTER("Contact Name","Contact Name");
      IF "Corporate No." <> '' THEN
        pServiceInterv.SETFILTER("Corporate No.","Corporate No.");
      IF "Corporate Region Code" <> '' THEN
        pServiceInterv.SETFILTER("Corporate Region Code","Corporate Region Code");
      IF "Contract Form Code" <> '' THEN
        pServiceInterv.SETFILTER("Contract Form Code","Contract Form Code");
      IF ServiceOrderType <> '' THEN
        pServiceInterv.SETFILTER("Service Order Type",ServiceOrderType);
      IF "Provider No." <> '' THEN
        pServiceInterv.SETFILTER("Provider No.","Provider No.");
      IF DateTimeFilter <> '' THEN
        pServiceInterv.SETFILTER("Creation Date",DateTimeFilter);
    END;

    PROCEDURE SearchResults@1100281002(pFromButton@1100481000 : Boolean);
    VAR
      lTempContact@1100281001 : TEMPORARY Record 5050;
      lContactSearchMgt@1100281002 : Codeunit 50097;
      lTempText@1100281000 : Text[1024];
    BEGIN
      CASE Type OF
        Type::Service:SearchService(pFromButton);
        Type::"Service Header":SearchServiceHeader(pFromButton);
        Type::"Service Intervention Line":SearchServiceIntervLine(pFromButton);
      END;
      DisplayResultForm;
      CurrForm.ButtonCreate.ENABLED(TRUE);
    END;

    PROCEDURE GetSearchType@1100281029() : Integer;
    BEGIN
      //IMH02 isat.zw
      EXIT(Type);
    END;

    PROCEDURE GetService@1100281004() : Code[20];
    BEGIN
      IF CloseFromCreate THEN
        EXIT(ResultService)
      ELSE
        EXIT(CurrForm.ServiceList.FORM.GetServiceNo);
    END;

    PROCEDURE GetServiceHeader@1100281000() : Code[20];
    BEGIN
      IF CloseFromCreate THEN
        EXIT(ResultServiceHeader)
      ELSE
        EXIT(CurrForm.ServiceHeaderList.FORM.GetServiceHeaderNo);
    END;

    PROCEDURE GetServiceInterv@1100281017(VAR pServiceHeaderNo@1100281000 : Code[20];VAR pServiceIntervLineNo@1100281001 : Integer);
    BEGIN
      CurrForm.ServiceInterventionList.FORM.GetInterventionNo(pServiceHeaderNo,pServiceIntervLineNo);
    END;

    LOCAL PROCEDURE ResetFields@1100281007();
    BEGIN
      //Remise … vide des champs
      "Service No." := '';
      ServiceHeaderNo := '';
      "Contact No." := '';
      "Contact Name" := '';
      "Corporate No." := '';
      "Corporate Region Code" := '';
      "Contract Form Code" := '';
      ServiceOrderType := '';
      "Provider No." := '';
      //<<IMH03
      MemberNo := '';
      //>>IMH03
      DateTimeFilter := '';
      MODIFY(FALSE);
      CurrForm.ServiceList.FORM.DeleteResults;
      CurrForm.ServiceHeaderList.FORM.DeleteResults;
      CurrForm.ServiceInterventionList.FORM.DeleteResults;
    END;

    LOCAL PROCEDURE EnableFields@1100281008();
    BEGIN
      CurrForm.ServiceOrderType.ENABLED(Type <> Type::Service);
      CurrForm.MemberNo.ENABLED(Type = Type::Service);
      CurrForm.ServiceHeaderNo.ENABLED(Type <> Type::Service);
    END;

    PROCEDURE ClosedFromCreate@1100281003(VAR pServiceNo@1100281000 : Code[20]) : Boolean;
    BEGIN
      IF NOT CloseFromCreate THEN
        EXIT(FALSE);
      pServiceNo := ResultService;
      EXIT(TRUE);
    END;

    PROCEDURE ClosedFromCreateServiceHeader@1100281018(VAR pServiceHeaderNo@1100281000 : Code[20]) : Boolean;
    BEGIN
      IF NOT CloseFromCreate THEN
        EXIT(FALSE);
      pServiceHeaderNo := ResultServiceHeader;
      EXIT(TRUE);
    END;

    PROCEDURE ClosedFromCreateServiceInterv@1100281019(VAR pServiceHeaderNo@1100281000 : Code[20];VAR pServiceIntervLineNo@1100281001 : Integer) : Boolean;
    BEGIN
      IF NOT CloseFromCreate THEN
        EXIT(FALSE);
      pServiceHeaderNo := ResultServiceHeader;
      pServiceIntervLineNo := ResultServiceIntervLine;
      EXIT(TRUE);
    END;

    PROCEDURE SearchContact@1100281009();
    VAR
      lContactSearchMgt@1100281000 : Codeunit 50097;
      lContactNo@1100281001 : Code[20];
    BEGIN
      lContactSearchMgt.SearchContact(3,lContactNo);
      VALIDATE("Contact No.",lContactNo);
      CurrForm.UPDATE;
    END;

    PROCEDURE SearchService@1100281001(pFromButton@1100281002 : Boolean);
    VAR
      lTempService@1100281000 : TEMPORARY Record 50066;
      lTempText@1100281001 : Text[1024];
    BEGIN
      CurrForm.ServiceList.FORM.DeleteResults;
      SetFiltersToService(TempServiceFilter);
      //V‚rifie si il y a assez de champs de renseign‚s
      IF NOT ServiceSearchMgt.CheckSearchServiceFields(TempServiceFilter,pFromButton) THEN
        EXIT;
      DialBox.OPEN(Text001);
      ServiceSearchMgt.CreateServiceList(TempServiceFilter,lTempService,lTempText,ResultCount);
      IF (ResultCount = 1) AND NOT RunFromCodeunit THEN BEGIN
        DialBox.CLOSE;
        FORM.RUNMODAL(FORM::"Service Card",lTempService);
        CurrForm.CLOSE;
      END ELSE BEGIN
        CurrForm.ServiceList.FORM.LoadResult(lTempService,lTempText);
        DialBox.CLOSE;
        // Rend actif le menu cr‚er service
        IF NOT CurrForm.ButtonCreate.ENABLED THEN
          CurrForm.ButtonCreate.ENABLED := TRUE;
      END
    END;

    PROCEDURE SearchServiceHeader@1100281006(pFromButton@1100281002 : Boolean);
    VAR
      lTempServiceHeader@1100281000 : TEMPORARY Record 5900;
      lTempText@1100281001 : Text[30];
    BEGIN
      CurrForm.ServiceHeaderList.FORM.DeleteResults;
      SetFiltersToServiceHeader(TempServiceHeaderFilter);
      //V‚rifie si il y a assez de champs de renseign‚s
      IF NOT ServiceSearchMgt.CheckSearchServiceHeaderFields(TempServiceHeaderFilter,pFromButton) THEN
        EXIT;
      DialBox.OPEN(Text001);
      ServiceSearchMgt.CreateServiceHeaderList(TempServiceHeaderFilter,lTempServiceHeader,lTempText,ResultCount);
      IF (ResultCount = 1) AND NOT RunFromCodeunit THEN BEGIN
        DialBox.CLOSE;
        lTempServiceHeader.ShowCard(TRUE);
        CurrForm.CLOSE;
      END ELSE BEGIN
        CurrForm.ServiceHeaderList.FORM.LoadResult(lTempServiceHeader,lTempText);
        DialBox.CLOSE;
      END;
    END;

    PROCEDURE SearchServiceIntervLine@1100281010(pFromButton@1100281002 : Boolean);
    VAR
      lTempServiceInterv@1100281001 : TEMPORARY Record 50075;
      lTempText@1100281000 : Text[30];
    BEGIN
      CurrForm.ServiceInterventionList.FORM.DeleteResults;
      SetFiltersToIntervention(TempServiceIntervFilter);
      //V‚rifie si il y a assez de champs de renseign‚s
      IF NOT ServiceSearchMgt.CheckSearchServiceIntervFields(TempServiceIntervFilter,pFromButton) THEN
        EXIT;
      DialBox.OPEN(Text001);
      ServiceSearchMgt.CreateServiceIntervList(TempServiceIntervFilter,lTempServiceInterv,lTempText,ResultCount);
      IF (ResultCount = 1) AND NOT RunFromCodeunit THEN BEGIN
        DialBox.CLOSE;
        FORM.RUNMODAL(FORM::"Intervention Line Card",lTempServiceInterv);
        CurrForm.CLOSE;
      END ELSE BEGIN
        CurrForm.ServiceInterventionList.FORM.LoadResult(lTempServiceInterv,lTempText);
        DialBox.CLOSE;
      END;
    END;

    PROCEDURE CreateService@1100281012(pOpenCard@1100281000 : Boolean);
    BEGIN
      //Lance la cr‚ation d'un contact … partir des donn‚es de recherche
      SetFiltersToService(TempServiceFilter);
      IF ServiceSearchMgt.CreateService(TempServiceFilter,pOpenCard) THEN BEGIN
        CloseFromCreate := TRUE;
        ResultService := TempServiceFilter."Service No.";
        CurrForm.CLOSE;
      END;
      ResultService := TempServiceFilter."Service No.";
    END;

    PROCEDURE DisplayResultForm@1100281014();
    BEGIN
      CurrForm.ServiceList.VISIBLE(Type = Type::Service);
      CurrForm.ServiceHeaderList.VISIBLE(Type = Type::"Service Header");
      CurrForm.ServiceInterventionList.VISIBLE(Type = Type::"Service Intervention Line");
    END;

    PROCEDURE OpenCard@1100281020();
    BEGIN
      CASE Type OF
        Type::Service:CurrForm.ServiceList.FORM.OpenServiceCard;
        Type::"Service Header":CurrForm.ServiceHeaderList.FORM.OpenServiceCard;
        Type::"Service Intervention Line":CurrForm.ServiceInterventionList.FORM.OpenServiceCard;
      END;
    END;

    LOCAL PROCEDURE GetProviderName@1100281028(pProviderNo@1100281001 : Code[20]) : Text[50];
    VAR
      lProvider@1100281000 : Record 50000;
    BEGIN
      IF lProvider.GET(pProviderNo) THEN
        EXIT(lProvider.Name);
    END;

    PROCEDURE SetRun@1100281025(pFromCodeunit@1100281000 : Boolean);
    BEGIN
      RunFromCodeunit := pFromCodeunit;
    END;

    PROCEDURE InitType@1100281022(pType@1100281000 : Integer);
    BEGIN
      Type := pType;
    END;

    PROCEDURE Extract@1000000003();
    VAR
      lExtractReport@1000000000 : Report 50157;
      lServIntervLine@1000000001 : Record 50075;
    BEGIN
      //IMH05
      IF "Service No." <> '' THEN
        lServIntervLine.SETFILTER("Service No.",FORMAT("Service No."));
      IF "Contact No." <> '' THEN
        lServIntervLine.SETFILTER("Contact No.","Contact No.");
      IF "Contact Name" <> '' THEN
        lServIntervLine.SETFILTER("Contact Name","Contact Name"+'*');
      IF "Corporate No." <> '' THEN
        lServIntervLine.SETFILTER("Corporate No.","Corporate No.");
      IF "Corporate Region Code" <> '' THEN
        lServIntervLine.SETFILTER("Corporate Region Code","Corporate Region Code");
      IF "Contract Form Code" <> '' THEN
        lServIntervLine.SETFILTER("Contract Form Code","Contract Form Code");
      IF ServiceOrderType <> '' THEN
        lServIntervLine.SETFILTER("Service Order Type",ServiceOrderType);
      IF "Provider No." <> '' THEN
        lServIntervLine.SETFILTER("Provider No.","Provider No.");
      IF DateTimeFilter <> '' THEN
        lServIntervLine.SETFILTER("Creation Date",DateTimeFilter);

      lExtractReport.SETTABLEVIEW(lServIntervLine);
      lExtractReport.USEREQUESTFORM := FALSE;
      lExtractReport.RUN;
    END;

    BEGIN
    {
      /** @r IMH05 @d 23/04/12 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Extraction @h 1739 */
      /** @r IMH04 @d 03/01/10 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Fonction filtre date de cr‚ation revue */
      /** @r IMH03 @d 27/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout Member No. */
      /** @r IMH02 @d 19/10/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Fonction GetType */
      /** @r IMH01 @d 08/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Cr‚ation */
    }
    END.
  }
}