OBJECT Form 50050 Contact Search Card
{
  OBJECT-PROPERTIES
  {
    Date=09/10/11;
    Time=01:57:31;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    Width=19250;
    Height=14520;
    CaptionML=[ENU=Contact Search Card;
               FRA=Recherche de contact];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table5050;
    SourceTableTemporary=Yes;
    OnOpenForm=BEGIN
                 "No." := '';
                 "Service Contact" := "Service Contact"::Beneficiary; //IMH05.ST
                 INSERT(FALSE);
                 IF NOT ContactFilterSet THEN
                   ServiceContact := ServiceContact::Beneficiary;
                 EnableFields;
                 FormSearchContact(FALSE);
               END;

    OnModifyRecord=BEGIN
                     MODIFY;
                     EXIT(FALSE);
                   END;

  }
  CONTROLS
  {
    { 1100281000;TabControl;220;220 ;18810;6490 ;HorzGlue=Both;
                                                 VertGlue=Top;
                                                 PageNamesML=[ENU=General;
                                                              FRA=G‚n‚ral] }
    { 1100281026;TextBox;3850 ;990  ;2860 ;440  ;ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=Contact Service;
                                                            FRA=Service de contact];
                                                 OptionCaptionML=[ENU=Corporate Customer,Provider,Adjuster,Beneficiary,All;
                                                                  FRA=Grand compte,Prestataire,Expert,B‚n‚ficiaire,Tous];
                                                 OptionString=Corporate Customer,Provider,Adjuster,Beneficiary,All;
                                                 SourceExpr=ServiceContact;
                                                 OnValidate=BEGIN
                                                              FormSearchContact(FALSE);
                                                              EnableFields;
                                                            END;
                                                             }
    { 1100281032;TextBox;13310;3850 ;5500 ;440  ;ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=Address;
                                                            FRA=Adresse];
                                                 SourceExpr=Address;
                                                 OnValidate=BEGIN
                                                              //FormSearchContact(FALSE);
                                                            END;
                                                             }
    { 1100281033;Label  ;9900 ;3850 ;3300 ;440  ;ParentControl=1100281032 }
    { 1100281034;TextBox;13310;4400 ;5500 ;440  ;ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=Address 2;
                                                            FRA=Adresse (2Šme ligne)];
                                                 SourceExpr="Address 2";
                                                 OnValidate=BEGIN
                                                              //FormSearchContact(FALSE);
                                                            END;
                                                             }
    { 1100281035;Label  ;9900 ;4400 ;3300 ;440  ;ParentControl=1100281034 }
    { 1100281040;TextBox;13310;2200 ;2640 ;440  ;ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=Country/Region Code;
                                                            FRA=Code pays/r‚gion];
                                                 SourceExpr="Country/Region Code";
                                                 TableRelation=Country/Region;
                                                 OnValidate=BEGIN
                                                              //FormSearchContact(FALSE);
                                                            END;
                                                             }
    { 1100281041;Label  ;9900 ;2200 ;3300 ;440  ;ParentControl=1100281040 }
    { 1100281042;TextBox;13310;990  ;2640 ;440  ;ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=Phone No.;
                                                            FRA=Nø t‚l‚phone];
                                                 SourceExpr="Phone No.";
                                                 OnValidate=BEGIN
                                                              //FormSearchContact(FALSE);
                                                            END;
                                                             }
    { 1100281043;Label  ;9900 ;990  ;3300 ;440  ;ParentControl=1100281042 }
    { 1100281044;TextBox;13310;1540 ;5500 ;440  ;ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=E-Mail;
                                                            FRA=E-mail];
                                                 SourceExpr="E-Mail";
                                                 OnValidate=BEGIN
                                                              //FormSearchContact(FALSE);
                                                            END;
                                                             }
    { 1100281045;Label  ;9900 ;1540 ;3300 ;440  ;ParentControl=1100281044 }
    { 1100281001;TextBox;3850 ;4510 ;5500 ;440  ;ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=First Name;
                                                            FRA=Pr‚nom];
                                                 SourceExpr="First Name";
                                                 OnValidate=BEGIN
                                                              //FormSearchContact(FALSE);
                                                            END;
                                                             }
    { 1100281002;Label  ;440  ;4510 ;3300 ;440  ;ParentControl=1100281001 }
    { 1100281003;TextBox;3850 ;3960 ;5500 ;440  ;ParentControl=1100281000;
                                                 InPage=0;
                                                 SourceExpr=Surname;
                                                 OnValidate=BEGIN
                                                              //FormSearchContact(FALSE);
                                                            END;
                                                             }
    { 1100281007;Label  ;440  ;3960 ;3300 ;440  ;ParentControl=1100281003 }
    { 1100281012;TextBox;3850 ;2090 ;2860 ;440  ;Name=CorporateTextBox;
                                                 ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=Corporate No.;
                                                            FRA=Nø grand compte];
                                                 SourceExpr="Corporate No." }
    { 1100281013;Label  ;440  ;2090 ;3300 ;440  ;ParentControl=1100281012 }
    { 1100281014;TextBox;3850 ;2640 ;2860 ;440  ;Name=CorporateRegionTextBox;
                                                 ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=Corporate Region Code;
                                                            FRA=R‚gion grand compte];
                                                 SourceExpr="Corporate Region Code";
                                                 TableRelation="Corporate Region"."Region Code" }
    { 1100281015;Label  ;440  ;2640 ;3300 ;440  ;ParentControl=1100281014 }
    { 1100481000;TextBox;440  ;990  ;3300 ;440  ;Editable=No;
                                                 Focusable=No;
                                                 ParentControl=1100281000;
                                                 InPage=0;
                                                 Border=No;
                                                 LeaderDots=Yes;
                                                 SourceExpr=TempContactFilter.FIELDCAPTION("Service Contact") }
    { 1100281016;TextBox;3850 ;3190 ;2860 ;440  ;ParentControl=1100281000;
                                                 InPage=0;
                                                 SourceExpr="Member No." }
    { 1100281017;Label  ;440  ;3190 ;3300 ;440  ;ParentControl=1100281016 }
    { 1100281018;TextBox;3850 ;5060 ;2750 ;440  ;Name=RegistrationNoCtrl;
                                                 ParentControl=1100281000;
                                                 InPage=0;
                                                 SourceExpr="Registration No." }
    { 1100281021;Label  ;440  ;5060 ;3300 ;440  ;ParentControl=1100281018 }
    { 1100281022;TextBox;13310;4950 ;5500 ;440  ;Name=VATRegistrationNoCtrl;
                                                 ParentControl=1100281000;
                                                 InPage=0;
                                                 SourceExpr="VAT Registration No." }
    { 1100281023;Label  ;9900 ;4950 ;3300 ;440  ;ParentControl=1100281022 }
    { 1100281024;TextBox;3850 ;1540 ;1700 ;440  ;ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=FRA=Recherche grand-compte;
                                                 SourceExpr=CorporateName;
                                                 OnValidate=BEGIN
                                                              ServFormMgt.Corporate_Validate(CorporateName, "Corporate No.");
                                                            END;

                                                 OnLookup=BEGIN
                                                            EXIT(ServFormMgt.Corporate_Lookup(CorporateName, "Corporate No."));
                                                          END;
                                                           }
    { 1100281027;Label  ;440  ;1540 ;3300 ;440  ;ParentControl=1100281024 }
    { 1100281030;TextBox;13310;5500 ;2750 ;440  ;ParentControl=1100281000;
                                                 InPage=0;
                                                 SourceExpr="No." }
    { 1100281031;Label  ;9900 ;5500 ;3300 ;440  ;ParentControl=1100281030 }
    { 1100281046;TextBox;13310;2750 ;2640 ;440  ;Name=contactpostcode;
                                                 ParentControl=1100281000;
                                                 InPage=0;
                                                 SourceExpr=ContactPostCode;
                                                 OnValidate=VAR
                                                              test@1100281000 : TextConst 'FRA=*';
                                                            BEGIN
                                                              //IMH04
                                                              PostCode.ValidatePostCode3(City,ContactPostCode, "Country/Region Code");  //IMH24 Ajout Code pays
                                                              "Geo. Reference Code" := PostCode.GetReferenceGeoCode("Post Code",City);  //IMH11 isat.zw
                                                              "Post Code" := ContactPostCode;
                                                            END;

                                                 OnLookup=VAR
                                                            lPostCodeRec@1100281000 : Record 225;
                                                          BEGIN
                                                            //IMH04
                                                            IF FORM.RUNMODAL(FORM::"Post Codes",lPostCodeRec) = ACTION::LookupOK THEN BEGIN
                                                              ContactPostCode := lPostCodeRec.Code;
                                                              "Post Code" := ContactPostCode;
                                                              ContactCity := lPostCodeRec.City;
                                                               City := lPostCodeRec.City;
                                                            END;
                                                          END;
                                                           }
    { 1100281047;Label  ;9900 ;2750 ;3300 ;440  ;ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=Post Code;
                                                            FRA=Code postal] }
    { 1100281036;TextBox;13310;3300 ;5500 ;440  ;Name=ContactCityField;
                                                 ParentControl=1100281000;
                                                 InPage=0;
                                                 CaptionML=[ENU=City;
                                                            FRA=Ville];
                                                 SourceExpr=ContactCity;
                                                 OnValidate=BEGIN
                                                              //IMH04
                                                              PostCode.ValidateCity3(ContactCity,ContactPostCode, "Country/Region Code");
                                                              "Post Code" := ContactPostCode;
                                                              City := ContactCity;
                                                              "Geo. Reference Code" := PostCode.GetReferenceGeoCode("Post Code",City);

                                                              FormSearchContact(FALSE);
                                                            END;

                                                 OnLookup=VAR
                                                            lPostCodeRec@1100281000 : Record 225;
                                                          BEGIN
                                                            //IMH04
                                                            IF "Post Code" <> '' THEN
                                                              lPostCodeRec.SETFILTER(Code,'%1',"Post Code");
                                                            IF FORM.RUNMODAL(FORM::"Post Codes",lPostCodeRec) = ACTION::LookupOK THEN BEGIN
                                                              ContactPostCode := lPostCodeRec.Code;
                                                              ContactCity := lPostCodeRec.City;
                                                              "Post Code" := ContactPostCode;
                                                              City := ContactCity;
                                                            END;
                                                          END;
                                                           }
    { 1100281037;Label  ;9900 ;3300 ;3300 ;440  ;ParentControl=1100281036 }
    { 1100281038;CheckBox;13310;6050;440  ;440  ;ParentControl=1100281000;
                                                 InPage=0;
                                                 ShowCaption=No;
                                                 CaptionML=FRA=Inclure Radi‚;
                                                 SourceExpr=IncludeRayed }
    { 1100281039;Label  ;9900 ;6050 ;3300 ;440  ;ParentControl=1100281038 }
    { 1100281019;CommandButton;16830;13640;2200;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 1100281020;SubForm;220  ;7040 ;18810;6380 ;Name=ContactList;
                                                 HorzGlue=Both;
                                                 VertGlue=Both;
                                                 Border=No;
                                                 SubFormID=Form50051 }
    { 1100281025;MenuButton;7150;13640;2200;550 ;Name=ContactMenuButton;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=Con&tact;
                                                            FRA=Con&tact];
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=1100281005;
                                                     ShortCutKey=Maj+F5;
                                                     CaptionML=[ENU=Card;
                                                                FRA=Fiche];
                                                     OnPush=BEGIN
                                                              CurrForm.ContactList.FORM.OpenContactCard;
                                                            END;
                                                             }
                                                   { ID=1100281010;
                                                     ShortCutKey=Ctrl+Alt+R;
                                                     CaptionML=[ENU=Sea&rch;
                                                                FRA=&Rechercher];
                                                     OnPush=BEGIN
                                                              //SearchContact(TRUE);
                                                            END;
                                                             }
                                                 }
                                                  }
    { 1100281004;CommandButton;14410;13640;2200;550;
                                                 Name=ButtonCancel;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=Close;
                                                 CaptionML=[ENU=Can&cel;
                                                            FRA=A&nnuler] }
    { 1100281008;CommandButton;11990;13640;2200;550;
                                                 Name=ButtonOK;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=LookupOK;
                                                 CaptionML=[ENU=&OK;
                                                            FRA=&OK] }
    { 1100281009;CommandButton;9570;13640;2200;550;
                                                 Name=ButtonCreate;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Enabled=No;
                                                 CaptionML=[ENU=&Create contact;
                                                            FRA=&Cr‚er contact];
                                                 OnPush=BEGIN
                                                          CreateContact(TRUE);
                                                        END;
                                                         }
    { 1100281006;CommandButton;4730;13640;2200;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=Sea&rch;
                                                            FRA=&Recherche];
                                                 OnPush=BEGIN
                                                          FormSearchContact(TRUE);
                                                        END;
                                                         }
    { 1100281011;CommandButton;2310;13640;2200;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=Re&set;
                                                            FRA=Remi&se … vide];
                                                 OnPush=BEGIN
                                                          //IMH01
                                                          ResetFields;
                                                        END;
                                                         }
  }
  CODE
  {
    VAR
      PostCode@1100281002 : Record 225;
      TempContactFilter@1100281000 : Record 5050;
      ServiceContact@1100281001 : 'Corporate Customer,Provider,Adjuster,Beneficiary,All';
      ResultContact@1100281011 : Code[20];
      CloseFromCreate@1100281014 : Boolean;
      Search@1100281013 : Boolean;
      ContactFilterSet@1100281018 : Boolean;
      ServFormMgt@1100281003 : Codeunit 50086;
      CorporateName@1100281004 : Text[80];
      ContactPostCode@1100281005 : Code[10];
      ContactCity@1100281006 : Text[50];
      IncludeRayed@1100281007 : Boolean;

    PROCEDURE SetContactFilter@1100281005(VAR pContact@1100281000 : Record 5050);
    BEGIN
      //IMH02.ST fonction revue, record en paramŠtre
      IF pContact.GETFILTER("Service Contact") <> '' THEN
        ServiceContact := pContact.GETRANGEMIN("Service Contact")
      ELSE
        ServiceContact := ServiceContact::All;

      "Corporate No." := pContact.GETFILTER("Corporate No.");
      "Corporate Region Code" := pContact.GETFILTER("Corporate Region Code");
      IF pContact.GETFILTER(Name) = '' THEN
        Name := pContact.GETFILTER("Search Name")
      ELSE
        Name := pContact.GETFILTER(Name);
      Surname := pContact.GETFILTER(Surname);
      "First Name" := pContact.GETFILTER("First Name");
      Address := pContact.GETFILTER(Address);
      "Address 2" := pContact.GETFILTER("Address 2");
      "Post Code" := pContact.GETFILTER("Post Code");
      City := pContact.GETFILTER(City);
      "Country/Region Code" := pContact.GETFILTER("Country/Region Code");
      "Phone No." := pContact.GETFILTER("Phone No.");
      "E-Mail" := pContact.GETFILTER("E-Mail");
      "Member No." := pContact.GETFILTER("Member No."); //IMH02.ST
      //<<IMH03.isat.PC
      "Registration No." := pContact.GETFILTER("Registration No.");
      "VAT Registration No." := pContact.GETFILTER("VAT Registration No.");
      //>>IMH03.isat.PC
      ContactFilterSet := TRUE;
    END;

    LOCAL PROCEDURE SetFiltersToContact@1100481000(VAR pContact@1100481000 : Record 5050);
    BEGIN
      //Initialise la variable contact contenant les filtres
      pContact.RESET;
      IF ServiceContact <> ServiceContact::All THEN
        pContact.SETRANGE("Service Contact", ServiceContact);
      IF "Corporate No." <> '' THEN
        pContact.SETFILTER("Corporate No.","Corporate No.");
      IF "Corporate Region Code" <> '' THEN
        pContact.SETFILTER("Corporate Region Code","Corporate Region Code");
      IF Name <> '' THEN
        pContact.SETFILTER(Name,Name);
      IF Surname <> '' THEN
        pContact.SETFILTER(Surname,Surname);
      IF "First Name" <> '' THEN
        pContact.SETFILTER("First Name","First Name");
      IF Address <> '' THEN
        pContact.SETFILTER(Address,Address);
      IF "Address 2" <> '' THEN
        pContact.SETFILTER("Address 2","Address 2");
      IF "Post Code" <> '' THEN
        pContact.SETFILTER("Post Code","Post Code");
      IF City <> '' THEN
        pContact.SETFILTER(City,City);
      IF "Country/Region Code" <> '' THEN
        pContact.SETFILTER("Country/Region Code","Country/Region Code");
      IF "E-Mail" <> '' THEN
        pContact.SETFILTER("E-Mail","E-Mail");
      IF "Phone No." <> '' THEN
        pContact.SETFILTER("Phone No.","Phone No.");
      IF "Member No." <> '' THEN
        pContact.SETFILTER("Member No.","Member No."); //IMH02.ST
      //<<IMH03.isat.PC
      IF "Registration No." <> '' THEN
        pContact.SETFILTER("Registration No.","Registration No.");
      IF "VAT Registration No." <> '' THEN
        pContact.SETFILTER("VAT Registration No.","VAT Registration No.");
      //>>IMH03.isat.PC
      IF NOT IncludeRayed THEN
        pContact.SETRANGE(Rayed, FALSE);
    END;

    PROCEDURE CreateContact@1100281000(pOpenCard@1100281002 : Boolean);
    VAR
      lContactSearchMgt@1100281000 : Codeunit 50097;
      lContact@1100281001 : Record 5050;
    BEGIN
      //Lance la cr‚ation d'un contact … partir des donn‚es de recherche
      SetFiltersToContact(TempContactFilter);
      lContactSearchMgt.CreateContact(TempContactFilter, pOpenCard);
      CloseFromCreate := TRUE;
      ResultContact := TempContactFilter."No.";
      CurrForm.CLOSE;
    END;

    PROCEDURE GetContact@1100281004() : Code[20];
    BEGIN
      IF CloseFromCreate THEN
        EXIT(ResultContact)
      ELSE
        EXIT(CurrForm.ContactList.FORM.GetContactNo);
    END;

    LOCAL PROCEDURE ResetFields@1100281007();
    BEGIN
      //IMH01
      //Remise … vide des champs
      Name := '';
      Surname := '';
      "First Name" := '';
      "Phone No." := '';
      "E-Mail" := '';
      "Country/Region Code":= '';
      "Post Code" := '';
      City := '';
      Address := '';
      "Address 2" := '';
      "Corporate No." := '';
      "Corporate Region Code" := '';
      "Member No." := ''; //IMH02.ST
      //<<IMH03.isat.PC
      "Registration No." := '';
      "VAT Registration No." := '';
      //>>IMH03.isat.PC

      MODIFY(FALSE);
      CurrForm.UPDATE(FALSE);
      CurrForm.ContactList.FORM.DeleteResults;
    END;

    LOCAL PROCEDURE EnableFields@1100281008();
    BEGIN
      //<<IMH03.isat.PC
      //CurrForm.CorporateTextBox.EDITABLE(ServiceContact IN [ServiceContact::Beneficiary,ServiceContact::All]);
      //CurrForm.CorporateRegionTextBox.EDITABLE(ServiceContact IN [ServiceContact::Beneficiary,ServiceContact::All]);
      //IF NOT (ServiceContact IN [ServiceContact::Beneficiary,ServiceContact::All]) THEN BEGIN
      //  "Corporate No.":= '';
      //  "Corporate Region Code" := '';
      //  "Member No." := ''; //IMH02.ST
      //END;
      CurrForm.CorporateTextBox.EDITABLE(FALSE);
      CurrForm.CorporateRegionTextBox.EDITABLE(FALSE);
      CurrForm.RegistrationNoCtrl.EDITABLE(FALSE);
      CurrForm.VATRegistrationNoCtrl.EDITABLE(FALSE);
      CASE ServiceContact OF
        ServiceContact::Beneficiary,ServiceContact::All : BEGIN
          CurrForm.CorporateTextBox.EDITABLE(TRUE);
          CurrForm.CorporateRegionTextBox.EDITABLE(TRUE);
          "Corporate No.":= '';
          "Corporate Region Code" := '';
          "Member No." := ''; //IMH02.ST
        END;
        ServiceContact::Provider : BEGIN
          CurrForm.RegistrationNoCtrl.EDITABLE(TRUE);
          CurrForm.VATRegistrationNoCtrl.EDITABLE(TRUE);
        END;
        ELSE BEGIN
          "Registration No." := '';
          "VAT Registration No." := '';
        END;
      END;
      //>>IMH03.isat.PC
    END;

    PROCEDURE ClosedFromCreate@1100281003(VAR pContactNo@1100281000 : Code[20]) : Boolean;
    BEGIN
      IF NOT CloseFromCreate THEN
        EXIT(FALSE);
      pContactNo := ResultContact;
      EXIT(TRUE);
    END;

    PROCEDURE FormSearchContact@1100281001(pFromButton@1100281000 : Boolean);
    VAR
      lTempContact@1100281003 : TEMPORARY Record 5050;
      lContactSearchMgt@1100281002 : Codeunit 50097;
      lTempText@1100281001 : Text[1024];
    BEGIN
      //IMH01
      IF NOT pFromButton THEN
        EXIT;
      CurrForm.ContactList.FORM.DeleteResults;
      SetFiltersToContact(TempContactFilter);
      IF NOT lContactSearchMgt.CheckSearchFields(TempContactFilter,pFromButton) THEN
        EXIT;
      lContactSearchMgt.CreateContactList(TempContactFilter,lTempContact,lTempText);
      CurrForm.ContactList.FORM.LoadResult(lTempContact,lTempText);
      // Rend actif le menu cr‚er contact
      IF NOT CurrForm.ButtonCreate.ENABLED THEN
        CurrForm.ButtonCreate.ENABLED := TRUE;
    END;

    BEGIN
    {
      /** @r IMH04 @d 30/08/10 @a ISAT.LLT @v IMH6.01.002 @s Gestion des contact @c Possibilit‚ de filtrer sur plusieurs codes postaux */
      /** @r IMH03 @d 07/02/11 @a ISAT.PC @v IMH6.01.020 @s Gestion prestataire
          @c Ajout Regsitration No. et VAT Registration No
          @c renommage option ServiceContact supplier en provider */
      /** @r IMH02 @d 26/10/10 @a ISAT.ST @v IMH6.01.002 @s Gestion des contact
          @c Modification SetContactFilter
          @c Ajout Member No. */
      /** @r IMH01 @d 27/09/10 @a ISAT.LLT @v IMH6.01.002 @s Gestion des contact @c recherche de contact */
    }
    END.
  }
}