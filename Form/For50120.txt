OBJECT Form 50120 Provider Basket Search Card
{
  OBJECT-PROPERTIES
  {
    Date=31/10/13;
    Time=09:22:48;
    Modified=Yes;
    Version List=IMH6.01.08;
  }
  PROPERTIES
  {
    Width=18590;
    Height=18150;
    CaptionML=[ENU=Provider Basket Search Card;
               FRA=Panier de recherche prestataire];
    SourceTableTemporary=Yes;
    OnOpenForm=VAR
                 lProviderSearchBasket@1100281000 : Record 51002;
                 lBasketBuffer@1100281001 : TEMPORARY Record 51002;
               BEGIN
                 lBasketBuffer.DELETEALL();
                 SearchType := SearchType::DPR;
               END;

    OnAfterGetRecord=BEGIN
                       //<<IMH02.isat.PC
                       SubformFilters;
                       //>>IMH02.isat.PC
                     END;

  }
  CONTROLS
  {
    { 1100281009;SubForm;330  ;6270 ;10230;5060 ;Name=SpeProviderSearchSubpage;
                                                 HorzGlue=Both;
                                                 Border=No;
                                                 SubFormID=Form50121 }
    { 1100281010;CommandButton;6600;17380;2200;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Default=Yes;
                                                 PushAction=LookupOK;
                                                 InvalidActionAppearance=Hide }
    { 1100281011;CommandButton;9020;17380;2200;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Cancel=Yes;
                                                 PushAction=LookupCancel;
                                                 InvalidActionAppearance=Hide }
    { 1100281012;CommandButton;11440;17380;2200;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=Search;
                                                            FRA=Recherche];
                                                 OnPush=BEGIN
                                                          Search();
                                                        END;
                                                         }
    { 1100281014;CommandButton;16280;17380;2200;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 1100281058;SubForm;10780;12100;7700 ;5060 ;Name=SubServceSearchLedgEnt;
                                                 HorzGlue=Right;
                                                 VertGlue=Both;
                                                 Editable=No;
                                                 Border=No;
                                                 SubFormID=Form50136;
                                                 SubFormLink= }
    { 1100281017;SubForm;10780;6270 ;7700 ;5060 ;Name=SubfromQualif;
                                                 HorzGlue=Right;
                                                 Border=No;
                                                 SubFormID=Form50122 }
    { 1100281044;Label  ;330  ;5720 ;3300 ;440  ;FontBold=Yes;
                                                 LeaderDots=No;
                                                 CaptionML=[ENU=Specialization;
                                                            FRA=Sp‚cialit‚] }
    { 1100281045;TabControl;220;220 ;18150;5280 ;HorzGlue=Both;
                                                 PageNamesML=[ENU=Search;
                                                              FRA=Recherche] }
    { 1100281043;OptionButton;440;2090;3300;440 ;ParentControl=1100281045;
                                                 InPage=0;
                                                 CaptionML=[ENU="";
                                                            FRA=Vol d'oiseau];
                                                 SourceExpr=RealKm;
                                                 OptionValue=No }
    { 1100281059;OptionButton;440;2640;3300;440 ;ParentControl=1100281045;
                                                 InPage=0;
                                                 CaptionML=[ENU=Real Km;
                                                            FRA=Km r‚el];
                                                 SourceExpr=RealKm;
                                                 OptionValue=Yes }
    { 1100281060;Label  ;440  ;990  ;3300 ;440  ;ParentControl=1100281045;
                                                 InPage=0;
                                                 FontBold=Yes;
                                                 LeaderDots=No;
                                                 CaptionML=[ENU=Setup;
                                                            FRA=ParamŠtres] }
    { 1100281001;TextBox;9460 ;2090 ;2530 ;440  ;ParentControl=1100281045;
                                                 InPage=0;
                                                 CaptionML=FRA=B‚n‚ficiaire;
                                                 SourceExpr=ContactNo;
                                                 OnLookup=BEGIN
                                                            LookupContact();
                                                          END;
                                                           }
    { 1100281002;Label  ;6050 ;2090 ;3300 ;440  ;ParentControl=1100281001 }
    { 1100281003;TextBox;9460 ;2640 ;1700 ;440  ;ParentControl=1100281045;
                                                 InPage=0;
                                                 CaptionML=[ENU=Address;
                                                            FRA=Adresse];
                                                 SourceExpr=AddressCode;
                                                 TableRelation="Contact Alt. Address"."Contact No." WHERE (Contact No.=FILTER(CONTACTNO));
                                                 OnLookup=BEGIN
                                                            LookupAddressCode();
                                                          END;
                                                           }
    { 1100281004;Label  ;6050 ;2640 ;3300 ;440  ;ParentControl=1100281003 }
    { 1100281052;TextBox;9460 ;1540 ;2530 ;440  ;ParentControl=1100281045;
                                                 InPage=0;
                                                 CaptionML=[ENU=Service Header No.;
                                                            FRA=Nø ligne produit];
                                                 SourceExpr=ServiceHeaderNo;
                                                 TableRelation="Service Header".No. WHERE (Document Type=CONST(Invoice));
                                                 OnValidate=BEGIN
                                                              ProductNoValidate();
                                                              //<<IMH02.isat.PC
                                                              SubformFilters;
                                                              //>>IMH02.isat.PC
                                                            END;
                                                             }
    { 1100281057;Label  ;6050 ;1540 ;3300 ;440  ;ParentControl=1100281052 }
    { 1100281053;CheckBox;3850;3740 ;440  ;440  ;ParentControl=1100281045;
                                                 InPage=0;
                                                 ShowCaption=No;
                                                 CaptionML=[ENU=All Specializations;
                                                            FRA=Tous les sp‚cialit‚s];
                                                 SourceExpr=AllSpecialization }
    { 1100281056;Label  ;440  ;3740 ;3300 ;440  ;ParentControl=1100281053 }
    { 1100281007;TextBox;9460 ;3190 ;1700 ;440  ;ParentControl=1100281045;
                                                 InPage=0;
                                                 CaptionML=[ENU=Corporate No.;
                                                            FRA=Nø grand compte];
                                                 SourceExpr=CorporateNo;
                                                 OnLookup=BEGIN
                                                            LookupCorporateNo();
                                                          END;
                                                           }
    { 1100281008;Label  ;6050 ;3190 ;3300 ;440  ;ParentControl=1100281007 }
    { 1100281040;TextBox;3850 ;1540 ;1700 ;440  ;ParentControl=1100281045;
                                                 InPage=0;
                                                 CaptionML=[ENU=Search Type;
                                                            FRA=Type de recherche];
                                                 SourceExpr=SearchType }
    { 1100281041;Label  ;440  ;1540 ;3300 ;440  ;ParentControl=1100281040 }
    { 1100281016;TextBox;15950;2090 ;1700 ;440  ;ParentControl=1100281045;
                                                 InPage=0;
                                                 CaptionML=[ENU=Territory Code;
                                                            FRA=Zone IMH];
                                                 SourceExpr=TerritoryCode;
                                                 TableRelation=Territory }
    { 1100281019;TextBox;15950;2640 ;1700 ;440  ;ParentControl=1100281045;
                                                 InPage=0;
                                                 CaptionML=[ENU=Area;
                                                            FRA=D‚partements];
                                                 SourceExpr=AreaCode;
                                                 TableRelation=Area }
    { 1100281018;Label  ;6050 ;990  ;3300 ;440  ;ParentControl=1100281045;
                                                 InPage=0;
                                                 FontBold=Yes;
                                                 LeaderDots=No;
                                                 CaptionML=[ENU=Product;
                                                            FRA=Produit] }
    { 1100281020;Label  ;12540;990  ;3300 ;440  ;ParentControl=1100281045;
                                                 InPage=0;
                                                 FontBold=Yes;
                                                 LeaderDots=No;
                                                 CaptionML=[ENU=Geographic;
                                                            FRA=G‚ographique] }
    { 1100281021;Label  ;12540;2090 ;3300 ;440  ;ParentControl=1100281016;
                                                 InPage=0 }
    { 1100281022;Label  ;12540;2640 ;3300 ;440  ;ParentControl=1100281019;
                                                 InPage=0 }
    { 1100281024;TextBox;3850 ;4290 ;1700 ;440  ;ParentControl=1100281045;
                                                 InPage=0;
                                                 CaptionML=[ENU=Invisible Open Space;
                                                            FRA=Invisible plateau];
                                                 SourceExpr=InvisibleOpenSpace }
    { 1100281025;Label  ;440  ;4290 ;3300 ;440  ;ParentControl=1100281024 }
    { 1100281026;TextBox;3850 ;4840 ;1700 ;440  ;ParentControl=1100281045;
                                                 InPage=0;
                                                 CaptionML=[ENU=Corporate Cust. Exclusion;
                                                            FRA=Exclusion grand compte];
                                                 SourceExpr=CorporateExclusion }
    { 1100281027;Label  ;440  ;4840 ;3300 ;440  ;ParentControl=1100281026 }
    { 1100281028;TextBox;3850 ;3190 ;1700 ;440  ;ParentControl=1100281045;
                                                 InPage=0;
                                                 CaptionML=[ENU=Urgent;
                                                            FRA=Urgent];
                                                 SourceExpr=Urgent }
    { 1100281029;Label  ;440  ;3190 ;3300 ;440  ;ParentControl=1100281028 }
    { 1100281005;TextBox;15950;3190 ;1700 ;440  ;ParentControl=1100281045;
                                                 InPage=0;
                                                 CaptionML=[ENU=Area;
                                                            FRA=D‚partements];
                                                 SourceExpr=PostCode;
                                                 TableRelation="Post Code" }
    { 1100281006;Label  ;12540;3190 ;3300 ;440  ;ParentControl=1100281005;
                                                 CaptionML=FRA=Code postal }
    { 1100281013;TextBox;15950;1540 ;2310 ;440  ;ParentControl=1100281045;
                                                 InPage=0;
                                                 CaptionML=[ENU=Territory Code;
                                                            FRA=Ville];
                                                 SourceExpr=sCity;
                                                 TableRelation="Post Code".City;
                                                 OnValidate=BEGIN
                                                              "Post Code".ValidateCity2(
                                                                sCity,
                                                                PostCode,
                                                                AreaCode,
                                                                TerritoryCode,
                                                                IMHTerritoryCode,
                                                                RegionalCoordinator,
                                                                NetworkFacilitator,
                                                                NetworkAssistant,Country); //IMH18 Ajout Code pays
                                                            END;
                                                             }
    { 1100281023;Label  ;12540;1540 ;3300 ;440  ;ParentControl=1100281013 }
    { 1100281061;Label  ;10780;5720 ;3300 ;440  ;HorzGlue=Right;
                                                 FontBold=Yes;
                                                 LeaderDots=No;
                                                 CaptionML=[ENU=Qualification;
                                                            FRA=Qualification] }
    { 1100281062;Label  ;330  ;11550;3300 ;440  ;FontBold=Yes;
                                                 LeaderDots=No;
                                                 CaptionML=[ENU=Provider Found;
                                                            FRA=Prestataire trouv‚] }
    { 1100281063;Label  ;10780;11550;3300 ;440  ;HorzGlue=Right;
                                                 FontBold=Yes;
                                                 LeaderDots=No;
                                                 CaptionML=[ENU=Search history;
                                                            FRA=Historique recherche] }
    { 1100281000;SubForm;220  ;12100;10340;5060 ;Name=ResultProviderSearchSubpage;
                                                 HorzGlue=Both;
                                                 VertGlue=Both;
                                                 Border=No;
                                                 SubFormID=Form50150 }
    { 1100281015;CommandButton;13860;17380;2200;550;
                                                 HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 CaptionML=[ENU=Deprivation;
                                                            FRA=Carence];
                                                 OnPush=BEGIN
                                                          CallDeprivation();
                                                        END;
                                                         }
  }
  CODE
  {
    VAR
      TrayLineMgt@1100281011 : Codeunit 50050;
      ServiceHeader@1100281012 : Record 5900;
      Urgent@1100281001 : ' ,Oui,Non';
      SearchType@1100281004 : 'Standard,Avanc‚e,Elargie,Entreprise,Sequenc‚e,DPR';
      "Post Code"@1100281017 : Record 225;
      CoordinatorMgt@1100281068 : Codeunit 50016;
      TrayLineEntryNo@1100281067 : Integer;
      InvisibleOpenSpace@1100281064 : ' ,Oui,Non';
      CorporateExclusion@1100281063 : ' ,Oui,Non';
      ProviderStatus@1100281062 : 'Prospect,Occasionnel,Int‚gration,P‚riode essai,Labellis‚,Op‚rationnel';
      AllSpecialization@1100281061 : Boolean;
      DPR@1100281060 : Boolean;
      RealKm@1100281059 : Boolean;
      Debug@1100281058 : Boolean;
      ProStatProspect@1100281057 : Boolean;
      ProStatCasual@1100281056 : Boolean;
      ProStatIntegration@1100281055 : Boolean;
      ProStatTrialPeriod@1100281054 : Boolean;
      ProStatApproval@1100281053 : Boolean;
      ProStatOperational@1100281052 : Boolean;
      ISAllSpeEnabled@1100281051 : Boolean INDATASET;
      DPRSearchEnable@1100281050 : Boolean INDATASET;
      IsOk@1100281049 : Boolean;
      ShowProductInformation@1100281048 : Boolean INDATASET;
      ContactNo@1100281047 : Code[20];
      AddressCode@1100281046 : Code[10];
      TerritoryCode@1100281045 : Code[20];
      IMHTerritoryCode@1100281044 : Code[20];
      AreaCode@1100281043 : Code[20];
      Country@1100281042 : Code[10];
      NetworkAssistant@1100281041 : Code[20];
      NetworkFacilitator@1100281040 : Code[20];
      RegionalCoordinator@1100281039 : Code[20];
      ProviderNo@1100281038 : Code[20];
      PostCode@1100281037 : Code[20];
      ServiceHeaderNo@1100281036 : Code[20];
      TeamCode@1100281035 : Code[10];
      CorporateNo@1100281034 : Code[20];
      ServAddress@1100281033 : Text[60];
      ServCPCity@1100281032 : Text[1024];
      CorporateName@1100281031 : Text[50];
      sCity@1100281030 : Text[30];
      SearchDate@1100281029 : Date;
      SearchTime@1100281028 : Time;

    PROCEDURE LookupAddressCode@1100281000();
    VAR
      lContactAltAddress@1100281000 : Record 5051;
    BEGIN
      lContactAltAddress.RESET();
      lContactAltAddress.SETRANGE("Contact No.",ContactNo);
      IF FORM.RUNMODAL(0,lContactAltAddress) = ACTION::LookupOK THEN
        AddressCode :=lContactAltAddress.Code;
    END;

    PROCEDURE LookupContact@1100281006();
    VAR
      lContact@1100281001 : Record 5050;
      lContactAltAddress@1100281000 : Record 5051;
    BEGIN
      lContact.RESET();
      lContact.SETRANGE("Service Contact",lContact."Service Contact"::Beneficiary);
      IF FORM.RUNMODAL(0,lContact) = ACTION::LookupOK THEN BEGIN
        ContactNo := lContact."No.";
        lContactAltAddress.RESET();
        lContactAltAddress.SETRANGE("Contact No.",ContactNo);
        IF lContactAltAddress.FINDFIRST() THEN
          AddressCode :=lContactAltAddress.Code;

      END;
    END;

    PROCEDURE LookupCorporateNo@1100281002();
    VAR
      lContact@1100281000 : Record 5050;
    BEGIN
      lContact.RESET();
      lContact.SETRANGE("Service Contact",lContact."Service Contact"::"Corporate Customer");
      IF FORM.RUNMODAL(0,lContact) = ACTION::LookupOK THEN
        CorporateNo :=lContact."No.";
    END;

    PROCEDURE Search1@1100281004();
    VAR
      lContactAltAddress@1100281001 : Record 5051;
      lBuffer@1100281002 : TEMPORARY Record 51000;
      lProviderSearchBasket@1100281003 : TEMPORARY Record 51002;
      lQualificationBuffer@1100281004 : TEMPORARY Record 50079;
      lPSRB@1100281005 : TEMPORARY Record 51000;
      lPostCode@1100281008 : Record 225;
      lProviderSearchMgt@1100281000 : Codeunit 50000;
      lGeoFilterType@1100281007 : ' ,Territory Code,Area Code,Post Code';
      lGeoFilter@1100281006 : Text[1024];
      lDelete@1100281009 : Boolean;
    BEGIN
      WITH lPSRB DO BEGIN
        IF PostCode <> '' THEN BEGIN
          lGeoFilterType := lGeoFilterType::"Post Code";
          lGeoFilter := PostCode;
        END ELSE BEGIN
          IF AreaCode <> '' THEN BEGIN
            lGeoFilterType := lGeoFilterType::"Area Code";
            lGeoFilter := AreaCode;
          END ELSE BEGIN
            IF TerritoryCode <> '' THEN BEGIN
              lGeoFilterType := lGeoFilterType::"Territory Code";
              lGeoFilter := TerritoryCode;
            END ELSE BEGIN
              lGeoFilterType := lGeoFilterType::" ";
              lGeoFilter := '';
            END;
          END;
        END;
        lPSRB.DELETEALL;
        lProviderSearchBasket.DELETEALL;
      //  Currform.ResultProviderSearchSubform.FORM.DelRecords;
        IF lContactAltAddress.GET(ContactNo,AddressCode) THEN;
        IF (ServiceHeaderNo = '') AND
           ((SearchType = SearchType::Standard) OR (SearchType = SearchType::Avanc‚e))
        THEN BEGIN
          IF (PostCode = '') OR (sCity = '') THEN BEGIN
            //ERROR(Text0003);
          END;
          IF lPostCode.GET(PostCode,sCity) THEN BEGIN
            lGeoFilterType := lGeoFilterType::"Post Code";
            lGeoFilter := lPostCode."Geo. Reference Code";
          END
        END;

        CurrForm.SpeProviderSearchSubpage.FORM.GETRECORDS(lProviderSearchBasket);
        lProviderSearchBasket.SETRANGE(lProviderSearchBasket."Provider No.",'');
        CurrForm.SubfromQualif.FORM.GETRECORDS(lQualificationBuffer);
        //<<IMH12.isat.PC
        lProviderSearchMgt.SetParametersToFilter(lGeoFilterType,PostCode,sCity,AreaCode,TerritoryCode);
        //>>IMH12.isat.PC
        //lProviderSearchMgt.SetSearchDate(SearchDate);
        lProviderSearchMgt.SequencedSearch(
          lProviderSearchBasket,lBuffer,lQualificationBuffer,
          lContactAltAddress,Urgent,
          CorporateNo,SearchType,
          AllSpecialization,CorporateExclusion,InvisibleOpenSpace,RealKm,lGeoFilterType,lGeoFilter,ServiceHeaderNo);

        IF lBuffer.FINDSET() THEN

          REPEAT
            lDelete := FALSE;
            lPSRB := lBuffer;
            // FILTRE SUR LES STATUS
            IF (lBuffer.Status = lBuffer.Status::Prospect) AND (NOT ProStatProspect) THEN BEGIN
            END ELSE IF (lBuffer.Status = lBuffer.Status::Casual) AND (NOT ProStatCasual) THEN BEGIN
            END ELSE IF (lBuffer.Status = lBuffer.Status::Integration) AND (NOT ProStatIntegration) THEN BEGIN
            END ELSE IF (lBuffer.Status = lBuffer.Status::"Trial Period") AND (NOT ProStatTrialPeriod) THEN BEGIN
            END ELSE IF (lBuffer.Status = lBuffer.Status::Approval) AND (NOT ProStatApproval) THEN BEGIN
            END ELSE IF (lBuffer.Status = lBuffer.Status::Operational) AND (NOT ProStatOperational) THEN BEGIN
            END ELSE BEGIN
              IF NOT lDelete THEN BEGIN
                {
                //<<IMH10
                //IF (TeamCode <> '') AND (TrayLineEntryNo <> 0) THEN BEGIN
                  lServiceSearchLedgerEntry.SETCURRENTKEY("Team Code","Tray Line Entry No.","Provider No.");
                  lServiceSearchLedgerEntry.SETRANGE("Team Code", TeamCode);
                  lServiceSearchLedgerEntry.SETRANGE("Tray Line Entry No.", TrayLineEntryNo);
                  lServiceSearchLedgerEntry.SETRANGE("Provider No.", lBuffer."Provider No.");
                  IF lServiceSearchLedgerEntry.FINDFIRST THEN BEGIN
                    lPSRB.Refused := TRUE;
                    lPSRB."Non-Accept. Reason Code" := lServiceSearchLedgerEntry."Non-acceptance Reason Code";
                  END;
                //END;
                }
                INSERT();
              END;
            END;

          UNTIL lBuffer.NEXT() = 0;

      //  CurrForm.ResultProviderSearchSubpager.FORM.LoadTable(lPSRB);
      END;
    END;

    PROCEDURE Old_Search@1100281001();
    VAR
      lProviderSearchMgt@1100281000 : Codeunit 50000;
      lContactAltAddress@1100281001 : Record 5051;
      lBuffer@1100281002 : TEMPORARY Record 51000;
      lProviderSearchBasket@1100281003 : TEMPORARY Record 51002;
      lQualificationBuffer@1100281004 : TEMPORARY Record 50079;
      lPSRB@1100281005 : TEMPORARY Record 51000;
      lGeoFilterType@1100281007 : ' ,Territory Code,Area Code,Post Code';
      lGeoFilter@1100281006 : Text[1024];
    BEGIN
      EXIT;
      WITH lPSRB DO BEGIN
        IF PostCode <> '' THEN BEGIN
          lGeoFilterType := lGeoFilterType::"Post Code";
          lGeoFilter := PostCode; // + '|' + City;
        END ELSE IF AreaCode <> '' THEN BEGIN
          lGeoFilterType := lGeoFilterType::"Area Code";
          lGeoFilter := AreaCode;
        END ELSE IF TerritoryCode <> '' THEN BEGIN
          lGeoFilterType := lGeoFilterType::"Territory Code";
          lGeoFilter := TerritoryCode;
        END ELSE BEGIN
          lGeoFilterType := lGeoFilterType::" ";
          lGeoFilter := '';
        END;

        DELETEALL();
        IF lContactAltAddress.GET(ContactNo,AddressCode) THEN;// BEGIN
          CurrForm.SpeProviderSearchSubpage.FORM.GETRECORDS(lProviderSearchBasket);
          lProviderSearchBasket.SETRANGE(lProviderSearchBasket."Provider No.",'');
          CurrForm.SubfromQualif.FORM.GETRECORDS(lQualificationBuffer);
          //<<IMH12.isat.PC
          lProviderSearchMgt.SetParametersToFilter(lGeoFilterType,PostCode,sCity,AreaCode,TerritoryCode);
          //>>IMH12.isat.PC
          lProviderSearchMgt.SequencedSearch(
            lProviderSearchBasket,lBuffer,lQualificationBuffer,lContactAltAddress,Urgent,
            CorporateNo,SearchType,
            AllSpecialization,CorporateExclusion,InvisibleOpenSpace,RealKm,lGeoFilterType,lGeoFilter,ServiceHeaderNo);

        IF lBuffer.FINDSET() THEN
          REPEAT
            lPSRB := lBuffer;
            INSERT();
          UNTIL lBuffer.NEXT() = 0;

      END;
      //CurrForm.subFormProvider.FORM.LoadTable(lPSRB);
      //lProviderSearchMgt.DownloadDebugFile();
    END;

    PROCEDURE CallDeprivation@1100281007();
    VAR
      lProviderSetup@1100281000 : Record 50011;
    BEGIN
      lProviderSetup.GET;
    END;

    PROCEDURE ProductNoValidate@1100281003();
    VAR
      lMarketingSetup@1100281000 : Record 5079;
      lServiceHeader@1100281003 : Record 5900;
      lProviderSearchBasket@1100281001 : TEMPORARY Record 51002;
      lServiceOrderType@1100281006 : Record 5903;
      lInterventionMgt@1100281005 : Codeunit 50014;
    BEGIN
      IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,ServiceHeaderNo) THEN BEGIN

        lInterventionMgt.LoadProviderSearchBasket(ServiceHeaderNo,lProviderSearchBasket,lServiceOrderType);

        CurrForm.SpeProviderSearchSubpage.FORM.LoadTable(lProviderSearchBasket);
        ContactNo := lServiceHeader."Contact No.";
        CorporateNo := lServiceHeader."Corporate No.";
        IF lMarketingSetup.GET THEN;
        AddressCode := lMarketingSetup."Main Address Code";
      END;
    END;

    PROCEDURE SubformFilters@1100281005();
    VAR
      lServiceHeader@1100281000 : Record 5900;
    BEGIN
      //<<IMH02.isat.PC
      IF NOT lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,ServiceHeaderNo) THEN BEGIN
        EXIT;
      END;

      CurrForm.SubServceSearchLedgEnt.FORM.SetFilters(lServiceHeader."Service No.",lServiceHeader."No.",0);
      CurrForm.SubServceSearchLedgEnt.FORM.UpdateSubform;
      //>>IMH02.isat.PC
    END;

    PROCEDURE CreateTrayLine_OnAction@1100281008();
    VAR
      lTrayLineMgt@1100281001 : Codeunit 50050;
    BEGIN
      COMMIT;
      lTrayLineMgt.CreateTLFromSearch(ServiceHeaderNo);
    END;

    PROCEDURE SetServiceHeaderNo@1100281009(pServiceHeaderNo@1100281000 : Code[20]);
    BEGIN
      ServiceHeaderNo := pServiceHeaderNo;
      //CurrPage.ResultProviderSearchSubpage.FORM.SetServiceHeaderNo(pServiceHeaderNo);
      ShowProductInformation := ServiceHeaderNo <> '';
      //>>IMH12.isat.PC
    END;

    PROCEDURE SetProviderSearchBasket@1100281012(VAR pProviderSearchBasket@1100281000 : Record 51002);
    BEGIN
      //IMH10
      IF pProviderSearchBasket.FINDFIRST THEN
        REPEAT
          //ProviderSearchBasket := pProviderSearchBasket;
          //ProviderSearchBasket.INSERT;
        UNTIL pProviderSearchBasket.NEXT  = 0;
    END;

    PROCEDURE GetResultProvSearBasket@1100281011(VAR pProviderSearchBasket@1100281000 : Record 51002);
    BEGIN
      //IMH10
      //CurrPage.SpeProviderSearchSubpage.FORM.GETRECORDS(pProviderSearchBasket);
    END;

    PROCEDURE SetTrayLineNo@1100281010(pTeamCode@1100281001 : Code[10];pTrayLineEntryNo@1100281000 : Integer);
    BEGIN
      //IMH10
      TeamCode := pTeamCode;
      TrayLineEntryNo := pTrayLineEntryNo;
    END;

    PROCEDURE GetIsOk@1100281016() : Boolean;
    BEGIN
      //IMH10
      EXIT(IsOk);
    END;

    PROCEDURE ShowProviderCard@1100281017();
    VAR
      lWSHShell@1100281000 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
    BEGIN
      //IMH11
      IF ISCLEAR(lWSHShell) THEN
        CREATE(lWSHShell,FALSE,TRUE);
      lWSHShell.SendKeys('^+F');
      CLEAR(lWSHShell);
    END;

    PROCEDURE Search@1000000000();
    VAR
      lProviderSearchMgt@1100281000 : Codeunit 50000;
      lContactAltAddress@1100281001 : Record 5051;
      lBuffer@1100281002 : TEMPORARY Record 51000;
      lProviderSearchBasket@1100281003 : TEMPORARY Record 51002;
      lQualificationBuffer@1100281004 : TEMPORARY Record 50079;
      lPSRB@1100281005 : TEMPORARY Record 51000;
      lPostCode@1100281008 : Record 225;
      lProviderAgreement@1100281010 : Record 50012;
      lServiceSearchLedgerEntry@1100281012 : Record 50027;
      lGeoFilterType@1100281006 : ' ,Territory Code,Area Code,Post Code';
      lGeoFilter@1100281007 : Text[1024];
      lGeoCode@1100281009 : Code[10];
      lDelete@1100281011 : Boolean;
    BEGIN
      WITH lPSRB DO BEGIN
        IF PostCode <> '' THEN BEGIN
          lGeoFilterType := lGeoFilterType::"Post Code";
          lGeoFilter := PostCode; // + '|' + sCity;
          //<<IMH09 isat.nfo
          IF (STRLEN(PostCode)= 5) AND (sCity <> '') THEN
            IF lPostCode.GET(PostCode,sCity) THEN
              IF lPostCode."Geo. Reference Code" <> '' THEN
                lGeoFilter := lPostCode."Geo. Reference Code";
          //>>IMH09 isat.nfo
        END ELSE IF AreaCode <> '' THEN BEGIN
          lGeoFilterType := lGeoFilterType::"Area Code";
          lGeoFilter := AreaCode;
        END ELSE IF TerritoryCode <> '' THEN BEGIN
          lGeoFilterType := lGeoFilterType::"Territory Code";
          lGeoFilter := TerritoryCode;
        END ELSE BEGIN
          lGeoFilterType := lGeoFilterType::" ";
          lGeoFilter := '';
        END;

        lPSRB.DELETEALL;
        lProviderSearchBasket.DELETEALL;
        CurrForm.ResultProviderSearchSubpage.FORM.DelRecords();
        IF lContactAltAddress.GET(ContactNo,AddressCode) THEN;// BEGIN

        IF (ServiceHeaderNo = '') AND
           ((SearchType = SearchType::Standard) OR (SearchType = SearchType::Avanc‚e))
        THEN BEGIN
          IF (PostCode = '') OR (sCity = '') THEN
      //      ERROR(Text0003);
          IF lPostCode.GET(PostCode,sCity) THEN BEGIN
            lGeoFilterType := lGeoFilterType::"Post Code";
            lGeoFilter := lPostCode."Geo. Reference Code";
          END
        END;

        CurrForm.SpeProviderSearchSubpage.FORM.GETRECORDS(lProviderSearchBasket);
        //<<IMH16 ISAT.NFO
        //ProviderSearchCom.ClearAffectedProviderBuffer();
        lProviderSearchBasket.SETFILTER(lProviderSearchBasket."Provider No.",'<>%1','');
        IF lProviderSearchBasket.FINDSET() THEN BEGIN
          REPEAT
        ///   ProviderSearchCom.addAffectedProviderBuffer(lProviderSearchBasket."Provider No.");
          UNTIL lProviderSearchBasket.NEXT() = 0;
        END;
        //>>IMH16 ISAT.NFO
        lProviderSearchBasket.SETRANGE(lProviderSearchBasket."Provider No.",'');
        ///CurrPage.QualProviderSearchSubpage.FORM.GETRECORDS(lQualificationBuffer);
        //<<IMH12.isat.PC
        lProviderSearchMgt.SetParametersToFilter(lGeoFilterType,PostCode,sCity,AreaCode,TerritoryCode);
        //>>IMH12.isat.PC
        lProviderSearchMgt.SetSearchDate(SearchDate);
        lProviderSearchMgt.SequencedSearch(
          lProviderSearchBasket,lBuffer,lQualificationBuffer,
          lContactAltAddress,Urgent,
          CorporateNo,SearchType,
          AllSpecialization,CorporateExclusion,InvisibleOpenSpace,RealKm,lGeoFilterType,lGeoFilter,ServiceHeaderNo);

        IF lBuffer.FINDSET THEN BEGIN
          REPEAT
            lDelete := FALSE;
            lPSRB := lBuffer;
            // Detection Hors Zone
            // FILTRE SUR LES STATUS
            //<<IMH12.isat.PC
            { OLD Version
            IF (lBuffer.Status = lBuffer.Status::Prospect) AND (NOT ProStatProspect) THEN BEGIN
            END ELSE begin
              IF (lBuffer.Status = lBuffer.Status::Casual) AND (NOT ProStatCasual) THEN BEGIN
              END ELSE begin
                IF (lBuffer.Status = lBuffer.Status::Integration) AND (NOT ProStatIntegration) THEN BEGIN
                END ELSE begin
                  IF (lBuffer.Status = lBuffer.Status::"Trial Period") AND (NOT ProStatTrialPeriod) THEN BEGIN
                  END ELSE begin
                    IF (lBuffer.Status = lBuffer.Status::Approval) AND (NOT ProStatApproval) THEN BEGIN
                    END ELSE begin
                      IF (lBuffer.Status = lBuffer.Status::Operational) AND (NOT ProStatOperational) THEN BEGIN
                      END ELSE BEGIN
            }
            IF SearchType = SearchType::DPR THEN
              IF NOT (((lBuffer.Status = lBuffer.Status::Prospect) AND ProStatProspect) OR
                 ((lBuffer.Status = lBuffer.Status::Casual) AND (ProStatCasual)) OR
                 ((lBuffer.Status = lBuffer.Status::Integration) AND (ProStatIntegration)) OR
                 ((lBuffer.Status = lBuffer.Status::"Trial Period") AND (ProStatTrialPeriod)) OR
                 ((lBuffer.Status = lBuffer.Status::Approval) AND (ProStatApproval)) OR
                 ((lBuffer.Status = lBuffer.Status::Operational) AND (ProStatOperational)))
              THEN BEGIN
                lDelete := TRUE;   //IMH13
              END;
            //>>IMH12.isat.PC
              IF NOT lDelete THEN BEGIN
                //<<IMH10
                IF (TeamCode <> '') AND (TrayLineEntryNo <> 0) THEN BEGIN
                  lServiceSearchLedgerEntry.SETCURRENTKEY("Team Code","Tray Line Entry No.","Provider No.");
                  lServiceSearchLedgerEntry.SETRANGE("Team Code", TeamCode);
                  lServiceSearchLedgerEntry.SETRANGE("Tray Line Entry No.", TrayLineEntryNo);
                  lServiceSearchLedgerEntry.SETRANGE("Provider No.", lBuffer."Provider No.");
                  IF lServiceSearchLedgerEntry.FINDFIRST THEN BEGIN
                    lPSRB.Refused := TRUE;
                    lPSRB."Non-Accept. Reason Code" := lServiceSearchLedgerEntry."Non-acceptance Reason Code";
                  END;
                END;
                //>>IMH10
                //<<IMH13
                //lPSRB.SETRANGE("Provider No.", lBuffer."Provider No.");
                //IF lPSRB.ISEMPTY THEN
                  INSERT;
                //lPSRB.RESET;
                //>>IMH13
              END;
          UNTIL lBuffer.NEXT = 0;
        END;

        //<<IMH20
        lProviderSearchBasket.RESET;
        ////CurrPage.ResultProviderSearchSubpage.FORM.LoadProviderSearchBasket(lProviderSearchBasket);
        //>>IMH20
        ////CurrPage.ResultProviderSearchSubpage.FORM.LoadTable(lPSRB);
      END;
    END;

    BEGIN
    {
      /** @r IMH03 @d 15/10/13 @a ISAT.ST @v IMH6.01.353 @s Reorganisation region IMH @h 4760 @c Renommage CR / AR / R‚gion */
      /** @r IHM02 @d 14/02/10 @a ISAT.PC @v IMH6.01.028 @s Recherche prestataire @c Ajout fonction SubformFilters */
      /** @r IHM01 @d 18/10/10 @a ISAT.NFO @v IMH6.01.028 @s Recherche prestataire @c Creation */
    }
    END.
  }
}