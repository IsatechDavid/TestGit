OBJECT Form 50150 Provider Search Result Subform
{
  OBJECT-PROPERTIES
  {
    Date=23/05/14;
    Time=15:24:17;
    Modified=Yes;
    Version List=IMH6.01.P011;
  }
  PROPERTIES
  {
    Width=10230;
    Height=5390;
    Editable=No;
    CaptionML=[ENU=Provider Search Basket Subform;
               FRA=Panier de recherche prestataires];
    SourceTable=Table51000;
    SourceTableTemporary=Yes;
    SourceTableView=SORTING(Score)
                    ORDER(Descending);
  }
  CONTROLS
  {
    { 1100281000;TableBox;0   ;0    ;10230;5390 ;HorzGlue=Both;
                                                 VertGlue=Both }
    { 1100281001;TextBox;2858 ;2970 ;1700 ;440  ;ParentControl=1100281000;
                                                 InColumn=Yes;
                                                 SourceExpr="Provider No." }
    { 1100281002;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100281001;
                                                 InColumnHeading=Yes }
    { 1100281003;TextBox;4558 ;2970 ;4400 ;440  ;HorzGlue=Both;
                                                 ParentControl=1100281000;
                                                 InColumn=Yes;
                                                 SourceExpr=Name }
    { 1100281004;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100281003;
                                                 InColumnHeading=Yes }
    { 1100281005;TextBox;8958 ;2970 ;1700 ;440  ;ParentControl=1100281000;
                                                 InColumn=Yes;
                                                 SourceExpr="Specialization Code" }
    { 1100281006;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100281005;
                                                 InColumnHeading=Yes }
    { 1100281007;TextBox;10658;2970 ;4400 ;440  ;ParentControl=1100281000;
                                                 InColumn=Yes;
                                                 SourceExpr="Specialization Description" }
    { 1100281008;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100281007;
                                                 InColumnHeading=Yes }
    { 1100281009;CheckBox;15058;2970;1700 ;440  ;ParentControl=1100281000;
                                                 InColumn=Yes;
                                                 ShowCaption=No;
                                                 SourceExpr=Refused }
    { 1100281010;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100281009;
                                                 InColumnHeading=Yes }
    { 1100281011;TextBox;16758;2970 ;1700 ;440  ;ParentControl=1100281000;
                                                 InColumn=Yes;
                                                 SourceExpr="Non-Accept. Reason Code" }
    { 1100281012;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100281011;
                                                 InColumnHeading=Yes }
    { 1100281017;TextBox;21858;2970 ;1700 ;440  ;ParentControl=1100281000;
                                                 InColumn=Yes;
                                                 SourceExpr="Specializations Nb." }
    { 1100281018;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100281017;
                                                 InColumnHeading=Yes }
    { 1100281019;TextBox;23558;2970 ;1700 ;440  ;ParentControl=1100281000;
                                                 InColumn=Yes;
                                                 SourceExpr="First Available Date" }
    { 1100281020;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100281019;
                                                 InColumnHeading=Yes }
    { 1100281021;TextBox;25258;2970 ;1700 ;440  ;ParentControl=1100281000;
                                                 InColumn=Yes;
                                                 SourceExpr=Score }
    { 1100281022;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100281021;
                                                 InColumnHeading=Yes }
    { 1100281027;TextBox;30358;2970 ;2200 ;440  ;ParentControl=1100281000;
                                                 InColumn=Yes;
                                                 SourceExpr=Distance }
    { 1100281028;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100281027;
                                                 InColumnHeading=Yes }
    { 1100281029;TextBox;32558;2970 ;2200 ;440  ;ParentControl=1100281000;
                                                 InColumn=Yes;
                                                 SourceExpr="Travel Time (min)" }
    { 1100281030;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100281029;
                                                 InColumnHeading=Yes }
    { 1100281031;TextBox;34758;2970 ;550  ;440  ;ParentControl=1100281000;
                                                 InColumn=Yes;
                                                 SourceExpr="Search Type" }
    { 1100281032;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100281031;
                                                 InColumnHeading=Yes }
    { 1100281033;TextBox;35308;2970 ;1700 ;440  ;ParentControl=1100281000;
                                                 InColumn=Yes;
                                                 SourceExpr="Intervention Number" }
    { 1100281034;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100281033;
                                                 InColumnHeading=Yes }
    { 1100281035;TextBox;37008;2970 ;1700 ;440  ;ParentControl=1100281000;
                                                 InColumn=Yes;
                                                 SourceExpr="Linked Provider Count" }
    { 1100281036;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100281035;
                                                 InColumnHeading=Yes }
    { 1100281037;TextBox;38708;2970 ;1700 ;440  ;ParentControl=1100281000;
                                                 InColumn=Yes;
                                                 SourceExpr="Campaign No." }
    { 1100281038;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100281037;
                                                 InColumnHeading=Yes }
    { 1100281039;TextBox;40408;2970 ;1700 ;440  ;ParentControl=1100281000;
                                                 InColumn=Yes;
                                                 SourceExpr="GeoCode Count" }
    { 1100281040;Label  ;0    ;0    ;0    ;0    ;ParentControl=1100281039;
                                                 InColumnHeading=Yes }
  }
  CODE
  {
    VAR
      FirstProviderSearch@1000000003 : Codeunit 50000;
      ProviderSearchMgt@1100281000 : Codeunit 50284;
      ServiceHeaderNo@1000000002 : Code[20];
      ProviderSearchBasket@1000000001 : TEMPORARY Record 51002;
      SpecialityFilter@1000000000 : Text[1024];

    PROCEDURE LoadTable1@1100281000(VAR pProviderSearchResultBuffer@1100281000 : Record 51000);
    BEGIN
      DELETEALL();
      IF pProviderSearchResultBuffer.FINDSET() THEN
        REPEAT
          Rec := pProviderSearchResultBuffer;
          INSERT();
        UNTIL pProviderSearchResultBuffer.NEXT() = 0;
      CurrForm.UPDATE(FALSE);
    END;

    PROCEDURE CallProvider@1100281001();
    VAR
      lServiceHeader@1100281006 : Record 5900;
      lBuffer@1100281001 : TEMPORARY Record 51000;
      lBuffer2@1100281002 : TEMPORARY Record 51000;
      lContactAltAddressBuffer@1100281005 : TEMPORARY Record 5051;
      lProviderSpecialization@1100281007 : Record 50006;
      lProviderCall@1100281000 : Form 50022;
      lProviderSearchCom@1100281003 : Codeunit 50066;
      lWSHShell@1100281004 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      lResultSpecialityFilter@1100281008 : Text[1024];
    BEGIN
      IF "Provider No." <> '' THEN BEGIN
        lBuffer2 := Rec;
        lBuffer2.INSERT();
        lProviderCall.SetRecords(lBuffer2);
        //<<IMH03.PC
        IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,ServiceHeaderNo) THEN BEGIN
          lContactAltAddressBuffer.Address := lServiceHeader."Ship-to Address";
          lContactAltAddressBuffer."Address 2" := lServiceHeader."Ship-to Address 2";
          lContactAltAddressBuffer.City := lServiceHeader."Ship-to City";
          lContactAltAddressBuffer."Post Code" := lServiceHeader."Ship-to Post Code";
          lContactAltAddressBuffer."Geo. Reference Code" := lServiceHeader."Ship-to Geo. Reference Code";
          lProviderCall.SetMEOAddr(lContactAltAddressBuffer);
        END;
        //>>IMH03.PC

        //<<IMH05
        lProviderCall.SetSpecializationFilter(SpecialityFilter);
        //>>IMH05
        lProviderCall.RUNMODAL;
        IF lProviderCall.GetIsOk THEN BEGIN
          IF lProviderCall.GetProviderNo = '' THEN BEGIN
          END ELSE BEGIN

            lProviderSearchCom.setProviderNo(lBuffer2."Provider No.");
            lProviderSearchCom.setSpecializationCode(lBuffer2."Specialization Code");
            //<<IMH05
            lResultSpecialityFilter := ProviderSearchMgt.GetProviderSpecialization(lBuffer2."Provider No.", SpecialityFilter);
            lProviderSearchCom.setSpecializationFilter(lResultSpecialityFilter);
            ProviderSearchBasket.SETFILTER("Speciality Code",lResultSpecialityFilter);
            ProviderSearchBasket.DELETEALL;

            SpecialityFilter := '';
            ProviderSearchBasket.RESET;
            ProviderSearchBasket.SETRANGE("Provider No.",'');
            IF ProviderSearchBasket.FINDSET THEN
              REPEAT
                IF SpecialityFilter <> '' THEN BEGIN
                  SpecialityFilter += '|';
                END;
                SpecialityFilter := SpecialityFilter + ProviderSearchBasket."Speciality Code";
              UNTIL ProviderSearchBasket.NEXT = 0;
            //>>IMH05
            IF ISCLEAR(lWSHShell) THEN
              CREATE(lWSHShell,TRUE,TRUE);
            lWSHShell.SendKeys('{F5}');
            lWSHShell.SendKeys('{F5}');
            lWSHShell.SendKeys('^+Z');
            CLEAR(lWSHShell);
            //CurrPage.SubFormBasket.FORM.UpdateProviderNo(lBuffer2."Provider No.",lBuffer2."Specialization Code");
            CLEAR(lProviderCall);
            CurrForm.UPDATE(FALSE);
            IF SpecialityFilter = '' THEN
              DELETEALL
            ELSE BEGIN
              IF FIND('+') THEN BEGIN
                REPEAT
                  //<<IMH05
                  lProviderSpecialization.RESET;
                  lProviderSpecialization.SETRANGE("Provider No.","Provider No.");
                  lProviderSpecialization.SETFILTER("Specialization Code",SpecialityFilter);
                  IF lProviderSpecialization.FINDSET THEN BEGIN
                    REPEAT
                      "Specialization List" := '';
                      IF "Specialization List" <> '' THEN BEGIN
                        "Specialization List" += '|';
                      END;
                      "Specialization List" := "Specialization List" + lProviderSpecialization."Specialization Code";
                    UNTIL lProviderSpecialization.NEXT = 0;
                    MODIFY;
                  END ELSE
                    DELETE();
                  //>>IMH05
                UNTIL NEXT(-1)=0;
              END;
            END;
          END;
        END ELSE BEGIN
          IF FIND('+') THEN
            REPEAT
              IF "Provider No." = lBuffer2."Provider No." THEN
                DELETE();
            UNTIL NEXT(-1)=0;
        END;
      END;
    END;

    PROCEDURE LoadTable@1000000000(VAR pProviderSearchResultBuffer@1100281000 : Record 51000);
    BEGIN
      DELETEALL();
      IF pProviderSearchResultBuffer.FINDSET() THEN
        REPEAT
          Rec := pProviderSearchResultBuffer;
          INSERT();
        UNTIL pProviderSearchResultBuffer.NEXT() = 0;
      IF FINDFIRST THEN;
      //CurrPage.UPDATE();
    END;

    PROCEDURE DelRecords@1100281002();
    BEGIN
      DELETEALL();
    END;

    PROCEDURE GetRecords@1100281003(VAR pPSRB@1100281000 : Record 51000);
    BEGIN
      pPSRB.DELETEALL;
      IF FINDSET THEN BEGIN
        REPEAT
          pPSRB := Rec;
          pPSRB.INSERT;
        UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE SetServiceHeaderNo@1100281004(pServiceHeaderNo@1100281000 : Code[20]);
    BEGIN
      // IMH03.PC
      ServiceHeaderNo := pServiceHeaderNo;
    END;

    PROCEDURE GetDescripProcessStatus@1100281005() : Text[80];
    VAR
      lProvider@1100281000 : Record 50000;
      lProcessStatus@1100281001 : Record 50042;
    BEGIN
      IF lProvider.GET("Provider No.") THEN BEGIN
        IF lProcessStatus.GET(lProvider."Process Code", lProvider."Process Status No.") THEN
          EXIT(lProcessStatus.Description);
      END;
    END;

    PROCEDURE LoadProviderSearchBasket@1100281009(VAR pProviderSearchBasket@1100281000 : TEMPORARY Record 51002);
    BEGIN
      //<<IMH05
      ProviderSearchBasket.DELETEALL();
      pProviderSearchBasket.SETRANGE("Provider No.",'');
      IF pProviderSearchBasket.FINDSET() THEN
        REPEAT
          ProviderSearchBasket := pProviderSearchBasket;
          ProviderSearchBasket.INSERT();
          IF SpecialityFilter <> '' THEN BEGIN
            SpecialityFilter += '|';
          END;
          SpecialityFilter := SpecialityFilter + ProviderSearchBasket."Speciality Code";
        UNTIL pProviderSearchBasket.NEXT() = 0;
      //>>IMH05
    END;

    BEGIN
    {
      /** @r IMH26 @d 09/04/14 @a ISAT.PC @v IMH6.01.P011 @s New Provider Search
          @c Changement Fonction */
      /** @r IHM01 @d 18/10/10 @a ISAT.NFO @v IMH6.01.020 @s Recherche prestataire @c Creation */
    }
    END.
  }
}