OBJECT Form 50381 Provider Second Search Call
{
  OBJECT-PROPERTIES
  {
    Date=07/05/14;
    Time=11:50:38;
    Modified=Yes;
    Version List=IMH6.01,IMH6.01.P011;
  }
  PROPERTIES
  {
    Width=17710;
    Height=11000;
    CaptionML=[ENU=Provider Second Search Call;
               FRA=Appel prestataire];
    SourceTable=Table51006;
    SourceTableTemporary=Yes;
    OnOpenForm=VAR
                 lProviderContactAltAddr@1100281002 : Record 5051;
                 lContact@1100281001 : Record 5050;
                 lContactFound@1100281000 : Boolean;
               BEGIN
                 Provider.GET("Provider No.");

                 lContact.RESET;
                 lContact.SETCURRENTKEY("Company No.");
                 lContact.SETRANGE("Company No.","Provider No.");
                 lContact.SETRANGE("Preferred Contact DGS",TRUE);
                 IF lContact.FINDFIRST THEN BEGIN
                   lProviderContactAltAddr.SETRANGE("Contact No.",lContact."No.");
                   lContactFound := TRUE;
                 END ELSE BEGIN
                   lProviderContactAltAddr.SETRANGE("Contact No.",Provider."No.");
                 END;

                 lProviderContactAltAddr.SETRANGE("Geo. Reference Address",TRUE);
                 IF NOT lProviderContactAltAddr.FINDFIRST THEN BEGIN
                   lProviderContactAltAddr.INIT;
                 END;

                 ProviderAddressArray[1] := Provider."No." + ' - ' + Provider.Name;
                 ProviderAddressArray[2] := lProviderContactAltAddr."Company Name";
                 ProviderAddressArray[3] := lProviderContactAltAddr.Address + ' ' + lProviderContactAltAddr."Address 2";
                 ProviderAddressArray[4] := lProviderContactAltAddr."Post Code" + ' - ' + lProviderContactAltAddr.City;
                 IF lContactFound THEN BEGIN
                   ProviderAddressArray[5] := lContact."Phone No.";
                   ProviderAddressArray[6] := lContact."Mobile Phone No.";
                   ProviderAddressArray[7] := lContact."Constraint Phone No.";
                   ProviderAddressArray[8] := lContact."Mobile Phone No. 2";
                   ProviderAddressArray[9] := FORMAT(lContact."Send to Mission Without Call");
                 END ELSE BEGIN
                   ProviderAddressArray[5] := Provider."Phone No.";
                   ProviderAddressArray[6] := Provider."Mobile Phone No.";
                   ProviderAddressArray[7] := Provider."Constraint Phone No.";
                   ProviderAddressArray[8] := Provider."Mobile Phone No. 2";
                   ProviderAddressArray[9] := FORMAT(Provider."Send to Mission Without Call");
                 END;

                 ServiceHeader.GET(ServiceHeader."Document Type"::Invoice,"Service Header No.");
                 MEOAddressArray[1] := ServiceHeader."Ship-to Address" + ' ' + ServiceHeader."Ship-to Address 2";
                 MEOAddressArray[2] := ServiceHeader."Ship-to Post Code" + ' ' + ServiceHeader."Ship-to City";

                 ShowCreateFollowUp := Provider."Follow Up" = '';
                 ShowFollowUp := NOT ShowCreateFollowUp;
                 ShowEmergency := Emergency;
                 IF SpecializationFilter = '' THEN BEGIN
                   SpecializationFilter := "Specialization Filter";
                 END;
                 ProviderCardShow := UserSpecialPermission.DPRSearchPermitted;
                 CurrForm.UPDATE(FALSE);
               END;

    OnQueryCloseForm=BEGIN
                       IF IsAccept OR IsRefuse THEN BEGIN
                         EXIT;
                       END;
                       Cancel_OnPush;
                     END;

  }
  CONTROLS
  {
    { 1100281001;CommandButton;5170;10120;2200;550;
                                                 Name=Refuse;
                                                 CaptionML=[ENU=&Refuse >;
                                                            FRA=&Refuser];
                                                 OnPush=BEGIN

                                                          Refuse_OnPush();
                                                        END;
                                                         }
    { 1100281002;CommandButton;7590;10120;2200;550;
                                                 Name=Accept;
                                                 CaptionML=[ENU=Accept;
                                                            FRA=Accepter];
                                                 OnPush=BEGIN
                                                          Accept_OnPush();
                                                        END;
                                                         }
    { 1100281009;TextBox;12870;1210 ;4510 ;440  ;Name=Raison;
                                                 Editable=No;
                                                 HorzAlign=Left;
                                                 VertAlign=Top;
                                                 MultiLine=Yes;
                                                 CaptionML=[ENU=Address;
                                                            FRA=Adresse];
                                                 SourceExpr=MEOAddressArray[1] }
    { 1100281010;Label  ;9460 ;1210 ;3300 ;440  ;ParentControl=1100281009 }
    { 1100281011;TextBox;12870;1760 ;4510 ;440  ;Name=Raison;
                                                 Editable=No;
                                                 HorzAlign=Left;
                                                 VertAlign=Top;
                                                 MultiLine=Yes;
                                                 CaptionML=[ENU=Post Code - City;
                                                            FRA=Code postal - Ville];
                                                 SourceExpr=MEOAddressArray[2] }
    { 1100281012;Label  ;9460 ;1760 ;3300 ;440  ;ParentControl=1100281011 }
    { 1100281015;TextBox;3410 ;3520 ;2750 ;440  ;CaptionML=[ENU=Distance;
                                                            FRA=Distance];
                                                 SourceExpr=Distance }
    { 1100281016;Label  ;0    ;3520 ;3300 ;440  ;ParentControl=1100281015 }
    { 1100281017;Label  ;9460 ;660  ;8250 ;440  ;VertAlign=Top;
                                                 FontBold=Yes;
                                                 MultiLine=Yes;
                                                 LeaderDots=No;
                                                 CaptionML=[ENU=Ship-to Address;
                                                            FRA=Adresse de mise en oeuvre] }
    { 1100281026;TextBox;3410 ;2860 ;4730 ;440  ;Editable=No;
                                                 CaptionML=[ENU=Post Code;
                                                            FRA=Code postal];
                                                 SourceExpr=ProviderAddressArray[4] }
    { 1100281027;Label  ;0    ;2860 ;3300 ;440  ;ParentControl=1100281026 }
    { 1100281028;TextBox;3410 ;1760 ;4510 ;440  ;Editable=No;
                                                 CaptionML=FRA=Nom;
                                                 SourceExpr=ProviderAddressArray[1] }
    { 1100281029;Label  ;0    ;1760 ;3300 ;440  ;ParentControl=1100281028 }
    { 1100281030;TextBox;3410 ;2310 ;4510 ;440  ;Editable=No;
                                                 CaptionML=[ENU=Address;
                                                            FRA=Adresse];
                                                 SourceExpr=ProviderAddressArray[3] }
    { 1100281031;Label  ;0    ;2310 ;3300 ;440  ;ParentControl=1100281030 }
    { 1100281032;TextBox;3410 ;1210 ;1700 ;440  ;Editable=No;
                                                 SourceExpr=Provider."No." }
    { 1100281033;Label  ;0    ;1210 ;3300 ;440  ;ParentControl=1100281032;
                                                 CaptionML=FRA=Nø }
    { 1100281034;Label  ;0    ;660  ;8250 ;440  ;VertAlign=Top;
                                                 FontBold=Yes;
                                                 MultiLine=Yes;
                                                 LeaderDots=No;
                                                 CaptionML=[ENU=This is the provider has been found;
                                                            FRA=Voici le prestataire qui a ‚t‚ trouv‚] }
    { 1100281035;Label  ;6270 ;3520 ;1650 ;440  ;LeaderDots=No;
                                                 CaptionML=[ENU=km;
                                                            FRA=km] }
    { 1100281036;SubForm;0    ;4180 ;9790 ;5720 ;Name=ProviderSpecialitiesSubPage;
                                                 SubFormID=Form50184 }
  }
  CODE
  {
    VAR
      Provider@1100281013 : Record 50000;
      ServiceHeader@1100281012 : Record 5900;
      CTIManagement@1100281011 : Codeunit 50138;
      UserSpecialPermission@1100281010 : Codeunit 50093;
      ProviderAddressArray@1100281009 : ARRAY [9] OF Text[80];
      MEOAddressArray@1100281008 : ARRAY [2] OF Text[80];
      SpecializationFilter@1100281007 : Text[1024];
      ShowFollowUp@1100281006 : Boolean INDATASET;
      ShowCreateFollowUp@1100281005 : Boolean INDATASET;
      ShowEmergency@1100281004 : Boolean INDATASET;
      IsAccept@1100281003 : Boolean;
      IsRefuse@1100281002 : Boolean;
      IsCancel@1100281001 : Boolean;
      ProviderCardShow@1100281000 : Boolean INDATASET;
      Text001@1100281016 : TextConst 'ENU=Please fill a non-acceptance reason code.;FRA=Veuiller saisir une raison de refus';
      Text002@1100281015 : TextConst 'ENU=Do you want to stop search ?;FRA=Souhaitez vous annuler la recherche ?';
      Text003@1100281014 : TextConst 'ENU=Do you want to validate search ?;FRA=Souhaitez vous valider la recherche ?';

    PROCEDURE Accept_OnPush@1100281015();
    BEGIN
      Accepted := TRUE;
      Refused := FALSE;
      IsAccept := TRUE;
      CurrForm.EDITABLE(FALSE);
      CurrForm.CLOSE;
    END;

    PROCEDURE Refuse_OnPush@1100281014();
    VAR
      lProviderSecondSearchRefusPage@1100281000 : Form 50382;
    BEGIN
      CLEAR(lProviderSecondSearchRefusPage);
      lProviderSecondSearchRefusPage.LoadPage;
      lProviderSecondSearchRefusPage.LOOKUPMODE := TRUE;
      lProviderSecondSearchRefusPage.EDITABLE := TRUE;
      IF lProviderSecondSearchRefusPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
        lProviderSecondSearchRefusPage.GetReasonCode("Non-Accept. Reason Code","Non-Accept. Comments");
        Refused := TRUE;
        Accepted := FALSE;
        MODIFY;
      END ELSE BEGIN
        ERROR(Text001);
      END;
      IsRefuse := TRUE;
      CurrForm.EDITABLE(FALSE);
      CurrForm.CLOSE;
    END;

    PROCEDURE Cancel_OnPush@1000000000();
    BEGIN
      IsCancel := TRUE;
      CurrForm.EDITABLE(FALSE);
      CurrForm.CLOSE;
    END;

    PROCEDURE SetValues@1000000001(pProviderSecondSearchBuffer@1000000000 : Record 51006;pSpecializationFilter@1000000001 : Text[1024]);
    BEGIN
      Rec := pProviderSecondSearchBuffer;
      INSERT;
      SpecializationFilter := pSpecializationFilter;
    END;

    PROCEDURE GetValues@1100281000(VAR pReasonCode@1100281000 : Code[10];VAR pReasonComment@1100281001 : Text[100]);
    BEGIN
      pReasonCode := "Non-Accept. Reason Code";
      pReasonComment := "Non-Accept. Comments";
    END;

    PROCEDURE GetAccept@1000000004() : Boolean;
    BEGIN
      EXIT(IsAccept);
    END;

    PROCEDURE GetRefuse@1000000005() : Boolean;
    BEGIN
      EXIT(IsRefuse);
    END;

    PROCEDURE GetCancel@1000000006() : Boolean;
    BEGIN
      EXIT(IsCancel);
    END;

    PROCEDURE ShowProvider@1100281002();
    VAR
      lProvider@1100281000 : Record 50000;
    BEGIN
      //IMH15
      IF lProvider.GET("Provider No.") THEN
        FORM.RUN(FORM::"Provider Card",lProvider);
    END;

    BEGIN
    {
      /** @r IMH01 @d 10/04/14 @a ISAT.ZW @v IMH6.01.P011 @s New Provider Search @c Creation */
    }
    END.
  }
}