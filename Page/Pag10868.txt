OBJECT Page 10868 Payment Slip
{
  OBJECT-PROPERTIES
  {
    Date=07/11/12;
    Time=17:44:41;
    Modified=Yes;
    Version List=NAVFR6.00,ISA6.00,IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Payment Slip;
               FRA=Bordereau paiement];
    SourceTable=Table10865;
    PageType=Document;
    RefreshOnActivate=Yes;
    OnAfterGetRecord=BEGIN
                       CurrPage.Lines.FORM.EDITABLE(TRUE);
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1120047 ;1   ;ActionGroup;
                      CaptionML=[ENU=&Header;
                                 FRA=&Bordereau] }
      { 1120049 ;2   ;Action    ;
                      CaptionML=[ENU=Dimensions;
                                 FRA=Axes analytiques];
                      RunObject=Page 546;
                      RunFormLink=Table ID=CONST(10865),
                                  Document Type=CONST(" "),
                                  Document No.=FIELD(No.),
                                  Line No.=CONST(0);
                      Image=Dimensions }
      { 1120050 ;2   ;Action    ;
                      CaptionML=[ENU=Header RIB;
                                 FRA=Relev‚ d'identit‚ bancaire];
                      RunObject=Page 10876;
                      RunFormLink=No.=FIELD(No.) }
      { 1120040 ;1   ;ActionGroup;
                      CaptionML=[ENU=&Navigate;
                                 FRA=Navi&guer] }
      { 1120042 ;2   ;Action    ;
                      CaptionML=[ENU=Header;
                                 FRA=En-tˆte];
                      OnAction=BEGIN
                                 Navigate.SetDoc("Posting Date","No.");
                                 Navigate.RUN;
                               END;
                                }
      { 1120043 ;2   ;Action    ;
                      CaptionML=[ENU=Line;
                                 FRA=Ligne];
                      OnAction=VAR
                                 PaymentLine@1120000 : Record 10866;
                               BEGIN
                                 CurrPage.Lines.FORM.NavigateLine("Posting Date");
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1120031 ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=[ENU=F&unctions;
                                 FRA=Fonction&s] }
      { 1120032 ;2   ;Action    ;
                      CaptionML=[ENU=Suggest &Vendor Payments;
                                 FRA=Proposer paiements &fournisseur];
                      Promoted=Yes;
                      Image=SuggestVendorPayments;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 PaymentClass@1120002 : Record 10860;
                                 CreateVendorPmtSuggestion@1120001 : Report 10862;
                               BEGIN
                                 IF "Status No." <> 0 THEN
                                   MESSAGE(Text003)
                                 ELSE IF PaymentClass.GET("Payment Class") THEN
                                   IF PaymentClass.Suggestions = PaymentClass.Suggestions::Vendor THEN BEGIN
                                     CreateVendorPmtSuggestion.SetGenPayLine(Rec);
                                     CreateVendorPmtSuggestion.RUNMODAL;
                                     CLEAR(CreateVendorPmtSuggestion);
                                   END ELSE
                                     MESSAGE(Text001);
                               END;
                                }
      { 1120037 ;2   ;Action    ;
                      CaptionML=[ENU=Suggest &Customer Payments;
                                 FRA=Proposer rŠglements &client];
                      Promoted=Yes;
                      Image=SuggestCustomerPayments;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 PaymentClass@1120002 : Record 10860;
                                 CreateCustomerPmtSuggestion@1120001 : Report 10864;
                               BEGIN
                                 IF "Status No." <> 0 THEN
                                   MESSAGE(Text003)
                                 ELSE IF PaymentClass.GET("Payment Class") THEN
                                   IF PaymentClass.Suggestions = PaymentClass.Suggestions::Customer THEN BEGIN
                                     CreateCustomerPmtSuggestion.SetGenPayLine(Rec);
                                     CreateCustomerPmtSuggestion.RUNMODAL;
                                     CLEAR(CreateCustomerPmtSuggestion);
                                   END ELSE
                                     MESSAGE(Text002);
                               END;
                                }
      { 1100281001;2 ;Action    ;
                      Name=<Action1100281001>;
                      CaptionML=FRA=Proposer remboursements &client;
                      OnAction=VAR
                                 PaymentClass@1100281001 : Record 10860;
                                 CreateCustomerPmtSuggestion@1100281000 : Report 10864;
                               BEGIN
                                 IF "Status No." <> 0 THEN
                                   MESSAGE(Text003)
                                 ELSE IF PaymentClass.GET("Payment Class") THEN
                                   IF PaymentClass.Suggestions = PaymentClass.Suggestions::Customer THEN BEGIN
                                     CreateCustomerPmtSuggestion.SetGenPayLine(Rec);
                                     CreateCustomerPmtSuggestion.SetRepayment(TRUE);
                                     CreateCustomerPmtSuggestion.RUNMODAL;
                                     CLEAR(CreateCustomerPmtSuggestion);
                                   END ELSE
                                     MESSAGE(Text002);
                               END;
                                }
      { 1120052 ;2   ;Separator  }
      { 1120046 ;2   ;Action    ;
                      CaptionML=[ENU=Archive;
                                 FRA=Archiver];
                      OnAction=VAR
                                 Archive@1120001 : Boolean;
                                 PaymtManagt@1120002 : Codeunit 10860;
                                 lPaymentStep@8016600 : Record 10862;
                                 lPaymentLine@8016601 : Record 10866;
                               BEGIN
                                 IF "No." = '' THEN
                                   EXIT;

                                 //<<ISA03.ST
                                 CALCFIELDS("Archiving Authorized");
                                 IF NOT "Archiving Authorized" THEN
                                   EXIT;

                                 lPaymentStep.SETRANGE("Payment Class", "Payment Class");
                                 lPaymentStep.SETRANGE("Previous Status", "Status No.");
                                 lPaymentStep.SETRANGE("Action Type", lPaymentStep."Action Type"::"Create New Document");
                                 IF NOT lPaymentStep.ISEMPTY THEN BEGIN
                                   lPaymentLine.SETRANGE("No.", "No.");
                                   lPaymentLine.SETFILTER("Copied To No.", '=%1','');
                                   IF NOT lPaymentLine.ISEMPTY THEN
                                     EXIT;
                                 END;
                                 //>>ISA03.ST

                                 IF NOT CONFIRM(Text009) THEN
                                   EXIT;
                                 {
                                 CALCFIELDS("Nb of lines");
                                 IF "Nb of lines" = 0 THEN
                                   ERROR(Text005);
                                 CALCFIELDS("Lines not Posted");
                                 IF "Lines not Posted" = 0 THEN
                                   Archive := CONFIRM(Text008);
                                 IF "Lines not Posted" = 1 THEN
                                   Archive := CONFIRM(Text006);
                                 IF "Lines not Posted" > 1 THEN
                                   Archive := CONFIRM(Text007);
                                 IF Archive THEN
                                 }
                                 PaymtManagt.ArchiveDocument(Rec);
                               END;
                                }
      { 1120039 ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 FRA=&Validation] }
      { 1100281000;2 ;Action    ;
                      Name=<Action1100281000>;
                      CaptionML=FRA=Imprimer;
                      OnAction=BEGIN
                                 //<<ISAT.IMH01.SB
                                 CurrPage.Lines.FORM.MarkLines(TRUE);
                                 CurrPage.Lines.FORM.PrintPayments;
                                 CurrPage.Lines.FORM.MarkLines(FALSE);
                                 //>>ISAT.IMH01.SB
                               END;
                                }
      { 1120044 ;2   ;Action    ;
                      CaptionML=[ENU=Generate file;
                                 FRA=G‚n‚rer fichier];
                      OnAction=BEGIN
                                 TestNbOfLines;
                                 Steps.SETRANGE("Payment Class","Payment Class");
                                 Steps.SETRANGE("Previous Status","Status No.");
                                 Steps.SETRANGE("Action Type",Steps."Action Type"::File);
                                 ValidatePayment;
                               END;
                                }
      { 1120045 ;2   ;Action    ;
                      CaptionML=[ENU=Post;
                                 FRA=Valider];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TestNbOfLines;
                                 Steps.SETRANGE("Payment Class","Payment Class");
                                 Steps.SETRANGE("Previous Status","Status No.");
                                 Steps.SETFILTER("Action Type",'<>%1&<>%2&<>%3', Steps."Action Type"::Report, Steps."Action Type"::File, Steps."Action Type"::
                                   "Create New Document");
                                 ValidatePayment;
                               END;
                                }
      { 8016600 ;1   ;ActionGroup;
                      Name=<Action8016600>;
                      CaptionML=[ENU=Print;
                                 FRA=Imprimer];
                      ActionContainerType=NewDocumentItems }
      { 8016601 ;2   ;Action    ;
                      Name=<Action8016601>;
                      CaptionML=[ENU=Customer Slip;
                                 FRA=Bordereau effet client];
                      OnAction=VAR
                                 lRepDeliveryStt@8016600 : Report 10867;
                                 lPaymentLines@8016601 : Record 10866;
                               BEGIN
                                 //<<ISA01.ST
                                 CLEAR(lRepDeliveryStt);
                                 lPaymentLines.SETRANGE("No.","No.");
                                 lPaymentLines.SETRANGE("Account Type", lPaymentLines."Account Type"::Customer);
                                 IF NOT lPaymentLines.ISEMPTY THEN BEGIN
                                   lRepDeliveryStt.SETTABLEVIEW(lPaymentLines);
                                   lRepDeliveryStt.RUNMODAL;
                                 END;
                                 //>>ISA01.ST
                               END;
                                }
      { 8016602 ;2   ;Action    ;
                      Name=<Action8016602>;
                      CaptionML=[ENU=Vendor Slip;
                                 FRA=Bordereau effet fournisseur];
                      OnAction=VAR
                                 lRepDraftRecapitulation@8016601 : Report 10869;
                                 lPaymentLines@8016600 : Record 10866;
                               BEGIN
                                 //<<ISA01.ST
                                 CLEAR(lRepDraftRecapitulation);
                                 lPaymentLines.SETRANGE("No.","No.");
                                 lPaymentLines.SETRANGE("Account Type", lPaymentLines."Account Type"::Vendor);
                                 IF NOT lPaymentLines.ISEMPTY THEN BEGIN
                                   lRepDraftRecapitulation.SETTABLEVIEW(lPaymentLines);
                                   lRepDraftRecapitulation.RUNMODAL;
                                 END;
                                 //>>ISA01.ST
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1120000;1;Group     ;
                CaptionML=[ENU=General;
                           FRA=G‚n‚ral] }

    { 1120001;2;Field     ;
                AssistEdit=No;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1120003;2;Field     ;
                Lookup=No;
                SourceExpr="Payment Class";
                Editable=FALSE }

    { 1120005;2;Field     ;
                DrillDown=No;
                SourceExpr="Payment Class Name";
                Importance=Promoted;
                Editable=FALSE }

    { 1120007;2;Field     ;
                DrillDown=No;
                SourceExpr="Status Name";
                Importance=Promoted;
                Editable=FALSE }

    { 1120009;2;Field     ;
                SourceExpr="Currency Code";
                OnAssistEdit=BEGIN
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 1120011;2;Field     ;
                SourceExpr="Posting Date";
                Importance=Promoted }

    { 1120013;2;Field     ;
                SourceExpr="Document Date";
                OnValidate=BEGIN
                             DocumentDateOnAfterValidate;
                           END;
                            }

    { 1120033;2;Field     ;
                SourceExpr="Amount (LCY)";
                Importance=Promoted }

    { 1120022;1;Part      ;
                Name=Lines;
                SubFormLink=No.=FIELD(No.);
                PagePartID=Page10869 }

    { 1904784501;1;Group  ;
                CaptionML=[ENU=Posting;
                           FRA=Validation] }

    { 1120019;2;Field     ;
                SourceExpr="Source Code";
                Importance=Promoted }

    { 8016603;2;Field     ;
                SourceExpr="Payment Method Code" }

    { 1120015;2;Field     ;
                SourceExpr="Shortcut Dimension 1 Code" }

    { 1120017;2;Field     ;
                SourceExpr="Shortcut Dimension 2 Code" }

    { 1120023;2;Field     ;
                SourceExpr="Account Type";
                Importance=Promoted }

    { 1120026;2;Field     ;
                SourceExpr="Account No.";
                Importance=Promoted }

  }
  CODE
  {
    VAR
      ChangeExchangeRate@1120001 : Form 511;
      Navigate@1120002 : Form 344;
      Steps@1120003 : Record 10862;
      Text001@1120004 : TextConst 'ENU=This payment class does not authorize vendor suggestions.;FRA=Ce type de rŠglement n''autorise pas les propositions fournisseur.';
      Text002@1120005 : TextConst 'ENU=This payment class does not authorize customer suggestions.;FRA=Ce type de rŠglement n''autorise pas les propositions client.';
      Text003@1120006 : TextConst 'ENU=You cannot suggest payments on a posted header.;FRA=Vous n''ˆtes pas autoris‚ … faire des propositions de paiement sur un bordereau valid‚.';
      Text005@1120000 : TextConst 'ENU=This document has no line. You cannot archive it. You must delete it.;FRA=Ce document n''a pas de ligne. Vous ne pouvez l''archiver. Vous devez le supprimer.';
      Text006@1120008 : TextConst 'ENU=One line is not posted. Are you sure you want to archive this document ?;FRA=Une ligne n''est pas valid‚e. Òtes-vous sur de vouloir archiver ce document ?';
      Text007@1120009 : TextConst 'ENU=Some lines are not posted. Are you sure you want to archive this document ?;FRA=Certaines lignes ne sont pas valid‚es. Òtes-vous sur de vouloir archiver ce document ?';
      Text008@1120010 : TextConst 'ENU=Are you sure you want to archive this document ?;FRA=Etes-vous sur de vouloir archiver ce document ?';
      Text009@1120011 : TextConst 'ENU=Do you wish to archive this document ?;FRA=Souhaitez-vous archiver ce document ?';

    PROCEDURE ValidatePayment@1120000();
    VAR
      Ok@1120004 : Boolean;
      PostingStatement@1120003 : Codeunit 10860;
      Options@1120002 : Text[250];
      Choice@1120001 : Integer;
      I@1120000 : Integer;
    BEGIN
      I := Steps.COUNT;
      Ok := FALSE;
      IF I = 1 THEN BEGIN
        Steps.FIND('-');
        Ok := CONFIRM(Steps.Name,TRUE);
      END ELSE IF I > 1 THEN BEGIN
        IF Steps.FIND('-') THEN BEGIN
          REPEAT
            IF Options = '' THEN
              Options := Steps.Name
            ELSE
              Options := Options + ',' + Steps.Name;
          UNTIL Steps.NEXT = 0;

          Choice := STRMENU(Options,1);

          I := 1;
          IF Choice > 0 THEN BEGIN
            Ok := TRUE;
            Steps.FIND('-');
            WHILE Choice > I DO BEGIN
              I += 1;
              Steps.NEXT;
            END;
          END;
        END;
      END;
      IF Ok THEN
        PostingStatement.Valbord(Rec,Steps);
    END;

    LOCAL PROCEDURE DocumentDateOnAfterValidate@19038487();
    BEGIN
      CurrPage.UPDATE;
    END;

    BEGIN
    {
      /** @r IMH01 @d 29/07/11 @a ISAT.SB @v IMH6.01.145 @s Facturation @c Ajout Page actions "Imprimer" */
    }
    END.
  }
}