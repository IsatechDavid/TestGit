OBJECT Page 10869 Payment Slip Subform
{
  OBJECT-PROPERTIES
  {
    Date=09/11/11;
    Time=15:35:04;
    Modified=Yes;
    Version List=NAVFR6.00,SEPA;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               FRA=Lignes];
    SourceTable=Table10866;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             "Bank Account CodeVisible" := TRUE;
             "Credit AmountVisible" := TRUE;
             "Debit AmountVisible" := TRUE;
             AmountVisible := TRUE;
             "Acceptation CodeVisible" := TRUE;
             "RIB CheckedVisible" := TRUE;
             "RIB KeyVisible" := TRUE;
             "Bank Account NameVisible" := TRUE;
             "Bank Account No.Visible" := TRUE;
             "Agency CodeVisible" := TRUE;
             "Bank Branch No.Visible" := TRUE;
           END;

    OnAfterGetRecord=BEGIN
                       ActivateControls;
                       AccountNoOnFormat;
                     END;

    OnNewRecord=BEGIN
                  SetUpNewLine(xRec,BelowxRec);
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 FRA=Fonction&s] }
      { 1900654604;2 ;Action    ;
                      CaptionML=[ENU=Set Document ID;
                                 FRA=Attribuer nø document];
                      OnAction=BEGIN
                                 //This functionality was copied from page #10868. Unsupported part was commented. Please check it.
                                 {CurrPage.Lines.FORM.}
                                 SetDocumentID;
                               END;
                                }
      { 1907540104;1 ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 FRA=&Validation] }
      { 1904990104;2 ;Action    ;
                      CaptionML=[ENU=Print;
                                 FRA=Imprimer];
                      Image=Print;
                      OnAction=BEGIN
                                 //This functionality was copied from page #10868. Unsupported part was commented. Please check it.
                                 {CurrPage.Lines.FORM.}
                                 MarkLines(TRUE);
                                 //This functionality was copied from page #10868. Unsupported part was commented. Please check it.
                                 {CurrPage.Lines.FORM.}
                                 PrintPayments;
                                 //This functionality was copied from page #10868. Unsupported part was commented. Please check it.
                                 {CurrPage.Lines.FORM.}
                                 MarkLines(FALSE);
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 FRA=&Ligne] }
      { 1906127004;2 ;Action    ;
                      ShortCutKey=Maj+F11;
                      CaptionML=[ENU=&Application;
                                 FRA=Lettr&age];
                      OnAction=BEGIN
                                 //This functionality was copied from page #10868. Unsupported part was commented. Please check it.
                                 {CurrPage.Lines.FORM.}
                                 Application;
                               END;
                                }
      { 1900201904;2 ;Action    ;
                      ShortCutKey=Maj+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 FRA=Axes analytiques];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 //This functionality was copied from page #10868. Unsupported part was commented. Please check it.
                                 {CurrPage.Lines.FORM.}
                                 _ShowDimensions;
                               END;
                                }
      { 1900724704;2 ;Action    ;
                      CaptionML=[ENU=Modify;
                                 FRA=Modifier];
                      Image=EditFilter;
                      OnAction=BEGIN
                                 //This functionality was copied from page #10868. Unsupported part was commented. Please check it.
                                 {CurrPage.Lines.FORM.}
                                 _Modify;
                               END;
                                }
      { 1900724604;2 ;Action    ;
                      CaptionML=[ENU=Insert;
                                 FRA=Insertion];
                      OnAction=BEGIN
                                 //This functionality was copied from page #10868. Unsupported part was commented. Please check it.
                                 {CurrPage.Lines.FORM.}
                                 INSERT;
                               END;
                                }
      { 1900724504;2 ;Action    ;
                      CaptionML=[ENU=Remove;
                                 FRA=Supprimer];
                      OnAction=BEGIN
                                 //This functionality was copied from page #10868. Unsupported part was commented. Please check it.
                                 {CurrPage.Lines.FORM.}
                                 DELETE;
                               END;
                                }
      { 1905048704;2 ;ActionGroup;
                      CaptionML=[ENU=A&ccount;
                                 FRA=&Compte] }
      { 1903237904;3 ;Action    ;
                      ShortCutKey=Maj+F7;
                      CaptionML=[ENU=Card;
                                 FRA=Fiche];
                      Image=EditLines;
                      OnAction=BEGIN
                                 //This functionality was copied from page #10868. Unsupported part was commented. Please check it.
                                 {CurrPage.Lines.FORM.}
                                 ShowAccount;
                               END;
                                }
      { 1905215804;3 ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Ledger E&ntries;
                                 FRA=&Ecritures comptables];
                      OnAction=BEGIN
                                 //This functionality was copied from page #10868. Unsupported part was commented. Please check it.
                                 {CurrPage.Lines.FORM.}
                                 ShowEntries;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 7   ;2   ;Field     ;
                SourceExpr="Account Type" }

    { 9   ;2   ;Field     ;
                SourceExpr="Account No." }

    { 1100281002;2;Field  ;
                SourceExpr="Applies-to Third Party ID" }

    { 1120014;2;Field     ;
                SourceExpr="Document No." }

    { 1100281001;2;Field  ;
                SourceExpr="Check No." }

    { 1120024;2;Field     ;
                SourceExpr="External Document No.";
                Visible=FALSE }

    { 1120026;2;Field     ;
                SourceExpr="Drawee Reference";
                Visible=false }

    { 11  ;2   ;Field     ;
                SourceExpr="Posting Group";
                Visible=FALSE }

    { 13  ;2   ;Field     ;
                SourceExpr="Due Date" }

    { 1120016;2;Field     ;
                SourceExpr="Debit Amount";
                Visible="Debit AmountVisible" }

    { 1120018;2;Field     ;
                SourceExpr="Credit Amount";
                Visible="Credit AmountVisible" }

    { 2   ;2   ;Field     ;
                SourceExpr=Amount;
                Visible=AmountVisible }

    { 1120030;2;Field     ;
                SourceExpr=IBAN }

    { 1120032;2;Field     ;
                SourceExpr="SWIFT Code" }

    { 1120000;2;Field     ;
                SourceExpr="Bank Account Code";
                Visible="Bank Account CodeVisible" }

    { 1120002;2;Field     ;
                SourceExpr="Acceptation Code";
                Visible="Acceptation CodeVisible" }

    { 1120022;2;Field     ;
                SourceExpr="Payment Address Code" }

    { 1120004;2;Field     ;
                SourceExpr="Bank Branch No.";
                Visible="Bank Branch No.Visible" }

    { 1120008;2;Field     ;
                SourceExpr="Agency Code";
                Visible="Agency CodeVisible" }

    { 1120006;2;Field     ;
                SourceExpr="Bank Account No.";
                Visible="Bank Account No.Visible" }

    { 1120020;2;Field     ;
                SourceExpr="Bank Account Name";
                Visible="Bank Account NameVisible" }

    { 1120028;2;Field     ;
                SourceExpr="Bank City";
                Visible=FALSE }

    { 1120010;2;Field     ;
                SourceExpr="RIB Key";
                Visible="RIB KeyVisible" }

    { 1120012;2;Field     ;
                SourceExpr="RIB Checked";
                Visible="RIB CheckedVisible" }

    { 1100281000;2;Field  ;
                SourceExpr="External Document No." }

  }
  CODE
  {
    VAR
      Text000@1120000 : TextConst 'ENU=Assign No. ?;FRA=Affectation des nø ?';
      Header@1120001 : Record 10865;
      Status@1120002 : Record 10861;
      Text001@1120003 : TextConst 'ENU=There is no line to modify;FRA=Il n''y a pas de ligne … modifier';
      Text002@1120004 : TextConst 'ENU=A posted line cannot be modified.;FRA=Une ligne valid‚e ne peut pas ˆtre modifi‚e.';
      Text003@1120005 : TextConst 'ENU=You cannot assign numbers to a posted header.;FRA=Vous ne pouvez pas affecter de num‚ros … un bordereau valid‚.';
      Text004@1120006 : TextConst 'ENU=There are no lines to print.;FRA=Il n''existe aucune ligne … imprimer.';
      PaymentStep@1120007 : Record 10862;
      Navigate@1120008 : Form 344;
      "Account No.Emphasize"@19074278 : Boolean INDATASET;
      "Bank Branch No.Visible"@19026747 : Boolean INDATASET;
      "Agency CodeVisible"@19030059 : Boolean INDATASET;
      "Bank Account No.Visible"@19061886 : Boolean INDATASET;
      "Bank Account NameVisible"@19020847 : Boolean INDATASET;
      "RIB KeyVisible"@19060147 : Boolean INDATASET;
      "RIB CheckedVisible"@19002477 : Boolean INDATASET;
      "Acceptation CodeVisible"@19024430 : Boolean INDATASET;
      AmountVisible@19071318 : Boolean INDATASET;
      "Debit AmountVisible"@19025428 : Boolean INDATASET;
      "Credit AmountVisible"@19017265 : Boolean INDATASET;
      "Bank Account CodeVisible"@19072349 : Boolean INDATASET;

    PROCEDURE Application@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Payment-Apply",Rec);
    END;

    PROCEDURE _ShowDimensions@19020529();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE ShowDimensions@11();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE DisableFields@2();
    BEGIN
      IF Header.GET("No.") THEN BEGIN
        IF (Header."Status No." = 0) AND ("Copied To No." = '') THEN
          CurrPage.EDITABLE(TRUE)
        ELSE
          CurrPage.EDITABLE(FALSE);
      END;
    END;

    PROCEDURE _Modify@19068298();
    VAR
      PaymentLine@1120001 : Record 10866;
      PaymentModification@1120000 : Form 10871;
    BEGIN
      IF "Line No." = 0 THEN
        MESSAGE(Text001)
      ELSE IF NOT Posted THEN BEGIN
        PaymentLine.COPY(Rec);
        PaymentLine.SETRANGE("No.","No.");
        PaymentLine.SETRANGE("Line No.","Line No.");
        PaymentModification.SETTABLEVIEW(PaymentLine);
        PaymentModification.RUNMODAL;
      END ELSE
        MESSAGE(Text002);
    END;

    PROCEDURE Modify@3();
    VAR
      PaymentLine@1120001 : Record 10866;
      PaymentModification@1120000 : Form 10871;
    BEGIN
      IF "Line No." = 0 THEN
        MESSAGE(Text001)
      ELSE IF NOT Posted THEN BEGIN
        PaymentLine.COPY(Rec);
        PaymentLine.SETRANGE("No.","No.");
        PaymentLine.SETRANGE("Line No.","Line No.");
        PaymentModification.SETTABLEVIEW(PaymentLine);
        PaymentModification.RUNMODAL;
      END ELSE
        MESSAGE(Text002);
    END;

    PROCEDURE Insert@1120007();
    VAR
      PaymentManagement@1120000 : Codeunit 10860;
    BEGIN
      PaymentManagement.LinesInsert("No.");
    END;

    PROCEDURE Delete@4();
    VAR
      PostingStatement@1120000 : Codeunit 10860;
      StatementLine@1120001 : Record 10866;
    BEGIN
      StatementLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(StatementLine);
      PostingStatement.DeleteLigBorCopy(StatementLine);
    END;

    PROCEDURE SetDocumentID@1120000();
    VAR
      StatementLine@1120000 : Record 10866;
      PostingStatement@1120001 : Codeunit 10860;
      No@1120002 : Code[20];
    BEGIN
      IF "Status No." <> 0 THEN BEGIN
        MESSAGE(Text003);
        EXIT;
      END;
      IF CONFIRM(Text000) THEN BEGIN
        CurrPage.SETSELECTIONFILTER(StatementLine);
        StatementLine.MARKEDONLY(TRUE);
        IF NOT StatementLine.FIND('-') THEN
          StatementLine.MARKEDONLY(FALSE);
        IF StatementLine.FIND('-') THEN BEGIN
          No := StatementLine."Document No.";
          WHILE StatementLine.NEXT <> 0 DO BEGIN
            PostingStatement.IncrementNoText(No,1);
            StatementLine."Document No." := No;
            StatementLine.MODIFY;
          END;
        END;
      END;
    END;

    PROCEDURE ShowAccount@1120001();
    VAR
      GenJnlLine@1120005 : Record 81;
    BEGIN
      GenJnlLine."Account Type" := "Account Type";
      GenJnlLine."Account No." := "Account No.";
      CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Show Card",GenJnlLine);
    END;

    PROCEDURE ShowEntries@1120002();
    VAR
      GenJnlLine@1120000 : Record 81;
    BEGIN
      GenJnlLine."Account Type" := "Account Type";
      GenJnlLine."Account No." := "Account No.";
      CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Show Entries",GenJnlLine);
    END;

    PROCEDURE MarkLines@1120003(ToMark@1120000 : Boolean);
    VAR
      LineCopy@1120002 : Record 10866;
      PaymtManagt@1120001 : Codeunit 10860;
      NumLines@1120003 : Integer;
    BEGIN
      IF ToMark THEN BEGIN
        CurrPage.SETSELECTIONFILTER(LineCopy);
        NumLines := LineCopy.COUNT;
        IF NumLines > 0 THEN BEGIN
          LineCopy.FIND('-');
          REPEAT
            LineCopy.Marked := TRUE;
            LineCopy.MODIFY;
          UNTIL LineCopy.NEXT = 0;
        END ELSE
          LineCopy.RESET;
          LineCopy.SETRANGE("No.","No.");
          LineCopy.MODIFYALL(Marked,TRUE);
      END ELSE BEGIN
        LineCopy.SETRANGE("No.","No.");
        LineCopy.MODIFYALL(Marked,FALSE);
      END;
      COMMIT;
    END;

    PROCEDURE ActivateControls@1120004();
    BEGIN
      IF Header.GET("No.") THEN BEGIN
        Status.GET(Header."Payment Class",Header."Status No.");
        IF Status.RIB THEN BEGIN
          "Bank Branch No.Visible" := TRUE;
          "Agency CodeVisible" := TRUE;
          "Bank Account No.Visible" := TRUE;
          "Bank Account NameVisible" := TRUE;
          "RIB KeyVisible" := TRUE;
          "RIB CheckedVisible" := TRUE;
        END ELSE BEGIN
          "Bank Branch No.Visible" := FALSE;
          "Agency CodeVisible" := FALSE;
          "Bank Account No.Visible" := FALSE;
          "Bank Account NameVisible" := FALSE;
          "RIB KeyVisible" := FALSE;
          "RIB CheckedVisible" := FALSE;
        END;
        IF Status."Acceptation Code" THEN BEGIN
          "Acceptation CodeVisible" := TRUE;
        END ELSE BEGIN
          "Acceptation CodeVisible" := FALSE;
        END;
        AmountVisible := Status.Amount;
        "Debit AmountVisible" := Status.Debit;
        "Credit AmountVisible" := Status.Credit;
        "Bank Account CodeVisible" := Status."Bank Account";
        DisableFields;
      END;
    END;

    PROCEDURE PrintPayments@1120005();
    VAR
      PaymManagement@1120000 : Codeunit 10860;
      Options@1120001 : Text[250];
      Choice@1120002 : Integer;
      I@1120003 : Integer;
      Ok@1120004 : Boolean;
    BEGIN
      Header.GET("No.");
      Header.CALCFIELDS("No. of Lines");
      IF Header."No. of Lines" = 0 THEN
        ERROR(Text004);
      PaymManagement.PrintLine(Header,PaymentStep."Action Type"::Report);
    END;

    PROCEDURE NavigateLine@1120006(PostingDate@1120000 : Date);
    BEGIN
      Navigate.SetDoc(PostingDate,"Document No.");
      Navigate.RUN;
    END;

    LOCAL PROCEDURE AccountNoOnFormat@19003789();
    BEGIN
      IF "Copied To No."<>'' THEN
       "Account No.Emphasize" :=TRUE;
    END;

    BEGIN
    END.
  }
}