OBJECT Page 25002 Kit Sales Lines
{
  OBJECT-PROPERTIES
  {
    Date=13/02/07;
    Time=12:00:00;
    Version List=KITNA5.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Kit Sales Lines;
               FRA=Lignes vente kit];
    SourceTable=Table25000;
    DelayedInsert=Yes;
    PageType=List;
    AutoSplitKey=Yes;
    OnDeleteRecord=VAR
                     ReserveKitSalesLine@1480000 : Codeunit 25001;
                   BEGIN
                     IF ("Extended Quantity" <> 0) AND ItemExists("No.") THEN BEGIN
                       COMMIT;
                       IF NOT ReserveKitSalesLine.DeleteLineConfirm(Rec) THEN
                         EXIT(FALSE);
                       ReserveKitSalesLine.DeleteLine(Rec);
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1480019 ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 FRA=&Ligne] }
      { 1480020 ;2   ;ActionGroup;
                      CaptionML=[ENU=Item Availability by;
                                 FRA=DisponibilitÇ article par] }
      { 1480036 ;3   ;Action    ;
                      CaptionML=[ENU=Period;
                                 FRA=PÇriode];
                      OnAction=BEGIN
                                 ItemAvailability(0);
                               END;
                                }
      { 1480037 ;3   ;Action    ;
                      CaptionML=[ENU=Variant;
                                 FRA=Variante];
                      OnAction=BEGIN
                                 ItemAvailability(1);
                               END;
                                }
      { 1480038 ;3   ;Action    ;
                      CaptionML=[ENU=Location;
                                 FRA=Magasin];
                      OnAction=BEGIN
                                 ItemAvailability(2);
                               END;
                                }
      { 1480039 ;2   ;Separator  }
      { 1480040 ;2   ;Action    ;
                      CaptionML=[ENU=Reservation Entries;
                                 FRA=êcritures rÇservation];
                      Image=ReservationLedger;
                      OnAction=BEGIN
                                 TESTFIELD("Document Type","Document Type"::Order);
                                 ShowReservationEntries(TRUE);
                               END;
                                }
      { 1480041 ;2   ;Action    ;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 FRA=Lignes &traáabilitÇ];
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 1480043 ;2   ;Separator  }
      { 1480049 ;2   ;Action    ;
                      CaptionML=[ENU=Order &Promising;
                                 FRA=Pro&messe de livraison];
                      OnAction=BEGIN
                                 OrderPromisingLine;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1480050 ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 FRA=Fonction&s] }
      { 1480081 ;2   ;Action    ;
                      CaptionML=[ENU=Re&fresh Kit BOM;
                                 FRA=Ac&tualiser nomenclature kit];
                      OnAction=VAR
                                 SalesLine@1480000 : Record 37;
                               BEGIN
                                 SalesLine.GET("Document Type","Document No.","Document Line No.");
                                 SalesLine.TESTFIELD("Build Kit",TRUE);
                                 SalesLine.RefreshKitSalesLines;
                               END;
                                }
      { 1480082 ;2   ;Action    ;
                      CaptionML=[ENU=Roll-up &Price;
                                 FRA=&Prix relation];
                      OnAction=VAR
                                 KitManagement@1480000 : Codeunit 25000;
                               BEGIN
                                 KitManagement.RollUpPrice(Rec,0);
                               END;
                                }
      { 1480083 ;2   ;Action    ;
                      CaptionML=[ENU=Roll-up &Cost;
                                 FRA=&Coñts relation];
                      OnAction=VAR
                                 KitManagement@1480000 : Codeunit 25000;
                               BEGIN
                                 KitManagement.RollUpCost(Rec);
                               END;
                                }
      { 1480080 ;2   ;Separator  }
      { 1480060 ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Reserve;
                                 FRA=&RÇserver];
                      OnAction=BEGIN
                                 TESTFIELD("Document Type","Document Type"::Order);
                                 ShowReservation;
                               END;
                                }
      { 1480042 ;2   ;Action    ;
                      CaptionML=[ENU=Order &Tracking;
                                 FRA=C&haånage];
                      OnAction=VAR
                                 TrackingForm@1480000 : Form 99000822;
                               BEGIN
                                 TESTFIELD("Document Type","Document Type"::Order);
                                 TrackingForm.SetKitSalesLine(Rec);
                                 TrackingForm.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1480000;1;Group     ;
                GroupType=Repeater }

    { 1480001;2;Field     ;
                SourceExpr=Type }

    { 1480003;2;Field     ;
                SourceExpr="No." }

    { 1480009;2;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 1480005;2;Field     ;
                SourceExpr=Description }

    { 1480007;2;Field     ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1480023;2;Field     ;
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 1480032;2;Field     ;
                SourceExpr=Reserve;
                Visible=FALSE;
                OnValidate=BEGIN
                             ReserveOnAfterValidate;
                           END;
                            }

    { 1480015;2;Field     ;
                BlankZero=Yes;
                SourceExpr="Quantity per";
                OnValidate=BEGIN
                             QuantityperOnAfterValidate;
                           END;
                            }

    { 1480011;2;Field     ;
                SourceExpr="Unit of Measure Code";
                OnValidate=BEGIN
                             UnitofMeasureCodeOnAfterValida;
                           END;
                            }

    { 1480013;2;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 1480017;2;Field     ;
                BlankZero=Yes;
                SourceExpr="Extended Quantity";
                Editable=FALSE }

    { 1480034;2;Field     ;
                BlankZero=Yes;
                SourceExpr="Reserved Quantity" }

    { 1480028;2;Field     ;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE }

    { 1480030;2;Field     ;
                BlankZero=Yes;
                SourceExpr="Unit Price" }

    { 1480021;2;Field     ;
                SourceExpr="Applies-to Entry";
                Visible=FALSE }

  }
  CODE
  {

    PROCEDURE OrderPromisingLine@17();
    VAR
      OrderPromisingLine@1000 : TEMPORARY Record 99000880;
    BEGIN
      TESTFIELD("Document Type","Document Type"::Order);
      OrderPromisingLine.SETRANGE("Source Type","Document Type");
      OrderPromisingLine.SETRANGE("Source ID","Document No.");
      OrderPromisingLine.SETRANGE("Source Line No.","Document Line No.");
      FORM.RUNMODAL(FORM::"Order Promising Lines",OrderPromisingLine);
    END;

    LOCAL PROCEDURE ReserveOnAfterValidate@19004502();
    BEGIN
      IF (Reserve = Reserve::Always) AND ("Outstanding Qty. (Base)" <> 0) THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE QuantityperOnAfterValidate@19039016();
    VAR
      UpdateIsDone@1480000 : Boolean;
    BEGIN
      IF Type = Type::Item THEN
        CASE Reserve OF
          Reserve::Always:
            BEGIN
              CurrPage.SAVERECORD;
              AutoReserve;
              CurrPage.UPDATE(FALSE);
              UpdateIsDone := TRUE;
            END;
          Reserve::Optional:
            IF ("Extended Quantity" < xRec."Extended Quantity") AND (xRec."Extended Quantity" > 0) THEN BEGIN
              CurrPage.SAVERECORD;
              CurrPage.UPDATE(FALSE);
              UpdateIsDone := TRUE;
            END;
        END;

      IF (Type = Type::Item) AND
         ("Extended Quantity" <> xRec."Extended Quantity") AND
         NOT UpdateIsDone
      THEN
        CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE UnitofMeasureCodeOnAfterValida@19057939();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    BEGIN
    END.
  }
}