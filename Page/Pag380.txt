OBJECT Page 380 Bank Acc. Reconciliation Lines
{
  OBJECT-PROPERTIES
  {
    Date=17/09/12;
    Time=09:48:41;
    Modified=Yes;
    Version List=NAVW16.00,ISA6.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               FRA=Lignes];
    LinksAllowed=No;
    SourceTable=Table274;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             BalanceEnable := TRUE;
             TotalBalanceEnable := TRUE;
             TotalDiffEnable := TRUE;
           END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  IF BelowxRec THEN
                    CalcBalance(xRec."Statement Line No.")
                  ELSE
                    CalcBalance(xRec."Statement Line No." - 1);
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 FRA=&Ligne] }
      { 1902759904;2 ;Action    ;
                      ShortCutKey=Maj+F11;
                      CaptionML=[ENU=&Apply Entries;
                                 FRA=&Lettrer ‚critures];
                      Image=ApplyEntries;
                      OnAction=BEGIN
                                 //This functionality was copied from page #379. Unsupported part was commented. Please check it.
                                 {CurrPage.StmtLine.FORM.}
                                 _ApplyEntries;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 8016600;2;Field     ;
                SourceExpr=Treat;
                OnValidate=BEGIN
                             //<<IMH01.ISAT.SB
                             CurrPage.UPDATE(TRUE);
                             //>>IMH01.ISAT.SB
                           END;
                            }

    { 2   ;2   ;Field     ;
                SourceExpr="Transaction Date" }

    { 22  ;2   ;Field     ;
                SourceExpr="Value Date";
                Visible=FALSE }

    { 24  ;2   ;Field     ;
                SourceExpr="Document No.";
                Visible=FALSE }

    { 21  ;2   ;Field     ;
                SourceExpr="Check No.";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr=Type }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 8   ;2   ;Field     ;
                SourceExpr="Statement Amount" }

    { 10  ;2   ;Field     ;
                SourceExpr="Applied Amount" }

    { 12  ;2   ;Field     ;
                SourceExpr=Difference }

    { 14  ;2   ;Field     ;
                SourceExpr="Applied Entries";
                Visible=FALSE }

    { 1100281000;2;Field  ;
                SourceExpr="Payment Check No.";
                Editable=FALSE }

    { 16  ;1   ;Group      }

    { 26  ;2   ;Field     ;
                Name=Balance;
                CaptionML=[ENU=Balance;
                           FRA=Solde];
                SourceExpr=Balance + Rec."Statement Amount";
                AutoFormatType=1;
                AutoFormatExpr=GetCurrencyCode;
                Enabled=BalanceEnable;
                Editable=FALSE }

    { 17  ;2   ;Field     ;
                Name=TotalBalance;
                CaptionML=[ENU=Total Balance;
                           FRA=Solde final];
                SourceExpr=TotalBalance + Rec."Statement Amount";
                AutoFormatType=1;
                AutoFormatExpr=GetCurrencyCode;
                Enabled=TotalBalanceEnable;
                Editable=FALSE }

    { 19  ;2   ;Field     ;
                Name=TotalDiff;
                CaptionML=[ENU=Total Difference;
                           FRA=Total diff‚rence];
                SourceExpr=TotalDiff + Rec.Difference;
                AutoFormatType=1;
                AutoFormatExpr=GetCurrencyCode;
                Enabled=TotalDiffEnable;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      BankAccRecon@1000 : Record 273;
      StmtApplyEntries@1001 : Codeunit 374;
      TotalDiff@1002 : Decimal;
      Balance@1003 : Decimal;
      TotalBalance@1004 : Decimal;
      TotalDiffEnable@19038859 : Boolean INDATASET;
      TotalBalanceEnable@19047480 : Boolean INDATASET;
      BalanceEnable@19079599 : Boolean INDATASET;

    LOCAL PROCEDURE CalcBalance@3(BankAccReconLineNo@1000 : Integer);
    VAR
      TempBankAccReconLine@1001 : Record 274;
    BEGIN
      IF BankAccRecon.GET("Bank Account No.","Statement No.") THEN;

      TempBankAccReconLine.COPY(Rec);
      //<<ISA02
      TempBankAccReconLine.SETCURRENTKEY(Treat);
      TempBankAccReconLine.SETRANGE(Treat,TRUE);
      //>>ISA02

      TotalDiff := -Difference;
      IF TempBankAccReconLine.CALCSUMS(Difference) THEN BEGIN
        TotalDiff := TotalDiff + TempBankAccReconLine.Difference;
        TotalDiffEnable := TRUE;
      END ELSE
        TotalDiffEnable := FALSE;

      TotalBalance := BankAccRecon."Balance Last Statement" - "Statement Amount";
      IF TempBankAccReconLine.CALCSUMS("Statement Amount") THEN BEGIN
        TotalBalance := TotalBalance + TempBankAccReconLine."Statement Amount";
        TotalBalanceEnable := TRUE;
      END ELSE
        TotalBalanceEnable := FALSE;

      Balance := BankAccRecon."Balance Last Statement" - "Statement Amount";
      TempBankAccReconLine.SETRANGE("Statement Line No.",0,BankAccReconLineNo);
      IF TempBankAccReconLine.CALCSUMS("Statement Amount") THEN BEGIN
        Balance := Balance + TempBankAccReconLine."Statement Amount";
        BalanceEnable := TRUE;
      END ELSE
        BalanceEnable := FALSE;
    END;

    PROCEDURE _ApplyEntries@19019049();
    BEGIN
      "Ready for Application" := TRUE;
      CurrPage.SAVERECORD;
      COMMIT;
      StmtApplyEntries.ApplyEntries(Rec);
    END;

    PROCEDURE ApplyEntries@1();
    BEGIN
      "Ready for Application" := TRUE;
      CurrPage.SAVERECORD;
      COMMIT;
      StmtApplyEntries.ApplyEntries(Rec);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      IF "Statement Line No." <> 0 THEN
        CalcBalance("Statement Line No.");
    END;

    BEGIN
    {
      /** @r IMH02 @d 20/03/12 @a Isat.PC @v IMH6.01.153 @s gestion banque @h 3184
          @c Ajout champ 50050, Payment Check No. */
      /** @r IMH01 @d 10/11/11 @a ISAT.SB @v IMH6.01.153 @s Gestion banque
          @c Ajout MAJ sur validate du Treat */
      /** @r ISA01 @d 07/07/09 @a ISAT.ST @v ISA6.00.00.01 @s migration ISATECH +
          @c Ajout Treat */
    }
    END.
  }
}