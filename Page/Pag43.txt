OBJECT Page 43 Sales Invoice
{
  OBJECT-PROPERTIES
  {
    Date=17/09/12;
    Time=09:37:06;
    Modified=Yes;
    Version List=NAVW16.00.10,KITNA6.00,ISA6.00,IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Invoice;
               FRA=Facture vente];
    SourceTable=Table36;
    SourceTableView=WHERE(Document Type=FILTER(Invoice));
    PageType=Document;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 IF UserMgt.GetSalesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetSalesFilter);
                   FILTERGROUP(0);
                 END;

                 //<<IMH01.ISAT.EBA
                 FirstRec := TRUE;
                 //>>IMH01.ISAT.EBA
               END;

    OnAfterGetRecord=BEGIN
                       SetGroupLines;
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetSalesFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 57      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Invoice;
                                 FRA=Fa&cture] }
      { 59      ;2   ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 FRA=Statistiques];
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CalcInvDiscForHeader;
                                 COMMIT;
                                 FORM.RUNMODAL(FORM::"Sales Statistics",Rec);
                               END;
                                }
      { 60      ;2   ;Action    ;
                      ShortCutKey=Maj+F7;
                      CaptionML=[ENU=Card;
                                 FRA=Fiche];
                      RunObject=Page 21;
                      RunFormLink=No.=FIELD(Sell-to Customer No.);
                      Image=EditLines }
      { 61      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 FRA=Co&mmentaires];
                      RunObject=Page 67;
                      RunFormLink=Document Type=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Image=ViewComments }
      { 116     ;2   ;Action    ;
                      CaptionML=[ENU=Dimensions;
                                 FRA=Axes analytiques];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 Rec.ShowDocDim;
                               END;
                                }
      { 162     ;2   ;Action    ;
                      CaptionML=[ENU=Approvals;
                                 FRA=Approbations];
                      Image=Approvals;
                      OnAction=VAR
                                 ApprovalEntries@1001 : Form 658;
                               BEGIN
                                 ApprovalEntries.Setfilters(DATABASE::"Sales Header","Document Type","No.");
                                 ApprovalEntries.RUN;
                               END;
                                }
      { 171     ;2   ;Separator  }
      { 172     ;2   ;Action    ;
                      CaptionML=[ENU=Credit Cards Transaction Lo&g Entries;
                                 FRA=êcritures du re&gistre des transactions des cartes de crÇdit];
                      RunObject=Page 829;
                      RunFormLink=Document Type=FIELD(Document Type),
                                  Document No.=FIELD(No.),
                                  Customer No.=FIELD(Bill-to Customer No.) }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 62      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 FRA=Fonction&s] }
      { 63      ;2   ;Action    ;
                      CaptionML=[ENU=Calculate &Invoice Discount;
                                 FRA=C&alculer remise facture];
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                               END;
                                }
      { 142     ;2   ;Separator  }
      { 134     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get St&d. Cust. Sales Codes;
                                 FRA=Extraire &codes vente client std];
                      OnAction=VAR
                                 StdCustSalesCode@1000 : Record 172;
                               BEGIN
                                 StdCustSalesCode.InsertSalesLines(Rec);
                               END;
                                }
      { 139     ;2   ;Separator  }
      { 64      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 FRA=Copier document];
                      Promoted=Yes;
                      Image=CopyDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopySalesDoc.SetSalesHeader(Rec);
                                 CopySalesDoc.RUNMODAL;
                                 CLEAR(CopySalesDoc);
                               END;
                                }
      { 115     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Move Negative Lines;
                                 FRA=DÇplacer lignes nÇgatives];
                      OnAction=BEGIN
                                 CLEAR(MoveNegSalesLines);
                                 MoveNegSalesLines.SetSalesHeader(Rec);
                                 MoveNegSalesLines.RUNMODAL;
                                 MoveNegSalesLines.ShowDocument;
                               END;
                                }
      { 141     ;2   ;Separator  }
      { 159     ;2   ;Action    ;
                      CaptionML=[ENU=Send A&pproval Request;
                                 FRA=Envoyer demande d'a&pprobation];
                      Image=SendApprovalRequest;
                      OnAction=VAR
                                 ApprovalMgt@1001 : Codeunit 439;
                               BEGIN
                                 IF ApprovalMgt.SendSalesApprovalRequest(Rec) THEN;
                               END;
                                }
      { 160     ;2   ;Action    ;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 FRA=Annuler demande d'appro&bation];
                      OnAction=VAR
                                 ApprovalMgt@1001 : Codeunit 439;
                               BEGIN
                                 IF ApprovalMgt.CancelSalesApprovalRequest(Rec,TRUE,TRUE) THEN;
                               END;
                                }
      { 161     ;2   ;Separator  }
      { 123     ;2   ;Action    ;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 FRA=&Lancer];
                      Promoted=Yes;
                      Image=ReleaseDoc;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReleaseSalesDoc@1000 : Codeunit 414;
                               BEGIN
                                 ReleaseSalesDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 124     ;2   ;Action    ;
                      CaptionML=[ENU=Re&open;
                                 FRA=R&ouvrir];
                      Image=ReOpen;
                      OnAction=VAR
                                 ReleaseSalesDoc@1001 : Codeunit 414;
                               BEGIN
                                 ReleaseSalesDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 168     ;2   ;Separator  }
      { 169     ;2   ;Action    ;
                      CaptionML=[ENU=Authorize;
                                 FRA=Autoriser];
                      OnAction=BEGIN
                                 Authorize;
                               END;
                                }
      { 170     ;2   ;Action    ;
                      CaptionML=[ENU=Void A&uthorize;
                                 FRA=Annuler l'a&utorisation];
                      OnAction=BEGIN
                                 Void;
                               END;
                                }
      { 69      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 FRA=&Validation] }
      { 70      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 FRA=Impression test];
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintSalesHeader(Rec);
                               END;
                                }
      { 71      ;2   ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 FRA=&Valider];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ApprovalMgt@1000 : Codeunit 439;
                                 PurchaseHeader@1001 : Record 38;
                               BEGIN
                                 IF ApprovalMgt.PrePostApprovalCheck(Rec,PurchaseHeader) THEN
                                   CODEUNIT.RUN(CODEUNIT::"Sales-Post (Yes/No)",Rec);
                               END;
                                }
      { 72      ;2   ;Action    ;
                      ShortCutKey=Maj+F9;
                      CaptionML=[ENU=Post and &Print;
                                 FRA=Valider et i&mprimer];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 PurchaseHeader@1000 : Record 38;
                                 ApprovalMgt@1001 : Codeunit 439;
                               BEGIN
                                 IF ApprovalMgt.PrePostApprovalCheck(Rec,PurchaseHeader) THEN
                                   CODEUNIT.RUN(CODEUNIT::"Sales-Post + Print",Rec);
                               END;
                                }
      { 73      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post &Batch;
                                 FRA=Valider par l&ot];
                      Image=PostBatch;
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"Batch Post Sales Invoices",TRUE,TRUE,Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           FRA=GÇnÇral] }

    { 2   ;2   ;Field     ;
                SourceExpr="No.";
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 4   ;2   ;Field     ;
                SourceExpr="Sell-to Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             SelltoCustomerNoOnAfterValidat;
                           END;
                            }

    { 128 ;2   ;Field     ;
                SourceExpr="Sell-to Contact No." }

    { 6   ;2   ;Field     ;
                SourceExpr="Sell-to Customer Name" }

    { 75  ;2   ;Field     ;
                SourceExpr="Sell-to Address";
                Importance=Additional }

    { 77  ;2   ;Field     ;
                SourceExpr="Sell-to Address 2";
                Importance=Additional }

    { 80  ;2   ;Field     ;
                SourceExpr="Sell-to Post Code";
                Importance=Additional }

    { 79  ;2   ;Field     ;
                SourceExpr="Sell-to City" }

    { 8   ;2   ;Field     ;
                SourceExpr="Sell-to Contact" }

    { 8016600;2;Field     ;
                SourceExpr="Posting Description" }

    { 12  ;2   ;Field     ;
                SourceExpr="Posting Date";
                Importance=Promoted }

    { 43  ;2   ;Field     ;
                SourceExpr="Document Date" }

    { 126 ;2   ;Field     ;
                SourceExpr="External Document No.";
                Importance=Promoted }

    { 10  ;2   ;Field     ;
                SourceExpr="Salesperson Code";
                OnValidate=BEGIN
                             SalespersonCodeOnAfterValidate;
                           END;
                            }

    { 129 ;2   ;Field     ;
                SourceExpr="Campaign No.";
                Importance=Additional }

    { 118 ;2   ;Field     ;
                SourceExpr="Responsibility Center";
                Importance=Additional }

    { 67  ;2   ;Field     ;
                SourceExpr="Assigned User ID";
                Importance=Additional }

    { 112 ;2   ;Field     ;
                SourceExpr=Status;
                Importance=Promoted }

    { 1100281006;2;Field  ;
                Name=GroupedLines;
                CaptionML=[ENU=Grouped Lines;
                           FRA=Lignes groupÇes];
                SourceExpr=GroupedLines;
                OnValidate=BEGIN
                             //<<IMH01.ISAT.EBA
                             SalesLinesVisible := NOT GroupedLines;
                             GrSalesLinesVisible := GroupedLines;
                             CurrPage.UPDATE(FALSE);
                             CurrPage.GrSalesLines.FORM.UpdateForm(FALSE);
                             //>>IMH01.ISAT.EBA
                           END;
                            }

    { 56  ;1   ;Part      ;
                Name=SalesLines;
                SubFormLink=Document No.=FIELD(No.);
                PagePartID=Page47;
                Visible=SalesLinesVisible }

    { 1100281005;1;Part   ;
                Name=GrSalesLines;
                SubFormLink=Document No.=FIELD(No.);
                PagePartID=Page50273;
                Visible=GrSalesLinesVisible;
                PartType=Page }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoicing;
                           FRA=Facturation] }

    { 14  ;2   ;Field     ;
                SourceExpr="Bill-to Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             BilltoCustomerNoOnAfterValidat;
                           END;
                            }

    { 132 ;2   ;Field     ;
                SourceExpr="Bill-to Contact No." }

    { 16  ;2   ;Field     ;
                SourceExpr="Bill-to Name" }

    { 18  ;2   ;Field     ;
                SourceExpr="Bill-to Address";
                Importance=Additional }

    { 20  ;2   ;Field     ;
                SourceExpr="Bill-to Address 2";
                Importance=Additional }

    { 85  ;2   ;Field     ;
                SourceExpr="Bill-to Post Code";
                Importance=Additional }

    { 22  ;2   ;Field     ;
                SourceExpr="Bill-to City" }

    { 24  ;2   ;Field     ;
                SourceExpr="Bill-to Contact";
                Importance=Additional }

    { 84  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 88  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 26  ;2   ;Field     ;
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 28  ;2   ;Field     ;
                SourceExpr="Due Date";
                Importance=Promoted }

    { 30  ;2   ;Field     ;
                SourceExpr="Payment Discount %" }

    { 32  ;2   ;Field     ;
                SourceExpr="Pmt. Discount Date";
                Importance=Additional }

    { 101 ;2   ;Field     ;
                SourceExpr="Payment Method Code" }

    { 121 ;2   ;Field     ;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;
                            }

    { 156 ;2   ;Field     ;
                SourceExpr="VAT Bus. Posting Group" }

    { 166 ;2   ;Field     ;
                SourceExpr="Credit Card No." }

    { 164 ;2   ;Field     ;
                CaptionML=[ENU=Cr. Card Number (Last 4 Digits);
                           FRA=NumÇro de carte de crÇdit (4ˇderniers chiffres)];
                SourceExpr=GetCreditcardNumber }

    { 1906801201;1;Group  ;
                CaptionML=[ENU=Shipping;
                           FRA=Livraison] }

    { 34  ;2   ;Field     ;
                SourceExpr="Ship-to Code";
                Importance=Promoted }

    { 36  ;2   ;Field     ;
                SourceExpr="Ship-to Name" }

    { 38  ;2   ;Field     ;
                SourceExpr="Ship-to Address";
                Importance=Additional }

    { 40  ;2   ;Field     ;
                SourceExpr="Ship-to Address 2";
                Importance=Additional }

    { 93  ;2   ;Field     ;
                SourceExpr="Ship-to Post Code";
                Importance=Promoted }

    { 42  ;2   ;Field     ;
                SourceExpr="Ship-to City" }

    { 44  ;2   ;Field     ;
                SourceExpr="Ship-to Contact";
                Importance=Additional }

    { 90  ;2   ;Field     ;
                SourceExpr="Location Code" }

    { 46  ;2   ;Field     ;
                SourceExpr="Shipment Method Code" }

    { 103 ;2   ;Field     ;
                SourceExpr="Shipping Agent Code" }

    { 105 ;2   ;Field     ;
                SourceExpr="Package Tracking No.";
                Importance=Additional }

    { 48  ;2   ;Field     ;
                SourceExpr="Shipment Date";
                Importance=Promoted }

    { 8016601;2;Field     ;
                SourceExpr="Requested Delivery Date" }

    { 8016602;2;Field     ;
                SourceExpr="Promised Delivery Date" }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           FRA=International] }

    { 107 ;2   ;Field     ;
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrencyCodeOnAfterValidate;
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 50  ;2   ;Field     ;
                SourceExpr="EU 3-Party Trade" }

    { 52  ;2   ;Field     ;
                SourceExpr="Transaction Type" }

    { 99  ;2   ;Field     ;
                SourceExpr="Transaction Specification" }

    { 54  ;2   ;Field     ;
                SourceExpr="Transport Method" }

    { 95  ;2   ;Field     ;
                SourceExpr="Exit Point" }

    { 97  ;2   ;Field     ;
                SourceExpr=Area }

    { 1100281004;1;Group  ;
                Name=ServiceInformation;
                CaptionML=[ENU=Service Information;
                           FRA=Information Service];
                GroupType=Group }

    { 1100281003;2;Field  ;
                SourceExpr="Service No." }

    { 1100281002;2;Field  ;
                SourceExpr="Service Header No." }

    { 1100281001;2;Field  ;
                SourceExpr="Intervention Line No." }

    { 1100281000;2;Field  ;
                SourceExpr="Quote Line No." }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1903720907;1;Part   ;
                SubFormLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page9080;
                Visible=FALSE;
                PartType=Page }

    { 1907234507;1;Part   ;
                SubFormLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9081;
                Visible=FALSE;
                PartType=Page }

    { 1902018507;1;Part   ;
                SubFormLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9082;
                Visible=TRUE;
                PartType=Page }

    { 1900316107;1;Part   ;
                SubFormLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page9084;
                Visible=TRUE;
                PartType=Page }

    { 1906127307;1;Part   ;
                SubFormLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9087;
                ProviderID=56;
                Visible=FALSE;
                PartType=Page }

    { 1901314507;1;Part   ;
                SubFormLink=No.=FIELD(No.);
                PagePartID=Page9089;
                ProviderID=56;
                Visible=TRUE;
                PartType=Page }

    { 1906354007;1;Part   ;
                SubFormLink=Table ID=CONST(36),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.),
                            Status=CONST(Open);
                PagePartID=Page9092;
                Visible=FALSE;
                PartType=Page }

    { 1907012907;1;Part   ;
                SubFormLink=No.=FIELD(No.);
                PagePartID=Page9108;
                ProviderID=56;
                Visible=FALSE;
                PartType=Page }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      SalesSetup@1000 : Record 311;
      ChangeExchangeRate@1001 : Form 511;
      CopySalesDoc@1002 : Report 292;
      MoveNegSalesLines@1006 : Report 6699;
      ReportPrint@1003 : Codeunit 228;
      UserMgt@1004 : Codeunit 5700;
      SalesInfoPaneMgt@1005 : Codeunit 7171;
      SalesHistoryBtnVisible@19034839 : Boolean INDATASET;
      BillToCommentPictVisible@19001287 : Boolean INDATASET;
      BillToCommentBtnVisible@19078935 : Boolean INDATASET;
      SalesHistoryStnVisible@19031688 : Boolean INDATASET;
      SalesLinesVisible@1100281002 : Boolean INDATASET;
      GrSalesLinesVisible@1100281001 : Boolean INDATASET;
      GroupedLines@1100281000 : Boolean;
      FirstRec@1100281003 : Boolean;

    LOCAL PROCEDURE UpdateInfoPanel@2();
    VAR
      DifferSellToBillTo@1000 : Boolean;
    BEGIN
      DifferSellToBillTo := "Sell-to Customer No." <> "Bill-to Customer No.";
      SalesHistoryBtnVisible := DifferSellToBillTo;
      BillToCommentPictVisible := DifferSellToBillTo;
      BillToCommentBtnVisible := DifferSellToBillTo;
      SalesHistoryStnVisible := SalesInfoPaneMgt.DocExist(Rec,"Sell-to Customer No.");
      IF DifferSellToBillTo THEN
        SalesHistoryBtnVisible := SalesInfoPaneMgt.DocExist(Rec,"Bill-to Customer No.")
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.SalesLines.FORM.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE SelltoCustomerNoOnAfterValidat@19034782();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SalespersonCodeOnAfterValidate@19011896();
    BEGIN
      CurrPage.SalesLines.FORM.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE BilltoCustomerNoOnAfterValidat@19044114();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.SalesLines.FORM.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.SalesLines.FORM.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CurrencyCodeOnAfterValidate@19068298();
    BEGIN
      CurrPage.SalesLines.FORM.UpdateForm(TRUE);
    END;

    PROCEDURE SetGroupLines@1100281003();
    VAR
      lInvMatrixSetup@1100281000 : Record 50137;
    BEGIN
      //<<IMH02.SB
      {
      GroupedLines := FALSE;
      IF ("Corporate No." <> '') OR ("Service Order Type" <> '') OR ("Corporate Region Code" <> '')
      THEN BEGIN
        lInvMatrixSetup.SETRANGE("Corporate No.","Corporate No.");
        lInvMatrixSetup.SETRANGE("Service Order Type","Service Order Type");
        lInvMatrixSetup.SETRANGE("Corporate Region Code","Corporate Region Code");
        IF lInvMatrixSetup.FINDFIRST THEN BEGIN
          GroupedLines := lInvMatrixSetup."Edit Line Regroup Method" = lInvMatrixSetup."Edit Line Regroup Method"::Cumulative;
        END;
      END;
      }

      //<<IMH01.ISAT.EBA
      IF (xRec."No." <> Rec."No.") OR FirstRec THEN BEGIN
        GroupedLines := Rec.IsGroupedLines;

        FirstRec := FALSE;
      END;
      //>>IMH01.ISAT.EBA


      SalesLinesVisible := NOT GroupedLines;
      GrSalesLinesVisible := GroupedLines;
      IF GroupedLines THEN BEGIN
        CurrPage.GrSalesLines.FORM.GroupLines(Rec);
      END;
      CurrPage.GrSalesLines.FORM.UpdateForm(FALSE);
    END;

    BEGIN
    {
      /** @r IMH02 @d 22/09/11 @a ISAT.SB @v IMH6.01.145 @s Regroupement visuelle des factures Automatique */
      /** @r IMH01 @d 25/06/11 @a ISAT.EBA @v IMH6.01.145 @s Regroupement visuelle des factures */
      /**@r ISA01 @d 07/07/09 @a ISAT.ST @v ISA6.00.00.01 @s migration ISATECH +
         @c Ajout Posting Description, Date livraison demandÇe/confirmÇe */
    }
    END.
  }
}