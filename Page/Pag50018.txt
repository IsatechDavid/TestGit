OBJECT Page 50018 Abi. Camp. Geo. Prov. Setup
{
  OBJECT-PROPERTIES
  {
    Date=25/04/12;
    Time=09:46:07;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Abi. Camp. Geo. Setup List;
               FRA=Liste des param‚trages comp. g‚o. ev‚nement climatique prestataire];
    InsertAllowed=Yes;
    DeleteAllowed=Yes;
    ModifyAllowed=Yes;
    SourceTable=Table50037;
    DelayedInsert=Yes;
    PopulateAllFields=Yes;
    PageType=List;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Additional;
                                FRA=Nouveau,Processus,Etat,Compl‚ment];
    OnInit=BEGIN
             IsEditable := TRUE;
           END;

    OnOpenPage=BEGIN
                 // <<IMH03.ISAT.MA
                 //IF GETFILTER("Provider No.") <> '' THEN
                 //  IsEditable := ProviderMgt.IsEditable(GETFILTER("Provider No."));
                 // >>IMH03.ISAT.MA

                 SetupTypeEnable := ("Setup Type" <> "Setup Type"::Manual);
                 //>>IMH05.PC
               END;

    OnAfterGetRecord=BEGIN
                       //IsEditable := (ProviderMgt.IsEditable("Provider No.")); // IMH03.ISAT.MA

                       //<<IMH05.PC
                       SetupTypeEnable := ("Setup Type" <> "Setup Type"::Manual);
                       //>>IMH05.PC
                     END;

    OnNewRecord=VAR
                  lContactAltAddress@1100281000 : Record 5051;
                  lGeographicalReference@1100281002 : Record 50013;
                BEGIN
                  {lContactAltAddress.RESET;
                  lContactAltAddress.SETRANGE("Contact No.","Provider No.");
                  lContactAltAddress.SETRANGE("Geo. Reference Address",TRUE);
                  IF lContactAltAddress.FINDFIRST THEN
                  BEGIN
                    IF (lContactAltAddress."Geo. Reference Code" <> '') THEN
                    BEGIN
                      IF lGeographicalReference.GET(lContactAltAddress."Geo. Reference Code") THEN
                      BEGIN
                        IF ("Setup Type" = "Setup Type"::"City (Distance)") THEN
                          "Start Reference Code" := lContactAltAddress."Geo. Reference Code";
                        IF ("Setup Type" = "Setup Type"::Area) THEN
                          "Start Reference Code" := lGeographicalReference."Area Code";
                        IF ("Setup Type" = "Setup Type"::Territory) THEN
                          "Start Reference Code" := lGeographicalReference."Admin. Territory Code";
                        IF ("Setup Type" = "Setup Type"::Country) THEN
                          "Start Reference Code" := lGeographicalReference."Country/Region Code";
                      END;
                    END;
                  END;
                  }
                  //<<IMH05.PC
                  SetupTypeEnable := TRUE;
                  //>>IMH05.PC
                END;

    OnInsertRecord=BEGIN
                     CheckDistance;
                   END;

    OnModifyRecord=BEGIN
                     //<<IMH05.PC
                     IF "Setup Type" = "Setup Type"::Manual THEN BEGIN
                       EXIT(FALSE);
                     END;
                     //>>IMH05.PC
                     CheckDistance;
                   END;

    OnQueryClosePage=VAR
                       lAbiCampGeoProvSetup@1100281001 : Record 50037;
                     BEGIN
                       CheckDistance;

                       lAbiCampGeoProvSetup.RESET;
                       lAbiCampGeoProvSetup.SETRANGE("Campaign No.","Campaign No.");
                       lAbiCampGeoProvSetup.SETRANGE("Provider No.","Provider No.");
                       lAbiCampGeoProvSetup.SETRANGE(Generated,FALSE);
                       IF NOT lAbiCampGeoProvSetup.ISEMPTY THEN
                         MESSAGE(Text003);
                     END;

    ActionList=ACTIONS
    {
      { 1100281002;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100281031;1 ;Action    ;
                      Name=DetailAbilityGeo;
                      CaptionML=[ENU=Detail Ability G&eo.;
                                 FRA=Detail c&omp. g‚o.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Segment;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 AbilityGeoMgt.LookupAbiCampGeoProvider(Rec);
                               END;
                                }
      { 1100281030;1 ;Action    ;
                      Name=GenerateAbilityGeo;
                      CaptionML=[ENU=&Generate;
                                 FRA=&G‚n‚rer];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Setup;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lProviderSpecialization@1100281001 : Record 50006;
                               BEGIN
                                 IF IsEditable THEN BEGIN
                                   AbilityGeoMgt.GenerateCampAbilityGeoProvider(Rec);
                                   MODIFY;
                                 END;
                               END;
                                }
      { 1100281001;1 ;Action    ;
                      Name=Map;
                      CaptionML=[ENU=Standard Map;
                                 FRA=Carte];
                      Promoted=Yes;
                      Image=Segment;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lHtmlPage@1100281000 : Page 50174;
                               BEGIN
                                 lHtmlPage.LoadCampaignProviderMap("Campaign No.","Provider No.");
                                 lHtmlPage.RUNMODAL();
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100281000;1;Group  ;
                Editable=IsEditable;
                GroupType=Repeater }

    { 1100281006;2;Field  ;
                CaptionML=[ENU=Generated;
                           FRA=G‚n‚r‚];
                SourceExpr=Generated;
                Editable=FALSE }

    { 1100281003;2;Field  ;
                SourceExpr="Campaign No.";
                Visible=ProviderNoVisible;
                Editable=FALSE }

    { 1100281004;2;Field  ;
                SourceExpr="Setup Type";
                Editable=SetupTypeEnable;
                OnValidate=VAR
                             lContactAltAddress@1100281000 : Record 5051;
                             lGeographicalReference@1100281002 : Record 50013;
                           BEGIN
                             {IF ("Setup Type" <> xRec."Setup Type") THEN
                             BEGIN
                               lContactAltAddress.RESET;
                               lContactAltAddress.SETRANGE("Contact No.","Provider No.");
                               lContactAltAddress.SETRANGE("Geo. Reference Address",TRUE);
                               IF lContactAltAddress.FINDFIRST THEN
                               BEGIN
                                 IF (lContactAltAddress."Geo. Reference Code" <> '') THEN
                                 BEGIN
                                   IF lGeographicalReference.GET(lContactAltAddress."Geo. Reference Code") THEN
                                   BEGIN
                                     IF ("Setup Type" = "Setup Type"::"City (Distance)") THEN
                                       "Start Reference Code" := lContactAltAddress."Geo. Reference Code";
                                     IF ("Setup Type" = "Setup Type"::Area) THEN
                                       "Start Reference Code" := lGeographicalReference."Area Code";
                                     IF ("Setup Type" = "Setup Type"::Territory) THEN
                                       "Start Reference Code" := lGeographicalReference."Admin. Territory Code";
                                     IF ("Setup Type" = "Setup Type"::Country) THEN
                                       "Start Reference Code" := lGeographicalReference."Country/Region Code";
                                   END;
                                 END;
                               END;
                             END;
                             }
                           END;
                            }

    { 1100281018;2;Field  ;
                SourceExpr="Start Reference Text";
                Editable=SetupTypeEnable }

    { 1100281007;2;Field  ;
                SourceExpr="Start Reference Code";
                Visible=FALSE;
                Editable=FALSE }

    { 1100281011;2;Field  ;
                DrillDown=No;
                CaptionML=[ENU=Start Ref. Description;
                           FRA=D‚signation r‚f‚rence d‚part];
                SourceExpr=GetAreaDescription("Start Reference Code");
                Editable=FALSE;
                StyleExpr=TRUE }

    { 1100281026;2;Field  ;
                SourceExpr="Distance (km)";
                Editable=SetupTypeEnable }

    { 1100281009;2;Field  ;
                SourceExpr="Creation Date";
                Visible=FALSE }

    { 1100281020;2;Field  ;
                SourceExpr="Creation User ID";
                Visible=FALSE }

    { 1100281022;2;Field  ;
                SourceExpr="Last Modification Date";
                Visible=FALSE }

    { 1100281024;2;Field  ;
                SourceExpr="Last Modification User ID";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      AbilityGeoMgt@1100281000 : Codeunit 50011;
      ProviderMgt@1100281002 : Codeunit 50018;
      IsEditable@1100281001 : Boolean INDATASET;
      ProviderNoVisible@1100281003 : Boolean INDATASET;
      Text001@1100281004 : TextConst 'ENU=You don''t fill %1. Do you want to continue ?;FRA=Vous n''avez pas renseign‚ %1. Souhaitez-vous continuer ?';
      Text003@1100281006 : TextConst 'FRA=Il y a au moins une ligne de comp‚tence g‚ographique qui n''a pas ‚t‚ g‚n‚r‚e !';
      SetupTypeEnable@1100281005 : Boolean INDATASET;
      Text004@1100281007 : TextConst 'FRA=La sp‚cialit‚ n''est pas d‚clar‚e urgente';
      Text006@1100281009 : TextConst 'ENU=Global;FRA=Globale';
      SpecializationCodeFilter@1100281010 : Code[20];
      Text007@1100281011 : TextConst 'ENU=You can''t delete a global line from sp‚cialization;FRA=Vous ne pouvez pas supprimer une ligne globale depuis une sp‚cialit‚.';
      SpecializationFilter@1100281012 : Boolean;
      SpecializationEditable@1100281013 : Boolean INDATASET;

    PROCEDURE CheckDistance@1100281001();
    BEGIN
      IF "Start Reference Code" = '' THEN EXIT;
      IF ISEMPTY THEN
        EXIT;
      IF ("Setup Type" = "Setup Type"::"City (Distance)") AND ("Distance (km)" = 0) THEN
        IF NOT CONFIRM(STRSUBSTNO(Text001, FIELDCAPTION("Distance (km)"))) THEN
          ERROR('');
    END;

    BEGIN
    {
      /** @r IMH06 @d 25/04/12 @a ISAT.NFO @v IMH6.01.020 @s Gestion EVC @c Suppression colonne exclusion */
      /** @r IMH05 @d 16/07/11 @a ISAT.PC @v IMH6.01.020 @s Gestion prestataire @c Pas de modification si type est manuel */
      /** @r IMH04 @d 26/01/11 @a ISAT.LLT @v IMH6.01.020 @s Gestion prestataire @c Design des actions */
      /** @r IMH03 @d 09/11/10 @a ISAT.MA @v IMH6.01.020 @s Gestion prestataire
          @c Gestion des modifications : Ajout et valorisation de la variable IsEditable
          @c affect‚ … la propriet‚ "Editable" du Repeater
          @c test‚ pour lancement de la fonction G‚n‚rer                                 */
      /** @r IMH02 @d 29/10/10 @a isat.LLT @v IMH6.01.022 @s Comp‚tence g‚ographique @c RefreshOnActivate … Yes pour flowfield */
      /** @r IMH01 @d 28/10/10 @a isat.PC @v IMH6.01.022 @s Comp‚tence g‚ographique @c Creation */
    }
    END.
  }
}