OBJECT Page 50019 Normalize Contact Alt. Address
{
  OBJECT-PROPERTIES
  {
    Date=01/12/11;
    Time=11:27:57;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Contact Alt. Address List;
               FRA=Normalisation adresse de contact];
    SourceTable=Table5051;
    DataCaptionFields=Contact No.,Code;
    PageType=Card;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             CurrPage.LOOKUPMODE := TRUE;
           END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100281000;1;Field  ;
                CaptionML=[ENU=Address;
                           FRA=Adresse];
                SourceExpr=txtAddress;
                OnValidate=BEGIN
                             RefreshList();
                           END;
                            }

    { 1100281001;1;Field  ;
                CaptionML=[ENU=Post Code;
                           FRA=Code postal];
                SourceExpr=txtPostCode;
                OnValidate=BEGIN
                             PostCode.ValidatePostCode(txtCity,txtPostCode,txtCountry);      //IMH11 Ajout Code pays
                             RefreshList();
                           END;

                OnLookup=VAR
                           lPostCode@1100281000 : Record 225;
                         BEGIN
                           PostCode.LookUpPostCode(txtCity,txtPostCode,txtCountry,TRUE);
                         END;
                          }

    { 1100281002;1;Field  ;
                CaptionML=[ENU=city;
                           FRA=Ville];
                SourceExpr=txtCity;
                OnValidate=BEGIN
                             PostCode.ValidateCity(txtCity,txtPostCode,txtCountry);
                             RefreshList();
                           END;

                OnLookup=VAR
                           lReturnValues@1100281000 : Boolean;
                         BEGIN
                           PostCode.LookUpCity(txtCity,txtPostCode,txtCountry,TRUE);
                         END;
                          }

    { 1100281003;1;Field  ;
                CaptionML=[ENU=Contry Region Code;
                           FRA=Pays];
                SourceExpr=txtCountry }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 8   ;2   ;Field     ;
                SourceExpr=Address }

    { 14  ;2   ;Field     ;
                SourceExpr="Post Code" }

    { 12  ;2   ;Field     ;
                SourceExpr=City }

  }
  CODE
  {
    VAR
      txtCode@1100281000 : Code[10];
      txtAddress@1100281001 : Text[50];
      txtPostCode@1100281002 : Code[10];
      txtCity@1100281003 : Text[50];
      PostCode@1100281004 : Record 225;
      txtCountry@1100281005 : Code[10];
      ContactAltAddrBuffer@1100281006 : TEMPORARY Record 5051;
      ContactAltAddrBuffer2@1100281008 : TEMPORARY Record 5051;
      lAbilityGeoMgt@1100281007 : Codeunit 50011;

    PROCEDURE LoadTable@1100281004(SourceContactAltAddr@1100281002 : Record 5051;VAR pContactAltAddress@1100281000 : TEMPORARY Record 5051);
    VAR
      i@1100281001 : Integer;
    BEGIN
      txtAddress := SourceContactAltAddr.Address;
      txtPostCode := SourceContactAltAddr."Post Code";
      txtCity := SourceContactAltAddr.City;
      txtCountry := SourceContactAltAddr."Country/Region Code";

      //IF (txtAddress = '') OR (txtPostCode = '') OR (txtCity = '') THEN
      IF (txtPostCode = '') OR (txtCity = '') THEN
        EXIT;
      DELETEALL();
      IF pContactAltAddress.COUNT() > 0 THEN BEGIN
        IF pContactAltAddress.FINDSET() THEN BEGIN
          REPEAT
            Rec := pContactAltAddress;
            INSERT();
          UNTIL pContactAltAddress.NEXT()=0;
        END;
      END;
      IF FINDFIRST() THEN;
    END;

    PROCEDURE RefreshList@1100281001();
    BEGIN
      IF UPPERCASE(USERID)= 'ADMINISATECH' THEN MESSAGE('OK');

      ContactAltAddrBuffer2.DELETEALL();
      ContactAltAddrBuffer2."Post Code" := txtPostCode;
      ContactAltAddrBuffer2.City := txtCity;
      ContactAltAddrBuffer2."Country/Region Code" := txtCountry;
      ContactAltAddrBuffer2.Address := txtAddress;
      ContactAltAddrBuffer2.INSERT();
      ContactAltAddrBuffer.DELETEALL();
      lAbilityGeoMgt.GetContactAltAddr(ContactAltAddrBuffer2,ContactAltAddrBuffer);
      LoadTable(ContactAltAddrBuffer2,ContactAltAddrBuffer);
    END;

    BEGIN
    {
      /** @r IMH01 @d 24/12/10 @a isat.NFO @v IMH6.01.022 @s Comp‚tence g‚ographique @c Creation */
    }
    END.
  }
}