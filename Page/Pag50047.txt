OBJECT Page 50047 Service Search Card
{
  OBJECT-PROPERTIES
  {
    Date=12/06/14;
    Time=16:09:31;
    Modified=Yes;
    Version List=IMH6.01,IMH6.01.P010;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Search Card;
               FRA=Recherche de service];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table5900;
    PageType=Card;
    SourceTableTemporary=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Additional;
                                FRA=Nouveau,Processus,Etat,Compl‚ment];
    OnInit=BEGIN
             ButtonCreateEnable := TRUE;
             DisplayResultForm;
             CurrPage.ServTimeReg.FORM.InitSimpleMode(1);
             //<<IMH11
             IntervStatusVide := TRUE;
             IntervStatusInProgress := TRUE;
             IntervStatusClosed := TRUE;
             IntervStatusCancel := TRUE;
             IntervStatusSuspended := TRUE;
             //>>IMH11
           END;

    OnOpenPage=BEGIN
                 EnableFields;
                 "Document Type" := "Document Type"::Invoice;
                 "No." := '';
                 INSERT(FALSE);

                 IF (ServiceNo <> '') OR ("No." <> '') OR ("Contact No." <> '') OR (ServiceHeaderNo <> '') THEN
                   //<<IMH11
                   //SearchResults(FALSE);
                   SearchResults(TRUE);
                   //>>IMH11
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100281011;1 ;Action    ;
                      CaptionML=[ENU=Re&set;
                                 FRA=Remi&se … vide];
                      Promoted=Yes;
                      Image=ClearFilter;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ResetFields;
                               END;
                                }
      { 1100281006;1 ;Action    ;
                      Name=ButtonSearch;
                      CaptionML=[ENU=Sea&rch;
                                 FRA=&Recherche];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SearchResults(TRUE);
                               END;
                                }
      { 1100281036;1 ;Action    ;
                      Name=ButtonCreateService;
                      CaptionML=[ENU=&Create Service;
                                 FRA=&Cr‚er service];
                      Promoted=Yes;
                      Visible=false;
                      Enabled=ButtonCreateEnable;
                      Image=AddAction;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CreateService(TRUE);
                               END;
                                }
      { 1000000001;1 ;Action    ;
                      Name=<Action1100281011>;
                      CaptionML=[ENU=Extractt;
                                 FRA=Extraire interventions];
                      Promoted=Yes;
                      Visible=ButtonExtractVisible;
                      Image=ExecuteBatch;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Extract;//IMH09
                               END;
                                }
      { 1100281005;0 ;ActionContainer;
                      Name=Contact;
                      ActionContainerType=RelatedInformation }
      { 1100281012;1 ;Action    ;
                      Name=ButtonSearchContact;
                      CaptionML=[ENU=Search contact;
                                 FRA=Recherche b‚n‚ficiaire];
                      Promoted=Yes;
                      Image=Find;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SearchContact;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100281000;1;Group  ;
                CaptionML=FRA=G‚n‚ral }

    { 1100281001;2;Field  ;
                CaptionML=[ENU=Search Type;
                           FRA=Type de recherche];
                OptionCaptionML=[ENU=Service,Service Header,Service Intervention Line;
                                 FRA=Service,Ligne produit,Intervention];
                SourceExpr=Type;
                Style=Strong;
                StyleExpr=TRUE;
                OnValidate=BEGIN
                             //ResetFields;
                             DisplayResultForm;
                             EnableFields;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100281029;2;Field  ;
                CaptionML=[ENU=Service  No.;
                           FRA=Nø service];
                BlankZero=Yes;
                SourceExpr=ServiceNo;
                Enabled=TRUE;
                Editable=TRUE;
                OnValidate=BEGIN
                             SearchResults(FALSE);
                           END;
                            }

    { 1100281008;2;Group  ;
                Visible=IntervLineVisible;
                GroupType=Group }

    { 1100281014;3;Field  ;
                Name=ProviderNo;
                CaptionML=[ENU=Provider;
                           FRA=Prestataire];
                SourceExpr=ProviderNo;
                TableRelation=Provider.No.;
                Editable=TRUE;
                OnValidate=VAR
                             lContactSearchMgt@1100281001 : Codeunit 50097;
                             lContact@1100281002 : Record 5050;
                           BEGIN
                             //<<IMH05.ST
                             IF lContactSearchMgt.ContactInput(ProviderNo, lContact."Service Contact"::Provider, TRUE) THEN
                               VALIDATE("Provider No.", ProviderNo);
                             SearchResults(FALSE);
                             ContactNo := "Contact No.";
                             //>>IMH05.ST
                           END;
                            }

    { 1100281003;2;Field  ;
                Name=ContactNo;
                CaptionML=[ENU=Contact No.;
                           FRA=Nø contact];
                SourceExpr=ContactNo;
                Enabled=TRUE;
                Editable=TRUE;
                OnValidate=VAR
                             lContactSearchMgt@1100281001 : Codeunit 50097;
                             lContact@1100281002 : Record 5050;
                           BEGIN
                             IF lContactSearchMgt.ContactInput(ContactNo, lContact."Service Contact"::Beneficiary, TRUE) THEN BEGIN
                               VALIDATE("Contact No.", ContactNo);
                               SearchResults(FALSE);
                             END;
                             ContactNo := "Contact No.";
                           END;
                            }

    { 1100281023;2;Field  ;
                CaptionML=[ENU=Contact Name;
                           FRA=Nom b‚n‚ficiaire];
                SourceExpr="Contact Name";
                Enabled=TRUE;
                Editable=TRUE;
                OnValidate=BEGIN
                             SearchResults(FALSE);
                           END;
                            }

    { 1100281002;2;Field  ;
                CaptionML=[ENU=Member No.;
                           FRA=Nø b‚n‚ficiaire];
                SourceExpr=MemberNo;
                OnValidate=BEGIN
                             SearchResults(FALSE);//IMH03
                           END;
                            }

    { 1100281009;2;Field  ;
                Name=CorporateNo;
                SourceExpr="Corporate No.";
                TableRelation=Customer.No. WHERE (Service Contact=CONST(Corporate Customer),
                                                  Service Corporate=CONST(Yes));
                Enabled=TRUE;
                Editable=TRUE;
                OnValidate=VAR
                             lCustomer@1100281001 : Record 18;
                           BEGIN
                             SearchResults(FALSE);

                             //IF lCustomer.GET("Corporate No.") THEN
                             CALCFIELDS("Corporate Name");
                           END;
                            }

    { 1100281010;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="Corporate Name" }

    { 1100281013;2;Field  ;
                Name=CorporateRegionCode;
                SourceExpr="Corporate Region Code";
                Importance=Additional;
                Enabled=TRUE;
                Editable=TRUE;
                OnValidate=BEGIN
                             SearchResults(FALSE);
                           END;
                            }

    { 1100281004;2;Group  ;
                Visible=ServiceHeaderVisible;
                GroupType=Group }

    { 1100281017;3;Field  ;
                Name=ServiceOrderType;
                CaptionML=[ENU=Service Order Type;
                           FRA=Type produit];
                SourceExpr=ServiceOrderType;
                TableRelation="Service Order Type";
                Editable=TRUE;
                OnValidate=BEGIN
                             SearchResults(FALSE);
                           END;
                            }

    { 1100281007;3;Field  ;
                Name=ServiceHeaderNo;
                CaptionML=[ENU=No.;
                           FRA=Nø ligne produit];
                SourceExpr=ServiceHeaderNo;
                Editable=TRUE }

    { 1100281022;2;Group  ;
                CaptionML=[ENU=Intervention Status;
                           FRA=Statut intervention];
                Visible=IntervLineVisible;
                GroupType=Group }

    { 1100281024;3;Field  ;
                CaptionML=[ENU=Empty;
                           FRA=Vide];
                SourceExpr=IntervStatusVide }

    { 1100281025;3;Field  ;
                CaptionML=[ENU=In progress;
                           FRA=En cours];
                SourceExpr=IntervStatusInProgress }

    { 1100281026;3;Field  ;
                CaptionML=[ENU=Closed;
                           FRA=Cl“tur‚e];
                SourceExpr=IntervStatusClosed }

    { 1100281027;3;Field  ;
                CaptionML=[ENU=Cancel;
                           FRA=Annul‚e];
                SourceExpr=IntervStatusCancel }

    { 1100281028;3;Field  ;
                CaptionML=[ENU=Suspended;
                           FRA=Suspendu];
                SourceExpr=IntervStatusSuspended }

    { 1100281016;2;Group  ;
                Visible=ServiceVisible;
                GroupType=Group }

    { 1100281015;3;Field  ;
                Name=referenceNo;
                CaptionML=[ENU=Reference No.;
                           FRA=Nø ‚vŠnement];
                SourceExpr=ReferenceNo }

    { 1100281030;3;Field  ;
                Name=IMAReferenceNo;
                CaptionML=[ENU=IMA Reference No.;
                           FRA=Nø r‚f‚rence IMA];
                SourceExpr=IMAReferenceNo }

    { 1100281021;2;Field  ;
                Name=StartCreateDate;
                CaptionML=[ENU=Creation Date;
                           FRA=Date cr‚ation];
                SourceExpr=DateTimeFilter;
                Importance=Additional;
                OnValidate=BEGIN
                             ApplicationMgt.MakeDateTimeFilter(DateTimeFilter);
                             CurrPage.UPDATE;
                             SearchResults(FALSE);
                           END;
                            }

    { 1100281032;1;Part   ;
                Name=ServiceInterventionList;
                CaptionML=[ENU=Intervention Lines;
                           FRA=Interventions trouv‚es];
                PagePartID=Page50044;
                Visible=ServiceInterventionListVisible }

    { 1100281031;1;Part   ;
                Name=ServiceHeaderList;
                CaptionML=[ENU=Service Headers;
                           FRA=Lignes produit trouv‚es];
                PagePartID=Page50045;
                Visible=ServiceHeaderListVisible }

    { 1100281020;1;Part   ;
                Name=ServiceList;
                CaptionML=[ENU=Services;
                           FRA=Services trouv‚s];
                PagePartID=Page50046;
                Visible=ServiceListVisible }

    { 1100281018;0;Container;
                ContainerType=FactBoxArea }

    { 1100281019;1;Part   ;
                Name=ServTimeReg;
                CaptionML=[ENU=Last Services;
                           FRA=Derniers services];
                SubFormView=SORTING(User ID,Start DateTime)
                            ORDER(Descending);
                PagePartID=Page50284;
                PartType=Page }

  }
  CODE
  {
    VAR
      TempServiceFilter@1100281000 : Record 50066;
      TempServiceHeaderFilter@1100281017 : Record 5900;
      TempServiceIntervFilter@1100281019 : Record 50075;
      ServiceSearchMgt@1100281020 : Codeunit 50060;
      ApplicationMgt@1100281004 : Codeunit 1;
      Type@1100281001 : 'Service,Service Header,Service Intervention Line';
      DateTimeFilter@1100281005 : Text[1024] INDATASET;
      ResultServiceIntervLine@1100281022 : Integer;
      ServiceHeaderNo@1100281008 : Code[20];
      MemberNo@1100281010 : Code[20];
      ServiceOrderType@1100281009 : Code[10];
      ReferenceNo@1100281027 : Code[30];
      ResultServiceHeader@1100281003 : Code[10];
      ResultService@1100281011 : Code[20];
      IMAReferenceNo@1100281035 : Code[30];
      ResultCount@1100281029 : Integer;
      CloseFromCreate@1100281014 : Boolean;
      Search@1100281013 : Boolean;
      ContactFilterSet@1100281018 : Boolean;
      ServiceListVisible@19046785 : Boolean INDATASET;
      ServiceHeaderListVisible@19059804 : Boolean INDATASET;
      ServiceInterventionListVisible@19068952 : Boolean INDATASET;
      ButtonCreateEnable@19005106 : Boolean INDATASET;
      ServiceVisible@1100281016 : Boolean INDATASET;
      ServiceHeaderVisible@1100281021 : Boolean INDATASET;
      IntervLineVisible@1100281026 : Boolean INDATASET;
      ServiceEnable@1100281012 : Boolean INDATASET;
      ServiceOrderTypeEnable@19014886 : Boolean INDATASET;
      ServiceHeaderEnable@19026043 : Boolean INDATASET;
      Text001@1100281024 : TextConst 'ENU=Search in progress;FRA=Recherche en cours ...';
      ProvEnable@1100281023 : Boolean INDATASET;
      RunFromCodeunit@1100281007 : Boolean;
      SearchInProgress@1100281028 : Boolean;
      DialBox@1100281025 : Dialog;
      ContactNo@1100281015 : Text[80];
      ProviderNo@1100281002 : Text[80];
      ServiceNo@1100281006 : Code[20];
      ButtonExtractVisible@1000000000 : Boolean INDATASET;
      IntervStatusVide@1100281030 : Boolean;
      IntervStatusInProgress@1100281031 : Boolean;
      IntervStatusClosed@1100281032 : Boolean;
      IntervStatusCancel@1100281033 : Boolean;
      IntervStatusSuspended@1100281034 : Boolean;

    PROCEDURE SetServiceFilter@1100281005(VAR pService@1100281000 : Record 50066);
    BEGIN
      IF pService.GETFILTER("Service No.") <> '' THEN
        ServiceNo := pService.GETFILTER("Service No.");
      ContactNo := pService.GETFILTER("Contact No.");
      "Contact Name" := pService.GETFILTER("Contact Name");
      "Corporate No." := pService.GETFILTER("Corporate No.");
      "Corporate Region Code" := pService.GETFILTER("Corporate Region Code");
      "Contract Form Code" := pService.GETFILTER("Contract Form Code");
      ReferenceNo := pService.GETFILTER("Reference No.");
      IMAReferenceNo := pService.GETFILTER("IMA Reference No.");   //IMH13
      DateTimeFilter := pService.GETFILTER("Creation Date");
      MemberNo := pService.GETFILTER("Member No.");//IMH03
      Type := Type::Service;
    END;

    PROCEDURE SetServiceHeaderFilter@1100281011(VAR pServiceHeader@1100281000 : Record 5900);
    BEGIN
      ServiceHeaderNo := pServiceHeader.GETFILTER("No.");
      IF pServiceHeader.GETFILTER("Service No.") <> '' THEN
        ServiceNo := pServiceHeader.GETFILTER("Service No.");
      ContactNo := pServiceHeader.GETFILTER("Contact No.");
      "Contact Name" := pServiceHeader.GETFILTER("Contact Name");
      "Corporate No." := pServiceHeader.GETFILTER("Corporate No.");
      "Corporate Region Code" := pServiceHeader.GETFILTER("Corporate Region Code");
      "Contract Form Code" := pServiceHeader.GETFILTER("Contract Form Code");
      ServiceOrderType := pServiceHeader.GETFILTER("Service Order Type");
      DateTimeFilter := pServiceHeader.GETFILTER("Creation Date");

      Type := Type::"Service Header";
    END;

    PROCEDURE SetInterventionFilter@1100281013(VAR pServiceInterv@1100281000 : Record 50075);
    BEGIN
      ServiceHeaderNo := pServiceInterv.GETFILTER("Service Header No.");
      IF pServiceInterv.GETFILTER("Service No.") <> '' THEN
        ServiceNo := pServiceInterv.GETFILTER("Service No.");
      ContactNo := pServiceInterv.GETFILTER("Contact No.");
      "Contact Name" := pServiceInterv.GETFILTER("Contact Name");
      "Corporate No." := pServiceInterv.GETFILTER("Corporate No.");
      "Corporate Region Code" := pServiceInterv.GETFILTER("Corporate Region Code");
      "Contract Form Code" := pServiceInterv.GETFILTER("Contract Form Code");
      ServiceOrderType := pServiceInterv.GETFILTER("Service Order Type");
      "Provider No." := pServiceInterv.GETFILTER("Provider No.");
      DateTimeFilter := pServiceInterv.GETFILTER("Creation Date");

      Type := Type::"Service Intervention Line";
    END;

    LOCAL PROCEDURE SetFiltersToService@1100481000(VAR pService@1100481000 : Record 50066);
    BEGIN
      //Initialise la variable contact contenant les filtres
      pService.RESET;
      IF ServiceNo <> '' THEN
        pService.SETFILTER("Service No.",ServiceNo);
      IF ContactNo <> '' THEN
        pService.SETFILTER("Contact No.",ContactNo);
      IF "Contact Name" <> '' THEN
        pService.SETFILTER("Contact Name","Contact Name");
      IF "Corporate No." <> '' THEN
        pService.SETFILTER("Corporate No.","Corporate No.");
      IF "Corporate Region Code" <> '' THEN
        pService.SETFILTER("Corporate Region Code","Corporate Region Code");
      IF "Contract Form Code" <> '' THEN
        pService.SETFILTER("Contract Form Code","Contract Form Code");
      IF ReferenceNo <> '' THEN
        pService.SETFILTER("Reference No.",ReferenceNo);
      //<<IMH13
      IF IMAReferenceNo <> '' THEN
        pService.SETFILTER("IMA Reference No.",IMAReferenceNo);
      //>>IMH13
      IF DateTimeFilter <> '' THEN
        pService.SETFILTER("Creation Date",DateTimeFilter);
      //<<IMH03
      IF MemberNo <> '' THEN
        pService.SETFILTER("Member No.",MemberNo);
      //>>IMH03
    END;

    LOCAL PROCEDURE SetFiltersToServiceHeader@1100281015(VAR pServiceHeader@1100481000 : Record 5900);
    BEGIN
      //Initialise la variable contact contenant les filtres
      pServiceHeader.RESET;
      IF ServiceNo <> '' THEN
        pServiceHeader.SETFILTER("Service No.", ServiceNo);
      IF ServiceHeaderNo <> '' THEN
        pServiceHeader.SETFILTER("No.", ServiceHeaderNo);
      IF ContactNo <> '' THEN
        pServiceHeader.SETFILTER("Contact No.", ContactNo);
      IF "Contact Name" <> '' THEN
        pServiceHeader.SETFILTER("Contact Name","Contact Name");
      IF "Corporate No." <> '' THEN
        pServiceHeader.SETFILTER("Corporate No.","Corporate No.");
      IF "Corporate Region Code" <> '' THEN
        pServiceHeader.SETFILTER("Corporate Region Code","Corporate Region Code");
      IF "Contract Form Code" <> '' THEN
        pServiceHeader.SETFILTER("Contract Form Code","Contract Form Code");
      IF ServiceOrderType <> '' THEN
        pServiceHeader.SETFILTER("Service Order Type",ServiceOrderType);
      IF DateTimeFilter <> '' THEN
        pServiceHeader.SETFILTER("Creation Date",DateTimeFilter);
      IF MemberNo <> '' THEN
        pServiceHeader.SETFILTER("Member No.", MemberNo);
    END;

    LOCAL PROCEDURE SetFiltersToIntervention@1100281016(VAR pServiceInterv@1100481000 : Record 50075);
    VAR
      lIntervStatusFilter@1100281000 : Text[1024];
    BEGIN
      //Initialise la variable contact contenant les filtres
      pServiceInterv.RESET;
      IF ServiceNo <> '' THEN
        pServiceInterv.SETFILTER("Service No.", ServiceNo);
      IF ServiceHeaderNo <> '' THEN
        pServiceInterv.SETFILTER("Service Header No.", ServiceHeaderNo);
      IF ContactNo <> '' THEN
        pServiceInterv.SETFILTER("Contact No.", ContactNo);
      IF "Contact Name" <> '' THEN
        pServiceInterv.SETFILTER("Contact Name","Contact Name");
      IF "Corporate No." <> '' THEN
        pServiceInterv.SETFILTER("Corporate No.","Corporate No.");
      IF "Corporate Region Code" <> '' THEN
        pServiceInterv.SETFILTER("Corporate Region Code","Corporate Region Code");
      IF "Contract Form Code" <> '' THEN
        pServiceInterv.SETFILTER("Contract Form Code","Contract Form Code");
      IF "Provider No." <> '' THEN
        pServiceInterv.SETFILTER("Provider No.","Provider No.");
      IF ServiceOrderType <> '' THEN
        pServiceInterv.SETFILTER("Service Order Type",ServiceOrderType);
      IF DateTimeFilter <> '' THEN
        pServiceInterv.SETFILTER("Creation Date",DateTimeFilter);
      IF MemberNo <> '' THEN
        pServiceInterv.SETFILTER("Member No.", MemberNo);

      //<<IMH11
      IF IntervStatusVide THEN
        lIntervStatusFilter := '0';
      IF IntervStatusInProgress THEN
        IF lIntervStatusFilter <> '' THEN
          lIntervStatusFilter := lIntervStatusFilter + '|' + '1'
        ELSE
          lIntervStatusFilter := '1';
      IF IntervStatusClosed THEN
        IF lIntervStatusFilter <> '' THEN
          lIntervStatusFilter := lIntervStatusFilter + '|' + '2'
        ELSE
          lIntervStatusFilter := '2';
      IF IntervStatusCancel THEN
        IF lIntervStatusFilter <> '' THEN
          lIntervStatusFilter :=  lIntervStatusFilter + '|' + '3'
        ELSE
          lIntervStatusFilter := '3';
      IF IntervStatusSuspended THEN
        IF lIntervStatusFilter <> '' THEN
          lIntervStatusFilter :=  lIntervStatusFilter + '|' + '4'
        ELSE
          lIntervStatusFilter := '4';

      pServiceInterv.SETFILTER("Intervention Status", lIntervStatusFilter);
      //>>IMH11
    END;

    PROCEDURE SearchResults@1100281002(pFromButton@1100481000 : Boolean);
    VAR
      lTempContact@1100281001 : TEMPORARY Record 5050;
      lContactSearchMgt@1100281002 : Codeunit 50097;
      lTempText@1100281000 : Text[1024];
    BEGIN
      //<<IMH10.ST
      IF NOT pFromButton THEN
        EXIT;
      //>>IMH10.ST
      CASE Type OF
        Type::Service:SearchService(pFromButton);
        Type::"Service Header":SearchServiceHeader(pFromButton);
        Type::"Service Intervention Line":SearchServiceIntervLine(pFromButton);
      END;
      DisplayResultForm;
    END;

    PROCEDURE GetSearchType@1100281029() : Integer;
    BEGIN
      //IMH02 isat.zw
      EXIT(Type);
    END;

    PROCEDURE GetService@1100281004() : Code[20];
    BEGIN
      IF CloseFromCreate THEN
        EXIT(ResultService)
      ELSE
        EXIT(CurrPage.ServiceList.FORM.GetServiceNo);
    END;

    PROCEDURE GetServiceHeader@1100281000() : Code[20];
    BEGIN
      IF CloseFromCreate THEN
        EXIT(ResultServiceHeader)
      ELSE
        EXIT(CurrPage.ServiceHeaderList.FORM.GetServiceHeaderNo);
    END;

    PROCEDURE GetServiceInterv@1100281017(VAR pServiceHeaderNo@1100281000 : Code[20];VAR pServiceIntervLineNo@1100281001 : Integer);
    BEGIN
      CurrPage.ServiceInterventionList.FORM.GetInterventionNo(pServiceHeaderNo,pServiceIntervLineNo);
    END;

    LOCAL PROCEDURE ResetFields@1100281007();
    BEGIN
      //Remise … vide des champs
      ServiceNo := '';
      "Service No." := '';
      ServiceHeaderNo := '';
      ContactNo := '';
      "Contact No." := '';
      "Contact Name" := '';
      "Corporate No." := '';
      "Corporate Region Code" := '';
      "Contract Form Code" := '';
      ServiceOrderType := '';
      "Provider No." := '';
      MemberNo := '';//IMH03
      ReferenceNo := '';
      IMAReferenceNo := '';   //IMH13
      DateTimeFilter := '';
      CurrPage.ServiceList.FORM.DeleteResults;
      CurrPage.ServiceHeaderList.FORM.DeleteResults;
      CurrPage.ServiceInterventionList.FORM.DeleteResults;
    END;

    LOCAL PROCEDURE EnableFields@1100281008();
    BEGIN
      ServiceHeaderVisible := Type <> Type::Service;
      ServiceVisible := Type = Type::Service;
      IntervLineVisible := Type = Type::"Service Intervention Line";
      ButtonExtractVisible := Type = Type::"Service Intervention Line";//IMH09
      CurrPage.UPDATE;
    END;

    PROCEDURE ClosedFromCreate@1100281003(VAR pServiceNo@1100281000 : Code[20]) : Boolean;
    BEGIN
      IF NOT CloseFromCreate THEN
        EXIT(FALSE);
      pServiceNo := ResultService;
      EXIT(TRUE);
    END;

    PROCEDURE ClosedFromCreateServiceHeader@1100281018(VAR pServiceHeaderNo@1100281000 : Code[20]) : Boolean;
    BEGIN
      IF NOT CloseFromCreate THEN
        EXIT(FALSE);
      pServiceHeaderNo := ResultServiceHeader;
      EXIT(TRUE);
    END;

    PROCEDURE ClosedFromCreateServiceInterv@1100281019(VAR pServiceHeaderNo@1100281000 : Code[20];VAR pServiceIntervLineNo@1100281001 : Integer) : Boolean;
    BEGIN
      IF NOT CloseFromCreate THEN
        EXIT(FALSE);
      pServiceHeaderNo := ResultServiceHeader;
      pServiceIntervLineNo := ResultServiceIntervLine;
      EXIT(TRUE);
    END;

    PROCEDURE SearchContact@1100281009();
    VAR
      lContactSearchMgt@1100281000 : Codeunit 50097;
      lContactNo@1100281001 : Code[20];
    BEGIN
      lContactSearchMgt.SearchContact(3,lContactNo);
      VALIDATE("Contact No.",lContactNo);
    END;

    PROCEDURE SearchService@1100281001(pFromButton@1100281002 : Boolean);
    VAR
      lTempService@1100281000 : TEMPORARY Record 50066;
      lService@1100281003 : Record 50066;
      lTempText@1100281001 : Text[1024];
    BEGIN
      CurrPage.ServiceList.FORM.DeleteResults;
      SetFiltersToService(TempServiceFilter);
      IF NOT ServiceSearchMgt.CheckSearchServiceFields(TempServiceFilter,pFromButton) THEN
        EXIT;
      DialBox.OPEN(Text001);
      ServiceSearchMgt.CreateServiceList(TempServiceFilter,lTempService,lTempText,ResultCount);
      IF (ResultCount = 1) AND NOT RunFromCodeunit THEN BEGIN
        DialBox.CLOSE;
        //<<IMH07.ISAT.EBA
        //FORM.RUN(FORM::"Service Card",lTempService);
        lService := lTempService;
        FORM.RUN(FORM::"Service Card",lService);
        //>>IMH07.ISAT.EBA
        //CurrPage.CLOSE;//IMH06
      END ELSE BEGIN
        CurrPage.ServiceList.FORM.LoadResult(lTempService,lTempText);
        DialBox.CLOSE;
        // Rend actif le menu cr‚er contact
        IF NOT ButtonCreateEnable THEN
          ButtonCreateEnable := TRUE;
      END;
    END;

    PROCEDURE SearchServiceHeader@1100281006(pFromButton@1100281002 : Boolean);
    VAR
      lTempServiceHeader@1100281000 : TEMPORARY Record 5900;
      lTempText@1100281001 : Text[1024];
    BEGIN
      CurrPage.ServiceHeaderList.FORM.DeleteResults;
      SetFiltersToServiceHeader(TempServiceHeaderFilter);
      IF NOT ServiceSearchMgt.CheckSearchServiceHeaderFields(TempServiceHeaderFilter,pFromButton) THEN
        EXIT;
      DialBox.OPEN(Text001);
      ServiceSearchMgt.CreateServiceHeaderList(TempServiceHeaderFilter,lTempServiceHeader,lTempText,ResultCount);
      IF (ResultCount = 1) AND NOT RunFromCodeunit THEN BEGIN
        DialBox.CLOSE;
        lTempServiceHeader.ShowCard(TRUE);

        //CurrPage.CLOSE;//IMH06
      END ELSE BEGIN
        CurrPage.ServiceHeaderList.FORM.LoadResult(lTempServiceHeader,lTempText);
        DialBox.CLOSE;
      END;
    END;

    PROCEDURE SearchServiceIntervLine@1100281010(pFromButton@1100281002 : Boolean);
    VAR
      lTempServiceInterv@1100281001 : TEMPORARY Record 50075;
      lServiceInterv@1100281003 : Record 50075;
      lTempText@1100281000 : Text[1024];
    BEGIN
      CurrPage.ServiceInterventionList.FORM.DeleteResults;
      SetFiltersToIntervention(TempServiceIntervFilter);
      IF NOT ServiceSearchMgt.CheckSearchServiceIntervFields(TempServiceIntervFilter,pFromButton) THEN
        EXIT;
      DialBox.OPEN(Text001);
      ServiceSearchMgt.CreateServiceIntervList(TempServiceIntervFilter,lTempServiceInterv,lTempText,ResultCount);
      IF (ResultCount = 1) AND NOT RunFromCodeunit THEN BEGIN
        DialBox.CLOSE;
        //<<IMH07.ISAT.EBA
        //FORM.RUN(FORM::"Intervention Line Card",lTempServiceInterv);
        lServiceInterv := lTempServiceInterv;
        FORM.RUN(FORM::"Intervention Line Card",lServiceInterv);
        //>>IMH07.ISAT.EBA
        //CurrPage.CLOSE;//IMH06
      END ELSE BEGIN
        CurrPage.ServiceInterventionList.FORM.LoadResult(lTempServiceInterv,lTempText);
        DialBox.CLOSE;
      END;
    END;

    PROCEDURE CreateService@1100281012(pOpenCard@1100281000 : Boolean);
    BEGIN
      //Lance la cr‚ation d'un contact … partir des donn‚es de recherche
      SetFiltersToService(TempServiceFilter);
      IF ServiceSearchMgt.CreateService(TempServiceFilter,pOpenCard) THEN BEGIN
        CloseFromCreate := TRUE;
        ResultService := TempServiceFilter."Service No.";
        CurrPage.CLOSE;
      END;
    END;

    PROCEDURE DisplayResultForm@1100281014();
    BEGIN
      ServiceListVisible := Type = Type::Service;
      ServiceHeaderListVisible := Type = Type::"Service Header";
      ServiceInterventionListVisible := Type = Type::"Service Intervention Line";
    END;

    PROCEDURE OpenCard@1100281020();
    BEGIN
      CASE Type OF
        Type::Service:CurrPage.ServiceList.FORM.OpenServiceCard;
        Type::"Service Header":CurrPage.ServiceHeaderList.FORM.OpenServiceCard;
        Type::"Service Intervention Line":CurrPage.ServiceInterventionList.FORM.OpenServiceCard;
      END;
    END;

    LOCAL PROCEDURE GetProviderName@1100281028(pProviderNo@1100281001 : Code[20]) : Text[50];
    VAR
      lProvider@1100281000 : Record 50000;
    BEGIN
      IF lProvider.GET(pProviderNo) THEN
        EXIT(lProvider.Name);
    END;

    PROCEDURE SetRun@1100281025(pFromCodeunit@1100281000 : Boolean);
    BEGIN
      RunFromCodeunit := pFromCodeunit;
    END;

    PROCEDURE InitType@1100281022(pType@1100281000 : Integer);
    BEGIN
      Type := pType;
    END;

    PROCEDURE Extract@1000000003();
    VAR
      lExtractReport@1000000000 : Report 50157;
      lServIntervLine@1000000001 : Record 50075;
    BEGIN
      //IMH09
      SetFiltersToIntervention(lServIntervLine);
      IF "Contact Name" <> ''  THEN
        lServIntervLine.SETFILTER("Contact Name",'@'+ "Contact Name" +'*');

      // Recherche meilleure cl‚
      CASE TRUE OF
        lServIntervLine.GETFILTER("Service Header No.") <> '' : lServIntervLine.SETCURRENTKEY("Service Header No.","Line No.");
        lServIntervLine.GETFILTER("Service No.") <> '' : lServIntervLine.SETCURRENTKEY("Service No.");
        lServIntervLine.GETFILTER("Contact No.") <> '' : lServIntervLine.SETCURRENTKEY("Contact No.","Corporate No.");
        lServIntervLine.GETFILTER("Provider No.") <> '' : lServIntervLine.SETCURRENTKEY("Provider No.");
        lServIntervLine.GETFILTER("Contact Name") <> '' : lServIntervLine.SETCURRENTKEY("Contact Name");
      END;

      lExtractReport.SETTABLEVIEW(lServIntervLine);
      lExtractReport.USEREQUESTFORM := FALSE;
      lExtractReport.RUN;
    END;

    BEGIN
    {
      /** @r IMH13 @d 23/05/14 @a ISAT.ZW @v IMH6.01.P010 @s Projet PMU
          @c Ajouter champ 57013 chmap IMA Reference No. */
      /** @r IMH12 @d 04/07/12 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Recherche … l'ouverture page @h mantis 3683 */
      /** @r IMH11 @d 25/06/12 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c filtre statut interventions @h mantis 1739 */
      /** @r IMH10 @d 16/05/12 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Plus de recherche auto @h 3487 */
      /** @r IMH09 @d 23/04/12 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Extraction @h 1739 */
      /** @r IMH08 @d 06/04/12 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Suppr table relation sur serviceno & ServiceHeaderNo
          @c Ajout Service Corporate sur TableRelation CorporateNo */
      /** @r IMH07 @d 09/11/11 @a ISAT.EBA @v IMH6.01.011 @s Gestion du service @c Correction */
      /** @r IMH06 @d 09/09/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ne pas fermer la page car cela ferme navision  */
      /** @r IMH05 @d 10/03/10 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Limitation de la recherche de service */
      /** @r IMH04 @d 03/01/10 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Fonction filtre date de cr‚ation revue */
      /** @r IMH03 @d 27/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout Member No. */
      /** @r IMH02 @d 19/10/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Fonction GetType */
      /** @r IMH01 @d 08/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Cr‚ation */
    }
    END.
  }
}