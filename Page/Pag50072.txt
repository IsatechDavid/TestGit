OBJECT Page 50072 Intervention Line Card
{
  OBJECT-PROPERTIES
  {
    Date=07/05/14;
    Time=11:51:57;
    Modified=Yes;
    Version List=IMH6.01.08,MATMUT01,IMH6.01.P011;
  }
  PROPERTIES
  {
    Permissions=TableData 23=r;
    CaptionML=[ENU=Intervention Line Card;
               FRA=Ligne d'intervention];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table50075;
    DataCaptionFields=Service Header No.;
    PageType=Card;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Additional,Communication,help;
                                FRA=Nouveau,Processus,Etat,Compl‚ment,Communication,Aide];
    ShowFilter=No;
    OnOpenPage=VAR
                 lWinShell@1100281000 : Codeunit 50094;
                 lUserSetup@1000000000 : Record 91;
               BEGIN
                 IF NOT lUserSetup.GET(USERID) THEN
                   CLEAR(lUserSetup);
                 QualityCtrl := lUserSetup."Show To DQP";
                 ServiceMgtSetup.GET;
                 ServiceTimeRegisterMgt.OpenObjectID(CurrPage.OBJECTID(FALSE));
                 IF "Service Header No." <> '' THEN
                   SETRANGE("Service Header No.","Service Header No.");

                 IF "Line No." <> 0 THEN
                   SETRANGE("Line No.", "Line No.");

                 IF ("Service Header No." <> '') AND ("Line No." <> 0) THEN BEGIN
                   OnGetRecord;
                 END;
                 //<<IMH09
                 IF ServiceLockingMgt.InterventionCard_GetLock(Rec,TRUE) THEN BEGIN
                   CurrPage.EDITABLE := TRUE;
                   lWinShell.EditMode;
                 END ELSE BEGIN
                   CurrPage.EDITABLE := FALSE;
                 END;
                 //>>IMH09
                 PageEditable := CurrPage.EDITABLE;  //IMH39
                 CurrPage.ServiceCode.FORM.SetPageView(1); //IMH41.ST

                 GetProviderFollowup;  //IMH59
               END;

    OnClosePage=BEGIN
                  ServiceTimeRegisterMgt.CloseObject;
                  ServiceLockingMgt.InterventionCard_ReleaseLock(Rec);//IMH09
                END;

    OnAfterGetRecord=BEGIN
                       ServiceTimeRegisterMgt.OnAfterGetServiceIntervRecord(Rec);
                       OnGetRecord;
                     END;

    OnModifyRecord=BEGIN
                     CurrPage.UPDATE(FALSE); //IMH50
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100281143;1 ;Action    ;
                      Name=URLHyperlink;
                      CaptionML=[ENU=URL Hyperlink;
                                 FRA=Lien URL];
                      Promoted=Yes;
                      Image=Links;
                      PromotedCategory=New;
                      OnAction=VAR
                                 lServiceHeader@1100281001 : Record 5900;
                                 lServiceOrderType@1100281000 : Record 5903;
                               BEGIN
                                 //<<IMH43.PC
                                 IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,"Service Header No.") THEN BEGIN
                                   lServiceOrderType.GET(lServiceHeader."Service Order Type");
                                   IF ServiceOrderType."DARVA Site" THEN BEGIN
                                     IF NOT DARVAMgt.GetTransparentAccesDARVA(
                                              lServiceHeader."Reference No.",
                                              lServiceHeader."Corporate No.",
                                              lServiceHeader."Corporate Region Code")
                                     THEN BEGIN
                                       HYPERLINK(ServiceOrderType."URL Link");
                                     END;
                                   END ELSE BEGIN
                                     HYPERLINK(ServiceOrderType."URL Link");
                                   END;
                                 END;
                                 //>>IMH43.PC
                               END;
                                }
      { 1100281146;1 ;Action    ;
                      Name=FollowUpCreationCtrl;
                      CaptionML=[ENU=Follow Up CreationCtrl;
                                 FRA=Cr‚ation suivi];
                      Promoted=Yes;
                      Visible=ShowCreateFollowUp;
                      Image=ImplementPriceChange;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 ProvSearchFollowupMgt.CreateFollowUpFromInterv(Rec);
                               END;
                                }
      { 1100281123;1 ;Action    ;
                      Name=ProviderCalendar;
                      CaptionML=[ENU=Provider Calendar;
                                 FRA=Calendrier prestataire];
                      Promoted=Yes;
                      Image=CalendarChanged;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lProviderCalendarMgt@1100281000 : Codeunit 50007;
                               BEGIN
                                 //IMH21
                                 IF Urgent THEN
                                   lProviderCalendarMgt.GetEmergencyCalendar("Provider No.")
                                 ELSE
                                   lProviderCalendarMgt.GetStandardCalendar("Provider No.");
                               END;
                                }
      { 1100281010;1 ;Action    ;
                      Name=OpenQuotes;
                      CaptionML=[ENU=Quotes;
                                 FRA=Devis];
                      Promoted=Yes;
                      Visible=ShowQuoteActions;
                      Image=Quote;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lInterventionInfoPane@1100281000 : Codeunit 50063;
                               BEGIN
                                 //<<IMH19
                                 lInterventionInfoPane.LookupQuotes(Rec,FALSE);
                                 {//IMH06
                                 lQuote.SETRANGE("Service Header No.","Service Header No.");
                                 lQuote.SETRANGE("Intervention Line No.","Line No.");
                                 IF lQuote.ISEMPTY THEN
                                   EXIT;
                                 IF lQuote.COUNT = 1 THEN
                                   PAGE.RUN(PAGE::"Serv. Intervention Quote Card",lQuote)
                                 ELSE
                                   PAGE.RUN(0,lQuote);
                                 }
                                 //>>IMH19
                               END;
                                }
      { 1100281072;1 ;Action    ;
                      Name=OpenActiveQuotes;
                      CaptionML=[ENU=Actives Quotes;
                                 FRA=Devis actifs];
                      Promoted=Yes;
                      Visible=ShowQuoteActions;
                      Image=Quote;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lInterventionInfoPane@1100281002 : Codeunit 50063;
                               BEGIN
                                 //<<IMH19
                                 lInterventionInfoPane.LookupQuotes(Rec,TRUE);
                                 {
                                 //IMH06
                                 lQuote.SETRANGE("Service Header No.","Service Header No.");
                                 lQuote.SETRANGE("Intervention Line No.","Line No.");
                                 lQuote.SETRANGE(Active,TRUE);
                                 IF lQuote.ISEMPTY THEN
                                   EXIT;
                                 IF lQuote.COUNT = 1 THEN
                                   PAGE.RUN(PAGE::"Serv. Intervention Quote Card",lQuote)
                                 ELSE
                                   PAGE.RUN(0,lQuote);
                                 }
                                 //>>IMH19
                               END;
                                }
      { 1100281104;1 ;ActionGroup;
                      Name=<Action1100281104>;
                      CaptionML=[ENU=Communication;
                                 FRA=Communication];
                      ActionContainerType=NewDocumentItems }
      { 1000000008;2 ;Action    ;
                      Name=DARVA;
                      CaptionML=[ENU=DARVA;
                                 FRA=DARVA];
                      Promoted=Yes;
                      Visible=DARVAVisible;
                      PromotedIsBig=Yes;
                      Image=SendTo;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 lSendDARVACard@1000000000 : Page 50363;
                                 lAttachmentList@1000000002 : Record 50021;
                               BEGIN
                                 //IMH54
                                 lSendDARVACard.SetServiceHeader(ServHeader,"Intervention No.", "Line No.");
                                 lSendDARVACard.RUN;
                               END;
                                }
      { 1100281142;2 ;Action    ;
                      Name=<Action1100281065>;
                      CaptionML=[ENU=Send Mail;
                                 FRA=Envoi de mail];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendTo;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 lSendMail@1100281000 : Codeunit 50128;
                               BEGIN
                                 lSendMail.SendMailFromInterv(Rec, '');
                               END;
                                }
      { 1100281145;2 ;Action    ;
                      Name=<Action1100281068>;
                      CaptionML=[ENU=Send SMS;
                                 FRA=Envoi de SMS];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendTo;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 lSMSMgt@1100281002 : Codeunit 50225;
                                 lType@1100281000 : 'Service,Service Header,Intervention';
                               BEGIN

                                 lSMSMgt.SendSMSFromIntervention(lType::Intervention,Rec,'', 0, TRUE);
                               END;
                                }
      { 1100281085;2 ;Action    ;
                      Name=<Action1100281039>;
                      CaptionML=[ENU=Postponed &Interactions;
                                 FRA=Brouillons];
                      RunObject=Page 5082;
                      RunFormView=SORTING(Service No.,Service Header No.,Intervention Line No.,Date,Postponed);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Header No.=FIELD(Service Header No.),
                                  Intervention Line No.=FIELD(Line No.) }
      { 1100281087;2 ;Separator  }
      { 1100281060;2 ;Action    ;
                      Name=Comments;
                      CaptionML=[ENU=Co&mments;
                                 FRA=Co&mmentaires];
                      RunObject=Page 50230;
                      RunFormView=SORTING(Source No. 2,Source No. 3,Creation Date)
                                  ORDER(Descending)
                                  WHERE(Source Table ID=FILTER(50075|50084));
                      RunFormLink=Source No.=FIELD(Service No.),
                                  Source No. 2=FIELD(Service Header No.),
                                  Source No. 3=FIELD(Line No.);
                      Promoted=Yes;
                      Image=ViewComments;
                      PromotedCategory=Category5 }
      { 1100281086;2 ;Action    ;
                      Name=<Action1100281038>;
                      CaptionML=[ENU=Interaction Log E&ntries;
                                 FRA=Ecritures &journal interaction];
                      RunObject=Page 5076;
                      RunFormView=SORTING(Service No.,Service Header No.,Intervention Line No.,Date,Postponed);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Header No.=FIELD(Service Header No.),
                                  Intervention Line No.=FIELD(Line No.);
                      Promoted=Yes;
                      Image=Track;
                      PromotedCategory=Category5 }
      { 1100281083;2 ;Action    ;
                      Name=<Action1100281028>;
                      CaptionML=[ENU=Service Header Attach. Document;
                                 FRA=Documents joints];
                      RunObject=Page 50015;
                      RunFormView=SORTING(Service No.,Service Document No.,Service Intervention Line No.,Creation Date);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Document No.=FIELD(Service Header No.),
                                  Service Intervention Line No.=FIELD(Line No.);
                      Promoted=Yes;
                      Image=Documents;
                      PromotedCategory=Category5 }
      { 1100281066;1 ;Action    ;
                      Name=<Action1100281066>;
                      CaptionML=[ENU=Current Tray Lines;
                                 FRA=Activit‚s en cours];
                      Image=Bins;
                      OnAction=BEGIN
                                 IntervPanelInfo.LookupTrayLines(Rec, TRUE);
                               END;
                                }
      { 1100281063;1 ;Separator  }
      { 1100281065;1 ;Action    ;
                      Name=ViewMoistureHistory;
                      CaptionML=[ENU=Moisture % History;
                                 FRA=Historique taux d'humidit‚];
                      OnAction=BEGIN
                                 //IMH16
                                 ShowHistoryListRange(DATABASE::"Service Intervention Line"
                                   ,FORMAT(FIELDNO("Moisture %")) + '|' + FORMAT(FIELDNO("Next Appointment Date"))
                                   ,FALSE
                                   ,TRUE);
                               END;
                                }
      { 1100281096;1 ;Action    ;
                      Name=<Action1100281096>;
                      CaptionML=[ENU=Process Status History;
                                 FRA=Historique statut processus];
                      RunObject=Page 50156;
                      RunFormLink=Source Table ID=CONST(50075),
                                  Source Key Code 1=FIELD(Service Header No.),
                                  Source Key Integer 1=FIELD(Line No.) }
      { 1100281132;1 ;Action    ;
                      Name=History;
                      CaptionML=[ENU=History;
                                 FRA=Historiques];
                      RunObject=Page 595;
                      RunFormView=SORTING(Table No.,Primary Key Field 1 Value)
                                  WHERE(Table No.=CONST(50075));
                      RunFormLink=Primary Key Field 1 Value=FIELD(Service Header No.),
                                  Primary Key Field 2 Value=FIELD(Line No.);
                      Promoted=Yes;
                      Image=History;
                      PromotedCategory=Process }
      { 1100281064;1 ;Action    ;
                      Name=<Action1100281023>;
                      CaptionML=[ENU=Tray Line History;
                                 FRA=Activit‚s archiv‚es];
                      Image=Bins;
                      OnAction=BEGIN
                                 IntervPanelInfo.LookupTrayLineHist(Rec);
                               END;
                                }
      { 1100281109;1 ;Action    ;
                      Name=HelpAction;
                      CaptionML=[ENU=Help;
                                 FRA=Aide];
                      Promoted=Yes;
                      Visible=WikiLinkVisible;
                      PromotedIsBig=Yes;
                      Image=View;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 RunHelp;//IMH14
                               END;
                                }
      { 1100281009;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100281073;1 ;Action    ;
                      Name=<Action1100281073>;
                      CaptionML=FRA=INTERVENTION;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Components;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 IF TRUE THEN;
                               END;
                                }
      { 1100281008;1 ;ActionGroup;
                      Name=<Action1100281064>;
                      CaptionML=[ENU=Functions;
                                 FRA=Fonctions] }
      { 1100281030;2 ;Action    ;
                      Name=<Action1100281094>;
                      CaptionML=[ENU=Search Provider;
                                 FRA=Rechercher prestataire];
                      Visible=FALSE;
                      Enabled=FALSE;
                      Image=Find;
                      OnAction=BEGIN
                                 InterventionMgt.SearchProvider(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100281006;2 ;Action    ;
                      Name=<Action1100281073>;
                      CaptionML=[ENU=Affect Quote;
                                 FRA=Affecter devis];
                      Promoted=Yes;
                      Visible=ShowQuoteActions;
                      Enabled=PageEditable;
                      Image=NewDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 InterventionMgt.CreateServIntervQuoteByWizard(Rec);
                               END;
                                }
      { 1100281106;2 ;Separator  }
      { 1100281016;2 ;Action    ;
                      Name=<Action1100281095>;
                      CaptionML=[ENU=Create Tray Line;
                                 FRA=Cr‚er activit‚ corbeille];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      Image=BinContent;
                      PromotedCategory=New;
                      OnAction=VAR
                                 lTrayLineMgt@1100281000 : Codeunit 50050;
                               BEGIN
                                 lTrayLineMgt.CreateTLFromIntervention(Rec, '', '', TRUE);   //IMH04 isat.zw
                               END;
                                }
      { 1100281088;2 ;Action    ;
                      Name=Create Interact;
                      CaptionML=[ENU=Create &Interact;
                                 FRA=Cr‚er &interaction];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      Image=CreateInteraction;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //IMH07 isat.zw
                                 CreateInteraction;
                               END;
                                }
      { 1100281105;2 ;Separator  }
      { 1100281082;2 ;Action    ;
                      CaptionML=[ENU=Next Step;
                                 FRA=Etape suivante];
                      Promoted=Yes;
                      Visible=UserNextStepAvailable;
                      Enabled=PageEditable;
                      PromotedIsBig=Yes;
                      Image=SelectItemSubstitution;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lProcessIntervMgt@1100281000 : Codeunit 50041;
                               BEGIN
                                 lProcessIntervMgt.SelectNextStep(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100281000;1;Group  ;
                Name=EventGroup;
                CaptionML=[ENU=Address;
                           FRA=Mise en oeuvre];
                GroupType=Group }

    { 1100281148;2;Group  ;
                Visible=ShowFollowUpText;
                GroupType=Group }

    { 1100281147;3;Field  ;
                CaptionML=[ENU=Follow-up;
                           FRA=Suivi];
                SourceExpr=FollowupText;
                Visible=ShowFollowUpText;
                Editable=FALSE;
                MultiLine=Yes }

    { 1100281095;2;Field  ;
                SourceExpr="Process Status Description";
                Style=Favorable;
                StyleExpr=TRUE }

    { 1100281122;2;Group  ;
                Visible=StatusCanceled;
                GroupType=Group }

    { 1100281113;3;Field  ;
                SourceExpr="Cancel Reason" }

    { 1100281138;2;Group  ;
                Visible=NotDiagVisible;
                GroupType=Group }

    { 1100281121;3;Field  ;
                CaptionML=[ENU=Several Quotes;
                           FRA=Devis en traitement];
                SourceExpr=Suspended;
                Enabled=FALSE }

    { 1100281112;3;Field  ;
                SourceExpr="Quote Process Status Descr.";
                Style=Unfavorable;
                StyleExpr=TRUE }

    { 1100281001;2;Field  ;
                CaptionML=[ENU=No.;
                           FRA=Nø ligne produit];
                SourceExpr=XMLText;
                Editable=FALSE;
                ControlAddIn=[Isatech.IMH.PageIdentifaction;PublicKeyToken=c1f98940aa27b996] }

    { 1100281004;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=Yes;
                SourceExpr="Contact No.";
                Importance=Promoted;
                Visible=FALSE;
                OnAssistEdit=BEGIN
                               OpenContactCard;
                             END;
                              }

    { 1100281038;2;Field  ;
                SourceExpr="Contact Name";
                Importance=Promoted }

    { 1100281067;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="Process Code";
                Visible=FALSE }

    { 1100281074;2;Field  ;
                SourceExpr="Alt. Address Code" }

    { 1100281005;2;Field  ;
                SourceExpr=Address }

    { 1100281015;2;Field  ;
                SourceExpr="Address 2";
                Importance=Additional }

    { 1100281139;2;Field  ;
                SourceExpr="Address 3";
                Importance=Additional }

    { 1100281002;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Post Code" }

    { 1100281013;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr=City }

    { 1100281011;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Country/Region Code";
                Importance=Additional }

    { 1100281076;2;Field  ;
                SourceExpr="Phone No.";
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               //<<IMH40.PC
                               PhoneNoAssistEdit("Phone No.");
                               //>>IMH40.PC
                             END;
                              }

    { 1100281078;2;Field  ;
                DrillDown=No;
                SourceExpr="Mobile Phone No.";
                OnAssistEdit=BEGIN
                               //<<IMH40.PC
                               PhoneNoAssistEdit("Mobile Phone No.");
                               //>>IMH40.PC
                             END;
                              }

    { 1100281080;2;Field  ;
                SourceExpr="Fax No.";
                Visible=FALSE;
                OnAssistEdit=VAR
                               lSendMail@1100281000 : Codeunit 50128;
                             BEGIN
                               lSendMail.SendFaxFromInterv(Rec, "Fax No.");
                             END;
                              }

    { 1000000006;2;Field  ;
                SourceExpr="Other Phone No. Type";
                StyleExpr=TRUE }

    { 1000000005;2;Field  ;
                SourceExpr="Other Phone No.";
                OnAssistEdit=BEGIN
                               //<<IMH51.ACO
                               PhoneNoAssistEdit("Other Phone No.");
                               //>>IMH51.ACO
                             END;
                              }

    { 1100281024;2;Field  ;
                ExtendedDatatype=None;
                DrillDown=No;
                SourceExpr="E-Mail";
                OnAssistEdit=VAR
                               lSendMail@1100281000 : Codeunit 50128;
                             BEGIN
                               lSendMail.SendMailFromInterv(Rec, "E-Mail");
                             END;
                              }

    { 1100281022;2;Group  ;
                Visible=SHAddressVisible;
                GroupType=Group }

    { 1100281018;3;Field  ;
                SourceExpr="Address Type" }

    { 1100281020;3;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=Yes;
                SourceExpr="Address No.";
                OnAssistEdit=VAR
                               lServiceHeaderAddress@1100281000 : Record 50068;
                             BEGIN
                               IF lServiceHeaderAddress.GET("Service Header No.","Address Type","Address No.") THEN
                                 FORM.RUNMODAL(FORM::"Service Header Address Card",lServiceHeaderAddress);
                             END;
                              }

    { 1100281058;2;Group  ;
                Visible=UrgentVisible;
                GroupType=Group }

    { 1100281052;3;Field  ;
                SourceExpr=Urgent;
                Editable=False;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100281056;2;Group  ;
                Visible=UrgentVisible;
                GroupType=Group }

    { 1100281128;3;Field  ;
                SourceExpr="Expected Arrival Date" }

    { 1100281110;3;Field  ;
                SourceExpr="Expected Arrival Time" }

    { 1100281033;3;Field  ;
                SourceExpr="Arrival Date";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100281035;3;Field  ;
                SourceExpr="Arrival Time";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100281041;3;Field  ;
                SourceExpr=Travel }

    { 1100281037;3;Field  ;
                SourceExpr="Protective Action";
                Enabled=ProtActionEnabled;
                OnValidate=BEGIN
                             MCOEnabled := "Protective Action";
                             //DefRepairEnabled := ("Non-Urgent Pursuit"="Non-Urgent Pursuit"::No) AND (NOT "Protective Action");//IMH08
                             DefRepairEnabled := (("Non-Urgent Pursuit"="Non-Urgent Pursuit"::No) AND (NOT "Protective Action"))
                                                 OR ("Non-Urgent Pursuit"="Non-Urgent Pursuit"::" ");//IMH37
                           END;
                            }

    { 1100281039;3;Field  ;
                SourceExpr="Definitive Repair";
                Enabled=DefRepairEnabled;
                OnValidate=BEGIN
                             NUPursuitEnabled := NOT("Definitive Repair");//IMH08
                             ProtActionEnabled := NOT("Definitive Repair");//IMH08
                             //<<IMH37
                             //IF (("Non-Urgent Pursuit"="Non-Urgent Pursuit"::Yes) AND ("Protective Action")) THEN
                             //  ERROR(Text002);
                             //>>IMH37
                           END;
                            }

    { 1100281129;3;Field   }

    { 1100281029;3;Field  ;
                CaptionML=[ENU=Non-Urgent Pursuit *;
                           FRA=Poursuite en non-urgent *];
                SourceExpr="Non-Urgent Pursuit";
                Enabled=NUPursuitEnabled;
                OnValidate=BEGIN
                             //IMH10
                             {IF "Non-Urgent Pursuit" THEN BEGIN
                               IF Urgent THEN
                                 Urgent := FALSE;
                               CurrPage.UPDATE;
                             END;
                             }
                             //<<IMH37
                             DefRepairEnabled := (("Non-Urgent Pursuit"="Non-Urgent Pursuit"::No) AND (NOT "Protective Action"))
                                                 OR ("Non-Urgent Pursuit"="Non-Urgent Pursuit"::" ");//IMH08
                             //IF (("Non-Urgent Pursuit"="Non-Urgent Pursuit"::Yes) AND ("Protective Action")) THEN
                             //  ERROR(Text002);
                             //>>IMH37
                             //>>IMH10
                             Setvisible;
                           END;
                            }

    { 1902774901;1;Group  ;
                CaptionML=[ENU=Provider;
                           FRA=Prestataire] }

    { 1100281019;2;Field  ;
                SourceExpr="Intervention No.";
                Importance=Promoted }

    { 1100281021;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="Provider No.";
                OnAssistEdit=BEGIN
                               OpenProviderCard;
                             END;
                              }

    { 1100281040;2;Field  ;
                AssistEdit=No;
                SourceExpr="Provider Name";
                Importance=Promoted }

    { 1100281042;2;Field  ;
                SourceExpr="Provider Address";
                Visible=FALSE }

    { 1100281044;2;Field  ;
                SourceExpr="Provider Address 2";
                Importance=Additional;
                Visible=FALSE }

    { 1100281046;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="Provider Post Code" }

    { 1100281048;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="Provider City" }

    { 1100281050;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Provider Phone No.";
                Importance=Promoted;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               //<<IMH40.PC
                               PhoneNoAssistEdit("Provider Phone No.");
                               //>>IMH40.PC
                             END;
                              }

    { 1100281059;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Provider Fax No.";
                OnAssistEdit=VAR
                               lSendMail@1100281000 : Codeunit 50128;
                             BEGIN
                               lSendMail.SendFaxFromInterv(Rec, "Provider Fax No.");
                             END;
                              }

    { 1100281097;2;Field  ;
                ExtendedDatatype=None;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Provider E-Mail";
                OnAssistEdit=VAR
                               lSendMail@1100281000 : Codeunit 50128;
                             BEGIN
                               lSendMail.SendMailFromInterv(Rec, "Provider E-Mail");
                             END;
                              }

    { 1100281131;2;Field  ;
                Name=ProviderContactNoCtrl;
                DrillDown=Yes;
                CaptionML=[ENU=DPS Contact;
                           FRA=Contact DGS];
                BlankZero=Yes;
                SourceExpr=IntervPanelInfo.CalcNoOfProviderDPSContacts(Rec);
                Editable=FALSE;
                OnDrillDown=BEGIN
                              IntervPanelInfo.LookupProviderDPSContacts(Rec);
                            END;
                             }

    { 1100281099;2;Field  ;
                Name=ProviderContactNameCtrl;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                CaptionML=[ENU=Provider Contact Name;
                           FRA=Nom contact DGS];
                SourceExpr=IntervPanelInfo.GetProviderDPSContactName(Rec);
                Editable=false }

    { 1100281100;2;Field  ;
                Name=ProviderContactPhoneNoCtrl;
                Lookup=No;
                DrillDown=No;
                CaptionML=[ENU=Provider Contact Phone No.;
                           FRA=Nø t‚l‚phone contact DGS];
                SourceExpr=IntervPanelInfo.GetProviderDPSContactPhoneNo(Rec);
                Editable=false;
                OnAssistEdit=BEGIN
                               //<<IMH40.PC
                               PhoneNoAssistEdit(IntervPanelInfo.GetProviderDPSContactPhoneNo(Rec));
                               //>>IMH40.PC
                             END;
                              }

    { 1100281023;2;Field  ;
                DecimalPlaces=0:2;
                SourceExpr="Travel Distance";
                Importance=Promoted }

    { 1100281098;2;Field  ;
                CaptionML=[ENU=Network Facilitator Name;
                           FRA=Nom charg‚ de pilotage r‚seau];
                SourceExpr=Provider.GetNameNetworkFacilitator }

    { 1100281101;2;Field  ;
                ExtendedDatatype=Phone No.;
                CaptionML=[ENU=Network Facilitator Phone No.;
                           FRA=Nø t‚l‚phone charg‚ de pilotage r‚seau];
                SourceExpr=Provider.GetNetworkFacilitatorPhoneNo();
                OnAssistEdit=BEGIN
                               //<<IMH57.ST
                               {
                               //<<IMH40.PC
                               PhoneNoAssistEdit(Provider.GetCoordinatorPhoneNo);
                               //>>IMH40.PC
                               }
                               PhoneNoAssistEdit(Provider.GetNetworkFacilitatorPhoneNo);
                               //>>IMH57.ST
                             END;
                              }

    { 1100281137;2;Field  ;
                SourceExpr="Provider Specialities";
                Importance=Additional }

    { 1100281140;2;Field  ;
                SourceExpr="Provider Agreements";
                Importance=Additional }

    { 1100281141;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                CaptionML=[ENU=Reference No.;
                           FRA=Nø ‚vŠnement];
                SourceExpr=GetServRefNo;
                Editable=False }

    { 1100281144;2;Field  ;
                CaptionML=[ENU=Extranet;
                           FRA=Extranet];
                SourceExpr=Provider.Extranet;
                Editable=false }

    { 1100281051;1;Part   ;
                Name=ServiceCode;
                CaptionML=[ENU=Trade Building/Speciality;
                           FRA=Corps de m‚tier / sp‚cialit‚s];
                SubFormView=SORTING(Service Type,Service No.,Service Header No.,Intervention Line No.,Code Type,Code);
                SubFormLink=Service Type=CONST(Intervention),
                            Service No.=FIELD(Service No.),
                            Service Header No.=FIELD(Service Header No.),
                            Intervention Line No.=FIELD(Line No.),
                            Code Type=CONST(Speciality);
                PagePartID=Page50141 }

    { 1100281061;1;Part   ;
                Name=InterventionDescription;
                CaptionML=[ENU=Affected Locations;
                           FRA=Descriptif des travaux];
                SubFormView=SORTING(Service Header No.,Affected Location Code,Speciality Code,Building Trade No.);
                SubFormLink=Service Header No.=FIELD(Service Header No.),
                            Intervention Line No. Filter=FIELD(Line No.),
                            Intervention Speciality=CONST(Yes);
                PagePartID=Page50084;
                Enabled=IntervDescrVisible }

    { 1100281053;1;Group  ;
                Name=MonitoringWork;
                CaptionML=[ENU=Monitoring Work;
                           FRA=Suivi des travaux];
                GroupType=Group }

    { 1100281062;2;Group  ;
                GroupType=Group }

    { 1100281003;3;Field  ;
                SourceExpr="Quote Managment";
                Visible=QuoteMgtVisible }

    { 1100281007;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Corporate No.";
                Importance=Promoted;
                Visible=FALSE }

    { 1100281014;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Corporate Region Code";
                Importance=Additional;
                Visible=FALSE }

    { 1100281069;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="Event Date";
                Importance=Promoted }

    { 1100281031;2;Field  ;
                SourceExpr="Assigned Date" }

    { 1100281127;2;Field  ;
                SourceExpr="Assigned Time" }

    { 1100281103;2;Group  ;
                Visible=DiagElecVisible;
                GroupType=Group }

    { 1100281102;3;Field  ;
                SourceExpr="Meeting Date";
                Visible=DiagElecVisible }

    { 1100281120;3;Field  ;
                SourceExpr="Actual Meeting Date" }

    { 1100281118;3;Group  ;
                Visible=DeviceVisible;
                GroupType=Group }

    { 1100281117;4;Field  ;
                CaptionML=[ENU=Depreciation %;
                           FRA=% v‚tust‚];
                SourceExpr=DepreciationPct;
                OnValidate=BEGIN
                             ServiceHeaderDevice."Depreciation %" := DepreciationPct;
                             ServiceHeaderDevice.MODIFY;
                           END;
                            }

    { 1100281116;4;Field  ;
                CaptionML=[ENU=Loan;
                           FRA=Prˆt];
                SourceExpr=Loan;
                OnValidate=BEGIN
                             ServiceHeaderDevice.Loan := Loan;
                             ServiceHeaderDevice.MODIFY;
                           END;
                            }

    { 1000000002;3;Group  ;
                Visible=ReceiptDateVisible;
                GroupType=Group }

    { 1100281114;4;Field  ;
                SourceExpr="RC Receipt Date" }

    { 1100281119;3;Group  ;
                Visible=DeviceVisible;
                GroupType=Group }

    { 1100281115;4;Field  ;
                CaptionML=[ENU=Mission Amount;
                           FRA=Montant mission (TTC)];
                SourceExpr=MissionAmount;
                OnValidate=BEGIN
                             ServiceHeaderDevice."Mission Amount" := MissionAmount;
                             ServiceHeaderDevice.MODIFY;
                           END;
                            }

    { 1100281027;3;Field  ;
                SourceExpr="Global Amount (Incl. VAT)" }

    { 1100281028;2;Group  ;
                Visible=IntervDescrVisible;
                GroupType=Group }

    { 1100281026;3;Field  ;
                CaptionML=[ENU=Work Global Amount (Incl. VAT);
                           FRA=Montant global des travaux (TTC)];
                SourceExpr=CalcWorkGlobalAmount;
                Editable=FALSE }

    { 1100281130;2;Group  ;
                Visible=ExpectedPrevisitDateVisible;
                GroupType=Group }

    { 1100281079;3;Field  ;
                SourceExpr="Expected Previsit Date" }

    { 1100281032;3;Field  ;
                SourceExpr="Expected Previsit Time";
                Visible=False }

    { 1100281081;3;Field  ;
                SourceExpr="Previsit Date" }

    { 1100281043;3;Field  ;
                SourceExpr="Previsit Time";
                Visible=FALSE }

    { 1100281057;2;Group  ;
                Visible=ExpectedDateVisible;
                GroupType=Group }

    { 1100281017;3;Field  ;
                SourceExpr="Expected Work Start Date" }

    { 1100281036;3;Field  ;
                SourceExpr="Expected Work End Date" }

    { 1100281055;3;Field  ;
                SourceExpr="Work Start Date" }

    { 1100281034;3;Field  ;
                SourceExpr="Work End Date" }

    { 1100281070;3;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="QuoteAcceptance Date" }

    { 1100281071;3;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="Quote Amount Incl. VAT" }

    { 1100281135;3;Field  ;
                SourceExpr="Total Quote Amt Incl.VAT (LCY)" }

    { 1100281045;3;Field  ;
                SourceExpr=Moisture;
                Enabled=MoistureEnabled;
                OnValidate=BEGIN
                             MoistureVisible := Moisture;
                             IF NOT Moisture THEN
                               IF "Moisture %" <> 0 THEN
                                 ERROR(STRSUBSTNO(Text001,FIELDCAPTION(Moisture),FIELDCAPTION("Moisture %")));
                           END;
                            }

    { 1100281054;3;Group  ;
                Visible=MoistureVisible;
                GroupType=Group }

    { 1100281047;4;Field  ;
                SourceExpr="Moisture %" }

    { 1100281068;4;Group  ;
                Visible=NOT DiagElecVisible;
                GroupType=Group }

    { 1100281049;5;Field  ;
                SourceExpr="Next Appointment Date" }

    { 1100281108;2;Group  ;
                Visible=DeductibleAmtVisible;
                GroupType=Group }

    { 1100281124;3;Field  ;
                SourceExpr="Deductible Amount" }

    { 1100281126;2;Group  ;
                Visible=IntervDescrVisible;
                GroupType=Group }

    { 1100281125;3;Field  ;
                SourceExpr="Unsecured Depreciation Amount" }

    { 1100281136;3;Field  ;
                Name=DepreciationDeductibleAmount;
                CaptionML=[ENU=Depreciation Deductible Amount;
                           FRA=Montant franchise v‚tust‚ non garantie];
                SourceExpr="Deductible Depreciat Amt.";
                Editable=False }

    { 1100281084;2;Group  ;
                Visible=ClaimsVisible;
                GroupType=Group }

    { 1100281077;3;Field  ;
                SourceExpr=Claim }

    { 1100281107;2;Group  ;
                Visible=ServiceHeaderClaimNo;
                GroupType=Group }

    { 1100281075;3;Field  ;
                SourceExpr="Service Header Claims No.";
                Visible=ServiceHeaderClaimNo }

    { 1000000003;2;Group  ;
                Visible=QualityCtrl;
                GroupType=Group }

    { 1000000004;3;Field  ;
                CaptionML=[ENU=Quality Target;
                           FRA=Ciblage qualit‚];
                OptionCaptionML=[ENU=" ,Intervention";
                                 FRA=" ,Intervention"];
                SourceExpr="Target Type" }

    { 1100281012;1;Part   ;
                CaptionML=[ENU=Minutes;
                           FRA=ProcŠs-Verbal];
                SubFormView=SORTING(Service Header No.,Service Intervention Line No.,Document No.,Line No.);
                SubFormLink=Service Header No.=FIELD(Service Header No.),
                            Service Intervention Line No.=FIELD(Line No.);
                PagePartID=Page50167;
                Enabled=MinutesVisible }

    { 1100281134;1;Group  ;
                Name=Orders;
                CaptionML=[ENU=Orders;
                           FRA=Commandes];
                GroupType=Group }

    { 1100281133;2;Field  ;
                SourceExpr="Sale Order Nb" }

    { 1100289132;2;Field  ;
                SourceExpr="Purchase Order Nb";
                Visible=FALSE }

    { 1100281094;0;Container;
                ContainerType=FactBoxArea }

    { 1100281111;1;Part   ;
                SubFormView=WHERE(Type=CONST(TableData),
                                  ID=CONST(50075));
                SubFormLink=ID=FILTER(50075);
                PagePartID=Page50208;
                PartType=Page }

    { 1000000000;1;Part   ;
                Name=CorporateInfo;
                CaptionML=[ENU=CorporateInfo;
                           FRA=Grand compte];
                SubFormView=SORTING(Service No.);
                SubFormLink=Service No.=FIELD(Service No.);
                PagePartID=Page50247;
                PartType=Page }

    { 1100281093;1;Part   ;
                Name=ContactContract;
                CaptionML=[ENU=Contract Details;
                           FRA=D‚tail formule];
                SubFormView=SORTING(Contact No.,Corporate No.,Contract Form Code,Occurence No.);
                SubFormLink=Contact No.=FIELD(Contact No.),
                            Contract Form Code=FIELD(Contract Form Code),
                            Corporate No.=FIELD(Corporate No.);
                PagePartID=Page50094;
                Visible=FALSE }

    { 1100281092;1;Part   ;
                Name=SalesHeaderDetails;
                CaptionML=[ENU=Service Header Details;
                           FRA=D‚tail ligne produit];
                SubFormView=SORTING(Document Type,No.)
                            WHERE(Document Type=CONST(Invoice));
                SubFormLink=No.=FIELD(Service Header No.);
                PagePartID=Page50088 }

    { 1100281091;1;Part   ;
                Name=IntervLinedetails;
                CaptionML=[ENU=Intervention Line Detail;
                           FRA=D‚tail ligne intervention];
                SubFormView=SORTING(Service Header No.,Line No.);
                SubFormLink=Service Header No.=FIELD(Service Header No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page50159 }

    { 1100281025;1;Part   ;
                Name=IntervProvider;
                CaptionML=[ENU=Provider Detail;
                           FRA=D‚tail prestataire];
                SubFormLink=Service Header No.=FIELD(Service Header No.),
                            Line No.=FIELD(Line No.),
                            Intervention No.=FIELD(Intervention No.);
                PagePartID=Page50157;
                Visible=IntervProviderVisible;
                PartType=Page }

    { 1000000001;1;Part   ;
                Name=InterVendor;
                CaptionML=[ENU=Vendor Detail;
                           FRA=D‚tail fournisseur];
                SubFormView=SORTING(No.);
                SubFormLink=No.=FIELD(Vendor No. Filter);
                PagePartID=Page9094;
                Visible=FALSE;
                PartType=Page }

    { 1100281090;1;Part   ;
                Name=Notes;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

    { 1100281089;1;Part   ;
                Name=Links;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

  }
  CODE
  {
    VAR
      ServiceOrderType@1100281016 : Record 5903;
      Provider@1100281017 : Record 50000;
      ServiceMgtSetup@1100281004 : Record 5911;
      ServiceHeaderDevice@1100281033 : Record 50072;
      ServHeader@1100281043 : Record 5900;
      FaultReason@1100281042 : Record 5917;
      InterventionMgt@1100281000 : Codeunit 50014;
      ServiceTimeRegisterMgt@1100281010 : Codeunit 50070;
      ServiceLockingMgt@1100281013 : Codeunit 50071;
      IntervPanelInfo@1100281009 : Codeunit 50063;
      DARVAMgt@1100281049 : Codeunit 50150;
      ProvSearchFollowupMgt@1100281051 : Codeunit 50287;
      XMLText@1100281029 : BigText;
      UrgentVisible@1100281003 : Boolean INDATASET;
      ExpectedDateVisible@1100281022 : Boolean INDATASET;
      ExpectedPrevisitDateVisible@1100281044 : Boolean INDATASET;
      MoistureVisible@1100281001 : Boolean INDATASET;
      MCOEnabled@1100281002 : Boolean INDATASET;
      MinuteComments@1100281005 : Boolean INDATASET;
      ReserveComments@1100281006 : Boolean INDATASET;
      DefRepairEnabled@1100281007 : Boolean INDATASET;
      ProtActionEnabled@1100281008 : Boolean INDATASET;
      NUPursuitEnabled@1100281011 : Boolean INDATASET;
      SHAddressVisible@1100281012 : Boolean INDATASET;
      IntervDescrVisible@1100281014 : Boolean INDATASET;
      UserNextStepAvailable@1100281015 : Boolean INDATASET;
      MinutesVisible@1100281018 : Boolean INDATASET;
      DiagElecVisible@1100281019 : Boolean INDATASET;
      NotDiagVisible@1100281046 : Boolean INDATASET;
      DeviceVisible@1100281034 : Boolean INDATASET;
      QuoteMgtVisible@1100281020 : Boolean INDATASET;
      ShowQuoteActions@1100281021 : Boolean INDATASET;
      ClaimsVisible@1100281023 : Boolean INDATASET;
      ServiceHeaderClaimNo@1100281024 : Boolean INDATASET;
      Loan@1100281032 : Boolean;
      DepreciationPct@1100281031 : Decimal;
      MissionAmount@1100281030 : Decimal;
      WikiLinkVisible@1100281026 : Boolean INDATASET;
      WikiLink@1100281025 : Text[250];
      Text001@1100281027 : TextConst 'ENU=You can not uncheck %1 if the field %1 is filled;FRA=Impossible de d‚cocher %1 si le champ %2 est renseign‚';
      ServiceQuoteDesc@1100281028 : Text[30];
      FollowupText@1100281052 : Text[175];
      StatusCanceled@1100281035 : Boolean INDATASET;
      NonUrgentVisible@1100281036 : Boolean INDATASET;
      IntervProviderVisible@1100281037 : Boolean INDATASET;
      RENVisible@1100281038 : Boolean INDATASET;
      MoistureEnabled@1100281039 : Boolean INDATASET;
      MoisturePctEnabled@1100281040 : Boolean INDATASET;
      NextAppointDateEnabled@1100281041 : Boolean INDATASET;
      Text002@1100281045 : TextConst 'ENU=Non-Urgent Pursuit not permitted.;FRA=Poursuite en non urgent non autoris‚e.';
      DeductibleAmtVisible@1100281047 : Boolean INDATASET;
      PageEditable@1100281048 : Boolean INDATASET;
      ReceiptDateVisible@1000000000 : Boolean INDATASET;
      QualityCtrl@1000000001 : Boolean INDATASET;
      DARVAVisible@1000000002 : Boolean INDATASET;
      ShowCreateFollowUp@1100281050 : Boolean INDATASET;
      ShowFollowUpText@1100281053 : Boolean INDATASET;
      DARVASetup@1000000003 : Record 50126;

    LOCAL PROCEDURE OnGetRecord@1100281000();
    VAR
      lQuoteProcessCode@1100281000 : Code[10];
      lQuoteProcessStatus@1100281001 : Integer;
      lIntervQuote@1100281002 : Record 50076;
      lVendor@1000000000 : Record 23;
      lVendorNo@1000000001 : Code[20];
    BEGIN
      GetServOrderType; //IMH23.ST
      Setvisible;
      GetHelpLink;//IMH15
      //<<IMH18
      IF GetQuoteProcess(lIntervQuote, lQuoteProcessCode,lQuoteProcessStatus) THEN;
      SETRANGE("Quote Process Code Filter",lQuoteProcessCode);
      SETRANGE("Quote Proc. Status No. Filter",lQuoteProcessStatus);
      IF lQuoteProcessCode = '' THEN
        "Quote Process Status Descr." := ''
      ELSE
        CALCFIELDS("Quote Process Status Descr.");
      //>>IMH18
      //<<IMH21
      IF ServiceOrderType."Service Hdr Card Form ID" = PAGE::"Service Hdr Elec. Fail Card" THEN BEGIN
        InitDevice;
        DeviceVisible := TRUE;
      END;
      //>>IMH21
      StatusCanceled := ("Intervention Status" = "Intervention Status"::Cancel); //IMH22.ST

      IF Provider."No." <> "Provider No." THEN BEGIN
        IF Provider.GET("Provider No.") THEN; //IMH10

        // Calcul du fournisseur
        lVendorNo := Provider.GetVendorNo("Provider No.");
        IF lVendorNo <> '' THEN
          IF lVendor.GET(lVendorNo) THEN
            IF lVendor."Pay-to Vendor No." <> '' THEN
              lVendorNo := lVendor."Pay-to Vendor No.";
        SETRANGE("Vendor No. Filter", lVendorNo);
      END;
    END;

    PROCEDURE Setvisible@1100281002();
    VAR
      lServiceHeaderClaimsMgt@1100281000 : Codeunit 50068;
      lColorMgt@1100281001 : Codeunit 50088;
    BEGIN
      UrgentVisible := Urgent;
      MoistureVisible := Moisture;
      MCOEnabled := "Protective Action";
      //<<IMH08
      //DefRepairEnabled := ("Non-Urgent Pursuit"="Non-Urgent Pursuit"::No) AND (NOT "Protective Action");
      DefRepairEnabled := (("Non-Urgent Pursuit"="Non-Urgent Pursuit"::No) AND (NOT "Protective Action"))
                          OR ("Non-Urgent Pursuit"="Non-Urgent Pursuit"::" ");//IMH37
      NUPursuitEnabled := NOT("Definitive Repair");
      ProtActionEnabled := NOT("Definitive Repair");
      SHAddressVisible := "Address No." <> 0;
      //>>IMH08
      //<<IMH26.ISAT.EBA
      IF ServiceOrderType.Assistance THEN BEGIN
        DefRepairEnabled := FALSE;
        NUPursuitEnabled := FALSE;
        ProtActionEnabled := FALSE;
      END;
      //>>IMH26.ISAT.EBA

      //<<IMH10
      IntervDescrVisible := (ServiceOrderType."Service Hdr Card Form ID" =
            PAGE::"Service Hdr REN Card") AND (ServiceOrderType.Expert);
      //<<IMH44.PC
      //MinutesVisible := NOT (ServiceOrderType."Service Hdr Card Form ID" IN [
      //      PAGE::"Service Hdr Real Estate Diag.",
      //      PAGE::"Service Hdr Elec. Fail Card"]);
      MinutesVisible := NOT (ServiceOrderType."Service Hdr Card Form ID" IN [PAGE::"Service Hdr Real Estate Diag."]);
      //>>IMH44.PC
      DiagElecVisible := (ServiceOrderType."Service Hdr Card Form ID" IN [
            PAGE::"Service Hdr Real Estate Diag.",
            PAGE::"Service Hdr Elec. Fail Card"]);
      NotDiagVisible := NOT (ServiceOrderType."Service Hdr Card Form ID" IN [
            PAGE::"Service Hdr Real Estate Diag."]);
      QuoteMgtVisible := (ServiceOrderType."Service Hdr Card Form ID" IN [
            PAGE::"Service Hdr REN Card",
            PAGE::"Service Hdr Assistance Card"]) AND ServiceOrderType."Quote Management";
      ExpectedDateVisible := (NOT (DiagElecVisible)) AND (NOT UrgentVisible)
                  OR ("Non-Urgent Pursuit"="Non-Urgent Pursuit"::Yes);
      ExpectedPrevisitDateVisible := ExpectedDateVisible AND (NOT Urgent);

      NonUrgentVisible := (NOT UrgentVisible) OR ("Non-Urgent Pursuit"="Non-Urgent Pursuit"::Yes);
      //>>IMH10
      CALCFIELDS("User Next Step Available");
      UserNextStepAvailable := ("User Next Step Available" OR ("Process Code"=''));

      ShowQuoteActions := IntervPanelInfo.ShowQuoteActivities(Rec); //IMH11.ST
      //<<IMH12//
      ClaimsVisible := lServiceHeaderClaimsMgt.ClaimsEnabled;
      ServiceHeaderClaimNo := "Service Header Claims No." <> '';
      //>>IMH12
      lColorMgt.PageIdentifLoadXML(XMLText,DATABASE::"Service Intervention Line","Service Header No.",9);//IMH20

      IntervProviderVisible := NOT DiagElecVisible;

      //IMH24
      RENVisible := (ServiceOrderType."Service Hdr Card Form ID" =
                      PAGE::"Service Hdr REN Card");


      //<<IMH38.ISAT.EBA
      DeductibleAmtVisible :=
        (ServiceOrderType."Service Hdr Card Form ID" = PAGE::"Service Hdr REN Card") OR
        (ServiceOrderType."Service Hdr Card Form ID" = PAGE::"Service Hdr Assistance Card");
      //>>IMH38.ISAT.EBA

      //<<IMH45
      ReceiptDateVisible := NOT (ServiceOrderType."Service Hdr Card Form ID" = PAGE::"Service Hdr Real Estate Diag.");
      //>>IMH45
      //<<IMH25.ISAT.EBA
      ServHeader.GET(ServHeader."Document Type"::Invoice,"Service Header No.");

      IF NOT FaultReason.GET(ServHeader."Service Cause") THEN
        FaultReason.INIT;

      MoistureEnabled := FaultReason.Moisture;
      MoisturePctEnabled := FaultReason.Moisture;
      NextAppointDateEnabled := FaultReason.Moisture;
      //>>IMH25.ISAT.EBA

      //<<IMH54
      DARVAVisible := IsDARVAButtonVisible;
      //>>IMH54

      //<<IMH59
      ShowCreateFollowUp := (FollowupText = '');
      ShowFollowUpText := (FollowupText <> '');
      //IMH59
    END;

    PROCEDURE GetHelpLink@1100281018();
    VAR
      lHelpMgt@1100281000 : Codeunit 50084;
    BEGIN
      //IMH15
      //<<IMH47
      //WikiLinkVisible := lHelpMgt.RunHelp("Process Code","Process Status No.","Service Order Type","Corporate No.",WikiLink);
      GetWikiLink(WikiLinkVisible, WikiLink);
      //>>IMH47
    END;

    PROCEDURE RunHelp@1100281011();
    BEGIN
      //IMH15
      HYPERLINK(WikiLink);
    END;

    PROCEDURE ShowHistoryList@1100281001(pTableId@1100281002 : Integer;pFieldNo@1100281003 : Integer;pDate@1100281004 : Boolean;pDec@1100281005 : Boolean);
    VAR
      lServiceFieldHistory@1100281000 : Record 50087;
      lServiceFieldHistoryList@1100281001 : Page 50183;
    BEGIN
      lServiceFieldHistory.SETRANGE("Table ID",pTableId);
      lServiceFieldHistory.SETRANGE("Field No.",pFieldNo);
      lServiceFieldHistory.SETRANGE("Service Header No.","Service Header No.");
      lServiceFieldHistory.SETRANGE("Intervention Line No.","Line No.");
      lServiceFieldHistoryList.InitList(pDate,pDec);
      lServiceFieldHistoryList.SETTABLEVIEW(lServiceFieldHistory);
      lServiceFieldHistoryList.RUNMODAL;
    END;

    PROCEDURE ShowHistoryListRange@1100281003(pTableId@1100281002 : Integer;pFieldNo@1100281003 : Text[30];pDate@1100281004 : Boolean;pDec@1100281005 : Boolean);
    VAR
      lServiceFieldHistory@1100281000 : Record 50087;
      lServiceFieldHistoryList@1100281001 : Page 50183;
    BEGIN
      lServiceFieldHistory.SETRANGE("Table ID",pTableId);
      lServiceFieldHistory.SETFILTER("Field No.",pFieldNo);
      lServiceFieldHistory.SETRANGE("Service Header No.","Service Header No.");
      lServiceFieldHistory.SETRANGE("Intervention Line No.","Line No.");
      lServiceFieldHistoryList.InitList(pDate,pDec);
      lServiceFieldHistoryList.SETTABLEVIEW(lServiceFieldHistory);
      lServiceFieldHistoryList.RUNMODAL;
    END;

    PROCEDURE InitDevice@1100281005();
    VAR
      lServiceHeaderDevice@1100281000 : Record 50072;
    BEGIN
      //IMH21
      IF NOT ServiceHeaderDevice.GET("Service Header No.") THEN
        EXIT;
      DepreciationPct := ServiceHeaderDevice."Depreciation %";
      Loan := ServiceHeaderDevice.Loan;
      MissionAmount := ServiceHeaderDevice."Mission Amount";
    END;

    LOCAL PROCEDURE GetServOrderType@1100281006();
    BEGIN
      //IMH03.ST
      IF ServiceOrderType.Code <> "Service Order Type" THEN
        IF NOT ServiceOrderType.GET("Service Order Type") THEN
          CLEAR(ServiceOrderType);
    END;

    PROCEDURE DARVASendDRT@1100281004();
    VAR
      lVendorLedgerEntry@1100281002 : Record 25;
      lDARVAMgt@1100281001 : Codeunit 50150;
      lRecRef@1100281000 : RecordRef;
    BEGIN
      // IMH38.PC

      lVendorLedgerEntry.SETCURRENTKEY("Service No.","Service Header No.","Intervention Line No.");
      lVendorLedgerEntry.SETRANGE("Service No.","Service No.");
      lVendorLedgerEntry.SETRANGE("Service Header No.","Service Header No.");
      lVendorLedgerEntry.SETRANGE("Intervention Line No.","Line No.");
      lVendorLedgerEntry.FINDFIRST;
      lRecRef.GETTABLE(lVendorLedgerEntry);
      //<<IMH52.PC
      //lDARVAMgt.CreateSendMQ_SDR(lRecRef,'DRT');
      //<<IMH55.ACO
      {lDARVAMgt.CreateSendMQ_SDR(
        lRecRef,'DRT',
        lVendorLedgerEntry."Corporate No.",
        lVendorLedgerEntry."Corporate Region Code",
        lVendorLedgerEntry."Service Order Type");
      }
      DARVASetup.GET;

      lDARVAMgt.CreateSendMQ_SDR(
        lRecRef, DARVASetup."DARVA DRT Code",
        lVendorLedgerEntry."Corporate No.",
        lVendorLedgerEntry."Corporate Region Code",
        lVendorLedgerEntry."Service Order Type");
      //>>IMH55.ACO
      //>>IMH52.PC
    END;

    PROCEDURE GetServRefNo@1100281007() : Code[30];
    VAR
      lService@1100281000 : Record 50066;
    BEGIN
      IF lService.GET("Service No.") THEN
        EXIT(lService."Reference No.");
    END;

    LOCAL PROCEDURE IsDARVAButtonVisible@1000000001() : Boolean;
    VAR
      lCustomer@1000000000 : Record 18;
      lVisible@1000000001 : Boolean;
      lCorporateRegion@1000000002 : Record 50058;
      lServiceHeader@1000000003 : Record 5900;
    BEGIN
      //IMH54
      lVisible := FALSE;

      IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,"Service Header No.") THEN BEGIN
        IF NOT lServiceHeader."DARVA Interface" THEN
          EXIT(lVisible);

        //<<IMH58.ACO
        IF lCustomer.GET(lServiceHeader."Corporate No.") THEN
        //IF lCustomer.GET(lServiceHeader."Customer No.") THEN
        //>>IMH58.ACO
          lVisible := lCustomer."Show DARVA Button";
      END;

      IF NOT lVisible THEN
        IF lCorporateRegion.GET("Corporate No.","Corporate Region Code") THEN
          lVisible := lCorporateRegion."Show DARVA Button";
      EXIT(lVisible);
    END;

    PROCEDURE GetProviderFollowup@1100281008();
    VAR
      lProvider@1100281000 : Record 50000;
    BEGIN
      //IMH59
      IF lProvider.GET("Provider No.") THEN BEGIN
        FollowupText := lProvider."Follow Up";
      END;
      ShowFollowUpText := FollowupText <> '';
      ShowCreateFollowUp := NOT ShowFollowUpText;
    END;

    BEGIN
    {
      /** @r IMH59 @d 09/04/14 @a ISAT.ZW @v IMH6.01.P011 @s New Provider Search @c Ajouter la gestion de suivi prestataire */
      /** @r IMH58 @d 19/12/13 @a ISAT.ACO @v IMH6.01.4900 @s DARVA MATMUT Lot 1 @h 4900
          @c Correction affichage bouton DARVA */
      /** @r IMH57 @d 14/10/13 @a ISAT.ST @v IMH6.01.353 @s Reorganisation region IMH @h 4800 @c Infos CR -> AR du prestataire */
      /** @r IMH56 @d 14/10/13 @a ISAT.ST @v IMH6.01.353 @s Reorganisation region IMH @h 4760 @c Renommage CR / AR */
      /** @r IMH55 @d 03/09/13 @a ISAT.ACO @v IMH6.01.350 @s SystŠme d'aiguillage @c ParamŠtres DARVA */
      /** @r IMH54 @d 26/08/13 @a ISAT.ACO @v IMH6.01.348 @s Darva MATMUT Lot1
          @c Ajout bouton DARVA */
      /** @r IMH53 @d 09/07/13 @a ISAT.PC @v IMH6.01.346 @s HOTFIX
          @c sur part InterventionDescription modification de la proprit‚ visible de IntervDescrVisible … TRUE
          @c sur part InterventionDescription modification de la proprit‚ Enabled de TRUE … IntervDescrVisible
          @c sur part "Service Interv. Minutes Subf." modification de la proprit‚ visible de MinutesVisible … TRUE
          @c sur part "Service Interv. Minutes Subf." modification de la proprit‚ Enabled de TRUE … MinutesVisible */
      /** @r IMH52 @d 27/06/13 @a ISAT.PC @v IMH6.01.350 @s SystŠme d'aiguillage @c Modification */
      /** @r IMH51 @d 19/06/13 @a ISAT.ACO @v IMH6.01.347 @s JUIN @h 4387
          @c Ajout champs "Other Phone No. Type" et "Other Phone No." */
      /** @r IHM50 @d 15/03/12 @a ISAT.ZW @v IMH6.01.340 @s NEP IMH 4 @h 4407 @c Ajout raffraichissment page … la modif */
      /** @r IMH49 @d 13/02/13 @a ISAT.PC @v IMH6.01.215 @h 4121 @s Ajout "Create date" sur la cl‚ secontraire
          @c modification de la propri‚t‚ RunFormView de l'action document joint
          @c de SORTING(Service No.,Service Document No.,Service Intervention Line No.,Intervention Quote Line No.)
          @c a SORTING(Service No.,Service Document No.,Service Intervention Line No.,Creation Date)
      /** @r IMH48 @d 28/09/12 @a ISAT.ML @v IMH6.01.213 @s Projet SMS @c ajout fonctionnalit‚ send SMS */
      /** @r IMH47 @d 18/07/12 @a ISAT.PC @v IMH6.01.226 @s version 1.4 @h 3537 @c Lien Wiki service + intervention */
      /** @r IMH46 @d 18/07/12 @a ISAT.ZW @v IMH6.01.226 @s version 1.4 @h 3495
          @c Afficher champ "Extranet" */
      /** @r IMH45 @d 14/05/12 @a ISAT.PC @v IMH6.01.011 @s Gestion du service @h 1910 @c Champ visible */
      /** @r IMH44 @d 21/03/12 @a ISAT.PC @v IMH6.01.146 @s Facturation @h 3174 @c Panne ‚lectro */
      /** @r IMH43 @d 14/03/12 @a ISAT.PC @v IMH6.01.134 @s DARVA @h 2851 @c Ajout lien transparent */
      /** @r IMH42 @d 17/02/12 @a ISAT.ST @v IMH6.01.108 @s Interactions @c Envoi mail / fax */
      /** @r IMH41 @d 16/01/12 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Appel filtre ServiceCode */
      /** @r IMH40 @d 14/01/12 @a ISAT.PC @v IMH6.01.129 @s CTI @c Ajout du dev pour la partie CTI */
      /** @r IMH39 @d 05/12/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Verrou service pour les fonction */
      /** @r IMH38 @d 03/02/11 @a ISAT.EBA @v IMH6.01.011 @s Gestion du service @c Affichage Montant Franchise  */
      /** @r IMH37 @d 30/08/11 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c 1239 */
      /** @r IMH36 @d 13/05/11 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service
          @c Ajout champ 78,79  Expected Arrival Date / Time, renomer champs 53, 54 … date/heure arrvi‚e r‚elle
          @c urgent non editalbe  */
      /** @r IMH26 @d 18/04/11 @a ISAT.EBA @v IMH6.01.011 @s Gestion du service @c Ajout de code */
      /** @r IMH25 @d 18/04/11 @a ISAT.EBA @v IMH6.01.011 @s Gestion du service @c Humidit‚ */
      /** @r IMH24 @d 07/04/11 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Ajout champs Montant Franchise et Montant V‚tust‚  */
      /** @r IMH23 @d 31/03/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Ajout Fonction GetServOrderType + appels */
      /** @r IMH22 @d 18/03/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Ajout motif annulation */
      /** @r IMH21 @d 09/03/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout champs li‚s panne ‚lectro
          @c Ajout accŠs calendrier prestataire */
      /** @r IMH20 @d 08/03/11 @a ISAT.LLT @v IMH6.01.122 @s Gestion des commentaires
          @c Changement accŠs form commentaires
          @c Ajout couleur */
      /** @r IMH19 @d 08/03/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Modif appel devis */
      /** @r IMH18 @d 03/03/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout champs devis en traitement et ‚tat devis */
      /** @r IHM17 @d 04/03/10 @a ISAT.ZW @v IMH6.01.004 @s GED @c renomer interaction report‚ en Brouillons */
      /** @r IMH16 @d 03/03/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout Historique date prochain contr“le
      /** @r IMH15 @d 01/03/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout lien WIKI*/
      /** @r IMH14 @d 28/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout champ suspendu */
      /** @r IMH13 @d 25/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c description statut en gras */
      /** @r IMH12 @d 17/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Diag et panne electro : Champs suivi de travaux … masquer
          @c Ajout champ nø ligne r‚clamation */
      /** @r IMH11 @d 16/02/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Affichage ActionsDevis conditionn‚ */
      /** @r IMH10 @d 20/01/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout E-Mail MEO et info prestat */
      /** @r IMH09 @d 03/01/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Gestion du verrou */
      /** @r IMH08 @d 16/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Design */
      /** @r IMH07 @d 01/12/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Fonction cr‚er interaction */
      /** @r IMH06 @d 26/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Lien vers devis */
      /** @r IMH05 @d 08/11/10 @a ISAT.ZW @v IMH6.01.102 @s Gestion des statuts @c Ajout Process Code + Process Type */
      /** @r IMH04 @d 25/10/10 @a ISAT.ZW @v IMH6.01.012 @s Gestion de l'intervention
          @c Todo --> Tray Line + fonction Cr‚er Activit‚ corbeille*/
      /** @r IMH03 @d 20/10/10 @a ISAT.ZW @v IMH6.01.012 @s Gestion de l'intervention @c Ajout fonction cr‚er action */
      /** @r IMH02 @d 14/10/10 @a ISAT.ZW @v IMH6.01.012 @s Gestion de l'intervention @c Fonction Cr‚er devis */
      /** @r IMH01 @d 04/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Cr‚ation */
    }
    END.
  }
}