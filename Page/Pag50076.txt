OBJECT Page 50076 Service Card
{
  OBJECT-PROPERTIES
  {
    Date=19/06/14;
    Time=12:20:59;
    Modified=Yes;
    Version List=IMH6.01,AOUT;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Card;
               FRA=Service];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table50066;
    DataCaptionExpr=GetCaption;
    PageType=Card;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=,Process,Report,Additional,Communication,Help;
                                FRA=,Processus,Etat,Compl‚ment,Communication,Aide];
    ShowFilter=No;
    OnOpenPage=VAR
                 lWinShell@1100281000 : Codeunit 50094;
               BEGIN
                 ServTimeReg.OpenObjectID(CurrPage.OBJECTID(FALSE));
                 IF "Service No." <> '' THEN BEGIN
                   SETRANGE("Service No.","Service No.");
                   OnGetRecord;
                 END;
                 //<<IMH08
                 IF ServiceLockingMgt.ServiceCard_GetLock(Rec,TRUE) THEN BEGIN
                   EditAllField := TRUE;
                   lWinShell.EditMode;
                 END ELSE BEGIN
                   EditAllField := FALSE;
                 END;
                 //>>IMH08
                 companyinfo.GET;
               END;

    OnClosePage=BEGIN
                  ServTimeReg.CloseObject;
                  IF ServiceLockingMgt.ServiceCard_ReleaseLock(Rec) THEN;//IMH08
                END;

    OnAfterGetRecord=BEGIN
                       ServTimeReg.OnAfterGetServiceRecord(Rec);
                       OnGetRecord;
                       ColorMgt.PageIdentifLoadXML(XMLText,DATABASE::Service,"Service No.",9);//IMH15
                       GetServFieldDescription;
                       //<<IMH28.PC
                       ServiceHeaderAllowed := "Service Header Allowed";
                       //>>IMH28.PC
                     END;

    ActionList=ACTIONS
    {
      { 1100281004;0 ;ActionContainer;
                      Name=<Action1100281004>;
                      ActionContainerType=ActionItems }
      { 1100281044;1 ;Action    ;
                      Name=<Action1100281063>;
                      CaptionML=[ENU=SERVICE;
                                 FRA=SERVICE];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=DepreciationBooks;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 IF TRUE THEN;
                               END;
                                }
      { 1100281030;1 ;ActionGroup;
                      Name=<Action1100281068>;
                      CaptionML=[ENU=Function&s;
                                 FRA=Fonction&s] }
      { 1100281046;2 ;Action    ;
                      CaptionML=[ENU=Create Service Header;
                                 FRA=Cr‚er ligne produit];
                      Promoted=Yes;
                      Visible=ServiceHeaderAllowed;
                      Enabled=EditAllField;
                      PromotedIsBig=Yes;
                      Image=AddAction;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 CreateServiceHdr;
                               END;
                                }
      { 1100281034;2 ;Action    ;
                      Name=<Action1100281068>;
                      CaptionML=[ENU=Create Tray Line;
                                 FRA=Cr‚er activit‚ corbeille];
                      Promoted=Yes;
                      Enabled=EditAllField;
                      Image=BinContent;
                      PromotedCategory=New;
                      OnAction=VAR
                                 lTrayLineMgt@1100281000 : Codeunit 50050;
                               BEGIN
                                 lTrayLineMgt.CreateTLFromService(Rec, '', '', TRUE);
                               END;
                                }
      { 1100281014;2 ;Action    ;
                      CaptionML=[ENU=Create &Interact;
                                 FRA=Cr‚er &interaction];
                      Promoted=Yes;
                      Enabled=EditAllField;
                      Image=CreateInteraction;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 //IMH07 isat.zw
                                 CreateInteraction;
                               END;
                                }
      { 1100281055;2 ;Separator  }
      { 1100281053;2 ;Action    ;
                      Name=<Action1100281053>;
                      CaptionML=[ENU=Next Step;
                                 FRA=Etape suivante];
                      Promoted=Yes;
                      Visible=UserNextStepAvailable;
                      Enabled=EditAllField;
                      PromotedIsBig=Yes;
                      Image=SelectItemSubstitution;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lProcessServMgt@1100281000 : Codeunit 50042;
                               BEGIN
                                 lProcessServMgt.SelectNextStep(Rec);
                               END;
                                }
      { 1100281067;1 ;Action    ;
                      Name=HelpAction;
                      CaptionML=[ENU=Help;
                                 FRA=Aide];
                      Promoted=Yes;
                      Visible=WikiLinkVisible;
                      PromotedIsBig=Yes;
                      Image=View;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 RunHelp;//IMH14
                               END;
                                }
      { 1100281032;0 ;ActionContainer;
                      CaptionML=FRA=Action;
                      ActionContainerType=RelatedInformation }
      { 1100281064;1 ;ActionGroup;
                      Name=<Action1100281064>;
                      CaptionML=[ENU=Communication;
                                 FRA=Communication];
                      ActionContainerType=NewDocumentItems }
      { 1000000000;2 ;Action    ;
                      Name=<Action1100281065>;
                      CaptionML=[ENU=Send Mail;
                                 FRA=Envoi de mail];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendTo;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 lSendMail@1100281000 : Codeunit 50128;
                               BEGIN
                                 lSendMail.SendMailFromService(Rec, '');
                               END;
                                }
      { 1100281068;2 ;Action    ;
                      Name=<Action1100281068>;
                      CaptionML=[ENU=Send SMS;
                                 FRA=Envoi de SMS];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendTo;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 lSMSMgt@1100281002 : Codeunit 50225;
                                 lType@1100281000 : 'Service,Service Header,Intervention';
                               BEGIN
                                 lSMSMgt.SendSMSFromService(lType::Service,Rec,'',0, TRUE);
                               END;
                                }
      { 1100281037;2 ;Action    ;
                      Name=<Action1100281039>;
                      CaptionML=[ENU=Postponed &Interactions;
                                 FRA=Brouillons];
                      RunObject=Page 5082;
                      RunFormView=SORTING(Service No.,Service Header No.,Intervention Line No.,Date,Postponed);
                      RunFormLink=Service No.=FIELD(Service No.) }
      { 1100281006;2 ;Separator  }
      { 1100281022;2 ;Action    ;
                      Name=Comments;
                      CaptionML=[ENU=Co&mments;
                                 FRA=Co&mmentaires];
                      RunObject=Page 50230;
                      RunFormView=SORTING(Source No.,Creation Date)
                                  ORDER(Descending)
                                  WHERE(Source Table ID=FILTER(5900|50066|50075),
                                        Called From Source Table ID=CONST(50066));
                      RunFormLink=Source No.=FIELD(Service No.);
                      Promoted=Yes;
                      Image=ViewComments;
                      PromotedCategory=Category5 }
      { 1100281039;2 ;Action    ;
                      Name=<Action1100281038>;
                      CaptionML=[ENU=Interaction Log E&ntries;
                                 FRA=Ecritures &journal interaction];
                      RunObject=Page 5076;
                      RunFormView=SORTING(Service No.,Service Header No.,Intervention Line No.,Date,Postponed);
                      RunFormLink=Service No.=FIELD(Service No.);
                      Promoted=Yes;
                      Image=Track;
                      PromotedCategory=Category5 }
      { 1100281050;2 ;Action    ;
                      Name=<Action1100281028>;
                      CaptionML=[ENU=Service Header Attach. Document;
                                 FRA=Documents joints];
                      RunObject=Page 50015;
                      RunFormView=SORTING(Service No.,Service Document No.,Service Intervention Line No.,Creation Date);
                      RunFormLink=Service No.=FIELD(Service No.);
                      Promoted=Yes;
                      Image=Documents;
                      PromotedCategory=Category5 }
      { 1100281023;1 ;Action    ;
                      Name=<Action1100281023>;
                      CaptionML=[ENU=Current Tray Lines;
                                 FRA=Activit‚s en cours];
                      Image=Bins;
                      OnAction=BEGIN
                                 ServiceInfoPane.LookupTrayLines("Service No.", TRUE);
                               END;
                                }
      { 1100281028;1 ;Action    ;
                      Name=<Action1100281028>;
                      CaptionML=[ENU=Intervention;
                                 FRA=Interventions];
                      RunObject=Page 50069;
                      RunFormView=SORTING(Service Header No.,Line No.);
                      RunFormLink=Service No.=FIELD(Service No.);
                      Image=Components }
      { 1100281062;1 ;Separator  }
      { 1100281059;1 ;Action    ;
                      Name=History;
                      CaptionML=[ENU=History;
                                 FRA=Historiques];
                      RunObject=Page 595;
                      RunFormView=SORTING(Table No.,Primary Key Field 1 Value)
                                  WHERE(Table No.=CONST(50066));
                      RunFormLink=Primary Key Field 1 Value=FIELD(No. Series);
                      Promoted=Yes;
                      Image=History;
                      PromotedCategory=Process }
      { 1100281057;1 ;Action    ;
                      Name=<Action1100281057>;
                      CaptionML=[ENU=Process Status History;
                                 FRA=Historique statut processus];
                      RunObject=Page 50156;
                      RunFormLink=Source Table ID=CONST(50066),
                                  Source Key Code 1=FIELD(Service No.) }
      { 1100281020;1 ;Action    ;
                      Name=<Action1100281023>;
                      CaptionML=[ENU=Tray Line History;
                                 FRA=Activit‚s archiv‚es];
                      Image=Bins;
                      OnAction=BEGIN
                                 ServiceInfoPane.LookupTrayLineHist("Service No.");
                               END;
                                }
      { 1100281061;1 ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 FRA=Statistiques];
                      Image=Statistics;
                      OnAction=BEGIN
                                 FORM.RUNMODAL(FORM::"Service Statistics Page",Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100281000;1;Group  ;
                CaptionML=[ENU=General;
                           FRA=G‚n‚ral];
                Editable=EditAllField }

    { 1100281040;2;Field  ;
                DrillDown=No;
                SourceExpr="Process Status Description";
                Style=Favorable;
                StyleExpr=TRUE }

    { 1100281066;2;Group  ;
                Visible=StatusCanceled;
                GroupType=Group }

    { 1100281058;3;Field  ;
                SourceExpr="Cancel Reason Code" }

    { 1100281063;2;Field  ;
                CaptionML=[ENU=Service No.;
                           FRA=Nø service];
                SourceExpr=XMLText;
                Editable=FALSE;
                ControlAddIn=[Isatech.IMH.PageIdentifaction;PublicKeyToken=c1f98940aa27b996] }

    { 1100281005;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=Yes;
                SourceExpr="Contact No.";
                Editable=false;
                OnValidate=BEGIN
                             IF Contact.GET("Contact No.") THEN;
                           END;

                OnAssistEdit=VAR
                               lContact@1100281000 : Record 5050;
                               lContactCard@1100281002 : Page 5050;
                             BEGIN
                               lContact.GET("Contact No.");
                               lContactCard.SETRECORD(lContact);
                               lContactCard.SETTABLEVIEW(lContact);
                               lContactCard.EDITABLE(FALSE);
                               lContactCard.RUNMODAL;
                               //PAGE.RUNMODAL(PAGE::"Contact Card",lContact);
                               //VALIDATE("Contact No.");
                             END;
                              }

    { 1100281026;2;Field  ;
                SourceExpr="Alt. Address Code";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100281054;2;Field  ;
                SourceExpr="Contact Name";
                Importance=Promoted }

    { 1100281019;2;Field  ;
                CaptionML=[ENU=Address *;
                           FRA=Adresse *];
                SourceExpr=Address }

    { 1100281021;2;Field  ;
                SourceExpr="Address 2";
                Importance=Additional }

    { 1100281048;2;Field  ;
                SourceExpr="Address 3";
                Importance=Additional }

    { 1100281002;2;Field  ;
                CaptionML=[ENU=Post Code *;
                           FRA=Code postal *];
                SourceExpr="Post Code" }

    { 1100281025;2;Field  ;
                CaptionML=[ENU=City *;
                           FRA=Ville *];
                SourceExpr=City }

    { 1100281027;2;Field  ;
                Lookup=No;
                DrillDown=No;
                CaptionML=[ENU=Country/Region Code;
                           FRA=Code pays/region];
                SourceExpr=GetCountryRegionCode;
                Importance=Additional;
                OnValidate=BEGIN
                             ColorMgt.PageIdentifLoadXML(XMLText,DATABASE::Service,"Service No.",9);//IMH15
                           END;
                            }

    { 1100281038;2;Field  ;
                ExtendedDatatype=Phone No.;
                CaptionML=[ENU=Phone No.;
                           FRA=Nø t‚l‚phone];
                SourceExpr="Contact Phone No.";
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               //<<IMH22.PC
                               PhoneNoAssistEdit("Contact Phone No.");
                               //>>IMH22.PC
                             END;
                              }

    { 1100281029;2;Field  ;
                SourceExpr="Contact Mobile Phone No.";
                OnAssistEdit=BEGIN
                               //<<IMH22.PC
                               PhoneNoAssistEdit("Contact Mobile Phone No.");
                               //>>IMH22.PC
                             END;
                              }

    { 1100281036;2;Field  ;
                SourceExpr="Member No." }

    { 1100281003;2;Field  ;
                Lookup=No;
                DrillDown=No;
                CaptionML=[ENU=Corporate No.;
                           FRA=Nø Grand Compte];
                SourceExpr="Corporate No.";
                Editable=false }

    { 1100281024;2;Field  ;
                DrillDown=No;
                AssistEdit=No;
                CaptionML=[ENU=Corporate Region Code;
                           FRA=Code r‚gion Grand Compte];
                SourceExpr="Corporate Region Code";
                Editable=TRUE;
                OnValidate=BEGIN
                             //IMH19
                             ServiceFormMgt.CorporateRegion_Validate(CorporateRegionDesc
                               ,"Corporate No."
                               ,"Corporate Region Code");
                             //<<IMH38
                             IF xRec."Corporate Region Code" <> Rec."Corporate Region Code" THEN BEGIN
                               "Corporate Contact No." := '';
                               VALIDATE("Corporate Contact No.",'');
                             END;
                             //>>IMH38
                           END;

                OnLookup=BEGIN
                           //IMH19
                           ServiceFormMgt.CorporateRegion_Lookup(CorporateRegionDesc
                             ,"Corporate No."
                             ,"Corporate Region Code");
                           //<<IMH38
                           IF xRec."Corporate Region Code" <> Rec."Corporate Region Code" THEN BEGIN
                             "Corporate Contact No." := '';
                             VALIDATE("Corporate Contact No.",'');
                           END;
                           //>>IMH38
                         END;
                          }

    { 1100281011;2;Field  ;
                AssistEdit=Yes;
                CaptionML=[ENU=Corporate Contact No.;
                           FRA=Nø Contact Grand Compte];
                SourceExpr="Corporate Contact No.";
                OnValidate=BEGIN
                             //CALCFIELDS("Corporate Contact Name");
                             CurrPage.UPDATE;
                           END;

                OnAssistEdit=BEGIN
                               OpenContactCard("Corporate Contact No.");
                             END;
                              }

    { 1100281049;2;Field  ;
                Name=CorporateContact;
                CaptionML=[ENU=Corporate Contact;
                           FRA=Contact Grand Compte];
                SourceExpr=CorporateContactDesc;
                OnValidate=BEGIN
                             //IMH16
                             ServiceFormMgt.CorporateContact_Validate(CorporateContactDesc
                               ,"Corporate No."
                               ,"Corporate Region Code"
                               ,"Corporate Contact No.")
                           END;

                OnLookup=BEGIN
                           //IMH16
                           ServiceFormMgt.CorporateContact_Lookup(CorporateContactDesc
                             ,"Corporate No."
                             ,"Corporate Region Code"
                             ,"Corporate Contact No.")
                         END;
                          }

    { 1100281012;2;Field  ;
                CaptionML=[ENU=Contact Job Responsibility;
                           FRA=Responsabilit‚ contact];
                SourceExpr=GetCorporateContactJobResp;
                Editable=FALSE }

    { 1100281045;2;Field  ;
                SourceExpr="Confidence Prior" }

    { 1100281041;2;Field  ;
                SourceExpr="VIP Code";
                Importance=Additional }

    { 1100281056;2;Field  ;
                Name=ContractForm;
                CaptionML=[ENU=Contract Form;
                           FRA=Formule];
                SourceExpr=ContractFormDesc;
                OnValidate=BEGIN
                             //IMH20
                             ServiceFormMgt.ContactContractForm_Validate(ContractFormDesc,"Contract Form Code","Contact No.","Corporate No.","Event Date");
                           END;

                OnLookup=BEGIN
                           //IMH20
                           IF ServiceFormMgt.ContactContractForm_Lookup(ContractFormDesc,"Contract Form Code","Contact No.","Corporate No.","Event Date") THEN
                               VALIDATE("Contract Form Code");
                         END;
                          }

    { 1100281035;2;Field  ;
                SourceExpr="Contract Reference";
                Editable=FALSE }

    { 1100281956;1;Group  ;
                Name=EvenmentGroup;
                CaptionML=[ENU=Evenment;
                           FRA=EvŠnement];
                GroupType=Group }

    { 1100281047;2;Field  ;
                SourceExpr="Reference No.";
                Editable=EditAllField }

    { 1100281917;2;Field  ;
                CaptionML=[ENU=Event Date;
                           FRA=Date ‚vŠnement *];
                SourceExpr="Event Date";
                Importance=Promoted;
                Editable=EditAllField;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100281042;2;Field  ;
                SourceExpr="Event Time";
                Editable=EditAllField }

    { 1100281031;2;Field  ;
                Name=ServiceCause;
                CaptionML=[ENU=Service Cause;
                           FRA=Cause intervention];
                SourceExpr=ServiceCauseDesc;
                Importance=Promoted;
                Editable=EditServiceCause;
                OnValidate=BEGIN
                             //IMH16
                             ServiceFormMgt.ServCause_Validate(ServiceCauseDesc,"Service Cause");
                             //<<IMH23
                             VALIDATE("Service Cause");
                             //>>IMH23
                           END;

                OnLookup=BEGIN
                           //IMH16
                           //IF NoProducts THEN
                             IF ServiceFormMgt.ServCause_Lookup(ServiceCauseDesc,"Service Cause") THEN
                               VALIDATE("Service Cause");
                         END;
                          }

    { 1100281017;2;Field  ;
                Name=OccupierNature;
                CaptionML=[ENU=Occupier Nature;
                           FRA=Nature de l'occupant];
                SourceExpr=OccupierNatureDesc;
                Editable=EditAllField;
                OnValidate=BEGIN
                             //IMH16
                             ServiceFormMgt.Code_Validate(OccupierNatureDesc,5051,50070,"Occupier Nature");
                           END;

                OnLookup=BEGIN
                           //IMH16
                           ServiceFormMgt.Code_Lookup(OccupierNatureDesc,5051,50070,"Occupier Nature");
                         END;
                          }

    { 1100281016;2;Field  ;
                Name=ResidenceType;
                CaptionML=[ENU=Residence Type;
                           FRA=Type de r‚sidence];
                SourceExpr=ResidenceTypeDesc;
                Editable=EditAllField;
                OnValidate=BEGIN
                             //IMH16
                             ServiceFormMgt.Code_Validate(ResidenceTypeDesc,5051,50071,"Residence Type");
                           END;

                OnLookup=BEGIN
                           //IMH16
                           ServiceFormMgt.Code_Lookup(ResidenceTypeDesc,5051,50071,"Residence Type");
                         END;
                          }

    { 1100281015;2;Field  ;
                Name=HousingType;
                CaptionML=[ENU=Housing Type;
                           FRA=Type d'habitation];
                SourceExpr=HousingTypeDesc;
                Editable=EditAllField;
                OnValidate=BEGIN
                             //IMH16
                             ServiceFormMgt.Code_Validate(HousingTypeDesc,5051,50072,"Housing Type");
                           END;

                OnLookup=BEGIN
                           //IMH16
                           ServiceFormMgt.Code_Lookup(HousingTypeDesc,5051,50072,"Housing Type");
                         END;
                          }

    { 1100281070;2;Group  ;
                Visible=IMARefVisible;
                GroupType=Group }

    { 1100281069;3;Field  ;
                SourceExpr="IMA Reference No.";
                Editable=false }

    { 1100281007;2;Field  ;
                Name=Campaign;
                CaptionML=[ENU=Campaign;
                           FRA=EvŠnement exceptionnel];
                SourceExpr=CampaignDesc;
                Visible=false;
                Editable=EditAllField;
                OnValidate=BEGIN
                             //IMH16
                             ServiceFormMgt.Campaign_Validate(CampaignDesc,"Campaign No.");
                             //<<IMH23
                             VALIDATE("Campaign No.");
                             //>>IMH23
                           END;

                OnLookup=BEGIN
                           //IMH16
                           //<<IMH23
                           IF ServiceFormMgt.Campaign_Lookup(CampaignDesc,"Campaign No.") THEN
                             VALIDATE("Campaign No.");
                           //>>IMH23
                         END;
                          }

    { 1100281001;2;Field  ;
                Name=PropertyType;
                CaptionML=[ENU=Property Type;
                           FRA=Type de propri‚t‚];
                SourceExpr=PropertyTypeDesc;
                Importance=Additional;
                Visible=FALSE;
                Editable=EditAllField;
                OnValidate=BEGIN
                             //IMH16
                             ServiceFormMgt.Code_Validate(PropertyTypeDesc,5051,50073,"Property Type");
                           END;

                OnLookup=BEGIN
                           //IMH16
                           ServiceFormMgt.Code_Lookup(PropertyTypeDesc,5051,50073,"Property Type");
                         END;
                          }

    { 1100281043;1;Part   ;
                Name=ServiceHeaderList;
                CaptionML=[ENU=Service Header;
                           FRA=Lignes produit];
                SubFormLink=Service No.=FIELD(Service No.),
                            Document Type=FILTER(Invoice);
                PagePartID=Page50077;
                PartType=Page }

    { 1100281060;1;Group  ;
                Name=Orders;
                CaptionML=[ENU=Orders;
                           FRA=Commandes];
                Enabled=EditAllField;
                GroupType=Group }

    { 1100281065;2;Field  ;
                SourceExpr="Sale Order Nb" }

    { 1100281159;2;Field  ;
                SourceExpr="Purchase Order Nb" }

    { 1100281008;0;Container;
                ContainerType=FactBoxArea }

    { 1100281033;1;Part   ;
                SubFormView=WHERE(Type=CONST(TableData),
                                  ID=CONST(50066));
                SubFormLink=ID=FILTER(50066);
                PagePartID=Page50208;
                PartType=Page }

    { 1100281013;1;Part   ;
                Name=CorporatePicture;
                SubFormView=SORTING(No.);
                SubFormLink=No.=FIELD(Corporate No.);
                PagePartID=Page50248;
                PartType=Page }

    { 1100281009;1;Part   ;
                Name=CorporateInfo;
                CaptionML=[ENU=CorporateInfo;
                           FRA=Grand compte];
                SubFormView=SORTING(Service No.);
                SubFormLink=Service No.=FIELD(Service No.);
                PagePartID=Page50247;
                PartType=Page }

    { 1100281018;1;Part   ;
                Name=ContractContact;
                CaptionML=[ENU=Contract Details;
                           FRA=D‚tail formule];
                SubFormView=SORTING(Contact No.,Corporate No.,Contract Form Code,Occurence No.);
                SubFormLink=Contact No.=FIELD(Contact No.),
                            Contract Form Code=FIELD(Contract Form Code),
                            Occurence No.=FIELD(Contract Occurence No.);
                PagePartID=Page50094;
                PartType=Page }

    { 1100281010;1;Part   ;
                CaptionML=[ENU=Service FactBox;
                           FRA=D‚tails service];
                SubFormView=SORTING(Service No.);
                SubFormLink=Service No.=FIELD(Service No.);
                PagePartID=Page50092 }

    { 1100281052;1;Part   ;
                Name=Notes;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

    { 1100281051;1;Part   ;
                Name=Links;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1000000001;1;Part   ;
                SubFormView=WHERE(Type=CONST(TableData),
                                  ID=CONST(50066));
                SubFormLink=ID=FILTER(50066);
                PagePartID=Page50392;
                PartType=Page }

  }
  CODE
  {
    VAR
      Customer@1100281005 : Record 18;
      Contact@1100281004 : Record 5050;
      ServTimeReg@1100281003 : Codeunit 50070;
      ServiceInfoPane@1100281001 : Codeunit 50061;
      ServiceLockingMgt@1100281007 : Codeunit 50071;
      ColorMgt@1100281015 : Codeunit 50088;
      ServiceFormMgt@1100281016 : Codeunit 50086;
      ServiceOrderType@1100281000 : Code[10];
      VIP@1100281002 : Boolean INDATASET;
      CardEditable@1100281006 : Boolean INDATASET;
      UserNextStepAvailable@1100281008 : Boolean INDATASET;
      WikiLinkVisible@1100281012 : Boolean INDATASET;
      companyinfo@1100281009 : Record 79;
      ServCause@1100281010 : Text[250] INDATASET;
      WikiLink@1100281013 : Text[250];
      XMLText@1100281014 : BigText;
      OccupierNatureDesc@1100281017 : Text[100];
      ResidenceTypeDesc@1100281018 : Text[100];
      HousingTypeDesc@1100281019 : Text[100];
      PropertyTypeDesc@1100281020 : Text[100];
      CampaignDesc@1100281021 : Text[100];
      ServiceCauseDesc@1100281022 : Text[100];
      CorporateContactDesc@1100281023 : Text[100];
      CorporateRegionDesc@1100281024 : Text[100];
      ContractFormDesc@1100281025 : Text[100];
      StatusCanceled@1100281026 : Boolean INDATASET;
      EditAllField@1100281027 : Boolean INDATASET;
      EditAddField@1100281028 : Boolean INDATASET;
      ReasonEditable@1000000000 : Boolean INDATASET;
      EditServiceCause@1000000001 : Boolean INDATASET;
      ServiceHeaderAllowed@1100281011 : Boolean INDATASET;
      IMARefVisible@1100281029 : Boolean INDATASET;

    PROCEDURE CreateServiceHdr@1100281000();
    VAR
      lServiceHeader@1100281000 : Record 5900;
    BEGIN
      IF NOT CreateServiceHeader(lServiceHeader,ServiceOrderType) THEN
        EXIT;
      COMMIT;
      lServiceHeader.ShowCard(FALSE);
    END;

    PROCEDURE GetSpecializationName@1100281001(pCode@1100281001 : Code[10]) : Text[50];
    VAR
      lSpecialization@1100281000 : Record 50005;
    BEGIN
      IF lSpecialization.GET(pCode) THEN
        EXIT(lSpecialization.Description);
    END;

    PROCEDURE GetBuildingTradeName@1100281002(pCode@1100281001 : Code[10]) : Text[50];
    VAR
      lBuildingTrade@1100281000 : Record 50032;
    BEGIN
      IF lBuildingTrade.GET(pCode) THEN
        EXIT(lBuildingTrade.Description);
    END;

    PROCEDURE GetContactName@1100281009(pContactNo@1100281000 : Code[20]) : Text[50];
    VAR
      lContact@1100281001 : Record 5050;
    BEGIN
      IF lContact.GET(pContactNo) THEN
        EXIT(lContact.Name);
    END;

    PROCEDURE OpenContactCard@1100281003(pContactNo@1100281001 : Code[20]);
    VAR
      lContact@1100281000 : Record 5050;
    BEGIN
      IF lContact.GET(pContactNo) THEN
        PAGE.RUNMODAL(PAGE::"Contact Card",lContact);
    END;

    PROCEDURE GetCaption@1100281004() : Text[80];
    BEGIN
      EXIT(STRSUBSTNO('%1 %2', TABLECAPTION, "Service No."));
    END;

    PROCEDURE SetEditable@1100281006();
    BEGIN
      IF "Corporate Contact No." = 'USERID' THEN BEGIN
        CardEditable := TRUE;
        CurrPage.UPDATE(FALSE);
      END
      ELSE BEGIN
        CardEditable := FALSE;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnGetRecord@1100281005();
    VAR
      lColorMgt@1100281000 : Codeunit 50088;
      lCustomer@1100281001 : Record 18;
    BEGIN
      CALCFIELDS("User Next Step Available");
      UserNextStepAvailable := "User Next Step Available" OR ("Process Code"='');
      VIP := ("VIP Code" <> '');
      IF Contact."No." <> "Contact No." THEN
        IF NOT Contact.GET("Contact No.") THEN
          CLEAR(Contact);
      GetHelpLink;//IMH14

      lColorMgt.PageIdentifLoadXML(XMLText,DATABASE::Service,"Service No.",9);//IMH15
      CALCFIELDS("Service Header Exists");

      EditAddField := NOT "Service Header Exists";
      //<<IMH24
      EditServiceCause := ServiceCauseEditable;
      //<<IMH24

      //IH16
      GetServFieldDescription;
      StatusCanceled := (Status = Status::Canceled);

      //<<IMH25
      IF lCustomer.GET("Corporate No.") THEN
        IMARefVisible :=lCustomer."IMA Following";
      //>>IMH25
    END;

    PROCEDURE GetHelpLink@1100281018();
    VAR
      lHelpMgt@1100281000 : Codeunit 50084;
    BEGIN
      //IMH14
      //<<IMH25
      //WikiLinkVisible := lHelpMgt.RunHelp("Process Code","Process Status No.",'','',WikiLink);
      WikiLinkVisible := lHelpMgt.RunHelp("Process Code","Process Status No.",'','',0,WikiLink);
      //>>IMH25
    END;

    PROCEDURE RunHelp@1100281011();
    BEGIN
      //IMH14
      HYPERLINK(WikiLink);
    END;

    PROCEDURE GetServFieldDescription@1100281010();
    BEGIN
      //IMH16
      OccupierNatureDesc := ServiceFormMgt.Code_Desc(5051,50070,"Occupier Nature");
      ResidenceTypeDesc := ServiceFormMgt.Code_Desc(5051,50071,"Residence Type");
      HousingTypeDesc := ServiceFormMgt.Code_Desc(5051,50072,"Housing Type");
      PropertyTypeDesc := ServiceFormMgt.Code_Desc(5051,50073,"Property Type");
      CampaignDesc := ServiceFormMgt.Campaign_Desc("Campaign No.");
      ServiceCauseDesc := ServiceFormMgt.ServCause_Desc("Service Cause");
      CorporateContactDesc := ServiceFormMgt.CorporateContact_Desc("Corporate Contact No.");
      ContractFormDesc := ServiceFormMgt.ContactContractForm_Desc("Contract Form Code","Contact No.","Corporate No.");//IMH20
    END;

    PROCEDURE GetCountryRegionCode@1100281007() : Code[10];
    BEGIN
      //<<IMH18.isat.PC
      //CurrPage.UPDATE(FALSE);
      //>>IMH18.isat.PC
      EXIT("Country/Region Code");
    END;

    PROCEDURE ServiceCauseEditable@1000000000() : Boolean;
    VAR
      lServiceHeader@1000000000 : Record 5900;
    BEGIN
      //IMH24
      lServiceHeader.SETCURRENTKEY("Service No.");
      lServiceHeader.SETRANGE("Service No.", "Service No.");
      lServiceHeader.SETFILTER(Status, '%1|%2|%3', lServiceHeader.Status::Pending, lServiceHeader.Status::"In Process",
        lServiceHeader.Status::"On Hold");  //IMH56
      EXIT(lServiceHeader.ISEMPTY);
    END;

    BEGIN
    {
      /** @r IMH25 @d 23/05/14 @a ISAT.ZW @v IMH6.01.P010 @s Projet PMU
          @c Ajouter champ 57013 chmap IMA Reference No. + masquer le champ evenement exceptionelle */
      /** @r IMH28 @d 20/08/13 @a ISAT.PC @v IMH6.01.351 @s JUILLET @h 3709
          @c Ajout de la gestion du champ Service Header Allowed */
      /** @r IMH27 @d 13/02/13 @a ISAT.PC @v IMH6.01.215 @h 4121 @s Ajout "Create date" sur la cl‚ secontraire
          @c modification de la propri‚t‚ RunFormView de l'action document joint
          @c de SORTING(Service No.,Service Document No.,Service Intervention Line No.,Intervention Quote Line No.)
          @c a SORTING(Service No.,Service Document No.,Service Intervention Line No.,Creation Date)
      /** @r IMH26 @d 26/09/12 @a ISAT.ML @v IMH6.01.213 @s Projet SMS @c ajout fonctionnalit‚ send SMS */
      /** @r IMH25 @d 18/07/12 @a ISAT.PC @v IMH6.01.226 @s version 1.4 @h 3537 @c Lien Wiki intervention */
      /** @r IMH24 @d 18/06/12 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c 2979
          @c Champ cause intervention modifiable */
      /** @r IMH23 @d 24/04/12 @a ISAT.ZW @v IMH6.01.013 @s EVC @c 3365 @c Contr“le Case intervention */
      /** @r IMH22 @d 14/01/12 @a ISAT.PC @v IMH6.01.129 @s CTI @c Ajout du dev pour la partie CTI */
      /** @r IMH21 @d 05/12/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Verrou service pour les fonction */
      /** @r IMH20 @d 29/08/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du services
          @c Modif code region
          @c Champs adresse obligatoire
          @c Affichage nom formule*/
      /** @r IHM19 @d 29/08/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion des services @c Modif code r‚gion */
      /** @r IHM18 @d 14/06/10 @a ISAT.PC @v IMH6.01.011 @s Gestion des services @c Pose problŠme car annule modification */
      /** @r IHM17 @d 06/06/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion des services @c Ajout fonction Historiques */
      /** @r IMH16 @d 11/03/11 @a ISAT.LLT @v IMH6.01.123 @s Saisie champs description */
      /** @r IMH15 @d 08/03/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout couleur */
      /** @r IHM14 @d 04/03/10 @a ISAT.ZW @v IMH6.01.004 @s GED @c renomer interaction report‚ en Brouillons */
      /** @r IMH13 @d 28/02/11 @a ISAT.ST @v IMH6.01.122 @s Gestion des commentaires @c Changement accŠs form commentaires */
      /** @r IMH12 @d 25/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c description statut en gras */
      /** @r IMH11 @d 24/02/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service */
      /** @r IMH10 @d 21/01/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout accŠs Statistiques*/
      /** @r IMH09 @d 16/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Suppression champ Intervenant (contributor) */
      /** @r IMH08 @d 06/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Gestion mode ‚dition */
      /** @r IMH07 @d 01/12/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Fonction cr‚er interaction */
      /** @r IMH06 @d 29/11/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Gestion des commentaires : vue comment. ligne produit et intervention */
      /** @r IMH05 @d 17/11/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout champ 49 Event Time */
      /** @r IMH04 @d 29/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c gestion Nø soci‚taire */
      /** @r IMH03 @d 27/10/10 @a ISAT.ZW @v IMH6.01.013 @s Gestion des corbeiles @c Todo --> Tray line:fonction Cr‚er ligne corbeille */
      /** @r IMH02 @d 20/10/10 @a ISAT.ZW @v IMH6.01.012 @s Gestion de l'intervention
          @c Ajout fonction cr‚er action + Action en cours + interventions */
      /** @r IMH01 @d 04/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Cr‚ation */
    }
    END.
  }
}