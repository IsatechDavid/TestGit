OBJECT Page 50088 Service Header FactBox
{
  OBJECT-PROPERTIES
  {
    Date=13/06/14;
    Time=14:54:01;
    Modified=Yes;
    Version List=IMH6.01,V1.4,5005;
  }
  PROPERTIES
  {
    Permissions=TableData 50168=r;
    CaptionML=[ENU=Service Header FactBox;
               FRA=D‚tails ligne produit];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table5900;
    PageType=CardPart;
    OnOpenPage=BEGIN
                 SetVisibleFields;
                 CalcNoOfRecords;
               END;

    OnFindRecord=BEGIN
                   EXIT(FIND(Which));
                 END;

    OnAfterGetRecord=BEGIN
                       SetVisibleFields;
                       CalcNoOfRecords;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100281020;1;Field  ;
                SourceExpr="Service No.";
                OnLookup=VAR
                           lService@1100281000 : Record 50066;
                         BEGIN
                           lService.GET("Service No.");
                           PAGE.RUN(PAGE::"Service Card",lService);
                         END;
                          }

    { 1100281014;1;Field  ;
                SourceExpr="No.";
                OnLookup=BEGIN
                           ShowCard(FALSE);
                         END;
                          }

    { 1100281015;1;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="Service Order Type" }

    { 1100281022;1;Field  ;
                CaptionML=[ENU=VIP Code;
                           FRA=Code VIP];
                SourceExpr=Contact."VIP Code" }

    { 1100281029;1;Group  ;
                Visible=CommentVisible;
                GroupType=Group }

    { 1100281030;2;Field  ;
                CaptionML=[ENU=Corporate Info;
                           FRA=Infos GC];
                SourceExpr=CommentVisible }

    { 1100281024;1;Group  ;
                Visible=ClaimsCauseVisible;
                GroupType=Group }

    { 1100281026;2;Field  ;
                Name=SourceLine;
                CaptionML=[ENU=Source line;
                           FRA=Ligne origine];
                SourceExpr=ServiceHeaderInfoPane.GetClaimSource(Rec);
                OnDrillDown=BEGIN
                              ServiceHeaderInfoPane.LookupClaimSource(Rec); //IMH05.ST
                            END;
                             }

    { 1100281025;2;Field  ;
                Name=ClaimsCause;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                CaptionML=[ENU=Claims Cause;
                           FRA=Motif r‚clamation];
                SourceExpr=ServiceHeaderInfoPane.GetClaimCause(Rec);
                OnDrillDown=BEGIN
                              ServiceHeaderInfoPane.LookupClaimCause(Rec);//IMH04
                            END;
                             }

    { 1100281037;1;Group  ;
                Visible=ServRefNoVisible;
                GroupType=Group }

    { 1100281038;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                CaptionML=[ENU=Reference No.;
                           FRA=Nø ‚vŠnement];
                SourceExpr=ServReferenceNo }

    { 1100281040;1;Group  ;
                Visible=DarvaMissionNbVisible;
                GroupType=Group }

    { 1100281039;2;Field  ;
                Name=DARVAMissionCtrl;
                CaptionML=[ENU=DARVA Mission;
                           FRA=Mission DARVA];
                SourceExpr=GetDarvaMissionNb;
                Editable=FALSE;
                Style=Attention;
                StyleExpr=TRUE }

    { 1100281012;1;Group  ;
                Visible=CausesVisible;
                GroupType=Group }

    { 1100281004;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                CaptionML=[ENU=Cause;
                           FRA=Cause];
                SourceExpr="Service Cause Description";
                OnDrillDown=BEGIN
                              ServiceCause.SETRANGE("Service Header No.","No.");
                              PAGE.RUN(0, ServiceCause);
                            END;
                             }

    { 1100281041;1;Group  ;
                Visible=IMARefNoVisible;
                GroupType=Group }

    { 1100281034;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                CaptionML=[ENU=IMA Reference No.;
                           FRA=Nø r‚f‚rence IMA];
                SourceExpr=IMAReferenceNo }

    { 1100281023;1;Group  ;
                Visible=AddressVisible;
                Enabled=FALSE;
                GroupType=Group }

    { 1100281001;2;Field  ;
                Name=<NoOfAddress>;
                CaptionML=[ENU=Contact Address;
                           FRA=Contacts];
                OptionCaptionML=[ENU=Address;
                                 FRA=Adresses];
                SourceExpr=NoOfAddress;
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ServiceAddress.SETRANGE("Service Header No.","No.");
                              ServiceAddress.SETRANGE("Address Type",ServiceAddress."Address Type"::"Annexe Contact");
                              FORM.RUN(0, ServiceAddress);
                            END;
                             }

    { 1100281006;1;Group  ;
                Visible=ProviderVisible;
                GroupType=Group }

    { 1100281013;2;Field  ;
                CaptionML=[ENU=Provider;
                           FRA=Prestataire];
                SourceExpr=gProviderName }

    { 1100281009;1;Group  ;
                Visible=InterVisible;
                GroupType=Group }

    { 1100281000;2;Field  ;
                Name=<NoOfInterventionLines>;
                CaptionML=[ENU=Intervention Lines;
                           FRA=Interventions];
                SourceExpr=NoOfInterventionLines;
                OnDrillDown=BEGIN
                              ServiceHeaderInfoPane.LookupIntervention(Rec);
                            END;
                             }

    { 1100281033;2;Field  ;
                CaptionML=[ENU=Remaining Specialities;
                           FRA=Sp‚cialit‚s restantes];
                SourceExpr=ServiceHeaderInfoPane.CalcNoOfSpec(Rec,TRUE) }

    { 1100281016;1;Group  ;
                Visible=LocationVisible;
                GroupType=Group }

    { 1100281017;2;Field  ;
                Name=NoOfLocation;
                CaptionML=[ENU=Affected Locations;
                           FRA=Lieux];
                SourceExpr=NoOfLocation;
                OnDrillDown=BEGIN
                              ServiceHeaderArea.SETRANGE("Service Header No.","No.");
                              PAGE.RUN(0,ServiceHeaderArea);
                            END;
                             }

    { 1100281010;1;Group  ;
                Visible=DiagVisible;
                GroupType=Group }

    { 1100281002;2;Field  ;
                Name=<NoOfDiagnosisElement>;
                CaptionML=[ENU=Diagnosis Element;
                           FRA=Elements de diagnostic];
                SourceExpr=NoOfDiagnosisElement;
                OnDrillDown=BEGIN
                              ServiceHeaderInfoPane.LookupDiagElement("No.");
                            END;
                             }

    { 1100281011;1;Group  ;
                Visible=AccomVisible;
                GroupType=Group }

    { 1100281003;2;Field  ;
                Name=<NoOfAccommOption>;
                CaptionML=[ENU=Accomm. Option;
                           FRA=Garanties compl‚mentaires];
                SourceExpr=NoOfAccommOption;
                OnDrillDown=BEGIN
                              ServiceAccommOption.SETRANGE("Service Header No.","No.");
                              ServiceAccommOption.SETRANGE(Used,TRUE);//IMH03
                              PAGE.RUN(0, ServiceAccommOption);
                            END;
                             }

    { 1100281028;1;Group  ;
                Visible=ServHeaderAddressVisible;
                GroupType=Group }

    { 1100281027;2;Field  ;
                Name=NoOfServHeaderAddress;
                CaptionML=[ENU=Implementations Facilities;
                           FRA=Moyens mis en oeuvre];
                SourceExpr=NoOfServHeaderAddress;
                OnDrillDown=BEGIN
                              ServiceHeaderAddress.SETRANGE("Service Header No.", "No.");
                              ServiceHeaderAddress.SETFILTER("Address Type", '%1|%2|%3',
                                                              ServiceHeaderAddress."Address Type"::Guarding,
                                                              ServiceHeaderAddress."Address Type"::Moving,
                                                              ServiceHeaderAddress."Address Type"::"Public Storage");
                              PAGE.RUN(0, ServiceHeaderAddress);
                            END;
                             }

    { 1100281035;1;Group  ;
                GroupType=Group }

    { 1100281036;2;Field  ;
                CaptionML=[ENU=Voucher;
                           FRA=Remboursement];
                BlankZero=No;
                SourceExpr="No. Of Voucher" }

    { 1100281032;1;Group  ;
                Visible=TotalDurationGuardingVisible;
                GroupType=Group }

    { 1100281031;2;Field  ;
                Name=TotalDurationGuarding;
                CaptionML=[ENU=Total Duration Guarding;
                           FRA=Total dur‚es gardiennage];
                SourceExpr=TotalDurationGuarding;
                OnDrillDown=BEGIN
                              ServiceHeaderAddress.SETRANGE("Service Header No.", "No.");
                              ServiceHeaderAddress.SETFILTER("Address Type", '%1',
                                                              ServiceHeaderAddress."Address Type"::Guarding);
                              PAGE.RUN(0, ServiceHeaderAddress);
                            END;
                             }

    { 1100281008;1;Group  ;
                Visible=AmountVisible;
                GroupType=Group }

    { 1100281005;2;Field  ;
                Name=<NoOfAmounts>;
                CaptionML=[ENU=Amounts;
                           FRA=Montants];
                SourceExpr=NoOfAmounts;
                OnDrillDown=BEGIN
                              ServiceAmount.SETRANGE("Service Header No.","No.");
                              PAGE.RUN(0, ServiceAmount);
                            END;
                             }

    { 1100281018;1;Group  ;
                Visible=GlobalAmountVisible;
                GroupType=Group }

    { 1100281019;2;Field  ;
                SourceExpr="Global Amount (Incl. VAT)" }

    { 1100281021;1;Group  ;
                Visible=ToDoVisible;
                GroupType=Group }

    { 1100281007;2;Field  ;
                CaptionML=[ENU=Current Activities;
                           FRA=Activit‚s en cours];
                SourceExpr=NoOfToDos;
                OnDrillDown=BEGIN
                              ServiceHeaderInfoPane.LookupTrayLines(Rec, TRUE);
                            END;
                             }

  }
  CODE
  {
    VAR
      Contact@1100281031 : Record 5050;
      ServiceAddress@1100281000 : Record 50068;
      ServiceCause@1100281017 : Record 50070;
      ServiceAccommOption@1100281008 : Record 50073;
      ServiceAmount@1100281010 : Record 50069;
      ServiceDevice@1100281013 : Record 50072;
      ServiceHeaderArea@1100281027 : Record 50070;
      ServiceHeaderProject@1100281028 : Record 50040;
      ServiceHeaderAddress@1100281033 : Record 50068;
      ServiceHeaderVoucher@1100281039 : Record 50103;
      ServiceHeaderInfoPane@1100281014 : Codeunit 50062;
      Service@1100281042 : Record 50066;
      NoOfAddress@1100281015 : Integer;
      NoOfCauses@1100281012 : Integer;
      NoOfInterventionLines@1100281011 : Integer;
      NoOfDiagnosisElement@1100281009 : Integer;
      NoOfAccommOption@1100281005 : Integer;
      NoOfServiceCause@1100281004 : Integer;
      NoOfAmounts@1100281003 : Integer;
      NoOfToDos@1100281001 : Integer;
      NoOfLocation@1100281029 : Integer;
      NoOfPojectType@1100281030 : Integer;
      NoOfServHeaderAddress@1100281007 : Integer;
      NoOfSHVoucher@1100281038 : Integer;
      ServReferenceNo@1100281041 : Code[30];
      IMAReferenceNo@1100281046 : Code[30];
      TotalDurationGuarding@1100281035 : Duration;
      AddressVisible@1100281016 : Boolean INDATASET;
      CausesVisible@1100281018 : Boolean INDATASET;
      ClaimsCauseVisible@1100281006 : Boolean INDATASET;
      InterVisible@1100281019 : Boolean INDATASET;
      DiagVisible@1100281020 : Boolean INDATASET;
      AccomVisible@1100281022 : Boolean INDATASET;
      AmountVisible@1100281023 : Boolean INDATASET;
      ToDoVisible@1100281024 : Boolean INDATASET;
      LocationVisible@1100281025 : Boolean INDATASET;
      ProjectTypeVisible@1100281026 : Boolean INDATASET;
      GlobalAmountVisible@1100281032 : Boolean INDATASET;
      ProviderVisible@1100281002 : Boolean INDATASET;
      VoucherVisible@1100281040 : Boolean;
      ServHeaderAddressVisible@1100281021 : Boolean INDATASET;
      CommentVisible@1100281034 : Boolean INDATASET;
      TotalDurationGuardingVisible@1100281036 : Boolean INDATASET;
      ServRefNoVisible@1100281043 : Boolean INDATASET;
      DarvaMissionNbVisible@1100281044 : Boolean INDATASET;
      IMARefNoVisible@1100281045 : Boolean INDATASET;
      gProviderName@1100281037 : Text[50];

    PROCEDURE ShowDetails@1102601000();
    BEGIN
      PAGE.RUN(FORM::"Contact Card",Rec);
    END;

    PROCEDURE CalcNoOfRecords@7();
    VAR
      lContactContract@1100281000 : Record 50059;
      l@1100281001 : Integer;
      lProvider@1100281002 : Record 50000;
    BEGIN
      NoOfAddress := 0;
      NoOfCauses := 0;
      NoOfInterventionLines := 0;
      NoOfDiagnosisElement := 0;
      NoOfAccommOption := 0;
      NoOfServiceCause := 0;
      NoOfAmounts := 0;
      NoOfLocation := 0;
      NoOfPojectType := 0;
      NoOfServHeaderAddress := 0;
      NoOfSHVoucher := 0;//IMH08
      ServReferenceNo := '';
      IMAReferenceNo := '';  //IMH13
      TotalDurationGuarding := 0;

      IF "No." = '' THEN
        EXIT;
      IF Contact.GET("Contact No.") THEN;

      IF AddressVisible THEN BEGIN
        ServiceAddress.SETCURRENTKEY("Service Header No.","Address Type","Address No.");
        ServiceAddress.SETRANGE("Service Header No.","No.");
        ServiceAddress.SETRANGE("Address Type",ServiceAddress."Address Type"::"Annexe Contact");
        NoOfAddress := ServiceAddress.COUNT;
      END;

      IF InterVisible THEN BEGIN
        NoOfInterventionLines := ServiceHeaderInfoPane.CalcNoOfIntervention(Rec);
      END;

      IF DiagVisible THEN BEGIN
        NoOfDiagnosisElement := ServiceHeaderInfoPane.CalcNoOfDiagElement("No.");
      END;

      IF AccomVisible THEN BEGIN
        ServiceAccommOption.SETCURRENTKEY("Service Header No.",Used);
        ServiceAccommOption.SETRANGE("Service Header No.","No.");
        ServiceAccommOption.SETRANGE(Used,TRUE);//IMH03
        NoOfAccommOption := ServiceAccommOption.COUNT;
      END;

      ServiceCause.SETRANGE("Service Header No.","No.");
      NoOfServiceCause := ServiceCause.COUNT;

      ServiceAmount.SETRANGE("Service Header No.","No.");
      NoOfAmounts := ServiceAmount.COUNT;

      ServiceHeaderArea.SETRANGE("Service Header No.","No.");
      NoOfLocation := ServiceHeaderArea.COUNT;

      ServiceHeaderProject.SETRANGE("Service Type",ServiceHeaderProject."Service Type"::ServiceHeader);
      ServiceHeaderProject.SETRANGE("Service Header No.","No.");
      ServiceHeaderProject.SETRANGE("Service No.","Service No.");
      ServiceHeaderProject.SETRANGE("Code Type",ServiceHeaderProject."Code Type"::ProjectType);
      NoOfPojectType := ServiceHeaderProject.COUNT;

      NoOfToDos := ServiceHeaderInfoPane.CalcNoOfTrayLines(Rec, TRUE);

      ServiceHeaderVoucher.SETRANGE("Service Header No.","No.");
      NoOfSHVoucher := ServiceHeaderVoucher.COUNT;//IMH08

      IF Service.GET("Service No.") THEN BEGIN
        ServReferenceNo := Service."Reference No.";
        IMAReferenceNo := Service."IMA Reference No.";       //IMH13
      END;

      //<<IMH06
      //NB Service Header Address
      IF AddressVisible THEN BEGIN
        ServiceAddress.SETCURRENTKEY("Service Header No.","Address Type","Address No.");
        ServiceHeaderAddress.SETRANGE("Service Header No.", "No.");
        ServiceHeaderAddress.SETFILTER(
          "Address Type", '%1|%2|%3',
          ServiceHeaderAddress."Address Type"::Guarding,
          ServiceHeaderAddress."Address Type"::Moving,
          ServiceHeaderAddress."Address Type"::"Public Storage");
        NoOfServHeaderAddress := ServiceHeaderAddress.COUNT;
      END;
      //>>IMH06

      //<<IMH07
      //total dur‚es gardiennage
      IF AddressVisible THEN BEGIN
        ServiceHeaderAddress.RESET;
        ServiceAddress.SETCURRENTKEY("Service Header No.","Address Type","Address No.");
        ServiceHeaderAddress.SETRANGE("Service Header No.", "No.");
        ServiceHeaderAddress.SETRANGE("Address Type", ServiceHeaderAddress."Address Type"::Guarding);
        IF ServiceHeaderAddress.FINDFIRST THEN BEGIN
          REPEAT
            TotalDurationGuarding += ServiceHeaderAddress.Duration;
          UNTIL ServiceHeaderAddress.NEXT = 0;
        END;
      END;

      //>>IMH07
      CommentVisible := ServiceHeaderInfoPane.CorporateInfoExist(Rec); //IMH07.ST

      IF ProviderVisible THEN BEGIN
        gProviderName := '';
        IF lProvider.GET("Provider No.") THEN BEGIN
          gProviderName := lProvider.Name;
        END;
      END;
    END;

    PROCEDURE SetVisibleFields@1100281001();
    VAR
      lServiceOrderType@1100281000 : Record 5903;
      lCustomer@1100281001 : Record 18;
    BEGIN
      IF NOT lServiceOrderType.GET("Service Order Type") THEN
        EXIT;
      AddressVisible := TRUE;
      CausesVisible := lServiceOrderType."Service Hdr Card Form ID" IN [
                      PAGE::"Service Hdr Assistance Card",
                      PAGE::"Service Hdr Maintenance Card",//IMH09
                      PAGE::"Service Hdr REN Card",
                      PAGE::"Service Hdr Acc. Opt. IMA Card",
                      PAGE::"Service Hdr Acc. Opt. IHM Card",
                      PAGE::"Service Hdr Remote Costing"];
      ServRefNoVisible := CausesVisible;
      ToDoVisible := (lServiceOrderType."Service Hdr Card Form ID" <> PAGE::"Service Hdr Information Car");
      AddressVisible := NOT (lServiceOrderType."Service Hdr Card Form ID" IN [
                      PAGE::"Service Hdr Claims Card",//IMH04
                      PAGE::"Service Hdr Information Car"]);
      //<<IMH04
      ClaimsCauseVisible := Claim;

      ProviderVisible := lServiceOrderType."Service Hdr Card Form ID" IN [
                      PAGE::"Service Hdr Claims Card"];
      //>>IMH04
      IF lServiceOrderType."Service Hdr Card Form ID" IN [PAGE::"Service Hdr Acc. Opt. IMA Card",
                      PAGE::"Service Hdr Information Car",
                      PAGE::"Service Hdr Voucher Card"] THEN BEGIN
       InterVisible := FALSE;
      END ELSE BEGIN
       InterVisible := TRUE;
      END;
      DiagVisible := lServiceOrderType."Service Hdr Card Form ID" = PAGE::"Service Hdr Real Estate Diag.";
      AccomVisible := lServiceOrderType."Service Hdr Card Form ID" IN [
                      PAGE::"Service Hdr Acc. Opt. IMA Card"];
      GlobalAmountVisible := lServiceOrderType."Service Hdr Card Form ID" = PAGE::"Service Hdr Real Estate Diag.";
      //IMH02AmountVisible :=  lServiceOrderType."Service Card Form ID" = PAGE::"Service Header Habitat Card";
      //IMH02LocationVisible := lServiceOrderType."Service Card Form ID" = PAGE::"Service Header Habitat Card";

      ServHeaderAddressVisible := lServiceOrderType."Service Hdr Card Form ID" IN [
                      PAGE::"Service Hdr Acc. Opt. IHM Card"];
      //IMH07 isat.zw
      TotalDurationGuardingVisible := lServiceOrderType."Service Hdr Card Form ID" IN [
                      PAGE::"Service Hdr Acc. Opt. IHM Card"];
      VoucherVisible := lServiceOrderType."Service Hdr Card Form ID" IN [PAGE::"Service Hdr Voucher Card"];//IMH08

      //<<IMH10.PC
      DarvaMissionNbVisible := GetDarvaMissionNb > 1;
      //>>IMH10.PC

      //<<IMH13
      IF lCustomer.GET("Corporate No.") THEN
        IMARefNoVisible := lCustomer."IMA Following";
      //>>IMH13
    END;

    LOCAL PROCEDURE GetDarvaMissionNb@1100281000() : Integer;
    VAR
      lDARVAMission@1100281000 : Record 50168;
    BEGIN
      // IMH10.PC
      lDARVAMission.SETRANGE("Service No.","Service No.");
      lDARVAMission.SETRANGE("Service Header No.","No.");
      EXIT(lDARVAMission.COUNT);
    END;

    BEGIN
    {
      /** @r IMH13 @d 23/05/14 @a ISAT.ZW @v IMH6.01.P010 @s Projet PMU
          @c Ajouter champ 57013 chmap IMA Reference No. */
      /** @r IMH12 @d 26/03/14 @a ISAT.ZW @v IMH6.01.5005 @s Reorganisation DPS @h 5005
          @c Supprimer la notion de corbeille de service par d‚faut */
      /** @r IMH11 @d 19/10/12 @a IMH.DBR @v IMH6.01.600 @s Gestion des remboursements @  Le champ remboursement … 0 si aucun @h 3851 */
      /** @r IMH10 @d 14/06/12 @a ISAT.PC @v IMH6.01.011 @s Gestion du service @c Ajout nombre de mission DARVA @h 2997 */
      /** @r IMH09 @d 03/05/12 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Form Assistance immo. @h 2021 */
      /** @r IMH08 @d 15/09/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout remboursement */
      /** @r IMH07 @d 01/06/11 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Ajout Total dur‚es gardiennage */
      /** @r IMH06 @d 11/04/11 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Ajout Nb Service Header Address */
      /** @r IMH05 @d 07/04/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Gestion ligne produit r‚clamation */
      /** @r IMH04 @d 17/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Gestion ligne produit r‚clamation */
      /** @r IMH03 @d 17/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Garantie Compl‚mentaire : affiche celles utilis‚e */
      /** @r IMH02 @d 06/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Supression type projet */
      /** @r IMH01 @d 06/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Cr‚ation*/
    }
    END.
  }
}