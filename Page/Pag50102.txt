OBJECT Page 50102 Service Hdr REN Card
{
  OBJECT-PROPERTIES
  {
    Date=20/05/14;
    Time=10:20:25;
    Modified=Yes;
    Version List=IMH6.01,JUIN,MATMUT01,IMH6.01.P011;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Header Card;
               FRA=Fiche ligne produit REN];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table5900;
    PopulateAllFields=Yes;
    SourceTableView=SORTING(Document Type,No.)
                    WHERE(Document Type=FILTER(Invoice));
    PageType=Card;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Intervention,Additional,Communication,Help;
                                FRA=Nouveau,Processus,Etat,Intervention,Compl‚ment,Communication,Aide];
    ShowFilter=No;
    OnOpenPage=VAR
                 lWinShell@1100281000 : Codeunit 50094;
               BEGIN
                 ServTimeReg.OpenObjectID(CurrPage.OBJECTID(FALSE)); //IMH04.ST
                 IF "No." <> '' THEN BEGIN
                   SETRANGE("No.","No.");
                   OnGetRecord;
                 END;
                 //<<IMH07
                 IF ServiceLockingMgt.ServiceHeaderCard_GetLock(Rec,TRUE) THEN BEGIN
                   CurrPage.EDITABLE := TRUE;
                   lWinShell.EditMode;
                 END ELSE BEGIN
                   CurrPage.EDITABLE := FALSE;
                 END;
                 //<<IMH30.PC
                 CALCFIELDS("SDR64 Send");
                 SDR64SendValue := "SDR64 Send";
                 //>>IMH30.PC
                 //<<IMH35.PC
                 CALCFIELDS("SDR99 Send");
                 SDR99SendValue := "SDR99 Send";
                 //>>IMH35.PC
                 PageEditable := CurrPage.EDITABLE;  //IMH28
                 //IMH20
                 //CurrPage.EDITABLE := ServFormMgt.ServiceEditable(Rec);
               END;

    OnClosePage=VAR
                  lCustomer@1000000000 : Record 18;
                  lServIntervLine@1000000001 : Record 50075;
                BEGIN
                  //<<IMH49.ACO
                  IF "DARVA Interface" THEN
                    IF lCustomer.GET("Corporate No.") THEN
                      IF lCustomer."Send Type SDR64" = lCustomer."Send Type SDR64"::"By Serv. Header" THEN BEGIN
                        //Interventions non annul‚es
                        lServIntervLine.SETRANGE("Service Header No.", "No.");
                        lServIntervLine.SETFILTER("Intervention Status", '<>%1',lServIntervLine."Intervention Status"::Cancel);

                        IF lServIntervLine.FINDSET THEN BEGIN
                          CALCFIELDS("SDR64 Send");
                          IF NOT "SDR64 Send" THEN
                            MESSAGE(Text004);
                        END;
                      END;
                  //>>IMH49.ACO

                  ServTimeReg.CloseObject; //IMH04.ST
                  ServiceLockingMgt.ServiceHeaderCard_ReleaseLock(Rec);//IMH07
                END;

    OnAfterGetRecord=BEGIN
                       ServTimeReg.OnAfterGetServiceHeaderRecord(Rec); //IMH04.ST
                       OnGetRecord;
                       GetDeductibleAmount;  //IMH16
                     END;

    OnModifyRecord=BEGIN
                     CheckMandFields; //IMH19.ST
                   END;

    OnQueryClosePage=BEGIN
                       IF CloseAction IN [ACTION::LookupOK,ACTION::OK] THEN BEGIN
                         TestBeforeAction
                       END;
                     END;

    ActionList=ACTIONS
    {
      { 1100281008;0 ;ActionContainer;
                      Name=Action;
                      ActionContainerType=ActionItems }
      { 1100281058;1 ;Action    ;
                      Name=<Action1100281063>;
                      CaptionML=[ENU=SERVICE;
                                 FRA=LIGNE PRODUIT];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NewSparkle;
                      OnAction=BEGIN
                                 IF TRUE THEN;
                               END;
                                }
      { 1100281007;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 FRA=Fonction&s] }
      { 1100281027;2 ;Action    ;
                      Name=<Action1100281110>;
                      CaptionML=[ENU=Create Intervention;
                                 FRA=Cr‚er intervention];
                      Promoted=Yes;
                      Visible=InterventionAllowed;
                      Enabled=PageEditable;
                      PromotedIsBig=Yes;
                      Image=AddAction;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 TestBeforeAction;
                                 CreateServiceInterventionLine(FALSE);
                               END;
                                }
      { 1000000005;2 ;Action    ;
                      Name=<Action1100281095>;
                      CaptionML=[ENU=Force Provider Assignment;
                                 FRA=Assignation directe prestataire];
                      Visible=CreateProviderDirectVisible;
                      Enabled=PageEditable;
                      Image=AddAction;
                      OnAction=BEGIN
                                 //IMH35
                                 TestBeforeAction;
                                 DirectCreateInervLine(FALSE);
                               END;
                                }
      { 1100281026;2 ;Separator  }
      { 1100281025;2 ;Action    ;
                      Name=<Action1100281069>;
                      CaptionML=[ENU=Create Tray Line;
                                 FRA=Cr‚er activit‚ corbeille];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      Image=BinContent;
                      OnAction=VAR
                                 lTrayLineMgt@1100281000 : Codeunit 50050;
                               BEGIN
                                 lTrayLineMgt.CreateTLFromServHeader(Rec, '', '', TRUE);  //IMH03 isat.zw
                               END;
                                }
      { 1100281029;2 ;Action    ;
                      Name=Create Interact;
                      CaptionML=[ENU=Create &Interact;
                                 FRA=Cr‚er &interaction];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      Image=CreateInteraction;
                      OnAction=BEGIN
                                 //IMH06 isat.zw
                                 CreateInteraction;
                               END;
                                }
      { 1100281077;2 ;Separator  }
      { 1100281054;2 ;Action    ;
                      Name=<Action1100281053>;
                      CaptionML=[ENU=Next Step;
                                 FRA=Etape suivante];
                      Promoted=Yes;
                      Visible=UserNextStepAvailable;
                      Enabled=PageEditable;
                      PromotedIsBig=Yes;
                      Image=SelectItemSubstitution;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lProcessServHeaderMgt@1100281000 : Codeunit 50043;
                               BEGIN
                                 lProcessServHeaderMgt.SelectNextStep(Rec);
                               END;
                                }
      { 1100281112;2 ;Action    ;
                      Name=URLHyperlink;
                      CaptionML=[ENU=URL Hyperlink;
                                 FRA=Lien URL];
                      Promoted=Yes;
                      Image=Links;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //<<IMH33.PC
                                 IF ServiceOrderType."DARVA Site" THEN BEGIN
                                   IF NOT DARVAMgt.GetTransparentAccesDARVA("Reference No.","Corporate No.","Corporate Region Code") THEN BEGIN
                                   //>>IMH33.PC
                                     HYPERLINK(ServiceOrderType."URL Link");
                                   END;
                                 END ELSE BEGIN
                                   HYPERLINK(ServiceOrderType."URL Link");
                                 END;
                               END;
                                }
      { 1100281124;2 ;Action    ;
                      Name=SDR64;
                      CaptionML=[ENU=SDR64;
                                 FRA=SDR64];
                      Promoted=Yes;
                      Visible=SDR64Visible;
                      Image=GetActionMessages;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lSDR64Mgt@1100281000 : Codeunit 50210;
                               BEGIN
                                 //IMH34
                                 lSDR64Mgt.Code(Rec);
                                 CALCFIELDS("SDR64 Send","SDR99 Send");
                                 //<<IMH37.PC
                                 SDR64SendValue := "SDR64 Send";
                                 SDR99SendValue := "SDR99 Send";
                                 //>>IMH37.PC
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100281125;2 ;Action    ;
                      Name=SDR642;
                      Visible=FALSE;
                      Enabled=FALSE;
                      OnAction=VAR
                                 lSDR64Card@1100281000 : Page 50336;
                               BEGIN
                                 lSDR64Card.SetServiceHeader("No.");
                                 lSDR64Card.RUN;
                               END;
                                }
      { 1100281059;1 ;Action    ;
                      Name=<Action1100281059>;
                      CaptionML=[ENU=Address;
                                 FRA=Contacts];
                      RunObject=Page 50078;
                      RunFormView=SORTING(Service Header No.,Address Type,Address No.);
                      RunFormLink=Service Header No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Note;
                      PromotedCategory=Category5 }
      { 1100281031;1 ;ActionGroup;
                      CaptionML=[ENU=Communication;
                                 FRA=Communication];
                      ActionContainerType=NewDocumentItems }
      { 1000000007;2 ;Action    ;
                      Name=DARVA;
                      CaptionML=[ENU=DARVA;
                                 FRA=DARVA];
                      Promoted=Yes;
                      Visible=DARVAVisible;
                      PromotedIsBig=Yes;
                      Image=SendTo;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 lSendDARVACard@1000000000 : Page 50363;
                                 lAttachmentList@1000000002 : Record 50021;
                               BEGIN
                                 //IMH46
                                 lSendDARVACard.SetServiceHeader(Rec, 0, 0);
                                 lSendDARVACard.RUN;
                               END;
                                }
      { 1100281123;2 ;Action    ;
                      Name=<Action1100281065>;
                      CaptionML=[ENU=Send Mail;
                                 FRA=Envoi de mail];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendTo;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 lSendMail@1100281000 : Codeunit 50128;
                               BEGIN
                                 lSendMail.SendMailFromServH(Rec, '');
                               END;
                                }
      { 1100281126;2 ;Action    ;
                      Name=<Action1100281068>;
                      CaptionML=[ENU=Send SMS;
                                 FRA=Envoi de SMS];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendTo;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 lType@1100281000 : 'Service,Service Header,Intervention';
                                 lSMSMgt@1100281001 : Codeunit 50225;
                               BEGIN

                                 lSMSMgt.SendSMSFromServiceHeader(lType::"Service Header",Rec,'',0, TRUE);
                               END;
                                }
      { 1100281038;2 ;Action    ;
                      Name=<Action1100281039>;
                      CaptionML=[ENU=Postponed &Interactions;
                                 FRA=Brouillons];
                      RunObject=Page 5082;
                      RunFormView=SORTING(Service No.,Service Header No.,Intervention Line No.,Date,Postponed);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Header No.=FIELD(No.) }
      { 1100281046;2 ;Separator  }
      { 1100281017;2 ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Co&mments;
                                 FRA=Co&mmentaires];
                      RunObject=Page 50230;
                      RunFormView=SORTING(Source No. 2,Creation Date)
                                  ORDER(Descending)
                                  WHERE(Source Table ID=FILTER(5900|50075),
                                        Source No. 4=FILTER(''),
                                        Called From Source Table ID=FILTER(5900));
                      RunFormLink=Source No.=FIELD(Service No.),
                                  Source No. 2=FIELD(No.);
                      Promoted=Yes;
                      Image=ViewComments;
                      PromotedCategory=Category6 }
      { 1100281047;2 ;Action    ;
                      Name=<Action1100281038>;
                      CaptionML=[ENU=Interaction Log E&ntries;
                                 FRA=Ecritures &journal interaction];
                      RunObject=Page 5076;
                      RunFormView=SORTING(Service No.,Service Header No.,Intervention Line No.,Date,Postponed);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Header No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Track;
                      PromotedCategory=Category6 }
      { 1100281073;2 ;Action    ;
                      Name=<Action1100281028>;
                      CaptionML=[ENU=Service Header Attach. Document;
                                 FRA=Documents joints];
                      RunObject=Page 50015;
                      RunFormView=SORTING(Service No.,Service Document No.,Service Intervention Line No.,Creation Date);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Document No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Documents;
                      PromotedCategory=Category6 }
      { 1100281093;2 ;Action    ;
                      Name=<Action1100281093>;
                      CaptionML=[ENU=Data Exchange;
                                 FRA=Echange de donn‚es];
                      RunObject=Page 8016724;
                      RunFormView=SORTING(Source Type,Source Subtype,Source ID,EAI Act Type Code,EAI Act Code,MQ Entry No.)
                                  WHERE(Source Type=CONST(5900));
                      RunFormLink=Source Subtype=FIELD(Document Type),
                                  Source ID=FIELD(No.) }
      { 1100281028;1 ;Action    ;
                      Name=<Action1100281023>;
                      CaptionML=[ENU=Current Tray Lines;
                                 FRA=Activit‚s en cours];
                      Image=Bins;
                      OnAction=BEGIN
                                 ServiceHeaderInfoPane.LookupTrayLines(Rec, TRUE);
                               END;
                                }
      { 1100281021;1 ;Action    ;
                      Name=Interventions;
                      CaptionML=[ENU=Interventions;
                                 FRA=Interventions];
                      RunObject=Page 50069;
                      RunFormView=SORTING(Service Header No.,Line No.);
                      RunFormLink=Service Header No.=FIELD(No.);
                      Image=Components;
                      PromotedCategory=Category5 }
      { 1100281061;1 ;Separator  }
      { 1100281094;1 ;Action    ;
                      Name=History;
                      CaptionML=[ENU=History;
                                 FRA=Historiques];
                      Promoted=Yes;
                      Image=History;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowChangeLogs;
                               END;
                                }
      { 1100281051;1 ;Action    ;
                      Name=<Action1100281057>;
                      CaptionML=[ENU=Process Status History;
                                 FRA=Historique statut processus];
                      RunObject=Page 50156;
                      RunFormLink=Source Table ID=CONST(5900),
                                  Source Key Code 1=FIELD(No.) }
      { 1100281127;1 ;Action    ;
                      Name=ResearchHistoricAct;
                      CaptionML=[ENU=Research Historic;
                                 FRA=Historique recherche];
                      RunObject=Page 50380;
                      RunFormView=SORTING(Service No.,Service Header No.,Intervention Line No.,Entry No.);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Header No.=FIELD(No.);
                      Promoted=Yes;
                      Image=CalculateRemainingUsage;
                      PromotedCategory=Process }
      { 1100281057;1 ;Action    ;
                      Name=<Action1100281023>;
                      CaptionML=[ENU=Tray Line History;
                                 FRA=Activit‚s archiv‚es];
                      Image=Bins;
                      OnAction=BEGIN
                                 ServiceHeaderInfoPane.LookupTrayLineHist(Rec);
                               END;
                                }
      { 1100281041;1 ;Action    ;
                      Name=<Action102>;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 FRA=Statistiques];
                      Image=Statistics;
                      OnAction=BEGIN
                                 FORM.RUNMODAL(FORM::"Service Header Statistics",Rec);
                               END;
                                }
      { 1100281086;1 ;Action    ;
                      Name=HelpAction;
                      CaptionML=[ENU=Help;
                                 FRA=Aide];
                      Promoted=Yes;
                      Visible=WikiLinkVisible;
                      PromotedIsBig=Yes;
                      Image=View;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 RunHelp;//IMH14
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100281000;1;Group  ;
                CaptionML=[ENU=General;
                           FRA=G‚n‚ral] }

    { 1100281076;2;Field  ;
                DrillDown=No;
                SourceExpr="Process Status Description";
                Importance=Promoted;
                Style=Favorable;
                StyleExpr=TRUE }

    { 1100281109;2;Group  ;
                Visible=StatusCanceled;
                GroupType=Group }

    { 1100281108;3;Field  ;
                SourceExpr="Cancel Reason" }

    { 1100281107;2;Group  ;
                Visible=StatusClosed;
                GroupType=Group }

    { 1100281106;3;Field  ;
                SourceExpr="Closed Reason" }

    { 1100281105;2;Group  ;
                Visible=StatusSuspended;
                GroupType=Group }

    { 1100281104;3;Field  ;
                SourceExpr="Suspended Reason" }

    { 1100281089;2;Field  ;
                CaptionML=[ENU=No.;
                           FRA=Nø ligne produit];
                SourceExpr=XMLText;
                Editable=FALSE;
                ControlAddIn=[Isatech.IMH.PageIdentifaction;PublicKeyToken=c1f98940aa27b996] }

    { 1100281037;2;Field  ;
                CaptionML=[ENU=Service Order Type;
                           FRA=Type produit];
                SourceExpr=GetServiceOrderTypeDescr;
                Importance=Promoted;
                Editable=FALSE }

    { 1100281012;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Service No.";
                Importance=Additional }

    { 1100281001;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Contact No.";
                OnAssistEdit=BEGIN
                               OpenContactCard;
                             END;
                              }

    { 1100281009;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr=Name;
                Importance=Promoted }

    { 1100281011;2;Field  ;
                SourceExpr=Address;
                Importance=Additional }

    { 1100281013;2;Field  ;
                SourceExpr="Address 2";
                Importance=Additional }

    { 1100281022;2;Field  ;
                SourceExpr="Address 3";
                Importance=Additional }

    { 1100281006;2;Field  ;
                Lookup=No;
                DrillDown=No;
                CaptionML=[ENU=Post Code - Country;
                           FRA=Code postal - Pays];
                SourceExpr=STRSUBSTNO('%1 - %2',"Post Code","Country/Region Code");
                Importance=Additional }

    { 1100281015;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr=City;
                Importance=Additional }

    { 1100281019;2;Field  ;
                SourceExpr="Phone No.";
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               //<<IMH31.PC
                               PhoneNoAssistEdit("Phone No.");
                               //>>IMH31.PC
                             END;
                              }

    { 1100281066;2;Field  ;
                DrillDown=No;
                SourceExpr="Contact Mobile Phone No.";
                OnAssistEdit=BEGIN
                               //<<IMH31.PC
                               PhoneNoAssistEdit("Contact Mobile Phone No.");
                               //>>IMH31.PC
                             END;
                              }

    { 1100281092;2;Field  ;
                Name=ChannelField;
                CaptionML=[ENU=Channel;
                           FRA=Canal *];
                SourceExpr=ChannelDesc;
                OnValidate=BEGIN
                             //IMH15
                             ServiceFormMgt.Code_Validate(ChannelDesc,50066,12,Channel);
                             //<<IMH44
                             GetServFieldDescription;
                             CurrPage.UPDATE;
                             //>>IMH44
                           END;

                OnLookup=BEGIN
                           //IMH15
                           ServiceFormMgt.Code_Lookup(ChannelDesc,50066,12,Channel);
                           //<<IMH44
                           GetServFieldDescription;
                           CurrPage.UPDATE;
                           //>>IMH44
                         END;
                          }

    { 1100281091;2;Field  ;
                Name=RequisitionerField;
                CaptionML=[ENU=Requisitioner;
                           FRA=Demandeur *];
                SourceExpr=RequisitionerDesc;
                Style=Strong;
                StyleExpr=TRUE;
                OnValidate=BEGIN
                             //IMH15
                             ServiceFormMgt.Requi_Validate(RequisitionerDesc, "Service Order Type",Requisitioner);
                             GetServFieldDescription;
                             CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           //IMH15
                           ServiceFormMgt.Requi_Lookup(RequisitionerDesc, "Service Order Type",Requisitioner);
                           GetServFieldDescription;
                           CurrPage.UPDATE;
                         END;
                          }

    { 1000000000;2;Field  ;
                ExtendedDatatype=URL;
                CaptionML=[ENU=URL Link;
                           FRA=Lien URL];
                SourceExpr=ServiceOrderType."URL Link";
                Editable=FALSE }

    { 1100281114;2;Field  ;
                SourceExpr="Princ. Expert Contact No.";
                Importance=Additional;
                OnValidate=BEGIN
                             GetServFieldDescription;
                             //<<IMH27.ISAT.EBA
                             CurrPage.UPDATE;
                             //>>IMH27.ISAT.EBA
                           END;

                OnLookup=VAR
                           lExpertList@1100281001 : Form 50212;
                           lContact@1100281000 : Record 5050;
                         BEGIN
                           IF NOT lContact.GET("Princ. Expert Contact No.") THEN
                             CLEAR(lContact);
                           lExpertList.SETRECORD(lContact);
                           lExpertList.LOOKUPMODE(TRUE);
                           IF lExpertList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             lExpertList.GETRECORD(lContact);
                             VALIDATE("Princ. Expert Contact No.", lContact."No.");
                           END;
                           GetServFieldDescription;
                           //<<IMH27.ISAT.EBA
                           CurrPage.UPDATE;
                           //>>IMH27.ISAT.EBA
                         END;
                          }

    { 1100281110;2;Field  ;
                Lookup=Yes;
                AssistEdit=Yes;
                CaptionML=[ENU=Princ. Expert Contact;
                           FRA=Contact cabinet expert];
                SourceExpr=PrincExpertContactName;
                Editable=FALSE;
                OnLookup=VAR
                           lExpertList@1100281004 : Form 50212;
                           lContact@1100281003 : Record 5050;
                         BEGIN
                           IF lContact.GET("Princ. Expert Contact No.") THEN
                             PAGE.RUNMODAL(PAGE::"Contact Card",lContact);
                         END;

                OnAssistEdit=VAR
                               lContact@1100281000 : Record 5050;
                             BEGIN
                               IF lContact.GET("Princ. Expert Contact No.") THEN
                                 PAGE.RUNMODAL(PAGE::"Contact Card",lContact);
                             END;
                              }

    { 1100281116;2;Field  ;
                SourceExpr="Expert Contact No.";
                Importance=Additional;
                OnValidate=BEGIN
                             //<<IMH27.ISAT.EBA
                             CurrPage.UPDATE;
                             //>>IMH27.ISAT.EBA
                           END;
                            }

    { 1100281098;2;Field  ;
                Lookup=Yes;
                AssistEdit=Yes;
                CaptionML=[ENU=Expert Contact;
                           FRA=Contact expert];
                SourceExpr=ExpertContactName;
                Editable=FALSE;
                OnLookup=VAR
                           lContact@1100281002 : Record 5050;
                         BEGIN
                           IF lContact.GET("Expert Contact No.") THEN
                             PAGE.RUNMODAL(PAGE::"Contact Card",lContact);
                         END;

                OnAssistEdit=VAR
                               lContact@1100281000 : Record 5050;
                             BEGIN
                               IF lContact.GET("Expert Contact No.") THEN
                                 PAGE.RUNMODAL(PAGE::"Contact Card",lContact);
                             END;
                              }

    { 1100281099;2;Field  ;
                SourceExpr="Expert Ref.";
                Importance=Additional;
                Editable=FALSE }

    { 1100281078;2;Group  ;
                Visible=NoExpertVisible;
                GroupType=Group }

    { 1100281042;3;Field  ;
                CaptionML=[ENU=Urgent;
                           FRA=Urgent *];
                SourceExpr=Urgent;
                OnValidate=BEGIN
                             OnGetRecord;
                           END;
                            }

    { 1100281010;2;Field  ;
                SourceExpr="Quote Managment" }

    { 1100281005;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Corporate No." }

    { 1100281036;2;Field  ;
                SourceExpr="Corporate Region Code";
                Importance=Additional }

    { 1100281043;2;Field  ;
                Name=CorporateContact;
                CaptionML=[ENU=Corporate Contact;
                           FRA=Contact grand compte];
                SourceExpr=CorporateContactDesc;
                OnValidate=BEGIN
                             //IMH15
                             ServiceFormMgt.CorporateContact_Validate(CorporateContactDesc
                               ,"Corporate No."
                               ,"Corporate Region Code"
                               ,"Corporate Contact No.")
                           END;

                OnLookup=BEGIN
                           //IMH15
                           ServiceFormMgt.CorporateContact_Lookup(CorporateContactDesc
                             ,"Corporate No."
                             ,"Corporate Region Code"
                             ,"Corporate Contact No.")
                         END;

                OnAssistEdit=VAR
                               lContact@1100281000 : Record 5050;
                             BEGIN
                               IF lContact.GET("Corporate Contact No.") THEN
                                 PAGE.RUN(PAGE::"Contact Card", lContact);
                             END;
                              }

    { 1100281075;2;Field  ;
                CaptionML=[ENU=Contact Job Responsibility;
                           FRA=Responsabilit‚ contact];
                SourceExpr=GetCorporateContactJobResp;
                Editable=FALSE }

    { 1100281040;2;Field  ;
                SourceExpr="Corporate Declaration";
                Visible=FALSE }

    { 1100281097;2;Group  ;
                Visible=MeetingInformation;
                GroupType=Group }

    { 1100281103;3;Field  ;
                SourceExpr="Person To Contact" }

    { 1100281069;3;Field  ;
                CaptionML=[ENU=Meeting Date;
                           FRA=Jour de rendez-vous *];
                SourceExpr="Meeting Date";
                OnValidate=BEGIN
                             GetServFieldDescription;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100281067;3;Field  ;
                CaptionML=[ENU=9h-12h;
                           FRA=9h-12h *];
                SourceExpr="9h-12h";
                OnValidate=BEGIN
                             GetServFieldDescription;
                           END;
                            }

    { 1100281065;3;Field  ;
                CaptionML=[ENU=14h-17h;
                           FRA=14h-17h *];
                SourceExpr="14h-17h";
                OnValidate=BEGIN
                             GetServFieldDescription;
                           END;
                            }

    { 1100281071;2;Group  ;
                Visible=NotMeetingInformation;
                GroupType=Group }

    { 1100281090;3;Field  ;
                Name=Declaration Comment;
                CaptionML=[ENU=Declaration Comment;
                           FRA=Commentaire d‚claration *];
                SourceExpr=DeclarationCommentDesc;
                OnValidate=BEGIN
                             //IMH18
                             ServiceFormMgt.DeclarationComment_Validate(DeclarationCommentDesc,"Declaration Comment Code")
                           END;

                OnLookup=BEGIN
                           //IMH18
                           ServiceFormMgt.DeclarationComment_Lookup(DeclarationCommentDesc,"Declaration Comment Code")
                         END;
                          }

    { 1100281062;3;Field  ;
                SourceExpr="Declaration Comment Code";
                Visible=false }

    { 1100281063;2;Field  ;
                SourceExpr="Declaration Contact No.";
                Visible=false }

    { 1100281003;2;Field  ;
                SourceExpr="VIP Code";
                Importance=Additional }

    { 1100281016;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Contract Form Name";
                Importance=Additional }

    { 1100281023;2;Field  ;
                SourceExpr="Open File No.";
                Visible=FALSE }

    { 1100281035;2;Field  ;
                SourceExpr="Person Involved";
                Visible=FALSE }

    { 1100281100;2;Field  ;
                CaptionML=[ENU=Context;
                           FRA=Contexte];
                SourceExpr=TextContext;
                MultiLine=Yes;
                OnValidate=BEGIN
                             UpdateContext(TextContext); //IMH22.ST
                           END;
                            }

    { 1100281122;2;Field  ;
                CaptionML=[ENU=SDR64 en error;
                           FRA=SDR64 en erreur];
                SourceExpr=SDR64EnError;
                Visible=SDR64ErrorVisible;
                Editable=false }

    { 1000000004;2;Group  ;
                Visible=ClaimsVisible;
                GroupType=Group }

    { 1000000003;3;Field  ;
                SourceExpr="Claimed Service Header";
                Importance=Additional }

    { 1000000002;2;Group  ;
                Visible=ServiceHeaderClaimNo;
                GroupType=Group }

    { 1000000001;3;Field  ;
                SourceExpr="Service Header Claims No.";
                Importance=Additional;
                Visible=ServiceHeaderClaimNo }

    { 1905937801;1;Group  ;
                CaptionML=[ENU=Address;
                           FRA=Mise en oeuvre] }

    { 1100281033;2;Field  ;
                AssistEdit=Yes;
                SourceExpr=Name;
                OnAssistEdit=BEGIN
                               OpenContactCard;
                             END;
                              }

    { 1100281111;2;Field  ;
                SourceExpr="Ship-to Address Code";
                Importance=Promoted }

    { 1100281113;2;Field  ;
                SourceExpr="Ship-to Address";
                Importance=Promoted }

    { 1100281115;2;Field  ;
                SourceExpr="Ship-to Address 2";
                Importance=Additional }

    { 1100281101;2;Field  ;
                SourceExpr="Ship-to Address 3";
                Importance=Additional }

    { 1100281020;2;Field  ;
                AssistEdit=No;
                SourceExpr="Ship-to Country/Region Code";
                DrillDownFormID=Navigate }

    { 1100281049;2;Field  ;
                SourceExpr="Ship-to Post Code" }

    { 1100281117;2;Field  ;
                DrillDown=No;
                SourceExpr="Ship-to City";
                Importance=Promoted }

    { 1100281118;2;Field  ;
                SourceExpr="Ship-to Phone";
                OnAssistEdit=BEGIN
                               //<<IMH31.PC
                               PhoneNoAssistEdit("Ship-to Phone");
                               //>>IMH31.PC
                             END;
                              }

    { 1100281102;2;Field  ;
                SourceExpr="Ship-to Mobile Phone No.";
                OnAssistEdit=BEGIN
                               //<<IMH31.PC
                               PhoneNoAssistEdit("Ship-to Mobile Phone No.");
                               //>>IMH31.PC
                             END;
                              }

    { 1000000006;2;Field  ;
                Name=OtherPhoneTypeField;
                CaptionML=[ENU=Other Phone No. Type;
                           FRA=Type t‚l. autre];
                SourceExpr=OtherPhoneTypeDesc;
                Visible=false;
                StyleExpr=TRUE;
                OnValidate=BEGIN
                             //<<IMH36.ACO
                             ServiceFormMgt.Code_Validate(OtherPhoneTypeDesc,5900,50260,"Other Phone No. Type");
                             GetServFieldDescription;
                             CurrPage.UPDATE;
                             //>>IMH36.ACO
                           END;

                OnLookup=BEGIN
                           //<<IMH36.ACO
                           ServiceFormMgt.Code_Lookup(OtherPhoneTypeDesc,5900,50260,"Other Phone No. Type");
                           GetServFieldDescription;
                           CurrPage.UPDATE;
                           //>>IMH36.ACO
                         END;
                          }

    { 1000000008;2;Field  ;
                SourceExpr="Other Phone No.";
                OnAssistEdit=BEGIN
                               //<<IMH36.ACO
                               PhoneNoAssistEdit("Other Phone No.");
                               //>>IMH36.AC0
                             END;
                              }

    { 1000000009;2;Field  ;
                DrillDown=No;
                SourceExpr="Person To Contact MEO Name" }

    { 1000000010;2;Field  ;
                DrillDown=No;
                SourceExpr="Person To Contact MEO Phone" }

    { 1000000011;2;Field  ;
                Name=PersonToContactQuality;
                DrillDown=No;
                CaptionML=[ENU=Person To Contact MEO Quality;
                           FRA=Qualit‚ personne … contacter MEO];
                SourceExpr=QualityDesc;
                Editable=false }

    { 1100281128;2;Field  ;
                ExtendedDatatype=None;
                SourceExpr="Ship-to E-Mail";
                OnAssistEdit=VAR
                               lSendMail@1100281000 : Codeunit 50128;
                             BEGIN
                               lSendMail.SendMailFromServH(Rec, "Ship-to E-Mail");
                             END;
                              }

    { 1100281048;2;Field  ;
                Name=OccupierNature;
                CaptionML=[ENU=Occupier Nature;
                           FRA=Nature de l'occupant];
                SourceExpr=OccupierNatureDesc;
                Editable=FALSE }

    { 1100281032;2;Field  ;
                CaptionML=[ENU=Housing Type;
                           FRA=Type d'habitation];
                SourceExpr=HousingTypeDesc;
                Editable=FALSE }

    { 1100281055;2;Field  ;
                SourceExpr="Access Condition" }

    { 1100281119;1;Part   ;
                CaptionML=[ENU=Affected Locations;
                           FRA=Descriptif des travaux];
                SubFormView=SORTING(Service Header No.,Affected Location Code);
                SubFormLink=Service Header No.=FIELD(No.);
                PagePartID=Page50084 }

    { 1901028601;1;Group  ;
                CaptionML=[ENU=Complement;
                           FRA=Compl‚ment] }

    { 1100281014;2;Field  ;
                SourceExpr="Order Date" }

    { 1100281084;2;Field  ;
                CaptionML=[ENU=Appropriate Deductible Amount;
                           FRA=Franchise … pr‚lever *];
                SourceExpr="Appropriate Deductible Amount";
                OnValidate=BEGIN
                             DeductibleAmountVisible := "Appropriate Deductible Amount" = "Appropriate Deductible Amount"::Other;//IMH08
                             GetDeductibleAmount; //IMH16
                           END;
                            }

    { 1100281083;2;Group  ;
                Editable=DeductibleAmountVisible;
                GroupType=Group }

    { 1100281050;3;Field  ;
                Name=DeductibleAmount;
                CaptionML=[ENU=Deductible Amount;
                           FRA=Montant franchise];
                SourceExpr=DeductibleAmount;
                OnValidate=BEGIN
                             IF "Appropriate Deductible Amount" = "Appropriate Deductible Amount"::Other THEN
                               VALIDATE("Deductible Amount", DeductibleAmount);
                           END;
                            }

    { 1100281024;2;Field  ;
                SourceExpr="Reference No.";
                Importance=Additional }

    { 1100281085;2;Field  ;
                SourceExpr="Event Date";
                Importance=Additional }

    { 1100281080;2;Group  ;
                Visible=ExpertVisible;
                GroupType=Group }

    { 1100281068;3;Field  ;
                SourceExpr="Max. Est. Work Amt Excl. VAT" }

    { 1100281030;3;Field  ;
                SourceExpr="Max. Est. Work Amt Incl. VAT" }

    { 1100281082;3;Field  ;
                SourceExpr="Total Descr. Amount Excl. VAT" }

    { 1100281064;3;Field  ;
                SourceExpr="Total Descr. Amount Incl. VAT";
                Importance=Promoted }

    { 1100281044;2;Group  ;
                Visible=NoExpertVisible;
                GroupType=Group }

    { 1100281070;3;Field  ;
                CaptionML=[ENU=Intervention Ceiling;
                           FRA=Plafond de d‚l‚gation];
                SourceExpr=GetInterventionCeiling(FALSE);
                Importance=Promoted }

    { 1100281079;2;Group  ;
                Visible=ExpertVisible;
                GroupType=Group }

    { 1100281072;3;Field  ;
                SourceExpr="Unsecured Depreciation Amount" }

    { 1100281074;3;Field  ;
                SourceExpr="Unsecured Depreciation %" }

    { 1100281087;2;Field  ;
                SourceExpr="Total Descr. Amount Incl. VAT";
                Importance=Promoted;
                Visible=FALSE }

    { 1100281121;2;Group  ;
                Visible=ServiceUrgent;
                GroupType=Group }

    { 1100281120;3;Field  ;
                SourceExpr="Body Damage" }

    { 1100281039;3;Field  ;
                SourceExpr="Content Theft" }

    { 1100281056;2;Field  ;
                Name=ServiceCause;
                CaptionML=[ENU=Service Cause;
                           FRA=Cause intervention];
                SourceExpr=ServiceCauseDesc;
                Editable=FALSE }

    { 1100281081;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="Campaign Description";
                Importance=Promoted }

    { 1100281034;1;Part   ;
                Name=InterventionLines;
                CaptionML=[ENU=Interventions Lines;
                           FRA=Liste des interventions];
                SubFormView=SORTING(Service Header No.,Line No.);
                SubFormLink=Service Header No.=FIELD(No.);
                PagePartID=Page50074 }

    { 1100281994;1;Group  ;
                Name=Orders;
                CaptionML=[ENU=Orders;
                           FRA=Commandes];
                GroupType=Group }

    { 1100281095;2;Field  ;
                SourceExpr="Sale Order Nb" }

    { 1100281002;0;Container;
                Name=FactBoxArea;
                ContainerType=FactBoxArea }

    { 1100281088;1;Part   ;
                SubFormView=WHERE(Type=CONST(TableData),
                                  ID=CONST(5900));
                SubFormLink=ID=FILTER(5900);
                PagePartID=Page50208;
                PartType=Page }

    { 1100281053;1;Part   ;
                Name=CorporatePicture;
                SubFormView=SORTING(No.);
                SubFormLink=No.=FIELD(Corporate No.);
                PagePartID=Page50248;
                PartType=Page }

    { 1100281052;1;Part   ;
                Name=CorporateInfo;
                CaptionML=[ENU=CorporateInfo;
                           FRA=Grand compte];
                SubFormView=SORTING(Service No.);
                SubFormLink=Service No.=FIELD(Service No.);
                PagePartID=Page50247;
                PartType=Page }

    { 1100281018;1;Part   ;
                Name=ContactContract;
                CaptionML=[ENU=Contract Details;
                           FRA=D‚tail formule];
                SubFormView=SORTING(Contact No.,Corporate No.,Contract Form Code,Occurence No.);
                SubFormLink=Contact No.=FIELD(Contact No.),
                            Corporate No.=FIELD(Corporate No.),
                            Contract Form Code=FIELD(Contract Form Code),
                            Occurence No.=FIELD(Contract Occurence No.),
                            Service Order Type Filter=FIELD(Service Order Type);
                PagePartID=Page50094 }

    { 1100281045;1;Part   ;
                Name=SalesHeaderDetails;
                CaptionML=[ENU=Service Header Details;
                           FRA=D‚tail ligne produit];
                SubFormView=SORTING(Document Type,No.)
                            WHERE(Document Type=CONST(Invoice));
                SubFormLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.);
                PagePartID=Page50088 }

    { 1100281060;1;Part   ;
                Name=Notes;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

    { 1100281004;1;Part   ;
                Name=Links;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

  }
  CODE
  {
    VAR
      ServiceOrderType@1100281004 : Record 5903;
      ServiceHeaderClaimsMgt@1000000002 : Codeunit 50068;
      ServTimeReg@1100281002 : Codeunit 50070;
      ServiceLockingMgt@1100281001 : Codeunit 50071;
      ServiceHeaderInfoPane@1100281010 : Codeunit 50062;
      ServiceFormMgt@1100281018 : Codeunit 50086;
      DARVAMgt@1100281037 : Codeunit 50150;
      DARVASetup@1100281042 : Record 50126;
      UserSpecialPermission@1000000004 : Codeunit 50093;
      XMLText@1100281013 : BigText;
      CorporateDeclaration@1100281000 : Boolean INDATASET;
      ExpertVisible@1100281003 : Boolean INDATASET;
      NoExpertVisible@1100281005 : Boolean INDATASET;
      InterventionAllowed@1100281006 : Boolean INDATASET;
      DeductibleAmountVisible@1100281007 : Boolean INDATASET;
      UserNextStepAvailable@1100281008 : Boolean INDATASET;
      ClaimsVisible@1000000001 : Boolean INDATASET;
      ServiceHeaderClaimNo@1000000000 : Boolean INDATASET;
      WikiLink@1100281012 : Text[250];
      WikiLinkVisible@1100281011 : Boolean INDATASET;
      OccupierNatureDesc@1100281017 : Text[100];
      CorporateContactDesc@1100281016 : Text[100];
      ChannelDesc@1100281015 : Text[100];
      RequisitionerDesc@1100281014 : Text[100];
      ServiceCauseDesc@1100281019 : Text[100];
      DeductibleAmount@1100281020 : Decimal;
      HousingTypeDesc@1100281021 : Text[100];
      DeclarationCommentDesc@1100281022 : Text[50];
      ServFormMgt@1100281023 : Codeunit 50086;
      MeetingInformation@1100281024 : Boolean INDATASET;
      NotMeetingInformation@1100281027 : Boolean INDATASET;
      Text001@1100281028 : TextConst 'ENU=You must enter at least one affected place;FRA=Vous devez saisir au moins un lieu touch‚';
      Text002@1100281009 : TextConst 'ENU=Field Urgent is required;FRA=Champ Urgent obligatoire';
      ExpertContactName@1100281029 : Text[50];
      Text003@1100281030 : TextConst 'ENU=You should to set the field Appropriate Deductible Amount.;FRA=Vous devez renseigner le champ Franchise … pr‚lever.';
      PrincExpertContactName@1100281033 : Text[50] INDATASET;
      TextContext@1100281025 : Text[250];
      StatusCanceled@1100281032 : Boolean INDATASET;
      StatusClosed@1100281031 : Boolean INDATASET;
      StatusSuspended@1100281026 : Boolean INDATASET;
      PageEditable@1100281034 : Boolean INDATASET;
      ServiceUrgent@1100281035 : Boolean INDATASET;
      SDR64SendValue@1100281036 : Boolean INDATASET;
      SDR64Visible@1100281038 : Boolean INDATASET;
      SDR99SendValue@1100281040 : Boolean INDATASET;
      SDR99Visible@1100281039 : Boolean INDATASET;
      CreateProviderDirectVisible@1000000003 : Boolean INDATASET;
      OtherPhoneTypeDesc@1000000005 : Text[100];
      DARVAVisible@1000000006 : Boolean INDATASET;
      QualityDesc@1000000007 : Text[100];
      Text004@1000000008 : TextConst 'ENU=Warning, SDR64 has not been sent.;FRA=Attention, le SDR64 n''a pas ‚t‚ ‚mis.';
      SDR64EnError@1100281041 : Boolean;
      DARVASwitchSystemSetup@1100281043 : Record 50180;
      SDR64ErrorVisible@1000000009 : Boolean INDATASET;

    LOCAL PROCEDURE OnGetRecord@1100281001();
    VAR
      lColorMgt@1100281000 : Codeunit 50088;
      lErrorTxt@1100281001 : Text[250];
    BEGIN
      CALCFIELDS("User Next Step Available", Context);
      CALCFIELDS("Contract Form Name");
      UserNextStepAvailable := "User Next Step Available" OR ("Process Code"='');
      TextContext := Context; //IMH22.ST
      CorporateDeclaration := "Corporate Declaration";//IMH05
      //<<IMH07
      ServiceOrderType.GET("Service Order Type");
      NoExpertVisible := NOT(ServiceOrderType.Expert);
      ExpertVisible := ServiceOrderType.Expert;
      InterventionAllowed := "Intervention Allowed";
      //>>IMH07
      DeductibleAmountVisible := "Appropriate Deductible Amount" = "Appropriate Deductible Amount"::Other;//IMH08
      GetHelpLink;//IMH12
      lColorMgt.PageIdentifLoadXML(XMLText,DATABASE::"Service Header","No.",9);//IMH14


      GetServFieldDescription;//IMH15
      //IMH20
      CurrPage.EDITABLE := ServFormMgt.ServiceEditable(Rec);
      StatusCanceled := (Status = Status::Cancelled);
      StatusClosed := (Status = Status::Finished);
      StatusSuspended := (Status = Status::Pending);

      ServiceUrgent := (Urgent = Urgent::Yes);//IMH29

      //<<IMH32
      ClaimsVisible := ServiceHeaderClaimsMgt.ClaimsEnabled;
      ServiceHeaderClaimNo := "Service Header Claims No." <> '';
      //>>IMH32
      //<<IMH34
      //<<IMH49
      //SDR64Visible := "DARVA Interface";
      SDR64Visible := IsSDR64ButtonVisible;
      //>>IMH49
      //>>IMH34

      //<<IMH35
      CreateProviderDirectVisible := InterventionAllowed AND UserSpecialPermission.IsForceProvAssignManager;
      //>>IMH35

      //<<IMH46
      DARVAVisible := IsDARVAButtonVisible;
      //>>IMH46

      //<<IMH05
      //<<IMH52.ACO
      SDR64ErrorVisible := FALSE;
      IF "DARVA Interface" THEN BEGIN
        SDR64ErrorVisible := TRUE;
      //>>IMH52.ACO
      DARVASetup.GET;
      SDR64EnError := DARVAMgt.SendMQ_SrvHd_ErrorExist(Rec, DARVASetup."DARVA SD64 Code",
            DARVASwitchSystemSetup."Line Type"::Default, '', lErrorTxt);
      //>>IMH50
      //<<IMH52.ACO
      END
      //>>IMH52.ACO
    END;

    PROCEDURE GetHelpLink@1100281018();
    VAR
      lHelpMgt@1100281000 : Codeunit 50084;
    BEGIN
      //IMH12
      //<<IMH39
      //WikiLinkVisible := lHelpMgt.RunHelp("Process Code","Process Status No.","Service Order Type","Corporate No.",WikiLink);
      GetWikiLink(WikiLinkVisible, WikiLink);
      //>>IMH39
    END;

    PROCEDURE RunHelp@1100281011();
    BEGIN
      //IMH12
      HYPERLINK(WikiLink);
    END;

    PROCEDURE GetServFieldDescription@1100281010();
    BEGIN
      //IMH15
      OccupierNatureDesc := ServiceFormMgt.Code_Desc(5051,50070,"Occupier Nature");
      //ResidenceTypeDesc := ServiceFormMgt.Code_Desc(5051,50071,"Residence Type");
      HousingTypeDesc := ServiceFormMgt.Code_Desc(5051,50072,"Housing Type");
      //PropertyTypeDesc := ServiceFormMgt.Code_Desc(5051,50073,"Property Type");
      //CampaignDesc := ServiceFormMgt.Campaign_Desc("Campaign No.");

      ServiceCauseDesc := ServiceFormMgt.ServCause_Desc("Service Cause");
      ChannelDesc := ServiceFormMgt.Code_Desc(50066,12,Channel);
      RequisitionerDesc := ServiceFormMgt.Code_Desc(50066,13,Requisitioner);
      CorporateContactDesc := ServiceFormMgt.CorporateContact_Desc("Corporate Contact No.");
      DeclarationCommentDesc := ServiceFormMgt.DeclarationComment_Desc("Declaration Comment Code"); //IMH18
      ExpertContactName := ServiceFormMgt.ExpertContact_Desc("Expert Contact No."); // IMH22
      PrincExpertContactName := ServiceFormMgt.ExpertContact_Desc("Princ. Expert Contact No."); //IMH.PC
      ServiceFormMgt.GetMeetingVisibility(Rec,MeetingInformation,NotMeetingInformation);
      //MESSAGE(FORMAT(MeetingInformation));
      //<<IMH45.ACO
      OtherPhoneTypeDesc := ServiceFormMgt.Code_Desc(5900, 50260, "Other Phone No. Type");
      //>>IMH45.ACO
      //<<IMH48.ACO
      CALCFIELDS("Person To Contact MEO Quality");
      QualityDesc := ServiceFormMgt.Code_Desc(DATABASE::"Service Header Address", 30, "Person To Contact MEO Quality");
      //>>IMH48.ACO
    END;

    PROCEDURE GetDeductibleAmount@1100281012();
    VAR
      lContactContract@1100281000 : Record 50059;
    BEGIN
      DeductibleAmount := 0;
      CASE "Appropriate Deductible Amount" OF
        "Appropriate Deductible Amount"::" ", "Appropriate Deductible Amount"::"No Deductible" : DeductibleAmount := 0;
        "Appropriate Deductible Amount"::Other : DeductibleAmount := "Deductible Amount";
        "Appropriate Deductible Amount"::"Deductible 1", "Appropriate Deductible Amount"::"Deductible 2" : BEGIN
          lContactContract.SETRANGE("Contact No.", "Contact No.");
          lContactContract.SETRANGE("Corporate No.", "Corporate No.");
          lContactContract.SETRANGE("Contract Form Code", "Contract Form Code");
          lContactContract.SETRANGE("Occurence No.", "Contract Occurence No.");
          lContactContract.SETRANGE("Service Order Type Filter", "Service Order Type");
          IF lContactContract.FINDFIRST THEN
            IF "Appropriate Deductible Amount" = "Appropriate Deductible Amount"::"Deductible 1" THEN
              DeductibleAmount := lContactContract."Deductible 1 (LCY)"
            ELSE
              DeductibleAmount := lContactContract."Deductible 2 (LCY)";
        END;
      END;
    END;

    PROCEDURE TestBeforeAction@1100281000();
    BEGIN
      //TESTFIELD(Channel);
      //TESTFIELD(Requisitioner);
      //IF "Appropriate Deductible Amount" = "Appropriate Deductible Amount"::" " THEN
      //  ERROR(Text003);
      CheckCorporateDeclaration;
      //TESTFIELD("Appropriate Deductible Amount");
      //IF NOT InterventionDescriptionsExist THEN
      //  ERROR(Text001);
      TestDataBeforeAction(TRUE);
    END;

    LOCAL PROCEDURE IsDARVAButtonVisible@1000000001() : Boolean;
    VAR
      lCustomer@1000000000 : Record 18;
      lVisible@1000000001 : Boolean;
      lCorporateRegion@1000000002 : Record 50058;
    BEGIN
      //IMH46
      lVisible := FALSE;

      IF NOT "DARVA Interface" THEN
        EXIT(lVisible);

      IF lCustomer.GET("Corporate No.") THEN
        lVisible := lCustomer."Show DARVA Button";

      IF NOT lVisible THEN
        IF lCorporateRegion.GET("Corporate No.","Corporate Region Code") THEN
          lVisible := lCorporateRegion."Show DARVA Button";

      EXIT(lVisible);
    END;

    PROCEDURE IsSDR64ButtonVisible@1000000002() : Boolean;
    VAR
      lVisible@1000000000 : Boolean;
      lCustomer@1000000001 : Record 18;
      lCorporateRegion@1000000002 : Record 50058;
    BEGIN
      //IMH49
      lVisible := FALSE;

      IF NOT "DARVA Interface" THEN
        EXIT(lVisible);

      IF lCustomer.GET("Corporate No.") THEN
        lVisible := lCustomer."Show SDR64 Button";

      IF NOT lVisible THEN
        IF lCorporateRegion.GET("Corporate No.","Corporate Region Code") THEN
          lVisible := lCorporateRegion."Show SDR64 Button";

      EXIT(lVisible);
    END;

    BEGIN
    {
      /** @r IMH52 @d 20/05/14 @a ISAT.ZW @v IMH6.01.5049 @h 5049 @s Gestion erreur SDR
          @c Modifier r‚cup‚ration valeur "SDR64 en erreur" et affichage case … cocher */
      /** @r IMH51 @d 15/04/14 @a ISAT.PC @v IMH6.01.P011 @s New Provider Search
          @c Add new action Research Historic in Process Category */
      /** @r IMH50 @d 19/03/14 @a ISAT.ZW @v IMH6.01.5049 @h 5049 @s Gestion erreur SDR
          @c Remplacer l'affichage des deux champs "SDR64 envoy‚" et "SDR99 envoy‚" par un champ calculer "SDR64 en erreur" */
      /** @r IMH49 @d 13/11/13 @a ISAT.ACO @v IMH6.01.348 @s DARVA MATMUT Lot 1
          @c Message si SDR64 non ‚mis lors fermeture ligne produit si envoi par ligne produit
          @c Ajout fonction isSDR64ButtonVisible */
      /** @r IMH48 @d 18/10/13 @a ISAT.ACO @v IMH6.01.348 @s DARVA MATMUT Lot 1 @h 4792
          @c Ajout champs "Person To Contact MEO Name", "Person To Contact MEO Phone",
          @c Ajout champs descriptif "person To Contact MEO Quality"*/
      /** @r IMH47 @d 08/10/13 @a ISAT.ACO @v IMH6.01.348 @s DARVA MATMUT Lot 1
          @c Masquage champ "Type T‚l autre" */
      /** @r IMH46 @d 23/08/13 @a ISAT.ACO @v IMH6.01.348 @s DARVA MATMUT Lot1
          @c Ajout bouton DARVA */
      /** @r IMH45 @d 19/06/13 @a ISAT.ACO @v IMH6.01.347 @s JUIN @h 4387
          @c Ajout champs "Other Phone No. Type" et "Other Phone No." */
      /** @r IMH44 @d 05/03/13 @a ISAT.ZW @v IMH6.01.340 @s NEP IMH 4 @h 4330
          @c Modif gestion d'affichage des champs d‚claration  */
      /** @r IMH43 @d 13/02/13 @a ISAT.PC @v IMH6.01.215 @h 4121 @s Ajout "Create date" sur la cl‚ secontraire
          @c modification de la propri‚t‚ RunFormView de l'action document joint
          @c de SORTING(Service No.,Service Document No.,Service Intervention Line No.,Intervention Quote Line No.)
          @c a SORTING(Service No.,Service Document No.,Service Intervention Line No.,Creation Date)
      /** @r IMH42 @d 28/09/12 @a ISAT.ML @v IMH6.01.213 @s Projet SMS @c ajout fonctionnalit‚ send SMS */
      /** @r IMH41 @d 21/09/12 @a ISAT.PC @v IMH6.01.226 @s version 1.4 @c D‚sactivation de la ref IMH40 @h 3613 */
      /** @r IMH40 @d 22/08/12 @a ISAT.ZW @v IMH6.01.226 @s version 1.4 @c Affichier PJ DT @h 3613 */
      /** @r IMH39 @d 18/07/12 @a ISAT.PC @v IMH6.01.226 @s version 1.4 @h 3537 @c Lien Wiki intervention */
      /** @r IMH38 @d 30/04/12 @a ISAT.PC @v IMH6.01.134 @s DARVA @h 3325 @c Suppression code IMH (plus n‚cessaire) */
      /** @r IMH37 @d 23/04/12 @a ISAT.PC @v IMH6.01.134 @s DARVA @h 0003320 @c Rafraichissment SDR64 send et SDR99 Send */
      /** @r IMH36 @d 18/04/12 @a ISAT.PC @v IMH6.01.134 @s DARVA @h 3276 @c Ajout champ flowfield 56023, SDR99 Send */
      /** @r IMH35 @d 27/03/12 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @h 2725 @c FOnction Assignation directe prestataire*/
      /** @r IMH34 @d 20/03/12 @a ISAT.LLT @v IMH6.01.134 @s DARVA Management @c Ajout bouton SDR @h 2834 */
      /** @r IMH33 @d 14/03/12 @a ISAT.PC @v IMH6.01.134 @s DARVA @h 2851 @c Ajout lien transparent */
      /** @r IMH32 @d 16/01/12 @a ISAT.ZW @v IMH6.01.129 @s R‚clamation @c Ajout champs r‚clamation */
      /** @r IMH31 @d 14/01/12 @a ISAT.PC @v IMH6.01.129 @s CTI @c Ajout du dev pour la partie CTI */
      /** @r IMH30 @d 10/01/12 @a ISAT.PC @v IMH6.01.134 @s DARVA @c Ajout champ flowfield 56022, SDR64 Send */
      /** @r IMH29 @d 19/12/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @h  2592
          @c Afficher champs "vol de contenu"+"dommages corporels" pour ren Urgent */
      /** @r IMH28 @d 05/12/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Verrou service pour les fonction */
      /** @r IMH27 @d 23/11/11 @a ISAT.EBA @v IMH6.01.011 @s Gestion du service */
      /** @r IMH26 @d 18/11/11 @a ISAT.EBA @v IMH6.01.011 @s Gestion du service @c Lookup sur champ "Ship-to City" */
      /** @r IMH25 @d 07/11/11 @a ISAT.PC @v IMH6.01.135 @s DARVA @c Gestion cabinet expert */
      /** @r IMH24 @d 01/09/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Affichage nom formule */
      /** @r IMH23 @d 01/09/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout champ Context
          @c suppression menu Descriptif des travaux */
      /** @r IMH22 @d 29/08/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Ajout champ Context
          @c Suppression test canal, demandeur, franchise */
      /** @r IHM21 @d 06/06/11 @a ISAT.ZW @v IMH6.01.011 @s Gestion des services @c Ajout fonction Historiques */
      /** @r IHM20 @d 31/05/11 @a ISAT.ZW @v IMH6.01.011 @s Gestion des services @c service FUsion non editable */
      /** @r IMH19 @d 19/05/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Contr“le des champs obligatoires */
      /** @r IMH18 @d 16/05/11 @a ISAT.ZW @v IMH6.01.123 @s Description commentaire declaration */
      /** @r IMH17 @d 18/04/11 @a ISAT.EBA @v IMH6.01.011 @s Gestion du service
          @c Ajout de champ : "Total Descr. Amount Excl. VAT"
          @c Suppression de champs onglet "Compl‚ment"  : "Body Damage", "Content Theft" */
      /** @r IMH16 @d 24/03/11 @a ISAT.ZW @v IMH6.01.123 @s Affichage montant franchise */
      /** @r IMH15 @d 11/03/11 @a ISAT.LLT @v IMH6.01.123 @s Saisie champs description */
      /** @r IMH14 @d 08/03/11 @a ISAT.LLT @v IMH6.01.122 @s Gestion des commentaires
          @c Changement accŠs form commentaires
          @c Ajout couleur */
      /** @r IHM13 @d 04/03/11 @a ISAT.ZW @v IMH6.01.004 @s GED @c renomer interaction report‚ en Brouillons */
      /** @r IMH12 @d 01/03/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout lien WIKI */
      /** @r IMH11 @d 25/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c description statut en gras */
      /** @r IMH10 @d 31/01/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Champ Urgent obligatoire */
      /** @r IMH09 @d 20/01/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Design */
      /** @r IMH08 @d 16/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Design
          @c Ajout champs franchise */
      /** @r IMH07 @d 06/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Gestion mode ‚dition */
      /** @r IMH06 @d 01/12/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Fonction cr‚er interaction */
      /** @r IMH05 @d 30/11/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout code cause */
      /** @r IMH04 @d 27/10/10 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Temps utilisateurs */
      /** @r IMH03 @d 25/10/10 @a ISAT.ZW @v IMH6.01.012 @s Gestion de l'intervention
          @c Todo --> Tray Line + fonction Cr‚er Activit‚ corbeille*/
      /** @r IMH02 @d 04/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion de l'intervention @c Ajout commit en CreateIntervention */
      /** @r IMH01 @d 04/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Cr‚ation */
    }
    END.
  }
}