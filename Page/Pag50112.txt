OBJECT Page 50112 Create Interv. Quote Wizard
{
  OBJECT-PROPERTIES
  {
    Date=05/12/12;
    Time=15:03:07;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create Service Intervention Quote Wizard;
               FRA=Assistant cr‚ation devis intervention];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table50076;
    DataCaptionExpr=Caption;
    DelayedInsert=Yes;
    PageType=NavigatePage;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 //<<IMH09.PC
                 ServiceTimeRegisterMgt.OpenObjectID(CurrPage.OBJECTID(FALSE));
                 //>>IMH09.PC

                 IsOK := FALSE;
                 //<<IMH06.zw
                 IF NOT IntervLine.GET("Service Header No.", "Intervention Line No.") THEN
                   CLEAR(IntervLine);
                 //>>IMH06.zw
               END;

    OnClosePage=BEGIN
                  //<<IMH09.PC
                  ServiceTimeRegisterMgt.CloseObject;
                  //>>IMH09.PC
                END;

    OnAfterGetRecord=VAR
                       lServiceInterventionLine@1000000000 : Record 50075;
                     BEGIN
                       //<<IMH09.PC
                       IF lServiceInterventionLine.GET("Service Header No.","Intervention Line No.") THEN BEGIN
                         ServiceTimeRegisterMgt.SetFromQuote(TRUE);
                         ServiceTimeRegisterMgt.OnAfterGetServiceIntervRecord(lServiceInterventionLine);
                       END;
                       //>>IMH09.PC
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000007;1 ;Action    ;
                      Name=<Action1000000007>;
                      ShortCutKey=F9;
                      CaptionML=[ENU=Finish;
                                 FRA=Terminer];
                      InFooterBar=Yes;
                      Image=Post;
                      OnAction=BEGIN
                                 Finish;
                               END;
                                }
      { 1000000006;1 ;Action    ;
                      CaptionML=[ENU=Cancel;
                                 FRA=Annuler];
                      Visible=FALSE;
                      InFooterBar=Yes;
                      Image=Cancel;
                      OnAction=BEGIN
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100281002;1;Group  ;
                CaptionML=[ENU=Intervention;
                           FRA=Intervention];
                Visible=false;
                GroupType=Group }

    { 1100281001;2;Field  ;
                CaptionML=[ENU=Intervention;
                           FRA=Intervention];
                SourceExpr="Service Header No." +'/'+ FORMAT("Intervention No.");
                Visible=false;
                Editable=FALSE }

    { 1100281011;2;Field  ;
                SourceExpr="Contact No.";
                TableRelation=Contact.No.;
                Visible=False;
                Editable=FALSE;
                LookupFormID=Contact Card }

    { 1100281003;1;Group  ;
                CaptionML=[ENU=Quote;
                           FRA=Devis];
                GroupType=Group }

    { 1100281000;2;Field  ;
                CaptionClass=Text002;
                MultiLine=Yes }

    { 1100281009;2;Field  ;
                SourceExpr="Service Quote Type";
                OnLookup=BEGIN
                           SelectServiceQuoteType;//IMH03
                         END;
                          }

    { 1100281004;2;Field  ;
                SourceExpr="Quote Reference" }

    { 1100281006;2;Field  ;
                SourceExpr=Active }

    { 1100281005;2;Field  ;
                SourceExpr="Receive Date";
                OnValidate=BEGIN
                             //IMH06.zw
                             IF "Receive Date" <> 0D THEN
                               IF "Receive Date" < IntervLine."Assigned Date" THEN
                                 ERROR(Text003, IntervLine."Assigned Date");
                           END;
                            }

    { 1100281007;2;Field  ;
                SourceExpr="Document Date" }

    { 1100281013;2;Field  ;
                SourceExpr="Amount Excl. VAT" }

    { 1100281014;2;Field  ;
                CaptionML=[ENU=VAT;
                           FRA=TVA];
                SourceExpr="Order VAT Prod. Posting Group" }

    { 1100281015;2;Field  ;
                SourceExpr="Amount Incl. VAT" }

    { 1100281017;1;Part   ;
                Name=AttachLinesCtrl;
                PagePartID=Page50111 }

  }
  CODE
  {
    VAR
      IntervLine@1000000000 : Record 50075;
      ServiceTimeRegisterMgt@1000000001 : Codeunit 50070;
      Protect@1100481012 : 'Yes,No';
      Text001@1100481015 : TextConst 'ENU=Attention, this document attachment will not be secure.;FRA=Attention, ce document ne sera plus s‚curis‚.';
      IsOK@1100481000 : Boolean;
      Text002@19071049 : TextConst 'ENU=This wizard helps you to create intervention quote. Enter the informations of your quote :;FRA=Cet assistant vous permet de cr‚er des devis intervention. Veuillez saisir les informations de votre devis :';
      Text003@1100281000 : TextConst 'ENU=Receive date must be after Assigned Date %1.;FRA=La date r‚ception doit ˆtre sup‚rieure ou ‚gale … la date d''assignation %1.';

    PROCEDURE Caption@1100281000() rText : Text[1024];
    VAR
      lContact@1100281000 : Record 5050;
    BEGIN
      IF lContact.GET("Contact No.") THEN;
      rText := "Service Header No." + '-' + FORMAT("Intervention No.") + '-' + lContact.Name;
    END;

    PROCEDURE SetValue@1100481002(VAR pServIntervQuote@1100481000 : Record 50076);
    BEGIN
      Rec := pServIntervQuote;
      IF "Receive Date" = 0D THEN
        "Receive Date" := WORKDATE;
      IF "Document Date" = 0D THEN
        "Document Date" := WORKDATE;
      INSERT;
    END;

    PROCEDURE GetIsOK@1000000003() : Boolean;
    BEGIN
      EXIT(IsOK);
    END;

    PROCEDURE GetValue@1100481001(VAR pServIntervQuote@1100281000 : Record 50076;VAR pTempAttachment@1100281001 : Record 5062);
    BEGIN
      pServIntervQuote := Rec;
      CurrPage.AttachLinesCtrl.FORM.GetRec(pTempAttachment);
    END;

    PROCEDURE Finish@1100481000();
    BEGIN
      IF CheckBeforeFinish THEN BEGIN
        IsOK := TRUE;
        CurrPage.CLOSE;
      END;
    END;

    PROCEDURE SelectServiceQuoteType@1100281001();
    VAR
      lServiceQuoteCodes@1100281000 : Record 50062;
    BEGIN
      //IMH03
      lServiceQuoteCodes.SETRANGE("Service Order Type","Service Order Type");
      lServiceQuoteCodes.SETRANGE(Type,lServiceQuoteCodes.Type::QuoteType);
      //<<IMH07
      IF IntervLine."Quote Managment" THEN BEGIN
        lServiceQuoteCodes.SETFILTER("Service Quote Type",'%1|%2'
          ,lServiceQuoteCodes."Service Quote Type"::" "
          ,lServiceQuoteCodes."Service Quote Type"::Additional
          );
      END ELSE BEGIN
        lServiceQuoteCodes.SETFILTER("Service Quote Type",'%1|%2'
          ,lServiceQuoteCodes."Service Quote Type"::Contradictory
          ,lServiceQuoteCodes."Service Quote Type"::Additional
          );
      END;

      //>>IMH07
      IF ISEMPTY THEN
        EXIT;
      IF FORM.RUNMODAL(FORM::"Service Quote Code List",lServiceQuoteCodes) = ACTION::LookupOK THEN
        "Service Quote Type" := lServiceQuoteCodes.Code;
    END;

    PROCEDURE CheckBeforeFinish@1100281002() : Boolean;
    BEGIN
      //IMH05.ST
      CheckAmount;

      EXIT(TRUE);
    END;

    BEGIN
    {
      /** @r IHM09 @d 05/12/12 @a ISAT.PC @v IMH6.01.334 @s Mantis 4004 @h 4004 @c gestion temps */
      /** @r IHM08 @d 06/09/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion des services @c Suppression franchise et vetust‚ */
      /** @r IMH07 @d 06/09/11 @a ISAT.LLT @v IMH6.01.012 @s Gestion du devis
          @c Gestion devis compl‚mentaire et contracdictoire */
      /** @r IMH06 @d 16/05/11 @a ISAT.ZW @v IMH6.01.012 @s Gestion du devis
          @c La date de r‚ception d'un devis ne peut pas ˆtre ant‚rieure … la date d'assignation */
      /** @r IMH05 @d 13/05/11 @a ISAT.ST @v IMH6.01.012 @s Gestion du devis
          @c Ajout TVA, CheckBeforeFinish */
      /** @r IMH04 @d 18/04/11 @a ISAT.EBA @v IMH6.01.012 @s Gestion du devis
          @c Suppression bouton "Annuler" */
      /** @r IMH03 @d 18/02/11 @a ISAT.LLT @v IMH6.01.012 @s Gestion du devis
          @c Modifs interface */
      /** @r IMH02 @d 26/11/10 @a ISAT.LLT @v IMH6.01.012 @s Gestion du devis
          @c Ajout champs li‚s aux franchises */
      /** @r IMH01 @d 23/09/10 @a ISAT.ZW @v IMH6.01.003 @s Attach. Management @c Creation */
    }
    END.
  }
}