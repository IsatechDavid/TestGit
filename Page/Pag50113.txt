OBJECT Page 50113 Serv. Intervention Quote Card
{
  OBJECT-PROPERTIES
  {
    Date=05/12/12;
    Time=15:03:30;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Serv. Intervention Quote Card;
               FRA=Fiche devis intervention];
    InsertAllowed=No;
    SourceTable=Table50076;
    PageType=Card;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Attachment;
                                FRA=Nouveau,Processus,Etat,Doc. joint];
    ShowFilter=No;
    OnOpenPage=VAR
                 lWinShell@1100281000 : Codeunit 50094;
               BEGIN
                 //CheckFieldEditable;//IMH02
                 //<<IMH18.PC
                 ServiceTimeRegisterMgt.OpenObjectID(CurrPage.OBJECTID(FALSE));
                 //>>IMH18.PC

                 //<<IMH17
                 IF ServiceLockingMgt.InterventionQuoteCard_GetLock(Rec,TRUE) THEN BEGIN
                   CurrPage.EDITABLE := TRUE;
                   lWinShell.EditMode;
                 END ELSE BEGIN
                   CurrPage.EDITABLE := FALSE;
                 END;
                 PageEditable := CurrPage.EDITABLE;
                 //>>IMH17
               END;

    OnClosePage=BEGIN
                  //<<IMH18.PC
                  ServiceTimeRegisterMgt.CloseObject;
                  //>>IMH18.PC
                END;

    OnAfterGetRecord=VAR
                       lServiceInterventionLine@1000000000 : Record 50075;
                     BEGIN
                       //<<IMH18.PC
                       IF lServiceInterventionLine.GET("Service Header No.","Intervention Line No.") THEN BEGIN
                         ServiceTimeRegisterMgt.SetFromQuote(TRUE);
                         ServiceTimeRegisterMgt.OnAfterGetServiceIntervRecord(lServiceInterventionLine);
                       END;
                       //>>IMH18.PC
                       GetRecord;
                     END;

    ActionList=ACTIONS
    {
      { 1100281017;0 ;ActionContainer;
                      Name=<Action1100281017>;
                      ActionContainerType=ActionItems }
      { 1100281016;1 ;ActionGroup;
                      Name=<Action1100281068>;
                      CaptionML=[ENU=Function&s;
                                 FRA=Fonction&s] }
      { 1100281032;2 ;Action    ;
                      Name=<Action1100281069>;
                      CaptionML=[ENU=Create Tray Line;
                                 FRA=Cr‚er activit‚ corbeille];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      Image=BinContent;
                      OnAction=VAR
                                 lTrayLineMgt@1100281000 : Codeunit 50050;
                               BEGIN
                                 lTrayLineMgt.CreateTLFromIntervQuote(Rec, '', '', TRUE);
                               END;
                                }
      { 1100281012;2 ;Action    ;
                      Name=Create Interact;
                      CaptionML=[ENU=Create &Interact;
                                 FRA=Cr‚er &interaction];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      Image=CreateInteraction;
                      OnAction=BEGIN
                                 CreateInteraction;
                               END;
                                }
      { 1100281010;2 ;Separator  }
      { 1100281014;2 ;Action    ;
                      Name=<Action1100281053>;
                      CaptionML=[ENU=Next Step;
                                 FRA=Etape suivante];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      PromotedIsBig=Yes;
                      Image=SelectItemSubstitution;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lProcessQuoteMgt@1100281000 : Codeunit 50046;
                               BEGIN
                                 lProcessQuoteMgt.SelectNextStep(Rec);//IMH04
                               END;
                                }
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100281026;1 ;ActionGroup;
                      CaptionML=[ENU=Attachment;
                                 FRA=Doc. joint] }
      { 1100281027;2 ;Action    ;
                      CaptionML=[ENU=Show;
                                 FRA=Afficher];
                      Promoted=Yes;
                      Visible=FALSE;
                      Image=View;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lDocAttachment@1100281001 : Record 50021;
                                 lAttachmentMgt@1100281000 : Codeunit 50002;
                               BEGIN
                                 lDocAttachment.SETRANGE("Key Integer 1", "Intervention Line No.");
                                 lDocAttachment.SETRANGE("Key Integer 2", "Line No.");
                                 lDocAttachment.SETRANGE("Key Code 1", "Service Header No.");

                                 IF lDocAttachment.COUNT = 1 THEN BEGIN
                                   lDocAttachment.FINDFIRST;
                                   lAttachmentMgt.ShowAttachment(lDocAttachment)
                                 END ELSE
                                   FORM.RUN(0, lDocAttachment);
                               END;
                                }
      { 1100281058;2 ;Action    ;
                      Name=InteractionLogEntries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=FRA=Ecritures &journal interaction;
                      RunObject=Page 5076;
                      RunFormView=SORTING(Service No.,Service Header No.,Intervention Line No.,Date,Postponed);
                      RunFormLink=Service Header No.=FIELD(Service Header No.),
                                  Intervention Line No.=FIELD(Intervention Line No.),
                                  Intervention Quote No.=FIELD(Line No.);
                      Promoted=Yes;
                      Image=Track;
                      PromotedCategory=Category4 }
      { 1100281028;2 ;Action    ;
                      CaptionML=[ENU=Create;
                                 FRA=Cr‚er];
                      Promoted=Yes;
                      Visible=FALSE;
                      Image=NewDocument;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lDocAttachment@1100281001 : Record 50021;
                                 lSourceAttachMgt@1100281000 : Codeunit 50003;
                               BEGIN
                                 lDocAttachment.SETRANGE("Service Document No.", "Service Header No.");
                                 lDocAttachment.SETRANGE(lDocAttachment."Service Intervention Line No.", "Intervention Line No.");
                                 lDocAttachment.SETRANGE(lDocAttachment."Intervention Quote Line No.", "Line No.");

                                 lSourceAttachMgt.CreateAttachmentFromForm(lDocAttachment);
                               END;
                                }
      { 1100281038;1 ;Action    ;
                      Name=<Action1100281057>;
                      CaptionML=[ENU=Process Status History;
                                 FRA=Historique statut processus];
                      RunObject=Page 50156;
                      RunFormLink=Source Table ID=CONST(50076),
                                  Source Key Code 1=FIELD(Service Header No.),
                                  Source Key Integer 1=FIELD(Intervention Line No.),
                                  Source Key Integer 2=FIELD(Line No.) }
      { 1100281053;1 ;Action    ;
                      Name=History;
                      CaptionML=[ENU=History;
                                 FRA=Historiques];
                      RunObject=Page 595;
                      RunFormView=SORTING(Table No.,Primary Key Field 1 Value)
                                  WHERE(Table No.=CONST(50076));
                      RunFormLink=Primary Key Field 1 Value=FIELD(Service Header No.),
                                  Primary Key Field 2 Value=FIELD(Intervention Line No.),
                                  Primary Key Field 3 Value=FIELD(Line No.);
                      Promoted=Yes;
                      Image=History;
                      PromotedCategory=Process }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100281000;1;Group  ;
                CaptionML=[ENU=General;
                           FRA=G‚n‚ral] }

    { 1100281050;2;Field  ;
                SourceExpr="Process Status Description";
                Style=Unfavorable;
                StyleExpr=true }

    { 1100281001;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="Service Header No.";
                Editable=FALSE }

    { 1100281007;2;Field  ;
                SourceExpr="Intervention No.";
                Editable=FALSE }

    { 1100281013;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="Service Order Type";
                Editable=FALSE }

    { 1100281015;2;Field  ;
                CaptionML=[ENU=Service Quote Type;
                           FRA=Type devis service *];
                SourceExpr="Service Quote Type" }

    { 1100281019;2;Field  ;
                CaptionML=[ENU=Quote Reference;
                           FRA=R‚f‚rence devis *];
                SourceExpr="Quote Reference" }

    { 1100281002;2;Field  ;
                SourceExpr=Active }

    { 1100281009;2;Field  ;
                SourceExpr="Receive Date" }

    { 1100281011;2;Field  ;
                SourceExpr="Document Date" }

    { 1100281021;2;Field  ;
                CaptionML=[ENU=Amount Excl. VAT;
                           FRA=Devis HT *];
                SourceExpr="Amount Excl. VAT";
                Editable=FieldEditable }

    { 1100281049;2;Field  ;
                CaptionML=[ENU=VAT;
                           FRA=TVA *];
                SourceExpr="Order VAT Prod. Posting Group" }

    { 1100281023;2;Field  ;
                CaptionML=[ENU=Amount Incl. VAT;
                           FRA=Devis TTC *];
                SourceExpr="Amount Incl. VAT";
                Editable=FieldEditable }

    { 1100281048;2;Group  ;
                GroupType=Group }

    { 1100281033;3;Field  ;
                SourceExpr="Approval Status";
                Enabled=FALSE;
                Editable=FALSE;
                OnValidate=BEGIN
                             OnChangeApprovalStatus;
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100281046;3;Field  ;
                SourceExpr="Unapproved Reason Code" }

    { 1100281008;3;Field  ;
                SourceExpr="Approval Date" }

    { 1100281025;2;Field  ;
                SourceExpr="Use External Approval";
                OnValidate=BEGIN
                             //IMH06
                             OnChangeUseExternalApproval;
                           END;
                            }

    { 1100281036;2;Field  ;
                SourceExpr="Percentage Commission";
                Enabled=PctCommissionEnabled }

    { 1100281037;2;Field  ;
                SourceExpr="Commission Amount";
                Enabled=CommissionAmtEnabled }

    { 1100281042;2;Field  ;
                SourceExpr="Order Amount Excl. VAT";
                Visible=FALSE;
                Editable=NotEnabledFeildInvoiced }

    { 1100281040;2;Field  ;
                SourceExpr="Order Amount Incl. VAT";
                Visible=FALSE;
                Editable=NotEnabledFeildInvoiced }

    { 1100281044;2;Field  ;
                SourceExpr="Order VAT Prod. Posting Group";
                Visible=FALSE;
                Editable=NotEnabledFeildInvoiced }

    { 1100281018;2;Group  ;
                Visible=UseExternalValidation;
                GroupType=Group }

    { 1100281020;3;Field  ;
                SourceExpr="External Approval Status";
                OnValidate=BEGIN
                             //IMH06
                             OnChangeExternalApproval;
                           END;
                            }

    { 1100281047;3;Field  ;
                SourceExpr="Ext. Unapproved Reason Code" }

    { 1100281022;3;Field  ;
                SourceExpr="External Approval Date" }

    { 1100281024;3;Field  ;
                SourceExpr="External Refused Reason";
                Enabled=ExtRefusedReasonEnabled }

    { 1100281034;2;Field  ;
                SourceExpr="To Invoice" }

    { 1100281035;2;Field  ;
                SourceExpr=Invoiced }

    { 1100281051;2;Field  ;
                SourceExpr="Sale Order Nb" }

    { 1100281052;2;Field  ;
                SourceExpr="Purchase Order Nb" }

    { 1100281031;2;Field  ;
                SourceExpr=Acceptance;
                Enabled=AcceptEnabled;
                Editable=FALSE;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100281029;2;Field  ;
                SourceExpr="Acceptance Date" }

    { 1100281003;2;Field  ;
                SourceExpr=Attachments }

    { 1100281054;2;Field  ;
                SourceExpr="Expert Quote Check";
                Editable=false }

    { 1100281055;2;Field  ;
                SourceExpr="Expert Quote Check Comment" }

    { 1100281056;2;Field  ;
                SourceExpr="Expert Ask Quote Check User ID" }

    { 1100281057;2;Field  ;
                SourceExpr="Expert Ask Quote Check Date" }

    { 1901370701;1;Group  ;
                CaptionML=[ENU=Information;
                           FRA=Information] }

    { 1100281039;2;Field  ;
                SourceExpr="Creation Date" }

    { 1100281041;2;Field  ;
                SourceExpr="Creation User ID" }

    { 1100281043;2;Field  ;
                SourceExpr="Last Modification Date" }

    { 1100281045;2;Field  ;
                SourceExpr="Last Modification User ID" }

  }
  CODE
  {
    VAR
      ServiceLockingMgt@1100281014 : Codeunit 50071;
      ServOrderType@1100281008 : Record 5903;
      ServiceFormMgt@1100281007 : Codeunit 50086;
      UserPerm@1000000000 : Codeunit 50093;
      ServiceTimeRegisterMgt@1000000001 : Codeunit 50070;
      FieldEditable@1100281000 : Boolean INDATASET;
      AcceptanceOK@1100281001 : Boolean INDATASET;
      AcceptanceNOK@1100281002 : Boolean INDATASET;
      AcceptEnabled@1100281003 : Boolean INDATASET;
      UseExternalValidation@1100281004 : Boolean INDATASET;
      ExtRefusedReasonEnabled@1100281005 : Boolean INDATASET;
      PctCommissionEnabled@1100281009 : Boolean INDATASET;
      CommissionAmtEnabled@1100281010 : Boolean INDATASET;
      ServiceQuoteTypeDesc@1100281006 : Text[100];
      NotEnabledFeildInvoiced@1100281011 : Boolean INDATASET;
      PageEditable@1100281013 : Boolean INDATASET;

    PROCEDURE GetRecord@1100281004();
    BEGIN
      CheckFieldEditable;//IMH02
      GetServFieldDescription;//IMH08
    END;

    PROCEDURE CheckFieldEditable@1100281001();
    BEGIN
      //IMH01
      FieldEditable := (Acceptance <> Acceptance::Yes);
      AcceptanceOK := (Acceptance = Acceptance::Yes);
      AcceptanceNOK := (Acceptance <> Acceptance::Yes);
      NotEnabledFeildInvoiced := NOT Invoiced;
      //<<IMH06
      //AcceptEnabled := ("Approval Status" = "Approval Status"::WaitReport); //IMH05.ST
      OnChangeApprovalStatus;
      OnChangeUseExternalApproval;
      //>>IMH06

      //<<IMH11.ISAT.EBA
      IF NOT ServOrderType.GET("Service Order Type") THEN
        ServOrderType.INIT;
      PctCommissionEnabled := ServOrderType."Home Service";
      //<<IMH15.ST
      IF PctCommissionEnabled THEN
        PctCommissionEnabled := UserPerm.QuoteCommissionAllowed;
      //>>IMH15.ST
      CommissionAmtEnabled := PctCommissionEnabled;
      //>>IMH11.ISAT.EBA
    END;

    PROCEDURE OnChangeUseExternalApproval@1100281000();
    BEGIN
      //IMH06
      UseExternalValidation := "Use External Approval" = "Use External Approval"::Yes;
      AcceptEnabled := ("Approval Status" = "Approval Status"::Yes)
                   AND ("Use External Approval" IN ["Use External Approval"::" ",
                        "Use External Approval"::Yes])
                   AND ("External Approval Status" IN ["External Approval Status"::" ",
                        "External Approval Status"::Yes]);
    END;

    PROCEDURE OnChangeExternalApproval@1100281005();
    BEGIN
      //IMH06
      AcceptEnabled := ("Approval Status" = "Approval Status"::Yes)
                   AND ("Use External Approval" IN ["Use External Approval"::" ",
                        "Use External Approval"::Yes])
                   AND ("External Approval Status" IN ["External Approval Status"::" ",
                        "External Approval Status"::Yes]);
      ExtRefusedReasonEnabled := "External Approval Status" = "External Approval Status"::No;
    END;

    PROCEDURE OnChangeApprovalStatus@1100281002();
    BEGIN
      //IMH06
      AcceptEnabled := ("Approval Status" = "Approval Status"::Yes)
                   AND ("Use External Approval" IN ["Use External Approval"::" ",
                        "Use External Approval"::Yes])
                   AND ("External Approval Status" IN ["External Approval Status"::" ",
                        "External Approval Status"::Yes]);
    END;

    PROCEDURE OnChangeAcceptanceStatus@1100281003();
    BEGIN
    END;

    PROCEDURE GetServFieldDescription@1100281010();
    BEGIN
      //IMH08
      ServiceFormMgt.ServiceQuoteCodes_Desc("Service Order Type",0,"Service Quote Type");
    END;

    BEGIN
    {
      /** @r IHM18 @d 05/12/12 @a ISAT.PC @v IMH6.01.334 @s Mantis 4004 @h 4004 @c gestion temps */
      /** @r IMH17 @d 05/12/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Verrou service pour les fonction */
      /** @r IHM16 @d 06/09/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion des services @c Suppression franchise et vetust‚ */
      /** @r IHM15 @d 18/08/11 @a ISAT.ST @v IMH6.01.011 @s Gestion des services @c Ajout permission commission devis */
      /** @r IHM14 @d 09/08/11 @a ISAT.ST @v IMH6.01.011 @s Gestion des services @c D‚sactivation code motif refus */
      /** @r IHM13 @d 06/06/11 @a ISAT.ZW @v IMH6.01.011 @s Gestion des services @c Ajout fonction Historiques */
      /** @r IMH12 @d 18/04/11 @a ISAT.EBA @v IMH6.01.011 @s Gestion du service
          @c Ajout de champs : "Unapproved Reason Code", "Ext. Unapproved Reason Code" */
      /** @r IMH11 @d 18/04/11 @a ISAT.EBA @v IMH6.01.148 @s Comptabilit‚ - Commission */
      /** @r IMH10 @d 04/04/11 @a ISAT.ZW @v IMH6.01.146 @s Gestion facturation
          @c Afficher champs Montant HT HHC commande + taux TVA commande */
      /** @r IMH06 @d 17/03/11 @a CAP.JC @v IMH6.01.148 @s Comptabilit‚ - Commission
          @c ajout champs 54821, Percentage Commission
          @c ajout champs 54822, Commission Amount */
      /** @r IMH09 @d 14/03/11 @a ISAT.LLT @v IMH6.01.146 @s Gestion facturation
          @c Ajout des champs To-Invoice and Invoiced */
      /** @r IMH08 @d 11/03/11 @a ISAT.LLT @v IMH6.01.123 @s Saisie champs description */
      /** @r IMH07 @d 08/03/11 @a ISAT.ST @v IMH6.01.012 @s Gestion du devis
          @c Ajout cr‚er activit‚ corbeille et interaction */
      /** @r IMH06 @d 17/02/11 @a ISAT.LLT @v IMH6.01.012 @s Gestion du devis
          @c Gestion statut de validation externe */
      /** @r IMH05 @d 17/02/11 @a ISAT.ST @v IMH6.01.012 @s Gestion du devis
          @c Automatismes */
      /** @r IMH04 @d 20/01/11 @a ISAT.LLT @v IMH6.01.102 @s Gestion des statuts
          @c Ajout de la fonction ‚tape suivante */
      /** @r IMH03 @d 16/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout du champ Code modif refus */
      /** @r IMH02 @d 26/11/10 @a ISAT.LLT @v IMH6.01.012 @s Gestion du devis
          @c Gestion champ editable et modif pr‚sentataion */
      /** @r IMH01 @d 11/10/10 @a ISAT.ST @v IMH6.01.012 @s Gestion du devis @c Cr‚ation */
    }
    END.
  }
}