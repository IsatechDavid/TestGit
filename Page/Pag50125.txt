OBJECT Page 50125 Operational Address Card
{
  OBJECT-PROPERTIES
  {
    Date=17/02/12;
    Time=18:56:05;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Operational Address Card;
               FRA=Fiche adresse op‚rationnelle];
    SourceTable=Table5051;
    PageType=Card;
    OnInit=BEGIN
             IsEditable := TRUE; // IMH03.ISAT.MA
           END;

    OnClosePage=BEGIN
                  //<<IMH05.ISAT.NF
                  //<<IMH04.ISAT.EBA
                  //IF ("Geo. Reference Address") AND ("Geo. Reference Code" = '') THEN
                  //  MESSAGE(Text001,FIELDCAPTION("Geo. Reference Code"));
                  //>>IMH04.ISAT.EBA
                  //>>IMH05.ISAT.NF
                END;

    OnAfterGetRecord=BEGIN
                       SetFormEditable;   //IMH02 isat.zw
                       IsEditable := ProviderMgt.IsEditable("Contact No."); // IMH03.ISAT.MA
                       KeyboardingAddress := AddressStandardization.GetContactAltAddQuickAddress(Rec);
                     END;

    OnNewRecord=BEGIN
                  ProviderMgt.ManageOperationalAddress(Rec,TRUE,TRUE,FALSE);
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           FRA=G‚n‚ral];
                Editable=IsEditable }

    { 1100281008;2;Field  ;
                SourceExpr="Address Geocoded";
                Importance=Additional;
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr=Code;
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr=Address;
                Editable=AdresseEditable;
                OnAssistEdit=BEGIN
                               AddressStandardization.AssistContAltAddr(Rec); //IMH02 isat.zw
                               {IF (Address <> xRec.Address) OR
                                  ("Address 2" <> xRec."Address 2") OR
                                  (City <> xRec.City) OR
                                  ("Post Code" <> xRec."Post Code") OR
                                  (County <> xRec.County) OR
                                  ("Country/Region Code" <> xRec."Country/Region Code")
                               THEN BEGIN
                                 ProviderMgt.ManageOperationalAddress(Rec,TRUE,TRUE,FALSE);
                               END;  }
                             END;
                              }

    { 8   ;2   ;Field     ;
                SourceExpr="Address 2" }

    { 1100281001;2;Field  ;
                SourceExpr="Post Code" }

    { 1100281000;2;Field  ;
                SourceExpr="Geo. Reference Code";
                Importance=Additional;
                Visible=FALSE }

    { 35  ;2   ;Field     ;
                SourceExpr=City }

    { 12  ;2   ;Field     ;
                SourceExpr="Country/Region Code";
                Importance=Additional }

    { 1100281005;2;Field  ;
                SourceExpr="Way No.";
                Importance=Additional;
                OnValidate=BEGIN
                             CreateAddress(TRUE);
                           END;
                            }

    { 1100281004;2;Field  ;
                SourceExpr="Way No. Extension";
                Importance=Additional;
                OnValidate=BEGIN
                             CreateAddress(TRUE);
                           END;
                            }

    { 1100281003;2;Field  ;
                SourceExpr="Way Name";
                Importance=Additional;
                OnValidate=BEGIN
                             CreateAddress(TRUE);
                           END;
                            }

    { 1100281007;1;Group  ;
                Name=Communication;
                CaptionML=[ENU=Communication;
                           FRA=Communication];
                Editable=IsEditable;
                GroupType=Group }

    { 31  ;2   ;Field     ;
                SourceExpr="Phone No." }

    { 1100281002;2;Field  ;
                SourceExpr="Extension No." }

    { 16  ;2   ;Field     ;
                SourceExpr="Mobile Phone No." }

    { 20  ;2   ;Field     ;
                SourceExpr="Mobile Phone No. 2" }

    { 1100281006;2;Field  ;
                SourceExpr="Constraint Phone No." }

    { 18  ;2   ;Field     ;
                SourceExpr="Fax No.";
                OnAssistEdit=VAR
                               lSendMail@1100281000 : Codeunit 50128;
                             BEGIN
                               lSendMail.SendFaxFromContNo("Contact No.", "Fax No.");
                             END;
                              }

    { 26  ;2   ;Field     ;
                ExtendedDatatype=None;
                SourceExpr="E-mail";
                OnAssistEdit=VAR
                               lSendMail@1100281000 : Codeunit 50128;
                             BEGIN
                               lSendMail.SendMailFromContNo("Contact No.", "E-mail");
                             END;
                              }

  }
  CODE
  {
    VAR
      AddressStandardization@1100281000 : Codeunit 50098;
      ProviderMgt@1100281001 : Codeunit 50018;
      AdresseEditable@1100281002 : Boolean INDATASET;
      IsEditable@1100281003 : Boolean INDATASET;
      KeyboardingAddress@1100281004 : Text[1024];
      Text001@1100281005 : TextConst 'ENU=Filed %1 is blanck.;FRA=Le champ %1 n''est pas renseign‚.';

    PROCEDURE SetFormEditable@1100281000();
    BEGIN
      //IMH02 isat.zw
      AdresseEditable := NOT AddressStandardization.CountryToAssist(DATABASE::Contact, "Country/Region Code"); //IMH03 isat.ZW
    END;

    LOCAL PROCEDURE KeyboardingAddressOnAfterValid@19005983();
    VAR
      lAbiGeoMgt@1100281000 : Codeunit 50011;
    BEGIN
      AddressStandardization.DecomposeAddr(Rec, KeyboardingAddress,TRUE);
      CreateAddress(TRUE);
      KeyboardingAddress := AddressStandardization.GetContactAltAddQuickAddress(Rec);
    END;

    PROCEDURE CreateAddress@1100281002(pIncludeWayType@1100281001 : Boolean);
    VAR
      lCode@1100281000 : Record 50079;
      lWayTypeText@1100281002 : Text[50];
    BEGIN
      //<<IMH03
      {//IMH02
      IF lCode.GET(50077, 21, "Way Type") THEN;
      IF pIncludeWayType THEN
        lWayTypeText := lCode.Description;
      IF lWayTypeText <> '' THEN
         lWayTypeText := ' ' +  lWayTypeText ;
      IF "Way No." = 0 THEN
        Address := COPYSTR("Way No. Extension" + lWayTypeText + ' ' + "Way Name",
                           1, MAXSTRLEN(Address))
      ELSE
        IF "Way No. Extension" <> '' THEN
          Address := COPYSTR(FORMAT("Way No.") + ' ' + "Way No. Extension" + lWayTypeText + ' ' + "Way Name",
                             1, MAXSTRLEN(Address))
        ELSE
          Address := COPYSTR(FORMAT("Way No.") + lWayTypeText + ' ' + "Way Name",
                             1, MAXSTRLEN(Address));
      }
      IF "Way No." = 0 THEN
        Address := COPYSTR("Way No. Extension" + ' ' + "Way Name",1, MAXSTRLEN(Address))
      ELSE
        IF "Way No. Extension" <> '' THEN
          Address := COPYSTR(FORMAT("Way No.") + ' ' + "Way No. Extension" + ' ' + "Way Name",
                             1, MAXSTRLEN(Address))
        ELSE
          Address := COPYSTR(FORMAT("Way No.") + ' ' + "Way Name", 1, MAXSTRLEN(Address));
      //>>IMH03
    END;

    BEGIN
    {
      /** @r IMH06 @d 17/02/12 @a ISAT.ST @v IMH6.01.108 @s Interactions @c Envoi mail / fax */
      /** @r IMH05 @d 23/12/11 @a ISAT.NF @v IMH6.01.022 @s Comp‚tence g‚ographique @c suppression du test de geocodage */
      /** @r IMH04 @d 08/09/11 @a ISAT.EBA @v IMH6.01.022 @s Comp‚tence g‚ographique */
      /** @r IHM03 @d 10/11/10 @a ISAT.MA @v IMH6.01.020 @s Prestataire
          @c Gestion des modifications : Ajout de la variable IsEditable dans les propriet‚s "Editable" */
      /** @r IMH02 @d 21/10/10 @a ISAT.ZW @v IMH6.01.001 @s Normalisation des donn‚es
          @c Adresse non editable si Normalisation adresse pays + AssistEdit Adresse*/
      /** @r IMH01 @d 28/09/10 @a isat.PC @v IMH6.01.022 @s Comp‚tence g‚ographique
          @c Ajout champ 50050, Reference Geo. Code
          @c Ajout champ 50051, Reference Geo. Address
          @c Ajout champ 50052, Operational Distance
          @c Ajout champ 50053, Constraint Phone No. */
    }
    END.
  }
}