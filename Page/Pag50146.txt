OBJECT Page 50146 Service Header Address Page
{
  OBJECT-PROPERTIES
  {
    Date=20/02/12;
    Time=16:40:24;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Header Address Page;
               FRA=Adresse ligne produit];
    SourceTable=Table50068;
    PageType=Card;
    OnInit=BEGIN
             AddressTypeEditable := TRUE;
           END;

    OnOpenPage=BEGIN
                 IF GETFILTER("Address Type") <> '' THEN
                   IF EVALUATE("Address Type",GETFILTER("Address Type")) THEN BEGIN
                     IF "Address Type" = "Address Type"::"Contact involved" THEN
                       AddressTypeEditable := FALSE;
                   END ELSE
                     "Address Type" := "Address Type"::Moving;
               END;

    OnAfterGetRecord=BEGIN
                       GetRecord;
                     END;

    OnNewRecord=BEGIN
                  GetServFieldDescription;
                END;

  }
  CONTROLS
  {
    { 1100281000;0;Container;
                ContainerType=ContentArea }

    { 1100281001;1;Group  ;
                Name=G‚n‚ral;
                GroupType=Group }

    { 1100281002;2;Field  ;
                SourceExpr="Service Header No." }

    { 1100281003;2;Field  ;
                SourceExpr="Address Type";
                Editable=AddressTypeEditable;
                OnValidate=BEGIN
                             GetServFieldDescription;
                           END;
                            }

    { 1100281004;2;Field  ;
                SourceExpr="Address No." }

    { 1100281005;2;Field  ;
                SourceExpr="Contact Address Code" }

    { 1100281026;2;Field  ;
                Name=SalutationCode;
                CaptionML=[ENU=Salutation Code;
                           FRA=Civilit‚];
                SourceExpr=SalutationDesc;
                OnValidate=BEGIN
                             ServiceFormMgt.Salutation_Validate(SalutationDesc,"Salutation Code");
                           END;

                OnLookup=BEGIN
                           ServiceFormMgt.Salutation_Lookup(SalutationDesc,"Salutation Code");
                         END;
                          }

    { 1100281022;2;Field  ;
                SourceExpr=Name;
                Visible=FALSE }

    { 1100281021;2;Field  ;
                SourceExpr=Surname }

    { 1100281023;2;Field  ;
                SourceExpr="First Name" }

    { 1100281006;2;Field  ;
                SourceExpr=Address }

    { 1100281007;2;Field  ;
                SourceExpr="Address 2" }

    { 1100281009;2;Field  ;
                SourceExpr="Post Code" }

    { 1100281008;2;Field  ;
                SourceExpr=City }

    { 1100281010;2;Field  ;
                SourceExpr="Country/Region Code" }

    { 1100281011;2;Field  ;
                SourceExpr=Digicode }

    { 1100281012;2;Field  ;
                SourceExpr=Lift }

    { 1100281013;2;Field  ;
                SourceExpr=Floor }

    { 1100281014;2;Field  ;
                SourceExpr="Phone No." }

    { 1000000000;2;Field  ;
                SourceExpr="Mobile Phone No." }

    { 1000000001;2;Field  ;
                ExtendedDatatype=None;
                SourceExpr="E-mail";
                OnAssistEdit=VAR
                               lSendMail@1100281000 : Codeunit 50128;
                               lServH@1000000001 : Record 5900;
                             BEGIN
                               IF lServH.GET(lServH."Document Type"::Invoice, "Service Header No.") THEN
                                 lSendMail.SendMailFromServH(lServH, "E-mail");
                             END;
                              }

    { 1100281015;2;Field  ;
                SourceExpr=Notes }

    { 1100281016;2;Field  ;
                SourceExpr="Location Nature" }

    { 1100281017;2;Field  ;
                SourceExpr="Suite Nature" }

    { 1100281018;2;Field  ;
                SourceExpr="Suite Value" }

    { 1100281019;2;Field  ;
                SourceExpr="Suite Cubage (m3)" }

    { 1100281020;2;Field  ;
                SourceExpr="Role Code" }

  }
  CODE
  {
    VAR
      AddressStandardization@1100281004 : Codeunit 50098;
      ServiceFormMgt@1100281008 : Codeunit 50086;
      PostCode@1100281003 : Record 225;
      AddressRef@1100281002 : Record 50077;
      AddressRefForm@1100281001 : Form 50096;
      KeyboardingAddress@1100281000 : Text[1024];
      SpecDesc@1100281007 : Text[100];
      BuildingTradeDesc@1100281006 : Text[100];
      SalutationDesc@1100281005 : Text[100];
      AddressTypeEditable@1100281009 : Boolean INDATASET;

    PROCEDURE GetAddress@1100281000(VAR pAltAddress@1100281000 : Record 50068);
    BEGIN
      pAltAddress := Rec;
    END;

    PROCEDURE InitAddress@1100281001(VAR pAltAddress@1100281000 : Record 50068);
    BEGIN
      Rec := pAltAddress;
      //Code := '0';
      INSERT(FALSE);
    END;

    PROCEDURE CreateAddress@1100281002(pIncludeWayType@1100281001 : Boolean);
    VAR
      lCode@1100281000 : Record 50079;
      lWayTypeText@1100281002 : Text[50];
    BEGIN
      //IMH02
      IF lCode.GET(50077, 21, "Way Type") THEN;
      IF pIncludeWayType THEN
        lWayTypeText := lCode.Description;
      IF lWayTypeText <> '' THEN
         lWayTypeText := ' ' +  lWayTypeText ;
      IF "Way No." = 0 THEN
        Address := COPYSTR("Way No. Extension" + lWayTypeText + ' ' + "Way Name",
                           1, MAXSTRLEN(Address))
      ELSE
        IF "Way No. Extension" <> '' THEN
          Address := COPYSTR(FORMAT("Way No.") + ' ' + "Way No. Extension" + lWayTypeText + ' ' + "Way Name",
                             1, MAXSTRLEN(Address))
        ELSE
          Address := COPYSTR(FORMAT("Way No.") + lWayTypeText + ' ' + "Way Name",
                             1, MAXSTRLEN(Address));
    END;

    LOCAL PROCEDURE KeyboardingAddressOnAfterValid@19005983();
    BEGIN
      AddressStandardization.DecomposeSHAddr(Rec, KeyboardingAddress,TRUE);
      CreateAddress(TRUE);
    END;

    LOCAL PROCEDURE WayNameOnAfterValidate@19005900();
    BEGIN
      CreateAddress(TRUE);
    END;

    PROCEDURE GetServFieldDescription@1100281010();
    BEGIN
      //IMH04
      SpecDesc := ServiceFormMgt.Specialization_Desc("Speciality Code","Building Trade No.");
      BuildingTradeDesc := ServiceFormMgt.BuildingTrade_Desc("Speciality Code","Building Trade No.");
      SalutationDesc := ServiceFormMgt.Salutation_Desc("Salutation Code");
    END;

    PROCEDURE GetRecord@1100281003();
    BEGIN
      GetServFieldDescription;//IMH04
    END;

    BEGIN
    {
      /** @r IMH05 @d 17/02/12 @a ISAT.ST @v IMH6.01.108 @s Interactions @c Envoi mail / fax */
      /** @r IMH04 @d 11/03/11 @a ISAT.LLT @v IMH6.01.123 @s Saisie champs description */
      /** @r IMH03 @d 16/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout champs civilit‚ */
      /** @r IMH02 @d 13/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout saisie adresse rapide */
      /** @r IMH01 @d 30/11/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Cr‚ation */
    }
    END.
  }
}