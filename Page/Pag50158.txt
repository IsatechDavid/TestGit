OBJECT Page 50158 Prov. Bask. Seq. Search Card
{
  OBJECT-PROPERTIES
  {
    Date=06/07/11;
    Time=12:04:33;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Prov. Bask. Seq. Search Card;
               FRA=Panier de recherche sequenc‚e prestataire];
    SourceTable=Table51002;
    PageType=Card;
    SourceTableTemporary=Yes;
    OnAfterGetRecord=BEGIN
                       Specialities := GetSpecList("Provider No.");//IMH02.ST
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100281013;1 ;Action    ;
                      Name=Call;
                      CaptionML=[ENU=Call;
                                 FRA=Appel];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=AddContacts;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CallProvider();
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100281000;1;Group  ;
                GroupType=Repeater }

    { 1100281046;2;Field  ;
                SourceExpr="Provider No." }

    { 1100281050;2;Field  ;
                SourceExpr=Distance }

    { 1100281052;2;Field  ;
                SourceExpr=Score }

    { 1100281043;2;Field  ;
                CaptionML=[ENU=Specialities;
                           FRA=Sp‚cialit‚s];
                SourceExpr=Specialities }

    { 1100281054;2;Field  ;
                SourceExpr="Intervention Count" }

    { 1100281056;2;Field  ;
                SourceExpr="Intervention Date" }

    { 1100281058;2;Field  ;
                SourceExpr="Intervention Order" }

  }
  CODE
  {
    VAR
      PSRB@1100281011 : TEMPORARY Record 51000;
      DPR@1100281009 : Boolean;
      IsOk@1100281012 : Boolean;
      Text19067555@19040144 : TextConst 'ENU=Specialization;FRA=Sp‚cialit‚';
      Specialities@1100281000 : Text[1024] INDATASET;
      TempRec@1100281001 : Record 51002;

    PROCEDURE CallProvider@1100281001();
    VAR
      lFProviderSearchWizard@1100281000 : Form 50022;
      lBuffer@1100281001 : TEMPORARY Record 51000;
      lBuffer2@1100281002 : TEMPORARY Record 51000;
    BEGIN
      IF PSRB.FINDSET(TRUE,TRUE) THEN BEGIN
        REPEAT
          lBuffer2.DELETEALL();
          lBuffer2 := PSRB;
          lBuffer2.INSERT();
          lFProviderSearchWizard.SetRecords(lBuffer2);
          lFProviderSearchWizard.RUNMODAL;
          IF lFProviderSearchWizard.GetIsOk() THEN BEGIN
            IF lFProviderSearchWizard.GetProviderNo() <> '' THEN BEGIN
              RESET();
              //SETFILTER("Speciality Code",lBuffer2."Specialization Code");
              MODIFYALL("Provider No.",lBuffer2."Provider No.");
              CLEAR(lFProviderSearchWizard);
              RESET();
              CurrPage.UPDATE(FALSE);
              EXIT;
              {
              IF FINDLAST() THEN BEGIN
                REPEAT
                  IF PSRB."Specialization Code" = lBuffer2."Specialization Code"  THEN
                    PSRB.DELETE();
                UNTIL NEXT(-1)=0;
              END;
              }
            END;
          END;
        UNTIL PSRB.NEXT() = 0;
      END;
    END;

    PROCEDURE LoadTable@1100281000(VAR pPSB@1100281000 : Record 51002);
    BEGIN
      DELETEALL();
      TempRec.DELETEALL; //IMH02.ST
      IF pPSB.FINDSET() THEN
        REPEAT
      //<<IMH02.ST
      //    Rec := pPSB;
      //    INSERT();
          TempRec := pPSB;
          TempRec.INSERT;
          SETRANGE("Provider No.", pPSB."Provider No.");
          IF ISEMPTY THEN BEGIN
            Rec := TempRec;
            "Speciality Code" := '';
            "Main Specialization" := FALSE;
            "Building Trade No." := '';
            INSERT;
          END;
      //>>IMH02.ST
        UNTIL pPSB.NEXT()=0;
      SETRANGE("Provider No.");
    END;

    PROCEDURE GetTable@1100281003(VAR pPSB@1100281000 : Record 51002);
    BEGIN
      pPSB.DELETEALL();
      IF FINDSET() THEN
        REPEAT
          pPSB := Rec;
          pPSB.INSERT();
        UNTIL NEXT()=0;
    END;

    PROCEDURE LoadPSRB@1100281002(VAR pPSRB@1100281000 : Record 51000);
    BEGIN
      PSRB.DELETEALL();
      IF pPSRB.FINDSET() THEN
        REPEAT
          PSRB := pPSRB;
          PSRB.INSERT();
        UNTIL pPSRB.NEXT()=0;
    END;

    PROCEDURE GetIsOk@1100281008() : Boolean;
    BEGIN
      EXIT(IsOk);
    END;

    LOCAL PROCEDURE GetSpecList@1100281007(pProviderNo@1100281000 : Code[20]) rValue : Text[1024];
    BEGIN
      //IMH02.ST
      TempRec.RESET;
      TempRec.SETRANGE("Provider No.", pProviderNo);
      IF NOT TempRec.FINDSET THEN
        EXIT;
      REPEAT
        IF rValue = '' THEN
          rValue := TempRec."Speciality Code"
        ELSE BEGIN
          IF STRLEN(rValue) + STRLEN(TempRec."Speciality Code") > 1019 THEN BEGIN
            rValue := rValue + ',...';
            EXIT;
          END
          ELSE
            rValue := rValue +',' + TempRec."Speciality Code";
        END;
      UNTIL TempRec.NEXT = 0;
    END;

    BEGIN
    {
      /** @r IMH02 @d 06/07/11 @a ISAT.ST @v IMH6.01.028 @s Recherche prestataire @c S‚lection distinct sur prestataire */
      /** @r IHM01 @d 18/10/10 @a ISAT.NFO @v IMH6.01.028 @s Recherche prestataire @c Creation */
    }
    END.
  }
}