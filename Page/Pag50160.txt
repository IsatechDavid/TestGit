OBJECT Page 50160 Tray Line Card
{
  OBJECT-PROPERTIES
  {
    Date=10/06/14;
    Time=16:57:44;
    Modified=Yes;
    Version List=IMH6.01.P010;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Tray Line Card;
               FRA=Fiche ligne corbeille];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table50048;
    SourceTableView=SORTING(Team Code,Entry No.);
    PageType=Card;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Additional;
                                FRA=Nouveau,Processus,Etat,Compl‚ment];
    ShowFilter=No;
    OnOpenPage=BEGIN
                 FILTERGROUP(2);
                 IF "Team Code" <> '' THEN
                   SETRANGE("Team Code","Team Code");
                 IF "Entry No." <> 0 THEN
                   SETRANGE("Entry No.","Entry No.");
                 FILTERGROUP(0);

                 IF ServiceLockingMgt.TrayLineCard_GetLock(Rec,TRUE) THEN BEGIN
                   CurrPage.EDITABLE := TRUE;
                 END ELSE BEGIN
                   CurrPage.EDITABLE := FALSE;
                 END;

                 ShowFields; //IMH03.ST
                 ShowActions; //IMH03.ST


                 IF CurrPage.EDITABLE THEN
                   OpenDateTime := CURRENTDATETIME; //IMH03.ST
               END;

    OnAfterGetRecord=BEGIN
                       IF NOT Contact.GET("Contact No.") THEN
                         CLEAR(Contact);
                       //<<IMH11
                       IF NOT Provider.GET("Contact No.") THEN
                         CLEAR(Provider);
                       //>>IMH11
                       StyleUnfavorable := GetExpectedEndAlert;
                       ShowFields; //IMH03.ST
                       ShowActions; //IMH03.ST
                     END;

    OnInsertRecord=BEGIN
                     EXIT(FALSE);
                   END;

    OnDeleteRecord=BEGIN
                     EXIT(FALSE);
                   END;

    OnQueryClosePage=VAR
                       lTrayLine@1000000001 : Record 50048;
                     BEGIN
                       IF CurrPage.EDITABLE THEN
                         TrayLineMgt.TestDuration(Rec, OpenDateTime);
                       IF ("Team Code" <> '') AND ("Entry No." <> 0) AND (NOT SkipCloseAsk) THEN BEGIN
                         IF NOT Closed THEN BEGIN
                           //<<IMH13
                           IF lTrayLine.GET("Team Code", "Entry No.") THEN
                             IF lTrayLine.Closed THEN
                               EXIT(TRUE);
                           //>>IMH14
                           IF CONFIRM(Text001) THEN BEGIN
                             VALIDATE(Closed,TRUE);
                             MODIFY(TRUE);
                           END;
                         END;
                         ServiceLockingMgt.TrayLineCard_ReleaseLock(Rec);
                       END;
                       EXIT(TRUE);
                     END;

    ActionList=ACTIONS
    {
      { 1100281035;  ;ActionContainer;
                      Name=<Action1900000004>;
                      ActionContainerType=ActionItems }
      { 1100281034;1 ;ActionGroup;
                      Name=<Action32>;
                      CaptionML=[ENU=F&unctions;
                                 FRA=Fonction&s] }
      { 1100281021;2 ;Action    ;
                      Name=Transfer;
                      CaptionML=[ENU=Transfer;
                                 FRA=Transf‚rer];
                      Enabled=Act_TransferEnable;
                      Image=Delegate;
                      OnAction=VAR
                                 lRec@1100281001 : Record 50048;
                               BEGIN
                                 CurrPage.SAVERECORD;
                                 COMMIT;
                                 lRec := Rec;
                                 lRec.SETRECFILTER;
                                 //<<IMH04
                                 //IF TrayLineMgt.TransferTrayLine(lRec, TRUE) THEN BEGIN
                                 IF TrayLineMgt.TransferTrayLine(lRec, TRUE,0) THEN BEGIN
                                 //>>IMH04
                                   Rec := lRec;
                                   Rec.SETRECFILTER;
                                   SkipCloseAsk := TRUE;
                                   CurrPage.CLOSE;
                                 END;
                               END;
                                }
      { 1100281030;2 ;Action    ;
                      Name=TransferToSalesperson;
                      CaptionML=[ENU=Transfer;
                                 FRA=Transf‚rer au responsable];
                      Image=Delegate;
                      OnAction=VAR
                                 lRec@1100281001 : Record 50048;
                               BEGIN
                                 //IMH04
                                 CurrPage.SAVERECORD;
                                 COMMIT;
                                 lRec := Rec;
                                 lRec.SETRECFILTER;
                                 //<<IMH04
                                 //IF TrayLineMgt.TransferTrayLine(lRec, TRUE) THEN BEGIN
                                 IF TrayLineMgt.TransferTrayLine(lRec, TRUE,1) THEN BEGIN
                                 //>>IMH04
                                   Rec := lRec;
                                   Rec.SETRECFILTER;
                                   SkipCloseAsk := TRUE;
                                   CurrPage.CLOSE;
                                 END;
                               END;
                                }
      { 1100281004;2 ;Separator  }
      { 1100281033;2 ;Action    ;
                      Name=CreateService;
                      CaptionML=[ENU=Create Service;
                                 FRA=Cr‚er service];
                      Promoted=Yes;
                      Visible=Act_CreateServiceVisible;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF NOT CONFIRM(Text002) THEN
                                   EXIT;

                                 TrayLineMgt.CreateServiceByTrayLine(Rec, TRUE);
                                 VALIDATE(Closed,TRUE);
                                 MODIFY(TRUE);
                                 SkipCloseAsk := TRUE;
                                 RESET;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 1100281050;2 ;Action    ;
                      Name=CreateDARVAService;
                      CaptionML=[ENU=Create Service;
                                 FRA=Cr‚er service];
                      Promoted=Yes;
                      Visible=Act_CreateServHeaderVisible;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lServHeader@1100281001 : Record 5900;
                               BEGIN
                                 IF NOT CONFIRM(Text007) THEN
                                   EXIT;

                                 IF NOT TrayLineMgt.CreateDARVAServByTrayLine(Rec, lServHeader, TRUE) THEN
                                   EXIT;
                                 VALIDATE(Closed,TRUE);
                                 MODIFY(TRUE);
                                 SkipCloseAsk := TRUE;
                                 RESET;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 1100281043;2 ;Action    ;
                      Name=CreateDARVAServiceHeader;
                      CaptionML=[ENU=Create Service Header;
                                 FRA=Cr‚er ligne produit];
                      Promoted=Yes;
                      Visible=Act_CreateServHeaderVisible;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lServHeader@1100281001 : Record 5900;
                               BEGIN
                                 IF NOT CONFIRM(Text004) THEN
                                   EXIT;

                                 IF NOT TrayLineMgt.CreateDARVAServHdrByTrayLine(Rec, lServHeader, TRUE) THEN
                                   EXIT;
                                 VALIDATE(Closed,TRUE);
                                 MODIFY(TRUE);
                                 SkipCloseAsk := TRUE;
                                 RESET;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 1000000001;2 ;Action    ;
                      Name=CreateServiceHeader;
                      CaptionML=[ENU=Create Service Header;
                                 FRA=Cr‚er ligne produit];
                      Promoted=Yes;
                      Visible=Act_CreateServiceHeader;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lServHeader@1100281001 : Record 5900;
                               BEGIN
                                 IF NOT CONFIRM(Text004) THEN
                                   EXIT;

                                 TrayLineMgt.CreateAffectServHeadByTrayLine(Rec, TRUE);
                                 VALIDATE(Closed,TRUE);
                                 MODIFY(TRUE);
                                 SkipCloseAsk := TRUE;
                                 RESET;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 1000000002;2 ;Action    ;
                      Name=CreateClaimServiceHeader;
                      CaptionML=[ENU=Create Claim Service Header;
                                 FRA=Cr‚er LP r‚clamation];
                      Promoted=Yes;
                      Visible=Act_CreateClaimServVisible;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lServHeader@1100281001 : Record 5900;
                               BEGIN
                                 TrayLineMgt.CreateClaimServHdByTrayLine(Rec);
                                 VALIDATE(Closed,TRUE);
                                 MODIFY(TRUE);
                                 SkipCloseAsk := TRUE;
                                 RESET;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 1100281044;2 ;Action    ;
                      Name=AffectDT;
                      CaptionML=[ENU=Affect DT;
                                 FRA=Affecter DT];
                      Promoted=Yes;
                      Visible=Act_CreateServHeaderVisible;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lServHeader@1100281001 : Record 5900;
                               BEGIN
                                 IF NOT TrayLineMgt.AffectDTDARVA(Rec) THEN
                                   EXIT;

                                 VALIDATE(Closed,TRUE);
                                 MODIFY(TRUE);
                                 SkipCloseAsk := TRUE;
                                 RESET;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 1100281028;2 ;Action    ;
                      Name=CreateInteracteraction;
                      CaptionML=[ENU=Create &Interact;
                                 FRA=Cr‚er &interaction];
                      Promoted=Yes;
                      Visible=Act_CreateInteractVisible;
                      PromotedIsBig=Yes;
                      Image=CreateInteraction;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TrayLineAct.CreateInteraction(Rec);
                               END;
                                }
      { 1100281037;2 ;Action    ;
                      Name=FindProvider;
                      CaptionML=[ENU=Find Provider;
                                 FRA=Rechercher prestataire];
                      Promoted=Yes;
                      Visible=Act_FindProviderVisible;
                      PromotedIsBig=Yes;
                      Image=Find;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF NOT TrayLineAct.FindProvider(Rec) THEN
                                   EXIT;

                                 SkipCloseAsk := TRUE;
                                 RESET;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 1100281038;2 ;Action    ;
                      Name=CreateIntervention;
                      CaptionML=[ENU=Create Intervention;
                                 FRA=Cr‚er intervention];
                      Promoted=Yes;
                      Visible=Act_CreateIntervVisible;
                      PromotedIsBig=Yes;
                      Image=AddAction;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF NOT CONFIRM(Text010) THEN
                                   EXIT;
                                 TrayLineAct.CreateIntervention(Rec, TRUE);

                                 VALIDATE(Closed,TRUE);
                                 MODIFY(TRUE);
                                 SkipCloseAsk := TRUE;
                                 RESET;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 1100281041;2 ;Action    ;
                      Name=SearchContact;
                      CaptionML=[ENU=Search Contact;
                                 FRA=Recherche Contact];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Find;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SearchContact;
                               END;
                                }
      { 1100281045;2 ;Action    ;
                      Name=SearchService;
                      CaptionML=[ENU=Service Search;
                                 FRA=Recherche service];
                      Promoted=Yes;
                      Visible=Act_SearchServiceVisible;
                      PromotedIsBig=Yes;
                      Image=Find;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SearchServiceDoc;
                               END;
                                }
      { 1100281046;2 ;Action    ;
                      Name=AffectServiceDoc;
                      CaptionML=[ENU=Affect Service Document;
                                 FRA=Affecter doc. service];
                      Promoted=Yes;
                      Visible=Act_AffectDocVisible;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 // IMH10.PC
                                 IF NOT CONFIRM(Text006b) THEN BEGIN
                                   EXIT;
                                 END;
                                 TrayLineMgt.AffectDocServiceByTrayLine(Rec);

                                 VALIDATE(Closed,TRUE);
                                 MODIFY(TRUE);
                                 SkipCloseAsk := TRUE;
                                 RESET;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 1100281049;2 ;Action    ;
                      Name=AffectServHeaderDoc;
                      CaptionML=[ENU=Affect Service Header Document;
                                 FRA=Affecter doc. ligne produit];
                      Promoted=Yes;
                      Visible=Act_AffectDocVisible;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF NOT CONFIRM(Text006) THEN
                                   EXIT;
                                 TrayLineMgt.AffectDocServHeaderByTrayLine(Rec);

                                 VALIDATE(Closed,TRUE);
                                 MODIFY(TRUE);
                                 SkipCloseAsk := TRUE;
                                 RESET;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 1000000003;2 ;Action    ;
                      Name=CreateProvider;
                      CaptionML=[ENU=Create Provider;
                                 FRA=Cr‚er prestataire];
                      Promoted=Yes;
                      Visible=Act_CreateProviderVisible;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF NOT CONFIRM(Text008) THEN
                                   EXIT;
                                 TrayLineMgt.CreateProviderByTrayLine(Rec, TRUE);

                                 VALIDATE(Closed,TRUE);
                                 MODIFY(TRUE);
                                 SkipCloseAsk := TRUE;
                                 RESET;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 1000000004;2 ;Action    ;
                      Name=AffectProviderDoc;
                      CaptionML=[ENU=Affect Provider Document;
                                 FRA=Affecter document prestataire];
                      Promoted=Yes;
                      Visible=Act_CreateProviderVisible;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF NOT CONFIRM(Text009) THEN
                                   EXIT;
                                 TrayLineMgt.AffectProviderDocByTrayLine(Rec, FALSE);

                                 {
                                 VALIDATE(Closed,TRUE);
                                 MODIFY(TRUE);
                                 SkipCloseAsk := TRUE;
                                 RESET;
                                 CurrPage.CLOSE;
                                 }
                               END;
                                }
      { 1100281032;  ;ActionContainer;
                      Name=<Action1100281014>;
                      ActionContainerType=RelatedInformation }
      { 1100281029;1 ;Action    ;
                      Name=CardAccess;
                      CaptionML=[ENU=Service;
                                 FRA=AccŠs fiche];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Edit;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 TrayLineAct.ShowCard(Rec);
                               END;
                                }
      { 1100281039;1 ;Action    ;
                      Name=ShowAttachments;
                      CaptionML=[ENU=Show Attachments;
                                 FRA=Afficher document joint];
                      Promoted=Yes;
                      Visible=Act_ShowAttachVisible;
                      Image=ItemReservation;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowAttachment;
                               END;
                                }
      { 1100281042;1 ;Action    ;
                      Name=ShowDT;
                      CaptionML=[ENU=Show DT;
                                 FRA=Afficher DT];
                      Promoted=Yes;
                      Visible=Act_CreateServHeaderVisible;
                      Image=ItemReservation;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lDARVARcvdDTPostAct@1100281000 : Codeunit 50162;
                               BEGIN
                                 lDARVARcvdDTPostAct.ShowAttachmentFileByTrayLine(Rec);
                               END;
                                }
      { 1000000000;1 ;Action    ;
                      Name=ShowDTAttachments;
                      CaptionML=[ENU=Show DT Attachments;
                                 FRA=Afficher document joint DT];
                      Promoted=Yes;
                      Visible=Act_CreateServHeaderVisible;
                      Image=ItemReservation;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lDARVARcvdDTPostAct@1100281000 : Codeunit 50162;
                               BEGIN
                                 lDARVARcvdDTPostAct.ShowElseAttachFileByTrayLine(Rec);
                               END;
                                }
      { 1100281040;1 ;Action    ;
                      Name=Delete;
                      CaptionML=[ENU=Delete;
                                 FRA=Supprimer];
                      Promoted=Yes;
                      Visible=Act_ShowAttachVisible;
                      Image=Delete;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 {
                                 IF CONFIRM(Text003, FALSE) THEN BEGIN
                                   TrayLineMgt.DeleteForDocQueueLine(Rec);
                                   SkipCloseAsk := TRUE;
                                   //RESET;
                                   CurrPage.CLOSE;
                                 END;
                                 }
                               END;
                                }
      { 1100281016;1 ;Action    ;
                      Name=<Action1100281016>;
                      CaptionML=[ENU=Contact;
                                 FRA=Contact];
                      Promoted=Yes;
                      Image=TeamSales;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lContact@1100281000 : Record 5050;
                                 lProvider@1100281002 : Record 50000;
                               BEGIN
                                 IF lContact.GET("Contact No.") THEN BEGIN
                                   CASE lContact."Service Contact" OF
                                     lContact."Service Contact"::Provider : BEGIN
                                       lProvider.GET(lContact."No.");
                                       lProvider.FILTERGROUP(2);
                                       lProvider.SETRECFILTER;
                                       lProvider.FILTERGROUP(0);
                                       FORM.RUN(FORM::"Provider Card", lProvider);
                                     END;
                                     ELSE BEGIN
                                       lContact.FILTERGROUP(2);
                                       lContact.SETRECFILTER;
                                       lContact.FILTERGROUP(0);
                                       PAGE.RUNMODAL(PAGE::"Contact Card",lContact);
                                     END;
                                   END;
                                 END;
                               END;
                                }
      { 1000000006;1 ;Action    ;
                      Name=ShowSD45;
                      CaptionML=[ENU=Show SD45;
                                 FRA=Afficher SD45];
                      Promoted=Yes;
                      Visible=Act_ShowSD45Visible;
                      Image=ItemReservation;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lDARVARcvdDTPostAct@1100281000 : Codeunit 50162;
                               BEGIN
                                 //IMH14.ACO
                                 lDARVARcvdDTPostAct.ShowAttachmentFileByTrayLine(Rec);
                               END;
                                }
      { 1100281051;1 ;Action    ;
                      Name=ShowAttach;
                      CaptionML=[ENU=Show Attachment;
                                 FRA=Afficher PJ];
                      Promoted=Yes;
                      Visible=Act_ShowLineAttachVisible;
                      Image=ItemReservation;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 TrayLineMgt.ShowAttachment(Rec);  //IMH15
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100281015;1;Group  ;
                Name=General;
                CaptionML=[ENU=General;
                           FRA=G‚n‚ral];
                GroupType=Group }

    { 1100281000;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="Team Code";
                Editable=FALSE }

    { 1100281002;2;Field  ;
                SourceExpr="Task Code";
                Editable=TaskEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE); //IMH03.ST
                           END;
                            }

    { 1100281003;2;Field  ;
                SourceExpr=Description;
                Editable=DescriptionEditable;
                Style=Unfavorable;
                StyleExpr=StyleUnfavorable }

    { 1100281007;2;Field  ;
                SourceExpr="Assigned Salesperson Code";
                Editable=Act_TransferEnable }

    { 1100281008;2;Field  ;
                SourceExpr="Assigned Datetime" }

    { 1100281025;2;Field  ;
                SourceExpr="Short Comment";
                MultiLine=Yes }

    { 1100281009;2;Field  ;
                SourceExpr="Starting Date" }

    { 1100281010;2;Field  ;
                SourceExpr="Expected End Date";
                Style=Unfavorable;
                StyleExpr=StyleUnfavorable }

    { 1100281011;2;Field  ;
                SourceExpr="Expected End Time";
                Style=Unfavorable;
                StyleExpr=StyleUnfavorable }

    { 1100281012;2;Field  ;
                SourceExpr="End Date" }

    { 1100281017;2;Field  ;
                SourceExpr=Urgent }

    { 1100281014;2;Field  ;
                SourceExpr="Contact No.";
                OnValidate=BEGIN
                             CALCFIELDS("Contact Name");
                             IF NOT Contact.GET("Contact No.") THEN
                               CLEAR(Contact);
                             ShowActions;
                           END;

                OnLookup=BEGIN
                           SearchContact;
                           CALCFIELDS("Contact Name");
                           IF NOT Contact.GET("Contact No.") THEN
                             CLEAR(Contact);
                           ShowActions;
                         END;
                          }

    { 1100281026;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="Contact Name" }

    { 1100281001;2;Field  ;
                ExtendedDatatype=Phone No.;
                CaptionML=[ENU=Contact Phone No.;
                           FRA=Nø t‚l‚phone contact];
                SourceExpr=Contact."Phone No.";
                Editable=FALSE }

    { 1100281005;2;Field  ;
                SourceExpr=Closed }

    { 1100281027;1;Group  ;
                Name=Service;
                CaptionML=[ENU=Service;
                           FRA=Service];
                Visible=ServiceVisible;
                Editable=FALSE;
                GroupType=Group }

    { 1100281018;2;Field  ;
                SourceExpr="Corporate No." }

    { 1100281048;2;Field  ;
                SourceExpr="Service Reference No." }

    { 1100281013;2;Field  ;
                SourceExpr="Campaign No." }

    { 1100281019;2;Field  ;
                SourceExpr="Service No." }

    { 1100281020;2;Field  ;
                SourceExpr="Service Header No." }

    { 1100281022;2;Field  ;
                SourceExpr="Intervention No.";
                OnValidate=BEGIN
                             //CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1100281024;2;Field  ;
                SourceExpr="Intervention Provider No.";
                Editable=FALSE }

    { 1100281036;2;Field  ;
                SourceExpr="Provider Name";
                Editable=FALSE }

    { 1100281031;2;Field  ;
                Name=ServiceTerritoryName;
                CaptionML=[ENU=Service Territory Name;
                           FRA=R‚gion IMH service];
                SourceExpr=GetServiceTerritoryName }

    { 1100281047;2;Field  ;
                SourceExpr="Service Cause" }

    { 1100281006;0;Container;
                ContainerType=FactBoxArea }

    { 1100281023;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Contact@1100281003 : Record 5050;
      Provider@1100281031 : Record 50000;
      TrayLineMgt@1100281000 : Codeunit 50050;
      TrayLineAct@1100281012 : Codeunit 50056;
      ServiceLockingMgt@1100281001 : Codeunit 50071;
      TrayTask@1100281011 : Record 50080;
      ServiceVisible@1100281002 : Boolean INDATASET;
      Text001@1100281004 : TextConst 'FRA=Voulez-vous terminer la tƒche ?';
      StyleUnfavorable@1100281005 : Boolean INDATASET;
      Act_CreateInteractVisible@1100281007 : Boolean INDATASET;
      Act_CreateIntervVisible@1100281008 : Boolean INDATASET;
      Act_FindProviderVisible@1100281009 : Boolean INDATASET;
      Act_CreateServiceVisible@1100281016 : Boolean INDATASET;
      Act_CreateServHeaderVisible@1100281021 : Boolean INDATASET;
      Act_SearchContactVisible@1100281019 : Boolean INDATASET;
      Act_ShowAttachVisible@1100281020 : Boolean INDATASET;
      Act_SearchServiceVisible@1100281024 : Boolean INDATASET;
      Act_AffectDocVisible@1100281025 : Boolean INDATASET;
      Act_CreateClaimServVisible@1000000000 : Boolean INDATASET;
      Act_CreateProviderVisible@1000000002 : Boolean INDATASET;
      SkipCloseAsk@1100281006 : Boolean INDATASET;
      ProviderVisible@1100281010 : Boolean INDATASET;
      OpenDateTime@1100281013 : DateTime;
      DescriptionEditable@1100281014 : Boolean INDATASET;
      TaskEditable@1100281015 : Boolean INDATASET;
      Text002@1100281017 : TextConst 'ENU=Do you want to create service?;FRA=Voulez-vous cr‚er le service ?';
      Text003@1100281018 : TextConst 'ENU=Attention this action is irr‚m‚diable, the attachment will be deleted. Do you want to continuer?;FRA=Attention cette action est irr‚m‚diable, le document joint sera supprim‚. Voulez-vous continuer ?';
      Text004@1100281022 : TextConst 'ENU=Do you want to create service header?;FRA=Voulez-vous cr‚er la ligne produit ?';
      Text005@1100281023 : TextConst 'ENU=Do you want to affect the DT?;FRA=Voulez-vous affecter la  DT?';
      Text006@1100281026 : TextConst 'ENU=Do you want to affect the document to service header?;FRA=Voulez-vous affecter le document … la ligne produit ?';
      Act_TransferEnable@1100281028 : Boolean INDATASET;
      Text006b@1100281030 : TextConst 'ENU=Do you want to affect the document to service ?;FRA=Voulez-vous affecter le document au service ?';
      Text007@1100281027 : TextConst 'ENU=Do you want to create service and service header?;FRA=Voulez-vous cr‚er le service et la ligne produit?';
      Act_CreateServiceHeader@1000000001 : Boolean INDATASET;
      Text008@1000000003 : TextConst 'ENU=Do you want to create provider?;FRA=Voulez-vous cr‚er le prestataire ?';
      Text009@1000000004 : TextConst 'ENU=Do you want to affect the document to provider?;FRA=Voulez-vous affecter le document au prestataire?';
      Text010@1100281029 : TextConst 'ENU=Do you want to create intervention?;FRA=Voulez-vous cr‚er l''intervention?';
      Act_ShowSD45Visible@1000000005 : Boolean INDATASET;
      Act_ShowLineAttachVisible@1100281032 : Boolean INDATASET;

    PROCEDURE ShowActions@1100281000();
    VAR
      lDocumentQueue@1100281000 : Record 50054;
    BEGIN
      //IMH03.ST
      IF "Task Code" = '' THEN
        CLEAR(TrayTask)
      ELSE
        IF (TrayTask."Source Table" <> "Linked To Table") OR (TrayTask."Task Code" <> "Task Code") THEN
          IF NOT TrayTask.GET("Linked To Table", "Task Code") THEN
            CLEAR(TrayTask);

      Act_CreateInteractVisible :=
        (TrayTask."Assist Action" = TrayTask."Assist Action"::CreateInteraction) OR
        (TrayTask."Task Code" = '');
      Act_CreateIntervVisible := TrayTask."Assist Action" IN [TrayTask."Assist Action"::CreateIntervention];
      Act_FindProviderVisible := TrayTask."Assist Action" = TrayTask."Assist Action"::FindProvider;
      Act_CreateServiceVisible := (TrayTask."Assist Action" IN [TrayTask."Assist Action"::CreateService,
                                                                TrayTask."Assist Action"::AffectCreateDoc])
                                                            //TrayTask."Assist Action"::OpenCard])//IMH06
                                  AND ("Contact No." <> '');;
      Act_SearchContactVisible := TrayTask."Assist Action" IN [TrayTask."Assist Action"::CreateService,
                                                                TrayTask."Assist Action"::CreateClaimServ,
                                                                TrayTask."Assist Action"::CreateProvider];
      Act_ShowAttachVisible := TrayTask."Assist Action" IN [TrayTask."Assist Action"::CreateService,
                                                            //TrayTask."Assist Action"::OpenCard,//IMH06   //D‚sactiv‚ IMH08
                                                            TrayTask."Assist Action"::ToQualify,
                                                            TrayTask."Assist Action"::AffectDoc,
                                                            TrayTask."Assist Action"::AffectCreateDoc,
                                                            TrayTask."Assist Action"::CreateClaimServ,
                                                            TrayTask."Assist Action"::CreateProvider];
      Act_CreateServHeaderVisible := TrayTask."Assist Action" IN [TrayTask."Assist Action"::DTToTreat];

      //<<IMH06.ISAT.EBA
      //Act_SearchServiceVisible := (TrayTask."Assist Action" IN [TrayTask."Assist Action"::AffectDoc]);
      Act_SearchServiceVisible := (TrayTask."Assist Action" IN [TrayTask."Assist Action"::AffectDoc,
                                                                TrayTask."Assist Action"::DTToTreat,
                                                                TrayTask."Assist Action"::AffectCreateDoc,
                                                                TrayTask."Assist Action"::CreateService,
                                                                TrayTask."Assist Action"::CreateClaimServ]);
                                  //(("Linked To Table" IN ["Linked To Table"::Service,"Linked To Table"::ServiceHeader,
                                  //                        "Linked To Table"::Service,"Linked To Table"::DocumentQueue]));

      //>>IMH06.ISAT.EBA
      Act_CreateClaimServVisible := (TrayTask."Assist Action"  = TrayTask."Assist Action"::CreateClaimServ);
      Act_AffectDocVisible := (TrayTask."Assist Action" IN [TrayTask."Assist Action"::AffectDoc,
                                                            TrayTask."Assist Action"::AffectCreateDoc,
                                                            TrayTask."Assist Action"::CreateService,
                                                            TrayTask."Assist Action"::CreateClaimServ])
                              AND ("Service No." <> '')
                              AND (lDocumentQueue.GET("Document Flow Code", "Document Queue Type", "Doc. Queue Entry No."));


      Act_TransferEnable := TrayLineAct.TransferFunctionEnabled;  //IMH07
      Act_CreateServiceHeader := Act_AffectDocVisible
                              AND (TrayTask."Assist Action" <> TrayTask."Assist Action"::CreateClaimServ);
      Act_CreateProviderVisible := (TrayTask."Assist Action"  = TrayTask."Assist Action"::CreateProvider);

      //<<IMH14.ACO
      Act_ShowSD45Visible := (TrayTask."Assist Action"  = TrayTask."Assist Action"::SD45ToTreat);
      //>>IMH14.ACO

      Act_ShowLineAttachVisible := TrayTask."Assist Action"  = TrayTask."Assist Action"::ShowAttach;     //IMH15
    END;

    PROCEDURE ShowFields@1100281002();
    BEGIN
      //IMH03.ST
      ServiceVisible := ("Linked To Table" IN ["Linked To Table"::Service,
                        "Linked To Table"::ServiceHeader,
                        "Linked To Table"::Intervention]) OR
                        ("Service No." <> '') OR Act_CreateServiceVisible OR Act_SearchContactVisible;
      ProviderVisible := "Linked To Table" = "Linked To Table"::Intervention;
      DescriptionEditable := ("Task Code" = '');
      TaskEditable := ("Task Code" = '');
    END;

    PROCEDURE SearchContact@1100281001();
    VAR
      lContactNo@1100281000 : Code[20];
      lContactSearchMgt@1100281001 : Codeunit 50097;
      lContactFilter@1100281002 : TEMPORARY Record 5050;
      lTeam@1100281003 : Record 5083;
    BEGIN
      IF Act_CreateServiceVisible OR Act_SearchContactVisible THEN
        lContactFilter.SETRANGE("Service Contact", lContactFilter."Service Contact"::Beneficiary);
      lTeam.GET("Team Code");
      IF lTeam."Show To DGS" THEN
        lContactFilter.SETRANGE("Service Contact", lContactFilter."Service Contact"::Beneficiary);
      IF lTeam."Show To DPR" THEN
        lContactFilter.SETRANGE("Service Contact", lContactFilter."Service Contact"::Provider);
      lContactFilter.SETRANGE("Corporate No.", "Corporate No.");
      IF lContactSearchMgt.SearchContactWithFilters(lContactFilter, lContactNo) THEN
      //if lContactSearchMgt.SearchContact(0, lContactNo) then
        VALIDATE("Contact No.", lContactNo);
    END;

    BEGIN
    {
      /** @r IMH15 @d 10/06/14 @a ISAT.ZW @v IMH6.01.P010 @s Projet PMU @c Ajout bouton "afficher PJ" */
      /** @r IMH14 @d 17/10/13 @a ISAT.ACO @v IMH6.01.348 @s DARVA MATMUT Lot 1 @h 4768
          @c Ajout bouton "Afficher SD45" */
      /** @r IMH13 @d 24/09/12 @a ISAT.ZW @v IMH6.01.226 @s version 1.4 @h 3545
          @c Coreection */
      /** @r IMH12 @d 09/08/12 @a ISAT.ZW @v IMH6.01.226 @s version 1.4 @h 3495
          @c Supprimer champ "Extranet" */
      /** @r IMH11 @d 18/07/12 @a ISAT.ZW @v IMH6.01.226 @s version 1.4 @h 3495
          @c Afficher champ "Extranet" */
      /** @r IMH10 @d 05/07/12 @a ISAT.ZW @v IMH6.01.226 @s version 1.4 @h mantis 3456
          @c Ajout action AffectServiceDoc
          @c Changement nom action AffectDoc => AffectServHeaderDoc
          @c Changement caption action AffectServHeaderDoc : "Affecter document service" => "Affecter doc. ligne produit" */
      /** @r IMH09 @d 12/01/11 @a ISAT.ZW @v IMH6.01.134 @s permission @h mantis 2507 @c Affichage */
      /** @r IMH08 @d 15/12/11 @a ISAT.ZW @v IMH6.01.134 @s permission @h mantis 2510
          @c masquer la fonction Afficher doc joint pour les tache ouvrir fiche */
      /** @r IMH07 @d 13/12/11 @a ISAT.ZW @v IMH6.01.134 @s permission @h mantis 2274
          @c Permission transfert activit‚ corbeille */
      /** @r IMH06 @d 30/11/11 @a ISAT.EBA @v IMH6.01.134 @s DARVA Management
          @c Ajout de champ 50045 "Service Reference No." */
      /** @r IMH05 @d 16/06/11 @a ISAT.ZW @v IMH6.01.013 @s Gestion des corbeilles @c Ajout champ r‚gion IMH service */
      /** @r IMH04 @d 08/03/11 @a ISAT.LLT @v IMH6.01.120 @s Gestion des corbeilles
          @c Ajout fonction Transf‚rer au responsable */
      /** @r IMH03 @d 08/02/11 @a ISAT.ST @v IMH6.01.120 @s Gestion des corbeilles
          @c Actions conditionn‚es, pilotage temps d'ouverture */
      /** @r IMH02 @d 14/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Gestion style sur date ‚ch‚ance */
      /** @r IMH01 @d 10/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Cr‚ation objet */
    }
    END.
  }
}