OBJECT Page 50167 Service Interv. Minutes Subf.
{
  OBJECT-PROPERTIES
  {
    Date=18/03/13;
    Time=10:38:31;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Interv. Minutes Subform;
               FRA=Sous-formulaire PV interventions];
    SourceTable=Table50084;
    DelayedInsert=Yes;
    PopulateAllFields=Yes;
    PageType=ListPart;
    CardFormID=Page50166;
    OnOpenPage=BEGIN
                 ServiceSetup.GET;//IMH03
               END;

    OnAfterGetRecord=VAR
                       lServiceIntervLine@1100281002 : Record 50075;
                       lWinShell@1100281001 : Codeunit 50094;
                       lServIntervLineNo@1100281000 : Integer;
                     BEGIN
                       SETFILTER("Reserves Code Filter",ServiceSetup."Reserve Comment Code");
                       SETFILTER("Comment Code Filter",ServiceSetup."Minute Comment Code");
                       CALCFIELDS(Comment,"Reserves Comment");
                       GetDocValues(DocDate,DocNo);
                     END;

    OnNewRecord=BEGIN
                  xRec := Rec;
                  InitNewLine;  //IMH06.ST
                END;

    OnInsertRecord=BEGIN
                     xRec := Rec;
                     EXIT(TRUE);
                   END;

    OnModifyRecord=BEGIN
                     //CurrPage.UPDATE(FALSE); //IMH09
                   END;

    OnDeleteRecord=BEGIN
                     xRec := Rec;
                     EXIT(TRUE);
                   END;

    ActionList=ACTIONS
    {
      { 1000000008;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100281024;1 ;Action    ;
                      CaptionML=[ENU=Delete;
                                 FRA=Supprimer];
                      OnAction=VAR
                                 lServMin@1100281001 : Record 50084;
                                 lServiceIntervLine@1100281002 : Record 50075;
                               BEGIN
                                 //<<IMH08
                                 IF lServiceIntervLine.GET("Service Header No.", "Service Intervention Line No.") THEN
                                   IF NOT ServiceLockingMgt.InterventionCard_GetLock(lServiceIntervLine,FALSE) THEN BEGIN
                                     ERROR(Text003);
                                   END;
                                 //>>IMH08

                                 CurrPage.SETSELECTIONFILTER(lServMin);
                                 IF lServMin.ISEMPTY THEN
                                   EXIT;
                                 IF NOT CONFIRM(Text002,TRUE) THEN
                                   EXIT;
                                 lServMin.DELETEALL(TRUE);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100281000;0;Container;
                ContainerType=ContentArea }

    { 1100281001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100281002;2;Field  ;
                SourceExpr="Document No.";
                Editable=FALSE }

    { 1000000007;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE }

    { 1100281003;2;Field  ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             //<<IMH07.PC
                             UpdateIntervStatus(FALSE);
                             //>>IMH07.PC
                           END;
                            }

    { 1100281004;2;Field  ;
                SourceExpr="Receipt Date";
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             //<<IMH07.PC
                             UpdateIntervStatus(FALSE);
                             //>>IMH07.PC
                           END;
                            }

    { 1100281005;2;Field  ;
                SourceExpr=Reference;
                Visible=FALSE }

    { 1100281006;2;Field  ;
                SourceExpr="Current Minutes";
                Visible=FALSE;
                Editable=FALSE }

    { 1100281019;2;Field  ;
                SourceExpr="Recomm. Unit Cost Excl. VAT";
                Editable=FALSE }

    { 1100281012;2;Field  ;
                SourceExpr=Amount }

    { 1100281016;2;Field  ;
                SourceExpr="VAT Prod. Posting Group" }

    { 1100281013;2;Field  ;
                SourceExpr="Amount Incl. VAT" }

    { 1000000000;2;Field  ;
                SourceExpr="Deductible Amount (LCY)" }

    { 1000000001;2;Field  ;
                SourceExpr="Unsecured Depr. Amount (LCY)" }

    { 1000000002;2;Field  ;
                SourceExpr="Net Amount (LCY)" }

    { 1000000003;2;Field  ;
                SourceExpr="Net Amount Incl. VAT (LCY)" }

    { 1100281007;2;Field  ;
                SourceExpr=Comment;
                Visible=FALSE;
                DrillDownFormID=Adv. Comment Lines;
                OnLookup=BEGIN
                           OpenComments(ServiceSetup."Minute Comment Code");//IMH03
                         END;

                OnAssistEdit=BEGIN
                               OpenComments(ServiceSetup."Minute Comment Code");//IMH03
                             END;
                              }

    { 1100281009;2;Field  ;
                SourceExpr=Reserves }

    { 1100281010;2;Field  ;
                Lookup=No;
                DrillDown=Yes;
                SourceExpr="Reserves Comment";
                OnDrillDown=BEGIN
                              LookupReserves;
                            END;
                             }

    { 1100281011;2;Field  ;
                SourceExpr="Document Attachment Entry No.";
                Visible=FALSE }

    { 1100281015;2;Field  ;
                SourceExpr="Work Restart Date" }

    { 1100281014;2;Field  ;
                SourceExpr="Closing Reserve Date";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);  //IMH09
                           END;
                            }

    { 1100281020;2;Field  ;
                SourceExpr="Post Minute";
                OnValidate=BEGIN
                             //CurrPage.SAVERECORD; //IMH05.ST
                             CurrPage.UPDATE(TRUE);  //IMH09
                           END;
                            }

    { 1100281008;2;Field  ;
                SourceExpr=Status }

    { 1100281017;2;Field  ;
                SourceExpr="Tarif Zone Code";
                Visible=FALSE }

    { 1100281018;2;Field  ;
                SourceExpr="Package Price";
                Visible=FALSE }

    { 1100281021;2;Field  ;
                SourceExpr="Last Modification User ID" }

    { 1000000004;2;Field  ;
                SourceExpr="Last Purch. Invoice Type" }

    { 1000000005;2;Field  ;
                SourceExpr="Last Purch. Invoice No." }

    { 1100281022;2;Field  ;
                CaptionML=[ENU=Invoice Posting Date;
                           FRA=Date comptabilisation facture];
                SourceExpr=DocDate;
                Editable=FALSE }

    { 1100281023;2;Field  ;
                CaptionML=[ENU=Vendor Invoice No.;
                           FRA=Nø facture fournisseur];
                SourceExpr=DocNo;
                Editable=FALSE }

    { 1000000006;2;Field  ;
                SourceExpr=Unbillable }

  }
  CODE
  {
    VAR
      ServiceLockingMgt@1000000000 : Codeunit 50071;
      ServiceSetup@1100281000 : Record 5911;
      Text001@1100281003 : TextConst 'FRA=Vous ne pouvez pas supprimer ou modifier une ligne valid‚e !';
      DocDate@1100281004 : Date;
      DocNo@1100281005 : Code[30];
      Text002@1100281001 : TextConst 'ENU=Do you want to delete selected lines ?;FRA=Souhaitez-vous supprimer les lignes s‚lectionn‚es ?';
      Text003@1100281006 : TextConst 'ENU=You can''t delete the line, because the page is locked.;FRA=Vous ne pouvez pas supprimer la ligne, car la page est verrouill‚e par un autre utilisateur.';

    BEGIN
    {
      /** @r IHM09 @d 18/03/12 @a ISAT.ZW @v IMH6.01.340 @s NEP IMH 4 @h 4407 @c Ajout raffraichissment page … la modif */
      /** @r IMH08 @d 20/08/12 @a ISAT.ZW @v IMH6.01.224 @s NEP000004 @h mantis 3600 @c Gestion du verrou */
      /** @r IMH07 @d 15/06/12 @a ISAT.PC @v IMH6.01.224 @s NEP000004 @h 3563
          @c ProblŠme pas de passage par le trigger OnInsert / OnModify de la page sur la premiŠre ligne */
      /** @r IMH06 @d 14/03/12 @a ISAT.ST @v IMH6.01.146 @s Gestion facturation
          @c Ajout de champs + initnewline */
      /** @r IMH05 @d 09/08/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c Ajout saverecord sur validation
      /** @r IMH04 @d 31/01/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Suppression col. date reprise travaux ID 310 */
      /** @r IMH03 @d 31/01/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Correction accŠs commentaires */
      /** @r IMH02 @d 20/01/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c Ajout Closing reserve Date et Work Restart Date */
      /** @r IMH01 @d 21/12/10 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c Cr‚ation objet */
    }
    END.
  }
}