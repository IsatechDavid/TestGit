OBJECT Page 50168 Document Queue Card
{
  OBJECT-PROPERTIES
  {
    Date=12/06/14;
    Time=14:48:23;
    Modified=Yes;
    Version List=IMH6.01,IMH6.01.P010;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Document Queue Card;
               FRA=Fiche file de document];
    InsertAllowed=No;
    SourceTable=Table50054;
    PopulateAllFields=Yes;
    PageType=Card;
    PromotedActionCategoriesML=[ENU=New,Record,Document,,Search,Posting;
                                FRA=Nouveau,Enregistrement,Document,,Recherche,Affectation];
    OnOpenPage=BEGIN
                 ShowFields;
               END;

    OnAfterGetRecord=BEGIN
                       //GetAttachment;
                       //CurrPage.Attachment.FORM.GetFirstDoc;
                       ShowFields;
                       //IF "Entry No." <> xRec."Entry No." THEN
                         UpdateAttachSubForm;
                       MemberNo := GetContactMembreNo("Contact No.");
                     END;

    OnQueryClosePage=BEGIN
                       IF NOT Checked THEN
                         IF NOT CONFIRM(Text004,FALSE) THEN
                           ERROR(Text005);
                     END;

    ActionList=ACTIONS
    {
      { 1100281036;  ;ActionContainer;
                      Name=<Action1900000004>;
                      ActionContainerType=ActionItems }
      { 1100281035;1 ;ActionGroup;
                      Name=<Action1100281028>;
                      CaptionML=[ENU=Function&s;
                                 FRA=Fonction&s] }
      { 1100281033;2 ;Action    ;
                      Name=<Action1100281057>;
                      CaptionML=[ENU=Contact Card;
                                 FRA=Fiche contact];
                      RunObject=Page 5050;
                      RunFormLink=No.=FIELD(Contact No.) }
      { 1100281047;2 ;Action    ;
                      Name=<Action1100281047>;
                      CaptionML=FRA=&D‚placer la piŠce jointe;
                      OnAction=VAR
                                 lMoveAttachement@1100281000 : Report 50044;
                               BEGIN
                                 CLEAR(lMoveAttachement);
                                 lMoveAttachement.InitValue(Rec);
                                 lMoveAttachement.RUNMODAL;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1100281030;1 ;ActionGroup;
                      Name=<Action1100281014>;
                      CaptionML=[ENU=Search;
                                 FRA=Recherche];
                      ActionContainerType=NewDocumentItems }
      { 1100281029;2 ;Action    ;
                      Name=<Action1100281027>;
                      CaptionML=[ENU=Contact Search;
                                 FRA=Contact];
                      Promoted=Yes;
                      Image=Find;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 SearchContact(TRUE);
                               END;
                                }
      { 1100281028;2 ;Action    ;
                      Name=<Action1100281008>;
                      CaptionML=[ENU=Service Search;
                                 FRA=Service];
                      Promoted=Yes;
                      Image=Find;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 SearchServiceDoc;
                               END;
                                }
      { 1100281027;1 ;ActionGroup;
                      Name=<Action1100281060>;
                      CaptionML=[ENU=Affectation;
                                 FRA=&Affectation] }
      { 1100281026;2 ;Action    ;
                      Name=<Action1100281068>;
                      ShortCutKey=F9;
                      CaptionML=[ENU=Affect;
                                 FRA=&Affecter];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 lDocQueue@1100281000 : Record 50054;
                               BEGIN
                                 IF NOT CONFIRM(Text001) THEN
                                   EXIT;
                                 CurrPage.SETSELECTIONFILTER(lDocQueue);
                                 CODEUNIT.RUN(CODEUNIT::"Doc. Queue-Post",lDocQueue);
                                 //<<IMH02.ST
                                 IF ISEMPTY THEN
                                   CurrPage.CLOSE
                                 ELSE
                                 //>>IMH02.ST
                                   CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100281025;2 ;Action    ;
                      Name=<Action1100281002>;
                      CaptionML=[ENU=Create Intervention Quote;
                                 FRA=Cr‚er devis intervention];
                      Promoted=Yes;
                      Visible=false;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 lInterventionMgt@1100281001 : Codeunit 50014;
                                 lServIntervQuote@1100281000 : Record 50076;
                               BEGIN
                                 IF NOT CONFIRM(Text002) THEN
                                   EXIT;

                                 lInterventionMgt.CreateIntervQuoteByDocQueue(lServIntervQuote, Rec, TRUE, TRUE);
                               END;
                                }
      { 1100281024;2 ;Action    ;
                      Name=<Action1100281016>;
                      CaptionML=[ENU=Assign Activities;
                                 FRA=Affecter activit‚s];
                      Visible=false;
                      Image=Post;
                      OnAction=VAR
                                 lTrayLineMgt@1100281000 : Codeunit 50050;
                               BEGIN
                                 lTrayLineMgt.CreateTLFromDocument(Rec, '', '', TRUE);
                               END;
                                }
      { 1100281042;1 ;ActionGroup;
                      Name=<Action1100281060>;
                      CaptionML=[ENU=Document attachment;
                                 FRA=Document joint] }
      { 1100281023;2 ;Action    ;
                      Name=Attachments;
                      CaptionML=[ENU=Show;
                                 FRA=Afficher];
                      Promoted=Yes;
                      Image=ItemReservation;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 ShowAttachment;
                               END;
                                }
      { 1100281044;2 ;Action    ;
                      Name=PrecedentAttach;
                      CaptionML=[ENU=Precedent;
                                 FRA=Pr‚c‚dent];
                      Promoted=Yes;
                      Visible=false;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 IF NOT Checked THEN
                                   IF NOT CONFIRM(Text004,FALSE) THEN
                                     ERROR(Text005);

                                 CreateWSHShell;
                                 WSHShell.SendKeys('^+P');
                                 CLEAR(WSHShell);
                               END;
                                }
      { 1100281043;2 ;Action    ;
                      Name=NextAttach;
                      CaptionML=[ENU=Next;
                                 FRA=Suivant];
                      Promoted=Yes;
                      Visible=false;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 IF NOT Checked THEN
                                   IF NOT CONFIRM(Text004,FALSE) THEN
                                     ERROR(Text005);

                                 CreateWSHShell;
                                 WSHShell.SendKeys('^+S');
                                 CLEAR(WSHShell);
                               END;
                                }
      { 1100281045;2 ;Action    ;
                      Name=ImportAttach;
                      CaptionML=[ENU=Import Attachment;
                                 FRA=Importer];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 DocumentFlowMgt.CreateQueueAttach('', Rec);
                               END;
                                }
      { 1100281022;1 ;Action    ;
                      Name=PrecedentRecord;
                      CaptionML=[ENU=Precedent;
                                 FRA=Pr‚cedent];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF NOT Checked THEN
                                   IF NOT CONFIRM(Text004,FALSE) THEN
                                     ERROR(Text005);

                                 PrecedentRecord;
                               END;
                                }
      { 1100281016;1 ;Action    ;
                      Name=NextRecord;
                      CaptionML=[ENU=Next;
                                 FRA=Suivant];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF NOT Checked THEN
                                   IF NOT CONFIRM(Text004,FALSE) THEN
                                     ERROR(Text005);

                                 NextRecord;
                               END;
                                }
      { 1100281032;1 ;Action    ;
                      Name=New Document;
                      ShortCutKey=Ctrl+N;
                      CaptionML=[ENU=New Document;
                                 FRA=Nouveau document];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      PromotedCategory=New;
                      OnAction=VAR
                                 lDocFlowHeader@1100281001 : Record 50107;
                                 lDocQueue@1100281000 : Record 50054;
                               BEGIN
                                 IF NOT Checked THEN
                                   IF NOT CONFIRM(Text004,FALSE) THEN
                                     ERROR(Text005);

                                 lDocFlowHeader.GET("Document Flow Header No.");
                                 lDocQueue.NewQueueDocument(lDocFlowHeader);
                                 Rec := lDocQueue;
                                 UpdateAttachSubForm;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100281050;1 ;Action    ;
                      Name=DeleteLine;
                      CaptionML=[ENU=Delete Line;
                                 FRA=Supprimer d‚finitivement document];
                      OnAction=BEGIN
                                 DeleteLine;
                               END;
                                }
      { 1100281049;1 ;Action    ;
                      Name=DeleteFromList;
                      CaptionML=[ENU=Delete From List;
                                 FRA=Suppimer document de la liste];
                      OnAction=BEGIN
                                 DeleteFromDocFlowHeader;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100281051;1;Field  ;
                SourceExpr="Entry No.";
                Enabled=FALSE;
                Style=Strong;
                StyleExpr=TRUE }

    { 1100281031;1;Field  ;
                SourceExpr="Linked Entry No.";
                Visible=FALSE }

    { 1100281037;1;Field  ;
                SourceExpr="Origin Entry No.";
                Visible=FALSE }

    { 1100281040;1;Field  ;
                SourceExpr="Line No.";
                Editable=FALSE }

    { 1100281041;1;Field  ;
                SourceExpr="Document Page Number" }

    { 1100281046;1;Field  ;
                SourceExpr=Checked }

    { 1100281039;1;Field   }

    { 1100281010;1;Field  ;
                SourceExpr="Document Type";
                OnValidate=BEGIN
                             ShowFields;
                           END;
                            }

    { 1100281000;1;Field  ;
                SourceExpr=Description }

    { 1100281053;1;Field  ;
                SourceExpr="IMA Reference No.";
                Enabled=InvoiceEditable;
                OnValidate=BEGIN
                             GetServiceByIMARefNo;  //IMH04
                           END;
                            }

    { 1100281014;1;Field  ;
                SourceExpr="Service No.";
                OnValidate=BEGIN
                             IF ("Service Document Type" = "Service Document Type") AND ("Service No." <> '') THEN
                               SearchServiceDoc;
                           END;

                OnLookup=BEGIN
                           //SearchService(0);
                           SearchServiceDoc;
                         END;
                          }

    { 1100281052;1;Field  ;
                SourceExpr="Post Code" }

    { 1100281001;1;Field  ;
                SourceExpr="Contact No.";
                OnValidate=BEGIN
                             MemberNo := GetContactMembreNo("Contact No.");
                           END;

                OnLookup=BEGIN
                           SearchContact(TRUE);
                           MemberNo := GetContactMembreNo("Contact No.");
                         END;
                          }

    { 1100281048;1;Field  ;
                Name=MemberNo;
                CaptionML=[ENU=Member No.;
                           FRA=Nø b‚n‚ficiaire];
                SourceExpr=MemberNo;
                OnValidate=BEGIN
                             GetContactByMemberNo;
                           END;
                            }

    { 1100281003;1;Field  ;
                SourceExpr=Name }

    { 1100281005;1;Field  ;
                SourceExpr="Document Date" }

    { 1100281015;1;Field   }

    { 1100281006;1;Field  ;
                SourceExpr="Vendor Invoice No.";
                Enabled=InvoiceEditable }

    { 1100281011;1;Field  ;
                SourceExpr="Vendor Quote No.";
                Enabled=QuoteEditable }

    { 1100281007;1;Field  ;
                SourceExpr="Corporate No.";
                Editable=NotInvoiceEditable }

    { 1100281008;1;Field  ;
                SourceExpr="Service Header No.";
                OnValidate=BEGIN
                             IF ("Service Document Type" = "Service Document Type") AND ("Service No." <> '') THEN
                               SearchServiceDoc;
                           END;

                OnLookup=BEGIN
                           //SearchService(1);
                           SearchServiceDoc;
                         END;
                          }

    { 1100281013;1;Field  ;
                SourceExpr="Service Intervention No.";
                OnLookup=BEGIN
                           //SearchService(2);
                           SearchServiceDoc;
                         END;
                          }

    { 1100281009;1;Field   }

    { 1100281019;1;Field  ;
                SourceExpr=Amount;
                Enabled=PurchasesAmountEditable }

    { 1100281017;1;Field  ;
                SourceExpr="Amount VAT";
                Enabled=PurchasesAmountEditable }

    { 1100281018;1;Field  ;
                SourceExpr="Amount Including VAT";
                Enabled=PurchasesAmountEditable }

    { 1100281020;1;Field  ;
                SourceExpr="Amount obsolescence";
                Enabled=InvoiceEditable }

    { 1100281021;1;Field  ;
                SourceExpr="Franchise Amount";
                Enabled=InvoiceEditable }

    { 1100281038;1;Field   }

    { 1100281034;1;Field  ;
                SourceExpr="Source No.";
                Editable=false }

    { 1100281012;1;Field  ;
                SourceExpr="Flow Nature";
                Visible=False }

    { 1100281002;;Container;
                Name=FactBoxArea;
                ContainerType=FactBoxArea }

    { 1100281004;1;Part   ;
                Name=Attachment;
                CaptionML=[ENU=Attachment;
                           FRA=Document joint];
                SubFormLink=Referent Table No.=CONST(50054),
                            Key Integer 1=FIELD(Queue Type Int),
                            Key Integer 2=FIELD(Entry No.),
                            Key Code 1=FIELD(Flow Code);
                PagePartID=Page50169;
                ShowFilter=No }

  }
  CODE
  {
    VAR
      DocumentFlowMgt@1100281009 : Codeunit 50006;
      HTML@1100281000 : BigText;
      Text001@1100281002 : TextConst 'ENU=Do you want to post the lines selected?;FRA=Voulez-vous valider les lignes s‚l‚ctionn‚es?';
      Text002@1100281001 : TextConst 'ENU=Do you want to post the line and create a intervention quote?;FRA=Voulez-vous valider la ligne et cr‚er devis intervention?';
      PurchasesAmountEditable@1100281003 : Boolean INDATASET;
      SalesAmountEditable@1100281004 : Boolean INDATASET;
      InvoiceEditable@1100281005 : Boolean INDATASET;
      QuoteEditable@1100281006 : Boolean INDATASET;
      WSHShell@1100281010 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      CurrDocNo@1100281011 : Integer;
      Text003@1100281007 : TextConst 'ENU=Do you want to create a new line?;FRA=Voulez-vous cr‚er une nouvelle ligne?';
      NotInvoiceEditable@1100281008 : Boolean INDATASET;
      Text004@1100281012 : TextConst 'FRA=Attention, la saisie de la ligne n''est pas valide, voulez-vous continuer votre action ?';
      Text005@1100281013 : TextConst 'FRA=Op‚ration annul‚e !';
      Text006@1100281014 : TextConst 'FRA=A quelle ligne souhaitez vous attribuer le document ?';
      MemberNo@1100281015 : Code[20];

    PROCEDURE GetAttachment@1100281000();
    VAR
      lDocAttachment@1100281001 : Record 50021;
      lAttachmentMgt@1100281000 : Codeunit 50002;
    BEGIN
      lDocAttachment.SETRANGE(lDocAttachment."Referent Table No.", DATABASE::"Document Queue");
      lDocAttachment.SETRANGE("Key Integer 1", "Queue Type");
      lDocAttachment.SETRANGE("Key Integer 2", "Entry No.");
      lDocAttachment.SETRANGE("Key Code 1", "Flow Code");

      IF NOT lDocAttachment.ISEMPTY THEN BEGIN
        lDocAttachment.FINDFIRST;
        CurrPage.Attachment.FORM.SetAttachment(lDocAttachment);
        CurrPage.UPDATE(FALSE);
      END;
    END;

    PROCEDURE ShowFields@1100281001();
    VAR
      lSaveRec@1100281000 : Record 50054;
    BEGIN
      PurchasesAmountEditable := ("Document Type" = "Document Type"::Invoice) OR ("Document Type" = "Document Type"::Quote)
        OR ("Document Type" = "Document Type"::"DFC To Qualify");
      SalesAmountEditable := ("Document Type" = "Document Type"::"Service Request");
      InvoiceEditable := ("Document Type" = "Document Type"::Invoice) OR ("Document Type" = "Document Type"::"DFC To Qualify");
      QuoteEditable := ("Document Type" = "Document Type"::Quote);
      NotInvoiceEditable := ("Document Type" <> "Document Type"::Invoice);
    END;

    PROCEDURE NextRecord@1100281002();
    VAR
      lDocFlowHeader@1100281001 : Record 50107;
      lDocQueue@1100281000 : Record 50054;
    BEGIN
      IF NEXT = 0 THEN BEGIN
        IF CONFIRM(Text003) THEN BEGIN
          lDocFlowHeader.GET("Document Flow Header No.");
          lDocQueue.NewQueueDocument(lDocFlowHeader);
          Rec := lDocQueue;
        END;
      END;

      UpdateAttachSubForm;
    END;

    PROCEDURE PrecedentRecord@1100281003();
    BEGIN
      CurrDocNo := GetCurrDocNo;
      IF NOT FINDFIRST THEN
        EXIT;

      NEXT(CurrDocNo - 2);
      UpdateAttachSubForm;
    END;

    PROCEDURE CreateWSHShell@1100281007();
    BEGIN
      IF ISCLEAR(WSHShell) THEN
        CREATE(WSHShell,FALSE,TRUE);
    END;

    PROCEDURE GetCurrDocNo@1100281004() rCount : Integer;
    VAR
      lDocQueue@1100281000 : Record 50054;
    BEGIN
      lDocQueue.COPY(Rec);
      IF lDocQueue.FINDFIRST THEN
        REPEAT
          rCount += 1;
          IF (lDocQueue."Flow Code" = "Flow Code") AND
             (lDocQueue."Queue Type" = "Queue Type") AND
             (lDocQueue."Entry No." = "Entry No.") THEN
            EXIT;
        UNTIL lDocQueue.NEXT = 0;
    END;

    PROCEDURE UpdateAttachSubForm@1100281011();
    VAR
      lAttach@1100281000 : Record 50021;
    BEGIN
      lAttach.SETRANGE("Referent Table No.", DATABASE::"Document Queue");
      lAttach.SETRANGE("Key Integer 1", "Queue Type");
      lAttach.SETRANGE("Key Integer 2", "Entry No.");
      lAttach.SETRANGE("Key Code 1", "Flow Code");
      lAttach.SETRANGE(Deleted, FALSE);
      IF NOT ISEMPTY THEN
        CurrPage.Attachment.FORM.InitCurrentdocNo(Rec);
    END;

    PROCEDURE GetContactMembreNo@1100281005(pContactNo@1100281000 : Code[20]) : Code[20];
    VAR
      lContact@1100281001 : Record 5050;
    BEGIN
      IF lContact.GET("Contact No.") THEN
        EXIT(lContact."Member No.");
    END;

    PROCEDURE GetContactByMemberNo@1100281006();
    VAR
      lContact@1100281000 : Record 5050;
    BEGIN
      IF MemberNo = '' THEN BEGIN
        VALIDATE("Contact No.", '');
        EXIT;
      END;
      lContact.SETCURRENTKEY("Member No.","Corporate No.");
      lContact.SETRANGE("Member No.", MemberNo);
      IF lContact.FINDFIRST THEN
        VALIDATE("Contact No.", lContact."No.");
    END;

    BEGIN
    {
      /** @r IMH04 @d 23/05/14 @a ISAT.ZW @v IMH6.01.P010 @s Projet PMU
          @c Ajouter champ 57013 chmap IMA Reference No. */
      /** @r IMH03 @d 06/03/12 @a ISAT.ZW @v IMH6.01.101 @s Int‚gration document GED @s Mantis 3058
          @c Masquer le champ Franchise et v‚tust‚ */
      /** @r IMH02 @d 25/10/11 @a ISAT.ST @v IMH6.01.101 @s Int‚gration document GED
          @c Bouton affecter visible, fermeture auto du formulaire */
      /** @r IMH01 @d 15/03/11 @a ISAT.ZW @v IMH6.01.101 @s Int‚gration document GED @c Cr‚ation */
    }
    END.
  }
}