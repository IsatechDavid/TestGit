OBJECT Page 50201 Service Hdr Control Card
{
  OBJECT-PROPERTIES
  {
    Date=24/04/14;
    Time=12:04:39;
    Modified=Yes;
    Version List=IMH6.01,IMH6.01.P011;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Hdr Control Card;
               FRA=Fiche ligne produit contr“le qualit‚];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table5900;
    PopulateAllFields=Yes;
    SourceTableView=SORTING(Document Type,No.)
                    WHERE(Document Type=FILTER(Invoice));
    PageType=Card;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Intervention,Additional,Communication,Help;
                                FRA=Nouveau,Processus,Etat,Intervention,Compl‚ment,Communication,Aide];
    ShowFilter=No;
    OnOpenPage=VAR
                 lWinShell@1100281000 : Codeunit 50094;
               BEGIN
                 ServTimeReg.OpenObjectID(CurrPage.OBJECTID(FALSE)); //IMH04.ST
                 IF "No." <> '' THEN BEGIN
                   SETRANGE("No.","No.");
                   OnGetRecord;
                 END;
                 //<<IMH07
                 IF ServiceLockingMgt.ServiceHeaderCard_GetLock(Rec,TRUE) THEN BEGIN
                   CurrPage.EDITABLE := TRUE;
                   lWinShell.EditMode;
                 END ELSE BEGIN
                   CurrPage.EDITABLE := FALSE;
                 END;
                 PageEditable := CurrPage.EDITABLE;  //IMH28
                 //IMH20
                 //CurrPage.EDITABLE := ServFormMgt.ServiceEditable(Rec);
               END;

    OnClosePage=BEGIN
                  ServTimeReg.CloseObject; //IMH04.ST
                  ServiceLockingMgt.ServiceHeaderCard_ReleaseLock(Rec);//IMH07
                END;

    OnAfterGetRecord=BEGIN
                       ServTimeReg.OnAfterGetServiceHeaderRecord(Rec); //IMH04.ST
                       OnGetRecord;
                     END;

    OnModifyRecord=BEGIN
                     CheckMandFields; //IMH19.ST
                   END;

    OnQueryClosePage=BEGIN
                       IF CloseAction IN [ACTION::LookupOK,ACTION::OK] THEN BEGIN
                         TestBeforeAction
                       END;
                     END;

    ActionList=ACTIONS
    {
      { 1100281008;0 ;ActionContainer;
                      Name=Action;
                      ActionContainerType=ActionItems }
      { 1100281058;1 ;Action    ;
                      Name=<Action1100281063>;
                      CaptionML=[ENU=SERVICE;
                                 FRA=LIGNE PRODUIT];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NewSparkle;
                      OnAction=BEGIN
                                 IF TRUE THEN;
                               END;
                                }
      { 1100281007;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 FRA=Fonction&s] }
      { 1100281027;2 ;Action    ;
                      Name=<Action1100281110>;
                      CaptionML=[ENU=Create Intervention;
                                 FRA=Cr‚er intervention];
                      Promoted=Yes;
                      Visible=InterventionAllowed;
                      Enabled=PageEditable;
                      PromotedIsBig=Yes;
                      Image=AddAction;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 TestBeforeAction;
                                 CreateServiceInterventionLine(FALSE);
                               END;
                                }
      { 1000000001;2 ;Action    ;
                      Name=<Action1100281095>;
                      CaptionML=[ENU=Force Provider Assignment;
                                 FRA=Assignation directe prestataire];
                      Visible=CreateProviderDirectVisible;
                      Enabled=PageEditable;
                      Image=AddAction;
                      OnAction=BEGIN
                                 //IMH34
                                 TestBeforeAction;
                                 DirectCreateInervLine(FALSE);
                               END;
                                }
      { 1100281026;2 ;Separator  }
      { 1100281025;2 ;Action    ;
                      Name=<Action1100281069>;
                      CaptionML=[ENU=Create Tray Line;
                                 FRA=Cr‚er activit‚ corbeille];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      Image=BinContent;
                      OnAction=VAR
                                 lTrayLineMgt@1100281000 : Codeunit 50050;
                               BEGIN
                                 lTrayLineMgt.CreateTLFromServHeader(Rec, '', '', TRUE);  //IMH03 isat.zw
                               END;
                                }
      { 1100281029;2 ;Action    ;
                      Name=Create Interact;
                      CaptionML=[ENU=Create &Interact;
                                 FRA=Cr‚er &interaction];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      Image=CreateInteraction;
                      OnAction=BEGIN
                                 //IMH06 isat.zw
                                 CreateInteraction;
                               END;
                                }
      { 1100281077;2 ;Separator  }
      { 1100281054;2 ;Action    ;
                      Name=<Action1100281053>;
                      CaptionML=[ENU=Next Step;
                                 FRA=Etape suivante];
                      Promoted=Yes;
                      Visible=UserNextStepAvailable;
                      Enabled=PageEditable;
                      PromotedIsBig=Yes;
                      Image=SelectItemSubstitution;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lProcessServHeaderMgt@1100281000 : Codeunit 50043;
                               BEGIN
                                 lProcessServHeaderMgt.SelectNextStep(Rec);
                               END;
                                }
      { 1100281112;2 ;Action    ;
                      Name=URLHyperlink;
                      CaptionML=[ENU=URL Hyperlink;
                                 FRA=Lien URL];
                      Promoted=Yes;
                      Image=Links;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //<<IMH33.PC
                                 IF ServiceOrderType."DARVA Site" THEN BEGIN
                                   IF NOT DARVAMgt.GetTransparentAccesDARVA("Reference No.","Corporate No.","Corporate Region Code") THEN BEGIN
                                   //>>IMH33.PC
                                     HYPERLINK(ServiceOrderType."URL Link");
                                   END;
                                 END ELSE BEGIN
                                   HYPERLINK(ServiceOrderType."URL Link");
                                 END;
                               END;
                                }
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100281059;1 ;Action    ;
                      Name=<Action1100281059>;
                      CaptionML=[ENU=Address;
                                 FRA=Contacts];
                      RunObject=Page 50078;
                      RunFormView=SORTING(Service Header No.,Address Type,Address No.);
                      RunFormLink=Service Header No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Note;
                      PromotedCategory=Category5 }
      { 1100281031;1 ;ActionGroup;
                      CaptionML=[ENU=Communication;
                                 FRA=Communication];
                      ActionContainerType=NewDocumentItems }
      { 1100281123;2 ;Action    ;
                      Name=<Action1100281065>;
                      CaptionML=[ENU=Send Mail;
                                 FRA=Envoi de mail];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendTo;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 lSendMail@1100281000 : Codeunit 50128;
                               BEGIN
                                 lSendMail.SendMailFromServH(Rec, '');
                               END;
                                }
      { 1100281038;2 ;Action    ;
                      Name=<Action1100281039>;
                      CaptionML=[ENU=Postponed &Interactions;
                                 FRA=Brouillons];
                      RunObject=Page 5082;
                      RunFormView=SORTING(Service No.,Service Header No.,Intervention Line No.,Date,Postponed);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Header No.=FIELD(No.) }
      { 1100281046;2 ;Separator  }
      { 1100281017;2 ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Co&mments;
                                 FRA=Co&mmentaires];
                      RunObject=Page 50230;
                      RunFormView=SORTING(Source No. 2,Creation Date)
                                  ORDER(Descending)
                                  WHERE(Source Table ID=FILTER(5900|50075),
                                        Source No. 4=FILTER(''),
                                        Called From Source Table ID=FILTER(5900));
                      RunFormLink=Source No.=FIELD(Service No.),
                                  Source No. 2=FIELD(No.);
                      Promoted=Yes;
                      Image=ViewComments;
                      PromotedCategory=Category6 }
      { 1100281047;2 ;Action    ;
                      Name=<Action1100281038>;
                      CaptionML=[ENU=Interaction Log E&ntries;
                                 FRA=Ecritures &journal interaction];
                      RunObject=Page 5076;
                      RunFormView=SORTING(Service No.,Service Header No.,Intervention Line No.,Date,Postponed);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Header No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Track;
                      PromotedCategory=Category6 }
      { 1100281073;2 ;Action    ;
                      Name=<Action1100281028>;
                      CaptionML=[ENU=Service Header Attach. Document;
                                 FRA=Documents joints];
                      RunObject=Page 50015;
                      RunFormView=SORTING(Service No.,Service Document No.,Service Intervention Line No.,Creation Date);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Document No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Documents;
                      PromotedCategory=Category6 }
      { 1100281093;2 ;Action    ;
                      Name=<Action1100281093>;
                      CaptionML=[ENU=Data Exchange;
                                 FRA=Echange de donn‚es];
                      RunObject=Page 8016724;
                      RunFormView=SORTING(Source Type,Source Subtype,Source ID,EAI Act Type Code,EAI Act Code,MQ Entry No.)
                                  WHERE(Source Type=CONST(5900));
                      RunFormLink=Source Subtype=FIELD(Document Type),
                                  Source ID=FIELD(No.) }
      { 1100281028;1 ;Action    ;
                      Name=<Action1100281023>;
                      CaptionML=[ENU=Current Tray Lines;
                                 FRA=Activit‚s en cours];
                      Image=Bins;
                      OnAction=BEGIN
                                 ServiceHeaderInfoPane.LookupTrayLines(Rec, TRUE);
                               END;
                                }
      { 1100281021;1 ;Action    ;
                      Name=Interventions;
                      CaptionML=[ENU=Interventions;
                                 FRA=Interventions];
                      RunObject=Page 50069;
                      RunFormView=SORTING(Service Header No.,Line No.);
                      RunFormLink=Service Header No.=FIELD(No.);
                      Image=Components;
                      PromotedCategory=Category5 }
      { 1100281061;1 ;Separator  }
      { 1100281094;1 ;Action    ;
                      Name=History;
                      CaptionML=[ENU=History;
                                 FRA=Historiques];
                      Promoted=Yes;
                      Image=History;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowChangeLogs;
                               END;
                                }
      { 1100281051;1 ;Action    ;
                      Name=<Action1100281057>;
                      CaptionML=[ENU=Process Status History;
                                 FRA=Historique statut processus];
                      RunObject=Page 50156;
                      RunFormLink=Source Table ID=CONST(5900),
                                  Source Key Code 1=FIELD(No.) }
      { 1100281003;1 ;Action    ;
                      Name=ResearchHistoricAct;
                      CaptionML=[ENU=Research Historic;
                                 FRA=Historique recherche];
                      RunObject=Page 50380;
                      RunFormView=SORTING(Service No.,Service Header No.,Intervention Line No.,Entry No.);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Header No.=FIELD(No.);
                      Promoted=Yes;
                      Image=CalculateRemainingUsage;
                      PromotedCategory=Process }
      { 1100281057;1 ;Action    ;
                      Name=<Action1100281023>;
                      CaptionML=[ENU=Tray Line History;
                                 FRA=Activit‚s archiv‚es];
                      Image=Bins;
                      OnAction=BEGIN
                                 ServiceHeaderInfoPane.LookupTrayLineHist(Rec);
                               END;
                                }
      { 1100281041;1 ;Action    ;
                      Name=<Action102>;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 FRA=Statistiques];
                      Image=Statistics;
                      OnAction=BEGIN
                                 FORM.RUNMODAL(FORM::"Service Header Statistics",Rec);
                               END;
                                }
      { 1100281086;1 ;Action    ;
                      Name=HelpAction;
                      CaptionML=[ENU=Help;
                                 FRA=Aide];
                      Promoted=Yes;
                      Visible=WikiLinkVisible;
                      PromotedIsBig=Yes;
                      Image=View;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 RunHelp;//IMH14
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100281000;1;Group  ;
                CaptionML=[ENU=General;
                           FRA=G‚n‚ral] }

    { 1100281076;2;Field  ;
                DrillDown=No;
                SourceExpr="Process Status Description";
                Importance=Promoted;
                Style=Favorable;
                StyleExpr=TRUE }

    { 1100281089;2;Field  ;
                CaptionML=[ENU=No.;
                           FRA=Nø ligne produit];
                SourceExpr=XMLText;
                Editable=FALSE;
                ControlAddIn=[Isatech.IMH.PageIdentifaction;PublicKeyToken=c1f98940aa27b996] }

    { 1100281037;2;Field  ;
                CaptionML=[ENU=Service Order Type;
                           FRA=Type produit];
                SourceExpr=GetServiceOrderTypeDescr;
                Importance=Promoted;
                Editable=FALSE }

    { 1100281012;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Service No.";
                Importance=Additional }

    { 1100281001;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Contact No.";
                OnAssistEdit=BEGIN
                               OpenContactCard;
                             END;
                              }

    { 1100281009;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr=Name;
                Importance=Promoted }

    { 1100281011;2;Field  ;
                SourceExpr=Address;
                Importance=Additional }

    { 1100281013;2;Field  ;
                SourceExpr="Address 2";
                Importance=Additional }

    { 1100281022;2;Field  ;
                SourceExpr="Address 3";
                Importance=Additional }

    { 1100281006;2;Field  ;
                Lookup=No;
                DrillDown=No;
                CaptionML=[ENU=Post Code - Country;
                           FRA=Code postal - Pays];
                SourceExpr=STRSUBSTNO('%1 - %2',"Post Code","Country/Region Code");
                Importance=Additional }

    { 1100281015;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr=City;
                Importance=Additional }

    { 1100281019;2;Field  ;
                SourceExpr="Phone No.";
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               //<<IMH31.PC
                               PhoneNoAssistEdit("Phone No.");
                               //>>IMH31.PC
                             END;
                              }

    { 1100281066;2;Field  ;
                DrillDown=No;
                SourceExpr="Contact Mobile Phone No.";
                OnAssistEdit=BEGIN
                               //<<IMH31.PC
                               PhoneNoAssistEdit("Contact Mobile Phone No.");
                               //>>IMH31.PC
                             END;
                              }

    { 1000000000;2;Field  ;
                ExtendedDatatype=URL;
                CaptionML=[ENU=URL Link;
                           FRA=Lien URL];
                SourceExpr=ServiceOrderType."URL Link";
                Editable=FALSE }

    { 1100281014;2;Field  ;
                SourceExpr="Order Date" }

    { 1100281034;1;Part   ;
                Name=InterventionLines;
                CaptionML=[ENU=Interventions Lines;
                           FRA=Liste des interventions];
                SubFormView=SORTING(Service Header No.,Line No.);
                SubFormLink=Service Header No.=FIELD(No.);
                PagePartID=Page50074 }

    { 1100281002;0;Container;
                Name=FactBoxArea;
                ContainerType=FactBoxArea }

    { 1100281088;1;Part   ;
                SubFormView=WHERE(Type=CONST(TableData),
                                  ID=CONST(5900));
                SubFormLink=ID=FILTER(5900);
                PagePartID=Page50208;
                PartType=Page }

    { 1100281045;1;Part   ;
                Name=SalesHeaderDetails;
                CaptionML=[ENU=Service Header Details;
                           FRA=D‚tail ligne produit];
                SubFormView=SORTING(Document Type,No.)
                            WHERE(Document Type=CONST(Invoice));
                SubFormLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.);
                PagePartID=Page50088 }

    { 1100281060;1;Part   ;
                Name=Notes;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

    { 1100281004;1;Part   ;
                Name=Links;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

  }
  CODE
  {
    VAR
      ServiceOrderType@1100281004 : Record 5903;
      ServTimeReg@1100281002 : Codeunit 50070;
      ServiceLockingMgt@1100281001 : Codeunit 50071;
      ServiceHeaderInfoPane@1100281010 : Codeunit 50062;
      ServiceFormMgt@1100281018 : Codeunit 50086;
      UserSpecialPermission@1000000001 : Codeunit 50093;
      DARVAMgt@1100281037 : Codeunit 50150;
      XMLText@1100281013 : BigText;
      InterventionAllowed@1100281006 : Boolean INDATASET;
      UserNextStepAvailable@1100281008 : Boolean INDATASET;
      WikiLink@1100281012 : Text[250];
      WikiLinkVisible@1100281011 : Boolean INDATASET;
      ServFormMgt@1100281023 : Codeunit 50086;
      Text001@1100281028 : TextConst 'ENU=You must enter at least one affected place;FRA=Vous devez saisir au moins un lieu touch‚';
      Text002@1100281009 : TextConst 'ENU=Field Urgent is required;FRA=Champ Urgent obligatoire';
      Text003@1100281030 : TextConst 'ENU=You should to set the field Appropriate Deductible Amount.;FRA=Vous devez renseigner le champ Franchise … pr‚lever.';
      TextContext@1100281025 : Text[250];
      PageEditable@1100281034 : Boolean INDATASET;
      CurrNo@1100281000 : Code[20];
      CreateProviderDirectVisible@1000000000 : Boolean INDATASET;

    LOCAL PROCEDURE OnGetRecord@1100281001();
    VAR
      lColorMgt@1100281000 : Codeunit 50088;
    BEGIN
      CALCFIELDS("User Next Step Available", Context);
      CALCFIELDS("Contract Form Name");
      UserNextStepAvailable := "User Next Step Available" OR ("Process Code"='');
      TextContext := Context;
      IF ServiceOrderType.Code <> "Service Order Type" THEN
        IF NOT ServiceOrderType.GET("Service Order Type") THEN
          CLEAR(ServiceOrderType);
      InterventionAllowed := "Intervention Allowed";
      GetHelpLink;
      IF CurrNo <> "No." THEN BEGIN
        lColorMgt.PageIdentifLoadXML(XMLText,DATABASE::"Service Header","No.",9);
        CurrNo := "No.";
      END;
      CurrPage.EDITABLE := ServFormMgt.ServiceEditable(Rec);

      //<<IMH34
      CreateProviderDirectVisible := InterventionAllowed AND UserSpecialPermission.IsForceProvAssignManager;
      //>>IMH34
    END;

    PROCEDURE GetHelpLink@1100281018();
    VAR
      lHelpMgt@1100281000 : Codeunit 50084;
    BEGIN
      //<<IMH35
      //WikiLinkVisible := lHelpMgt.RunHelp("Process Code","Process Status No.","Service Order Type","Corporate No.",WikiLink);
      GetWikiLink(WikiLinkVisible, WikiLink);
      //>>IMH35
    END;

    PROCEDURE RunHelp@1100281011();
    BEGIN
      HYPERLINK(WikiLink);
    END;

    PROCEDURE TestBeforeAction@1100281000();
    BEGIN
      CheckCorporateDeclaration;
      TestDataBeforeAction(TRUE);
    END;

    BEGIN
    {
      /** @r IMH37 @d 15/04/14 @a ISAT.PC @v IMH6.01.P011 @s New Provider Search
          @c Add new action Research Historic in Process Category */
      /** @r IMH36 @d 13/02/13 @a ISAT.PC @v IMH6.01.215 @h 4121 @s Ajout "Create date" sur la cl‚ secontraire
          @c modification de la propri‚t‚ RunFormView de l'action document joint
          @c de SORTING(Service No.,Service Document No.,Service Intervention Line No.,Intervention Quote Line No.)
          @c a SORTING(Service No.,Service Document No.,Service Intervention Line No.,Creation Date)
      /** @r IMH35 @d 18/07/12 @a ISAT.PC @v IMH6.01.226 @s version 1.4 @h 3537 @c Lien Wiki intervention */
      /** @r IMH34 @d 27/03/12 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @h 2725 @c FOnction Assignation directe prestataire*/
      /** @r IMH33 @d 14/03/12 @a ISAT.PC @v IMH6.01.134 @s DARVA @c Ajout lien transparent */
      /** @r IMH32 @d 16/01/12 @a ISAT.ZW @v IMH6.01.129 @s R‚clamation @c Ajout champs r‚clamation */
      /** @r IMH31 @d 14/01/12 @a ISAT.PC @v IMH6.01.129 @s CTI @c Ajout du dev pour la partie CTI */
      /** @r IMH30 @d 10/01/12 @a ISAT.PC @v IMH6.01.134 @s DARVA @c Ajout champ flowfield 56022, SDR64 Send */
      /** @r IMH29 @d 19/12/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @h Mantis 2592
          @c Afficher champs "vol de contenu"+"dommages corporels" pour ren Urgent */
      /** @r IMH28 @d 05/12/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Verrou service pour les fonction */
      /** @r IMH27 @d 23/11/11 @a ISAT.EBA @v IMH6.01.011 @s Gestion du service */
      /** @r IMH26 @d 18/11/11 @a ISAT.EBA @v IMH6.01.011 @s Gestion du service @c Lookup sur champ "Ship-to City" */
      /** @r IMH25 @d 07/11/11 @a ISAT.PC @v IMH6.01.135 @s DARVA @c Gestion cabinet expert */
      /** @r IMH24 @d 01/09/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Affichage nom formule */
      /** @r IMH23 @d 01/09/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout champ Context
          @c suppression menu Descriptif des travaux */
      /** @r IMH22 @d 29/08/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Ajout champ Context
          @c Suppression test canal, demandeur, franchise */
      /** @r IHM21 @d 06/06/11 @a ISAT.ZW @v IMH6.01.011 @s Gestion des services @c Ajout fonction Historiques */
      /** @r IHM20 @d 31/05/11 @a ISAT.ZW @v IMH6.01.011 @s Gestion des services @c service FUsion non editable */
      /** @r IMH19 @d 19/05/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Contr“le des champs obligatoires */
      /** @r IMH18 @d 16/05/11 @a ISAT.ZW @v IMH6.01.123 @s Description commentaire declaration */
      /** @r IMH17 @d 18/04/11 @a ISAT.EBA @v IMH6.01.011 @s Gestion du service
          @c Ajout de champ : "Total Descr. Amount Excl. VAT"
          @c Suppression de champs onglet "Compl‚ment"  : "Body Damage", "Content Theft" */
      /** @r IMH16 @d 24/03/11 @a ISAT.ZW @v IMH6.01.123 @s Affichage montant franchise */
      /** @r IMH15 @d 11/03/11 @a ISAT.LLT @v IMH6.01.123 @s Saisie champs description */
      /** @r IMH14 @d 08/03/11 @a ISAT.LLT @v IMH6.01.122 @s Gestion des commentaires
          @c Changement accŠs form commentaires
          @c Ajout couleur */
      /** @r IHM13 @d 04/03/11 @a ISAT.ZW @v IMH6.01.004 @s GED @c renomer interaction report‚ en Brouillons */
      /** @r IMH12 @d 01/03/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout lien WIKI */
      /** @r IMH11 @d 25/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c description statut en gras */
      /** @r IMH10 @d 31/01/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Champ Urgent obligatoire */
      /** @r IMH09 @d 20/01/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Design */
      /** @r IMH08 @d 16/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Design
          @c Ajout champs franchise */
      /** @r IMH07 @d 06/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Gestion mode ‚dition */
      /** @r IMH06 @d 01/12/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Fonction cr‚er interaction */
      /** @r IMH05 @d 30/11/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout code cause */
      /** @r IMH04 @d 27/10/10 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Temps utilisateurs */
      /** @r IMH03 @d 25/10/10 @a ISAT.ZW @v IMH6.01.012 @s Gestion de l'intervention
          @c Todo --> Tray Line + fonction Cr‚er Activit‚ corbeille*/
      /** @r IMH02 @d 04/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion de l'intervention @c Ajout commit en CreateIntervention */
      /** @r IMH01 @d 04/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Cr‚ation */
    }
    END.
  }
}