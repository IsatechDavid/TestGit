OBJECT Page 50213 Service Mgt. Setup color
{
  OBJECT-PROPERTIES
  {
    Date=24/02/11;
    Time=11:41:38;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Mgt. Setup;
               FRA=ParamŠtres Gestion des services];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table5911;
    PageType=Card;
    OnOpenPage=BEGIN
                 RESET;
                 IF NOT GET THEN BEGIN
                   INIT;
                   INSERT;
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       LoadXML(XMLService,"Service Color",Text001);
                       LoadXML(XMLServiceHeader,"Service Header Color",Text002);
                       LoadXML(XMLIntervLine,"Intervention Line Color",Text003);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           FRA=G‚n‚ral] }

    { 145 ;2   ;Field     ;
                SourceExpr="First Warning Within (Hours)" }

    { 135 ;2   ;Field     ;
                SourceExpr="Send First Warning To" }

    { 147 ;2   ;Field     ;
                SourceExpr="Second Warning Within (Hours)" }

    { 141 ;2   ;Field     ;
                SourceExpr="Send Second Warning To" }

    { 149 ;2   ;Field     ;
                SourceExpr="Third Warning Within (Hours)" }

    { 143 ;2   ;Field     ;
                SourceExpr="Send Third Warning To" }

    { 39  ;2   ;Field     ;
                SourceExpr="Serv. Job Responsibility Code" }

    { 97  ;2   ;Field     ;
                SourceExpr="Next Service Calc. Method" }

    { 137 ;2   ;Field     ;
                SourceExpr="Service Order Starting Fee" }

    { 44  ;2   ;Field     ;
                SourceExpr="Shipment on Invoice" }

    { 71  ;2   ;Field     ;
                SourceExpr="One Service Item Line/Order" }

    { 10  ;2   ;Field     ;
                SourceExpr="Link Service to Service Item" }

    { 65  ;2   ;Field     ;
                SourceExpr="Resource Skills Option" }

    { 32  ;2   ;Field     ;
                SourceExpr="Service Zones Option" }

    { 36  ;2   ;Field     ;
                SourceExpr="Fault Reporting Level" }

    { 7   ;2   ;Field     ;
                DrillDown=Yes;
                SourceExpr="Base Calendar Code";
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              TESTFIELD("Base Calendar Code");
                              CalendarMgmt.ShowCustomizedCalendar(CustomizedCalEntry."Source Type"::Service,'','',"Base Calendar Code");
                            END;
                             }

    { 28  ;2   ;Field     ;
                SourceExpr="Copy Comments Order to Invoice" }

    { 26  ;2   ;Field     ;
                SourceExpr="Copy Comments Order to Shpt." }

    { 57  ;2   ;Field     ;
                SourceExpr="Logo Position on Documents" }

    { 1100281000;2;Field  ;
                SourceExpr="Minute Comment Code" }

    { 1100281001;2;Field  ;
                SourceExpr="Reserve Comment Code" }

    { 1904867001;1;Group  ;
                CaptionML=[ENU=Mandatory Fields;
                           FRA=Champs obligatoires] }

    { 4   ;2   ;Field     ;
                SourceExpr="Service Order Type Mandatory" }

    { 41  ;2   ;Field     ;
                SourceExpr="Service Order Start Mandatory" }

    { 49  ;2   ;Field     ;
                SourceExpr="Service Order Finish Mandatory" }

    { 93  ;2   ;Field     ;
                SourceExpr="Contract Rsp. Time Mandatory" }

    { 111 ;2   ;Field     ;
                SourceExpr="Unit of Measure Mandatory" }

    { 113 ;2   ;Field     ;
                SourceExpr="Fault Reason Code Mandatory" }

    { 34  ;2   ;Field     ;
                SourceExpr="Work Type Code Mandatory" }

    { 155 ;2   ;Field     ;
                SourceExpr="Salesperson Mandatory" }

    { 1902985101;1;Group  ;
                CaptionML=[ENU=Defaults;
                           FRA=Valeurs par d‚faut] }

    { 63  ;2   ;Field     ;
                SourceExpr="Default Response Time (Hours)" }

    { 14  ;2   ;Field     ;
                SourceExpr="Warranty Disc. % (Parts)" }

    { 16  ;2   ;Field     ;
                SourceExpr="Warranty Disc. % (Labor)" }

    { 20  ;2   ;Field     ;
                SourceExpr="Default Warranty Duration" }

    { 1100281003;2;Field  ;
                SourceExpr="Service Process Code" }

    { 1100281004;2;Field  ;
                SourceExpr="Service Start Status" }

    { 1100281005;2;Field  ;
                SourceExpr="Service Start Status Desc" }

    { 1902001801;1;Group  ;
                CaptionML=[ENU=Contracts;
                           FRA=Contrats] }

    { 77  ;2   ;Field     ;
                SourceExpr="Contract Serv. Ord.  Max. Days" }

    { 115 ;2   ;Field     ;
                SourceExpr="Use Contract Cancel Reason" }

    { 103 ;2   ;Field     ;
                SourceExpr="Register Contract Changes" }

    { 125 ;2   ;Field     ;
                SourceExpr="Contract Inv. Line Text Code" }

    { 127 ;2   ;Field     ;
                SourceExpr="Contract Line Inv. Text Code" }

    { 133 ;2   ;Field     ;
                SourceExpr="Contract Inv. Period Text Code" }

    { 123 ;2   ;Field     ;
                SourceExpr="Contract Credit Line Text Code" }

    { 47  ;2   ;Field     ;
                SourceExpr="Contract Value Calc. Method" }

    { 51  ;2   ;Field     ;
                SourceExpr="Contract Value %" }

    { 1904569201;1;Group  ;
                CaptionML=[ENU=Numbering;
                           FRA=Num‚rotation] }

    { 95  ;2   ;Field     ;
                SourceExpr="Service Item Nos." }

    { 12  ;2   ;Field     ;
                SourceExpr="Service Quote Nos." }

    { 79  ;2   ;Field     ;
                SourceExpr="Service Order Nos." }

    { 117 ;2   ;Field     ;
                SourceExpr="Service Invoice Nos." }

    { 30  ;2   ;Field     ;
                SourceExpr="Posted Service Invoice Nos." }

    { 45  ;2   ;Field     ;
                SourceExpr="Service Credit Memo Nos." }

    { 46  ;2   ;Field     ;
                SourceExpr="Posted Serv. Credit Memo Nos." }

    { 56  ;2   ;Field     ;
                SourceExpr="Posted Service Shipment Nos." }

    { 18  ;2   ;Field     ;
                SourceExpr="Loaner Nos." }

    { 9   ;2   ;Field     ;
                SourceExpr="Troubleshooting Nos." }

    { 81  ;2   ;Field     ;
                SourceExpr="Service Contract Nos." }

    { 83  ;2   ;Field     ;
                SourceExpr="Contract Template Nos." }

    { 119 ;2   ;Field     ;
                SourceExpr="Contract Invoice Nos." }

    { 24  ;2   ;Field     ;
                SourceExpr="Contract Credit Memo Nos." }

    { 2   ;2   ;Field     ;
                SourceExpr="Prepaid Posting Document Nos." }

    { 1100281002;2;Field  ;
                SourceExpr="Services Nos" }

    { 1100281006;1;Group  ;
                CaptionML=[ENU=IMH Service;
                           FRA=Service IMH];
                GroupType=Group }

    { 1100281007;2;Field  ;
                SourceExpr="Service Locking Timeout (mn)" }

    { 1100281008;2;Field  ;
                SourceExpr="Serv. Hdr. Lock Timeout (mn)" }

    { 1100281015;2;Field  ;
                SourceExpr="Interv. Lock Timeout (mn)" }

    { 1100281016;2;Field  ;
                SourceExpr="Tray Line Lock Timeout (mn)" }

    { 1100281009;2;Field  ;
                SourceExpr="Service Process Code" }

    { 1100281010;2;Field  ;
                SourceExpr="Service Start Status" }

    { 1100281011;2;Field  ;
                SourceExpr="Service Start Status Desc" }

    { 1100281018;2;Field  ;
                SourceExpr="Interv. Quote Process Code" }

    { 1100281019;2;Field  ;
                SourceExpr="Interv. Quote Start Status" }

    { 1100281020;2;Field  ;
                SourceExpr="Interv. Quote Start Status Des" }

    { 1100281021;2;Field  ;
                SourceExpr="Guarding Building Trade No." }

    { 1100281012;2;Field  ;
                SourceExpr="Guarding Speciality Code" }

    { 1100281022;2;Field  ;
                SourceExpr="Moving Building Trade No." }

    { 1100281013;2;Field  ;
                SourceExpr="Moving Speciality Code" }

    { 1100281023;2;Field  ;
                SourceExpr="Public Storage Building Trade" }

    { 1100281014;2;Field  ;
                SourceExpr="Public Storage Speciality Code" }

    { 1100281017;2;Field  ;
                SourceExpr="Service Tray Mandatory" }

    { 1100281024;1;Group  ;
                CaptionML=[ENU=Color Selection;
                           FRA=S‚lection code couleur];
                GroupType=Group }

    { 1100281027;2;Field  ;
                SourceExpr=XMLService;
                ControlAddIn=[Isatech.IMH.IMHColorSelection;PublicKeyToken=76fb583a731654b5];
                OnControlAddIn=VAR
                                 lColor@1100281002 : Integer;
                               BEGIN
                                 IF ReadXML(Data,lColor) THEN BEGIN
                                  "Service Color" := lColor;
                                   MODIFY;
                                   CurrPage.UPDATE(FALSE);
                                 END;
                               END;
                                }

    { 1100281026;2;Field  ;
                SourceExpr=XMLServiceHeader;
                ControlAddIn=[Isatech.IMH.IMHColorSelection;PublicKeyToken=76fb583a731654b5];
                OnControlAddIn=VAR
                                 lColor@1100281000 : Integer;
                               BEGIN
                                 IF ReadXML(Data,lColor) THEN BEGIN
                                   "Service Header Color" := lColor;
                                   MODIFY;
                                   CurrPage.UPDATE(FALSE);
                                 END;
                               END;
                                }

    { 1100281025;2;Field  ;
                SourceExpr=XMLIntervLine;
                ControlAddIn=[Isatech.IMH.IMHColorSelection;PublicKeyToken=76fb583a731654b5];
                OnControlAddIn=VAR
                                 lColor@1100281000 : Integer;
                               BEGIN
                                 IF ReadXML(Data,lColor) THEN BEGIN
                                   "Intervention Line Color" := lColor;
                                   MODIFY;
                                   CurrPage.UPDATE(FALSE);
                                 END;
                               END;
                                }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      CalendarMgmt@1001 : Codeunit 7600;
      CustomizedCalEntry@1000 : Record 7603;
      ColorMgt@1100281003 : Codeunit 50088;
      XMLService@1100281002 : BigText;
      XMLServiceHeader@1100281001 : BigText;
      XMLIntervLine@1100281000 : BigText;
      BackColorNodeName@1100281009 : TextConst 'FRA=BackColor';
      FontColorNodeName@1100281008 : TextConst 'FRA=FontColor';
      TextNodeName@1100281007 : TextConst 'FRA=Text';
      Text001@1100281006 : TextConst 'ENU=Service;FRA=Service';
      Text002@1100281005 : TextConst 'ENU=Service Header;FRA=Ligne produit';
      Text003@1100281004 : TextConst 'ENU=Intervention Line;FRA=Ligne intervention';

    PROCEDURE LoadXML@1100481000(VAR pXMLText@1100281002 : BigText;pColor@1100281001 : Integer;pCaption@1100281003 : Text[30]);
    VAR
      lRed@1100481001 : Integer;
      lGreen@1100481003 : Integer;
      lBlue@1100281000 : Integer;
    BEGIN
      CLEAR(pXMLText);
      ColorMgt.GetRGBColor(pColor,lRed,lGreen,lBlue);
      pXMLText.ADDTEXT('<Page>');
      pXMLText.ADDTEXT('<'+ BackColorNodeName +'>'+FORMAT(lRed)+';'+FORMAT(lGreen) +';' +FORMAT(lBlue)+'</'+ BackColorNodeName +'>');
      pXMLText.ADDTEXT('<'+ FontColorNodeName +'>0;0;0</'+ FontColorNodeName +'>');
      pXMLText.ADDTEXT('<'+ TextNodeName +'>'+pCaption+'</'+ TextNodeName +'>');
      pXMLText.ADDTEXT('</Page>');
    END;

    PROCEDURE ReadXML@1100281000(pBigText@1100281000 : BigText;VAR pColor@1100281004 : Integer) : Boolean;
    VAR
      lColor@1100281001 : Text[50];
      lStartPos@1100281002 : Integer;
      lEndPos@1100281003 : Integer;
    BEGIN
      lStartPos := pBigText.TEXTPOS('<'+ BackColorNodeName +'>') + + STRLEN('<'+ BackColorNodeName +'>');
      lEndPos := pBigText.TEXTPOS('</' + BackColorNodeName + '>');
      pBigText.GETSUBTEXT(lColor
                ,lStartPos
                ,lEndPos - lStartPos);
      EXIT(ColorMgt.GetNavColor(lColor,pColor));
    END;

    BEGIN
    {
      /** @r IMH06 @d 16/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout s‚lection couleur */ */
      /** @r IMH05 @d 20/01/11 @a ISAT.LLT @v IMH6.01.102 @s Gestion des statuts
          @c Ajout champ 50104 Interv. Quote Process Code
          @c Ajout champ 50105 Interv. Quote Start Status */
      /** @r IMH04 @d 17/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout champ 50020 Guarding Speciality Code
          @c Ajout champ 50021 Moving Speciality Code
          @c Ajout champ 50022 Public Storage Speciality Code */
      /** @r IMH03 @d 13/15/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service
          @c Ajout du champ process/status */
      /** @r IMH02 @d 01/12/10 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c Ajout du champ 50002 Service Nos pour gestion souche */
      /** @r IMH01 @d 21/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout du champ 50000 Minute Comment Code
          @c Ajout du champ 50001 Reserve Comment Code */
    }
    END.
  }
}