OBJECT Page 50220 Service Hdr Voucher Card
{
  OBJECT-PROPERTIES
  {
    Date=24/04/14;
    Time=12:04:48;
    Modified=Yes;
    Version List=IMH6.01,JUIN,IMH6.01.P011;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Header Voucher Card;
               FRA=Fiche ligne produit justificatifs];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table5900;
    PopulateAllFields=Yes;
    SourceTableView=SORTING(Document Type,No.)
                    WHERE(Document Type=FILTER(Invoice));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Intervention,Additional,Communication,Help;
                                FRA=Nouveau,Processus,Etat,Intervention,Compl‚ment,Communication,Aide];
    ShowFilter=No;
    OnOpenPage=VAR
                 lWinShell@1100281000 : Codeunit 50094;
               BEGIN
                 ServTimeReg.OpenObjectID(CurrPage.OBJECTID(FALSE));
                 IF "No." <> '' THEN BEGIN
                   SETRANGE("No.","No.");
                   OnGetRecord;
                 END;

                 IF ServiceLockingMgt.ServiceHeaderCard_GetLock(Rec,TRUE) THEN BEGIN
                   CurrPage.EDITABLE := TRUE;
                   lWinShell.EditMode;
                 END ELSE BEGIN
                   CurrPage.EDITABLE := FALSE;
                 END;

                 PageEditable := CurrPage.EDITABLE;  //IMH14
                 //IMH07
                 //CurrPage.EDITABLE := ServFormMgt.ServiceEditable(Rec);
               END;

    OnClosePage=BEGIN
                  ServTimeReg.CloseObject;
                  ServiceLockingMgt.ServiceHeaderCard_ReleaseLock(Rec);
                END;

    OnAfterGetRecord=BEGIN
                       ServTimeReg.OnAfterGetServiceHeaderRecord(Rec);
                       OnGetRecord;
                     END;

    OnQueryClosePage=BEGIN
                       IF CloseAction IN [ACTION::LookupOK,ACTION::OK] THEN BEGIN
                       //  TESTFIELD(Channel);
                       //  TESTFIELD(Requisitioner);
                         CheckCorporateDeclaration;
                         //<<IMH09
                       //  servordertype.GET("Service Order Type");
                       //  IF NOT servordertype."Hide Deductible Amounts" THEN
                       //  BEGIN
                         //>>IMH09
                       //    TESTFIELD("Appropriate Deductible Amount");
                       //    IF NOT InterventionDescriptionsExist THEN
                       //      ERROR(Text001);
                       //  END;
                       END;
                     END;

    ActionList=ACTIONS
    {
      { 1100281008;0 ;ActionContainer;
                      Name=Action;
                      ActionContainerType=ActionItems }
      { 1100281007;1 ;Action    ;
                      Name=<Action1100281063>;
                      CaptionML=[ENU=SERVICE;
                                 FRA=LIGNE PRODUIT];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NewSparkle;
                      OnAction=BEGIN
                                 IF TRUE THEN;
                               END;
                                }
      { 1100281022;1 ;ActionGroup;
                      Name=<Action1100281068>;
                      CaptionML=[ENU=Function&s;
                                 FRA=Fonction&s] }
      { 1100281021;2 ;Action    ;
                      Name=<Action1100281069>;
                      CaptionML=[ENU=Create Tray Line;
                                 FRA=Cr‚er activit‚ corbeille];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      Image=BinContent;
                      PromotedCategory=New;
                      OnAction=VAR
                                 lTrayLineMgt@1100281000 : Codeunit 50050;
                               BEGIN
                                 lTrayLineMgt.CreateTLFromServHeader(Rec, '', '', TRUE);  //IMH03 isat.zw
                               END;
                                }
      { 1100281035;2 ;Action    ;
                      Name=Create Interact;
                      CaptionML=[ENU=Create &Interact;
                                 FRA=Cr‚er &interaction];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      Image=CreateInteraction;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 //IMH06 isat.zw
                                 CreateInteraction;
                               END;
                                }
      { 1100281071;2 ;Separator  }
      { 1100281054;2 ;Action    ;
                      Name=<Action1100281053>;
                      CaptionML=[ENU=Next Step;
                                 FRA=Etape suivante];
                      Promoted=Yes;
                      Visible=UserNextStepAvailable;
                      Enabled=PageEditable;
                      PromotedIsBig=Yes;
                      Image=SelectItemSubstitution;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lProcessServHeaderMgt@1100281000 : Codeunit 50043;
                               BEGIN
                                 lProcessServHeaderMgt.SelectNextStep(Rec);
                               END;
                                }
      { 1100281010;1 ;Action    ;
                      Name=HelpAction;
                      CaptionML=[ENU=Help;
                                 FRA=Aide];
                      Promoted=Yes;
                      Visible=WikiLinkVisible;
                      PromotedIsBig=Yes;
                      Image=View;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 RunHelp;//IMH14
                               END;
                                }
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100281025;1 ;Action    ;
                      Name=<Action1100281059>;
                      CaptionML=[ENU=Address;
                                 FRA=Contacts];
                      Promoted=Yes;
                      Image=Note;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 //<<IMH13.ISAT.EBA
                                 OpenServHeaderAddr;
                                 //>>IMH13.ISAT.EBA
                               END;
                                }
      { 1100281074;1 ;ActionGroup;
                      CaptionML=[ENU=Communication;
                                 FRA=Communication];
                      ActionContainerType=NewDocumentItems }
      { 1100281060;2 ;Action    ;
                      Name=<Action1100281065>;
                      CaptionML=[ENU=Send Mail;
                                 FRA=Envoi de mail];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendTo;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 lSendMail@1100281000 : Codeunit 50128;
                               BEGIN
                                 lSendMail.SendMailFromServH(Rec, '');
                               END;
                                }
      { 1100281061;2 ;Action    ;
                      Name=<Action1100281068>;
                      CaptionML=[ENU=Send SMS;
                                 FRA=Envoi de SMS];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendTo;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 lType@1100281000 : 'Service,Service Header,Intervention';
                                 lSMSMgt@1100281001 : Codeunit 50225;
                               BEGIN

                                 lSMSMgt.SendSMSFromServiceHeader(lType::"Service Header",Rec,'',0, TRUE);
                               END;
                                }
      { 1100281062;2 ;Action    ;
                      Name=<Action1100281039>;
                      CaptionML=[ENU=Postponed &Interactions;
                                 FRA=Brouillons];
                      RunObject=Page 5082;
                      RunFormView=SORTING(Service No.,Service Header No.,Intervention Line No.,Date,Postponed);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Header No.=FIELD(No.);
                      PromotedCategory=Category6 }
      { 1100281024;2 ;Separator  }
      { 1100281018;2 ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Co&mments;
                                 FRA=Co&mmentaires];
                      RunObject=Page 50230;
                      RunFormView=SORTING(Source No. 2,Creation Date)
                                  ORDER(Descending)
                                  WHERE(Source Table ID=FILTER(5900|50075),
                                        Source No. 4=FILTER(''),
                                        Called From Source Table ID=FILTER(5900));
                      RunFormLink=Source No.=FIELD(Service No.),
                                  Source No. 2=FIELD(No.);
                      Promoted=Yes;
                      Image=ViewComments;
                      PromotedCategory=Category6 }
      { 1100281038;2 ;Action    ;
                      Name=<Action1100281038>;
                      CaptionML=[ENU=Interaction Log E&ntries;
                                 FRA=Ecritures &journal interaction];
                      RunObject=Page 5076;
                      RunFormView=SORTING(Service No.,Service Header No.,Intervention Line No.,Date,Postponed);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Header No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Track;
                      PromotedCategory=Category6 }
      { 1100281067;2 ;Action    ;
                      Name=<Action1100281028>;
                      CaptionML=[ENU=Service Header Attach. Document;
                                 FRA=Documents joints];
                      RunObject=Page 50015;
                      RunFormView=SORTING(Service No.,Service Document No.,Service Intervention Line No.,Creation Date);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Document No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Documents;
                      PromotedCategory=Category6 }
      { 1100281027;1 ;Action    ;
                      Name=<Action1100281023>;
                      CaptionML=[ENU=Current Tray Lines;
                                 FRA=Activit‚s en cours];
                      Image=Bins;
                      OnAction=BEGIN
                                 ServiceHeaderInfoPane.LookupTrayLines(Rec, TRUE);
                               END;
                                }
      { 1100281063;1 ;Separator  }
      { 1100281040;1 ;Action    ;
                      Name=History;
                      CaptionML=[ENU=History;
                                 FRA=Historiques];
                      Promoted=Yes;
                      Image=History;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowChangeLogs;
                               END;
                                }
      { 1100281039;1 ;Action    ;
                      Name=<Action1100281057>;
                      CaptionML=[ENU=Process Status History;
                                 FRA=Historique statut processus];
                      RunObject=Page 50156;
                      RunFormLink=Source Table ID=CONST(5900),
                                  Source Key Code 1=FIELD(No.) }
      { 1100281048;1 ;Action    ;
                      Name=ResearchHistoricAct;
                      CaptionML=[ENU=Research Historic;
                                 FRA=Historique recherche];
                      RunObject=Page 50380;
                      RunFormView=SORTING(Service No.,Service Header No.,Intervention Line No.,Entry No.);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Header No.=FIELD(No.);
                      Promoted=Yes;
                      Image=CalculateRemainingUsage;
                      PromotedCategory=Process }
      { 1100281050;1 ;Action    ;
                      Name=<Action1100281023>;
                      CaptionML=[ENU=Tray Line History;
                                 FRA=Activit‚s archiv‚es];
                      Image=Bins;
                      OnAction=BEGIN
                                 ServiceHeaderInfoPane.LookupTrayLineHist(Rec);
                               END;
                                }
      { 1100281029;1 ;Action    ;
                      Name=<Action102>;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 FRA=Statistiques];
                      Image=Statistics;
                      OnAction=BEGIN
                                 FORM.RUNMODAL(FORM::"Service Header Statistics",Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100281000;1;Group  ;
                CaptionML=[ENU=General;
                           FRA=G‚n‚ral] }

    { 1100281034;2;Field  ;
                DrillDown=No;
                SourceExpr="Process Status Description";
                Importance=Promoted;
                Style=Favorable;
                StyleExpr=TRUE }

    { 1100281059;2;Group  ;
                Visible=StatusCanceled;
                GroupType=Group }

    { 1100281058;3;Field  ;
                SourceExpr="Cancel Reason" }

    { 1100281057;2;Group  ;
                Visible=StatusClosed;
                GroupType=Group }

    { 1100281056;3;Field  ;
                SourceExpr="Closed Reason" }

    { 1100281055;2;Group  ;
                Visible=StatusSuspended;
                GroupType=Group }

    { 1100281053;3;Field  ;
                SourceExpr="Suspended Reason" }

    { 1100281014;2;Field  ;
                CaptionML=[ENU=No.;
                           FRA=Nø ligne produit];
                SourceExpr=XMLText;
                Editable=FALSE;
                ControlAddIn=[Isatech.IMH.PageIdentifaction;PublicKeyToken=c1f98940aa27b996] }

    { 1100281037;2;Field  ;
                CaptionML=[ENU=Service Order Type;
                           FRA=Type produit];
                SourceExpr=GetServiceOrderTypeDescr;
                Importance=Promoted;
                Editable=FALSE }

    { 1100281012;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Service No.";
                Importance=Additional;
                Visible=FALSE }

    { 1100281001;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=Yes;
                SourceExpr="Contact No.";
                Importance=Additional;
                OnAssistEdit=BEGIN
                               OpenContactCard;
                             END;
                              }

    { 1100281009;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr=Name;
                Importance=Promoted }

    { 1100281011;2;Field  ;
                SourceExpr=Address;
                Importance=Additional }

    { 1100281013;2;Field  ;
                SourceExpr="Address 2";
                Importance=Additional }

    { 1100281045;2;Field  ;
                SourceExpr="Address 3";
                Importance=Additional }

    { 1100281006;2;Field  ;
                Lookup=No;
                DrillDown=No;
                CaptionML=[ENU=Post Code - Country;
                           FRA=Code postal - Pays];
                SourceExpr=STRSUBSTNO('%1 - %2',"Post Code","Country/Region Code");
                Importance=Additional }

    { 1100281015;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr=City;
                Importance=Additional }

    { 1100281019;2;Field  ;
                SourceExpr="Phone No.";
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               //<<IMH15.PC
                               PhoneNoAssistEdit("Phone No.");
                               //>>IMH15.PC
                             END;
                              }

    { 1100281036;2;Field  ;
                DrillDown=No;
                SourceExpr="Contact Mobile Phone No.";
                OnAssistEdit=BEGIN
                               //<<IMH15.PC
                               PhoneNoAssistEdit("Contact Mobile Phone No.");
                               //>>IMH15.PC
                             END;
                              }

    { 1100281044;2;Field  ;
                Name=ChannelField;
                CaptionML=[ENU=Channel;
                           FRA=Canal *];
                SourceExpr=ChannelDesc;
                OnValidate=BEGIN
                             //IMH06
                             ServiceFormMgt.Code_Validate(ChannelDesc
                               ,50066
                               ,12
                               ,Channel);
                           END;

                OnLookup=BEGIN
                           //IMH06
                           ServiceFormMgt.Code_Lookup(ChannelDesc
                             ,50066
                             ,12
                             ,Channel);
                         END;
                          }

    { 1100281047;2;Field  ;
                Name=RequisitionnerField;
                CaptionML=[ENU=Requisitioner;
                           FRA=Demandeur *];
                SourceExpr=RequisitionerDesc;
                OnValidate=BEGIN
                             //IMH06
                             ServiceFormMgt.Requi_Validate(RequisitionerDesc,"Service Order Type",Requisitioner);
                           END;

                OnLookup=BEGIN
                           //IMH06
                           ServiceFormMgt.Requi_Lookup(RequisitionerDesc,"Service Order Type",Requisitioner);
                         END;
                          }

    { 1100281005;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Corporate No." }

    { 1100281033;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="Corporate Region Code";
                Importance=Additional;
                Editable=false }

    { 1100281004;2;Field  ;
                CaptionML=[ENU=Contact Job Responsibility;
                           FRA=Responsabilit‚ contact];
                SourceExpr=GetCorporateContactJobResp;
                Visible=FALSE;
                Editable=FALSE }

    { 1100281016;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Contract Form Name";
                Importance=Additional }

    { 1100281042;2;Field  ;
                CaptionML=[ENU=Context;
                           FRA=Contexte];
                SourceExpr=TextContext;
                MultiLine=Yes;
                OnValidate=BEGIN
                             UpdateContext(TextContext); //IMH10.ST
                           END;
                            }

    { 1000000002;2;Group  ;
                Visible=ClaimsVisible;
                GroupType=Group }

    { 1000000003;3;Field  ;
                SourceExpr="Claimed Service Header";
                Importance=Additional }

    { 1000000000;2;Group  ;
                Visible=ServiceHeaderClaimNo;
                GroupType=Group }

    { 1000000001;3;Field  ;
                SourceExpr="Service Header Claims No.";
                Importance=Additional;
                Visible=ServiceHeaderClaimNo }

    { 1905937801;1;Group  ;
                CaptionML=[ENU=Address;
                           FRA=Mise en oeuvre] }

    { 1100281031;2;Field  ;
                AssistEdit=Yes;
                SourceExpr=Name;
                OnAssistEdit=BEGIN
                               OpenContactCard;
                             END;
                              }

    { 1100281111;2;Field  ;
                SourceExpr="Ship-to Address Code";
                Importance=Promoted }

    { 1100281113;2;Field  ;
                SourceExpr="Ship-to Address";
                Importance=Promoted }

    { 1100281115;2;Field  ;
                SourceExpr="Ship-to Address 2";
                Importance=Additional }

    { 1100281046;2;Field  ;
                SourceExpr="Ship-to Address 3";
                Importance=Additional }

    { 1100281043;2;Field  ;
                SourceExpr="Ship-to Country/Region Code" }

    { 1100281020;2;Field  ;
                SourceExpr="Ship-to Post Code" }

    { 1100281117;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Ship-to City";
                Importance=Promoted }

    { 1100281118;2;Field  ;
                SourceExpr="Ship-to Phone";
                OnAssistEdit=BEGIN
                               //<<IMH15.PC
                               PhoneNoAssistEdit("Ship-to Phone");
                               //>>IMH15.PC
                             END;
                              }

    { 1100281052;2;Field  ;
                SourceExpr="Ship-to Mobile Phone No.";
                OnAssistEdit=BEGIN
                               //<<IMH15.PC
                               PhoneNoAssistEdit("Ship-to Mobile Phone No.");
                               //>>IMH15.PC
                             END;
                              }

    { 1000000005;2;Field  ;
                Name=OtherPhoneTypeField;
                CaptionML=[ENU=Other Phone No. Type;
                           FRA=Type t‚l. autre];
                SourceExpr=OtherPhoneTypeDesc;
                StyleExpr=TRUE;
                OnValidate=BEGIN
                             //<<IMH21.ACO
                             ServiceFormMgt.Code_Validate(OtherPhoneTypeDesc,5900,50260,"Other Phone No. Type");
                             GetServFieldDescription;
                             CurrPage.UPDATE;
                             //>>IMH21.ACO
                           END;

                OnLookup=BEGIN
                           //<<IMH21.ACO
                           ServiceFormMgt.Code_Lookup(OtherPhoneTypeDesc,5900,50260,"Other Phone No. Type");
                           GetServFieldDescription;
                           CurrPage.UPDATE;
                           //>>IMH21.ACO
                         END;
                          }

    { 1000000004;2;Field  ;
                SourceExpr="Other Phone No.";
                OnAssistEdit=BEGIN
                               //<<IMH21.ACO
                               PhoneNoAssistEdit("Other Phone No.");
                               //>>IMH21.ACO
                             END;
                              }

    { 1100281128;2;Field  ;
                ExtendedDatatype=None;
                SourceExpr="Ship-to E-Mail";
                OnAssistEdit=VAR
                               lSendMail@1100281000 : Codeunit 50128;
                             BEGIN
                               lSendMail.SendMailFromServH(Rec, "Ship-to E-Mail");
                             END;
                              }

    { 1100281026;2;Field  ;
                SourceExpr="Reimbursement Refusal Cause";
                Enabled=RefusalReasonEditable;
                Editable=RefusalReasonEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE); //IMH12.ST
                           END;
                            }

    { 1100281032;2;Field  ;
                SourceExpr="Access Condition" }

    { 1100281003;1;Part   ;
                Name=VoucherSubpage;
                CaptionML=[ENU=Reimbursement;
                           FRA=Remboursement];
                SubFormView=SORTING(Service Header No.,Line No.);
                SubFormLink=Service Header No.=FIELD(No.);
                PagePartID=Page50225;
                Enabled=VoucherSubPageEditable;
                Editable=VoucherSubPageEditable;
                PartType=Page }

    { 1100281051;1;Group  ;
                Name=Orders;
                CaptionML=[ENU=Orders;
                           FRA=Commandes];
                GroupType=Group }

    { 1100281049;2;Field  ;
                SourceExpr="Sale Order Nb" }

    { 1100281002;;Container;
                Name=FactBoxArea;
                ContainerType=FactBoxArea }

    { 1100281023;1;Part   ;
                SubFormView=WHERE(Type=CONST(TableData),
                                  ID=CONST(5900));
                SubFormLink=ID=FILTER(5900);
                PagePartID=Page50208;
                PartType=Page }

    { 1100281030;1;Part   ;
                Name=CorporatePicture;
                SubFormView=SORTING(No.);
                SubFormLink=No.=FIELD(Corporate No.);
                PagePartID=Page50248;
                PartType=Page }

    { 1100281028;1;Part   ;
                Name=CorporateInfo;
                CaptionML=[ENU=CorporateInfo;
                           FRA=Grand compte];
                SubFormView=SORTING(Service No.);
                SubFormLink=Service No.=FIELD(Service No.);
                PagePartID=Page50247;
                PartType=Page }

    { 1100281017;1;Part   ;
                Name=ContactContract;
                CaptionML=[ENU=Contract Details;
                           FRA=D‚tail formule];
                SubFormView=SORTING(Contact No.,Corporate No.,Contract Form Code,Occurence No.);
                SubFormLink=Contact No.=FIELD(Contact No.),
                            Corporate No.=FIELD(Corporate No.),
                            Contract Form Code=FIELD(Contract Form Code),
                            Occurence No.=FIELD(Contract Occurence No.),
                            Service Order Type Filter=FIELD(Service Order Type);
                PagePartID=Page50094 }

    { 1100281041;1;Part   ;
                Name=SalesHeaderDetails;
                CaptionML=[ENU=Service Header Details;
                           FRA=D‚tail ligne produit];
                SubFormView=SORTING(Document Type,No.)
                            WHERE(Document Type=CONST(Invoice));
                SubFormLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.);
                PagePartID=Page50088 }

    { 1100281069;1;Part   ;
                Name=Notes;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

    { 1100281068;1;Part   ;
                Name=Links;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

  }
  CODE
  {
    VAR
      ServiceHeaderClaimsMgt@1000000002 : Codeunit 50068;
      ServTimeReg@1100281002 : Codeunit 50070;
      ServiceLockingMgt@1100281001 : Codeunit 50071;
      ServiceHeaderInfoPane@1100281009 : Codeunit 50062;
      ServiceFormMgt@1100281014 : Codeunit 50086;
      XMLText@1100281008 : BigText;
      InterventionAllowed@1100281003 : Boolean INDATASET;
      Text001@1100281005 : TextConst 'ENU=You must enter at least one affected place;FRA=Vous devez saisir au moins un lieux touch‚';
      UserNextStepAvailable@1100281007 : Boolean INDATASET;
      ReimbursementContactVisible@1100281000 : Boolean INDATASET;
      WikiLink@1100281006 : Text[250];
      WikiLinkVisible@1100281004 : Boolean INDATASET;
      OccupierNatureDesc@1100281013 : Text[100];
      CorporateContactDesc@1100281012 : Text[100];
      ChannelDesc@1100281011 : Text[100];
      RequisitionerDesc@1100281010 : Text[100];
      ServFormMgt@1100281015 : Codeunit 50086;
      ProductCat@1100281016 : Record 50060;
      servordertype@1100281017 : Record 5903;
      TextContext@1100281018 : Text[250];
      StatusCanceled@1100281021 : Boolean INDATASET;
      StatusClosed@1100281020 : Boolean INDATASET;
      StatusSuspended@1100281019 : Boolean INDATASET;
      RefusalReasonEditable@1100281022 : Boolean INDATASET;
      VoucherSubPageEditable@1100281023 : Boolean INDATASET;
      Text002@1100281024 : TextConst 'ENU=Do you want to modify Reimbursement Contact ?;FRA=Souhaitez-vous modifier le contact remboursement ?';
      PageEditable@1100281025 : Boolean INDATASET;
      ClaimsVisible@1000000001 : Boolean INDATASET;
      ServiceHeaderClaimNo@1000000000 : Boolean INDATASET;
      OtherPhoneTypeDesc@1000000003 : Text[100];

    PROCEDURE GetServFieldDescription@1100281010();
    BEGIN
      //IMH12
      OccupierNatureDesc := ServiceFormMgt.Code_Desc(5051,50070,"Occupier Nature");
      {ResidenceTypeDesc := ServiceFormMgt.Code_Desc(5051,50071,"Residence Type");
      HousingTypeDesc := ServiceFormMgt.Code_Desc(5051,50072,"Housing Type");
      PropertyTypeDesc := ServiceFormMgt.Code_Desc(5051,50073,"Property Type");
      }
      CorporateContactDesc := ServiceFormMgt.CorporateContact_Desc("Corporate Contact No.");
      ChannelDesc := ServiceFormMgt.Code_Desc(50066,12,Channel);
      RequisitionerDesc := ServiceFormMgt.Code_Desc(50066,13,Requisitioner);

      //<<IMH21.ACO
      OtherPhoneTypeDesc := ServiceFormMgt.Code_Desc(5900, 50260, "Other Phone No. Type");
      //>>IMH21.ACO
    END;

    PROCEDURE CheckCorporateDeclaration@1100281016();
    VAR
      lText001@1100281000 : TextConst 'ENU=%1 or %2 is required;FRA=Le %1 ou %2 est obligatoire';
    BEGIN
      IF NOT "Corporate Declaration" THEN
        EXIT;
      IF ("Meeting Date" = 0D) AND ("Declaration Comment Code" = '') THEN
        ERROR(STRSUBSTNO(lText001,FIELDCAPTION("Meeting Date"),FIELDCAPTION("Declaration Comment Code")));
    END;

    LOCAL PROCEDURE OnGetRecord@1100281000();
    VAR
      lColorMgt@1100281000 : Codeunit 50088;
    BEGIN
      CALCFIELDS("User Next Step Available", Context, "Contract Form Name", "Voucher Exists");
      UserNextStepAvailable := "User Next Step Available" OR ("Process Code"='');
      TextContext := Context; //IMH10.ST
      InterventionAllowed := "Intervention Allowed";
      GetHelpLink;//IMH03
      lColorMgt.PageIdentifLoadXML(XMLText,DATABASE::"Service Header","No.",9);//IMH05
      GetServFieldDescription;//IMH06
      //<<IMH12.ST
      RefusalReasonEditable := NOT "Voucher Exists";
      VoucherSubPageEditable := "Reimbursement Refusal Cause"="Reimbursement Refusal Cause"::" ";
      //>>IMH12.ST
      //IMH07
      CurrPage.EDITABLE := ServFormMgt.ServiceEditable(Rec);
      StatusCanceled := (Status = Status::Cancelled);
      StatusClosed := (Status = Status::Finished);
      StatusSuspended := (Status = Status::Pending);

      //<<IMH17
      ClaimsVisible := ServiceHeaderClaimsMgt.ClaimsEnabled;
      ServiceHeaderClaimNo := "Service Header Claims No." <> '';
      //>>IMH117
    END;

    PROCEDURE GetHelpLink@1100281018();
    VAR
      lHelpMgt@1100281000 : Codeunit 50084;
    BEGIN
      //IMH03
      //<<IMH18
      //WikiLinkVisible := lHelpMgt.RunHelp("Process Code","Process Status No.","Service Order Type","Corporate No.",WikiLink);
      GetWikiLink(WikiLinkVisible, WikiLink);
      //>>IMH18
    END;

    PROCEDURE RunHelp@1100281011();
    BEGIN
      //IMH03
      HYPERLINK(WikiLink);
    END;

    PROCEDURE OpenServHeaderAddr@1100281001();
    VAR
      lServHeaderAddr@1100281003 : Record 50068;
      lServHeaderVoucher@1100281002 : Record 50103;
      lServHeaderVoucher2@1100281001 : Record 50103;
      lServHeaderAddrList@1100281000 : Page 50078;
    BEGIN
      //<<IMH13.ISAT.EBA
      lServHeaderAddr.FILTERGROUP(2);
      lServHeaderAddr.SETRANGE("Service Header No.","No.");
      lServHeaderAddr.FILTERGROUP(0);

      lServHeaderAddrList.SETTABLEVIEW(lServHeaderAddr);
      lServHeaderAddrList.LOOKUPMODE(TRUE);
      lServHeaderAddrList.EDITABLE(TRUE);
      IF lServHeaderAddrList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        lServHeaderAddrList.GETRECORD(lServHeaderAddr);
        IF (lServHeaderAddr."Address Type" = lServHeaderAddr."Address Type"::Voucher) AND
          (lServHeaderAddr."Beneficiary Contact No." <> '')
        THEN BEGIN
          lServHeaderVoucher.RESET;
          lServHeaderVoucher.SETRANGE("Service Header No.","No.");
          lServHeaderVoucher.SETRANGE(Post,FALSE);
          lServHeaderVoucher.SETFILTER("Reimbursement Contact No.",'<>%1',lServHeaderAddr."Beneficiary Contact No.");
          IF lServHeaderVoucher.ISEMPTY THEN
            EXIT;
          IF NOT CONFIRM(Text002) THEN
            EXIT;
          lServHeaderVoucher.LOCKTABLE;
          lServHeaderVoucher.FINDSET;
          REPEAT
            lServHeaderVoucher2 := lServHeaderVoucher;
            lServHeaderVoucher2."Reimbursement Contact No." := lServHeaderAddr."Beneficiary Contact No.";
            lServHeaderVoucher2.MODIFY;
          UNTIL lServHeaderVoucher.NEXT = 0;
        END;
      END;
      //>>IMH13.ISAT.EBA
    END;

    BEGIN
    {
      /** @r IMH22 @d 15/04/14 @a ISAT.PC @v IMH6.01.P011 @s New Provider Search
          @c Add new action Research Historic in Process Category */
      /** @r IMH21 @d 19/06/13 @a ISAT.ACO @v IMH6.01.347 @s JUIN @h 4387
          @c Ajout champs "Other Phone No. Type" et "Other Phone No." */
      /** @r IMH20 @d 13/02/13 @a ISAT.PC @v IMH6.01.215 @h 4121 @s Ajout "Create date" sur la cl‚ secontraire
          @c modification de la propri‚t‚ RunFormView de l'action document joint
          @c de SORTING(Service No.,Service Document No.,Service Intervention Line No.,Intervention Quote Line No.)
          @c a SORTING(Service No.,Service Document No.,Service Intervention Line No.,Creation Date)
      /** @r IMH19 @d 28/09/12 @a ISAT.ML @v IMH6.01.213 @s Projet SMS @c ajout fonctionnalit‚ send SMS */
      /** @r IMH18 @d 18/07/12 @a ISAT.PC @v IMH6.01.226 @s version 1.4 @h 3537 @c Lien Wiki intervention */
      /** @r IMH17 @d 17/02/12 @a ISAT.ST @v IMH6.01.108 @s Interactions @c Envoi mail / fax */
      /** @r IMH16 @d 16/01/12 @a ISAT.ZW @v IMH6.01.129 @s R‚clamation @c Ajout champs r‚clamation */
      /** @r IMH15 @d 14/01/12 @a ISAT.PC @v IMH6.01.129 @s CTI @c Ajout du dev pour la partie CTI */
      /** @r IMH14 @d 05/12/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Verrou service pour les fonction */
      /** @r IMH13 @d 07/11/11 @a ISAT.EBA @v IMH6.01.011 @s Gestion du service
          @c Ajout fonction  "OpenServHeaderAddr" */
      /** @r IMH12 @d 25/10/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Ergo motif refus */
      /** @r IMH11 @d 01/09/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Affichage nom formule */
      /** @r IMH10 @d 29/08/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Ajout champ Context
          @c Suppression test canal, demandeur, franchise */
      /** @r IHM09 @d 07/06/10 @a ISAT.VA @v IMH6.01.011 @s Gestion des services @c Ne pas tester la franchise si elle n'est pas affich */
      /** @r IHM08 @d 06/06/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion des services @c Ajout fonction Historiques */
      /** @r IHM07 @d 31/05/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion des services @c service FUsion non editable */
      /** @r IMH06 @d 11/03/11 @a ISAT.LLT @v IMH6.01.123 @s Saisie champs description */
      /** @r IMH05 @d 08/03/11 @a ISAT.LLT @v IMH6.01.122 @s Gestion des commentaires @c Changement accŠs form commentaires
          @c Ajout couleur */
      /** @r IHM04 @d 04/03/10 @a ISAT.ZW @v IMH6.01.004 @s GED @c renomer interaction report‚ en Brouillons */
      /** @r IMH03 @d 01/03/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout lien WIKI */
      /** @r IMH02 @d 25/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c description statut en gras */
      /** @r IMH01 @d 17/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Cr‚ation */
    }
    END.
  }
}