OBJECT Page 50223 Service Hdr Remote Costing
{
  OBJECT-PROPERTIES
  {
    Date=24/04/14;
    Time=12:05:02;
    Modified=Yes;
    Version List=IMH6.01,JUIN,IMH6.01.P011;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Header Remote Costing;
               FRA=Fiche ligne produit t‚l‚chiffrage];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table5900;
    PopulateAllFields=Yes;
    SourceTableView=SORTING(Document Type,No.)
                    WHERE(Document Type=FILTER(Invoice));
    PageType=Card;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Intervention,Additional,Communication,Help;
                                FRA=Nouveau,Processus,Etat,Intervention,Compl‚ment,Communication,Aide];
    ShowFilter=No;
    OnOpenPage=VAR
                 lWinShell@1100281000 : Codeunit 50094;
               BEGIN
                 ServTimeReg.OpenObjectID(CurrPage.OBJECTID(FALSE));
                 IF "No." <> '' THEN BEGIN
                   SETRANGE("No.","No.");
                   OnGetRecord;
                 END;
                 IF ServiceLockingMgt.ServiceHeaderCard_GetLock(Rec,TRUE) THEN BEGIN
                   CurrPage.EDITABLE := TRUE;
                   lWinShell.EditMode;
                 END ELSE BEGIN
                   CurrPage.EDITABLE := FALSE;
                 END;
                 PageEditable := CurrPage.EDITABLE;  //IMH12
                 //IMH07
                 //CurrPage.EDITABLE := ServFormMgt.ServiceEditable(Rec) AND (NOT "Fusion Service");
               END;

    OnClosePage=BEGIN
                  ServTimeReg.CloseObject;
                  ServiceLockingMgt.ServiceHeaderCard_ReleaseLock(Rec);
                END;

    OnAfterGetRecord=BEGIN
                       ServTimeReg.OnAfterGetServiceHeaderRecord(Rec);
                       InitSHCosting;

                       OnGetRecord;
                     END;

    OnQueryClosePage=BEGIN
                       IF CloseAction IN [ACTION::LookupOK,ACTION::OK,ACTION::Yes,ACTION::Close] THEN BEGIN
                         ModifySHCosting;
                       END;
                     END;

    ActionList=ACTIONS
    {
      { 1100281008;0 ;ActionContainer;
                      Name=Action;
                      ActionContainerType=ActionItems }
      { 1100281058;1 ;Action    ;
                      Name=<Action1100281063>;
                      CaptionML=[ENU=SERVICE;
                                 FRA=LIGNE PRODUIT];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NewSparkle;
                      OnAction=BEGIN
                                 IF TRUE THEN;
                               END;
                                }
      { 1100281007;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 FRA=Fonction&s] }
      { 1100281027;2 ;Action    ;
                      Name=<Action1100281110>;
                      CaptionML=[ENU=Create Intervention;
                                 FRA=Cr‚er intervention];
                      Promoted=Yes;
                      Visible=InterventionAllowed;
                      Enabled=PageEditable;
                      PromotedIsBig=Yes;
                      Image=AddAction;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 TestBeforeAction;
                                 CreateServiceInterventionLine(FALSE);
                               END;
                                }
      { 1000000005;2 ;Action    ;
                      Name=<Action1100281095>;
                      CaptionML=[ENU=Force Provider Assignment;
                                 FRA=Assignation directe prestataire];
                      Visible=CreateProviderDirectVisible;
                      Enabled=PageEditable;
                      Image=AddAction;
                      OnAction=BEGIN
                                 //IMH16
                                 TestBeforeAction;
                                 DirectCreateInervLine(FALSE);
                               END;
                                }
      { 1100281026;2 ;Separator  }
      { 1100281025;2 ;Action    ;
                      Name=<Action1100281069>;
                      CaptionML=[ENU=Create Tray Line;
                                 FRA=Cr‚er activit‚ corbeille];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      Image=BinContent;
                      OnAction=VAR
                                 lTrayLineMgt@1100281000 : Codeunit 50050;
                               BEGIN
                                 lTrayLineMgt.CreateTLFromServHeader(Rec, '', '', TRUE);  //IMH03 isat.zw
                               END;
                                }
      { 1100281029;2 ;Action    ;
                      Name=Create Interact;
                      CaptionML=[ENU=Create &Interact;
                                 FRA=Cr‚er &interaction];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      Image=CreateInteraction;
                      OnAction=BEGIN
                                 //IMH06 isat.zw
                                 CreateInteraction;
                               END;
                                }
      { 1100281077;2 ;Separator  }
      { 1100281054;2 ;Action    ;
                      Name=<Action1100281053>;
                      CaptionML=[ENU=Next Step;
                                 FRA=Etape suivante];
                      Promoted=Yes;
                      Visible=UserNextStepAvailable;
                      Enabled=PageEditable;
                      PromotedIsBig=Yes;
                      Image=SelectItemSubstitution;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lProcessServHeaderMgt@1100281000 : Codeunit 50043;
                               BEGIN
                                 lProcessServHeaderMgt.SelectNextStep(Rec);
                               END;
                                }
      { 1100281074;1 ;Action    ;
                      Name=HelpAction;
                      CaptionML=[ENU=Help;
                                 FRA=Aide];
                      Promoted=Yes;
                      Visible=WikiLinkVisible;
                      PromotedIsBig=Yes;
                      Image=View;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 RunHelp;//IMH14
                               END;
                                }
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100281059;1 ;Action    ;
                      Name=<Action1100281059>;
                      CaptionML=[ENU=Address;
                                 FRA=Contacts];
                      RunObject=Page 50078;
                      RunFormView=SORTING(Service Header No.,Address Type,Address No.);
                      RunFormLink=Service Header No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Note;
                      PromotedCategory=Category5 }
      { 1100281022;1 ;Action    ;
                      Name=<Action1100281030>;
                      CaptionML=[ENU=Affected Locations;
                                 FRA=Descriptif des travaux];
                      RunObject=Page 50089;
                      RunFormView=SORTING(Service Header No.,Affected Location Code,Speciality Code);
                      RunFormLink=Service Header No.=FIELD(No.);
                      Promoted=Yes;
                      Image=MaintenanceRegistrations;
                      PromotedCategory=Category5 }
      { 1100281031;1 ;ActionGroup;
                      CaptionML=[ENU=Communication;
                                 FRA=Communication];
                      ActionContainerType=NewDocumentItems }
      { 1100281101;2 ;Action    ;
                      Name=<Action1100281065>;
                      CaptionML=[ENU=Send Mail;
                                 FRA=Envoi de mail];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendTo;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 lSendMail@1100281000 : Codeunit 50128;
                               BEGIN
                                 lSendMail.SendMailFromServH(Rec, '');
                               END;
                                }
      { 1100281038;2 ;Action    ;
                      Name=<Action1100281039>;
                      CaptionML=[ENU=Postponed &Interactions;
                                 FRA=Brouillons];
                      RunObject=Page 5082;
                      RunFormView=SORTING(Service No.,Service Header No.,Intervention Line No.,Date,Postponed);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Header No.=FIELD(No.) }
      { 1100281046;2 ;Separator  }
      { 1100281017;2 ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Co&mments;
                                 FRA=Co&mmentaires];
                      RunObject=Page 50230;
                      RunFormView=SORTING(Source No. 2,Creation Date)
                                  ORDER(Descending)
                                  WHERE(Source Table ID=FILTER(5900|50075),
                                        Source No. 4=FILTER(''),
                                        Called From Source Table ID=FILTER(5900));
                      RunFormLink=Source No.=FIELD(Service No.),
                                  Source No. 2=FIELD(No.);
                      Promoted=Yes;
                      Image=ViewComments;
                      PromotedCategory=Category6 }
      { 1100281047;2 ;Action    ;
                      Name=<Action1100281038>;
                      CaptionML=[ENU=Interaction Log E&ntries;
                                 FRA=Ecritures &journal interaction];
                      RunObject=Page 5076;
                      RunFormView=SORTING(Service No.,Service Header No.,Intervention Line No.,Date,Postponed);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Header No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Track;
                      PromotedCategory=Category6 }
      { 1100281073;2 ;Action    ;
                      Name=<Action1100281028>;
                      CaptionML=[ENU=Service Header Attach. Document;
                                 FRA=Documents joints];
                      RunObject=Page 50015;
                      RunFormView=SORTING(Service No.,Service Document No.,Service Intervention Line No.,Creation Date);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Document No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Documents;
                      PromotedCategory=Category6 }
      { 1100281028;1 ;Action    ;
                      Name=<Action1100281023>;
                      CaptionML=[ENU=Current Tray Lines;
                                 FRA=Activit‚s en cours];
                      Image=Bins;
                      OnAction=BEGIN
                                 ServiceHeaderInfoPane.LookupTrayLines(Rec, TRUE);
                               END;
                                }
      { 1100281021;1 ;Action    ;
                      Name=Interventions;
                      CaptionML=[ENU=Interventions;
                                 FRA=Interventions];
                      RunObject=Page 50069;
                      RunFormView=SORTING(Service Header No.,Line No.);
                      RunFormLink=Service Header No.=FIELD(No.);
                      Image=Components;
                      PromotedCategory=Category5 }
      { 1100281061;1 ;Separator  }
      { 1100281086;1 ;Action    ;
                      Name=History;
                      CaptionML=[ENU=History;
                                 FRA=Historiques];
                      Promoted=Yes;
                      Image=History;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowChangeLogs;
                               END;
                                }
      { 1100281051;1 ;Action    ;
                      Name=<Action1100281057>;
                      CaptionML=[ENU=Process Status History;
                                 FRA=Historique statut processus];
                      RunObject=Page 50156;
                      RunFormLink=Source Table ID=CONST(5900),
                                  Source Key Code 1=FIELD(No.) }
      { 1100281102;1 ;Action    ;
                      Name=ResearchHistoricAct;
                      CaptionML=[ENU=Research Historic;
                                 FRA=Historique recherche];
                      RunObject=Page 50380;
                      RunFormView=SORTING(Service No.,Service Header No.,Intervention Line No.,Entry No.);
                      RunFormLink=Service No.=FIELD(Service No.),
                                  Service Header No.=FIELD(No.);
                      Promoted=Yes;
                      Image=CalculateRemainingUsage;
                      PromotedCategory=Process }
      { 1100281057;1 ;Action    ;
                      Name=<Action1100281023>;
                      CaptionML=[ENU=Tray Line History;
                                 FRA=Activit‚s archiv‚es];
                      Image=Bins;
                      OnAction=BEGIN
                                 ServiceHeaderInfoPane.LookupTrayLineHist(Rec);
                               END;
                                }
      { 1100281041;1 ;Action    ;
                      Name=<Action102>;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 FRA=Statistiques];
                      Image=Statistics;
                      OnAction=BEGIN
                                 FORM.RUNMODAL(FORM::"Service Header Statistics",Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100281000;1;Group  ;
                CaptionML=[ENU=General;
                           FRA=G‚n‚ral] }

    { 1100281098;2;Field  ;
                DrillDown=No;
                SourceExpr="Process Status Description";
                Importance=Promoted;
                Style=Favorable;
                StyleExpr=TRUE }

    { 1100281097;2;Group  ;
                Visible=StatusCanceled;
                GroupType=Group }

    { 1100281096;3;Field  ;
                SourceExpr="Cancel Reason" }

    { 1100281095;2;Group  ;
                Visible=StatusClosed;
                GroupType=Group }

    { 1100281094;3;Field  ;
                SourceExpr="Closed Reason" }

    { 1100281093;2;Group  ;
                Visible=StatusSuspended;
                GroupType=Group }

    { 1100281092;3;Field  ;
                SourceExpr="Suspended Reason" }

    { 1100281079;2;Field  ;
                CaptionML=[ENU=No.;
                           FRA=Nø ligne produit];
                SourceExpr=XMLText;
                Editable=FALSE;
                ControlAddIn=[Isatech.IMH.PageIdentifaction;PublicKeyToken=c1f98940aa27b996] }

    { 1100281037;2;Field  ;
                CaptionML=[ENU=Service Order Type;
                           FRA=Type produit];
                SourceExpr=GetServiceOrderTypeDescr;
                Importance=Promoted;
                Editable=FALSE }

    { 1100281012;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Service No.";
                Importance=Additional }

    { 1100281001;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Contact No.";
                OnAssistEdit=BEGIN
                               OpenContactCard;
                             END;
                              }

    { 1100281009;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr=Name;
                Importance=Promoted }

    { 1100281011;2;Field  ;
                SourceExpr=Address;
                Importance=Additional }

    { 1100281013;2;Field  ;
                SourceExpr="Address 2";
                Importance=Additional }

    { 1100281089;2;Field  ;
                SourceExpr="Address 3";
                Importance=Additional }

    { 1100281006;2;Field  ;
                Lookup=No;
                DrillDown=No;
                CaptionML=[ENU=Post Code - Country;
                           FRA=Code postal - Pays];
                SourceExpr=STRSUBSTNO('%1 - %2',"Post Code","Country/Region Code");
                Importance=Additional }

    { 1100281015;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr=City;
                Importance=Additional }

    { 1100281019;2;Field  ;
                SourceExpr="Phone No.";
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               //<<IMH13.PC
                               PhoneNoAssistEdit("Phone No.");
                               //>>IMH13.PC
                             END;
                              }

    { 1100281082;2;Field  ;
                Name=ChannelField;
                CaptionML=[ENU=Channel;
                           FRA=Canal *];
                SourceExpr=ChannelDesc;
                OnValidate=BEGIN
                             //IMH06
                             ServiceFormMgt.Code_Validate(ChannelDesc
                               ,50066
                               ,12
                               ,Channel);
                           END;

                OnLookup=BEGIN
                           //IMH06
                           ServiceFormMgt.Code_Lookup(ChannelDesc
                             ,50066
                             ,12
                             ,Channel);
                         END;
                          }

    { 1100281080;2;Field  ;
                Name=RequisitionnerField;
                CaptionML=[ENU=Requisitioner;
                           FRA=Demandeur *];
                SourceExpr=RequisitionerDesc;
                OnValidate=BEGIN
                             //IMH06
                             ServiceFormMgt.Code_Validate(RequisitionerDesc
                               ,50066
                               ,13
                               ,Requisitioner);
                           END;

                OnLookup=BEGIN
                           //IMH06
                           ServiceFormMgt.Code_Lookup(RequisitionerDesc
                             ,50066
                             ,13
                             ,Requisitioner);
                         END;
                          }

    { 1100281005;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Corporate No." }

    { 1100281036;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="Corporate Region Code";
                Importance=Additional;
                Editable=false }

    { 1100281050;2;Field  ;
                SourceExpr="Corporate Contact No.";
                Visible=FALSE;
                OnLookup=BEGIN
                           OnLookUpCorporateContactNo;
                           CALCFIELDS("Corporate Contact Name");
                         END;

                OnAssistEdit=VAR
                               lContact@1100281000 : Record 5050;
                             BEGIN
                               IF lContact.GET("Corporate Contact No.") THEN
                                 PAGE.RUN(PAGE::"Contact Card", lContact);
                             END;
                              }

    { 1100281043;2;Field  ;
                Name=CorporateContact;
                CaptionML=[ENU=Corporate Contact;
                           FRA=Contact grand compte];
                SourceExpr=CorporateContactDesc;
                OnValidate=BEGIN
                             //IMH15
                             ServiceFormMgt.CorporateContact_Validate(CorporateContactDesc
                               ,"Corporate No."
                               ,"Corporate Region Code"
                               ,"Corporate Contact No.")
                           END;

                OnLookup=BEGIN
                           //IMH15
                           ServiceFormMgt.CorporateContact_Lookup(CorporateContactDesc
                             ,"Corporate No."
                             ,"Corporate Region Code"
                             ,"Corporate Contact No.")
                         END;

                OnAssistEdit=VAR
                               lContact@1100281000 : Record 5050;
                             BEGIN
                               IF lContact.GET("Corporate Contact No.") THEN
                                 PAGE.RUN(PAGE::"Contact Card", lContact);
                             END;
                              }

    { 1100281075;2;Field  ;
                CaptionML=[ENU=Contact Job Responsibility;
                           FRA=Responsabilit‚ contact];
                SourceExpr=GetCorporateContactJobResp;
                Editable=FALSE }

    { 1100281003;2;Field  ;
                SourceExpr="VIP Code";
                Importance=Additional }

    { 1100281016;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Contract Form Name";
                Importance=Additional }

    { 1100281014;2;Field  ;
                SourceExpr=TeleExpert }

    { 1100281087;2;Field  ;
                SourceExpr="Fusion Reference No." }

    { 1100281023;2;Field  ;
                CaptionML=[ENU=Context;
                           FRA=Contexte];
                SourceExpr=TextContext;
                MultiLine=Yes;
                OnValidate=BEGIN
                             UpdateContext(TextContext); //IMH10.ST
                           END;
                            }

    { 1000000002;2;Group  ;
                Visible=ClaimsVisible;
                GroupType=Group }

    { 1000000003;3;Field  ;
                SourceExpr="Claimed Service Header";
                Importance=Additional }

    { 1000000000;2;Group  ;
                Visible=ServiceHeaderClaimNo;
                GroupType=Group }

    { 1000000001;3;Field  ;
                SourceExpr="Service Header Claims No.";
                Importance=Additional;
                Visible=ServiceHeaderClaimNo }

    { 1905937801;1;Group  ;
                CaptionML=[ENU=Address;
                           FRA=Mise en oeuvre] }

    { 1100281033;2;Field  ;
                AssistEdit=Yes;
                SourceExpr=Name;
                OnAssistEdit=BEGIN
                               OpenContactCard;
                             END;
                              }

    { 1100281111;2;Field  ;
                SourceExpr="Ship-to Address Code";
                Importance=Promoted }

    { 1100281113;2;Field  ;
                SourceExpr="Ship-to Address";
                Importance=Promoted }

    { 1100281115;2;Field  ;
                SourceExpr="Ship-to Address 2";
                Importance=Additional }

    { 1100281090;2;Field  ;
                SourceExpr="Ship-to Address 3";
                Importance=Additional }

    { 1100281088;2;Field  ;
                SourceExpr="Ship-to Country/Region Code" }

    { 1100281020;2;Field  ;
                SourceExpr="Ship-to Post Code" }

    { 1100281117;2;Field  ;
                Lookup=No;
                DrillDown=No;
                SourceExpr="Ship-to City";
                Importance=Promoted }

    { 1100281118;2;Field  ;
                SourceExpr="Ship-to Phone";
                OnAssistEdit=BEGIN
                               //<<IMH13.PC
                               PhoneNoAssistEdit("Ship-to Phone");
                               //>>IMH13.PC
                             END;
                              }

    { 1100281091;2;Field  ;
                SourceExpr="Ship-to Mobile Phone No.";
                OnAssistEdit=BEGIN
                               //<<IMH13.PC
                               PhoneNoAssistEdit("Ship-to Mobile Phone No.");
                               //>>IMH13.PC
                             END;
                              }

    { 1000000006;2;Field  ;
                Name=OtherPhoneTypeField;
                CaptionML=[ENU=Other Phone No. Type;
                           FRA=Type t‚l. autre];
                SourceExpr=OtherPhoneTypeDesc;
                StyleExpr=TRUE;
                OnValidate=BEGIN
                             //<<IMH19.ACO
                             ServiceFormMgt.Code_Validate(OtherPhoneTypeDesc,5900,50260,"Other Phone No. Type");
                             GetServFieldDescription;
                             CurrPage.UPDATE;
                             //>>IMH19.ACO
                           END;

                OnLookup=BEGIN
                           //<<IMH19.ACO
                           ServiceFormMgt.Code_Lookup(OtherPhoneTypeDesc,5900,50260,"Other Phone No. Type");
                           GetServFieldDescription;
                           CurrPage.UPDATE;
                           //>>IMH19.ACO
                         END;
                          }

    { 1000000004;2;Field  ;
                SourceExpr="Other Phone No.";
                OnAssistEdit=BEGIN
                               //<<IMH19.ACO
                               PhoneNoAssistEdit("Other Phone No.");
                               //>>IMH19.ACO
                             END;
                              }

    { 1100281128;2;Field  ;
                ExtendedDatatype=None;
                SourceExpr="Ship-to E-Mail";
                OnAssistEdit=VAR
                               lSendMail@1100281000 : Codeunit 50128;
                             BEGIN
                               lSendMail.SendMailFromServH(Rec, "Ship-to E-Mail");
                             END;
                              }

    { 1100281048;2;Field  ;
                Name=OccupierNature;
                CaptionML=[ENU=Occupier Nature;
                           FRA=Nature de l'occupant];
                SourceExpr=OccupierNatureDesc;
                Editable=FALSE }

    { 1100281081;2;Field  ;
                SourceExpr="Access Condition" }

    { 1100281039;1;Part   ;
                CaptionML=[ENU=Affected Locations;
                           FRA=Descriptif des travaux];
                SubFormView=SORTING(Service Header No.,Affected Location Code);
                SubFormLink=Service Header No.=FIELD(No.);
                PagePartID=Page50227 }

    { 1100281070;1;Group  ;
                CaptionML=[ENU=Costing;
                           FRA=Chiffrage];
                GroupType=Group }

    { 1100281069;2;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                CaptionML=[ENU=Service Cause Description;
                           FRA=D‚signation cause intervention];
                SourceExpr=ServiceCauseDescription;
                Editable=FALSE }

    { 1100281068;2;Field  ;
                CaptionML=[ENU=Expertise Date;
                           FRA=Date expertise];
                SourceExpr=ExpertiseDate }

    { 1100281067;2;Field  ;
                CaptionML=[ENU=Unsecured Depreciation Amount;
                           FRA=V‚tust‚ non garantie mtt];
                SourceExpr=UnsecuredDepAmount }

    { 1100281066;2;Field  ;
                CaptionML=[ENU=Unsecured Depreciation %;
                           FRA=V‚tust‚ non garantie %];
                SourceExpr=UnsecuredDepPct }

    { 1100281065;2;Field  ;
                CaptionML=[ENU=Estimated Work Amount (max);
                           FRA=Montant estim‚ des travaux HT (min)];
                SourceExpr=EstWorkAmountMin }

    { 1100281064;2;Field  ;
                CaptionML=[ENU=Estimated Work Amount (max);
                           FRA=Montant estim‚ des travaux HT (max)];
                SourceExpr=EstWorkAmountMax }

    { 1100281083;2;Field  ;
                SourceExpr="Est. Suite Amt Excl. VAT" }

    { 1100281084;2;Field  ;
                SourceExpr="Est. Suite Amt Incl. VAT" }

    { 1100281063;2;Field  ;
                CaptionML=[ENU=Estimated Work Amount (max);
                           FRA=Montant franchise … pr‚lever];
                SourceExpr=DeducAmountToCollect }

    { 1100281085;2;Field  ;
                SourceExpr="Indemnity Mode" }

    { 1100281062;2;Field  ;
                CaptionML=[ENU=Closing Cause;
                           FRA=Motif de cl“ture];
                OptionCaptionML=[ENU=" ,Expert Report,Deficiency,End Of Mission";
                                 FRA=" ,Rapport d'expertise,Carence,Fin de mission"];
                SourceExpr=ClosingCause;
                OnValidate=BEGIN
                             OnValidateClosingCause;
                           END;
                            }

    { 1100281056;2;Group  ;
                Visible=IndemVisible;
                GroupType=Group }

    { 1100281055;3;Field  ;
                CaptionML=[ENU=Auto Repair;
                           FRA=Auto r‚paration];
                SourceExpr=AutoRepair;
                OnValidate=BEGIN
                             AutoRepairEnabled := AutoRepair;
                           END;
                            }

    { 1100281010;3;Group  ;
                Visible=AutoRepairEnabled;
                GroupType=Group }

    { 1100281049;4;Field  ;
                CaptionML=[ENU=Auto Repair Amount;
                           FRA=Montant HT auto r‚paration];
                SourceExpr=AutoRepairAmount;
                OnValidate=BEGIN
                             CheckAmount(0);
                           END;
                            }

    { 1100281044;4;Field  ;
                CaptionML=[ENU=Auto Repair Amount Incl. VAT;
                           FRA=Montant TTC auto r‚paration];
                SourceExpr=AutoRepairAmountInclVAT;
                OnValidate=BEGIN
                             CheckAmount(0);
                           END;
                            }

    { 1100281042;3;Field  ;
                CaptionML=[ENU=Nature Repair;
                           FRA=R‚paration en nature];
                SourceExpr=NatureRepair;
                OnValidate=BEGIN
                             NatureRepairEnabled := NatureRepair;
                           END;
                            }

    { 1100281072;3;Group  ;
                Visible=NatureRepairEnabled;
                GroupType=Group }

    { 1100281040;4;Field  ;
                CaptionML=[ENU=Auto Repair Amount;
                           FRA=Montant HT r‚paration en nature];
                SourceExpr=NatureRepairAmount;
                OnValidate=BEGIN
                             CheckAmount(1);
                           END;
                            }

    { 1100281035;4;Field  ;
                CaptionML=[ENU=Auto Repair Amount Incl. VAT;
                           FRA=Montant TTC r‚paration en nature];
                SourceExpr=NatureRepairAmountInclVAT;
                OnValidate=BEGIN
                             CheckAmount(1);
                           END;
                            }

    { 1100281032;3;Field  ;
                CaptionML=[ENU=Financial Compensation;
                           FRA=Indemnisation p‚cuniaire];
                SourceExpr=FinancialCompensation;
                OnValidate=BEGIN
                             FinComEnabled := FinancialCompensation;
                           END;
                            }

    { 1100281071;3;Group  ;
                Visible=FinComEnabled;
                GroupType=Group }

    { 1100281030;4;Field  ;
                CaptionML=[ENU=Auto Repair Amount;
                           FRA=Montant HT indemn. p‚cuniaire];
                SourceExpr=FinCompAmount;
                OnValidate=BEGIN
                             CheckAmount(2);
                           END;
                            }

    { 1100281024;4;Field  ;
                CaptionML=[ENU=Auto Repair Amount Incl. VAT;
                           FRA=Montant TTC indemn. p‚cuniaire];
                SourceExpr=FinCompAmountInclVAT;
                OnValidate=BEGIN
                             CheckAmount(2);
                           END;
                            }

    { 1100281034;1;Part   ;
                Name=InterventionLines;
                CaptionML=[ENU=Interventions Lines;
                           FRA=Liste des interventions];
                SubFormView=SORTING(Service Header No.,Line No.);
                SubFormLink=Service Header No.=FIELD(No.);
                PagePartID=Page50074 }

    { 1100281100;1;Group  ;
                Name=Orders;
                CaptionML=[ENU=Orders;
                           FRA=Commandes];
                GroupType=Group }

    { 1100281099;2;Field  ;
                SourceExpr="Sale Order Nb" }

    { 1100281076;2;Field  ;
                SourceExpr="Purchase Order Nb" }

    { 1100281002;0;Container;
                Name=FactBoxArea;
                ContainerType=FactBoxArea }

    { 1100281078;1;Part   ;
                SubFormView=WHERE(Type=CONST(TableData),
                                  ID=CONST(5900));
                SubFormLink=ID=FILTER(5900);
                PagePartID=Page50208;
                PartType=Page }

    { 1100281053;1;Part   ;
                Name=CorporatePicture;
                SubFormView=SORTING(No.);
                SubFormLink=No.=FIELD(Corporate No.);
                PagePartID=Page50248;
                PartType=Page }

    { 1100281052;1;Part   ;
                Name=CorporateInfo;
                CaptionML=[ENU=CorporateInfo;
                           FRA=Grand compte];
                SubFormView=SORTING(Service No.);
                SubFormLink=Service No.=FIELD(Service No.);
                PagePartID=Page50247;
                PartType=Page }

    { 1100281018;1;Part   ;
                Name=ContactContract;
                CaptionML=[ENU=Contract Details;
                           FRA=D‚tail formule];
                SubFormView=SORTING(Contact No.,Corporate No.,Contract Form Code,Occurence No.);
                SubFormLink=Contact No.=FIELD(Contact No.),
                            Corporate No.=FIELD(Corporate No.),
                            Contract Form Code=FIELD(Contract Form Code),
                            Occurence No.=FIELD(Contract Occurence No.),
                            Service Order Type Filter=FIELD(Service Order Type);
                PagePartID=Page50094 }

    { 1100281045;1;Part   ;
                Name=SalesHeaderDetails;
                CaptionML=[ENU=Service Header Details;
                           FRA=D‚tail ligne produit];
                SubFormView=SORTING(Document Type,No.)
                            WHERE(Document Type=CONST(Invoice));
                SubFormLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.);
                PagePartID=Page50088 }

    { 1100281060;1;Part   ;
                Name=Notes;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

    { 1100281004;1;Part   ;
                Name=Links;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

  }
  CODE
  {
    VAR
      SHCosting@1100281000 : Record 50101;
      ServiceOrderType@1100281004 : Record 5903;
      ServiceHeaderClaimsMgt@1000000002 : Codeunit 50068;
      ServTimeReg@1100281002 : Codeunit 50070;
      ServiceLockingMgt@1100281001 : Codeunit 50071;
      ServiceHeaderInfoPane@1100281010 : Codeunit 50062;
      ServiceFormMgt@1100281035 : Codeunit 50086;
      UserSpecialPermission@1000000004 : Codeunit 50093;
      XMLText@1100281034 : BigText;
      ServiceCauseDescription@1100281030 : Text[50];
      InterventionAllowed@1100281006 : Boolean INDATASET;
      DeductibleAmountVisible@1100281007 : Boolean INDATASET;
      UserNextStepAvailable@1100281008 : Boolean INDATASET;
      Text001@1100281009 : TextConst 'ENU=Field Urgent is required;FRA=Champ Urgent obligatoire';
      AutoRepairEnabled@1100281012 : Boolean INDATASET;
      NatureRepairEnabled@1100281011 : Boolean INDATASET;
      FinComEnabled@1100281005 : Boolean INDATASET;
      IndemVisible@1100281003 : Boolean INDATASET;
      ExpertiseDate@1100281013 : Date;
      UnsecuredDepAmount@1100281014 : Decimal;
      UnsecuredDepPct@1100281015 : Decimal;
      EstWorkAmountMin@1100281016 : Decimal;
      EstWorkAmountMax@1100281017 : Decimal;
      DeducAmountToCollect@1100281018 : Decimal;
      ClosingCause@1100281019 : ' ,ExpertReport,Deficiency,EndOfMission';
      AutoRepair@1100281020 : Boolean;
      AutoRepairAmount@1100281021 : Decimal;
      AutoRepairAmountInclVAT@1100281022 : Decimal;
      NatureRepair@1100281023 : Boolean;
      NatureRepairAmount@1100281024 : Decimal;
      NatureRepairAmountInclVAT@1100281025 : Decimal;
      FinancialCompensation@1100281026 : Boolean;
      FinCompAmount@1100281027 : Decimal;
      FinCompAmountInclVAT@1100281028 : Decimal;
      Text002@1100281029 : TextConst 'ENU=" ,Expert Report,Deficiency,End Of Mission";FRA=" ,Rapport d''expertise,Carence,Fin de mission"';
      WikiLink@1100281032 : Text[250];
      WikiLinkVisible@1100281031 : Boolean INDATASET;
      Text003@1100281033 : TextConst 'ENU=%1 must not be < to %2;FRA=%1 ne peut ˆtre < … %2';
      OccupierNatureDesc@1100281039 : Text[100];
      CorporateContactDesc@1100281038 : Text[100];
      ChannelDesc@1100281037 : Text[100];
      RequisitionerDesc@1100281036 : Text[100];
      ServFormMgt@1100281040 : Codeunit 50086;
      TextContext@1100281041 : Text[250];
      StatusCanceled@1100281044 : Boolean INDATASET;
      StatusClosed@1100281043 : Boolean INDATASET;
      StatusSuspended@1100281042 : Boolean INDATASET;
      PageEditable@1100281045 : Boolean INDATASET;
      ClaimsVisible@1000000001 : Boolean INDATASET;
      ServiceHeaderClaimNo@1000000000 : Boolean INDATASET;
      CreateProviderDirectVisible@1000000003 : Boolean INDATASET;
      OtherPhoneTypeDesc@1000000005 : Text[100];

    PROCEDURE GetOccupierNature@1100281000() : Text[50];
    VAR
      lCode@1100281000 : Record 50079;
    BEGIN
      IF lCode.GET(5051,50070,"Occupier Nature") THEN
        EXIT(lCode.Description);
    END;

    LOCAL PROCEDURE OnGetRecord@1100281001();
    VAR
      lColorMgt@1100281000 : Codeunit 50088;
    BEGIN
      CALCFIELDS("User Next Step Available", Context);
      CALCFIELDS("Contract Form Name");
      UserNextStepAvailable := "User Next Step Available" OR ("Process Code"='');
      TextContext := Context; //IMH10.ST

      ServiceOrderType.GET("Service Order Type");
      InterventionAllowed := "Intervention Allowed";

      DeductibleAmountVisible := "Appropriate Deductible Amount" = "Appropriate Deductible Amount"::Other;//IMH08
      lColorMgt.PageIdentifLoadXML(XMLText,DATABASE::"Service Header","No.",9);//IMH02

      GetServFieldDescription;//IMH06

      //IMH07
      CurrPage.EDITABLE := ServFormMgt.ServiceEditable(Rec);
      StatusCanceled := (Status = Status::Cancelled);
      StatusClosed := (Status = Status::Finished);
      StatusSuspended := (Status = Status::Pending);

      //<<IMH14
      ClaimsVisible := ServiceHeaderClaimsMgt.ClaimsEnabled;
      ServiceHeaderClaimNo := "Service Header Claims No." <> '';
      //>>IMH14

      //<<IMH16
      CreateProviderDirectVisible := InterventionAllowed AND UserSpecialPermission.IsForceProvAssignManager;
      //>>IMH16
    END;

    PROCEDURE OnValidateClosingCause@1100281002();
    BEGIN
      IndemVisible := (ClosingCause = ClosingCause::ExpertReport);
    END;

    PROCEDURE InitSHCosting@1100281003();
    BEGIN
      IF SHCosting.GET("No.") THEN;
      SHCosting.CALCFIELDS("Service Cause Description");
      ServiceCauseDescription := SHCosting."Service Cause Description";
      ExpertiseDate := SHCosting."Expertise Date";
      UnsecuredDepAmount := SHCosting."Unsecured Depreciation Amount";
      UnsecuredDepPct := SHCosting."Unsecured Depreciation %";
      EstWorkAmountMin := SHCosting."Estimated Work Amount (min)";
      EstWorkAmountMax := SHCosting."Estimated Work Amount (max)" ;
      DeducAmountToCollect := SHCosting."Deductible Amount To Collect";
      ClosingCause := SHCosting."Closing Cause";
      AutoRepair := SHCosting."Auto Repair";
      AutoRepairAmount := SHCosting."Auto Repair Amount";
      AutoRepairAmountInclVAT := SHCosting."Auto Repair Amount Incl. VAT";
      NatureRepair := SHCosting."Nature Repair";
      NatureRepairAmount := SHCosting."Nature Repair Amount";
      NatureRepairAmountInclVAT := SHCosting."Nature Repair Amount Incl. VAT";
      FinancialCompensation := SHCosting."Financial Compensation";
      FinCompAmount := SHCosting."Fin. Comp. Amount";
      FinCompAmountInclVAT := SHCosting."Fin. Comp. Amount Incl. VAT";

      OnValidateClosingCause;
      AutoRepairEnabled := AutoRepair;
      NatureRepairEnabled := NatureRepair;
      FinComEnabled := FinancialCompensation;
      GetHelpLink;//IMH03
    END;

    PROCEDURE ModifySHCosting@1100281005();
    BEGIN
      IF NOT((SHCosting."Expertise Date" <> ExpertiseDate) OR
         (SHCosting."Unsecured Depreciation Amount" <> UnsecuredDepAmount) OR
         (SHCosting."Unsecured Depreciation %" <> UnsecuredDepPct) OR
         (SHCosting."Estimated Work Amount (min)" <> EstWorkAmountMin) OR
         (SHCosting."Estimated Work Amount (max)" <> EstWorkAmountMax) OR
         (SHCosting."Deductible Amount To Collect" <> DeducAmountToCollect) OR
         (SHCosting."Closing Cause" <> ClosingCause) OR
         (SHCosting."Auto Repair" <> AutoRepair) OR
         (SHCosting."Auto Repair Amount" <> AutoRepairAmount) OR
         (SHCosting."Auto Repair Amount Incl. VAT" <> AutoRepairAmountInclVAT) OR
         (SHCosting."Nature Repair" <> NatureRepair) OR
         (SHCosting."Nature Repair Amount" <> NatureRepairAmount) OR
         (SHCosting."Nature Repair Amount Incl. VAT" <> NatureRepairAmountInclVAT) OR
         (SHCosting."Financial Compensation" <> FinancialCompensation) OR
         (SHCosting."Fin. Comp. Amount" <> FinCompAmount) OR
         (SHCosting."Fin. Comp. Amount Incl. VAT" <> FinCompAmountInclVAT)) THEN
       EXIT;
      SHCosting."Expertise Date" := ExpertiseDate;
      SHCosting."Unsecured Depreciation Amount" := UnsecuredDepAmount;
      SHCosting."Unsecured Depreciation %" := UnsecuredDepPct;
      SHCosting."Estimated Work Amount (min)" := EstWorkAmountMin;
      SHCosting."Estimated Work Amount (max)" := EstWorkAmountMax;
      SHCosting."Deductible Amount To Collect" := DeducAmountToCollect;
      SHCosting."Closing Cause" := ClosingCause;
      SHCosting."Auto Repair" := AutoRepair;
      SHCosting."Auto Repair Amount" := AutoRepairAmount;
      SHCosting."Auto Repair Amount Incl. VAT" := AutoRepairAmountInclVAT;
      SHCosting."Nature Repair" := NatureRepair;
      SHCosting."Nature Repair Amount" := NatureRepairAmount;
      SHCosting."Nature Repair Amount Incl. VAT" := NatureRepairAmountInclVAT;
      SHCosting."Financial Compensation" := FinancialCompensation;
      SHCosting."Fin. Comp. Amount" := FinCompAmount;
      SHCosting."Fin. Comp. Amount Incl. VAT" := FinCompAmountInclVAT;
      SHCosting.MODIFY;
    END;

    PROCEDURE GetHelpLink@1100281018();
    VAR
      lHelpMgt@1100281000 : Codeunit 50084;
    BEGIN
      //IMH03
      //<<IMH17
      //WikiLinkVisible := lHelpMgt.RunHelp("Process Code","Process Status No.","Service Order Type","Corporate No.",WikiLink);
      GetWikiLink(WikiLinkVisible, WikiLink);
      //>>IMH17
    END;

    PROCEDURE RunHelp@1100281011();
    BEGIN
      //IMH03
      HYPERLINK(WikiLink);
    END;

    PROCEDURE CheckAmount@1100281004(pAmountType@1100281000 : 'Auto,Nature,Fin');
    BEGIN
      CASE pAmountType OF
        0:BEGIN
          IF (AutoRepairAmount <> 0) AND (AutoRepairAmountInclVAT <> 0) THEN BEGIN
            IF AutoRepairAmountInclVAT < AutoRepairAmount THEN
              ERROR(STRSUBSTNO(Text003,
                SHCosting.FIELDCAPTION("Auto Repair Amount Incl. VAT"),SHCosting.FIELDCAPTION("Auto Repair Amount")));
          END;
        END;
        1:BEGIN
          IF (NatureRepairAmount <> 0) AND (NatureRepairAmountInclVAT <> 0) THEN BEGIN
            IF NatureRepairAmountInclVAT < NatureRepairAmount THEN
              ERROR(STRSUBSTNO(Text003,
                SHCosting.FIELDCAPTION("Nature Repair Amount Incl. VAT"),SHCosting.FIELDCAPTION("Nature Repair Amount")));
          END;
        END;
        2:BEGIN
          IF (FinCompAmount <> 0) AND (FinCompAmountInclVAT <> 0) THEN BEGIN
            IF FinCompAmountInclVAT < FinCompAmount THEN
              ERROR(STRSUBSTNO(Text003,
                SHCosting.FIELDCAPTION("Fin. Comp. Amount Incl. VAT"),SHCosting.FIELDCAPTION("Fin. Comp. Amount")));
          END;
        END;
      END;
    END;

    PROCEDURE GetServFieldDescription@1100281010();
    BEGIN
      //IMH12
      OccupierNatureDesc := ServiceFormMgt.Code_Desc(5051,50070,"Occupier Nature");
      {ResidenceTypeDesc := ServiceFormMgt.Code_Desc(5051,50071,"Residence Type");
      HousingTypeDesc := ServiceFormMgt.Code_Desc(5051,50072,"Housing Type");
      PropertyTypeDesc := ServiceFormMgt.Code_Desc(5051,50073,"Property Type");
      }
      CorporateContactDesc := ServiceFormMgt.CorporateContact_Desc("Corporate Contact No.");
      ChannelDesc := ServiceFormMgt.Code_Desc(50066,12,Channel);
      RequisitionerDesc := ServiceFormMgt.Code_Desc(50066,13,Requisitioner);

      //<<IMH19.ACO
      OtherPhoneTypeDesc := ServiceFormMgt.Code_Desc(5900, 50260, "Other Phone No. Type");
      //>>IMH19.ACO
    END;

    PROCEDURE TestBeforeAction@1100281006();
    BEGIN
      TestDataBeforeAction(TRUE);
    END;

    BEGIN
    {
      /** @r IMH20 @d 15/04/14 @a ISAT.PC @v IMH6.01.P011 @s New Provider Search
          @c Add new action Research Historic in Process Category */
      /** @r IMH19 @d 19/06/13 @a ISAT.ACO @v IMH6.01.347 @s JUIN @h 4387
          @c Ajout champs "Other Phone No. Type" et "Other Phone No." */
      /** @r IMH18 @d 13/02/13 @a ISAT.PC @v IMH6.01.215 @h 4121 @s Ajout "Create date" sur la cl‚ secontraire
          @c modification de la propri‚t‚ RunFormView de l'action document joint
          @c de SORTING(Service No.,Service Document No.,Service Intervention Line No.,Intervention Quote Line No.)
          @c a SORTING(Service No.,Service Document No.,Service Intervention Line No.,Creation Date)
      /** @r IMH17 @d 18/07/12 @a ISAT.PC @v IMH6.01.226 @s version 1.4 @h 3537 @c Lien Wiki intervention */
      /** @r IMH16 @d 27/03/12 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @h 2725 @c FOnction Assignation directe prestataire*/
      /** @r IMH15 @d 17/02/12 @a ISAT.ST @v IMH6.01.108 @s Interactions @c Envoi mail / fax */
      /** @r IMH14 @d 16/01/12 @a ISAT.ZW @v IMH6.01.129 @s R‚clamation @c Ajout champs r‚clamation */
      /** @r IMH13 @d 14/01/12 @a ISAT.PC @v IMH6.01.129 @s CTI @c Ajout du dev pour la partie CTI */
      /** @r IMH12 @d 05/12/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Verrou service pour les fonction */
      /** @r IMH11 @d 01/09/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Affichage nom formule */
      /** @r IMH10 @d 29/08/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Ajout champ Context */
      /** @r IHM09 @d 06/06/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion des services @c Ajout fonction Historiques */
      /** @r IHM08 @d 31/05/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion des services @c service FUsion non editable */
      /** @r IMH07 @d 20/05/11 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service
          @c Ajout champ 50472, 50473, 50474 Montant estimation mobilier HT / TTC,Mode d'indemnisation */
      /** @r IMH06 @d 11/03/11 @a ISAT.LLT @v IMH6.01.123 @s Saisie champs description */
      /** @r IMH05 @d 08/03/11 @a ISAT.LLT @v IMH6.01.122 @s Gestion des commentaires
          @c Changement accŠs form commentaires
          @c Ajout couleur */
      /** @r IHM04 @d 04/03/10 @a ISAT.ZW @v IMH6.01.004 @s GED @c renomer interaction report‚ en Brouillons */
      /** @r IMH03 @d 01/03/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Ajout lien WIKI */
      /** @r IMH02 @d 25/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c description statut en gras */
      /** @r IMH01 @d 21/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Cr‚ation */
    }
    END.
  }
}