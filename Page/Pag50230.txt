OBJECT Page 50230 Adv. Comment Lines
{
  OBJECT-PROPERTIES
  {
    Date=09/12/13;
    Time=10:11:01;
    Modified=Yes;
    Version List=IMH6.01,SUPPORT;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Adv. Comment Lines;
               FRA=Lignes commentaires avanc‚s];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table50056;
    DataCaptionFields=Source No.;
    PageType=List;
    RefreshOnActivate=Yes;
    ShowFilter=No;
    OnInit=BEGIN
             NewFonctionEnable := TRUE;  //IMH02
           END;

    OnOpenPage=VAR
                 lServiceHeader@1100281000 : Record 5900;
               BEGIN
                 //<<IMH06.PC
                 ServiceTimeRegisterMgt.OpenObjectID(CurrPage.OBJECTID(FALSE));
                 IF (GETFILTER("Source No.") <> '') AND (GETFILTER("Source No. 2") = '') THEN BEGIN
                   lServiceHeader.SETCURRENTKEY("Service No.");
                   lServiceHeader.SETFILTER("Service No.",GETFILTER("Source No."));
                   lServiceHeader.SETFILTER(Status,'%1|%2',lServiceHeader.Status::"In Process",lServiceHeader.Status::Pending);
                   IF lServiceHeader.FINDSET THEN BEGIN
                     REPEAT
                       ReportingBuffer."Code 1" := lServiceHeader."No.";
                       ReportingBuffer."Date 1" := DT2DATE(lServiceHeader."Creation Date");
                       IF ReportingBuffer.INSERT THEN;
                     UNTIL lServiceHeader.NEXT = 0;
                   END;
                   ReportingBuffer.RESET;
                   ReportingBuffer.SETCURRENTKEY("Date 1","Code 1");
                   ServiceHeaderOK := ReportingBuffer.FINDLAST;
                 END;
                 //>>IMH06.PC

                 //<<IMH02
                 //IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, GETFILTER("Source No. 2")) THEN
                 //  NewFonctionVisible := NOT lServiceHeader."Fusion Service";
                 //>>IMH02
                 NewFonctionEnable := NOT LockingMgt.ServiceLocked(GETFILTER("Source No."), TRUE);
                 IF FINDFIRST THEN;
               END;

    OnClosePage=BEGIN
                  //<<IMH06.PC
                  ServiceTimeRegisterMgt.CloseObject;
                  //>>IMH06.PC
                END;

    OnFindRecord=BEGIN
                   EXIT(FIND(Which));
                 END;

    OnNextRecord=BEGIN
                   EXIT(NEXT(Steps));
                 END;

    OnAfterGetRecord=VAR
                       lServiceInterventionLine2@1100281000 : Record 50075;
                       lServiceHeader@1000000001 : Record 5900;
                       lServiceInterventionLine@1000000000 : Record 50075;
                     BEGIN
                       //<<IMH06.PC
                       IF "Source Table ID" IN [DATABASE::Service,DATABASE::"Service Header",DATABASE::"Service Intervention Line"] THEN BEGIN
                         IF GETFILTER("Source No. 3") <> '' THEN BEGIN
                           IF lServiceInterventionLine2.GET("Source No. 2","Source No. 3") THEN BEGIN
                             ServiceTimeRegisterMgt.SetFromComment(TRUE);
                             ServiceTimeRegisterMgt.OnAfterGetServiceIntervRecord(lServiceInterventionLine2);
                           END;
                         END ELSE BEGIN
                           IF GETFILTER("Source No. 2") <> '' THEN BEGIN
                             IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,"Source No. 2") THEN BEGIN
                               ServiceTimeRegisterMgt.SetFromComment(TRUE);
                               ServiceTimeRegisterMgt.OnAfterGetServiceHeaderRecord(lServiceHeader);
                             END;
                           END ELSE BEGIN
                             IF GETFILTER("Source No.") <> '' THEN BEGIN
                               IF ServiceHeaderOK THEN BEGIN
                                 IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,ReportingBuffer."Code 1") THEN BEGIN
                                   ServiceTimeRegisterMgt.SetFromComment(TRUE);
                                   ServiceTimeRegisterMgt.OnAfterGetServiceHeaderRecord(lServiceHeader);
                                 END;
                               END;
                             END;
                           END;
                         END;
                       END;
                       //>>IMH06.PC

                       IF "Attached To Line No." <> 0 THEN BEGIN
                         "Creation User ID" := '';
                         CreateDate := 0DT;
                       END
                       ELSE
                         CreateDate := "Creation Date";
                       //<<IMH04.ST
                       IF Reception = Reception::Extranet THEN BEGIN
                         IF Publication = Publication::Extranet THEN BEGIN
                           Publication := 0;
                         END;
                       END;
                       //>>IMH04.ST

                       //<<IMH.PC
                       AcknowledgementText := '';
                       IF (Comment <> '') AND (Comment <> '------------') THEN BEGIN
                         AcknowledgementText := FORMAT(Acknowledgement);
                       END;
                       WithNotificationText := '';
                       IF (Comment <> '') AND (Comment <> '------------') THEN BEGIN
                         WithNotificationText := FORMAT("With Notification");
                       END;

                       InterventionNoText := '';
                       IF (Comment <> '') AND (Comment <> '------------') AND (GETFILTER("Source No. 3") = '') THEN BEGIN
                         lServiceInterventionLine.SETFILTER("Service Header No.",GETFILTER("Source No. 2"));
                         lServiceInterventionLine.SETFILTER("Line No.",GETFILTER("Source No. 3"));
                         IF lServiceInterventionLine.FINDFIRST THEN BEGIN
                           InterventionNoText := FORMAT(lServiceInterventionLine."Intervention No.");
                         END;
                       END;
                       //>>IMH.PC
                     END;

    ActionList=ACTIONS
    {
      { 1100281011;  ;ActionContainer;
                      ActionContainerType=NewDocumentItems }
      { 1100281012;1 ;Action    ;
                      CaptionML=[ENU=New;
                                 FRA=Nouveau];
                      Promoted=Yes;
                      Enabled=NewFonctionEnable;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      OnAction=VAR
                                 lTextMgt@1100281000 : Codeunit 50085;
                               BEGIN
                                 lTextMgt.NewComment(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100281021;  ;ActionContainer;
                      Name=<Action1100281005>;
                      CaptionML=[ENU=Attachment;
                                 FRA=PiŠce jointe];
                      ActionContainerType=ActionItems }
      { 1100281018;1 ;Action    ;
                      Name=SDR99ShowFileAttach;
                      CaptionML=[ENU=View SDR99 File Attach;
                                 FRA=Afficher];
                      Promoted=Yes;
                      Visible=FALSE;
                      Enabled=FALSE;
                      Image=View;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 ShowAttachment;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100281000;0;Container;
                ContainerType=ContentArea }

    { 1100281001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100281002;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE }

    { 1100281003;2;Field  ;
                CaptionML=[ENU=Creation Date;
                           FRA=Date de cr‚ation];
                SourceExpr=CreateDate;
                Editable=FALSE }

    { 1100281010;2;Field  ;
                SourceExpr="Creation User ID" }

    { 1100281008;2;Field  ;
                SourceExpr=Publication }

    { 1100281017;2;Field  ;
                SourceExpr="DARVA Send Type" }

    { 1100281009;2;Field  ;
                SourceExpr=Reception }

    { 1100281006;2;Field  ;
                SourceExpr=Comment }

    { 1100281004;2;Field  ;
                SourceExpr=Code }

    { 1100281007;2;Field  ;
                SourceExpr="Source Table Name";
                Visible=FALSE }

    { 1100281016;2;Field  ;
                Name=WithNotificationCtrl;
                CaptionML=[ENU=With Notification;
                           FRA=Avec notification];
                SourceExpr=WithNotificationText;
                Editable=FALSE;
                OnLookup=BEGIN
                           LookupProviderNotification;
                         END;
                          }

    { 1000000000;2;Field  ;
                Name=AcknowledgementTextCtrl;
                CaptionML=[ENU=Acknowledgement;
                           FRA=Acquit‚];
                SourceExpr=AcknowledgementText;
                Editable=FALSE;
                OnLookup=BEGIN
                           LookupProviderNotification;
                         END;
                          }

    { 1100281013;2;Field  ;
                SourceExpr="Acknowledgement Date" }

    { 1100281005;2;Field  ;
                SourceExpr="Acknowledgment User ID" }

    { 1100281014;2;Field  ;
                Name=InterventionNoCtrl;
                CaptionML=[ENU=Intervention No.;
                           FRA=Nø intervention];
                SourceExpr=InterventionNoText }

    { 1100281015;2;Field  ;
                Name=AttachField;
                CaptionML=[ENU=Attachment;
                           FRA=PiŠce jointe];
                SourceExpr=HaveAttach;
                Enabled=FALSE;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      ReportingBuffer@1000000002 : TEMPORARY Record 50143;
      LockingMgt@1100281004 : Codeunit 50071;
      ServiceTimeRegisterMgt@1000000001 : Codeunit 50070;
      NewFonctionEnable@1100281000 : Boolean INDATASET;
      HaveAttach@1100281005 : Boolean;
      CreateDate@1100281001 : DateTime;
      AcknowledgementText@1000000000 : Text[30] INDATASET;
      WithNotificationText@1100281002 : Text[30] INDATASET;
      InterventionNoText@1100281003 : Text[30] INDATASET;
      ServiceHeaderOK@1000000003 : Boolean;

    LOCAL PROCEDURE ShowAttachment@1100281003();
    VAR
      lTempBlob@1100281006 : TEMPORARY Record 99008535;
      lAttachment@1100281005 : Record 5062;
      lAttachment2@1100281004 : Record 5062;
      l3TierAutomationMgt@1100281003 : Codeunit 419;
      lInStream@1100281001 : InStream;
      lText@1100281007 : Text[1024];
    BEGIN
      {
      IF lAttachment.GET("Temp AGPM Attach Entry No.") THEN BEGIN
        lAttachment.CALCFIELDS(Attachment);
        IF lAttachment.Attachment.HASVALUE THEN BEGIN
          lAttachment.Attachment.CREATEINSTREAM(lInStream);
          lText := 'Export.' + lAttachment."File Extension";
          DOWNLOADFROMSTREAM(lInStream,Text005,TEMPORARYPATH,Text006,lText);
          CLEAR(lInStream);
        END;
      END;
      }
    END;

    BEGIN
    {
      /** @r IHM07 @d 19/04/13 @a ISAT.ZW @v IMH6.01.4455 @h 4455 @c MultiLine --> NON pour le champ commentaire */
      /** @r IHM06 @d 05/12/12 @a ISAT.PC @v IMH6.01.334 @s Mantis 4004 @h 4004 @c gestion temps */
      /** @r IMH04 @d 02/11/11 @a ISAT.ST @v IMH6.01.165 @s Extranet Prestataire @h 1336 @c Publication masqu‚e si origine extranet*/
      /** @r IMH03 @d 17/10/11 @a ISAT.PC @v IMH6.01.165 @s Extranet Prestataire @h 1847
          @c Ajout champ 53, With Notification
      /** @r IHM02 @d 31/05/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion des services @c service FUsion non editable */
      /** @r IMH01 @d 28/02/11 @a ISAT.ST @v IMH6.01.122 @s Gestion des commentaires @c Cr‚ation */
    }
    END.
  }
}