OBJECT Page 50231 Adv. Comment Card
{
  OBJECT-PROPERTIES
  {
    Date=16/04/14;
    Time=14:10:59;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Adv. Comment Card;
               FRA=Fiche commentaire];
    InsertAllowed=No;
    LinksAllowed=No;
    SourceTable=Table50056;
    DataCaptionExpr=PageCaption;
    SourceTableView=SORTING(Source Table ID,Source No.,Source No. 2,Source No. 3,Source No. 4,Source No. 5,Line No.);
    PageType=Card;
    SourceTableTemporary=Yes;
    PromotedActionCategoriesML=[ENU=Attachment;
                                FRA=Piäce jointe];
    ShowFilter=No;
    OnOpenPage=VAR
                 lEAISetup@1100281000 : Record 8016700;
                 lService@1100281001 : Record 50066;
                 lServiceOrderType@1100281002 : Record 5903;
                 lInterfaceReference@1100281003 : Record 50164;
               BEGIN
                 //<<IMH08.PC
                 ServiceTimeRegisterMgt.OpenObjectID(CurrPage.OBJECTID(FALSE));
                 //>>IMH08.PC

                 CodeVisible := "Source Table ID" <> DATABASE::"Service Intervention Minutes";
                 IF ("Source Table ID" = 0) THEN BEGIN
                   CodeVisible := TRUE;
                 END;

                 NotDARVAShow := TRUE;
                 DARVAShow := FALSE;
                 DARVAStandardShow := FALSE;
                 NotDARVAStandardShow := FALSE;
                 DARVASendChoiceShow := FALSE;
                 DARVATodoShow := FALSE;
                 DARVAAttachShow := FALSE;

                 //<<IMH05.PC
                 DARVATodoType := DARVATodoType::" ";
                 //>>IMH05.PC

                 NotDARVAPublicationType := NotDARVAPublicationType::" ";
                 //<<IMH05.PC
                 DARVASDR64Send := FALSE;
                 //>>IMH05.PC

                 //<<IMH03.PC
                 IF (GETFILTER("Source No. 2") <> '') AND (GETFILTER("Source No. 3") = '') THEN BEGIN
                   ServiceHeader.SETRANGE("Document Type",ServiceHeader."Document Type"::Invoice);
                   ServiceHeader.SETFILTER("No.",GETFILTER("Source No. 2"));
                   IF ServiceHeader.COUNT = 1 THEN BEGIN
                     ServiceHeader.FINDFIRST;
                     IF ServiceHeader."DARVA Interface" THEN BEGIN
                       //<<IMH08 dÇsactivÇ la gestion de commentaire DARVA
                       {
                       DARVAShow := TRUE;
                       NotDARVAShow := FALSE;
                       //<<IMH05.PC
                       lInterfaceReference.SETRANGE("Source Table ID",DATABASE::"Service Header");
                       lInterfaceReference.SETRANGE("Source No.",ServiceHeader."No.");
                       lInterfaceReference.SETRANGE("SDR64 Send",TRUE);
                       DARVASDR64Send := NOT lInterfaceReference.ISEMPTY;
                       //>>IMH05.PC
                       lEAISetup.GET;
                       lService.SETRANGE("Service No.",GETFILTER("Source No."));
                       IF lService.FINDFIRST THEN BEGIN
                         DARVAAttachShow := (lEAISetup."AGPM Customer No." = lService."Corporate No.");
                         MACIFComment := lEAISetup."MACIF Customer No." = lService."Corporate No.";
                         IF lServiceOrderType.GET(ServiceHeader."Service Order Type") THEN BEGIN
                           //<<IMH07.PC
                           //DARVASendChoiceShow := MACIFComment AND lServiceOrderType."DARVA SDR99 Send Choice"
                           ServiceHeader.CALCFIELDS("SDR64 Send");
                           DARVASendChoiceShow := lServiceOrderType."DARVA SDR99 Send Choice" AND ServiceHeader."SDR64 Send";
                           //>>IMH07.PC
                         END;
                         DARVAStandardShow := TRUE;
                         NotDARVAStandardShow := TRUE;
                         DARVATodoShow := MACIFComment AND DARVASDR64Send;
                       END;
                       }
                       //>>IMH08
                     END ELSE BEGIN
                       ServiceHeader.INIT;
                     END;
                   END;
                 END;
                 //>>IMH03.PC
                 //<<IMH06.ST
                 CALCFIELDS("Source Table Caption");
                 PageCaption := "Source Table Caption";
                 CASE "Source Table ID" OF
                   DATABASE::Service, DATABASE::Contact, DATABASE::Provider :
                     PageCaption := PageCaption + ' ' + "Source No.";
                   DATABASE::"Service Header" :
                     PageCaption := Text009 + ' ' + "Source No. 2";
                   DATABASE::"Service Intervention Line", DATABASE::"Service Intervention Minutes" : BEGIN
                     PageCaption := PageCaption + ' ' + "Source No. 2";
                     IF ServiceInterventionLine.GET("Source No. 2", "Source No. 3") THEN
                       PageCaption := PageCaption + '/' + FORMAT(ServiceInterventionLine."Intervention No.");
                   END;
                   DATABASE::"Tray Line" :
                     PageCaption := PageCaption + ' ' + "Source No. 2" + '/' + FORMAT("Source No. 3");
                 END; // CASE
                 //>>IMH06.ST
               END;

    OnClosePage=BEGIN
                  //<<IMH08.PC
                  ServiceTimeRegisterMgt.CloseObject;
                  //>>IMH08.PC
                END;

    OnAfterGetRecord=VAR
                       lServiceHeader@1000000000 : Record 5900;
                       lServiceInterventionLine@1000000001 : Record 50075;
                     BEGIN
                       //<<IMH08.PC
                       IF "Source Table ID" IN [DATABASE::"Service Header",DATABASE::"Service Intervention Line"] THEN BEGIN
                         IF GETFILTER("Source No. 3") <> '' THEN BEGIN
                           IF lServiceInterventionLine.GET("Source No. 2","Source No. 3") THEN BEGIN
                             ServiceTimeRegisterMgt.SetFromComment(TRUE);
                             ServiceTimeRegisterMgt.OnAfterGetServiceIntervRecord(lServiceInterventionLine);
                           END;
                         END ELSE BEGIN
                           IF GETFILTER("Source No. 2") <> '' THEN BEGIN
                             IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,"Source No. 2") THEN BEGIN
                               ServiceTimeRegisterMgt.SetFromComment(TRUE);
                               ServiceTimeRegisterMgt.OnAfterGetServiceHeaderRecord(lServiceHeader);
                             END;
                           END;
                         END;
                       END;
                       //>>IMH08.PC
                     END;

    OnQueryClosePage=VAR
                       lDocumentAttachment@1000000001 : Record 50021;
                     BEGIN
                       IF CloseAction IN [ACTION::Cancel, ACTION::LookupCancel] THEN BEGIN
                         DeleteAttachment(FALSE);
                         EXIT(TRUE);
                       END;

                       //<<IMH02.PC
                       IF DARVAShow THEN BEGIN
                         Publication := DARVAPublicationType;
                       END;
                       IF NotDARVAShow THEN BEGIN
                         Publication := NotDARVAPublicationType;
                       END;
                       "DARVA Send Type" := DARVAChoiceSendType;
                       //<<IMH05.PC
                       IF DARVATodoShow THEN BEGIN
                         CASE DARVATodoType OF
                           DARVATodoType::" ",DARVATodoType::"To-do" : "Manager To-do Type" := "Manager To-do Type"::"To-do";
                           DARVATodoType::Information : "Manager To-do Type" := "Manager To-do Type"::Information;
                         END;
                       END ELSE BEGIN
                         "Manager To-do Type" := "Manager To-do Type"::" ";
                       END;
                       //>>IMH05.PC
                       IF DARVAChoiceSendType <> DARVAChoiceSendType::" " THEN BEGIN
                         Publication := Publication::Darva;
                       END;
                       //>>IMH02.PC

                       //<<IMH03.PC
                       TempBlob.CALCFIELDS(Blob);
                       IF TempBlob.Blob.HASVALUE THEN BEGIN
                         CreateAttachmentFile;
                       END;
                       //>>IMH03.PC

                       SaveText(NOT (CloseAction IN [ACTION::OK, ACTION::LookupOK, ACTION::Yes]));
                     END;

    ActionList=ACTIONS
    {
      { 1100281005;  ;ActionContainer;
                      Name=<Action1100281005>;
                      CaptionML=[ENU=Attachment;
                                 FRA=Piäce jointe];
                      ActionContainerType=ActionItems }
      { 1000000002;1 ;Action    ;
                      Name=SDR99FileAttachServiceHdr;
                      CaptionML=[ENU=File Attach. Service Hdr.;
                                 FRA=Import depuis ligne produit];
                      Promoted=Yes;
                      Visible=False;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 SaveAttachment(FALSE);
                               END;
                                }
      { 1000000003;1 ;Action    ;
                      Name=SDR99FileAttachFromDisk;
                      CaptionML=[ENU=File Attach. From Disk;
                                 FRA=Import depuis disque];
                      Promoted=Yes;
                      Visible=false;
                      Image=Import;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 SaveAttachment(TRUE);
                               END;
                                }
      { 1100281016;1 ;Action    ;
                      Name=SDR99ShowFileAttach;
                      CaptionML=[ENU=View SDR99 File Attach;
                                 FRA=Afficher];
                      Promoted=Yes;
                      Visible=darvaattachshow;
                      Image=View;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 ShowAttachment;
                               END;
                                }
      { 1100281017;1 ;Action    ;
                      Name=SDR99DeleteFileAttach;
                      CaptionML=[ENU=Delete SDR99 File Attach;
                                 FRA=Supprimer];
                      Promoted=Yes;
                      Visible=darvaattachshow;
                      Image=Delete;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 DeleteAttachment(TRUE);
                               END;
                                }
      { 1000000005;1 ;Action    ;
                      Name=ShowFileName;
                      OnAction=VAR
                                 lT1@1000000000 : Text[250];
                                 lT2@1000000001 : Text[30];
                               BEGIN
                                 GetFileInformation(lT1,lT2);

                                 TempBlob.CALCFIELDS(Blob);
                                 MESSAGE(FORMAT(TempBlob.Blob.HASVALUE));
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100281000;0;Container;
                ContainerType=ContentArea }

    { 1100281014;1;Group  ;
                Name=GeneralGrp;
                CaptionML=[ENU=General;
                           FRA=GÇnÇral];
                GroupType=Group }

    { 1100281015;2;Group  ;
                GroupType=Group }

    { 1100281003;3;Field  ;
                SourceExpr=Date;
                Visible=FALSE }

    { 1100281002;3;Field  ;
                Name=<Code>;
                SourceExpr=Code;
                Visible=CodeVisible;
                Editable=CodeVisible;
                OnValidate=BEGIN
                             //CommentText := Comment;
                             CLEAR(CommentBigText);
                             CommentBigText.ADDTEXT(Comment);
                           END;
                            }

    { 1100281013;2;Group  ;
                Visible=NotDARVAShow;
                GroupType=Group }

    { 1100281006;3;Field  ;
                CaptionML=[ENU=Publication;
                           FRA=Publication];
                OptionCaptionML=[ENU=" ,Extranet";
                                 FRA=" ,Extranet"];
                SourceExpr=NotDARVAPublicationType;
                Editable=TRUE;
                OnValidate=VAR
                             lCallFromTabelID@1100281001 : Integer;
                           BEGIN
                             //<<IMH04.ST
                             IF NotDARVAPublicationType = NotDARVAPublicationType::Extranet THEN BEGIN
                               IF "Source Table ID" <> DATABASE::"Service Intervention Line" THEN BEGIN
                                 ERROR(Text003);
                               END;
                             END;
                             //>>IMH04.ST
                           END;
                            }

    { 1100281008;2;Group  ;
                Visible=DARVAShow;
                GroupType=Group }

    { 1100281007;3;Group  ;
                Visible=darvastandardshow;
                GroupType=Group }

    { 1100281018;4;Group  ;
                Visible=darvastandardshow;
                GroupType=Group }

    { 1100281001;5;Field  ;
                CaptionML=[ENU=DARVA Publication;
                           FRA=Publication DARVA];
                OptionCaptionML=[ENU=" ,Extranet,Darva,Fusion";
                                 FRA=" ,Extranet,Darva,Fusion"];
                SourceExpr=DARVAPublicationType;
                OnValidate=BEGIN
                             IF DARVAPublicationType = DARVAPublicationType::Extranet THEN BEGIN
                               IF "Source Table ID" <> DATABASE::"Service Intervention Line" THEN BEGIN
                                 ERROR(Text003);
                               END;
                             END;
                             IF DARVAPublicationType <> DARVAPublicationType::Darva THEN BEGIN
                               DeleteAttachment(FALSE);
                             END;
                             IF DARVAPublicationType <> DARVAPublicationType::Darva THEN BEGIN
                               DARVAChoiceSendType := DARVAChoiceSendType::" ";
                               DARVATodoType := DARVATodoType::" ";
                             END;
                           END;
                            }

    { 1100281011;3;Group  ;
                Visible=NotdarvaStandardshow;
                GroupType=Group }

    { 1000000004;4;Group  ;
                Visible=DARVAsendChoiceshow;
                GroupType=Group }

    { 1100281010;5;Field  ;
                CaptionML=[ENU=Send Choice;
                           FRA=Choix d'envoi];
                OptionCaptionML=[ENU=" ,Expert,Corporate";
                                 FRA=" ,Expert,Grand Compte"];
                SourceExpr=DARVAChoiceSendType;
                OnValidate=BEGIN
                             //<<IMH05.PC
                             IF DARVAChoiceSendType <> DARVAChoiceSendType::" " THEN BEGIN
                               DARVAPublicationType := DARVAPublicationType::Darva;
                             END ELSE BEGIN
                               DARVAPublicationType := DARVAPublicationType::" ";
                             END;
                             //>>IMH05.PC
                           END;
                            }

    { 1000000001;4;Group  ;
                Visible=DarvaTodoShow;
                GroupType=Group }

    { 1000000000;5;Field  ;
                Name=ManagerTodo;
                CaptionML=[ENU=Manager To-do;
                           FRA=Action gestionnaire];
                OptionCaptionML=[ENU=" ,Information,To-do";
                                 FRA=" ,Information,Action"];
                SourceExpr=DARVATodoType;
                OnValidate=BEGIN
                             //<<IMH05.PC
                             IF DARVATodoType <> DARVATodoType::" " THEN BEGIN
                               DARVAPublicationType := DARVAPublicationType::Darva;
                             END ELSE BEGIN
                               DARVAPublicationType := DARVAPublicationType::" ";
                             END;
                             //>>IMH05.PC
                           END;
                            }

    { 1100281012;3;Group  ;
                Visible=darvaattachShow;
                GroupType=Group }

    { 1100281004;4;Field  ;
                DrillDown=No;
                AssistEdit=No;
                CaptionML=[ENU=DARVA Attachment;
                           FRA=Doc. joint DARVA];
                SourceExpr=DARVAAttach;
                Editable=FALSE }

    { 1100281020;1;Group  ;
                CaptionML=[ENU=Comment;
                           FRA=Commentaire];
                GroupType=Group }

    { 1100281009;2;Field  ;
                CaptionML=[ENU=Comment;
                           FRA=Commentaire];
                SourceExpr=CommentBigText;
                MultiLine=Yes;
                ControlAddIn=[Isatech.DynamicsNav.NotepadAddIn;PublicKeyToken=f9c11cee8793cd65] }

  }
  CODE
  {
    VAR
      ServiceHeader@1100281016 : Record 5900;
      ServiceInterventionLine@1100281022 : Record 50075;
      TempBlob@1000000004 : TEMPORARY Record 99008535;
      ServiceTimeRegisterMgt@1000000017 : Codeunit 50070;
      CommentText@1100281000 : Text[1024];
      FileNameToAttach@1100281021 : Text[1024];
      CommentDate@1100281001 : Date;
      CommentBigText@1100281002 : BigText;
      Text001@1100281003 : TextConst 'ENU=Do you want to save your comment.;FRA=Souhaitez-vous sauvegarder votre commentaire ?';
      DARVAPublicationType@1000000003 : ' ,Extranet,Darva,Fusion';
      NotDARVAPublicationType@1100281005 : ' ,Extranet,,Fusion';
      DARVAChoiceSendType@1100281006 : ' ,Expert,Corporate';
      DARVATodoType@1000000000 : ' ,Information,To-do';
      MACIFComment@1000000013 : Boolean INDATASET;
      DARVAAttach@1100281007 : Boolean INDATASET;
      Text002@1100281008 : TextConst 'ENU=DARVA Publicate can be send only on service header;FRA=La publication DARVA n''est possible qu''au niveau ligne produit';
      Text003@1100281009 : TextConst 'ENU=Extranet Publication can be set only on intervention;FRA=La publication extranet n''est possible qu''au niveau intervention';
      DARVASDR64Send@1000000007 : Boolean INDATASET;
      CodeVisible@1100281004 : Boolean INDATASET;
      Text004@1100281015 : TextConst 'ENU=Import attach will only avaible with DARVA publication.\Do you want to send to Darva ?;FRA=L''import de piäce jointe n''est possible qu''en publication darva.\Souhaitez-vous faire une publication vers Darva ?';
      Text005@1100281017 : TextConst 'ENU=Attachment;FRA=Piäce jointe';
      Text006@1100281018 : TextConst 'ENU=All Files (*.*)|*.*;FRA=Tous fichiers (*.*)|*.*';
      DARVAShow@1000000009 : Boolean INDATASET;
      NotDARVAShow@1000000008 : Boolean INDATASET;
      DARVAStandardShow@1000000011 : Boolean INDATASET;
      NotDARVAStandardShow@1000000010 : Boolean INDATASET;
      DARVASendChoiceShow@1000000016 : Boolean INDATASET;
      DARVATodoShow@1000000001 : Boolean INDATASET;
      Text007@1000000002 : TextConst 'ENU=Impossible to find this attachement;FRA=La piäce jointe de ce dossier est intouvable';
      DARVAAttachShow@1000000012 : Boolean INDATASET;
      ImportFromDisk@1000000005 : Boolean;
      Text008@1000000006 : TextConst 'ENU=Do you want to delete attachment ?;FRA=Souhaitez-vous supprimer la piäce jointe ?';
      PageCaption@1000000014 : Text[80];
      Text009@1000000015 : TextConst 'ENU=Service header;FRA=Ligne produit';

    PROCEDURE SaveAttachment@1100281002(pFromDisk@1000000000 : Boolean);
    VAR
      lDocumentAttachment@1000000001 : Record 50021;
      lFileRec@1000000003 : Record 2000000022;
      l3TierAutomationMgt@1100281002 : Codeunit 419;
      lAttachmentManagement@1100281007 : Codeunit 5052;
      lAttachmentsList@1000000002 : Page 50015;
      lRecordRef@1100281000 : RecordRef;
      lInStream@1100281005 : InStream;
      lOutStream@1100281006 : OutStream;
      lFile@1000000004 : File;
    BEGIN
      // Dans le cas AGPM, sauvegarde de la piäce jointe en temp
      IF DARVAPublicationType <> DARVAPublicationType::Darva THEN BEGIN
        IF NOT CONFIRM(Text004) THEN BEGIN
          EXIT;
        END;
        DARVAPublicationType := DARVAPublicationType::Darva;
      END;

      IF pFromDisk THEN BEGIN
        FileNameToAttach := l3TierAutomationMgt.BLOBImport(TempBlob,'',TRUE);
        ImportFromDisk := TRUE;
      END ELSE BEGIN
        lDocumentAttachment.SETCURRENTKEY(
          "Service No.","Service Document No.","Service Intervention Line No.","Intervention Quote Line No.");
        lDocumentAttachment.SETRANGE("Service No.",ServiceHeader."Service No.");
        lDocumentAttachment.SETRANGE("Service Document No.",ServiceHeader."No.");

        lAttachmentsList.SETTABLEVIEW(lDocumentAttachment);
        lAttachmentsList.LOOKUPMODE(TRUE);
        IF lAttachmentsList.RUNMODAL <> ACTION::LookupOK THEN BEGIN
          EXIT;
        END;
        lDocumentAttachment.RESET;
        lAttachmentsList.GETRECORD(lDocumentAttachment);
        IF NOT lDocumentAttachment.GetFile(lFileRec) THEN BEGIN
          ERROR(Text007);
        END;
        FileNameToAttach := lFileRec.Path + lFileRec.Name;
        lRecordRef.GETTABLE(lDocumentAttachment);
        "AGPM Attach Record ID" := lRecordRef.RECORDID;
      END;

      DARVAAttach := TRUE;
    END;

    LOCAL PROCEDURE ShowAttachment@1100281003();
    VAR
      lFile@1100281003 : File;
      lInStream@1100281001 : InStream;
      lText@1100281007 : Text[1024];
    BEGIN
      IF ImportFromDisk THEN BEGIN
        TempBlob.CALCFIELDS(Blob);
        IF NOT TempBlob.Blob.HASVALUE THEN BEGIN
          EXIT;
        END;
        TempBlob.Blob.CREATEINSTREAM(lInStream);
      END ELSE BEGIN
        IF NOT lFile.OPEN(FileNameToAttach) THEN BEGIN
          EXIT;
        END;
        lFile.CREATEINSTREAM(lInStream);
      END;
      lText := 'Export.' + COPYSTR(FileNameToAttach,STRLEN(FileNameToAttach) - 3);
      DOWNLOADFROMSTREAM(lInStream,Text005,TEMPORARYPATH,Text006,lText);
      CLEAR(lInStream);
    END;

    PROCEDURE DeleteAttachment@1100281004(pWithConfirm@1000000000 : Boolean);
    VAR
      lAttachment@1100281000 : Record 5062;
    BEGIN
      IF pWithConfirm THEN BEGIN
        IF NOT CONFIRM(Text008) THEN BEGIN
          EXIT;
        END;
      END;
      FileNameToAttach := '';
      CLEAR("AGPM Attach Record ID");
      CLEAR(TempBlob);
      DARVAAttach := FALSE;
    END;

    PROCEDURE CreateAttachmentFile@1100281012();
    VAR
      lDocumentAttachment@1100281008 : Record 50021;
      lAttachmentTemp@1000000007 : TEMPORARY Record 5062;
      lSourceAttchMgt@1100281006 : Codeunit 50003;
      lRecordRef@1000000008 : RecordRef;
      lFileOriginName@1000000003 : Text[250];
      lFileExtension@1000000002 : Text[10];
    BEGIN
      // Sauvegarde de la piäce jointe issu du disque

      TempBlob.CALCFIELDS(Blob);
      IF NOT TempBlob.Blob.HASVALUE THEN BEGIN
        EXIT;
      END;

      WITH lDocumentAttachment DO BEGIN
        SETCURRENTKEY("Service Document No.","Service Intervention Line No.","Intervention Quote Line No.");
        SETRANGE("Service Document No.",ServiceHeader."No.");
        "Key Integer 1" := 0;
        "Key Integer 2" := 0;
        "Key Code 1" := '';
        "Key Code 2" := '';
        Description := 'SDR99';
        GetFileInformation(lFileOriginName,lFileExtension);
        "Description 2" := COPYSTR(lFileOriginName + '.' + lFileExtension,1,MAXSTRLEN("Description 2"));
      END;
      lAttachmentTemp.Attachment := TempBlob.Blob;
      lSourceAttchMgt.CreateAttachment(lDocumentAttachment,'',lAttachmentTemp);
      lRecordRef.GETTABLE(lDocumentAttachment);
      "AGPM Attach Record ID" := lRecordRef.RECORDID;
    END;

    PROCEDURE GetFileInformation@1000000000(VAR pFileName@1000000000 : Text[250];VAR pFileExtension@1000000001 : Text[5]);
    VAR
      i@1000000003 : Integer;
      lTempText@1000000004 : Text[250];
    BEGIN
      FOR i := STRLEN(FileNameToAttach) DOWNTO 1 DO BEGIN
        CASE FileNameToAttach[i] OF
          '.' : BEGIN
            pFileExtension := lTempText;
            lTempText := '';
          END;
          '\' : BEGIN
            pFileName := lTempText;
            EXIT;
          END;
          ELSE lTempText := FORMAT(FileNameToAttach[i]) + lTempText;
        END;
      END;
    END;

    PROCEDURE SaveText@1100281000(pAskQuestion@1100281001 : Boolean);
    VAR
      lTextMgt@1100281000 : Codeunit 50085;
    BEGIN
      IF pAskQuestion THEN BEGIN
        IF NOT CONFIRM(Text001,TRUE) THEN BEGIN
          DeleteAttachment(FALSE);
          EXIT;
        END;
      END;
      //lTextMgt.SaveText(Rec,CommentDate, CommentText);
      lTextMgt.SaveBigText(Rec,CommentDate, CommentBigText);
    END;

    PROCEDURE SaveRec@1100281001();
    BEGIN
      IF INSERT THEN;
    END;

    BEGIN
    {
      /** @r IHM10 @d 16/04/14 @a ISAT.ZW @v IMH6.01.5074 @s Gestion SDR99 @h 5074 @c masquer la publication Fusion */
      /** @r IHM09 @d 04/04/14 @a ISAT.ZW @v IMH6.01.5074 @s Gestion SDR99 @h 5074 @c Supprimer la crÇation commentaire DARVA */
      /** @r IHM08 @d 05/12/12 @a ISAT.PC @v IMH6.01.334 @s Mantis 4004 @h 4004 @c gestion temps */
      /** @r IMH07 @d 04/07/12 @a ISAT.PC @v IMH6.01.122 @s Gestion des commentaires @h 3644 @c Correction */
      /** @r IMH06 @d 06/04/12 @a ISAT.ST @v IMH6.01.122 @s Gestion des commentaires @h 2493 @c Ajout PageCaption */
      /** @r IMH05 @d 03/01/12 @a ISAT.PC @v IMH6.01.122 @s Gestion des commentaires
          @c Ajout du champ "Action gestionnaire" @h mantis 2610 */
      /** @r IMH04 @d 02/11/11 @a ISAT.ST @v IMH6.01.122 @s Gestion des commentaires @c Restriction publication Extranet */
      /** @r IMH03 @d 02/11/11 @a ISAT.PC @v IMH6.01.122 @s Gestion des commentaires @c Restriction publication DARVA */
      /** @r IMH02 @d 17/09/11 @a ISAT.PC @v IMH6.01.122 @s Gestion des commentaires @c Gestion 1er commentaire */
      /** @r IMH01 @d 28/02/11 @a ISAT.ST @v IMH6.01.122 @s Gestion des commentaires @c CrÇation */
    }
    END.
  }
}