OBJECT Page 50266 Service Log Statistics
{
  OBJECT-PROPERTIES
  {
    Date=02/11/11;
    Time=17:24:07;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Service Log Statistics;
               FRA=Statistiques modifications service];
    SaveValues=No;
    LinksAllowed=No;
    SourceTable=Table5909;
    DataCaptionExpr=DateFilter2;
    SourceTableView=SORTING(Document No.,Line No.,Entry No.);
    PageType=List;
    SourceTableTemporary=Yes;
    ShowFilter=No;
    OnOpenPage=VAR
                 lUserSetup@1100281000 : Record 91;
               BEGIN
                 FILTERGROUP(3);
                 ViewMode := GETFILTER("Document No.");
                 SETRANGE("Document No.");
                 FILTERGROUP(0);

                 DateFilter1 := WORKDATE;
                 DateFilter2 := WORKDATE - 1;
                 UserFilter := USERID;
                 UserTeamFilter := ServLog.GetUserTeamGroupCode;
                 IF lUserSetup.GET(USERID) THEN BEGIN
                   CellValue2Visible := lUserSetup."User Type" IN [lUserSetup."User Type"::"DGS Manager",lUserSetup."User Type"::"DGS Admin."];
                   CellValue3Visible := lUserSetup."User Type" IN [lUserSetup."User Type"::"DGS Admin."];

                 END;
                 IF UserFilter = '' THEN
                   MATRIX_ColHeader[1] := Text001
                 ELSE
                   MATRIX_ColHeader[1] := UserFilter;
                 IF UserTeamFilter = '' THEN
                   MATRIX_ColHeader[2] := Text002
                 ELSE
                   MATRIX_ColHeader[2] := UserTeamFilter;
                 MATRIX_ColHeader[3] := Text003;

                 LoadData;
               END;

    OnAfterGetRecord=VAR
                       MATRIX_CurrentColumnOrdinal@1043 : Integer;
                       MATRIX_Steps@1044 : Integer;
                     BEGIN
                       CalcCellData;
                     END;

  }
  CONTROLS
  {
    { 1900000001;;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 6   ;2   ;Field     ;
                SourceExpr=GetEventDesc("Entry No.", "No.","Posting Date") }

    { 1011;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[1];
                CaptionClass='3,' + MATRIX_ColHeader[1];
                OnDrillDown=BEGIN
                              DrillActivities(1);
                            END;
                             }

    { 1012;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[2];
                CaptionClass='3,' + MATRIX_ColHeader[2];
                Visible=CellValue2Visible;
                OnDrillDown=BEGIN
                              DrillActivities(2);
                            END;
                             }

    { 1013;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=MATRIX_CellData[3];
                CaptionClass='3,' + MATRIX_ColHeader[3];
                Visible=CellValue3Visible;
                OnDrillDown=BEGIN
                              DrillActivities(3);
                            END;
                             }

  }
  CODE
  {
    VAR
      ServLog@1100281001 : Codeunit 50149;
      ExcelBuffer@1100281003 : TEMPORARY Record 370;
      UserServLog@1100281002 : Record 50113;
      MATRIX_CellData@1085 : ARRAY [3] OF Integer;
      DateFilter1@1100281000 : Date INDATASET;
      DateFilter2@1100281013 : Date;
      UserFilter@1100281006 : Text[30] INDATASET;
      UserTeamFilter@1100281004 : Text[30] INDATASET;
      LineNo@1100281005 : Integer;
      MATRIX_ColHeader@1100281008 : ARRAY [3] OF Text[50];
      Text001@1100281009 : TextConst 'ENU=User;FRA=Utilisateur';
      Text002@1100281010 : TextConst 'ENU=Group;FRA=Groupe';
      Text003@1100281011 : TextConst 'ENU=All;FRA=Tous';
      Text011@1100281007 : TextConst 'ENU=Opened service;FRA=Nombre de services ouverts';
      PageCalcDate@1100281014 : Date;
      Text100@1100281012 : TextConst 'ENU=--------------------------------;FRA=--------------------------------';
      Text101@1100281015 : TextConst 'ENU="              %1";FRA="              %1"';
      CellValue2Visible@1100281017 : Boolean INDATASET;
      CellValue3Visible@1100281018 : Boolean INDATASET;
      ViewMode@1100281016 : Code[20];

    LOCAL PROCEDURE LoadData@1100281001();
    BEGIN
      RESET;
      DELETEALL;
      LineNo := 10;
      CASE ViewMode OF
        'TC' : InsertTCActivities;
        ELSE
          InsertGSActivities;
      END;
      CalcStats;
    END;

    LOCAL PROCEDURE InsertEvent@1100281008(pEventId@1100281000 : Integer;pEventCode@1100281001 : Code[20];pDateFilter@1100281002 : Date);
    BEGIN
      INIT;
      "Line No." := LineNo;
      "Entry No." := pEventId;
      "No." := pEventCode;
      "Posting Date" := pDateFilter;
      INSERT(FALSE);
      LineNo += 1;
    END;

    LOCAL PROCEDURE InsertGSActivities@1100281002();
    BEGIN
      InsertEvent(-101,'', DateFilter1);
      InsertEvent(250, '', DateFilter1);
      InsertEvent(300, '', DateFilter1);
      InsertEvent(301, '', DateFilter1);
      InsertEvent(400, '', DateFilter1);
      InsertEvent(-100, '', DateFilter1); // s‚parateur
      InsertEvent(100, '', DateFilter1);
      InsertEvent(112, '', DateFilter1);
      InsertEvent(-100, '', DateFilter2); // s‚parateur
      InsertEvent(-101,'', DateFilter2);
      InsertEvent(250, '', DateFilter2);
      InsertEvent(300, '', DateFilter2);
      InsertEvent(301, '', DateFilter2);
      InsertEvent(400, '', DateFilter2);
      InsertEvent(-100, '', DateFilter2); // s‚parateur
      InsertEvent(100, '', DateFilter2);
      InsertEvent(112, '', DateFilter2);
    END;

    LOCAL PROCEDURE InsertTCActivities@1100281003();
    BEGIN
      InsertEvent(-101,'', DateFilter1);
      InsertEvent(-1, '200|201',DateFilter1); // nb service total : 200 + 201
      InsertEvent(200, '', DateFilter1);
      InsertEvent(201, '', DateFilter1);
      //InsertEvent(??, ''); Nb services status cr‚es / ouverts
      InsertEvent(240, 'DIAG*', DateFilter1);
      InsertEvent(240, 'SCE_HAB', DateFilter1);
      InsertEvent(-100, '', DateFilter2); // s‚parateur
      InsertEvent(-101,'', DateFilter2);
      InsertEvent(-1, '200|201',DateFilter2); // nb service total : 200 + 201
      InsertEvent(200, '', DateFilter2);
      InsertEvent(201, '', DateFilter2);
      //InsertEvent(??, ''); Nb services status cr‚es / ouverts
      InsertEvent(240, 'DIAG*', DateFilter2);
      InsertEvent(240, 'SCE_HAB', DateFilter2);
    END;

    LOCAL PROCEDURE CalcStats@1100281004();
    VAR
      lInt@1100281000 : Integer;
    BEGIN
      ExcelBuffer.RESET;
      ExcelBuffer.DELETEALL;
      IF NOT FINDSET THEN
        EXIT;
      REPEAT
        IF "Posting Date" < WORKDATE THEN BEGIN
          ExcelBuffer."Row No." := "Line No.";
          // User
          ExcelBuffer."Column No." := 1;
          IF CalcLog("Entry No.", "No.", "Posting Date", ExcelBuffer) THEN
            ExcelBuffer.INSERT;
          // Groupe
          ExcelBuffer."Column No." := 2;
          IF CalcLog("Entry No.", "No.", "Posting Date", ExcelBuffer) THEN
            ExcelBuffer.INSERT;
          // Tous
          ExcelBuffer."Column No." := 3;
          IF CalcLog("Entry No.", "No.", "Posting Date", ExcelBuffer) THEN
            ExcelBuffer.INSERT;
        END;
      UNTIL NEXT=0;
    END;

    LOCAL PROCEDURE CalcLog@1100281005(pEventId@1100281001 : Integer;pSourceFilter@1100281002 : Code[20];pDate@1100281004 : Date;VAR pExcelBuff@1100281003 : Record 370) : Boolean;
    VAR
      lValue@1100281000 : Integer;
    BEGIN
      UserServLog.RESET;
      SetLogFilter(UserServLog, ExcelBuffer."Column No.", pEventId, pSourceFilter, pDate);
      IF UserServLog.ISEMPTY THEN
        EXIT(FALSE);

      IF ServLog.IsExistEvent(pEventId) THEN
        lValue := UserServLog.COUNT
      ELSE BEGIN
        UserServLog.FINDSET(FALSE);
        REPEAT
          lValue += UserServLog."No. Of Events";
        UNTIL UserServLog.NEXT=0;
      END;
      IF lValue = 0 THEN
        EXIT(FALSE);
      ExcelBuffer."Cell Value as Text" := FORMAT(lValue);
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CalcCellData@1100281007();
    VAR
      lInt@1100281000 : Integer;
    BEGIN
      CLEAR(MATRIX_CellData);
      FOR lInt := 1 TO 3 DO BEGIN
        IF (lInt = 1) OR ((lInt = 2) AND CellValue2Visible) OR ((lInt = 3) AND CellValue3Visible) THEN BEGIN
          IF "Posting Date" = WORKDATE THEN BEGIN
            ExcelBuffer."Cell Value as Text" := '';
            ExcelBuffer."Column No." := lInt;
            IF CalcLog("Entry No.", "No.", "Posting Date", ExcelBuffer) THEN;
          END
          ELSE
            IF NOT ExcelBuffer.GET("Line No.", lInt) THEN
              ExcelBuffer."Cell Value as Text" := '';
          IF ExcelBuffer."Cell Value as Text" = '' THEN
            MATRIX_CellData[lInt] := 0
          ELSE
            EVALUATE(MATRIX_CellData[lInt], ExcelBuffer."Cell Value as Text");
        END;
      END;
    END;

    PROCEDURE SetLogFilter@1100281000(VAR pUserServLog@1100281000 : Record 50113;pWhich@1100281001 : ' ,User,Team,All';pEventId@1100281002 : Integer;pSourceFilter@1100281003 : Code[20];pDate@1100281004 : Date);
    BEGIN
      WITH pUserServLog DO BEGIN
        CASE pWhich OF
          pWhich::User : BEGIN
            SETCURRENTKEY("User ID", "Event ID", "Event Date");
            SETRANGE("User ID", UserFilter);
          END;
          pWhich::Team : BEGIN
            SETCURRENTKEY("Event ID","Event Date","Team Group Code");
            SETRANGE("Team Group Code", UserTeamFilter);
          END;
          pWhich::All : BEGIN
            SETCURRENTKEY("Event ID", "Event Date");
          END;
          ELSE ERROR('');
        END; // CASE
        SETRANGE("Event Date", pDate);
        IF pEventId = -1 THEN
          SETFILTER("Event ID", pSourceFilter)
        ELSE BEGIN
          SETRANGE("Event ID", pEventId);
          IF pSourceFilter <> '' THEN
            SETFILTER("Source ID", pSourceFilter);
        END;
      END;
    END;

    PROCEDURE DrillActivities@1100281010(pWhich@1100281002 : ' ,User,Team,All');
    BEGIN
      IF "Entry No." = 0 THEN
        EXIT;
      CASE pWhich OF
        pWhich::Team :
          IF NOT CellValue2Visible THEN EXIT;
        pWhich::All :
          IF NOT CellValue3Visible THEN EXIT;
      END;
      UserServLog.RESET;
      UserServLog.FILTERGROUP(2);
      SetLogFilter(UserServLog, pWhich, Rec."Entry No.", Rec."No.", Rec."Posting Date");
      UserServLog.FILTERGROUP(0);
      PAGE.RUN(0, UserServLog);
    END;

    PROCEDURE GetEventDesc@1100281006(pEventId@1100281001 : Integer;pCode@1100281000 : Code[20];pDate@1100281002 : Date) : Text[80];
    BEGIN
      CASE pEventId OF
        -100 : EXIT(''); //Text100);
        -101 : EXIT(STRSUBSTNO(Text101, pDate));
        -1 : EXIT(Text011);
        ELSE EXIT(ServLog.GetEventDesc(pEventId, pCode));
      END;
    END;

    BEGIN
    {
      /** @r IMH01 @d 17/06/11 @a ISAT.ST @v IMH6.01.161 @s Log Service @c Cr‚ation objet */
    }
    END.
  }
}