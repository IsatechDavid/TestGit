OBJECT Page 50330 Campaign Html Page
{
  OBJECT-PROPERTIES
  {
    Date=03/12/12;
    Time=14:48:22;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Html Page;
               FRA=Carte ‚vŠnement climatique];
    SourceTable=Table50000;
    PageType=Card;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             ViewOnly := TRUE;
           END;

    OnClosePage=VAR
                  lQCMgt@1100281000 : Codeunit 50027;
                BEGIN
                END;

    ActionList=ACTIONS
    {
      { 1100481000;  ;ActionContainer;
                      Name=<Action1100481000>;
                      ActionContainerType=NewDocumentItems }
      { 1100481001;1 ;Action    ;
                      CaptionML=FRA=GO;
                      Promoted=Yes;
                      InFooterBar=Yes;
                      PromotedIsBig=Yes;
                      PromotedCategory=Process;
                      RunFormMode=View }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                CaptionML=ENU=General;
                ContainerType=ContentArea }

    { 1000000006;1;Field  ;
                CaptionML=FRA=Taux d'occupation global;
                SourceExpr=GlobalOccupationRate;
                Editable=FALSE }

    { 1000000007;1;Group  ;
                CaptionML=FRA=Carte;
                GroupType=Group }

    { 1000000005;2;Field  ;
                Name=Browser;
                SourceExpr=HTML;
                ControlAddIn=[FreddyK.BrowserControl;PublicKeyToken=58e587b763c2f132];
                OnControlAddIn=VAR
                                 lAbiGeoMgt@1100281002 : Codeunit 50011;
                                 str@1000 : Text[100];
                                 i@1003 : Integer;
                               BEGIN
                                 ProviderNo := FORMAT(Data);
                                 //IF STRLEN(PROVIDERNO) > 2 THEN BEGIN
                                 //    ProviderNo := COPYSTR(ProviderNo,2,STRLEN(ProviderNo)-2);
                                   GET(ProviderNo);
                                   CurrPage.UPDATE(FALSE);
                                 //End;
                               END;
                                }

    { 1000000000;1;Group  ;
                Name=Provider;
                CaptionML=FRA=Prestataires;
                Editable=False;
                GroupType=Group }

    { 1000000001;2;Group  ;
                GroupType=Repeater }

    { 1000000002;3;Field  ;
                SourceExpr="No.";
                OnDrillDown=BEGIN
                              LoadCampProvMap();
                            END;
                             }

    { 1000000003;3;Field  ;
                SourceExpr=Name }

    { 1100281000;3;Field  ;
                CaptionML=FRA=Condition d'intervention;
                SourceExpr=IsCampSetup }

    { 1100281001;3;Field  ;
                CaptionML=FRA=Taux d'occupation;
                SourceExpr="Targeted Controls Min." }

    { 1100281003;3;Field  ;
                CaptionML=FRA=Delai d'intervention;
                SourceExpr=ResponseTime }

    { 1000000004;3;Field  ;
                SourceExpr=City }

    { 1100281004;3;Field  ;
                Name=MainBuildingTradeCtrl;
                CaptionML=[ENU=Main Building Trade;
                           FRA=Corps de m‚tier];
                SourceExpr=ProviderInfoPaneMgt.GetMainBuildDescr("No.");
                Editable=FALSE }

    { 1100281002;3;Field  ;
                Name=MainSpecializationNoCtrl;
                CaptionML=[ENU=Main Specialization No;
                           FRA=Sp‚cialit‚ principale];
                SourceExpr=ProviderInfoPaneMgt.GetMainSpecDescr("No.");
                Editable=FALSE }

  }
  CODE
  {
    VAR
      ProviderSetup@1100281015 : Record 50011;
      PSRB@1100281009 : TEMPORARY Record 51000;
      CampProvSetup@1000000002 : Record 50034;
      MapCode@1100281010 : Code[10];
      ContentCode@1100281003 : Code[20];
      HTML@1000 : BigText;
      VALUE@1001 : Decimal;
      URL@1100481000 : Text[1024];
      TT@1009 : Codeunit 419;
      ProviderNo@1100281000 : Code[20];
      GroupNo@1100281018 : Code[20];
      SpecializationCode@1100281001 : Code[10];
      QualityControlNo@1100281011 : Code[10];
      QualityControlLineNo@1100281012 : Integer;
      CampaignNo@1100281013 : Code[20];
      ViewOnly@1100281002 : Boolean;
      Text001@1100281004 : TextConst 'ENU="Updated ";FRA=Mise … jour effectu‚e';
      Urgent@1100281005 : Boolean;
      Text002@1100281006 : TextConst 'ENU="You must specify the operating address of the provider ";FRA=Vous devez pr‚ciser l''adresse op‚rationnelle du pr‚stataire';
      Text003@1100281007 : TextConst 'ENU="You must update the table containing the GEOCONCEPT code ";FRA="Vous devez mettre … jour la table contenant le code GEOCONCEPT "';
      Points@1100281008 : BigText;
      IsGetProviderSetup@1100281014 : Boolean;
      SearchAround@1100281016 : Boolean;
      DistanceKm@1100281017 : Integer;
      Text004@1100281019 : TextConst 'ENU=You can not update data from the statistical grouping;FRA=Vous ne pouvez-pas mettre … jour les donn‚es du groupement statistique';
      Text005@1100281020 : TextConst 'ENU=File %1 create error.;FRA=Erreur … la cr‚ation du fichier %1.';
      PointToShow@1100281021 : Text[80];
      HtmlMgt@1000000000 : Codeunit 50121;
      CRLF@1000000001 : Text[2];
      Text006@1100281022 : TextConst 'ENU=Provider Search in progress ...;FRA=Recherche pr‚stataires en cours ...';
      Text007@1100281023 : TextConst 'FRA=Recup‚ration des pr‚stataires ...';
      Chrono@1100281024 : DateTime;
      OccupationRate@1100281025 : Integer;
      Text008@1100281026 : TextConst 'FRA=Vous devez d‚finir au moins une comp‚tance g‚ographique;ENN=You must define at least one geographical reference';
      Text009@1100281027 : TextConst 'ENU=Campaign was not active;FRA=L''‚venement  climatique n''est plus actif';
      Text010@1100281028 : TextConst 'ENU=You have exceeded the campaign end date;FRA=Vous avez d‚pass‚ la date de fin de l''‚venement climatique';
      GlobalOccupationRate@1100281030 : Integer;
      GlobalOccupationCount@1100281031 : Integer;
      GlobalCount@1100281032 : Integer;
      ResponseTime@1100281029 : Integer;
      ProviderInfoPaneMgt@1100281033 : Codeunit 50021;

    PROCEDURE SetMap@1100281007(pMapCode@1100281000 : Code[10];pMapContent@1100281001 : Code[10]);
    BEGIN
      MapCode := pMapCode;
      ContentCode := pMapContent;
    END;

    PROCEDURE LoadCampaignSearch@1100281006(pCampaignNo@1100281000 : Code[20]);
    VAR
      lBigText@1100281002 : BigText;
      lCampSpeArea@1100281003 : Record 50036;
      lPostCode@1100281007 : Record 225;
      i@1100281004 : Integer;
      lLongitude@1100281005 : Integer;
      lLatitude@1100281006 : Integer;
      lAbiCampGeo@1100281001 : Record 50086;
      lCampaign@1100281008 : Record 5071;
      lCampaignMgt@1100281009 : Codeunit 50206;
    BEGIN

      CampaignNo := pCampaignNo;
      lCampaignMgt.CheckAccessAllowed(CampaignNo);

      lAbiCampGeo.SETRANGE("Campaign No.",pCampaignNo);
      IF lAbiCampGeo.ISEMPTY THEN
        ERROR(Text008);
      lCampaign.GET(CampaignNo);
      IF NOT lCampaign.Active THEN
        ERROR(Text009);
      IF (lCampaign."Ending Date" <> 0D)  AND (WORKDATE()  > lCampaign."Ending Date")  THEN
        ERROR(Text010);
      MapCode := 'ZONE';
      ContentCode := 'CAMPSEARCH';
      Load(MapCode,lBigText);
    END;

    PROCEDURE genCampSearchInsert@1000000003(VAR pOutStream@1000000000 : OutStream);
    VAR
      lAbiCampGeo@1000000002 : Record 50086;
    BEGIN
      lAbiCampGeo.SETRANGE("Campaign No.",CampaignNo);
      lAbiCampGeo.SETRANGE(Exclusion,FALSE);
      IF lAbiCampGeo.FINDSET() THEN BEGIN
        REPEAT
          pOutStream.WRITETEXT('g_preselectedObjectIds += ''' + lAbiCampGeo."End Ref. Geo. Code" + ';'';');
          pOutStream.WRITETEXT();
        UNTIL lAbiCampGeo.NEXT() = 0;
      END;
    END;

    PROCEDURE genCampSearchInsert2@1100281022(VAR pOutStream@1100281000 : OutStream);
    VAR
      lCampProvSetup@1100281001 : Record 50034;
      lServiceHeader@1100281003 : Record 5900;
      lInterDesc@1100281004 : Record 50070;
      lProvider@1100281005 : Record 50000;
      i@1100281002 : Integer;
      j@1100281007 : Integer;
      lProviderDic@1100281006 : DotNet "'mscorlib'.System.Collections.Generic.Dictionary`2";
      lProviderNo@1100281008 : Code[20];
    BEGIN
       // D‚placer la carte
      pOutStream.WRITETEXT('document.getElementById("postForm").style.visibility = ''hidden'';');
      pOutStream.WRITETEXT();
      pOutStream.WRITETEXT('document.getElementById("theMap").style.left = ''0px'';');
      pOutStream.WRITETEXT();
      pOutStream.WRITETEXT('document.getElementById("mapTools").style.visibility = ''hidden'';');
      pOutStream.WRITETEXT();
      i := 1;
      // affichage des services avec interventions … assigner
      lServiceHeader.SETRANGE("Campaign No.",CampaignNo);
      lServiceHeader.SETRANGE(Status,lServiceHeader.Status::"In Process");
      IF lServiceHeader.FINDSET() THEN

        REPEAT
         lInterDesc.SETRANGE("Service Header No.",lServiceHeader."No.");
         IF NOT lInterDesc.ISEMPTY() THEN
            HtmlMgt.AddCampServiceFlag(lServiceHeader,pOutStream,'SmallBluePoint',i);
        UNTIL lServiceHeader.NEXT()=0;
      DELETEALL();
      lCampProvSetup.SETRANGE("Campaign No.",CampaignNo);
      IF lCampProvSetup.FINDSET() THEN
        REPEAT
          lProvider.GET(lCampProvSetup."No.");
          // Affichage des prestataires ne pouvant plus ˆtre contact‚s
          lCampProvSetup.CALCFIELDS("Current Service Interv. Count");
          IF lCampProvSetup."Campaign Exclusion" OR (
            (lCampProvSetup."Interv. Maximum" > 0) AND
            (lCampProvSetup."Current Service Interv. Count" >= (lCampProvSetup."Interv. Maximum"))) THEN BEGIN
              IF CheckProvider(lProvider) THEN BEGIN
                HtmlMgt.AddCampProviderFlag(lCampProvSetup."No.",CampaignNo,pOutStream,'SmallRedPoint',i);
                Rec := lProvider;
                CalcOccupationRate(Rec);
                INSERT();
              END;
          END ELSE BEGIN
          // Affichage des prestataires d‚j… contact‚.
            IF CheckProvider(lProvider) THEN BEGIN
              //IMH06 isat.nfo
              IF lCampProvSetup."Current Service Interv. Count" = 0 THEN
                HtmlMgt.AddCampProviderFlag(lCampProvSetup."No.",CampaignNo,pOutStream,'SmallGreenPoint',i)
              ELSE
                HtmlMgt.AddCampProviderFlag(lCampProvSetup."No.",CampaignNo,pOutStream,'SmallOrangePoint',i);
              Rec := lProvider;
              CalcOccupationRate(Rec);
              INSERT();
            END;
          END;
        UNTIL lCampProvSetup.NEXT()= 0;
      lProviderDic := lProviderDic.Dictionary();
       GetCampProvider(CampaignNo,lProviderDic);
       FOR j := 1 TO lProviderDic.Count() DO BEGIN
         lProviderDic.TryGetValue(j,lProviderNo);
         IF NOT GET(lProviderNo) THEN BEGIN
            lProvider.GET(lProviderNo);
            IF CheckProvider(lProvider) THEN BEGIN
              HtmlMgt.AddProviderFlag3(lProviderNo,pOutStream,'SmallGreenPoint',i);
              Rec := lProvider;
              CalcOccupationRate(Rec);
              INSERT();
            END;
         END;
       END;
       //<<IMH09 isat.nfo
      IF i = 1 THEN BEGIN
        pOutStream.WRITETEXT('return;');
        pOutStream.WRITETEXT();
      END;
       //>>IMH09 isat.nfo
    END;

    PROCEDURE SetPointToShow@1100281016(pPointToShow@1100281000 : Text[80]);
    BEGIN
      PointToShow := pPointToShow;
    END;

    PROCEDURE WriteHtmlFile@1100481003(VAR pUrl@1100481000 : Text[1024];pCode@1100281000 : Code[10];pBigText@1100281017 : BigText);
    VAR
      lHtmlPage@1100281007 : Record 50149;
      lAbiGeoProvider@1100281006 : Record 50016;
      lAbilityCampGeoProvider@1100281005 : Record 50015;
      lPostCode@1100281002 : Record 225;
      lMarketingSetup@1100281001 : Record 5079;
      lContactAltAddr@1100281008 : Record 5051;
      lProvider@1100281011 : Record 50000;
      lProviderBuffer@1100281024 : TEMPORARY Record 50000;
      lCampSpecArea@1100281016 : Record 50036;
      lProviderSetup@1100281018 : Record 50011;
      lServiceHeader@1100281020 : Record 5900;
      lNetFacVisit@1100281023 : Record 50105;
      lAbilityGeoSearchBuffer@1100281026 : TEMPORARY Record 51001;
      lPostCodeBuffer@1100281027 : TEMPORARY Record 225;
      lLatitude@1100281009 : Integer;
      lLongitude@1100281010 : Integer;
      lFile@1100481001 : File;
      lOutStream@1100481002 : OutStream;
      lLine@1100481004 : Text[1024];
      i@1100481005 : Integer;
      TEMP@1100481003 : BigText;
      lAbiGeoMgt@1100281003 : Codeunit 50011;
      lAscii@1100281014 : Codeunit 50119;
      lProviderSearchMgt@1100281025 : Codeunit 50000;
      lText@1100281013 : Text[30];
      lAddressOK@1100281019 : Boolean;
      lX@1100281021 : Integer;
      lY@1100281022 : Integer;
      lEndRef@1000000000 : Code[20];
    BEGIN

      lProviderSetup.GET();
      lFile.WRITEMODE := TRUE;
      lFile.TEXTMODE := TRUE;
      CRLF[1] := 13;
      CRLF[2] := 13;
      i := 0;

      IF FILE.EXISTS(pUrl) THEN
        FILE.ERASE(pUrl);

      IF lFile.CREATE(pUrl) THEN BEGIN
        lFile.CREATEOUTSTREAM(lOutStream);
        lHtmlPage.RESET();
        lHtmlPage.SETRANGE("Map Code",pCode);
        IF lHtmlPage.FINDSET() THEN BEGIN
          REPEAT
            IF (MapCode = 'ZONE') AND (ContentCode = 'CAMPSEARCH') AND (lHtmlPage.Html = '<INSERT>') THEN BEGIN
              genCampSearchInsert(lOutStream);
            END ELSE IF (MapCode = 'ZONE') AND (ContentCode = 'CAMPSEARCH') AND (lHtmlPage.Html = '<INSERT2>') THEN BEGIN
              genCampSearchInsert2(lOutStream);
            END ELSE IF (MapCode = 'ZONE') AND (ContentCode = 'CAMPSEARCH') AND (lHtmlPage.Html = '<!--<INSERT3>-->') THEN BEGIN
              lOutStream.WRITETEXT('<script>');
              lOutStream.WRITETEXT('var g_activeObjectSelection = false;');
              lOutStream.WRITETEXT();
              lOutStream.WRITETEXT('var g_activeObjectClick = false;');
              lOutStream.WRITETEXT();
              lOutStream.WRITETEXT('</script>');
            END ELSE BEGIN
              IF STRPOS(lHtmlPage.Html,'<URLGEOCONCEPT>')>0 THEN
                lHtmlPage.Html := HtmlMgt.Replace(lHtmlPage.Html, '<URLGEOCONCEPT>', lProviderSetup."Geoconcept Map Address");
              lOutStream.WRITETEXT(lHtmlPage.IBM2Ansi(lHtmlPage.Html));
            END;

            lOutStream.WRITETEXT();
          UNTIL lHtmlPage.NEXT()=0;
        END;
        lFile.CLOSE();
      END
      ELSE
        MESSAGE(Text005, pUrl);
    END;

    PROCEDURE Load@1100481000(pMAPCode@1100281002 : Text[30];pBigText@1100281003 : BigText) : BigInteger;
    VAR
      TEMP@1100481001 : BigText;
      lHtmlPage@1100481000 : Record 50149;
      lFile@1100481002 : File;
      lInstream@1100481003 : InStream;
      lWSH@1100281000 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      lProviderSetup@1100281001 : Record 50011;
      lUrl@1000000001 : Text[1024];
    BEGIN
      MapCode := pMAPCode;
      CLEAR(TEMP);
      //CREATE(lWSH, TRUE,TRUE);
      lProviderSetup.GET();
      lProviderSetup.TESTFIELD("NST Temporary Folder");
      lUrl :=
        FORMAT(lProviderSetup."NST Temporary Folder") + '\HTML' +
        USERID + '.html';
        //FORMAT(lWSH.ExpandEnvironmentStrings('%USERNAME%')) + '.html';

      IF EXISTS(lUrl) THEN BEGIN
        ERASE(lUrl);
      END;

      lHtmlPage.RESET();
      lHtmlPage.SETRANGE("Map Code",pMAPCode);
      IF lHtmlPage.ISEMPTY() THEN
        ERROR(Text003);
      WriteHtmlFile(lUrl,pMAPCode,pBigText);

      DOWNLOAD(lUrl,'','<TEMP>','',lUrl);
      TEMP.ADDTEXT('<html>');
      TEMP.ADDTEXT('<head></head>');
      TEMP.ADDTEXT('<body>');
      TEMP.ADDTEXT('<iframe src="' + lUrl + '" style="width:900px; height:700px;" frameborder="0"></iframe>');
      TEMP.ADDTEXT('</body>');
      TEMP.ADDTEXT('</html>');
      HTML := TEMP;
    END;

    PROCEDURE GetCampProvider@1100281004(pCampaignNo@1100281001 : Text[20];VAR pProviderDic@1100281010 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.Dictionary`2") rValue : Decimal;
    VAR
      lADOConn@1100281008 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000514-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Connection";
      lADORs@1100281007 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000535-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Recordset";
      lConnexion@1100281006 : Text[200];
      lPsSQL@1100281005 : Text[250];
      lConnectionID@1100281004 : Integer;
      lRecordsAffected@1100281003 : Integer;
      lOptions@1100281002 : Integer;
      lDialog@1100281009 : Dialog;
      i@1100281000 : Integer;
      lProviderNo@1100281011 : Code[20];
      Date@1100281012 : DateTime;
    BEGIN
      IF NOT CREATE(lADOConn) THEN  EXIT;
      IF NOT CREATE(lADORs) THEN EXIT;
      lDialog.OPEN(Text006);
      lConnexion := GetConnectionString();
      lADOConn.Open(lConnexion);
      lPsSQL := STRSUBSTNO('EXEC GetCampProvider ''%1'',''%2''', COMPANYNAME, pCampaignNo);
      lADORs := lADOConn.Execute(lPsSQL,lRecordsAffected,lOptions);
      lDialog.CLOSE();
      lDialog.OPEN(Text007);
      pProviderDic.Clear();
      IF NOT lADORs.EOF THEN BEGIN
        lADORs.MoveFirst;
        i := 1;
        REPEAT
          IF FORMAT(lADORs.Fields.Item(0).ActualSize) = FORMAT(0) THEN
            rValue := -1
          ELSE BEGIN
            pProviderDic.Add(i,FORMAT(lADORs.Fields.Item(0).Value));
            i += 1;
          END;
          lADORs.MoveNext;
        UNTIL lADORs.EOF;
      END;
      lDialog.CLOSE();
      lADORs.Close();
      lADOConn.Close();
      CLEAR(lADOConn);
      CLEAR(lADORs);
      //MESSAGE('%1',pProviderBuffer.COUNT());
    END;

    PROCEDURE GetConnectionString@1100281005() : Text[250];
    BEGIN
      ProviderSetup.GET();
      ProviderSetup.TESTFIELD("Database Name");
      ProviderSetup.TESTFIELD("Server Name");

      EXIT(
        'Provider=SQLOLEDB.1;Integrated Security=SSPI;Persist Security Info=False;Initial Catalog=' +
        ProviderSetup."Database Name" + ';Data Source=' +
        ProviderSetup."Server Name" );
    END;

    PROCEDURE IsCampSetup@1100281000() : Boolean;
    VAR
      lCampProvSetup@1100281000 : Record 50034;
    BEGIN
      //<<IMH10
      //EXIT(lCampProvSetup.GET(CampaignNo,"No."));
      IF lCampProvSetup.GET(CampaignNo,"No.") THEN;
      ResponseTime := lCampProvSetup."Response Time";  //IMH11

      EXIT(lCampProvSetup.Consulted);
      //>>IMH10
    END;

    PROCEDURE LoadCampProvMap@1100281001();
    VAR
      lCampProvHtmlPage@1100281000 : Page 50331;
    BEGIN
      GlobalCount:=0;
      GlobalOccupationRate :=0;
      GlobalOccupationCount :=0;
      GlobalCount := 0;
      lCampProvHtmlPage.LoadCampaignProviderSearch(CampaignNo,"No.");
      COMMIT();
      lCampProvHtmlPage.RUNMODAL();
      LoadCampaignSearch(CampaignNo);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE CheckProvider@1100281002(pProvider@1100281000 : Record 50000) : Boolean;
    VAR
      lCampaignSpec@1000000000 : Record 50035;
      lProviderSpec@1000000001 : Record 50006;
    BEGIN
      //<<IMH13
      IF ((pProvider.Status = pProvider.Status::Prospect) OR
         (pProvider.Status = pProvider.Status::Casual) OR
         (pProvider."Black List") OR
         (pProvider.Exclusion ) OR
         (pProvider."Temp. Exclusion" AND (pProvider."Temp. Exclusion Reason Code" <> 'T-DOCST') AND
         (pProvider."Temp. Exclusion End Date" > WORKDATE))) THEN
      //IMHXX isat.nfo
        EXIT(FALSE);

      lCampaignSpec.SETRANGE("Campaign No.", CampaignNo);
      lProviderSpec.SETRANGE("Provider No.", pProvider."No.");
      IF lProviderSpec.FINDSET THEN
        REPEAT
          lCampaignSpec.SETRANGE("Specialization Code", lProviderSpec."Specialization Code");
          IF NOT lCampaignSpec.ISEMPTY THEN
            EXIT(TRUE);
        UNTIL lProviderSpec.NEXT = 0;
      EXIT(FALSE);
      //>>IMH13
    END;

    PROCEDURE CalcOccupationRate@1000000001(VAR pProvider@1000000000 : Record 50000);
    VAR
      lCampProvSetup@1000000001 : Record 50034;
    BEGIN
      // Utilisation du champ "Min. Inter. Before Control" en temporaire
      OccupationRate := 0;
      GlobalCount += 1;
      ResponseTime := 0;
      //lProvider.GET("No.");
      IF lCampProvSetup.GET(CampaignNo,pProvider."No.") THEN BEGIN
        //ResponseTime := lCampProvSetup."Response Time";  //IMH11
        IF lCampProvSetup."Interv. Maximum" > 0 THEN BEGIN
          pProvider.CALCFIELDS("Current Service Interv. Nb");
          "Targeted Controls Min." := ROUND((pProvider."Current Service Interv. Nb" / (lCampProvSetup."Interv. Maximum" +
           pProvider."Current Interv. Limit Max.")) * 100,1,'=');
          GlobalOccupationCount += "Targeted Controls Min.";
          GlobalOccupationRate :=ROUND((GlobalOccupationCount / GlobalCount),1,'=');
       //   MESSAGE('%1',GlobalOccupationCount);
          EXIT;
        END;
      END;
      IF pProvider."Current Interv. Limit Max." <> 0 THEN BEGIN
        pProvider.CALCFIELDS("Current Service Interv. Nb");
        "Targeted Controls Min." :=
          ROUND((pProvider."Current Service Interv. Nb" / pProvider."Current Interv. Limit Max.") * 100,1,'=');
        GlobalOccupationCount += "Targeted Controls Min.";
        GlobalOccupationRate :=ROUND((GlobalOccupationCount / GlobalCount) ,1,'=');
      //      MESSAGE('%1',GlobalOccupationCount);
      END;
    END;

    BEGIN
    {
      /** @r IMH13 @d 25/09/12 @a ISAT.ZW @v IMH6.01.214 @s Ev‚nement climatique @h 3430
          @c proposer prestataire d‚couvert les sp‚cialit‚s de l'EVC */
      /** @r IMH12 @d 01/06/12 @a ISAT.ZW @v IMH6.01.020  @s Gestion Prestataires @h 3546
          @c Ajout fonctions GetMainSpecDescr et GetMainBuildDescr */
      /** @r IMH11 @d 01/06/11 @a ISAT.ZW @v IMH6.01.028 @s EVC @h 3542 @c Correction */
      /** @r IMH10 @d 30/05/11 @a ISAT.ZW @v IMH6.01.028 @s EVC @h 3534 @c Ajout‚ champ Consult‚ */
      /** @r IMH09 @d 14/05/12 @a ISAT.NFO @v IMH6.01.102 @s EVC @c problŠme quand il n'y a pas de point a afficher */
      /** @r IMH08 @d 27/04/12 @a ISAT.NFO @v IMH6.01.102 @s EVC @h 3341 @c problŠme de couleur de point */
      /** @r IMH07 @d 27/04/12 @a ISAT.NFO @v IMH6.01.102 @s EVC @h 3400 @c mdoification du calcul du taux d'occupation */
      /** @r IMH06 @d 27/04/12 @a ISAT.NFO @v IMH6.01.102 @s EVC @h 3390 @c tenir compte de la date de fin d'exclusion temp */
      /** @r IMH05 @d 27/04/12 @a ISAT.NFO @v IMH6.01.102 @s EVC @h 3344 @c r‚organisation de la page */
      /** @r IMH04 @d 26/04/12 @a ISAT.NFO @v IMH6.01.102 @s EVC @h 3391 @c Ajout de la fonction calcoccupationrate */
      /** @r IMH03 @d 24/04/12 @a ISAT.NFO @v IMH6.01.102 @s EVC @c Ajout de la fonction CHeckprovider */
      /** @r IMH02 @d 18/04/12 @a ISAT.NFO @v IMH6.01.102 @s EVC @c Modification du calcul du taux d'occupation */
      /** @r IMH01 @d 27/02/12 @a ISAT.NFO @v IMH6.01.102 @s EVC @c Cr‚ation objet */
    }
    END.
  }
}