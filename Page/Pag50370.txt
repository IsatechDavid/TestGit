OBJECT Page 50370 Service Header Control Invoi.
{
  OBJECT-PROPERTIES
  {
    Date=10/02/14;
    Time=11:36:19;
    Modified=Yes;
    Version List=4632;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Service Header Control Invoi.;
               FRA=Contr“le Facturation LP];
    SourceTable=Table5900;
    PageType=List;
    SourceTableTemporary=Yes;
    ActionList=ACTIONS
    {
      { 1100281010;  ;ActionContainer;
                      Name=<Action1100281010>;
                      ActionContainerType=ActionItems }
      { 1100281011;1 ;ActionGroup;
                      CaptionML=[ENU=Filters;
                                 FRA=Filtres] }
      { 1100281012;2 ;Action    ;
                      CaptionML=[ENU=Invoicing Duplicate;
                                 FRA=Doublon de Facturation];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=FilterLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 LoadTable(0);
                               END;
                                }
      { 1100281002;2 ;Action    ;
                      CaptionML=[ENU=In Progress and invoiced;
                                 FRA=En-cours et factur‚s];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 LoadTable(1);
                               END;
                                }
      { 1100281013;2 ;Action    ;
                      CaptionML=[ENU=Closed Not Invoiced;
                                 FRA=Clos Non Factur‚s];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 LoadTable(2);
                               END;
                                }
      { 1100281014;2 ;ActionGroup;
                      CaptionML=[ENU=Display;
                                 FRA=Afficher] }
      { 1100281015;3 ;Action    ;
                      CaptionML=[ENU=Display Service;
                                 FRA=Afficher Service];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=DepreciationBooks;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowService;
                               END;
                                }
      { 1100281016;3 ;Action    ;
                      CaptionML=[ENU=Display Service Header;
                                 FRA=Afficher Ligne Produit];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NewSparkle;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowServiceHeader;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100281000;0;Container;
                ContainerType=ContentArea }

    { 1100281001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100281007;2;Field  ;
                SourceExpr="No." }

    { 1100281003;2;Field  ;
                SourceExpr="Service Order Type" }

    { 1100281004;2;Field  ;
                SourceExpr="Service No." }

    { 1100281005;2;Field  ;
                SourceExpr="Reference No." }

    { 1100281006;2;Field  ;
                SourceExpr=Status }

    { 1100281018;2;Field  ;
                SourceExpr="Corporate No." }

    { 1100281019;2;Field  ;
                SourceExpr="Corporate Region Code" }

    { 1100281022;2;Field  ;
                SourceExpr="Service Creation Date" }

    { 1100281020;2;Field  ;
                SourceExpr="Finishing Date" }

    { 1100281021;2;Field  ;
                SourceExpr="Finishing Time" }

    { 1100281008;2;Field  ;
                SourceExpr="Sale Order Nb" }

    { 1100281009;1;Part   ;
                SubFormLink=Source Table ID=CONST(5900),
                            Source Key Code 1=FIELD(No.);
                PagePartID=Page50156;
                PartType=Page;
                ShowFilter=Yes }

    { 1100281017;1;Part   ;
                Name=Invoicing Matrix;
                SubFormLink=Corporate No.=FIELD(Corporate No.),
                            Service Order Type=FIELD(Service Order Type),
                            Corporate Region Code=FIELD(Corporate Region Code),
                            Enable=CONST(Yes),
                            Sale Order Creation=CONST(Yes);
                PagePartID=Page50236;
                PartType=Page }

  }
  CODE
  {
    VAR
      TotalCounter@1100281003 : Integer;
      CurrentCounter@1100281002 : Integer;
      ModuloCounter@1100281001 : Integer;
      WDialog@1100281000 : Dialog;
      Text001@1100281004 : TextConst 'FRA=Traitement\@1@@@@@@@@@@@@@@@@@@@';
      SalesInvoicingMgt@1100281005 : Codeunit 50079;
      Text002@1100281006 : TextConst 'FRA=Merci de saisir un filtre de date fin.';

    PROCEDURE ShowService@1100281004();
    VAR
      lService@1100281000 : Record 50066;
    BEGIN
      IF NOT lService.GET("Service No.") THEN
        EXIT;
      FORM.RUN(FORM::"Service Card",lService);
    END;

    PROCEDURE ShowServiceHeader@1100281005();
    VAR
      lServiceHeader@1100281000 : Record 5900;
    BEGIN
      IF NOT lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,"No.") THEN
        EXIT;
      lServiceHeader.ShowCard(FALSE);
    END;

    PROCEDURE LoadTable@1100281001(pType@1100281000 : 'InvoicingDuplicate,InProgressinvoiced,ClosedNotInvoiced');
    VAR
      lServiceHeader@1100281001 : Record 5900;
      lToInsert@1100281002 : Boolean;
      lInvoicingMatrixSetup@1100281003 : Record 50137;
    BEGIN
      lServiceHeader.SETCURRENTKEY(Status);
      CASE pType OF
        pType::InvoicingDuplicate : BEGIN
          lServiceHeader.SETFILTER(Status,'%1|%2',Status::"In Process",Status::Finished);
          IF GETFILTER("Finishing Date") = '' THEN
            ERROR(Text002);
          lServiceHeader.SETFILTER("Finishing Date", GETFILTER("Finishing Date"));
          //lServiceHeader.SETFILTER("Sale Order Nb",'>%1',1);
        END;
        pType::InProgressinvoiced : BEGIN
          lServiceHeader.SETRANGE(Status,Status::"In Process");
          //lServiceHeader.SETFILTER("Sale Order Nb", '>%1',0);
        END;
        pType::ClosedNotInvoiced : BEGIN
          IF GETFILTER("Finishing Date") = '' THEN
            ERROR(Text002);
          lServiceHeader.SETFILTER("Finishing Date", GETFILTER("Finishing Date"));
          lServiceHeader.SETRANGE(Status, Status::Finished);
          //lServiceHeader.SETRANGE("Sale Order Nb", 0);
          lServiceHeader.SETRANGE("Real Estate Diag.", FALSE);
          lServiceHeader.SETRANGE("Home Service", FALSE);
        END;
      END;

      //error(format(lServiceHeader.count));

      TotalCounter := lServiceHeader.COUNT;
      CurrentCounter := 0;
      ModuloCounter := ROUND(TotalCounter * 5 / 100,1,'>');
      WDialog.OPEN(Text001);

      IF lServiceHeader.FINDSET THEN
        REPEAT
          lToInsert := FALSE;
          CurrentCounter += 1;
          IF CurrentCounter MOD ModuloCounter =  1 THEN BEGIN
            WDialog.UPDATE(1,ROUND(CurrentCounter / TotalCounter * 9999,1));
          END;

          lServiceHeader.CALCFIELDS("Sale Order Nb");
          CASE pType OF
            pType::InvoicingDuplicate : BEGIN
              IF lServiceHeader."Sale Order Nb" > 1 THEN
                lToInsert := TRUE;
            END;
            pType::InProgressinvoiced : BEGIN
              IF lServiceHeader."Sale Order Nb" > 0 THEN
                lToInsert := TRUE;
            END;
            pType::ClosedNotInvoiced : BEGIN
              IF lServiceHeader."Sale Order Nb" = 0 THEN
                IF SalesInvoicingMgt.CheckCreationAvailable(lInvoicingMatrixSetup
                         ,lServiceHeader."Corporate No."
                         ,lServiceHeader."Service Order Type"
                         ,lServiceHeader."Corporate Region Code",
                         lServiceHeader."Service No.",'', lServiceHeader) THEN
                  lToInsert := TRUE;
            END;
          END;
          IF lToInsert THEN BEGIN
            Rec := lServiceHeader;
            INSERT;
          END;
        UNTIL lServiceHeader.NEXT = 0;

      WDialog.CLOSE;
    END;

    BEGIN
    {
      /** @r IMH01 @d 03/10/13 @a ISAT.SB @v A compl‚ter @s OCTOBRE @h 4632 */
    }
    END.
  }
}