OBJECT Page 50379 Provider Second Search Result
{
  OBJECT-PROPERTIES
  {
    Date=27/05/14;
    Time=16:53:39;
    Modified=Yes;
    Version List=IMH6.01,IMH6.01.P011;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Provider Second Search Result;
               FRA=R‚sultat recherche prestataire];
    SourceTable=Table51006;
    DataCaptionExpr=ServiceHeader."No.";
    SourceTableView=SORTING(Code 1,Code 2,Code 3,Code 4,Code 5,Code 6);
    PageType=Card;
    SourceTableTemporary=Yes;
    PromotedActionCategoriesML=[ENU=Action,Process;
                                FRA=Action,Information];
    ShowFilter=Yes;
    OnInit=BEGIN
             SecondSearchSetup.GET;
             SecondSearchSetup.CALCFIELDS("High Priority Picture", "Normal Priority Picture", "Lower Priority Picture");
             ShowPriorityPicture := SecondSearchSetup."High Priority Picture".HASVALUE OR
                                    SecondSearchSetup."Normal Priority Picture".HASVALUE OR
                                    SecondSearchSetup."Lower Priority Picture".HASVALUE;
           END;

    OnOpenPage=VAR
                 lUserPerm@1000000000 : Codeunit 50093;
               BEGIN
                 ShowEmergency := Emergency;
                 MapEnabled := lUserPerm.IsAdminForSetupID(27); //IMH03.ST
               END;

    OnAfterGetRecord=BEGIN
                       GetRecord;
                     END;

    OnQueryClosePage=BEGIN
                       IF IsOk THEN
                         EXIT;
                       CASE CloseAction OF
                         ACTION::Close,
                         ACTION::Cancel,
                         ACTION::LookupCancel : BEGIN
                           IF CONFIRM(Text002) THEN BEGIN
                             EXIT;
                           END ELSE BEGIN
                             ERROR('');;
                           END;
                         END;
                       END;
                     END;

    ActionList=ACTIONS
    {
      { 1100281020;  ;ActionContainer;
                      Name=<Action1100281020>;
                      ActionContainerType=ActionItems }
      { 1100281021;1 ;Action    ;
                      Name=CallAct;
                      ShortCutKey=Ctrl+Q;
                      CaptionML=[ENU=C&all;
                                 FRA=&Appel];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=AddContacts;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 ProviderCall;
                               END;
                                }
      { 1000000000;1 ;Action    ;
                      Name=Map;
                      CaptionML=[ENU=Map;
                                 FRA=Carte];
                      Promoted=Yes;
                      Visible=MapEnabled;
                      Enabled=MapEnabled;
                      Image=Segment;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lPSRB@1100281004 : TEMPORARY Record 51000;
                                 lGeographicalReference@1100281003 : Record 50013;
                                 lServiceHeader@1100281001 : Record 5900;
                                 lHtmlPage@1100281000 : Page 50174;
                                 lRec@1100281005 : Record 51006;
                                 lPostCode@1100281006 : Record 225;
                               BEGIN
                                 //IMH03.ST
                                 lRec := Rec;
                                 lHtmlPage.LoadProviderSearch2(Rec, ServiceHeader);
                                 Rec := lRec;
                                 lHtmlPage.RUN;
                               END;
                                }
      { 1100281031;  ;ActionContainer;
                      Name=<Action1100281031>;
                      ActionContainerType=RelatedInformation }
      { 1100281028;1 ;Action    ;
                      Name=UrgenceCtrl;
                      CaptionML=[ENU=Emmergency;
                                 FRA=Urgence];
                      Promoted=Yes;
                      Visible=ShowEmergency;
                      PromotedIsBig=Yes;
                      Image=WorkCenterLoad;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 EXIT;
                               END;
                                }
      { 1100281029;1 ;Action    ;
                      Name=ServHeaderCard;
                      CaptionML=[ENU=Service Header;
                                 FRA=Ligne produit];
                      Promoted=Yes;
                      Image=NewSparkle;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ServiceHeader.ShowCard(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100281010;0;Container;
                ContainerType=ContentArea }

    { 1100281002;1;Group  ;
                Name=DetailGrp;
                CaptionML=[ENU=Details;
                           FRA=D‚tails];
                GroupType=Group }

    { 1100281003;2;Field  ;
                Name=ServiceOrderCtrl;
                CaptionML=[ENU=Service Order Type;
                           FRA=Type produit];
                SourceExpr=ServiceHeader."Service Order Type";
                Editable=FALSE;
                Style=Attention;
                StyleExpr=TRUE }

    { 1100281004;2;Field  ;
                Name=CorporateCtrl;
                CaptionML=[ENU=Corporate;
                           FRA=Grand compte];
                SourceExpr=CorporateText;
                Editable=FALSE }

    { 1100281006;2;Field  ;
                Name=AddressCtrl;
                CaptionML=[ENU=Address;
                           FRA=Adresse MEO];
                SourceExpr=AddressText;
                Editable=FALSE }

    { 1100281005;2;Field  ;
                Name=SpecializationCtrl;
                CaptionML=[ENU=Researched Specialization;
                           FRA=Sp‚cialit‚s recherch‚es];
                SourceExpr=SpecializationDemandList;
                Editable=FALSE }

    { 1100281023;1;Group  ;
                Name=ProviderFoundGrp;
                CaptionML=[ENU=Providers Found;
                           FRA=Prestataires trouv‚s];
                GroupType=Group }

    { 1100281019;2;Group  ;
                Name=ProvFoundRep;
                GroupType=Repeater }

    { 1100281018;3;Field  ;
                Name=SpecializationsCtrl;
                CaptionML=[ENU=Accepted Specialization Nb;
                           FRA=Nb sp‚cialit‚s couvertes];
                SourceExpr=FORMAT("Specialization Nb") + ' / ' + FORMAT("Specialization Search Nb");
                Editable=FALSE }

    { 1100281017;3;Field  ;
                CaptionML=[ENU=Specializations;
                           FRA=Sp‚cialit‚s];
                SourceExpr=GetSpecializationDescription("Specialization Filter");
                Editable=FALSE }

    { 1100281016;3;Field  ;
                DrillDown=No;
                SourceExpr="Provider Name";
                Style=Attention;
                StyleExpr=StyleStatut }

    { 1100281030;3;Field  ;
                CaptionML=[ENU=Priority;
                           FRA=Priorit‚];
                SourceExpr=Picture;
                Visible=ShowPriorityPicture }

    { 1000000001;3;Field  ;
                CaptionML=[ENU=Follow Up;
                           FRA=Suivi];
                SourceExpr=Provider."Follow Up" }

    { 1100281014;3;Field  ;
                DrillDown=No;
                SourceExpr="Provider Status";
                Style=Attention;
                StyleExpr=StyleStatut }

    { 1100281008;3;Field  ;
                SourceExpr=Refused;
                Visible=FALSE;
                Editable=FALSE }

    { 1100281007;3;Field  ;
                SourceExpr="Non-Accept. Reason Code";
                Editable=FALSE }

    { 1100281000;3;Field  ;
                SourceExpr="Non-Accept. Comments";
                Editable=FALSE }

    { 1100281013;3;Field  ;
                DrillDown=No;
                SourceExpr="Provider Without Call" }

    { 1100281009;3;Field  ;
                DecimalPlaces=2:0;
                SourceExpr=Distance;
                Editable=FALSE }

    { 1100281011;3;Field  ;
                DrillDown=No;
                SourceExpr="Provider Post Code" }

    { 1100281012;3;Field  ;
                DrillDown=No;
                SourceExpr="Provider City" }

    { 1100281015;3;Field  ;
                Lookup=No;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="Provider No.";
                Editable=FALSE }

    { 1100281001;3;Field  ;
                SourceExpr="Code 1";
                Visible=FALSE;
                Editable=FALSE }

    { 1100281022;3;Field  ;
                SourceExpr="Code 2";
                Visible=FALSE;
                Editable=FALSE }

    { 1100281024;3;Field  ;
                SourceExpr="Code 3";
                Visible=FALSE;
                Editable=FALSE }

    { 1100281025;3;Field  ;
                SourceExpr="Code 4";
                Visible=FALSE;
                Editable=FALSE }

    { 1100281026;3;Field  ;
                SourceExpr="Code 5";
                Visible=FALSE;
                Editable=FALSE }

    { 1100281027;3;Field  ;
                SourceExpr="Code 6";
                Visible=FALSE;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      SecondSearchSetup@1100281014 : Record 50133;
      ServiceHeader@1100281000 : Record 5900;
      ProvSecondSearchBuffer@1100281002 : TEMPORARY Record 51006;
      SpecialityFilter@1100281008 : Text[100];
      SpecializationDemandList@1100281001 : Text[1024];
      AddressText@1100281003 : Text[1024];
      CorporateText@1100281004 : Text[1024];
      StyleStatut@1100281005 : Boolean INDATASET;
      Text001@1100281006 : TextConst 'ENU=This provider has been refused (%1)\Do you want to recall ?;FRA=Ce prestataire a d‚j… ‚t‚ refus‚ (%1)\Souhaitez-vous le rappeler ?';
      ShowEmergency@1100281007 : Boolean INDATASET;
      Text002@1100281009 : TextConst 'ENU=Do you want to stop search ?;FRA=Souhaitez vous annuler la recherche ?';
      IsOk@1100281010 : Boolean;
      Provider@1000000000 : Record 50000;
      MapEnabled@1000000001 : Boolean INDATASET;
      ShowPriorityPicture@1100281011 : Boolean INDATASET;

    PROCEDURE SetParameter@1100281001(pServiceHeader@1100281000 : Record 5900;pSpecialityFilter@1100281001 : Text[100]);
    BEGIN
      ServiceHeader := pServiceHeader;

      AddressText :=
        ServiceHeader."Ship-to Address" + ' ' +
        ServiceHeader."Ship-to Address 2" + ' ' +
        ServiceHeader."Ship-to Post Code" + ' ' +
        ServiceHeader."Ship-to City";

      CorporateText := ServiceHeader."Corporate No." + ' ' + ServiceHeader."Corporate Region Code";
      SpecialityFilter := pSpecialityFilter;
      SpecializationDemandList := GetSpecializationDescription(pSpecialityFilter);
    END;

    PROCEDURE SetProviderResultList@1100281000(VAR pProvSecondSearchBuffer@1100281001 : TEMPORARY Record 51006);
    BEGIN
      //IMH02
      IF pProvSecondSearchBuffer.FINDSET THEN BEGIN
        REPEAT
          Rec := pProvSecondSearchBuffer;
          INSERT;
      //<<IMH04.ST
          GetProvider("Provider No.");
          CLEAR(Picture);
          CASE Provider.Priority OF
            Provider.Priority::"(0) Lower" : Picture := SecondSearchSetup."Lower Priority Picture";
            Provider.Priority::"(1) Normal" : Picture := SecondSearchSetup."Normal Priority Picture";
            Provider.Priority::"(2) High" : Picture := SecondSearchSetup."High Priority Picture";
          END;
          MODIFY;
      //>>IMH04.ST
        UNTIL pProvSecondSearchBuffer.NEXT = 0;
        SETCURRENTKEY("Code 1");
        FINDFIRST;
      END;
    END;

    PROCEDURE GetProviderResultList@1100281002(VAR pProvSecondSearchBuffer@1100281001 : TEMPORARY Record 51006);
    BEGIN
      //IMH02
      RESET;
      IF FINDSET THEN BEGIN
        REPEAT
          pProvSecondSearchBuffer := Rec;
          pProvSecondSearchBuffer.INSERT;
        UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE ProviderCall@1100281003();
    VAR
      lSecondProviderSearch@1100281001 : Codeunit 50285;
      lProviderSecondSearchCall@1100281000 : Page 50381;
    BEGIN
      IF Refused THEN BEGIN
        IF NOT CONFIRM(STRSUBSTNO(Text001,"Non-Accept. Reason Code")) THEN BEGIN
          EXIT;
        END;
      END;
      IF lSecondProviderSearch.CallProvider(Rec,SpecialityFilter) THEN BEGIN
        IsOk := TRUE;
        CurrPage.CLOSE;
        EXIT;
      END;
      MODIFY(TRUE);
      NEXT;
    END;

    LOCAL PROCEDURE GetProvider@1000000000(pNo@1000000000 : Code[20]) : Text[250];
    BEGIN
      //IMH03.ST
      IF Provider."No." = pNo THEN
        EXIT;
      IF NOT Provider.GET(pNo) THEN
        CLEAR(Provider);
    END;

    PROCEDURE GetRecord@1000000001();
    BEGIN
      //IMH03.ST
      GetProvider("Provider No.");
      StyleStatut := "Provider Status" = "Provider Status"::Casual;
    END;

    BEGIN
    {
      /** @r IMH04 @d 27/05/14 @a ISAT.ST @v IMH6.01.P011 @s New Provider Search @h 5143 @c Affichage images */
      /** @r IMH03 @d 16/05/14 @a ISAT.ST @v IMH6.01.P011 @s New Provider Search
          @c Ajout bouton carte (Mantis 5118)
          @c Changement captions (Mantis 5125)
          @c DrillDown d‚sactiv‚ sur les flowfields + ajout suivi (Mantis 5134)
          @c Nom du prestataire en rouge selon le statut + nø du service en DataCaptionExpr
      */
      /** @r IMH02 @d 09/04/14 @a ISAT.ZW @v IMH6.01.P011 @s New Provider Search @c Finalisation */
      /** @r IMH01 @d 10/04/14 @a ISAT.PC @v IMH6.01.P011 @s New Provider Search @c Creation */
    }
    END.
  }
}