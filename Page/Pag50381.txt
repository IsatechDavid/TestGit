OBJECT Page 50381 Provider Second Search Call
{
  OBJECT-PROPERTIES
  {
    Date=07/05/14;
    Time=11:52:50;
    Modified=Yes;
    Version List=IMH6.01,IMH6.01.P011;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Provider Second Search Call;
               FRA=Appel prestataire];
    InsertAllowed=Yes;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table51006;
    PageType=NavigatePage;
    SourceTableTemporary=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Card;
                                FRA=Nouveau,Processus,Etat,Fiche];
    OnOpenPage=VAR
                 lProviderContactAltAddr@1100281000 : Record 5051;
                 lContact@1100281002 : Record 5050;
                 lContactFound@1000000000 : Boolean;
               BEGIN
                 Provider.GET("Provider No.");

                 lContact.RESET;
                 lContact.SETCURRENTKEY("Company No.");
                 lContact.SETRANGE("Company No.","Provider No.");
                 lContact.SETRANGE("Preferred Contact DGS",TRUE);
                 IF lContact.FINDFIRST THEN BEGIN
                   lProviderContactAltAddr.SETRANGE("Contact No.",lContact."No.");
                   lContactFound := TRUE;
                 END ELSE BEGIN
                   lProviderContactAltAddr.SETRANGE("Contact No.",Provider."No.");
                 END;

                 lProviderContactAltAddr.SETRANGE("Geo. Reference Address",TRUE);
                 IF NOT lProviderContactAltAddr.FINDFIRST THEN BEGIN
                   lProviderContactAltAddr.INIT;
                 END;

                 ProviderAddressArray[1] := Provider."No." + ' - ' + Provider.Name;
                 ProviderAddressArray[2] := lProviderContactAltAddr."Company Name";
                 ProviderAddressArray[3] := lProviderContactAltAddr.Address + ' ' + lProviderContactAltAddr."Address 2";
                 ProviderAddressArray[4] := lProviderContactAltAddr."Post Code" + ' - ' + lProviderContactAltAddr.City;
                 IF lContactFound THEN BEGIN
                   ProviderAddressArray[5] := lContact."Phone No.";
                   ProviderAddressArray[6] := lContact."Mobile Phone No.";
                   ProviderAddressArray[7] := lContact."Constraint Phone No.";
                   ProviderAddressArray[8] := lContact."Mobile Phone No. 2";
                   ProviderAddressArray[9] := FORMAT(lContact."Send to Mission Without Call");
                 END ELSE BEGIN
                   ProviderAddressArray[5] := Provider."Phone No.";
                   ProviderAddressArray[6] := Provider."Mobile Phone No.";
                   ProviderAddressArray[7] := Provider."Constraint Phone No.";
                   ProviderAddressArray[8] := Provider."Mobile Phone No. 2";
                   ProviderAddressArray[9] := FORMAT(Provider."Send to Mission Without Call");
                 END;

                 ServiceHeader.GET(ServiceHeader."Document Type"::Invoice,"Service Header No.");
                 MEOAddressArray[1] := ServiceHeader."Ship-to Address" + ' ' + ServiceHeader."Ship-to Address 2";
                 MEOAddressArray[2] := ServiceHeader."Ship-to Post Code" + ' ' + ServiceHeader."Ship-to City";

                 ShowCreateFollowUp := Provider."Follow Up" = '';
                 ShowFollowUp := NOT ShowCreateFollowUp;
                 ShowEmergency := Emergency;
                 IF SpecializationFilter = '' THEN BEGIN
                   SpecializationFilter := "Specialization Filter";
                 END;
                 ProviderCardShow := UserSpecialPermission.DPRSearchPermitted;
                 CurrPage.UPDATE(FALSE);
               END;

    OnAfterGetRecord=BEGIN
                       CurrPage.ProviderSpecialitiesSubPage.FORM.SetSpecializationFilter(SpecializationFilter);
                       CurrPage.ProviderSpecialitiesSubPage.FORM.Load("Provider No.");
                       CurrPage.ProviderSpecialitiesSubPage.FORM.Sort;
                     END;

    OnQueryClosePage=BEGIN
                       IF IsAccept OR IsRefuse THEN BEGIN
                         EXIT;
                       END;
                       Cancel_OnPush;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100281004;1 ;Action    ;
                      Name=Refuse;
                      CaptionML=[ENU=&Refuse;
                                 FRA=&Refuser];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Refuse_OnPush;
                               END;
                                }
      { 1100281000;1 ;Action    ;
                      Name=Accept;
                      CaptionML=[ENU=Accept;
                                 FRA=Accepter];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Accept_OnPush;
                               END;
                                }
      { 1100281011;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100281005;1 ;Action    ;
                      Name=ServHeaderCard;
                      CaptionML=[ENU=Service Header;
                                 FRA=Ligne produit];
                      Promoted=Yes;
                      Image=NewSparkle;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ServiceHeader.ShowCard(FALSE);
                               END;
                                }
      { 1100281019;1 ;Action    ;
                      Name=ProviderCard;
                      CaptionML=[ENU=Provider Card;
                                 FRA=Fiche Prestataire];
                      Promoted=Yes;
                      Visible=ProviderCardShow;
                      Image=ExportSalesPerson;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 //IMH15
                                 ShowProvider;
                               END;
                                }
      { 1100281006;1 ;Action    ;
                      Name=UrgenceCtrl;
                      CaptionML=[ENU=Emmergency;
                                 FRA=Urgence];
                      Promoted=Yes;
                      Visible=ShowEmergency;
                      PromotedIsBig=Yes;
                      Image=WorkCenterLoad;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 EXIT;
                               END;
                                }
      { 1000000002;1 ;Action    ;
                      Name=FollowUpCreationCtrl;
                      CaptionML=[ENU=Follow Up CreationCtrl;
                                 FRA=Cr‚ation suivi];
                      Promoted=Yes;
                      Visible=ShowCreateFollowUp;
                      PromotedIsBig=Yes;
                      Image=ImplementPriceChange;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lProvSearchFollowUpMgt@1100281001 : Codeunit 50287;
                               BEGIN
                                 lProvSearchFollowUpMgt.CreateFollowUpFromSecSearch(Rec);
                                 Provider.GET("Provider No.");
                                 ShowCreateFollowUp := Provider."Follow Up" = '';
                                 ShowFollowUp := NOT ShowCreateFollowUp;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100281015;1;Group  ;
                Name=ProviderGrp;
                CaptionML=[ENU=Provider;
                           FRA=Prestataire];
                GroupType=Group }

    { 1000000003;2;Group  ;
                Visible=ShowFollowUp;
                GroupType=Group }

    { 1100281022;3;Field  ;
                Name=FollowUpCtrl;
                CaptionML=[ENU=Follow Up;
                           FRA=Suivi];
                SourceExpr=Provider."Follow Up";
                Editable=FALSE;
                MultiLine=Yes;
                Style=Unfavorable;
                StyleExpr=TRUE }

    { 1100281018;2;Field  ;
                Name=NoNameCtrl;
                CaptionML=[ENU=No. - Name;
                           FRA=Nø - Nom];
                SourceExpr=ProviderAddressArray[1];
                Editable=FALSE }

    { 1100281013;2;Field  ;
                Name=ContactNameCtrl;
                CaptionML=[ENU=Contact Name;
                           FRA=Non contact];
                SourceExpr=ProviderAddressArray[2];
                Editable=FALSE }

    { 1100281017;2;Field  ;
                Name=AddressCtrl;
                CaptionML=FRA=Adresse;
                SourceExpr=ProviderAddressArray[3];
                Editable=FALSE }

    { 1100281016;2;Field  ;
                Name=PostCodeCityCtrl;
                CaptionML=[ENU=Post Code - City;
                           FRA=Code postal - Ville];
                SourceExpr=ProviderAddressArray[4];
                Editable=FALSE }

    { 1100281012;2;Field  ;
                Name=PhoneNoCtrl;
                CaptionML=FRA=Nø t‚l‚phone;
                SourceExpr=ProviderAddressArray[5];
                Editable=FALSE;
                Style=Favorable;
                StyleExpr=TRUE;
                OnAssistEdit=BEGIN
                               IF ProviderAddressArray[5] <> '' THEN BEGIN
                                 CTIManagement.MakeCall(ProviderAddressArray[5]);
                               END;
                             END;
                              }

    { 1100281010;2;Field  ;
                Name=MobilePhoneNoCtrl;
                CaptionML=FRA=Nø t‚l‚phone mobile;
                SourceExpr=ProviderAddressArray[6];
                Editable=FALSE;
                Style=Favorable;
                StyleExpr=TRUE;
                OnAssistEdit=BEGIN
                               IF ProviderAddressArray[6] <> '' THEN BEGIN
                                 CTIManagement.MakeCall(ProviderAddressArray[6]);
                               END;
                             END;
                              }

    { 1000000001;2;Field  ;
                Name=ConstaintePhoneNoCtrl;
                CaptionML=[ENU=Constraint Phone No.;
                           FRA=Nø t‚l‚phone astreinte];
                SourceExpr=ProviderAddressArray[7];
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               IF ProviderAddressArray[7] <> '' THEN BEGIN
                                 CTIManagement.MakeCall(ProviderAddressArray[7]);
                               END;
                             END;
                              }

    { 1100281003;2;Field  ;
                Name=MobilePhoneNo2Ctrl;
                CaptionML=FRA=Nø t‚l‚phone mobile 2;
                SourceExpr=ProviderAddressArray[8];
                Editable=FALSE;
                Style=Favorable;
                StyleExpr=TRUE;
                OnAssistEdit=BEGIN
                               IF ProviderAddressArray[8] <> '' THEN BEGIN
                                 CTIManagement.MakeCall(ProviderAddressArray[8]);
                               END;
                             END;
                              }

    { 1000000000;2;Field  ;
                Name=SendtoMissionWithoutCallCtrl;
                Lookup=Yes;
                CaptionML=[ENU=Send to Mission Without Call;
                           FRA=Missionnable sans appel];
                SourceExpr=ProviderAddressArray[9];
                Importance=Promoted;
                Editable=FALSE;
                Style=Favorable;
                StyleExpr=TRUE }

    { 1100281014;2;Field  ;
                CaptionML=[ENU=Distance;
                           FRA=Distance R‚elle];
                DecimalPlaces=0:0;
                SourceExpr=Distance;
                Editable=FALSE }

    { 1100281002;2;Field  ;
                CaptionML=[ENU=Extranet;
                           FRA=Extranet];
                SourceExpr=Provider.Extranet;
                Editable=false }

    { 1100281007;2;Group  ;
                Name=MEOGrp;
                CaptionML=[ENU=Intervention Address;
                           FRA=MEO Adresse];
                GroupType=Group }

    { 1100281020;3;Field  ;
                Name=MEOAddress;
                CaptionML=[ENU=Address;
                           FRA=Adresse];
                SourceExpr=MEOAddressArray[1];
                Editable=FALSE }

    { 1100281021;3;Field  ;
                Name=MEOCPCity;
                CaptionML=[ENU=Post Code - City;
                           FRA=Code postal - Ville];
                SourceExpr=MEOAddressArray[2];
                Editable=FALSE }

    { 1100281008;2;Part   ;
                Name=ProviderSpecialitiesSubPage;
                CaptionML=[ENU=Procider Specializations;
                           FRA=Sp‚cialit‚s prestataire];
                SubFormView=SORTING(Provider No.,Specialization Code);
                SubFormLink=Provider No.=FIELD(Provider No.);
                PagePartID=Page50185;
                Editable=FALSE;
                PartType=Page }

    { 1100281001;1;Group  ;
                Name=AgreementGrp;
                CaptionML=[ENU=Agreement;
                           FRA=Agr‚ment];
                GroupType=Group }

    { 1100281009;2;Part   ;
                CaptionML=[ENU=Agreement Provider;
                           FRA=Agr‚ment prestataire];
                SubFormView=SORTING(Provider No.,Corporate No.);
                SubFormLink=Provider No.=FIELD(Provider No.);
                PagePartID=Page50184;
                Editable=FALSE;
                PartType=Page }

  }
  CODE
  {
    VAR
      Provider@1100281008 : Record 50000;
      ServiceHeader@1100281010 : Record 5900;
      CTIManagement@1000000000 : Codeunit 50138;
      UserSpecialPermission@1100281005 : Codeunit 50093;
      ProviderAddressArray@1100281021 : ARRAY [9] OF Text[80];
      Text001@1100281028 : TextConst 'ENU=Please fill a non-acceptance reason code.;FRA=Veuiller saisir une raison de refus';
      Text002@1100281002 : TextConst 'ENU=Do you want to stop search ?;FRA=Souhaitez vous annuler la recherche ?';
      Text003@1100281003 : TextConst 'ENU=Do you want to validate search ?;FRA=Souhaitez vous valider la recherche ?';
      MEOAddressArray@1100281001 : ARRAY [2] OF Text[80];
      SpecializationFilter@1100281000 : Text[1024];
      ShowFollowUp@1100281015 : Boolean INDATASET;
      ShowCreateFollowUp@1000000005 : Boolean INDATASET;
      ShowEmergency@1100281012 : Boolean INDATASET;
      IsAccept@1000000001 : Boolean;
      IsRefuse@1000000002 : Boolean;
      IsCancel@1000000003 : Boolean;
      ProviderCardShow@1100281004 : Boolean INDATASET;

    PROCEDURE Accept_OnPush@1100281015();
    BEGIN
      Accepted := TRUE;
      Refused := FALSE;
      IsAccept := TRUE;
      CurrPage.EDITABLE(FALSE);
      CurrPage.CLOSE;
    END;

    PROCEDURE Refuse_OnPush@1100281014();
    VAR
      lProviderSecondSearchRefusPage@1100281000 : Page 50382;
    BEGIN
      CLEAR(lProviderSecondSearchRefusPage);
      lProviderSecondSearchRefusPage.LoadPage;
      lProviderSecondSearchRefusPage.LOOKUPMODE := TRUE;
      lProviderSecondSearchRefusPage.EDITABLE := TRUE;
      IF lProviderSecondSearchRefusPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
        lProviderSecondSearchRefusPage.GetReasonCode("Non-Accept. Reason Code","Non-Accept. Comments");
        Refused := TRUE;
        Accepted := FALSE;
      END ELSE BEGIN
        ERROR(Text001);
      END;
      IsRefuse := TRUE;
      CurrPage.EDITABLE(FALSE);
      CurrPage.CLOSE;
    END;

    PROCEDURE Cancel_OnPush@1000000000();
    BEGIN
      IsCancel := TRUE;
      CurrPage.EDITABLE(FALSE);
      CurrPage.CLOSE;
    END;

    PROCEDURE SetValues@1000000001(pProviderSecondSearchBuffer@1000000000 : Record 51006;pSpecializationFilter@1000000001 : Text[1024]);
    BEGIN
      Rec := pProviderSecondSearchBuffer;
      INSERT;
      SpecializationFilter := pSpecializationFilter;
    END;

    PROCEDURE GetValues@1100281000(VAR pReasonCode@1100281000 : Code[10];VAR pReasonComment@1100281001 : Text[100]);
    BEGIN
      pReasonCode := "Non-Accept. Reason Code";
      pReasonComment := "Non-Accept. Comments";
    END;

    PROCEDURE GetAccept@1000000004() : Boolean;
    BEGIN
      EXIT(IsAccept);
    END;

    PROCEDURE GetRefuse@1000000005() : Boolean;
    BEGIN
      EXIT(IsRefuse);
    END;

    PROCEDURE GetCancel@1000000006() : Boolean;
    BEGIN
      EXIT(IsCancel);
    END;

    PROCEDURE ShowProvider@1100281002();
    VAR
      lProvider@1100281000 : Record 50000;
    BEGIN
      //IMH15
      IF lProvider.GET("Provider No.") THEN
        PAGE.RUN(PAGE::"Provider Card",lProvider);
    END;

    BEGIN
    {
      /** @r IMH01 @d 10/04/14 @a ISAT.PC @v IMH6.01.P011 @s New Provider Search @c Creation */
    }
    END.
  }
}