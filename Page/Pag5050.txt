OBJECT Page 5050 Contact Card
{
  OBJECT-PROPERTIES
  {
    Date=18/06/13;
    Time=14:16:49;
    Modified=Yes;
    Version List=NAVW16.00.10,NAVFR5.00,IMH6.01,JUIN;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Contact Card;
               FRA=Fiche contact];
    SourceTable=Table5050;
    PopulateAllFields=Yes;
    DataCaptionFields=Name;
    PageType=Card;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Additional,History;
                                FRA="Nouveau,Processus,Etat,Compl‚ment, "];
    OnInit=BEGIN
             "Stock CapitalEnable" := TRUE;
             "Legal FormEnable" := TRUE;
             "APE CodeEnable" := TRUE;
             "Trade RegisterEnable" := TRUE;
             NoofJobResponsibilitiesEnable := TRUE;
             OrganizationalLevelCodeEnable := TRUE;
             "Company NameEnable" := TRUE;
             "Company No.Enable" := TRUE;
             "VAT Registration No.Enable" := TRUE;
             "Currency CodeEnable" := TRUE;
             MapPointVisible := TRUE;
             BenefVisible := FALSE;
             CorporateVisible := FALSE;
             IsEditable := TRUE; // IMH04.ISAT.MA
             ProviderVisible := TRUE; //IMH07
             NotProviderVisible := TRUE; //IMH07
             NotProviderContactVisible := FALSE;  //IMH56
           END;

    OnOpenPage=VAR
                 lMapMgt@1000 : Codeunit 802;
               BEGIN
                 IF NOT lMapMgt.TestSetup THEN
                   MapPointVisible := FALSE;
                 //<<IMH06.ST
                 IF "No." <> '' THEN
                   EnableFields;
                 //>>IMH06.ST
                 //<<IMH20.PC
                 GetUserSetup;
                 CurrPage.EDITABLE := UserSetup."Available To Change Contacts" OR NOT "Beneficiary Interface";
                 //>>IMH20.PC
                 //<<IMH60.PC
                 ContactIsAvailableToCreate := UserSetup."Available To Change Contacts";
                 //>>IMH60.PC
               END;

    OnFindRecord=VAR
                   RecordFound@1000 : Boolean;
                 BEGIN
                   RecordFound := FIND(Which);
                   //<<IMH20.PC
                   //CurrPage.EDITABLE := RecordFound OR (GETFILTER("No.") = '');
                   GetUserSetup;
                   CurrPage.EDITABLE :=
                     (RecordFound OR (GETFILTER("No.") = '')) AND
                     (UserSetup."Available To Change Contacts" OR NOT "Beneficiary Interface");
                   //>>IMH20.PC

                   EXIT(RecordFound);
                 END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                       // <<IMH04.ISAT.MA
                       IF "Service Contact" = "Service Contact"::Provider THEN
                         IsEditable := ProviderMgt.IsEditable("Company No.")
                       ELSE
                         IsEditable := TRUE;
                       // >>IMH04.ISAT.MA
                       KeyBoardAddress := '';//IMH04
                       EnableFields;
                       ContactPerson := ((Type = Type::Person) AND ("Service Contact" = "Service Contact"::"Corporate Customer"));
                       //<<IMH20.PC
                       GetUserSetup;
                       CurrPage.EDITABLE := UserSetup."Available To Change Contacts" OR NOT "Beneficiary Interface";
                       //>>IMH20.PC
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=BEGIN
                     EnableFields;
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 76      ;1   ;ActionGroup;
                      CaptionML=[ENU=C&ontact;
                                 FRA=Con&tact] }
      { 79      ;2   ;Action    ;
                      CaptionML=[ENU=Relate&d Contacts;
                                 FRA=Con&tacts li‚s];
                      Promoted=Yes;
                      Image=TeamSales;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowPersonContacts(TRUE); //IMH06.ST
                               END;
                                }
      { 82      ;2   ;ActionGroup;
                      CaptionML=[ENU=Comp&any;
                                 FRA=So&ci‚t‚] }
      { 85      ;3   ;Action    ;
                      CaptionML=[ENU=Business Relations;
                                 FRA=Relations d'affaires];
                      RunObject=Page 5061;
                      RunFormLink=Contact No.=FIELD(Company No.) }
      { 83      ;3   ;Action    ;
                      CaptionML=[ENU=Industry Groups;
                                 FRA=Secteurs d'activit‚];
                      RunObject=Page 5067;
                      RunFormLink=Contact No.=FIELD(Company No.) }
      { 84      ;3   ;Action    ;
                      CaptionML=[ENU=Web Sources;
                                 FRA=Recherche Web];
                      RunObject=Page 5070;
                      RunFormLink=Contact No.=FIELD(Company No.) }
      { 80      ;2   ;ActionGroup;
                      CaptionML=[ENU=P&erson;
                                 FRA=&Personne] }
      { 81      ;3   ;Action    ;
                      CaptionML=[ENU=Job Responsibilities;
                                 FRA=Responsabilit‚s];
                      OnAction=VAR
                                 ContJobResp@1001 : Record 5067;
                               BEGIN
                                 TESTFIELD(Type,Type::Person);
                                 ContJobResp.SETRANGE("Contact No.","No.");
                                 FORM.RUNMODAL(FORM::"Contact Job Responsibilities",ContJobResp);
                               END;
                                }
      { 86      ;2   ;Action    ;
                      CaptionML=[ENU=Mailing &Groups;
                                 FRA=&Groupes de distribution];
                      RunObject=Page 5064;
                      RunFormLink=Contact No.=FIELD(No.);
                      Visible=False }
      { 87      ;2   ;Action    ;
                      CaptionML=[ENU=Pro&files;
                                 FRA=Pro&fil];
                      Visible=false;
                      OnAction=VAR
                                 ProfileManagement@1001 : Codeunit 5059;
                               BEGIN
                                 ProfileManagement.ShowContactQuestionnaireCard(Rec,'',0);
                               END;
                                }
      { 88      ;2   ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 FRA=Statistiques];
                      RunObject=Page 5053;
                      RunFormLink=No.=FIELD(No.);
                      Image=Statistics;
                      PromotedCategory=Process }
      { 89      ;2   ;Action    ;
                      CaptionML=[ENU=&Picture;
                                 FRA=Imag&e];
                      RunObject=Page 5104;
                      RunFormLink=No.=FIELD(No.);
                      Visible=false }
      { 90      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 FRA=Co&mmentaires];
                      RunObject=Page 5072;
                      RunFormLink=Table Name=CONST(Contact),
                                  No.=FIELD(No.),
                                  Sub No.=CONST(0);
                      Image=ViewComments }
      { 91      ;2   ;ActionGroup;
                      CaptionML=[ENU=Alternati&ve Address;
                                 FRA=&Adresse secondaire] }
      { 92      ;3   ;Action    ;
                      CaptionML=[ENU=Address;
                                 FRA=Adresses];
                      RunObject=Page 5057;
                      RunFormLink=Contact No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Note;
                      PromotedCategory=Category4 }
      { 93      ;3   ;Action    ;
                      CaptionML=[ENU=Date Ranges;
                                 FRA=Plage de dates];
                      RunObject=Page 5059;
                      RunFormLink=Contact No.=FIELD(No.) }
      { 94      ;2   ;Separator ;
                      CaptionML=[ENU="";
                                 FRA=""] }
      { 95      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Interaction Log E&ntries;
                                 FRA=Ecritures &journal interaction];
                      RunObject=Page 5076;
                      RunFormView=SORTING(Contact Company No.,Date,Contact No.,Canceled,Initiated By,Attempt Failed);
                      RunFormLink=Contact Company No.=FIELD(Company No.),
                                  Contact No.=FILTER(<>''),
                                  Contact No.=FIELD(FILTER(Lookup Contact No.));
                      Visible=FALSE;
                      Image=Track }
      { 149     ;2   ;Action    ;
                      Name=<Action149>;
                      CaptionML=[ENU=Postponed &Interactions;
                                 FRA=Brouillons];
                      RunObject=Page 5082;
                      RunFormView=SORTING(Contact Company No.,Date,Contact No.,Canceled,Initiated By,Attempt Failed);
                      RunFormLink=Contact Company No.=FIELD(Company No.),
                                  Contact No.=FILTER(<>''),
                                  Contact No.=FIELD(FILTER(Lookup Contact No.));
                      Visible=FALSE }
      { 96      ;2   ;Action    ;
                      CaptionML=[ENU=T&o-dos;
                                 FRA=Act&ions];
                      RunObject=Page 5096;
                      RunFormView=SORTING(Contact Company No.,Date,Contact No.,Closed);
                      RunFormLink=Contact Company No.=FIELD(Company No.),
                                  Contact No.=FIELD(FILTER(Lookup Contact No.)),
                                  System To-do Type=FILTER(Contact Attendee) }
      { 151     ;2   ;ActionGroup;
                      CaptionML=[ENU=Oppo&rtunities;
                                 FRA=Oppo&rtunit‚s];
                      Visible=false }
      { 97      ;3   ;Action    ;
                      CaptionML=[ENU=List;
                                 FRA=Liste];
                      RunObject=Page 5123;
                      RunFormView=SORTING(Contact Company No.,Contact No.);
                      RunFormLink=Contact Company No.=FIELD(Company No.),
                                  Contact No.=FILTER(<>''),
                                  Contact No.=FIELD(FILTER(Lookup Contact No.)) }
      { 100     ;2   ;Action    ;
                      CaptionML=[ENU=Segmen&ts;
                                 FRA=Segme&nts];
                      RunObject=Page 5150;
                      RunFormView=SORTING(Contact No.,Segment No.);
                      RunFormLink=Contact Company No.=FIELD(Company No.),
                                  Contact No.=FILTER(<>''),
                                  Contact No.=FIELD(FILTER(Lookup Contact No.));
                      Visible=false;
                      Image=Segment }
      { 98      ;2   ;Separator ;
                      CaptionML=[ENU="";
                                 FRA=""] }
      { 116     ;2   ;Action    ;
                      CaptionML=[ENU=Sales &Quotes;
                                 FRA=&Devis];
                      RunObject=Page 9300;
                      RunFormView=SORTING(Document Type,Sell-to Contact No.);
                      RunFormLink=Sell-to Contact No.=FIELD(No.);
                      Image=Quote;
                      PromotedCategory=Process }
      { 119     ;2   ;Separator  }
      { 99      ;2   ;Action    ;
                      CaptionML=[ENU=C&ustomer/Vendor/Bank Acc.;
                                 FRA=Client/Fournisseur/&Banque];
                      OnAction=BEGIN
                                 ShowCustVendBank;
                               END;
                                }
      { 1000000005;2 ;Separator  }
      { 1000000006;2 ;Action    ;
                      Name=Historic;
                      CaptionML=[ENU=Historic;
                                 FRA=Historique];
                      RunObject=Page 595;
                      RunFormView=SORTING(Table No.,Primary Key Field 1 Value);
                      RunFormLink=Primary Key Field 1 Value=FIELD(No.),
                                  Table No.=CONST(5050);
                      Promoted=No;
                      PromotedIsBig=No;
                      Image=History }
      { 62      ;2   ;Separator  }
      { 63      ;2   ;Action    ;
                      CaptionML=[ENU=Online Map;
                                 FRA=Online Map];
                      Visible=false;
                      OnAction=BEGIN
                                 DisplayMap;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 75      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 FRA=Fonction&s] }
      { 1100281011;2 ;Action    ;
                      Name=<Action1100281011>;
                      CaptionML=[ENU=Create Service;
                                 FRA=Cr‚er service];
                      Promoted=Yes;
                      Visible=CreateServiceVisible;
                      PromotedIsBig=Yes;
                      Image=AddAction;
                      PromotedCategory=New;
                      OnAction=VAR
                                 lService@1100281001 : Record 50066;
                               BEGIN
                                 //<<IMH13
                                 //CreateService(TRUE);
                                 CreateService(lService, TRUE);
                                 //>>IMH13
                               END;
                                }
      { 102     ;2   ;Action    ;
                      CaptionML=[ENU=Launch &Web Source;
                                 FRA=Lancer &recherche Web];
                      OnAction=VAR
                                 ContactWebSource@1001 : Record 5060;
                               BEGIN
                                 ContactWebSource.SETRANGE("Contact No.","Company No.");
                                 IF FORM.RUNMODAL(FORM::"Web Source Launch",ContactWebSource) = ACTION::LookupOK THEN
                                   ContactWebSource.Launch;
                               END;
                                }
      { 103     ;2   ;Action    ;
                      CaptionML=[ENU=Print Cover &Sheet;
                                 FRA=&Imprimer bordereau d'envoi];
                      OnAction=VAR
                                 Cont@1001 : Record 5050;
                               BEGIN
                                 Cont := Rec;
                                 Cont.SETRECFILTER;
                                 REPORT.RUN(REPORT::"Contact - Cover Sheet",TRUE,FALSE,Cont);
                               END;
                                }
      { 105     ;2   ;ActionGroup;
                      CaptionML=[ENU=Create as;
                                 FRA=Cr‚er comme] }
      { 106     ;3   ;Action    ;
                      CaptionML=[ENU=Customer;
                                 FRA=Client];
                      OnAction=BEGIN
                                 CreateCustomer(ChooseCustomerTemplate);
                               END;
                                }
      { 107     ;3   ;Action    ;
                      CaptionML=[ENU=Vendor;
                                 FRA=Fournisseur];
                      OnAction=BEGIN
                                 CreateVendor;
                               END;
                                }
      { 108     ;3   ;Action    ;
                      CaptionML=[ENU=Bank;
                                 FRA=Banque];
                      OnAction=BEGIN
                                 CreateBankAccount;
                               END;
                                }
      { 109     ;2   ;ActionGroup;
                      CaptionML=[ENU=Link with existing;
                                 FRA=Lier avec existant] }
      { 110     ;3   ;Action    ;
                      CaptionML=[ENU=Customer;
                                 FRA=Client];
                      OnAction=BEGIN
                                 CreateCustomerLink;
                               END;
                                }
      { 111     ;3   ;Action    ;
                      CaptionML=[ENU=Vendor;
                                 FRA=Fournisseur];
                      OnAction=BEGIN
                                 CreateVendorLink;
                               END;
                                }
      { 112     ;3   ;Action    ;
                      CaptionML=[ENU=Bank;
                                 FRA=Banque];
                      OnAction=BEGIN
                                 CreateBankAccountLink;
                               END;
                                }
      { 152     ;2   ;Separator  }
      { 153     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Apply Template;
                                 FRA=Appliquer modŠle];
                      Image=ApplyTemplate;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TemplateMgt@1000 : Codeunit 8612;
                                 RecRef@1001 : RecordRef;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 TemplateMgt.UpdateFromTemplateSelection(RecRef);
                               END;
                                }
      { 1000000001;2 ;Separator  }
      { 1000000000;2 ;Action    ;
                      Name=BeneficiairyFileRefresh;
                      CaptionML=[ENU=Beneficiairy file refresh;
                                 FRA=Actualisation fichier b‚n‚ficiaire];
                      Promoted=Yes;
                      Visible=BenefVisible;
                      PromotedIsBig=Yes;
                      Image=Refresh;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 RefreshContact(Rec);
                               END;
                                }
      { 77      ;1   ;Action    ;
                      CaptionML=[ENU=Create &Interact;
                                 FRA=Cr‚er &interact.];
                      Promoted=Yes;
                      Visible=FALSE;
                      Image=CreateInteraction;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CreateInteraction;
                               END;
                                }
      { 1900000006;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1907415106;1 ;Action    ;
                      CaptionML=[ENU=Contact Cover Sheet;
                                 FRA=Bordereau d'envoi contact];
                      RunObject=Report 5055 }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           FRA=G‚n‚ral];
                Editable=IsEditable }

    { 1000000004;2;Field  ;
                SourceExpr="No.";
                Importance=Promoted;
                Visible=ContactIsAvailableToCreate;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 4   ;2   ;Field     ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             TypeOnAfterValidate;
                           END;
                            }

    { 1100281035;2;Group  ;
                Visible=NOT BenefVisible;
                GroupType=Group }

    { 1100281034;3;Field  ;
                SourceExpr="Job Title";
                Visible=false }

    { 1100281037;3;Field  ;
                CaptionML=[ENU=Job Title;
                           FRA=Fonction];
                SourceExpr=JobTitleCodeDesc;
                OnValidate=BEGIN
                             IF ServiceFormMgt.JobTitle_Validate(JobTitleCodeDesc,"Job Title") THEN
                               VALIDATE("Job Title");//IMH09
                           END;

                OnLookup=BEGIN
                           EXIT(ServiceFormMgt.JobTitle_Lookup(Text,"Job Title"));
                         END;
                          }

    { 117 ;2   ;Field     ;
                Name=SalutationCode;
                CaptionML=[ENU=Salutation Code;
                           FRA=Civilit‚];
                SourceExpr=SalutationCodeDesc;
                OnValidate=BEGIN
                             IF ServiceFormMgt.Salutation_Validate(SalutationCodeDesc,"Salutation Code") THEN
                               VALIDATE("Salutation Code");//IMH09
                           END;

                OnLookup=BEGIN
                           EXIT(ServiceFormMgt.Salutation_Lookup(Text,"Salutation Code"));//IMH09
                         END;
                          }

    { 1100281013;2;Group  ;
                Visible=TypePerson;
                GroupType=Group }

    { 6   ;3   ;Field     ;
                SourceExpr="Company No.";
                CaptionClass=CaptionClassProviderNo;
                Importance=Additional;
                Enabled="Company No.Enable" }

    { 8   ;3   ;Field     ;
                AssistEdit=Yes;
                SourceExpr="Company Name";
                CaptionClass=CaptionClassProviderName;
                Importance=Additional;
                Enabled="Company NameEnable";
                OnAssistEdit=BEGIN
                               Cont.SETRANGE("No.","Company No.");
                               CLEAR(CompanyDetails);
                               CompanyDetails.SETTABLEVIEW(Cont);
                               CompanyDetails.SETRECORD(Cont);
                               IF Type = Type::Person THEN
                                 CompanyDetails.EDITABLE := FALSE;
                               CompanyDetails.RUNMODAL;
                             END;
                              }

    { 1100281015;2;Group  ;
                GroupType=Group }

    { 1100281009;3;Field  ;
                CaptionML=[ENU=Surname;
                           FRA=Nom];
                SourceExpr=Surname }

    { 1100281038;3;Field  ;
                SourceExpr="Name 2";
                Visible=FALSE }

    { 1100281008;3;Field  ;
                SourceExpr="First Name" }

    { 1100281025;3;Group  ;
                Visible=ContactPerson;
                GroupType=Group }

    { 1100281026;4;Field  ;
                CaptionML=[ENU=Organization Level;
                           FRA=Equipe];
                SourceExpr=OrgLevelDesc;
                OnValidate=BEGIN
                             ServiceFormMgt.OrgLevel_Validate(OrgLevelDesc, "Organizational Level Code");
                           END;

                OnLookup=BEGIN
                           IF ServiceFormMgt.OrgLevel_Lookup(OrgLevelDesc, "Organizational Level Code") THEN
                             VALIDATE("Organizational Level Code");
                         END;
                          }

    { 12  ;3   ;Field     ;
                AssistEdit=No;
                SourceExpr=Address;
                Editable=AdresseEditable;
                OnAssistEdit=BEGIN
                               IF CurrPage.EDITABLE THEN
                                 AddressStandardization.AssistContactAddr(Rec);   //IMH03 isat.zw
                             END;
                              }

    { 14  ;3   ;Field     ;
                SourceExpr="Address 2";
                Importance=Additional }

    { 1100281036;3;Field  ;
                SourceExpr="Address 3";
                Importance=Additional }

    { 1120008;3;Field     ;
                SourceExpr=County;
                Visible=FALSE }

    { 16  ;3   ;Field     ;
                SourceExpr="Post Code" }

    { 34  ;3   ;Field     ;
                SourceExpr=City }

    { 1100281041;3;Group  ;
                Visible=ProviderVisible;
                GroupType=Group }

    { 1100281040;4;Field  ;
                SourceExpr="Territory Code" }

    { 18  ;3   ;Field     ;
                SourceExpr="Country/Region Code";
                Importance=Additional }

    { 20  ;2   ;Field     ;
                SourceExpr="Search Name";
                Importance=Additional;
                Visible=FALSE }

    { 1100281000;2;Field  ;
                Name=<Service Contact>;
                SourceExpr="Service Contact";
                Editable=ProviderVisible }

    { 1100281028;2;Group  ;
                Visible=NOT BenefVisible;
                GroupType=Group }

    { 1100281021;3;Field  ;
                SourceExpr="Preferred Contact DPR" }

    { 1100281031;3;Field  ;
                SourceExpr="Preferred Contact DGS" }

    { 1100281032;3;Field  ;
                SourceExpr="Preferred Contact DFC" }

    { 1100281030;3;Field  ;
                SourceExpr="Preferred Contact DTC" }

    { 1100281019;2;Group  ;
                Visible=ContactPerson;
                GroupType=Group }

    { 1100281017;3;Field  ;
                SourceExpr="No. of Job Responsibilities" }

    { 24  ;2   ;Field     ;
                SourceExpr="Salesperson Code";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Last Date Modified";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr="Date of Last Interaction";
                Visible=FALSE;
                OnDrillDown=VAR
                              InteractionLogEntry@1000 : Record 5065;
                            BEGIN
                              InteractionLogEntry.SETCURRENTKEY("Contact Company No.",Date,"Contact No.",Canceled,"Initiated By","Attempt Failed");
                              InteractionLogEntry.SETRANGE("Contact Company No.","Company No.");
                              InteractionLogEntry.SETFILTER("Contact No.","Lookup Contact No.");
                              InteractionLogEntry.SETRANGE("Attempt Failed",FALSE);
                              IF InteractionLogEntry.FIND('+') THEN
                                FORM.RUN(0,InteractionLogEntry);
                            END;
                             }

    { 30  ;2   ;Field     ;
                SourceExpr="Last Date Attempted";
                Visible=FALSE;
                OnDrillDown=VAR
                              InteractionLogEntry@1000 : Record 5065;
                            BEGIN
                              InteractionLogEntry.SETCURRENTKEY("Contact Company No.",Date,"Contact No.",Canceled,"Initiated By","Attempt Failed");
                              InteractionLogEntry.SETRANGE("Contact Company No.","Company No.");
                              InteractionLogEntry.SETFILTER("Contact No.","Lookup Contact No.");
                              InteractionLogEntry.SETRANGE("Initiated By",InteractionLogEntry."Initiated By"::Us);
                              IF InteractionLogEntry.FIND('+') THEN
                                FORM.RUN(0,InteractionLogEntry);
                            END;
                             }

    { 32  ;2   ;Field     ;
                SourceExpr="Next To-do Date";
                Visible=FALSE }

    { 1100281010;2;Group  ;
                Visible=BenefVisible;
                GroupType=Group }

    { 1100281001;3;Field  ;
                Name=<Corporate No>;
                AssistEdit=Yes;
                SourceExpr="Corporate No.";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;

                OnAssistEdit=BEGIN
                               OpenCustCard("Corporate No.");
                             END;
                              }

    { 1100281002;3;Field  ;
                Name=CorporateRegion;
                CaptionML=[ENU=Corporate Region Code;
                           FRA=R‚gion grand compte];
                SourceExpr=CorporateRegionDesc;
                OnValidate=BEGIN
                             ServiceFormMgt.CorporateRegion_Validate(CorporateRegionDesc,"Corporate No.","Corporate Region Code");//IMH09
                             VALIDATE("Corporate Region Code");  //IMH12
                           END;

                OnLookup=BEGIN
                           ServiceFormMgt.CorporateRegion_Lookup(CorporateRegionDesc,"Corporate No.","Corporate Region Code");//IMH09
                           VALIDATE("Corporate Region Code");  //IMH12
                         END;
                          }

    { 1100281003;3;Field  ;
                Name=<Member No.>;
                SourceExpr="Member No." }

    { 1100281027;3;Field  ;
                SourceExpr=Rayed }

    { 1100281018;2;Group  ;
                Visible=CorporateVisible;
                GroupType=Group }

    { 1100281016;3;Field  ;
                Name=CorporateRegion;
                CaptionML=[ENU=Corporate Region Code;
                           FRA=R‚gion grand compte];
                SourceExpr=CorporateRegionDesc;
                OnValidate=BEGIN
                             ServiceFormMgt.CorporateRegion_Validate(CorporateRegionDesc,"Corporate No.","Corporate Region Code");//IMH09
                             VALIDATE("Corporate Region Code");  //IMH12
                           END;

                OnLookup=BEGIN
                           ServiceFormMgt.CorporateRegion_Lookup(CorporateRegionDesc,"Corporate No.","Corporate Region Code");//IMH09
                           VALIDATE("Corporate Region Code");  //IMH12
                         END;
                          }

    { 1100281024;3;Field  ;
                SourceExpr="GTA Code" }

    { 1100281043;3;Field  ;
                SourceExpr="Mask To DGS" }

    { 1100281020;2;Group  ;
                Visible=NotProviderVisible;
                GroupType=Group }

    { 1100281004;3;Field  ;
                Name=<Birthdate>;
                SourceExpr=Birthdate;
                Importance=Additional }

    { 1100281039;3;Field  ;
                SourceExpr="Beneficiary Interface";
                Importance=Additional;
                Editable=FALSE }

    { 72  ;1   ;Part      ;
                Name=Contractlist;
                CaptionML=[ENU=Contracts;
                           FRA=Formules];
                SubFormView=SORTING(Contact No.,Corporate No.,Contract Form Code,Occurence No.);
                SubFormLink=Contact No.=FIELD(No.),
                            Corporate No.=FIELD(Corporate No.);
                PagePartID=Page50048;
                Visible=BenefVisible;
                Editable=FALSE }

    { 1902768601;1;Group  ;
                CaptionML=[ENU=Communication;
                           FRA=Communication];
                Editable=IsEditable }

    { 35  ;2   ;Field     ;
                SourceExpr="Phone No.";
                OnAssistEdit=BEGIN
                               //<<IMH52.ISAT.EBA
                               PhoneNoAssistEdit("Phone No.");
                               //>>IMH52.ISAT.EBA
                             END;
                              }

    { 36  ;2   ;Field     ;
                SourceExpr="Mobile Phone No.";
                OnAssistEdit=BEGIN
                               //<<IMH52.ISAT.EBA
                               PhoneNoAssistEdit("Mobile Phone No.");
                               //>>IMH52.ISAT.EBA
                             END;
                              }

    { 40  ;2   ;Field     ;
                SourceExpr="Mobile Phone No. 2";
                OnAssistEdit=BEGIN
                               //<<IMH52.ISAT.EBA
                               PhoneNoAssistEdit("Mobile Phone No. 2");
                               //>>IMH52.ISAT.EBA
                             END;
                              }

    { 1000000003;2;Field  ;
                SourceExpr="Constraint Phone No." }

    { 38  ;2   ;Field     ;
                SourceExpr="Fax No." }

    { 42  ;2   ;Field     ;
                SourceExpr="Phone No. 2";
                Visible=FALSE;
                OnAssistEdit=BEGIN
                               //<<IMH52.ISAT.EBA
                               PhoneNoAssistEdit("Phone No. 2");
                               //>>IMH52.ISAT.EBA
                             END;
                              }

    { 44  ;2   ;Field     ;
                SourceExpr="Business Phone No.";
                OnAssistEdit=BEGIN
                               //<<IMH52.ISAT.EBA
                               PhoneNoAssistEdit("Business Phone No.");
                               //>>IMH52.ISAT.EBA
                             END;
                              }

    { 46  ;2   ;Field     ;
                ExtendedDatatype=None;
                SourceExpr="E-Mail";
                OnAssistEdit=VAR
                               lSendNAVMail@1100281000 : Codeunit 50128;
                             BEGIN
                               lSendNAVMail.SendMailFromContNo("No.", "E-Mail"); //IMH57.ST
                             END;
                              }

    { 1100281014;2;Field  ;
                SourceExpr="Notify Customer" }

    { 1100281012;2;Group  ;
                Visible=[DeclarationContVisible ];
                GroupType=Group }

    { 1100281022;3;Field  ;
                SourceExpr="Declaration Contact" }

    { 1100281023;3;Field  ;
                SourceExpr="Declaration E-Mail" }

    { 48  ;2   ;Field     ;
                CaptionML=[ENU=Home Page;
                           FRA=Site internet];
                SourceExpr="Home Page" }

    { 126 ;2   ;Field     ;
                SourceExpr="Correspondence Type" }

    { 125 ;2   ;Field     ;
                SourceExpr=IntegrationCustomerNo;
                Visible=FALSE;
                OnValidate=VAR
                             Customer@1000 : Record 18;
                             ContactBusinessRelation@1001 : Record 5054;
                           BEGIN
                             IF NOT (IntegrationCustomerNo = '') THEN BEGIN
                               Customer.GET(IntegrationCustomerNo);
                               ContactBusinessRelation.SETCURRENTKEY("Link to Table","No.");
                               ContactBusinessRelation.SETRANGE("Link to Table",ContactBusinessRelation."Link to Table"::Customer);
                               ContactBusinessRelation.SETRANGE("No.",Customer."No.");
                               IF ContactBusinessRelation.FINDFIRST THEN
                                 VALIDATE("Company No.",ContactBusinessRelation."Contact No.");
                             END ELSE
                               VALIDATE("Company No.",'');
                           END;
                            }

    { 1100281029;2;Group  ;
                Visible=NotProviderVisible;
                GroupType=Group }

    { 1100281005;3;Field  ;
                Name=<VIP Code>;
                SourceExpr="VIP Code";
                Visible=notprovidervisible }

    { 1100281033;2;Group  ;
                Visible=NOT BenefVisible;
                GroupType=Group }

    { 1100281006;3;Field  ;
                SourceExpr="Send to Mission Without Call" }

    { 1000000002;2;Group  ;
                Visible=NotProviderContactVisible;
                GroupType=Group }

    { 1100281042;3;Field  ;
                SourceExpr="GUID DARVA Code" }

    { 1904829601;1;Group  ;
                CaptionML=[ENU=Segmentation;
                           FRA=Segmentation];
                Enabled=FALSE;
                Editable=IsEditable }

    { 50  ;2   ;Field     ;
                SourceExpr="No. of Mailing Groups";
                OnDrillDown=VAR
                              ContMailingGrp@1001 : Record 5056;
                            BEGIN
                              CurrPage.SAVERECORD;
                              COMMIT;
                              ContMailingGrp.SETRANGE("Contact No.","No.");
                              FORM.RUNMODAL(FORM::"Contact Mailing Groups",ContMailingGrp);
                              CurrPage.UPDATE(FALSE);
                            END;
                             }

    { 52  ;2   ;Field     ;
                SourceExpr="No. of Business Relations";
                OnDrillDown=VAR
                              ContBusRel@1001 : Record 5054;
                            BEGIN
                              // <<IMH04.ISAT.MA
                              IF NOT IsEditable THEN
                                EXIT;
                              // >>IMH04.ISAT.MA
                              CurrPage.SAVERECORD;
                              COMMIT;
                              ContBusRel.SETRANGE("Contact No.","Company No.");
                              FORM.RUNMODAL(FORM::"Contact Business Relations",ContBusRel);
                              CurrPage.UPDATE(FALSE);
                            END;
                             }

    { 54  ;2   ;Field     ;
                SourceExpr="No. of Industry Groups";
                OnDrillDown=VAR
                              ContIndustGrp@1001 : Record 5058;
                            BEGIN
                              // <<IMH04.ISAT.MA
                              IF NOT IsEditable THEN
                                EXIT;
                              // >>IMH04.ISAT.MA
                              CurrPage.SAVERECORD;
                              COMMIT;
                              ContIndustGrp.SETRANGE("Contact No.","Company No.");
                              FORM.RUNMODAL(FORM::"Contact Industry Groups",ContIndustGrp);
                              CurrPage.UPDATE(FALSE);
                            END;
                             }

    { 56  ;2   ;Field     ;
                SourceExpr="No. of Job Responsibilities";
                Enabled=NoofJobResponsibilitiesEnable;
                OnDrillDown=VAR
                              ContJobResp@1001 : Record 5067;
                            BEGIN
                              // <<IMH04.ISAT.MA
                              IF NOT IsEditable THEN
                                EXIT;
                              // >>IMH04.ISAT.MA
                              CurrPage.SAVERECORD;
                              COMMIT;
                              ContJobResp.SETRANGE("Contact No.","No.");
                              FORM.RUNMODAL(FORM::"Contact Job Responsibilities",ContJobResp);
                              CurrPage.UPDATE(FALSE);
                            END;
                             }

    { 58  ;2   ;Field     ;
                SourceExpr="Organizational Level Code";
                Enabled=OrganizationalLevelCodeEnable }

    { 60  ;2   ;Field     ;
                SourceExpr="Exclude from Segment" }

    { 1120000;2;Field     ;
                SourceExpr="Trade Register";
                Enabled="Trade RegisterEnable" }

    { 1120002;2;Field     ;
                SourceExpr="APE Code";
                Enabled="APE CodeEnable" }

    { 1120004;2;Field     ;
                SourceExpr="Legal Form";
                Enabled="Legal FormEnable" }

    { 1120006;2;Field     ;
                SourceExpr="Stock Capital";
                Enabled="Stock CapitalEnable" }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           FRA=International];
                Enabled=FALSE;
                Editable=IsEditable }

    { 64  ;2   ;Field     ;
                SourceExpr="Currency Code";
                Enabled="Currency CodeEnable" }

    { 68  ;2   ;Field     ;
                SourceExpr="Territory Code" }

    { 66  ;2   ;Field     ;
                SourceExpr="VAT Registration No.";
                Enabled="VAT Registration No.Enable" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1100281007;1;Part   ;
                Name=ContactFactBox;
                SubFormView=SORTING(No.);
                SubFormLink=No.=FIELD(No.);
                PagePartID=Page50049 }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Cont@1100281026 : Record 5050;
      UserSetup@1100281029 : Record 91;
      CompanyDetails@1100281028 : Form 5054;
      NameDetails@1100281027 : Form 5055;
      AddressStandardization@1100281001 : Codeunit 50098;
      ProviderMgt@1100281003 : Codeunit 50018;
      ServiceFormMgt@1100281011 : Codeunit 50086;
      CorporateRegionDesc@1100281024 : Text[100];
      SalutationCodeDesc@1100281013 : Text[100];
      JobTitleCodeDesc@1100281012 : Text[100];
      KeyBoardAddress@1100281005 : Text[1024];
      OrgLevelDesc@1100281019 : Text[80] INDATASET;
      CaptionClassProviderNo@1100281018 : Text[30];
      CaptionClassProviderName@1100281016 : Text[30];
      IntegrationCustomerNo@1003 : Code[20];
      MapPointVisible@19022708 : Boolean INDATASET;
      "Currency CodeEnable"@19025310 : Boolean INDATASET;
      "VAT Registration No.Enable"@19054634 : Boolean INDATASET;
      "Company No.Enable"@19064179 : Boolean INDATASET;
      "Company NameEnable"@19044404 : Boolean INDATASET;
      OrganizationalLevelCodeEnable@19070485 : Boolean INDATASET;
      NoofJobResponsibilitiesEnable@19004457 : Boolean INDATASET;
      "Trade RegisterEnable"@19033940 : Boolean INDATASET;
      "APE CodeEnable"@19035796 : Boolean INDATASET;
      "Legal FormEnable"@19031782 : Boolean INDATASET;
      "Stock CapitalEnable"@19032251 : Boolean INDATASET;
      AdresseEditable@1100281000 : Boolean INDATASET;
      BenefVisible@1100281002 : Boolean INDATASET;
      CorporateVisible@1100281008 : Boolean INDATASET;
      IsEditable@1100281004 : Boolean INDATASET;
      ContactIsAvailableToCreate@1000000001 : Boolean INDATASET;
      CreateServiceVisible@1100281006 : Boolean INDATASET;
      TypePerson@1100281007 : Boolean INDATASET;
      ContactPerson@1100281009 : Boolean INDATASET;
      ProviderVisible@1100281010 : Boolean INDATASET;
      NotProviderVisible@1100281017 : Boolean INDATASET;
      NotProviderContactVisible@1000000000 : Boolean INDATASET;
      NotifyCustVisible@1100281014 : Boolean INDATASET;
      DeclarationContVisible@1100281015 : Boolean INDATASET;
      TextCC001@1100281020 : TextConst 'FRA=Nø contact soci‚taire';
      TextCC101@1100281021 : TextConst 'FRA=Nø prestataire';
      TextCC002@1100281023 : TextConst 'FRA=Nom contact soci‚taire';
      TextCC102@1100281022 : TextConst 'FRA=Raison sociale';
      UserSetupOK@1100281025 : Boolean;
      Text001@1100281030 : TextConst 'ENU=Do you want to refresh contact from beneficiary file lines :;FRA=Souhaitez-vous actualiser le contact … partir des lignes du fichier soci‚taire :';
      Text002@1100281031 : TextConst 'ENU=Not treat,Treated;FRA=Non trait‚es,Trait‚es';

    PROCEDURE EnableFields@1();
    VAR
      lCampanyContact@1000000000 : Record 5050;
    BEGIN
      "Currency CodeEnable" := Type = Type::Company;
      "VAT Registration No.Enable" := Type = Type::Company;
      "Company No.Enable" := Type = Type::Person;
      "Company NameEnable" := Type = Type::Person;
      OrganizationalLevelCodeEnable := Type = Type::Person;
      NoofJobResponsibilitiesEnable := Type = Type::Person;
      "Trade RegisterEnable" := Type = Type::Company;
      "APE CodeEnable" := Type = Type::Company;
      "Legal FormEnable" := Type = Type::Company;
      "Stock CapitalEnable" := Type = Type::Company;
      //<<IMH14.ISAT.EBA
      //AdresseEditable := NOT AddressStandardization.CountryToAssist(DATABASE::Contact, "Country/Region Code"); //IMH03 isat.ZW
      AdresseEditable := TRUE;
      NotifyCustVisible := "Service Contact" <> "Service Contact"::Beneficiary;
      DeclarationContVisible :=
        NOT ("Service Contact" IN ["Service Contact"::Beneficiary, "Service Contact"::Provider,"Service Contact"::"Statistics Group"]);
      //>>IMH14.ISAT.EBA
      BenefVisible := "Service Contact" = "Service Contact"::Beneficiary;
      CorporateVisible := "Service Contact" = "Service Contact"::"Corporate Customer";
      CreateServiceVisible := ("Service Contact" = "Service Contact"::Beneficiary) AND (Type = Type::Company);
      TypePerson := (Type = Type::Person);

      ProviderVisible := "Service Contact" IN ["Service Contact"::Provider,"Service Contact"::"Statistics Group"]; //IMH07
      NotProviderVisible := NOT ("Service Contact" IN ["Service Contact"::Provider,"Service Contact"::"Statistics Group"]);
      //<<IMH56
      IF lCampanyContact.GET("Company No.") THEN
        NotProviderContactVisible := NOT (lCampanyContact."Service Contact" IN [lCampanyContact."Service Contact"::Provider,
                                                         lCampanyContact."Service Contact"::"Statistics Group"]);
      //>>IMH56

      CaptionClassProviderNo := TextCC001;
      CaptionClassProviderName := TextCC002;

      IF ("Service Contact" = "Service Contact"::Provider) THEN
      BEGIN
        CaptionClassProviderNo := TextCC101;
        CaptionClassProviderName := TextCC102;
      END;
    END;

    PROCEDURE IntegrationFindCustomerNo@2();
    VAR
      ContactBusinessRelation@1000 : Record 5054;
    BEGIN
      ContactBusinessRelation.SETCURRENTKEY("Link to Table","Contact No.");
      ContactBusinessRelation.SETRANGE("Link to Table",ContactBusinessRelation."Link to Table"::Customer);
      ContactBusinessRelation.SETRANGE("Contact No.","Company No.");
      IF ContactBusinessRelation.FINDFIRST THEN BEGIN
        IntegrationCustomerNo := ContactBusinessRelation."No.";
      END ELSE BEGIN
        IntegrationCustomerNo := '';
      END;
    END;

    LOCAL PROCEDURE TypeOnAfterValidate@19069045();
    BEGIN
      EnableFields;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      EnableFields;

      IF Type = Type::Person THEN
        IntegrationFindCustomerNo;

      GetServFieldDescription;//IMH09
    END;

    PROCEDURE OpenCustCard@1100281000(pCustNo@1100281001 : Code[20]);
    VAR
      lCust@1100281000 : Record 18;
    BEGIN
      IF lCust.GET(pCustNo) THEN
        PAGE.RUNMODAL(PAGE::"Customer Card",lCust);
    END;

    PROCEDURE GetServFieldDescription@1100281010();
    BEGIN
      //IMH09
      CorporateRegionDesc := ServiceFormMgt.CorporateRegion_Desc("Corporate No.","Corporate Region Code");
      SalutationCodeDesc := ServiceFormMgt.Salutation_Desc("Salutation Code");
      OrgLevelDesc := ServiceFormMgt.OrgLevel_Desc("Organizational Level Code");
      JobTitleCodeDesc := ServiceFormMgt.JobTitle_Desc("Job Title");
    END;

    PROCEDURE GetUserSetup@1100281001();
    BEGIN
      IF UserSetupOK THEN BEGIN
        EXIT;
      END;

      UserSetup.GET(USERID);
      UserSetupOK := TRUE;
    END;

    PROCEDURE RefreshContact@1100281003(pContact@1100281002 : Record 5050);
    VAR
      lANSAAPMgt@1100281000 : Codeunit 50170;
      lSelection@1100281001 : Integer;
    BEGIN
      // IMH54.PC
      lSelection := 2;//STRMENU(Text002,1,Text001);    // IMH55.WGA
      CASE lSelection OF
        0 : EXIT;
        1 : lANSAAPMgt.ActualizeContact(pContact,FALSE);
        2 : lANSAAPMgt.ActualizeContact(pContact,TRUE);
      END;
    END;

    BEGIN
    {
      /** @r IMH62 @d 18/06/13 @a ISAT.ACO @v IMH6.01.347 @s Juin @h 3885 @c Ajout historique des modifications */
      /** @r IMH60 @d 14/06/13 @a ISAT.PC @v IMH6.01.345 @s Juin @h 4073
          @c Ajout champ No. visible uniquement pour les utilisateurs autoriser … modifier les contacts*/
      /** @r IMH59 @d 04/07/12 @a ISAT.PC @v IMH6.01.011 @s Gestion du service @h 3494 @c champ Business Phone No visible … true*/
      /** @r IMH58 @d 21/06/12 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c evolution
          @h mantis3610 @c Creation champ 50060 mask To DGS */
      /** @r IMH57 @d 13/04/12 @a ISAT.ST @v IMH6.01.108 @d Interactions @h 3317 @c Envoi de mail  */
      /** @r IMH56 @d 11/04/11 @a ISAT.ZW @v IMH6.01.002 @s Gestion des contacts
          @c Gestion affichage de champ GUID DARVA */
      /** @r IMH55 @d 10/04/12 @a IMH.WGA @v  @s Modification Affichage Bouton Actualisation benef + MAJ Code
          @c Gestion de l'actualisation des contacts @h Mantis 3280
          @c Modif fonction RefreshContact*/
      /** @r IMH54 @d 01/02/12 @a ISAT.PC @v IMH6.01.143 @s ANSAAP
          @c Gestion de l'actualisation des contacts
          @c ajout fonction RefreshContact*/
      /** @r IMH53 @d 21/12/11 @a ISAT.ST @v IMH6.01.002 @s initialisation ANSAAP */
      /** @r IMH52 @d 15/10/11 @a ISAT.EBA @v IMH6.01.129 @s Interface CTI */
      /** @r IMH51 @d 27/09/11 @a ISAT.PC @v IMH6.01.002 @s Gestion des contacts
          @c Ajout champ 56022, From Beneficiary Interface -> pour la gestion du grisage de la fiche contact*/
      /** @r IMH20 @d 23/09/11 @a ISAT.PC @v IMH6.01.200 @s Beneficiaire @c Blocage de la fiche contact */
      /** @r IMH19 @d 01/09/11 @a ISAT.LLT @v IMH6.01.001 @s Normalisation des donn‚es @c Ajout adresse 3 et Nom 2*/
      /** @r IMH18 @d 20/07/11 @a ISAT.PC @v IMH6.01.002 @s Gestion des contacts
          @c ajout fonction CheckContract */
      /** @r IMH17 @d 13/07/11 @a ISAT.ZW @v IMH6.01.002 @s Gestion des contacts
          @c Dupliquer le champ 54040 Send to Mission Without Call de la fiche prestataire */
      /** @r IMH16 @d 16/05/11 @a ISAT.ZW @v IMH6.01.002 @s Gestion des contacts
          @c D‚sactiver boutons non utilis‚s */
      /** @r IMH15 @d 13/05/11 @a ISAT.ST @v IMH6.01.002 @s Gestion des contacts
          @c Ajout niveau organisationel sur les contacts personnes */
      /** @r IMH14 @d 18/04/11 @a ISAT.EBA @v IMH6.01.200 @s DPS Lot 3
          @c Repasser en saisie manuelle d adresse sur la fiche b‚n‚ficiaire */
      /** @r IHM13 @d 01/04/10 @a ISAT.ZW @v IMH6.01.136 @s interface fusion @c Ajout parametre creation service */
      /** @r IMH12 @d 24/03/11 @a ISAT.ZW @v IMH6.01.028 @s gestion grand compte
          @c precharger les no telephone, fax, email par cela de region grand compte */
      /** @r IMH11 @d 24/03/11 @a ISAT.ZW @v IMH6.01.028 @s Recherche prestataire @c ajout champ contact declaration */
      /** @r IMH10 @d 24/03/11 @a ISAT.NFO @v IMH6.01.028 @s Recherche prestataire @c ajout champ prefered contact */
      /** @r IMH09 @d 11/03/11 @a ISAT.LLT @v IMH6.01.123 @s Saisie champs description */
      /** @r IHM08 @d 04/03/10 @a ISAT.ZW @v IMH6.01.004 @s GED @c renomer interaction report‚ en Brouillons */
      /** @r IMH07 @d 22/02/11 @a ISAT.ZW @v IMH6.01.020 @s Gestion prestataire
          @c ne plus faire apparaitre "date de naissance" sur les fiches contacts de type prestataire */
      /** @r IMH06 @d 03/12/10 @a ISAT.ST @v IMH6.01.002 @s Gestion des contacts
          @c Modification appel contacts li‚s */
      /** @r IMH05 @d 30/11/10 @a ISAT.LLT @v IMH6.01.002 @s Gestion des contacts
          @c regroupement des champs d'adresse sur la premiere colonne */
      /** @r IMH04 @d 10/11/10 @a ISAT.LLT @v IMH6.01.002 @s Gestion des contacts
          @c Ajout saisie rapide d'adresse */
      /** @r IMH03 @d 21/10/10 @a ISAT.ZW @v IMH6.01.001 @s Normalisation des donn‚es
          @c Adresse non editable si Normalisation adresse pays */
      /** @r IMH02 @d 28/09/10 @a ISAT.ST @v IMH6.01.002 @s Gestion des contact
          @c Changement du sous-formulaire pour lier sur les contrats */
      /** @r IMH01 @d 28/09/10 @a ISAT.LLT @v IMH6.01.002 @s Gestion des contacts
          @c Ajout des champs Service Contact,Corporate No.,Corporate Region Code, VIP Code,Birthdate, Notify Customer, Member No.
          @c Suppression des champs Pager, Type correspondance */
    }
    END.
  }
}