OBJECT Page 5056 Contact Alt. Address Card
{
  OBJECT-PROPERTIES
  {
    Date=23/09/11;
    Time=11:55:51;
    Modified=Yes;
    Version List=NAVW15.00,IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Contact Alt. Address Card;
               FRA=Fiche adresse second. contact];
    SourceTable=Table5051;
    DataCaptionExpr=Caption;
    PageType=Card;
    OnOpenPage=BEGIN
                 //<<IMH07.PC
                 GetUserSetup;
                 CurrPage.EDITABLE := UserSetup."Available To Change Contacts";
                 //>>IMH07.PC
               END;

    OnAfterGetRecord=BEGIN
                       GetRecord;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 34      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Alt. Contact Address;
                                 FRA=&Adresse secondaire contact] }
      { 37      ;2   ;Action    ;
                      CaptionML=[ENU=Date Ranges;
                                 FRA=Plage de dates];
                      RunObject=Page 5058;
                      RunFormLink=Contact No.=FIELD(Contact No.),
                                  Contact Alt. Address Code=FIELD(Code) }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           FRA=G‚n‚ral] }

    { 2   ;2   ;Field     ;
                SourceExpr=Code }

    { 4   ;2   ;Field     ;
                SourceExpr="Company Name" }

    { 6   ;2   ;Field     ;
                SourceExpr=Address;
                OnAssistEdit=BEGIN
                               AddressStandardization.AssistContAltAddr(Rec);   //IMH02 isat.zw
                             END;
                              }

    { 8   ;2   ;Field     ;
                SourceExpr="Address 2" }

    { 10  ;2   ;Field     ;
                SourceExpr="Post Code" }

    { 35  ;2   ;Field     ;
                SourceExpr=City }

    { 12  ;2   ;Field     ;
                SourceExpr="Country/Region Code" }

    { 14  ;2   ;Field     ;
                SourceExpr="Phone No." }

    { 1100281000;2;Field  ;
                SourceExpr="Geo. Reference Code";
                Editable=FALSE }

    { 1100281001;2;Field  ;
                SourceExpr="Geo. Reference Address" }

    { 1100281002;2;Field  ;
                SourceExpr="Operational Distance" }

    { 1100281003;2;Group  ;
                Visible=IsBeneficiary;
                GroupType=Group }

    { 1100281004;3;Field  ;
                Name=OccupierNature;
                CaptionML=[ENU=Occupier Nature;
                           FRA=Nature de l'occupant];
                SourceExpr=OccupierNatureDesc;
                OnValidate=BEGIN
                             ServiceFormMgt.Code_Validate(OccupierNatureDesc,5051,50070,"Occupier Nature");//IMH06
                           END;

                OnLookup=BEGIN
                           ServiceFormMgt.Code_Lookup(OccupierNatureDesc,5051,50070,"Occupier Nature");//IMH06
                         END;
                          }

    { 1100281005;3;Field  ;
                Name=ResidenceType;
                CaptionML=[ENU=Residence Type;
                           FRA=Type de r‚sidence];
                SourceExpr=ResidenceTypeDesc;
                OnValidate=BEGIN
                             ServiceFormMgt.Code_Validate(ResidenceTypeDesc,5051,50071,"Residence Type");//IMH06
                           END;

                OnLookup=BEGIN
                           ServiceFormMgt.Code_Lookup(ResidenceTypeDesc,5051,50071,"Residence Type");//IMH06
                         END;
                          }

    { 1100281006;3;Field  ;
                Name=HousingType;
                CaptionML=[ENU=Housing Type;
                           FRA=Type d'habitation];
                SourceExpr=HousingTypeDesc;
                OnValidate=BEGIN
                             ServiceFormMgt.Code_Validate(HousingTypeDesc,5051,50072,"Housing Type");//IMH06
                           END;

                OnLookup=BEGIN
                           ServiceFormMgt.Code_Lookup(HousingTypeDesc,5051,50072,"Housing Type");//IMH06
                         END;
                          }

    { 1100281007;3;Field  ;
                Name=PropertyType;
                CaptionML=[ENU=Property Type;
                           FRA=Type de propri‚t‚];
                SourceExpr=PropertyTypeDesc;
                Visible=FALSE;
                OnValidate=BEGIN
                             ServiceFormMgt.Code_Validate(PropertyTypeDesc,5051,50073,"Property Type");//IMH06
                           END;

                OnLookup=BEGIN
                           ServiceFormMgt.Code_Lookup(PropertyTypeDesc,5051,50073,"Property Type");//IMH06
                         END;
                          }

    { 1902768601;1;Group  ;
                CaptionML=[ENU=Communication;
                           FRA=Communication] }

    { 31  ;2   ;Field     ;
                SourceExpr="Phone No." }

    { 16  ;2   ;Field     ;
                SourceExpr="Mobile Phone No." }

    { 20  ;2   ;Field     ;
                SourceExpr="Mobile Phone No. 2" }

    { 18  ;2   ;Field     ;
                SourceExpr="Fax No." }

    { 26  ;2   ;Field     ;
                SourceExpr="E-mail" }

    { 28  ;2   ;Field     ;
                SourceExpr="Home Page" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=untitled;FRA=sans-titre';
      UserSetup@1100281010 : Record 91;
      AddressStandardization@1100281004 : Codeunit 50098;
      ServiceFormMgt@1100281000 : Codeunit 50086;
      AdresseEditable@1100281001 : Boolean INDATASET;
      IsBeneficiary@1100281003 : Boolean INDATASET;
      UserSetupOK@1100281009 : Boolean;
      KeyboardingAddress@1100281002 : Text[1024];
      OccupierNatureDesc@1100281005 : Text[100];
      ResidenceTypeDesc@1100281006 : Text[100];
      HousingTypeDesc@1100281007 : Text[100];
      PropertyTypeDesc@1100281008 : Text[100];

    PROCEDURE Caption@1() : Text[130];
    VAR
      Cont@1000 : Record 5050;
    BEGIN
      IF Cont.GET("Contact No.") THEN
        EXIT("Contact No." + ' ' + Cont.Name + ' ' + Code + ' ' + "Company Name")
      ELSE
        EXIT(Text000);
    END;

    PROCEDURE SetFormEditable@1100281000();
    BEGIN
      //IMH02 isat.zw
      AdresseEditable := NOT AddressStandardization.CountryToAssist(
                            DATABASE::"Contact Alt. Address", "Country/Region Code"); //IMH03 isat.ZW

      IsBeneficiary := ("Service Contact" = "Service Contact"::Beneficiary);//IMH05
    END;

    PROCEDURE CreateAddress@1100281002(pIncludeWayType@1100281001 : Boolean);
    VAR
      lCode@1100281000 : Record 50079;
      lWayTypeText@1100281002 : Text[50];
    BEGIN
      //IMH04
      IF lCode.GET(50077, 21, "Way Type") THEN;
      IF pIncludeWayType THEN
        lWayTypeText := lCode.Description;
      IF lWayTypeText <> '' THEN
        lWayTypeText := ' ' + lWayTypeText;
      IF "Way No." = 0 THEN
        Address := COPYSTR("Way No. Extension" + lWayTypeText + ' ' + "Way Name",
                           1, MAXSTRLEN(Address))
      ELSE
        IF "Way No. Extension" <> '' THEN
          Address := COPYSTR(FORMAT("Way No.") + ' ' + "Way No. Extension" + lWayTypeText + ' ' + "Way Name",
                           1, MAXSTRLEN(Address))
        ELSE
          Address := COPYSTR(FORMAT("Way No.") + lWayTypeText + ' ' + "Way Name",
                           1, MAXSTRLEN(Address));
    END;

    PROCEDURE GetServFieldDescription@1100281010();
    BEGIN
      //IMH06
      OccupierNatureDesc := ServiceFormMgt.Code_Desc(5051,50070,"Occupier Nature");
      ResidenceTypeDesc := ServiceFormMgt.Code_Desc(5051,50071,"Residence Type");
      HousingTypeDesc := ServiceFormMgt.Code_Desc(5051,50072,"Housing Type");
      PropertyTypeDesc := ServiceFormMgt.Code_Desc(5051,50073,"Property Type");
    END;

    PROCEDURE GetRecord@1100281001();
    BEGIN
      SetFormEditable;  //IMH02 isat.zw
      GetServFieldDescription;//IMH06
    END;

    PROCEDURE GetUserSetup@1100281003();
    BEGIN
      IF UserSetupOK THEN BEGIN
        EXIT;
      END;

      UserSetup.GET(USERID);
      UserSetupOK := TRUE;
    END;

    BEGIN
    {
      /** @r IMH07 @d 23/09/11 @a ISAT.PC @v IMH6.01.200 @s Beneficiaire @c Blocage de la fiche contact */
      /** @r IMH06 @d 11/03/11 @a ISAT.LLT @v IMH6.01.123 @s Saisie champs description */
      /** @r IMH05 @d 21/02/11 @a ISAT.LLT @v IMH6.01.002 @s Gestion des contacts
          @c Gestion de l'affichage des champs en fonction du type contact */
      /** @r IMH04 @d 16/12/10 @a ISAT.LLT @v IMH6.01.002 @s Gestion des contacts
          @c Ajout champ adresse rapide
          @c Suppression champ telex etour, pager tel.astreinte */
      /** @r IMH03 @d 17/11/10 @a ISAT.LLT @v IMH6.01.002 @s Gestion des contacts
          @c Ajout du champ 50070 Occupier Nature
          @c Ajout du champ 50071 Residence Type
          @c Ajout du champ 50072 Housing Type
          @c Ajout du champ 50073 Property Type */
      /** @r IMH02 @d 21/10/10 @a ISAT.ZW @v IMH6.01.001 @s Normalisation des donn‚es
          @c Adresse non editable si Normalisation adresse pays + AssistEdit Adresse*/
      /** @r IMH01 @d 28/09/10 @a isat.PC @v IMH6.01.022 @s Comp‚tence g‚ographique
          @c Ajout champ 50050, Reference Geo. Code
          @c Ajout champ 50051, Reference Geo. Address
          @c Ajout champ 50052, Operational Distance
          @c Ajout champ 50053, Constraint Phone No. */
    }
    END.
  }
}