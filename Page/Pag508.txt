OBJECT Page 508 Blanket Sales Order Subform
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00,KITNA6.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               FRA=Lignes];
    MultipleNewLines=Yes;
    LinksAllowed=No;
    SourceTable=Table37;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Blanket Order));
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  Type := xRec.Type;
                  CLEAR(ShortcutDimCode);
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 FRA=Fonction&s] }
      { 1903926304;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get &Price;
                                 FRA=Extraire &prix];
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 ShowPrices
                               END;
                                }
      { 1903532204;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Li&ne Discount;
                                 FRA=E&xtraire remise ligne];
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 ShowLineDisc
                               END;
                                }
      { 1901281504;2 ;Action    ;
                      CaptionML=[ENU=Re&fresh Kit BOM;
                                 FRA=Ac&tualiser nomenclature kit];
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 RefreshKitLines;
                               END;
                                }
      { 1901741804;2 ;Action    ;
                      CaptionML=[ENU=E&xplode BOM;
                                 FRA=&Eclater nomenclature];
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 ExplodeBOM;
                               END;
                                }
      { 1903099004;2 ;Action    ;
                      CaptionML=[ENU=Insert &Ext. Texts;
                                 FRA=Ins‚rer te&xtes ‚tendus];
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _InsertExtendedText(TRUE);
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 FRA=&Ligne] }
      { 1903866504;2 ;ActionGroup;
                      CaptionML=[ENU=Item Availability by;
                                 FRA=Disponibilit‚ article par] }
      { 1900544904;3 ;Action    ;
                      CaptionML=[ENU=Period;
                                 FRA=P‚riode];
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _ItemAvailability(0);
                               END;
                                }
      { 1901991304;3 ;Action    ;
                      CaptionML=[ENU=Variant;
                                 FRA=Variante];
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _ItemAvailability(1);
                               END;
                                }
      { 1901652204;3 ;Action    ;
                      CaptionML=[ENU=Location;
                                 FRA=Magasin];
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _ItemAvailability(2);
                               END;
                                }
      { 1902740304;2 ;ActionGroup;
                      CaptionML=[ENU=Unposted Lines;
                                 FRA=Lignes non valid‚es] }
      { 1907075804;3 ;Action    ;
                      CaptionML=[ENU=Orders;
                                 FRA=Commandes];
                      Image=Document;
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 ShowOrders;
                               END;
                                }
      { 1900639404;3 ;Action    ;
                      CaptionML=[ENU=Invoices;
                                 FRA=Factures];
                      Image=Invoice;
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 ShowInvoices;
                               END;
                                }
      { 1906421304;3 ;Action    ;
                      CaptionML=[ENU=Return Orders;
                                 FRA=Retours];
                      Image=ReturnOrder;
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 ShowReturnOrders;
                               END;
                                }
      { 1900609704;3 ;Action    ;
                      CaptionML=[ENU=Credit Memos;
                                 FRA=Avoirs];
                      Image=CreditMemo;
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 ShowCreditMemos;
                               END;
                                }
      { 1904974904;2 ;ActionGroup;
                      CaptionML=[ENU=Posted Lines;
                                 FRA=Lignes valid‚es] }
      { 1904945204;3 ;Action    ;
                      CaptionML=[ENU=Shipments;
                                 FRA=Livraisons];
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 ShowPostedOrders;
                               END;
                                }
      { 1901092104;3 ;Action    ;
                      CaptionML=[ENU=Invoices;
                                 FRA=Factures];
                      Image=Invoice;
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 ShowPostedInvoices;
                               END;
                                }
      { 1903984904;3 ;Action    ;
                      CaptionML=[ENU=Return Receipts;
                                 FRA=R‚ceptions retour];
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 ShowPostedReturnReceipts;
                               END;
                                }
      { 1901033504;3 ;Action    ;
                      CaptionML=[ENU=Credit Memos;
                                 FRA=Avoirs];
                      Image=CreditMemo;
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 ShowPostedCreditMemos;
                               END;
                                }
      { 1900186704;2 ;Action    ;
                      ShortCutKey=Maj+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 FRA=Axes analytiques];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _ShowDimensions;
                               END;
                                }
      { 1900978604;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 FRA=Co&mmentaires];
                      Image=ViewComments;
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _ShowLineComments;
                               END;
                                }
      { 1905617004;2 ;Action    ;
                      CaptionML=[ENU=Kit Lines;
                                 FRA=Lignes kit];
                      OnAction=BEGIN
                                 //This functionality was copied from page #507. Unsupported part was commented. Please check it.
                                 {CurrPage.SalesLines.FORM.}
                                 _ShowKitLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr=Type }

    { 4   ;2   ;Field     ;
                SourceExpr="No.";
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                               NoOnAfterValidate;
                           END;
                            }

    { 26  ;2   ;Field     ;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             CrossReferenceNoOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           InsertExtendedText(FALSE);
                         END;
                          }

    { 22  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 1462000;2;Field     ;
                SourceExpr="Build Kit";
                Visible=FALSE;
                OnValidate=BEGIN
                             BuildKitOnAfterValidate;
                           END;
                            }

    { 36  ;2   ;Field     ;
                SourceExpr="Location Code" }

    { 8   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 42  ;2   ;Field     ;
                SourceExpr="Work Type Code";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code";
                OnValidate=BEGIN
                             UnitofMeasureCodeOnAfterValida;
                           END;
                            }

    { 46  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                CaptionML=[ENU=Sale Price Exists;
                           FRA=Prix vente existant];
                SourceExpr=PriceExists;
                Visible=FALSE;
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Unit Price" }

    { 28  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Amount" }

    { 40  ;2   ;Field     ;
                CaptionML=[ENU=Sales Line Disc. Exists;
                           FRA=Rem. ligne vente existante];
                SourceExpr=LineDiscExists;
                Visible=FALSE;
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Discount %" }

    { 52  ;2   ;Field     ;
                SourceExpr="Line Discount Amount";
                Visible=FALSE }

    { 54  ;2   ;Field     ;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. to Ship" }

    { 20  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Quantity Shipped" }

    { 24  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Quantity Invoiced" }

    { 90  ;2   ;Field     ;
                SourceExpr="Shipment Date" }

    { 32  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(3,ShortcutDimCode[3]);
                         END;
                          }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(4,ShortcutDimCode[4]);
                         END;
                          }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(5,ShortcutDimCode[5]);
                         END;
                          }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(6,ShortcutDimCode[6]);
                         END;
                          }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(7,ShortcutDimCode[7]);
                         END;
                          }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(8,ShortcutDimCode[8]);
                         END;
                          }

  }
  CODE
  {
    VAR
      SalesHeader@1000 : Record 36;
      TransferExtendedText@1002 : Codeunit 378;
      SalesPriceCalcMgt@1004 : Codeunit 7000;
      ShortcutDimCode@1003 : ARRAY [8] OF Code[20];
      CurrentSalesLine@1001 : Record 37;
      SalesLine@1005 : Record 37;

    PROCEDURE ApproveCalcInvDisc@6();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Disc. (Yes/No)",Rec);
    END;

    PROCEDURE CalcInvDisc@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Calc. Discount",Rec);
    END;

    PROCEDURE ExplodeBOM@3();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Explode BOM",Rec);
    END;

    PROCEDURE _InsertExtendedText@19065029(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.SalesCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertSalesExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    PROCEDURE InsertExtendedText@5(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.SalesCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertSalesExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    PROCEDURE _ItemAvailability@19008035(AvailabilityType@1000 : 'Date,Variant,Location,Bin');
    BEGIN
      Rec.ItemAvailability(AvailabilityType);
    END;

    PROCEDURE ItemAvailability@7(AvailabilityType@1000 : 'Date,Variant,Location,Bin');
    BEGIN
      Rec.ItemAvailability(AvailabilityType);
    END;

    PROCEDURE _ShowDimensions@19020529();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE ShowDimensions@8();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    PROCEDURE ShowPrices@15();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLinePrice(SalesHeader,Rec);
    END;

    PROCEDURE ShowLineDisc@16();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLineLineDisc(SalesHeader,Rec);
    END;

    PROCEDURE ShowOrders@2();
    BEGIN
      CurrentSalesLine:=Rec;
      SalesLine.RESET;
      SalesLine.SETCURRENTKEY("Document Type","Blanket Order No.","Blanket Order Line No.");
      SalesLine.SETRANGE("Document Type",SalesLine."Document Type"::Order);
      SalesLine.SETRANGE("Blanket Order No.",CurrentSalesLine."Document No.");
      SalesLine.SETRANGE("Blanket Order Line No.",CurrentSalesLine."Line No.");
      FORM.RUNMODAL(FORM::"Sales Lines",SalesLine);
    END;

    PROCEDURE ShowInvoices@4();
    BEGIN
      CurrentSalesLine:=Rec;
      SalesLine.RESET;
      SalesLine.SETCURRENTKEY("Document Type","Blanket Order No.","Blanket Order Line No.");
      SalesLine.SETRANGE("Document Type",SalesLine."Document Type"::Invoice);
      SalesLine.SETRANGE("Blanket Order No.",CurrentSalesLine."Document No.");
      SalesLine.SETRANGE("Blanket Order Line No.",CurrentSalesLine."Line No.");
      FORM.RUNMODAL(FORM::"Sales Lines",SalesLine);
    END;

    PROCEDURE ShowReturnOrders@9();
    BEGIN
      CurrentSalesLine:=Rec;
      SalesLine.RESET;
      SalesLine.SETCURRENTKEY("Document Type","Blanket Order No.","Blanket Order Line No.");
      SalesLine.SETRANGE("Document Type",SalesLine."Document Type"::"Return Order");
      SalesLine.SETRANGE("Blanket Order No.",CurrentSalesLine."Document No.");
      SalesLine.SETRANGE("Blanket Order Line No.",CurrentSalesLine."Line No.");
      FORM.RUNMODAL(FORM::"Sales Lines",SalesLine);
    END;

    PROCEDURE ShowCreditMemos@10();
    BEGIN
      CurrentSalesLine:=Rec;
      SalesLine.RESET;
      SalesLine.SETCURRENTKEY("Document Type","Blanket Order No.","Blanket Order Line No.");
      SalesLine.SETRANGE("Document Type",SalesLine."Document Type"::"Credit Memo");
      SalesLine.SETRANGE("Blanket Order No.",CurrentSalesLine."Document No.");
      SalesLine.SETRANGE("Blanket Order Line No.",CurrentSalesLine."Line No.");
      FORM.RUNMODAL(FORM::"Sales Lines",SalesLine);
    END;

    PROCEDURE ShowPostedOrders@17();
    VAR
      SaleShptLine@1000 : Record 111;
    BEGIN
      CurrentSalesLine:=Rec;
      SaleShptLine.RESET;
      SaleShptLine.SETCURRENTKEY("Blanket Order No.","Blanket Order Line No.");
      SaleShptLine.SETRANGE("Blanket Order No.",CurrentSalesLine."Document No.");
      SaleShptLine.SETRANGE("Blanket Order Line No.",CurrentSalesLine."Line No.");
      FORM.RUNMODAL(FORM::"Posted Sales Shipment Lines",SaleShptLine);
    END;

    PROCEDURE ShowPostedInvoices@14();
    VAR
      SalesInvLine@1000 : Record 113;
    BEGIN
      CurrentSalesLine:=Rec;
      SalesInvLine.RESET;
      SalesInvLine.SETCURRENTKEY("Blanket Order No.","Blanket Order Line No.");
      SalesInvLine.SETRANGE("Blanket Order No.",CurrentSalesLine."Document No.");
      SalesInvLine.SETRANGE("Blanket Order Line No.",CurrentSalesLine."Line No.");
      FORM.RUNMODAL(FORM::"Posted Sales Invoice Lines",SalesInvLine);
    END;

    PROCEDURE ShowPostedReturnReceipts@13();
    VAR
      ReturnRcptLine@1000 : Record 6661;
    BEGIN
      CurrentSalesLine:=Rec;
      ReturnRcptLine.RESET;
      ReturnRcptLine.SETCURRENTKEY("Blanket Order No.","Blanket Order Line No.");
      ReturnRcptLine.SETRANGE("Blanket Order No.",CurrentSalesLine."Document No.");
      ReturnRcptLine.SETRANGE("Blanket Order Line No.",CurrentSalesLine."Line No.");
      FORM.RUNMODAL(FORM::"Posted Return Receipt Lines",ReturnRcptLine);
    END;

    PROCEDURE ShowPostedCreditMemos@11();
    VAR
      SalesCrMemoLine@1000 : Record 115;
    BEGIN
      CurrentSalesLine:=Rec;
      SalesCrMemoLine.RESET;
      SalesCrMemoLine.SETCURRENTKEY("Blanket Order No.","Blanket Order Line No.");
      SalesCrMemoLine.SETRANGE("Blanket Order No.",CurrentSalesLine."Document No.");
      SalesCrMemoLine.SETRANGE("Blanket Order Line No.",CurrentSalesLine."Line No.");
      FORM.RUNMODAL(FORM::"Posted Sales Credit Memo Lines",SalesCrMemoLine);
    END;

    PROCEDURE _ShowLineComments@19074756();
    BEGIN
      Rec.ShowLineComments;
    END;

    PROCEDURE ShowLineComments@18();
    BEGIN
      Rec.ShowLineComments;
    END;

    PROCEDURE _ShowKitLines@19071122();
    BEGIN
      Rec.ShowKitLines;
    END;

    PROCEDURE ShowKitLines@1462000();
    BEGIN
      Rec.ShowKitLines;
    END;

    PROCEDURE RefreshKitLines@1462001();
    BEGIN
      Rec.RefreshKitSalesLines;
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE CrossReferenceNoOnAfterValidat@19048248();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE BuildKitOnAfterValidate@19045154();
    BEGIN
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
      END;
    END;

    LOCAL PROCEDURE UnitofMeasureCodeOnAfterValida@19057939();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
      END;
    END;

    BEGIN
    END.
  }
}