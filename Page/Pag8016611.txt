OBJECT Page 8016611 GL Entry Application Form
{
  OBJECT-PROPERTIES
  {
    Date=30/11/12;
    Time=13:42:18;
    Modified=Yes;
    Version List=ISA6.00,IMH6.01,OPTIM;
  }
  PROPERTIES
  {
    Permissions=TableData 17=rimd;
    CaptionML=[ENU=Application;
               FRA=Lettrage];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table17;
    DataCaptionExpr=GetCaption;
    SourceTableView=SORTING(G/L Account No.,Source Type,Source No.);
    PageType=List;
    OnOpenPage=BEGIN
                 {GET();
                 IF FIND('-') THEN
                 REPEAT
                   IF ((Letter = '') OR (COPYSTR(Letter,1,1) IN ['a','z','e','r','t','y','u','i','o','p','q','s','d','f','g','h','j',
                       'k','l','m','w','x','c','v','b','n']))
                   THEN MARK(TRUE);
                 UNTIL NEXT = 0;
                  }

                 //<<ISA02.ST
                 OpenEntriesOnly := TRUE;
                 SetOpenFIlter;
                 //>>ISA02.ST
               END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1120008 ;1   ;ActionGroup;
                      CaptionML=[ENU=Application;
                                 FRA=Lettrage] }
      { 1120010 ;2   ;Action    ;
                      ShortCutKey=Maj+Ctrl+J;
                      CaptionML=[ENU=Set Applies-to ID;
                                 FRA=Lettrer];
                      Image=SelectLineToApply;
                      OnAction=BEGIN
                                 CLEAR(GLEntry);
                                 GLEntry.COPY(Rec);
                                 CurrPage.SETSELECTIONFILTER(GLEntry);


                                 GLEntry.LOCKTABLE;
                                 IF GLEntry.FIND('-') THEN BEGIN
                                   // Make Applies-to ID
                                   IF GLEntry."Applies-to ID" <> '' THEN
                                     EntryApplID := ''
                                   ELSE BEGIN
                                     //EntryApplID := AppliesToID;
                                     IF EntryApplID = '' THEN BEGIN
                                       EntryApplID := USERID;
                                       IF EntryApplID = '' THEN
                                         EntryApplID := '***';
                                     END;
                                   END;

                                   // Set Applies-to ID
                                   REPEAT
                                     //GLEntry.TESTFIELD(Open,TRUE);
                                     GLEntry."Applies-to ID" := EntryApplID;
                                     GLEntry.MODIFY;
                                   UNTIL GLEntry.NEXT = 0;
                                 END;
                               END;
                                }
      { 1120011 ;2   ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=[ENU=Post Application;
                                 FRA=Valider le lettrage];
                      Image=PostApplication;
                      OnAction=BEGIN
                                 GLEntriesApplication.Validate(Rec);
                               END;
                                }
      { 1120012 ;2   ;Action    ;
                      CaptionML=FRA=Delettrer;
                      OnAction=BEGIN
                                 CLEAR(GLEntry);
                                 GLEntry.SETCURRENTKEY("G/L Account No.", Letter); //IMH03.ST
                                 GLEntry.SETRANGE("G/L Account No.","G/L Account No.");
                                 GLEntry.SETRANGE(Letter,Letter);
                                 IF GLEntry.FIND('-') THEN
                                 REPEAT
                                   GLEntry.Letter := '';
                                   GLEntry."Letter Date" := 0D;
                                   //<<IMH01.RC
                                   GLEntry.Open:=TRUE;
                                   //>>IMH01.RC
                                   GLEntry.MODIFY;
                                 UNTIL GLEntry.NEXT = 0;
                                 MESSAGE('%1',Text1120007);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Posting Date";
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="Document Type";
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Document No.";
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr=Description;
                Editable=FALSE }

    { 1120003;2;Field     ;
                SourceExpr=Letter }

    { 1120005;2;Field     ;
                SourceExpr="Letter Date" }

    { 1100281000;2;Field  ;
                SourceExpr="Debit Amount";
                Editable=FALSE }

    { 1100281002;2;Field  ;
                SourceExpr="Credit Amount";
                Editable=FALSE }

    { 1120001;2;Field     ;
                SourceExpr="Applies-to ID";
                Editable=FALSE }

    { 1000000002;2;Field  ;
                SourceExpr="Source No.";
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr=Amount;
                Visible=FALSE;
                Editable=FALSE }

    { 1000000000;2;Field  ;
                SourceExpr="Source Code";
                Editable=FALSE }

    { 1100281001;2;Field  ;
                SourceExpr="Corporate No." }

    { 1100281003;2;Field  ;
                SourceExpr="Corporate Region Code" }

    { 1100281005;2;Field  ;
                SourceExpr="Service No." }

    { 1100281006;2;Field  ;
                SourceExpr="Service Header No." }

    { 1120000;1;Group      }

    { 1120017;2;Field     ;
                CaptionML=[ENU=Appln. Code;
                           FRA=Code lettre];
                SourceExpr=ApplnCode;
                TableRelation=Currency;
                Editable=FALSE }

    { 1120015;2;Field     ;
                CaptionML=[ENU=Debit (LCY);
                           FRA=D‚bit DS];
                SourceExpr=Debit;
                AutoFormatType=1;
                Editable=FALSE }

    { 1120013;2;Field     ;
                CaptionML=[ENU=Credit (LCY;
                           FRA=Cr‚dit DS];
                SourceExpr=Credit;
                AutoFormatType=1;
                Editable=FALSE }

    { 1120007;2;Field     ;
                CaptionML=[ENU=Balance;
                           FRA=Solde];
                SourceExpr=Debit-Credit;
                AutoFormatType=1;
                Editable=FALSE }

    { 1100281004;2;Field  ;
                CaptionML=[ENU=Open Entries Only;
                           FRA=Ecritures ouvertes seulement];
                SourceExpr=OpenEntriesOnly;
                OnValidate=BEGIN
                             SetOpenFIlter;
                             CurrPage.UPDATE;
                           END;
                            }

  }
  CODE
  {
    VAR
      GLEntriesApplication@1120000 : Codeunit 10842;
      GLEntry@1120001 : Record 17;
      EntryApplID@1120002 : Code[20];
      ApplnCode@1120005 : Code[20];
      Debit@1120003 : Decimal;
      Credit@1120004 : Decimal;
      DateFilter@1120006 : Date;
      GLAcc@1000000000 : Record 15;
      Text1120007@1120007 : TextConst 'FRA=D‚lettrage r‚ussit';
      "Ecriture ouverte"@1100281000 : Boolean;
      OpenEntriesOnly@1100481000 : Boolean;

    PROCEDURE CalcAmount@1120002();
    VAR
      GLE@1120000 : Record 17;
    BEGIN
      ApplnCode := Letter;
      Debit := 0;
      Credit :=0;
      GLE.SETCURRENTKEY("G/L Account No.",Letter); //ISA02.ST
      IF Letter <> '' THEN BEGIN
        GLE.SETRANGE("G/L Account No.","G/L Account No.");
        GLE.SETRANGE(Letter,Letter);
        IF GLE.FIND('-') THEN
        REPEAT
          Debit := Debit + GLE."Debit Amount";
          Credit := Credit + GLE."Credit Amount";
        UNTIL GLE.NEXT = 0;
      END ELSE BEGIN
      //  Debit := "Debit Amount";
      //  Credit := "Credit Amount";
        EntryApplID := USERID;
        IF EntryApplID = '' THEN
          EntryApplID := '***';
        GLE.SETRANGE("G/L Account No.","G/L Account No.");
        GLE.SETFILTER(Letter,'%1','');
        GLE.SETFILTER("Applies-to ID",EntryApplID);
        IF GLE.FIND('-') THEN
        REPEAT
          Debit := Debit + GLE."Debit Amount";
          Credit := Credit + GLE."Credit Amount";
        UNTIL GLE.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE GetCaption@2() : Text[250];
    BEGIN
      IF GLAcc."No." <> "G/L Account No." THEN
        IF NOT GLAcc.GET("G/L Account No.") THEN
          IF GETFILTER("G/L Account No.") <> '' THEN
            IF GLAcc.GET(GETRANGEMIN("G/L Account No.")) THEN;
      EXIT(STRSUBSTNO('%1 %2',GLAcc."No.",GLAcc.Name))
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      CalcAmount();
    END;

    LOCAL PROCEDURE SetOpenFIlter@1100481000();
    BEGIN
      //ISA02.ST
      IF OpenEntriesOnly THEN BEGIN
        SETFILTER(Letter, '%1','');
      END
      ELSE
        SETRANGE(Letter);
    END;

    BEGIN
    {
      /** @r IMH03 @d 30/11/12 @a ISAT.ST @v IMH6.01.P008 @s Optimisation @c Setcurrentkey manquant */
      /** @r IMH02 @d 05/10/12 @a ISAT.ZW @v IMH6.01.212 @h 3035 @s Changer type card --> List */
      /** @r IMH01 @d 06/08/12 @a ISAT.RC @v IMH6.01.212 @h 3035 @s lettrage automatique du compte 471200 mantis 3035  */
    }
    END.
  }
}