OBJECT Report 10872 Duplicate parameter
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVFR6.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Duplicate parameter;
               FRA=Dupliquer le paramŠtre];
    ProcessingOnly=Yes;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table10860;
        DataItemTableView=SORTING(Code);
        DataItemVarName=PaymentClass;
        OnPreDataItem=BEGIN
                        VerifyNewName;
                      END;

        OnAfterGetRecord=VAR
                           PaymtClass@1120000 : Record 10860;
                         BEGIN
                           PaymtClass.COPY(PaymentClass);
                           PaymtClass.Name := '';
                           PaymtClass.VALIDATE(Code, NewName);
                           PaymtClass.INSERT;
                         END;

      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemTable=Table10861;
        DataItemTableView=SORTING(Payment Class,Line);
        OnPreDataItem=BEGIN
                        SETRANGE("Payment Class", PaymentClass.Code);
                      END;

        OnAfterGetRecord=VAR
                           PaymtStatus@1120000 : Record 10861;
                         BEGIN
                           PaymtStatus.COPY("Payment Status");
                           PaymtStatus.VALIDATE("Payment Class", NewName);
                           PaymtStatus.INSERT;
                         END;

      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemTable=Table10862;
        DataItemTableView=SORTING(Payment Class,Line);
        OnPreDataItem=BEGIN
                        SETRANGE("Payment Class", PaymentClass.Code);
                      END;

        OnAfterGetRecord=VAR
                           PaymtStep@1120000 : Record 10862;
                         BEGIN
                           PaymtStep.COPY("Payment Step");
                           PaymtStep.VALIDATE("Payment Class", NewName);
                           PaymtStep.INSERT;
                         END;

      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemTable=Table10863;
        DataItemTableView=SORTING(Payment Class,Line,Sign);
        OnPreDataItem=BEGIN
                        SETRANGE("Payment Class", PaymentClass.Code);
                      END;

        OnAfterGetRecord=VAR
                           PaymtStepLedger@1120000 : Record 10863;
                         BEGIN
                           PaymtStepLedger.COPY("Payment Step Ledger");
                           PaymtStepLedger.VALIDATE("Payment Class", NewName);
                           PaymtStepLedger.INSERT;
                         END;

      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=8800;
      Height=2530;
    }
    CONTROLS
    {
      { 1120003;TextBox   ;2750 ;770  ;5610 ;440  ;Editable=No;
                                                   Focusable=No;
                                                   ParentControl=1120005;
                                                   InFrame=Yes;
                                                   CaptionML=[ENU=Old name;
                                                              FRA=Ancien nom];
                                                   SourceExpr=OldName }
      { 1120001;Label     ;440  ;770  ;2090 ;440  ;ParentControl=1120003 }
      { 1120004;TextBox   ;2750 ;1650 ;5610 ;440  ;ParentControl=1120005;
                                                   InFrame=Yes;
                                                   CaptionML=[ENU=New name;
                                                              FRA=Nouveau nom];
                                                   SourceExpr=NewName }
      { 1120002;Label     ;440  ;1650 ;2090 ;440  ;ParentControl=1120004 }
      { 1120005;Frame     ;220  ;330  ;8360 ;1980 ;HorzGlue=Both;
                                                   VertGlue=Both;
                                                   CaptionML=[ENU=Which name do you want to attribute to the new parameter?;
                                                              FRA=Quel nom voulez-vous attribuer au nouveau paramŠtre ?] }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             FRA=Options] }

      { 1120005;2;Group     ;
                  CaptionML=[ENU=Which name do you want to attribute to the new parameter?;
                             FRA=Quel nom voulez-vous attribuer au nouveau paramŠtre ?] }

      { 1120003;3;Field     ;
                  CaptionML=[ENU=Old name;
                             FRA=Ancien nom];
                  SourceExpr=OldName;
                  Editable=FALSE }

      { 1120004;3;Field     ;
                  CaptionML=[ENU=New name;
                             FRA=Nouveau nom];
                  SourceExpr=NewName }

    }
  }
  CODE
  {
    VAR
      OldName@1120000 : Text[30];
      NewName@1120001 : Text[30];

    PROCEDURE InitParameter@1120000(Code@1120000 : Text[30]);
    BEGIN
      OldName := Code;
    END;

    PROCEDURE VerifyNewName@1120001();
    VAR
      PaymtClass@1120000 : Record 10860;
      Text000@1120001 : TextConst 'ENU=You must precise a new name.;FRA=Vous devez indiquer un nouveau nom.';
      Text001@1120002 : TextConst 'ENU=The name you have put (;FRA=Le nom que vous avez entr‚ (';
      Text002@1120003 : TextConst 'ENU=) does allready exist. Please put an other name.;FRA=) existe d‚j…. Veuillez entrer un autre nom.';
    BEGIN
      IF NewName = '' THEN
        ERROR(Text000);
      IF PaymtClass.GET(NewName) THEN
        ERROR(Text001 + NewName + Text002);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}