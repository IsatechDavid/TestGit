OBJECT Report 50017 Contact Excel Import
{
  OBJECT-PROPERTIES
  {
    Date=10/11/11;
    Time=19:44:35;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Recruitment Excel Import;
               FRA=Import Excel recrutement];
    ProcessingOnly=Yes;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          ORDER(Ascending)
                          WHERE(Number=CONST(1));
        OnPreDataItem=BEGIN
                        //ImportExpertExcel(FileName, SheetName, ErrorFileName, TypeIntegration, NVInstream);
                        ImportExcel(FileName, SheetName, ErrorFileName, TypeIntegration, NVInstream);
                      END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9900;
      Height=8140;
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100281000;TextBox;4180 ;1540 ;4950 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Sheet Name;
                                                              FRA=Nom de la feuille];
                                                   SourceExpr=SheetName;
                                                   OnAssistEdit=VAR
                                                                  lExcelBuf@1100281001 : TEMPORARY Record 370;
                                                                BEGIN
                                                                  SheetName := lExcelBuf.SelectSheetsName(FileName);
                                                                END;
                                                                 }
      { 1100281001;TextBox;4180 ;990  ;4950 ;440  ;CaptionML=[ENU=Import File Name;
                                                              FRA=Nom du classeur];
                                                   SourceExpr=FileName;
                                                   OnAssistEdit=VAR
                                                                  CommonDialogMgt@1100281000 : Codeunit 412;
                                                                BEGIN
                                                                  IF NOT ISSERVICETIER THEN
                                                                    FileName := CommonDialogMgt.OpenFile(Text001,'',2,'',0)
                                                                  ELSE
                                                                    UPLOADINTOSTREAM(Text007,'',Text009,FileName,NVInstream);
                                                                  SheetName := '';
                                                                END;
                                                                 }
      { 1100281002;Label  ;770  ;990  ;3300 ;440  ;ParentControl=1100281001;
                                                   InPage=-1 }
      { 1100281003;Label  ;770  ;1540 ;3300 ;440  ;ParentControl=1100281000 }
      { 1100281004;Label  ;330  ;330  ;3300 ;550  ;InPage=-1;
                                                   LeaderDots=No;
                                                   CaptionML=[ENU=Import From;
                                                              FRA=Importer de] }
      { 1100281005;OptionButton;880;5170;3740;440 ;Name=TypeCtrl1;
                                                   CaptionML=[ENU=Partial Integration;
                                                              FRA=Int‚gration partielle];
                                                   SourceExpr=TypeIntegration;
                                                   OptionValue=Partial Integration }
      { 1100281006;OptionButton;880;5720;3740;440 ;Name=TypeCtrl2;
                                                   InPage=-1;
                                                   CaptionML=[ENU=Full Integration;
                                                              FRA=Int‚gration complŠte];
                                                   SourceExpr=TypeIntegration;
                                                   OptionValue=Complete Integration }
      { 1100281007;Label  ;440  ;4070 ;8800 ;880  ;MultiLine=Yes;
                                                   LeaderDots=No;
                                                   CaptionML=[ENU=" - If you choose partial integration, the new lines will be added after the lignes exist.";
                                                              FRA=" - Si vous choississez Int‚gration partielle, les nouvelles lignes sont ajout‚es … la suite des lignes existantes."] }
      { 1100281008;Label  ;440  ;2860 ;8800 ;1100 ;InPage=-1;
                                                   MultiLine=Yes;
                                                   LeaderDots=No;
                                                   CaptionML=[ENU=" - If you choose full integration, all the lines exist will be deleted. The new lines will be generated.";
                                                              FRA=" - Si vous choississez Int‚gration complŠte,  toutes les lignes existantes sont supprim‚es. De nouvelles lignes sont g‚n‚r‚es."] }
      { 1100281009;TextBox;3850 ;2200 ;4950 ;440  ;CaptionML=[ENU=Error File Name;
                                                              FRA=Nom fichier d'erreur];
                                                   SourceExpr=ErrorFileName;
                                                   OnAssistEdit=VAR
                                                                  CommonDialogMgt@1100281000 : Codeunit 412;
                                                                BEGIN
                                                                  ErrorFileName := CommonDialogMgt.OpenFile(Text002,'',1,'',0)
                                                                END;
                                                                 }
      { 1100281010;Label  ;440  ;2200 ;3300 ;440  ;ParentControl=1100281009;
                                                   InPage=-1 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   PartialIntegration := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100281000;;Container;
                  ContainerType=ContentArea }

      { 1100281009;1;Group  ;
                  CaptionML=[ENU=Import From;
                             FRA=Importer de];
                  GroupType=Group }

      { 1100281003;2;Field  ;
                  CaptionML=[ENU=Import File Name;
                             FRA=Nom du classeur];
                  SourceExpr=FileName;
                  OnAssistEdit=VAR
                                 CommonDialogMgt@1100281000 : Codeunit 412;
                               BEGIN
                                 IF NOT ISSERVICETIER THEN
                                   FileName := CommonDialogMgt.OpenFile(Text001,'',2,'',0)
                                 ELSE
                                   UPLOADINTOSTREAM(Text007,'',Text008,FileName,NVInstream);
                                 SheetName := '';
                               END;
                                }

      { 1100281002;2;Field  ;
                  CaptionML=[ENU=Sheet Name;
                             FRA=Nom de la feuille];
                  SourceExpr=SheetName;
                  OnAssistEdit=VAR
                                 lExcelBuf@1100281001 : TEMPORARY Record 370;
                               BEGIN
                                 SheetName := lExcelBuf.SelectSheetsName(FileName);
                               END;
                                }

      { 1100281010;1;Field   }

      { 1100281001;1;Field  ;
                  CaptionML=[ENU=Error File Name;
                             FRA=Nom fichier d'erreur];
                  SourceExpr=ErrorFileName;
                  OnAssistEdit=VAR
                                 CommonDialogMgt@1100281000 : Codeunit 412;
                               BEGIN
                                 ErrorFileName := CommonDialogMgt.OpenFile(Text002,'',1,'',0)
                               END;
                                }

      { 1100281007;1;Field   }

      { 1100281005;1;Field  ;
                  CaptionClass=Text19022989;
                  MultiLine=Yes }

      { 1100281004;1;Field  ;
                  CaptionClass=Text19022321;
                  MultiLine=Yes }

      { 1100281008;1;Field   }

      { 1100281006;1;Field  ;
                  Name=TypeIntegration;
                  CaptionML=[ENU=Integration Type;
                             FRA=Type Int‚gration];
                  OptionCaptionML=[ENU=Partial Integration,Full Integration;
                                   FRA=Int‚gration partielle,Int‚gration complŠte];
                  SourceExpr=TypeIntegration;
                  Visible=false }

      { 1100281011;1;Field  ;
                  CaptionML=[ENU=Partial Integration;
                             FRA=Int‚gration partielle];
                  SourceExpr=PartialIntegration;
                  OnValidate=BEGIN
                               CompleteIntegration := NOT PartialIntegration;
                               IF PartialIntegration THEN
                                 TypeIntegration := TypeIntegration::"Partial Integration"
                               ELSE
                                 TypeIntegration:= TypeIntegration::"Complete Integration";
                             END;
                              }

      { 1100281012;1;Field  ;
                  CaptionML=[ENU=Full Integration;
                             FRA=Int‚gration complŠte];
                  SourceExpr=CompleteIntegration;
                  OnValidate=BEGIN
                               PartialIntegration := NOT CompleteIntegration;
                               IF CompleteIntegration THEN
                                 TypeIntegration := TypeIntegration::"Complete Integration"
                               ELSE
                                 TypeIntegration:= TypeIntegration::"Partial Integration";
                             END;
                              }

    }
  }
  CODE
  {
    VAR
      lNetworkFacilitatorVisitMgt@1100281009 : Codeunit 50076;
      FileName@1100281002 : Text[250];
      SheetName@1100281001 : Text[250];
      Text001@1100281003 : TextConst 'ENU=Excel File Import;FRA=Importer fichier excel';
      ErrorFileName@1100281007 : Text[250];
      TypeIntegration@1100281000 : 'Partial Integration,Complete Integration';
      Text002@1100281008 : TextConst 'ENU=Error file;FRA=Fichier d''erreur';
      Text007@1100281005 : TextConst 'ENU=Import;FRA=Importer';
      Text008@1100281015 : TextConst 'ENU=Excel file (*.xl*)|*.xl*;FRA=Fichier Excel (*.xl*)|*.xl*';
      Text009@1100281004 : TextConst 'ENU=All Files (*.*)|*.*;FRA=Tous les fichiers (*.*)|*.*';
      NVInstream@1100281006 : InStream;
      Text004@1100281012 : TextConst 'ENU=Import From;FRA=Importer de';
      Text19022321@1100281011 : TextConst 'ENU=" - If you choose full integration, all the lines exist will be deleted. The new lines will be generated.";FRA=" - Si vous choississez Int‚gration complŠte,  toutes les lignes existantes sont supprim‚es. De nouvelles lignes sont g‚n‚r‚es."';
      Text19022989@1100281010 : TextConst 'ENU=" - If you choose partial integration, the new lines will be added after the lignes exist.";FRA=" - Si vous choississez Int‚gration partielle, les nouvelles lignes sont ajout‚es … la suite des lignes existantes."';
      PartialIntegration@1100281013 : Boolean;
      CompleteIntegration@1100281014 : Boolean;
      Text011@1100281025 : TextConst 'ENU=You must enter a file name.;FRA=Vous devez saisir un nom de fichier.';
      Text012@1100281024 : TextConst 'ENU=You must enter an Excel worksheet name.;FRA=Vous devez saisir un nom de feuille Excel.';
      Text013@1100281023 : TextConst 'ENU=You must enter a error file name.;FRA=Vous devez saisir un nom de fichier d''erreur.';
      Text014@1100281022 : TextConst 'ENU=Import finished.;FRA=Importation termin‚e.';
      ErrorText001@1100281021 : TextConst 'ENU=Row %1 : Provider exist.;FRA=Ligne %1 : Prestataire existant.';
      ErrorText002@1100281020 : TextConst 'ENU=Row %1 : Post code %2 city %3 do not exists in Post Code table.;FRA=Ligne %1 : Code postal %2 ville %3 n''existe pas dans la table Code postal.';
      ErrorText003@1100281019 : TextConst 'ENU=Row %1 column %2 : Phone No. format %3 is not correct.;FRA=Ligne %1 colonne %2 : Le format du nø de t‚l‚phone %3 n''est pas correct.';
      ErrorText004@1100281018 : TextConst 'ENU=Row %1 column %2 : Specialization %3 nonexistent.;FRA=Ligne %1 colonne %2 : Sp‚cialit‚ %3 inexistante.';
      ErrorText005@1100281017 : TextConst 'ENU=Errors Number : %1.;FRA=Nbre d''erreurs : %1.';
      ErrorText006@1100281016 : TextConst 'ENU=Row %1 column %2 : Several specializations found for %3.;FRA=Ligne %1 colonne %2 : Plusieurs sp‚cialit‚s trouv‚es pour %3.';

    PROCEDURE ImportExcel@1100281000(pFileName@1100281001 : Text[250];pSheetName@1100281000 : Text[250];pErrorFileName@1100281016 : Text[250];pTypeIntegration@1100281013 : 'Partial Integration,Complete Integration';VAR pInStream@1100281014 : InStream);
    VAR
      lPhoneStandardization@1100281007 : Codeunit 50099;
      lRBAutoMgt@1100281015 : Codeunit 419;
      lFolderMgt@1100281017 : Codeunit 50004;
      lExcelBufTemp@1100281002 : TEMPORARY Record 370;
      lContact@1100281003 : Record 5050;
      lSpecialization@1100281012 : Record 50005;
      lArea@1100281021 : Record 284;
      lSpecSearchText@1100281018 : Text[100];
      lTempFileName@1100281005 : Text[250];
      lErrorFile@1100281008 : File;
      lErrorFileCreated@1100281009 : Boolean;
      lErrorText@1100281006 : Text[250];
      lErrorNumber@1100281010 : Integer;
      lErrorLine@1100281011 : Boolean;
      lNbRow@1100281020 : Integer;
      i@1100281004 : Integer;
      lCount@1100281019 : Integer;
      lRegionCorporate@1100281022 : Record 50058;
      lRegionCorporateCode@1100281023 : Code[20];
      lCorporateCode@1100281024 : Code[20];
      lContactBusRel@1100281025 : Record 5054;
      lCustomer@1100281026 : Record 18;
      lContactCorporateNo@1100281027 : Code[20];
      lContactJobResponsibility@1100281029 : Record 5067;
      lContactCorporate@1100281028 : Record 5050;
    BEGIN
      // Pour les campagnes de recrutement
      //Importation donn‚es excel dans la table visite reseau

      IF pFileName = '' THEN
        ERROR(Text011);
      IF pSheetName = '' THEN
        ERROR(Text012);
      IF pErrorFileName = '' THEN
        ERROR(Text013);

      lTempFileName := lRBAutoMgt.ServerTempFileName('', 'txt');

      IF ISSERVICETIER THEN BEGIN
        DOWNLOADFROMSTREAM(pInStream,'','<TEMP>','',pFileName);
      END;
      lExcelBufTemp.OpenBook(pFileName, pSheetName);
      lExcelBufTemp.ReadSheet;
      IF lExcelBufTemp.ISEMPTY THEN
        EXIT;

      lExcelBufTemp.FINDLAST;
      lNbRow := lExcelBufTemp."Row No.";

      FOR i := 2 TO lNbRow DO BEGIN
        lErrorLine := FALSE;
        lContact.INIT;
        lContact."No." := '';
        lContact.Type := lContact.Type::Person;

        lRegionCorporateCode := GetExcelValue(lExcelBufTemp, i, 2);
        lCorporateCode := GetExcelValue(lExcelBufTemp, i, 1);
        lRegionCorporate.GET(lCorporateCode,lRegionCorporateCode);
        lCustomer.GET(lRegionCorporate."Sell-to Customer No.");
        lCustomer.GetContactNo(lContactCorporateNo);
        lContactCorporate.GET(lContactCorporateNo);
        lContact.VALIDATE("Company No.",lContactCorporateNo);
        lContact."Corporate No." := lCorporateCode;
        lContact."Corporate Region Code" := lRegionCorporateCode;
        lContact.Surname := GetExcelValue(lExcelBufTemp, i, 7);
        lContact.VALIDATE(Surname);
        lContact."First Name" := GetExcelValue(lExcelBufTemp, i, 8);
        lContact.VALIDATE("First Name");
        lContact."Phone No." := GetExcelValue(lExcelBufTemp, i, 12);
        lContact."Fax No." := GetExcelValue(lExcelBufTemp, i, 4);
        lContact.VALIDATE("Phone No.");
        lContact.VALIDATE("Fax No.");
        lContact."Organizational Level Code" := GetExcelValue(lExcelBufTemp, i, 5);
        lContact."Correspondence Type" := lContact."Correspondence Type"::" ";
        lContact."Notify Customer" := lContact."Notify Customer"::"By Fax";
        IF GetExcelValue(lExcelBufTemp, i, 6) <> '' THEN
          lContact."Salutation Code" := GetExcelValue(lExcelBufTemp, i, 6)
        ELSE
          lContact."Salutation Code" := 'UNI';
        IF GetExcelValue(lExcelBufTemp, i, 9) <> '' THEN
        BEGIN
          lContact.Address := GetExcelValue(lExcelBufTemp, i, 9);
          lContact.City := GetExcelValue(lExcelBufTemp, i, 11);
          lContact."Post Code" := GetExcelValue(lExcelBufTemp, i, 10);
        END ELSE BEGIN
          lContact.Address := lRegionCorporate.Address;
          lContact."Address 2" := lRegionCorporate."Address 2";
          lContact.City := lRegionCorporate.City;
          lContact."Post Code" := lRegionCorporate."Post Code";
          lContact."Geo. Reference Code" := lContactCorporate."Geo. Reference Code";
        END;
        IF (GetExcelValue(lExcelBufTemp, i, 14) <> '') THEN
          lContact."E-Mail" := GetExcelValue(lExcelBufTemp, i, 14)
        ELSE
          lContact."E-Mail" := lContactCorporate."E-Mail";
        IF (GetExcelValue(lExcelBufTemp, i, 12) <> '') THEN
          lContact."Phone No." := GetExcelValue(lExcelBufTemp, i, 12);
        IF (GetExcelValue(lExcelBufTemp, i, 13) <> '') THEN
          lContact."Mobile Phone No." := GetExcelValue(lExcelBufTemp, i, 13);
        lContact."Preferred Contact DGS" := TRUE;
        IF (GetExcelValue(lExcelBufTemp, i, 16) <> '') THEN
          lContact."Declaration E-Mail" := GetExcelValue(lExcelBufTemp, i, 16)
        ELSE
          lContact."Declaration E-Mail" := lContactCorporate."E-Mail";
        IF (GetExcelValue(lExcelBufTemp, i, 16) <> '') THEN
          lContact."Declaration Contact" := TRUE;
        lContact."Service Contact" := lContact."Service Contact"::"Corporate Customer";
        lContact.INSERT(TRUE);
        lContact.Surname := GetExcelValue(lExcelBufTemp, i, 7);
        lContact.VALIDATE(Surname);
        lContact."First Name" := GetExcelValue(lExcelBufTemp, i, 8);
        lContact.VALIDATE("First Name");
        lContact."Job Title" := GetExcelValue(lExcelBufTemp, i, 5);
        lContact."Correspondence Type" := lContact."Correspondence Type"::" ";
        lContact.MODIFY(TRUE);

        lContactJobResponsibility.INIT;
        lContactJobResponsibility."Contact No." := lContact."No.";
        lContactJobResponsibility."Job Responsibility Code" := GetExcelValue(lExcelBufTemp, i, 5);
        lContactJobResponsibility.INSERT(TRUE);
      END;

      IF lErrorFileCreated THEN BEGIN
        lErrorText := STRSUBSTNO(ErrorText005, lErrorNumber);
        AddToErrorFile(lErrorFile,lErrorText,lErrorNumber,lErrorFileCreated,lTempFileName);
        lErrorFile.CLOSE;
        MESSAGE(Text014 + ' ' + lErrorText);
        lFolderMgt.CopyFile(lTempFileName, pErrorFileName);
      END ELSE
        MESSAGE(Text014);
    END;

    PROCEDURE GetExcelValue@1100281004(VAR pExcelBuffer@1100281002 : Record 370;pRowNo@1100281000 : Integer;pColumnNo@1100281001 : Integer) : Text[250];
    BEGIN
      IF pExcelBuffer.GET(pRowNo, pColumnNo) THEN
        EXIT(pExcelBuffer."Cell Value as Text");
      EXIT('');
    END;

    PROCEDURE CreateErrorFile@1100281007(VAR pErrorFile@1100281001 : File;pErrorFileName@1100281000 : Text[250]);
    BEGIN
      pErrorFile.TEXTMODE(TRUE);
      pErrorFile.WRITEMODE(TRUE);
      pErrorFile.CREATE(pErrorFileName);
    END;

    LOCAL PROCEDURE AddToErrorFile@1000000000(VAR pErrorFile@1100281000 : File;pErrorText@1000000002 : Text[250];VAR pErrorNumber@1100281001 : Integer;VAR pErrorFileCreated@1100281002 : Boolean;pErrorFileName@1100281003 : Text[250]);
    VAR
      lToolsMgt@1100281004 : Codeunit 8016602;
    BEGIN
      IF NOT pErrorFileCreated THEN BEGIN
        CreateErrorFile(pErrorFile, pErrorFileName);
        pErrorFileCreated := TRUE;
      END;
      pErrorFile.WRITE(lToolsMgt.FormatExport(pErrorText));
      pErrorNumber += 1;
    END;

    PROCEDURE ImportExpertExcel@1100281001(pFileName@1100281001 : Text[250];pSheetName@1100281000 : Text[250];pErrorFileName@1100281016 : Text[250];pTypeIntegration@1100281013 : 'Partial Integration,Complete Integration';VAR pInStream@1100281014 : InStream);
    VAR
      lPhoneStandardization@1100281007 : Codeunit 50099;
      lRBAutoMgt@1100281015 : Codeunit 419;
      lFolderMgt@1100281017 : Codeunit 50004;
      lExcelBufTemp@1100281002 : TEMPORARY Record 370;
      lContact@1100281003 : Record 5050;
      lSpecialization@1100281012 : Record 50005;
      lArea@1100281021 : Record 284;
      lSpecSearchText@1100281018 : Text[100];
      lTempFileName@1100281005 : Text[250];
      lErrorFile@1100281008 : File;
      lErrorFileCreated@1100281009 : Boolean;
      lErrorText@1100281006 : Text[250];
      lErrorNumber@1100281010 : Integer;
      lErrorLine@1100281011 : Boolean;
      lNbRow@1100281020 : Integer;
      i@1100281004 : Integer;
      lCount@1100281019 : Integer;
      lRegionCorporate@1100281022 : Record 50058;
      lRegionCorporateCode@1100281023 : Code[20];
      lCorporateCode@1100281024 : Code[20];
      lContactBusRel@1100281025 : Record 5054;
      lCustomer@1100281026 : Record 18;
      lContactCorporateNo@1100281027 : Code[20];
      lContactJobResponsibility@1100281029 : Record 5067;
      lContactCorporate@1100281028 : Record 5050;
      lFusionReference@1100281030 : Record 50164;
    BEGIN
      // Pour les campagnes de recrutement
      //Importation donn‚es excel dans la table visite reseau

      IF pFileName = '' THEN
        ERROR(Text011);
      IF pSheetName = '' THEN
        ERROR(Text012);
      IF pErrorFileName = '' THEN
        ERROR(Text013);

      lTempFileName := lRBAutoMgt.ServerTempFileName('', 'txt');

      IF ISSERVICETIER THEN BEGIN
        DOWNLOADFROMSTREAM(pInStream,'','<TEMP>','',pFileName);
      END;
      lExcelBufTemp.OpenBook(pFileName, pSheetName);
      lExcelBufTemp.ReadSheet;
      IF lExcelBufTemp.ISEMPTY THEN
        EXIT;

      lExcelBufTemp.FINDLAST;
      lNbRow := lExcelBufTemp."Row No.";

      FOR i := 2 TO lNbRow DO BEGIN
        lErrorLine := FALSE;
        lContact.INIT;
        lContact."No." := '';
        lContact.Type := lContact.Type::Company;

        lContact."Search Name" := COPYSTR(GetExcelValue(lExcelBufTemp, i, 1),1,50);
        lContact."No." := 'EXP' + GetExcelValue(lExcelBufTemp, i, 2);
        lContact."Service Contact" := lContact."Service Contact"::Expert;
      //  lContact."Post Code" := GetExcelValue(lExcelBufTemp, i, 5);
      //  lContact.City := GetExcelValue(lExcelBufTemp, i, 6);
      //   := GetExcelValue(lExcelBufTemp, i, );
        lContact.Name := COPYSTR(GetExcelValue(lExcelBufTemp, i, 10),1,50);
        lContact."Trade Register" := GetExcelValue(lExcelBufTemp, i, 11);
        lContact."VAT Registration No." := GetExcelValue(lExcelBufTemp, i, 13);
        lContact.Address := GetExcelValue(lExcelBufTemp, i, 14);
        lContact."Address 2" := GetExcelValue(lExcelBufTemp, i, 15);
        lContact."Address 3" := GetExcelValue(lExcelBufTemp, i, 16);
        lContact."Post Code" := GetExcelValue(lExcelBufTemp, i, 17);
        lContact.City := GetExcelValue(lExcelBufTemp, i, 18);
        lContact."Phone No." := GetExcelValue(lExcelBufTemp, i, 19);
        lContact."E-Mail" := GetExcelValue(lExcelBufTemp, i, 20);
        lContact."Notify Customer" := lContact."Notify Customer"::"By Mobile Phone";
        lContact."Salutation Code" := 'STE';
        IF (COPYSTR(GetExcelValue(lExcelBufTemp, i, 9),1,3) = 'CAB') THEN
          lContact."Salutation Code" := 'CAB';


      //   := GetExcelValue(lExcelBufTemp, i, );
      //   := GetExcelValue(lExcelBufTemp, i, );
        lContact.VALIDATE("Phone No.");
        lContact."Preferred Contact DGS" := TRUE;
        lContact."Declaration E-Mail" := lContact."E-Mail";


        //lRegionCorporateCode := GetExcelValue(lExcelBufTemp, i, 4);
        //lCorporateCode := GetExcelValue(lExcelBufTemp, i, 1);
        //lRegionCorporate.GET(lCorporateCode,lRegionCorporateCode);
        lContact.INSERT(TRUE);

        lFusionReference.INIT;
        lFusionReference."Source Table ID" := 5050;
        lFusionReference."Source No." := lContact."No.";
        lFusionReference."DARVA Subscriber No." := GetExcelValue(lExcelBufTemp, i, 8);
        IF lFusionReference.INSERT THEN;
      //  lContactJobResponsibility.INIT;
      //  lContactJobResponsibility."Contact No." := lContact."No.";
      //  lContactJobResponsibility."Job Responsibility Code" := GetExcelValue(lExcelBufTemp, i, 8);
      //  lContactJobResponsibility.INSERT(TRUE);
      END;

      IF lErrorFileCreated THEN BEGIN
        lErrorText := STRSUBSTNO(ErrorText005, lErrorNumber);
        AddToErrorFile(lErrorFile,lErrorText,lErrorNumber,lErrorFileCreated,lTempFileName);
        lErrorFile.CLOSE;
        MESSAGE(Text014 + ' ' + lErrorText);
        lFolderMgt.CopyFile(lTempFileName, pErrorFileName);
      END ELSE
        MESSAGE(Text014);
    END;

    BEGIN
    {
      /** @r IMH01 @d 01/03/11 @a ISAT.ZW @v IMH6.01.115 @s Visite Animation Reseau @c Cr‚ation */
    }
    END.
  }
  RDLDATA
  {
  }
}