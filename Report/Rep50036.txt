OBJECT Report 50036 Due Annual Declaration DAS2
{
  OBJECT-PROPERTIES
  {
    Date=18/09/12;
    Time=14:52:54;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Due Annual Declaration (DAS2);
               FRA=D‚claration annuelle des honoraires (DAS2)];
    TopMargin=1000;
    BottomMargin=0;
    LeftMargin=1500;
    OnPreReport=BEGIN
                  IF DateFilter = '' THEN
                    ERROR(Text000);
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table23;
        DataItemTableView=SORTING(No.);
        NewPagePerRecord=Yes;
        PrintOnlyIfDetail=Yes;
        OnAfterGetRecord=BEGIN
                           CVLedgerEntryBuffer.RESET;
                           CVLedgerEntryBuffer.DELETEALL;
                           TotalAccount := 0;

                           MakeVendorBuffer("No.",DateFilter,CVLedgerEntryBuffer);

                           CVLedgerEntryBuffer.RESET;
                           IF CVLedgerEntryBuffer.ISEMPTY THEN BEGIN
                             CurrReport.SKIP;
                           END;

                           // Controle du seuil de d‚claration
                           CVLedgerEntryBuffer.CALCSUMS(Amount);
                           IF CVLedgerEntryBuffer.Amount < MinAmt THEN BEGIN
                             CurrReport.SKIP;
                           END;

                           SIRET := COPYSTR("VAT Registration No.",5,MAXSTRLEN("VAT Registration No."));
                         END;

        ReqFilterFields=No.;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        PrintOnlyIfDetail=No;
        OnPreDataItem=BEGIN
                        NbRec := CVLedgerEntryBuffer.COUNT;
                        IF NbRec = 0 THEN BEGIN
                          CurrReport.BREAK;
                        END;

                        CVLedgerEntryBuffer.RESET;
                        SETRANGE(Number,1,NbRec);

                        CurrentPage := 1;
                      END;

        OnAfterGetRecord=BEGIN
                           IF Number =1 THEN BEGIN
                             CVLedgerEntryBuffer.FINDFIRST;
                           END ELSE BEGIN
                             CVLedgerEntryBuffer.NEXT;
                           END;

                           TotalAccount += CVLedgerEntryBuffer.Amount;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18900;
            SectionHeight=6768;
          }
          CONTROLS
          {
            { 1000000000;Shape  ;2925 ;1269 ;12300;846   }
            { 1000000001;Shape  ;2925 ;2115 ;12300;3807  }
            { 1000000002;TextBox;0    ;0    ;4800 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=COMPANYNAME }
            { 1000000004;TextBox;15300;0    ;3600 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         SourceExpr=FORMAT(TODAY,0,4) }
            { 1000000006;TextBox;15300;846  ;3600 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         SourceExpr=USERID }
            { 1000000008;TextBox;18450;423  ;450  ;423  ;FontSize=8;
                                                         CaptionML=[ENU=Page;
                                                                    FRA=Page];
                                                         SourceExpr=CurrReport.PAGENO }
            { 1000000010;Label  ;17400;423  ;1050 ;423  ;ParentControl=1000000008;
                                                         FontSize=8 }
            { 1000000012;TextBox;5250 ;5499 ;4500 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=Vendor."Occupation Code" }
            { 1000000013;TextBox;5250 ;4653 ;3600 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=Vendor."Country/Region Code" }
            { 1000000014;TextBox;5250 ;4230 ;3600 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=Vendor."Post Code" }
            { 1000000015;TextBox;8850 ;4230 ;5850 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=Vendor.City }
            { 1000000022;TextBox;5250 ;3807 ;9450 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=Vendor."Address 2" }
            { 1000000026;TextBox;5250 ;3384 ;9450 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=Vendor.Address }
            { 1000000027;TextBox;8100 ;2538 ;6600 ;846  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=Vendor.Name }
            { 1000000028;TextBox;5250 ;1269 ;4500 ;846  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=DateFilter }
            { 1000000029;TextBox;5250 ;2538 ;2700 ;846  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=Vendor."No." }
            { 1000000030;Label  ;3000 ;2538 ;2250 ;846  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Account No.:;
                                                                    FRA="Nø de compte: "] }
            { 1000000031;Label  ;3000 ;1269 ;2250 ;846  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Date :;
                                                                    FRA=Date :] }
            { 1000000032;Label  ;6000 ;0    ;7350 ;846  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Due annual Declaration (DAS 2);
                                                                    FRA=D‚claration Annuelle des Honoraires (DAS 2)] }
            { 1000000033;Shape  ;6000 ;0    ;7350 ;846   }
            { 1000000003;TextBox;5250 ;5076 ;4500 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=Vendor."Registration No." }
            { 1000000034;Label  ;3150 ;5076 ;2100 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=No. :;
                                                                    FRA=Nø :] }
            { 1000000035;Label  ;3150 ;5499 ;2100 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Occupation Code:;
                                                                    FRA=Code Prof. :] }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=18900;
            SectionHeight=876;
          }
          CONTROLS
          {
            { 1000000009;Label  ;3000 ;0    ;6600 ;846  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=DAS 2 Code and Description;
                                                                    FRA=Code et libell‚ nature DAS2] }
            { 1000000011;Label  ;11850;0    ;3300 ;846  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Amount;
                                                                    FRA=Montant] }
            { 1000000016;Shape  ;2850 ;0    ;150  ;846  ;BorderWidth=1pt;
                                                         ShapeStyle=VertLine }
            { 1000000017;Shape  ;11700;0    ;150  ;846  ;BorderWidth=1pt;
                                                         ShapeStyle=VertLine }
            { 1000000018;Shape  ;15150;0    ;150  ;846  ;BorderWidth=1pt;
                                                         ShapeStyle=VertLine }
            { 1000000019;Shape  ;2915 ;846  ;12300;30   ;BorderWidth=1pt;
                                                         ShapeStyle=HorzLine }
            { 1000000020;Shape  ;2915 ;0    ;12300;30   ;BorderWidth=1pt;
                                                         ShapeStyle=HorzLine }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18900;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1000000005;TextBox;3450 ;0    ;8250 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=CVLedgerEntryBuffer.Description }
            { 1000000007;TextBox;11850;0    ;3300 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         SourceExpr=CVLedgerEntryBuffer.Amount }
            { 1000000023;Shape  ;2850 ;0    ;150  ;423  ;BorderWidth=1pt;
                                                         ShapeStyle=VertLine }
            { 1000000024;Shape  ;11700;0    ;150  ;423  ;BorderWidth=1pt;
                                                         ShapeStyle=VertLine }
            { 1000000025;Shape  ;15150;0    ;150  ;423  ;BorderWidth=1pt;
                                                         ShapeStyle=VertLine }
          }
           }
        { PROPERTIES
          {
            SectionType=TransFooter;
            SectionWidth=18900;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1000000021;Shape  ;2915 ;0    ;12300;30   ;BorderWidth=1pt;
                                                         ShapeStyle=HorzLine }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=18900;
            SectionHeight=876;
          }
          CONTROLS
          {
            { 1100281008;TextBox;11850;30   ;3300 ;846  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=TotalAccount }
            { 1100281009;Label  ;3000 ;0    ;8400 ;846  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Total;
                                                                    FRA=Total Compte] }
            { 1100281011;Shape  ;2850 ;0    ;150  ;846  ;BorderWidth=1pt;
                                                         ShapeStyle=VertLine }
            { 1100281012;Shape  ;11700;0    ;150  ;846  ;BorderWidth=1pt;
                                                         ShapeStyle=VertLine }
            { 1100281013;Shape  ;15150;0    ;150  ;846  ;BorderWidth=1pt;
                                                         ShapeStyle=VertLine }
            { 1100281014;Shape  ;2915 ;846  ;12300;30   ;BorderWidth=1pt;
                                                         ShapeStyle=HorzLine }
            { 1100281015;Shape  ;2915 ;0    ;12300;30   ;BorderWidth=1pt;
                                                         ShapeStyle=HorzLine }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=8690;
      Height=2090;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   MinAmt := 600;
                 END;

    }
    CONTROLS
    {
      { 1000000000;TextBox;3630 ;770  ;4840 ;440  ;CaptionML=[ENU=Date Filter;
                                                              FRA=Filtre date];
                                                   SourceExpr=DateFilter;
                                                   OnValidate=VAR
                                                                ApplicationManagement@1001 : Codeunit 1;
                                                                Vendor2@1000000001 : Record 23;
                                                              BEGIN
                                                                IF ApplicationManagement.MakeDateFilter(DateFilter) = 0 THEN;
                                                                Vendor2.SETFILTER("Date Filter",DateFilter);
                                                                DateFilter := Vendor2.GETFILTER("Date Filter");
                                                              END;

                                                   OnAfterValidate=BEGIN
                                                                     RequestOptionsForm.UPDATE;
                                                                   END;
                                                                    }
      { 1000000001;Label  ;220  ;770  ;3300 ;440  ;ParentControl=1000000000 }
      { 1000000002;TextBox;3630 ;1430 ;2750 ;440  ;CaptionML=[ENU=Minimum Amount;
                                                              FRA=Montant minimum];
                                                   SourceExpr=MinAmt }
      { 1000000003;Label  ;220  ;1430 ;3300 ;440  ;ParentControl=1000000002 }
      { 1100281000;TextBox;3630 ;220  ;2750 ;440  ;Visible=Yes;
                                                   CaptionML=[ENU=Minimum Amount;
                                                              FRA=Date de r‚f‚rence];
                                                   OptionCaptionML=FRA=Date comptabilisation,Date d'‚ch‚ance;
                                                   SourceExpr=RefDateOption }
      { 1100281001;Label  ;220  ;220  ;3300 ;440  ;ParentControl=1100281000 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      GLAccount@1000000001 : Record 15;
      GLEntry@1000000000 : Record 17;
      CVLedgerEntryBuffer@1000000012 : TEMPORARY Record 382;
      Contact@1000000007 : Record 5050;
      MinAmt@1000000003 : Decimal;
      Text000@1000000004 : TextConst 'ENU=Please, fill filter date;FRA=Veuillez saisir le filtre date';
      TotalAccount@1000000009 : Decimal;
      NbRec@1000000011 : Integer;
      NbIteration@1000000013 : Integer;
      TotalPage@1000000006 : Integer;
      CurrentPage@1000000019 : Integer;
      Text001@1100281000 : TextConst 'ENU=" ,F - Fees and vacations,C - Commissions,B - Brokings,R - Rebates,AF - Attendance fees,R - Royalties,RI - Rights of inventor,OR - Other remunerations";FRA=" ,H - Honoraires et vacations,C - Commissions,CO - Courtages,R - Ristournes,JP - Jetons de pr‚sence,DA - Droits d''auteur,DI - Droits d''inventeur,AR - Autres r‚mun‚rations"';
      DateFilter@1000000002 : Text[30];
      SIRET@1000000005 : Text[30];
      RefDateOption@1100281001 : 'PostingDate,DueDate';

    PROCEDURE MakeVendorBuffer@1000000000(pVendorNo@1000000000 : Code[20];pFilterDate@1000000001 : Text[80];VAR pCVLedgerEntryBuffer@1000000002 : Record 382);
    VAR
      lVendLedgEntry@1000000005 : Record 25;
      lVendLedgEntry2@1000000003 : Record 25;
      lDtldVendLedgEntry@1000000004 : Record 380;
      lDtldVendLedgEntry2@1000000006 : Record 380;
    BEGIN
      // R‚cup‚ration des ‚critures comptables pay‚s dans le pFilterDate
      WITH lVendLedgEntry DO BEGIN
        SETCURRENTKEY("Document Type","Vendor No.","Posting Date");
        SETRANGE("Document Type", "Document Type"::Payment);
        SETRANGE("Vendor No.", pVendorNo);
        IF (RefDateOption = RefDateOption::DueDate) THEN
          SETFILTER("Due Date", pFilterDate)
        ELSE
          SETFILTER("Posting Date", pFilterDate);
        IF NOT FINDSET(FALSE,FALSE) THEN BEGIN
          EXIT;
        END;

        // Parcours des rŠglements
        REPEAT
          lDtldVendLedgEntry.SETCURRENTKEY("Vendor Ledger Entry No.","Entry Type","Posting Date");
          lDtldVendLedgEntry.SETRANGE("Vendor Ledger Entry No.","Entry No.");
          lDtldVendLedgEntry.SETRANGE("Entry Type",lDtldVendLedgEntry."Entry Type"::Application);
          IF lDtldVendLedgEntry.FINDFIRST THEN BEGIN
            // Controle sur le premier lettrage
            lDtldVendLedgEntry2.SETCURRENTKEY("Applied Vend. Ledger Entry No.","Entry Type");
            lDtldVendLedgEntry2.SETRANGE("Applied Vend. Ledger Entry No.",lDtldVendLedgEntry."Applied Vend. Ledger Entry No.");
            lDtldVendLedgEntry2.SETRANGE("Entry Type",lDtldVendLedgEntry2."Entry Type"::Application);
            lDtldVendLedgEntry2.SETFILTER("Entry No.",'<>%1',lDtldVendLedgEntry2."Entry No.");
            // parcours lettrage facture
            IF lDtldVendLedgEntry2.FINDSET(FALSE) THEN BEGIN
              REPEAT
                lVendLedgEntry2.GET(lDtldVendLedgEntry2."Vendor Ledger Entry No.");
                GetGLEntries(
                  lVendLedgEntry2."Document No.",
                  lVendLedgEntry2."Transaction No.",
                  pCVLedgerEntryBuffer);
              UNTIL lDtldVendLedgEntry2.NEXT=0;
            END;
          END;
        UNTIL NEXT = 0;
      END; // WITH lVendLedgEntry
    END;

    PROCEDURE GetGLEntries@1000000001(pDocNo@1000000002 : Code[20];pTransaction@1000000003 : Integer;VAR pCVLedgerEntryBuffer@1000000001 : Record 382);
    BEGIN
      WITH GLEntry DO BEGIN
        SETCURRENTKEY("Transaction No.");
        SETRANGE("Transaction No.",pTransaction);
        SETRANGE("Document No.",pDocNo); // une transaction peut contenir plusieurs doc
        IF FINDSET(FALSE,FALSE) THEN BEGIN
          REPEAT
            IF GLAccount."No." <> "G/L Account No." THEN BEGIN
              GLAccount.GET("G/L Account No.");
            END;

            IF GLAccount."Include Entries For DAS 2" THEN BEGIN
              pCVLedgerEntryBuffer.SETRANGE("Entry No.",GLAccount."Account Nature");
              IF pCVLedgerEntryBuffer.FINDFIRST THEN BEGIN
                pCVLedgerEntryBuffer.Amount += Amount + "VAT Amount";
                pCVLedgerEntryBuffer.MODIFY;
              END ELSE BEGIN
                pCVLedgerEntryBuffer."Entry No." := GLAccount."Account Nature";
                pCVLedgerEntryBuffer.Description :=
                  SELECTSTR(GLAccount."Account Nature" + 1,Text001);
                pCVLedgerEntryBuffer.Amount := Amount + "VAT Amount";
                pCVLedgerEntryBuffer.INSERT;
              END;
            END;
          UNTIL NEXT = 0;
        END;
      END;
    END;

    BEGIN
    {
      /** @r IMH01 @d 04/05/12 @a ISAT.SB @v IMH6.01.145 @s Cr‚ation */
    }
    END.
  }
  RDLDATA
  {
  }
}