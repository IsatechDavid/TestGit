OBJECT Report 50058 Import Inventory Fixed Asset
{
  OBJECT-PROPERTIES
  {
    Date=11/05/11;
    Time=14:07:08;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import Inventory Fixed Asset;
               FRA=Importer inventaire immo.];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  BusUnit@1000 : Record 220;
                BEGIN
                  //<<IMH02.isat.PC
                  IF InventoryDate = 0D THEN BEGIN
                    ERROR(Text008);
                  END;
                  //>>IMH02.isat.PC

                  // V‚rification si inventaire d‚j… fait … cette date
                  IF GUIALLOWED THEN BEGIN
                    IF CheckInventory(InventoryDate) THEN BEGIN
                      IF NOT CONFIRM(Text010) THEN BEGIN
                        CurrReport.QUIT;
                      END;
                    END;
                  END;

                  //Cr‚ation du fichier d'erreur
                  IF EXISTS(ErrorFileName) THEN BEGIN
                    ERASE(ErrorFileName);
                  END;
                  ErrorFile.TEXTMODE := TRUE;
                  ErrorFile.WRITEMODE := TRUE;
                  ErrorFile.CREATE(ErrorFileName);
                  ErrorFile.WRITE(STRSUBSTNO(Text001,TODAY));
                END;

    OnPostReport=BEGIN
                   ErrorFile.CLOSE;
                 END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=CONST(1));
        OnAfterGetRecord=BEGIN
                           //R‚cup‚ration des ‚critures d'excel
                           ReadExcelSheet;
                           AnalyzeData;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9130;
      Height=3190;
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1   ;TextBox      ;3630 ;1100 ;5500 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Workbook File Name;
                                                              FRA=Nom du classeur];
                                                   SourceExpr=FileName;
                                                   OnAssistEdit=BEGIN
                                                                  FileName := CommonDialogMgt.OpenFile(Text002,'',2,'',0);
                                                                END;
                                                                 }
      { 2   ;Label        ;220  ;1100 ;3300 ;440  ;ParentControl=1 }
      { 3   ;TextBox      ;3630 ;1650 ;5500 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Worksheet Name;
                                                              FRA=Nom de la feuille];
                                                   SourceExpr=SheetName;
                                                   OnAssistEdit=VAR
                                                                  ExcelBuf@1001 : Record 370;
                                                                BEGIN
                                                                  IF ISSERVICETIER THEN BEGIN
                                                                    SheetName := ExcelBuf.SelectSheetsName(FileName);
                                                                  END ELSE BEGIN
                                                                    SheetName := ExcelBuf.SelectSheetsName(FileName);
                                                                  END;
                                                                END;
                                                                 }
      { 4   ;Label        ;220  ;1650 ;3300 ;440  ;ParentControl=3 }
      { 12  ;Label        ;0    ;550  ;3300 ;440  ;InPage=-1;
                                                   LeaderDots=No;
                                                   CaptionML=[ENU=Import from;
                                                              FRA=Importer de] }
      { 1100286000;Label  ;220  ;2200 ;3300 ;440  ;ParentControl=1100286001 }
      { 1100286001;TextBox;3630 ;2200 ;5500 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Error File;
                                                              FRA=Fichier erreur];
                                                   SourceExpr=ErrorFileName;
                                                   OnAssistEdit=BEGIN
                                                                  ErrorFileName := CommonDialogMgt.OpenFile(Text006,ErrorFileName,4,Text007,1);
                                                                END;
                                                                 }
      { 1100281000;TextBox;3410 ;0    ;1700 ;440  ;CaptionML=[ENU=Inventory Date;
                                                              FRA=Date d'inventaire];
                                                   SourceExpr=InventoryDate }
      { 1100281001;Label  ;0    ;0    ;3300 ;440  ;ParentControl=1100281000;
                                                   InPage=-1 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             FRA=Options] }

      { 1100281001;2;Field  ;
                  CaptionML=[ENU=Inventory Date;
                             FRA=Date d'inventaire];
                  SourceExpr=InventoryDate }

      { 12  ;2   ;Group     ;
                  CaptionML=[ENU=Import from;
                             FRA=Importer de] }

      { 1   ;3   ;Field     ;
                  CaptionML=[ENU=Workbook File Name;
                             FRA=Nom du classeur];
                  SourceExpr=FileName;
                  OnValidate=BEGIN
                               FileName := FileServiceTiers(Text002,'',2,'',0);
                             END;

                  OnAssistEdit=BEGIN
                                 FileName := FileServiceTiers(Text002,'',2,'',0);
                               END;
                                }

      { 3   ;3   ;Field     ;
                  CaptionML=[ENU=Worksheet Name;
                             FRA=Nom de la feuille];
                  SourceExpr=SheetName;
                  OnAssistEdit=VAR
                                 ExcelBuf@1001 : Record 370;
                               BEGIN
                                 SheetName := ExcelBuf.SelectSheetsName(FileName);
                               END;
                                }

      { 11  ;2   ;Group     ;
                  CaptionML=[ENU=Import to;
                             FRA=Importer vers] }

      { 1100281000;3;Field  ;
                  CaptionML=[ENU=Error File;
                             FRA=Fichier erreur];
                  SourceExpr=ErrorFileName;
                  OnValidate=BEGIN
                               ErrorFileName := FileServiceTiers(Text006,ErrorFileName,4,Text007,1);
                             END;

                  OnAssistEdit=VAR
                                 CommonDialogMgt@1100281000 : Codeunit 412;
                               BEGIN
                                 ErrorFileName := FileServiceTiers(Text006,ErrorFileName,4,Text007,1);
                               END;
                                }

    }
  }
  CODE
  {
    VAR
      Text001@1100281005 : TextConst 'ENU=Inventory FA error import - %1\-------------------------------;FRA=Erreur import inventaire immo. - %1\-------------------------------';
      Text002@1006 : TextConst 'ENU=Import Excel File;FRA=Importer fichier Excel';
      Text003@1007 : TextConst 'ENU=Analyzing Data...\\@1@@@@@@@@@@@@@@@@@@@@@@@@@\;FRA=Analyse des donn‚es...\\@1@@@@@@@@@@@@@@@@@@@@@@@@@\';
      Text004@1100281001 : TextConst 'ENU=Inventory Code unknow : %1 - Line no. %2;FRA=Code inventaire immo. inconnu : %1 - ligne nø %2';
      Text005@1100281000 : TextConst 'ENU=Shelf Code unknow : %1 - line no. %2;FRA=Code emplacement inconnu : %1 - ligne nø %2';
      Text006@1100281002 : TextConst 'ENU=Import CSV File;FRA=Import Fichier CSV';
      Text007@1100281009 : TextConst 'ENU=XML Files (*.xml)|*.xml|All Files (*.*)|*.*;FRA=Fichiers TXT (*.txt)|*.txt|Tous les fichiers (*.*)|*.*';
      Text008@1100281004 : TextConst 'ENU=Please, fill inventory date;FRA=Veuillez saisir une date d''inventaire.';
      ExcelBufferTemp@1027 : TEMPORARY Record 370;
      CommonDialogMgt@1100281015 : Codeunit 412;
      ErrorFile@1100286000 : File;
      InventoryDate@1100281008 : Date;
      FileName@1100281014 : Text[250];
      SheetName@1100281012 : Text[250];
      ErrorFileName@1100281011 : Text[250];
      Text009@1100281003 : TextConst 'ENU=Read line(s) nb : %1\Correct line(s) nb : %2\Error line(s) Nb : %3;FRA=Nombre ligne(s) lue(s) : %1\Nombre ligne(s) correcte(s) : %2\Nombre ligne(s) en erreur : %3';
      ErrorLine@1100281007 : Integer;
      ImportedLine@1100281006 : Integer;
      CorrectLine@1100281010 : Integer;
      Text010@1100281013 : TextConst 'ENU=Inventory already exists to this date. Do you want to continue ?;FRA=Un inventaire existe d‚j… pour cette date. Souahitez-vous continuer ?';
      InventoryEntryNo@1100281016 : Integer;

    LOCAL PROCEDURE ReadExcelSheet@1();
    BEGIN
      ExcelBufferTemp.OpenBook(FileName,SheetName);
      ExcelBufferTemp.ReadSheet;
    END;

    LOCAL PROCEDURE AnalyzeData@2();
    VAR
      lInventoryCode@1100281002 : Code[20];
      lShelfCode@1100281001 : Code[10];
      lCurrentRowNo@1100281007 : Integer;
      lTotalCounter@1100281004 : Integer;
      lCurrentCounter@1100281003 : Integer;
      lModuloCounter@1100281005 : Integer;
      lWDialog@1100281000 : Dialog;
    BEGIN
      IF GUIALLOWED THEN BEGIN
        lWDialog.OPEN(Text003);
        lTotalCounter := ExcelBufferTemp.COUNT;
        lCurrentCounter := 0;
        lModuloCounter := ROUND(lTotalCounter * 5 / 100,1,'>');
      END;
      lInventoryCode := '';
      lShelfCode := '';
      ErrorLine := 0;
      ImportedLine := 0;
      CorrectLine := 0;

      IF ExcelBufferTemp.FINDSET THEN BEGIN
        REPEAT
          IF GUIALLOWED THEN BEGIN
            lCurrentCounter += 1;
            IF lCurrentCounter MOD lModuloCounter = 0 THEN BEGIN
              lWDialog.UPDATE(1,ROUND(lCurrentCounter / lTotalCounter * 9999,1));
            END;
          END;

          IF lCurrentRowNo = 0 THEN BEGIN
            lCurrentRowNo := ExcelBufferTemp."Row No.";
          END ELSE BEGIN
            IF lCurrentRowNo <> ExcelBufferTemp."Row No." THEN BEGIN
              InventoryTreatment(
                lInventoryCode,
                lShelfCode,
                InventoryDate,
                lCurrentRowNo);
              lInventoryCode := '';
              lShelfCode := '';
              lCurrentRowNo := ExcelBufferTemp."Row No.";
            END;
          END;

          IF ExcelBufferTemp."Cell Value as Text" <> '' THEN BEGIN
            CASE ExcelBufferTemp."Column No." OF
              1 : lInventoryCode := COPYSTR(ExcelBufferTemp."Cell Value as Text",1,20);
              2 : lShelfCode := COPYSTR(ExcelBufferTemp."Cell Value as Text",1,10);
            END;
          END;
        UNTIL ExcelBufferTemp.NEXT = 0;
        InventoryTreatment(
          lInventoryCode,
          lShelfCode,
          InventoryDate,
          lCurrentRowNo);
      END;

      MESSAGE(STRSUBSTNO(Text009,ImportedLine,CorrectLine,ErrorLine));

      IF GUIALLOWED THEN BEGIN
        lWDialog.CLOSE;
      END;
    END;

    PROCEDURE InventoryTreatment@1100286004(pInventoryCode@1100281003 : Code[20];pShelfCode@1100281004 : Code[20];pInventoryDate@1100281005 : Date;pLineNo@1100281006 : Integer) rValue : Boolean;
    VAR
      lInventoryFixedAsset@1100281000 : Record 50116;
      lFALocation@1100281001 : Record 5609;
      lFixedAsset@1100281002 : Record 5600;
      lErrorDescription@1100281007 : Text[100];
      lLastFALocationCode@1100281008 : Code[10];
      lFAFound@1100281009 : Boolean;
    BEGIN

      rValue := FALSE;
      lErrorDescription := '';

      IF (pInventoryCode = '') OR (pInventoryCode = '') THEN BEGIN
        EXIT;
      END;
      ImportedLine += 1;

      lFAFound := FALSE;
      lFixedAsset.SETRANGE("Inventory No.",pInventoryCode);
      IF lFixedAsset.FINDFIRST THEN BEGIN
        lFAFound := TRUE;
      END ELSE BEGIN
        CLEAR(lFixedAsset);
      END;

      // TEST code emplacement
      IF NOT lFALocation.GET(pShelfCode) THEN BEGIN
        lErrorDescription := COPYSTR(STRSUBSTNO(Text005,pInventoryCode,pLineNo),1,MAXSTRLEN(lErrorDescription));
        ErrorFile.WRITE(lErrorDescription);
        ErrorLine += 1;
      END;

      // Test inventaire immo
      IF NOT lInventoryFixedAsset.GET(pInventoryCode) THEN BEGIN
        lErrorDescription := COPYSTR(STRSUBSTNO(Text004,pInventoryCode,pLineNo),1,MAXSTRLEN(lErrorDescription));
        ErrorFile.WRITE(lErrorDescription);
        ErrorLine += 1;
      END ELSE BEGIN
        lLastFALocationCode := lInventoryFixedAsset."FA Location Code";
        lInventoryFixedAsset."FA Location Code" := pShelfCode;
        lInventoryFixedAsset.MODIFY;
        CorrectLine += 1;
      END;

      IF lFAFound THEN BEGIN
        lFixedAsset.VALIDATE("FA Location Code",pShelfCode);
        lFixedAsset.MODIFY(TRUE);
      END;

      // Archivage des valeurs
      ArchiveInventory(
        pInventoryDate,
        lInventoryFixedAsset."Inventory No.",
        lFixedAsset."No.",
        lLastFALocationCode,
        lInventoryFixedAsset."FA Location Code",
        lErrorDescription);

      rValue := lErrorDescription = '';
    END;

    PROCEDURE ArchiveInventory@1100281003(pInventoryDate@1100281003 : Date;pInventoryNo@1100281000 : Code[20];pFANo@1100281002 : Code[20];pOldFALocationCode@1100281004 : Code[20];pNewFALocationCode@1100281005 : Code[20];pErrorDescription@1100281006 : Text[100]);
    VAR
      lInventoryFixedAssetEntry@1100281001 : Record 50117;
    BEGIN
      // Archivage de l'import
      WITH lInventoryFixedAssetEntry DO BEGIN
        CLEAR(lInventoryFixedAssetEntry);
        "Entry No." := 0;
        "Inventory Date" := pInventoryDate;
        "FA Inventory No." := pInventoryNo;
        "FA No." := pFANo;
        "Old FA Location Code" := pOldFALocationCode;
        "New FA Location Code" := pNewFALocationCode;
        "Error Line" := pErrorDescription <> '';
        "Error Description" := pErrorDescription;
        "Inventory Entry No." := InventoryEntryNo;
        INSERT(TRUE);
      END;
    END;

    PROCEDURE CheckInventory@1100281000(pInventoryDate@1100281000 : Date) rValue : Boolean;
    VAR
      lInventoryFixedAssetEntry@1100281001 : Record 50117;
    BEGIN
      // V‚rification de pr‚sence d'un inventaire
      rValue := FALSE;

      lInventoryFixedAssetEntry.SETCURRENTKEY("Inventory Date");
      lInventoryFixedAssetEntry.SETRANGE("Inventory Date",pInventoryDate);
      rValue := NOT lInventoryFixedAssetEntry.ISEMPTY;

      lInventoryFixedAssetEntry.RESET;
      lInventoryFixedAssetEntry.SETCURRENTKEY("Inventory Entry No.");
      IF lInventoryFixedAssetEntry.FINDLAST THEN BEGIN
        InventoryEntryNo := lInventoryFixedAssetEntry."Inventory Entry No." + 1;
      END ELSE BEGIN
        InventoryEntryNo := 1;
      END;
    END;

    LOCAL PROCEDURE FileServiceTiers@19040090(pWindowTitle@1100281006 : Text[50];pDefaultFileName@1100281005 : Text[1024];pDefaultFileType@1100281004 : ' ,Text,Excel,Word,Custom,Xml,Htm,Xsd,Xslt';pFilterString@1100281003 : Text[250];pAction@1100281002 : 'Open,Save') rValue : Text[250];
    BEGIN
      rValue := CommonDialogMgt.OpenFile(pWindowTitle,pDefaultFileName,pDefaultFileType,pFilterString,pAction);
    END;

    BEGIN
    {
      /** @r IMH03 @d 02/05/2011 @a isat.ZW @v IMH6.01.151 @s Comptabilit‚ gestion des immobilisations @c Modification */
      /** @r IMH02 @d 27/04/2011 @a isat.PC @v IMH6.01.151 @s Comptabilit‚ gestion des immobilisations @c Modification */
      /** @r IMH01 @d 16/02/2011 @a CAP.JC @v IMH6.01.151 @s Comptabilit‚ gestion des immobilisations
          @c cr‚ation du report de mise … jour du code emplacement avec archivage */
    }
    END.
  }
  RDLDATA
  {
  }
}