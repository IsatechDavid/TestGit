OBJECT Report 50068 Generate DASU Document
{
  OBJECT-PROPERTIES
  {
    Date=18/09/12;
    Time=15:09:36;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Generate DASU Document;
               FRA=G‚n‚rer document DASU];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF DateFilter = '' THEN BEGIN
                    ERROR(Text002);
                  END;
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table50145;
        DataItemTableView=SORTING(Type,No.)
                          WHERE(Type=CONST(DASU));
        DataItemVarName=GovDocHeader;
        ReqFilterHeadingML=[ENU=Document;
                            FRA=Document];
        OnAfterGetRecord=VAR
                           lGovernmentDocumentLine@1000000000 : Record 50146;
                         BEGIN
                           IF NOT CONFIRM(Text000,FALSE) THEN BEGIN
                             ERROR(Text001);
                           END;

                           lGovernmentDocumentLine.SETRANGE(Type,Type);
                           lGovernmentDocumentLine.SETRANGE("No.","No.");
                           lGovernmentDocumentLine.DELETEALL;

                           LineNo := 0;
                         END;

        ReqFilterFields=Type,No.;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table23;
        DataItemTableView=SORTING(No.);
        OnPreDataItem=BEGIN
                        IF GUIALLOWED THEN BEGIN
                          WDialog.OPEN(Text003);
                          TotalCounter := COUNT;
                          CurrentCounter := 1;
                          ModValue := (TotalCounter / 100) DIV 1;
                          IF ModValue = 0 THEN BEGIN
                            ModValue := 1;
                          END;
                        END;
                        ClosingDatePeriod := DMY2DATE(31,12,DATE2DMY(GovernmentDocHeader."Posting Date",3));
                        CompanyInformation.GET;
                      END;

        OnAfterGetRecord=VAR
                           lCountry@1100281005 : Record 9;
                           lVendorLedgerEntry@1100281002 : Record 25;
                           lDetailedVendorLedgEntry@1100281001 : Record 380;
                           lGLEntry@1100281003 : Record 17;
                           lGovDocLine@1100050000 : Record 50146;
                         BEGIN
                           IF GUIALLOWED THEN BEGIN
                             IF CurrentCounter MOD ModValue = 1 THEN BEGIN
                               WDialog.UPDATE(1,"No.");
                               WDialog.UPDATE(2,ROUND(CurrentCounter / TotalCounter * 9999,1));
                             END;
                             CurrentCounter += 1;
                           END;

                           GovDocLineBuffer.RESET;
                           GovDocLineBuffer.DELETEALL;
                           MakeVendorBuffer("No.",DateFilter);
                           DeleteLineUnderMinAmount("No.");
                           IF NOT GovDocLineBuffer.ISEMPTY THEN BEGIN
                             GovDocLineBuffer.RESET;
                             GovDocLineBuffer.FINDSET;
                             REPEAT
                               lGovDocLine := GovDocLineBuffer;
                               lGovDocLine.INSERT;
                             UNTIL GovDocLineBuffer.NEXT = 0;
                           END;
                           //MakeLostLine;
                         END;

        OnPostDataItem=BEGIN
                         IF GUIALLOWED THEN BEGIN
                           WDialog.CLOSE;
                         END;
                       END;

        ReqFilterFields=No.;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
      OnOpenForm=BEGIN
                   IF (GovernmentDocHeader."Starting Date" <> 0D) AND
                     (GovernmentDocHeader."Ending Date" <> 0D)
                   THEN BEGIN
                     DateFilter :=
                       STRSUBSTNO(
                         '%1..%2',
                         GovernmentDocHeader."Starting Date",
                         GovernmentDocHeader."Ending Date");
                   END;
                   MinAmount := 600;
                   RefDateOption := RefDateOption::DueDate;
                 END;

    }
    CONTROLS
    {
      { 1100281000;TextBox;3410 ;1100 ;2750 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Minimum Amount;
                                                              FRA=Montant minimum];
                                                   SourceExpr=MinAmount }
      { 1100281001;Label  ;0    ;1100 ;3300 ;440  ;ParentControl=1100281000;
                                                   InPage=-1 }
      { 1100281002;TextBox;3410 ;550  ;2750 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Date Filter;
                                                              FRA=Filtre date];
                                                   SourceExpr=DateFilter;
                                                   OnValidate=VAR
                                                                ApplicationManagement@1001 : Codeunit 1;
                                                                Vendor2@1000000001 : Record 23;
                                                              BEGIN
                                                                IF ApplicationManagement.MakeDateFilter(DateFilter) = 0 THEN;
                                                                Vendor2.SETFILTER("Date Filter",DateFilter);
                                                                DateFilter := Vendor2.GETFILTER("Date Filter");
                                                              END;

                                                   OnAfterValidate=BEGIN
                                                                     RequestOptionsForm.UPDATE;
                                                                   END;
                                                                    }
      { 1100281003;Label  ;0    ;550  ;3300 ;440  ;ParentControl=1100281002;
                                                   InPage=-1 }
      { 1100050000;TextBox;3410 ;0    ;2750 ;440  ;Visible=Yes;
                                                   CaptionML=[ENU=Minimum Amount;
                                                              FRA=Date de r‚f‚rence];
                                                   OptionCaptionML=FRA=Date comptabilisation,Date d'‚ch‚ance;
                                                   SourceExpr=RefDateOption }
      { 1100050001;Label  ;0    ;0    ;3300 ;440  ;ParentControl=1100050000 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1100281004 : TextConst 'FRA=Attention, le traitement va supprimer toutes les lignes !\Voulez-vous continuer ?';
      Text001@1100281003 : TextConst 'FRA=Traitement annul‚ !';
      Text002@1100281010 : TextConst 'ENU=Date filter must be fill;FRA=Le filtre date est obligatoire';
      Text003@1100281001 : TextConst 'FRA=Traitement en cours\Nø fournisseur : #1#####\@2@@@@@@@@@@@@@@@@@@@@@@@@@';
      CompanyInformation@1100281000 : Record 79;
      GovernmentDocHeader@1100281013 : Record 50145;
      GovDocLineBuffer@1100050001 : TEMPORARY Record 50146;
      DateFilter@1100281008 : Text[80];
      TotalCounter@1100281007 : Integer;
      CurrentCounter@1100281006 : Integer;
      ModValue@1100281011 : Integer;
      LineNo@1100281005 : Integer;
      MinAmount@1100281009 : Decimal;
      ClosingDatePeriod@1100281012 : Date;
      WDialog@1100281002 : Dialog;
      RefDateOption@1100050000 : 'PostingDate,DueDate';

    PROCEDURE SetGovDocHeader@1100281000(pGovernmentDocHeader@1100281000 : Record 50145);
    BEGIN
      GovernmentDocHeader := pGovernmentDocHeader;
    END;

    PROCEDURE DeleteLineUnderMinAmount@1100281001(pVendorNo@1100281000 : Code[20]);
    VAR
      lGovDocLine@1100281001 : Record 50146;
      lGovDocLine2@1100050000 : Record 50146;
      lAmount@1100050001 : Decimal;
    BEGIN
      // Supprime les lignes li‚es … un fournisseur dont la somme des montants est inf‚rieur au montant minimum
      WITH GovDocLineBuffer DO BEGIN
        RESET;
        SETCURRENTKEY(
          Type,"No.","Vendor No.","Line Type","Account Nature",
          "Recipient Type","Mode Type","Source Deduction","Posting Date");
        SETRANGE(Type,GovDocHeader.Type);
        SETRANGE("No.",GovDocHeader."No.");
        SETRANGE("Vendor No.",pVendorNo);
        IF ISEMPTY THEN BEGIN
          EXIT;
        END;

        lAmount := 0;

        FINDSET(FALSE,FALSE);
        REPEAT
          lAmount += Amount + "VAT Amount";
        UNTIL NEXT = 0;

        IF lAmount < MinAmount THEN BEGIN
          FINDSET(FALSE,FALSE);
          REPEAT
            DELETE;
          UNTIL NEXT = 0;
        END;
      END;
    END;

    PROCEDURE MakeVendorBuffer@1000000000(pVendorNo@1000000000 : Code[20];pFilterDate@1000000001 : Text[80]);
    VAR
      lVendorLedgerEntry@1000000005 : Record 25;
      lVendorLedgerEntry2@1000000003 : Record 25;
      lDetailedVendorLedgEntry@1000000004 : Record 380;
      lDetailedVendorLedgEntry2@1000000006 : Record 380;
      lVendor@1100281000 : Record 23;
    BEGIN
      // R‚cup‚ration des ‚critures comptables pay‚s dans le pFilterDate
      WITH lVendorLedgerEntry DO BEGIN
        SETCURRENTKEY("Document Type","Vendor No.","Posting Date");
        SETRANGE("Document Type", "Document Type"::Payment);
        SETRANGE("Vendor No.", pVendorNo);
        IF (RefDateOption = RefDateOption::DueDate) THEN BEGIN
          SETFILTER("Due Date",pFilterDate);
        END ELSE BEGIN
          SETFILTER("Posting Date",pFilterDate);
        END;
        IF ISEMPTY THEN BEGIN
          EXIT;
        END;

        lVendor.GET(pVendorNo);

        FINDSET(FALSE,FALSE);
        REPEAT // Parcours des rŠglements
          lDetailedVendorLedgEntry.SETCURRENTKEY("Vendor Ledger Entry No.","Entry Type","Posting Date");
          lDetailedVendorLedgEntry.SETRANGE("Vendor Ledger Entry No.","Entry No.");
          lDetailedVendorLedgEntry.SETRANGE("Entry Type",lDetailedVendorLedgEntry."Entry Type"::Application);
          IF NOT lDetailedVendorLedgEntry.ISEMPTY THEN BEGIN
            lDetailedVendorLedgEntry.FINDFIRST;
            // Controle sur le premier lettrage
            lDetailedVendorLedgEntry2.SETCURRENTKEY("Applied Vend. Ledger Entry No.","Entry Type");
            lDetailedVendorLedgEntry2.SETRANGE(
              "Applied Vend. Ledger Entry No.",
              lDetailedVendorLedgEntry."Applied Vend. Ledger Entry No.");
            lDetailedVendorLedgEntry2.SETRANGE("Entry Type",lDetailedVendorLedgEntry2."Entry Type"::Application);
            lDetailedVendorLedgEntry2.SETFILTER("Entry No.",'<>%1',lDetailedVendorLedgEntry2."Entry No.");
            IF NOT lDetailedVendorLedgEntry2.ISEMPTY THEN BEGIN
              lDetailedVendorLedgEntry2.FINDSET(FALSE,FALSE);
              REPEAT // parcours lettrage facture
                lVendorLedgerEntry2.GET(lDetailedVendorLedgEntry2."Vendor Ledger Entry No.");
                GetGLEntries(
                  lVendorLedgerEntry2."Transaction No.",
                  lVendorLedgerEntry2."Document No.",
                  lVendorLedgerEntry."Posting Date",
                  lVendorLedgerEntry."Source Code",
                  lVendorLedgerEntry."Due Date");
              UNTIL lDetailedVendorLedgEntry2.NEXT = 0;
            END;
          END;
        UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE GetGLEntries@1000000001(pTransaction@1000000002 : Integer;pDocumentNo@1000000003 : Code[20];pPostingDate@1000000000 : Date;pSourceCode@1000000004 : Code[10];pDueDate@1100281001 : Date);
    VAR
      lGLAccount@1100050002 : Record 15;
      lGLEntry@1100050000 : Record 17;
    BEGIN
      WITH lGLEntry DO BEGIN
        SETCURRENTKEY("Transaction No.");
        SETRANGE("Transaction No.",pTransaction);
        SETRANGE("Document No.",pDocumentNo); // une transaction peut contenir plusieurs doc
        IF ISEMPTY THEN BEGIN
          EXIT;
        END;

        FINDSET(FALSE,FALSE);
        REPEAT
          lGLAccount.GET(lGLEntry."G/L Account No.");
          IF lGLAccount."Include Entries For DAS 2" THEN BEGIN
           GovDocLineBuffer.SETCURRENTKEY(
             Type,"No.","Vendor No.","Line Type","Account Nature",
            "Recipient Type","Mode Type","Source Deduction","Posting Date");
          GovDocLineBuffer.SETRANGE(Type,GovDocHeader.Type);
          GovDocLineBuffer.SETRANGE("No.",GovDocHeader."No.");
          GovDocLineBuffer.SETRANGE("Vendor No.",Vendor."No.");
          GovDocLineBuffer.SETRANGE("Line Type",GovDocLineBuffer."Line Type"::Vendor);
          GovDocLineBuffer.SETRANGE("Account Nature",lGLAccount."Account Nature");
          GovDocLineBuffer.SETRANGE("Mode Type",lGLAccount."Mode type");
          GovDocLineBuffer.SETRANGE("Source Deduction",lGLAccount."Source Deduction");
          IF GovDocLineBuffer.ISEMPTY THEN BEGIN
            GovDocLineBuffer.INIT;
            GovDocLineBuffer.Type := GovDocHeader.Type;
            GovDocLineBuffer."No." := GovDocHeader."No.";
            LineNo += 10000;
            GovDocLineBuffer."Line No." := LineNo;
            GovDocLineBuffer."Line Type" := GovDocLineBuffer."Line Type"::Vendor;
            GovDocLineBuffer."Vendor No." := Vendor."No.";
            GovDocLineBuffer."Account Nature" := lGLAccount."Account Nature";
            GovDocLineBuffer."Mode Type" := lGLAccount."Mode type";
            GovDocLineBuffer."Source Deduction" := lGLAccount."Source Deduction";
            GovDocLineBuffer."Recipient Type" := lGLAccount."Recipient type";
            CASE lGLAccount."Recipient type" OF
              lGLAccount."Recipient type"::"N - Food" : GovDocLineBuffer.Food := 'N';
              lGLAccount."Recipient type"::"L - Housing" : GovDocLineBuffer.Housing := 'L';
              lGLAccount."Recipient type"::"V - Car" : GovDocLineBuffer.Car := 'V';
              lGLAccount."Recipient type"::"A - Other" : GovDocLineBuffer.Other := 'A';
            END;
            GovDocLineBuffer."Mode Type" := lGLAccount."Mode type";
            GovDocLineBuffer."Source Deduction" := lGLAccount."Source Deduction";
            GovDocLineBuffer."Vendor Name" := Vendor.Name;
            GovDocLineBuffer."Vendor Surname" := Vendor.Surname;
            GovDocLineBuffer."Vendor Firstname" := Vendor.Firstname;
            GovDocLineBuffer."Vendor Occupation Code" := Vendor."Occupation Code";
            GovDocLineBuffer."Further Mention" := Vendor."Further Mention";
            GovDocLineBuffer."Road No." := Vendor."Road No.";
            GovDocLineBuffer."Road Extension" := Vendor."Road No. 2";
            GovDocLineBuffer."Road Nature and Name" := Vendor."Road Nature and Name";
            IF (Vendor."Country/Region Code" = '') OR (Vendor."Country/Region Code" = 'FR') THEN BEGIN
              IF (STRLEN(Vendor."Post Code") <= 5) THEN BEGIN
                GovDocLineBuffer."INSEE Code City" := Vendor."Post Code";
              END;
            END;
            GovDocLineBuffer."Post Office Box / Hamlet" := Vendor."Post Office Box / Hamlet";
            GovDocLineBuffer."Post Code" := Vendor."Post Code";
            GovDocLineBuffer."City Name" := Vendor.City;
            GovDocLineBuffer."Legal Personality" := Vendor."Legal Personality";
            GovDocLineBuffer."SIREN No." := Vendor."SIREN No.";
            GovDocLineBuffer."NIC No." := Vendor."NIC No.";
            GovDocLineBuffer."Vendor Country Code" := Vendor."Country/Region Code";
            GovDocLineBuffer."Closing Date Fiscal Period" := ClosingDatePeriod;
            GovDocLineBuffer.Amount := 0;
            GovDocLineBuffer."VAT Amount" := 0;
            GovDocLineBuffer."Company NIC No." := CompanyInformation."NIC No.";
            GovDocLineBuffer.INSERT;
          END;
          GovDocLineBuffer.FINDFIRST;
          GovDocLineBuffer.Amount += lGLEntry.Amount;
          IF Vendor."Country/Region Code" = 'FR' THEN BEGIN
            GovDocLineBuffer."VAT Amount" += lGLEntry."VAT Amount";
          END;
          GovDocLineBuffer.MODIFY;
          END;
        UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE MakeLostLine@1100281002();
    VAR
      lGovDocLine@1100050002 : Record 50146;
    BEGIN
      //  Pour r‚cup‚rer les lignes manquantes
      EXIT;

      GovDocLineBuffer.RESET;

      IF GovDocLineBuffer.ISEMPTY THEN BEGIN
        EXIT;
      END;

      lGovDocLine.RESET;
      IF NOT lGovDocLine.FINDLAST THEN BEGIN
        LineNo := 10000;
      END ELSE BEGIN
        LineNo := lGovDocLine."Line No.";
      END;

      GovDocLineBuffer.FINDSET;
      REPEAT
        lGovDocLine.SETCURRENTKEY(
           Type,"No.","Vendor No.","Line Type","Account Nature",
          "Recipient Type","Mode Type","Source Deduction","Posting Date");
        lGovDocLine.SETRANGE(Type,GovDocLineBuffer.Type);
        lGovDocLine.SETRANGE("No.",GovDocLineBuffer."No.");
        lGovDocLine.SETRANGE("Vendor No.",GovDocLineBuffer."Vendor No.");
        lGovDocLine.SETRANGE("Line Type",GovDocLineBuffer."Line Type"::Vendor);
        lGovDocLine.SETRANGE("Account Nature",GovDocLineBuffer."Account Nature");
        lGovDocLine.SETRANGE("Mode Type",GovDocLineBuffer."Mode Type");
        lGovDocLine.SETRANGE("Source Deduction",GovDocLineBuffer."Source Deduction");
        IF lGovDocLine.ISEMPTY THEN BEGIN
          lGovDocLine := GovDocLineBuffer;
          LineNo += 10000;
          lGovDocLine."Line No." := LineNo;
          lGovDocLine.INSERT;
        END;
      UNTIL GovDocLineBuffer.NEXT = 0;
    END;

    BEGIN
    {
      /** @r IMH01 @d 10/12/10 @a ISAT.VA @v IMH6.01.140 @s DAS @c Creation */
    }
    END.
  }
  RDLDATA
  {
  }
}