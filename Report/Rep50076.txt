OBJECT Report 50076 Report 513 : Comp. DGS - DPR
{
  OBJECT-PROPERTIES
  {
    Date=15/10/13;
    Time=18:20:37;
    Modified=Yes;
    Version List=IMH6.01.08;
  }
  PROPERTIES
  {
    CaptionML=[ENU=DGS - DPR Comparative View;
               FRA=Report 513 : Comparatif vision DGS - DPR];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  ProviderSetup.GET;
                  NbStatus := 6;
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table50000;
        DataItemTableView=SORTING(No.);
        OnPreDataItem=BEGIN
                        TerritoryFilter := Provider.GETFILTER("IMH Territory Code");
                        AreaFilter := Provider.GETFILTER("Area Code");

                        Window.OPEN(Text010,Provider."No.");

                        RowNo := 1;
                        ColNo := 1;
                        InsertRow(RowNo,ColNo,Text030,'','');
                        InsertRow(RowNo,ColNo + 1,Text031,'','');
                        InsertRow(RowNo,ColNo + 2,Text032,'','');
                        InsertRow(RowNo,ColNo + 3,Text033,'','');
                        InsertRow(RowNo,ColNo + 4,Text034,'','');
                        InsertRow(RowNo,ColNo + 5,Text035,'','');
                      END;

        OnAfterGetRecord=VAR
                           lTerritory@1100281001 : Record 286;
                           lArea@1100281000 : Record 284;
                         BEGIN
                           Window.UPDATE;

                           TempBuffer.RESET;
                           TempBuffer.SETRANGE("Code 1","IMH Territory Code");
                           IF DetailByArea THEN
                             TempBuffer.SETRANGE("Code 2","Area Code");
                           TempBuffer.SETRANGE("Integer 1",Status);
                           IF TempBuffer.FINDFIRST THEN BEGIN
                             IF NOT "Invisible Open Space" THEN
                               TempBuffer."Data Integer 1" := TempBuffer."Data Integer 1" + 1;  //DGS
                             TempBuffer."Data Integer 2" := TempBuffer."Data Integer 2" + 1; //DPR
                             TempBuffer.MODIFY;
                           END ELSE BEGIN
                             TempBuffer.INIT;
                             TempBuffer."Code 1" := "IMH Territory Code";
                             TempBuffer."Code 2" := "Area Code";
                             TempBuffer."Integer 1" := Status;
                             IF NOT "Invisible Open Space" THEN
                               TempBuffer."Data Integer 1" := 1;  //DGS
                             TempBuffer."Data Integer 2" := 1;  //DPR
                             TempBuffer.INSERT;
                           END;

                           IF lTerritory.GET("IMH Territory Code") THEN BEGIN
                             TempTerritory := lTerritory;
                             IF TempTerritory.INSERT THEN;
                           END ELSE
                             lTerritory.INIT;

                           IF lArea.GET("Area Code") THEN BEGIN
                             IF DetailByArea THEN BEGIN
                               TempArea := lArea;
                               IF TempArea.INSERT THEN;
                             END;
                           END ELSE
                             lArea.INIT;

                           CALCFIELDS("Process Status Description");

                           RowNo := RowNo + 1;
                           InsertRow(RowNo,ColNo,"No.",'','');
                           InsertRow(RowNo,ColNo + 1,Name,'','');
                           InsertRow(RowNo,ColNo + 2,lArea.Text,'','');
                           InsertRow(RowNo,ColNo + 3,FORMAT(Provider.Status),'','');
                           InsertRow(RowNo,ColNo + 4,"Process Status Description",'','');
                           InsertRow(RowNo,ColNo + 5,FORMAT(NOT "Invisible Open Space"),'','');
                         END;

        OnPostDataItem=BEGIN
                         Window.CLOSE;

                         ExportToExcel;
                       END;

        ReqFilterFields=IMH Territory Code,Area Code;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=5830;
      Height=1540;
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100281002;CheckBox;3630;330  ;440  ;440  ;InPage=-1;
                                                   ShowCaption=No;
                                                   CaptionML=[ENU=Detail By Area;
                                                              FRA=D‚tail par d‚partement];
                                                   SourceExpr=DetailByArea }
      { 1100281003;Label  ;220  ;330  ;3300 ;440  ;ParentControl=1100281002 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100281000;;Container;
                  ContainerType=ContentArea }

      { 1100281001;1;Group  ;
                  CaptionML=[ENU=Options;
                             FRA=Options];
                  GroupType=Group }

      { 1100281002;2;Field  ;
                  CaptionML=[ENU=Detail By Area;
                             FRA=D‚tail par d‚partement];
                  SourceExpr=DetailByArea }

    }
  }
  CODE
  {
    VAR
      ProviderSetup@1100281003 : Record 50011;
      TempBuffer@1100281039 : TEMPORARY Record 50143;
      TempTerritory@1100281007 : TEMPORARY Record 286;
      TempArea@1100281008 : TEMPORARY Record 284;
      ExcelBuffer@1100281016 : TEMPORARY Record 370;
      Window@1100281018 : Dialog;
      Text000@1100281012 : TextConst 'ENU=Excel not found.;FRA=Programme Excel non trouv‚.';
      Text010@1100281019 : TextConst 'ENU=Provider No. : #1##############;FRA=Nø prestataire : #1##############';
      TerritoryFilter@1100281036 : Text[200];
      AreaFilter@1100281038 : Text[200];
      DetailByArea@1100281013 : Boolean;
      ExcelTemplatePath@1100281024 : Text[250];
      ExcelSheetName@1100281025 : Text[50];
      StartRowNo@1100281023 : Integer;
      StartColNo@1100281020 : Integer;
      Text011@1100281001 : TextConst 'FRA=Donn‚es';
      Text020@1100281026 : TextConst 'ENU=IMH Territory;FRA=Zone IMH';
      Text021@1100281027 : TextConst 'ENU=Area;FRA=D‚partement';
      Text022@1100281028 : TextConst 'FRA=Option';
      RowNo@1100281034 : Integer;
      ColNo@1100281033 : Integer;
      ProviderStatus@1100281000 : Option;
      NbStatus@1100281002 : Integer;
      Text023@1100281022 : TextConst 'ENU=By Territory;FRA=Par zone';
      Text024@1100281029 : TextConst 'ENU=By Area;FRA=Par d‚partement';
      Text030@1100281004 : TextConst 'ENU=Code;FRA=Code';
      Text031@1100281005 : TextConst 'ENU=Name;FRA=Nom';
      Text032@1100281006 : TextConst 'ENU=Area;FRA=D‚partement';
      Text033@1100281009 : TextConst 'ENU=Status;FRA=Statut';
      Text034@1100281010 : TextConst 'ENU=Process Status;FRA=Statut processus';
      Text035@1100281011 : TextConst 'ENU=Visible DGS;FRA=Visible DGS';
      Text036@1100281014 : TextConst 'ENU=Territory;FRA=Zone';
      Text037@1100281015 : TextConst 'ENU=TOTAL;FRA=TOTAL';
      Text038@1100281017 : TextConst 'ENU=DGS;FRA=DGS';
      Text039@1100281021 : TextConst 'ENU=DPR;FRA=DPR';

    PROCEDURE InitValues@1100281005();
    VAR
      lReportSetup@1100281000 : Record 50115;
      lFound@1100281001 : Boolean;
      lReportID@1100281002 : Integer;
    BEGIN
      lReportID := 50076;
      lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,USERID);
      IF NOT lFound THEN
        lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,'');

      IF lFound THEN BEGIN
        ExcelTemplatePath := lReportSetup."Excel Template Path";
        ExcelSheetName := lReportSetup."Excel Template Tabs";
        StartRowNo := lReportSetup."First Line";
        StartColNo := lReportSetup."First Column";
      END ELSE BEGIN
        ExcelTemplatePath := '';
        ExcelSheetName  := 'Page1';
      END;

      IF StartRowNo <= 0 THEN
        StartRowNo := 8;

      IF StartColNo <= 0 THEN
        StartColNo := 1;
    END;

    PROCEDURE ExportToExcel@1100281001();
    VAR
      lTerritory@1100281003 : Record 286;
      lArea@1100281004 : Record 284;
      lProvider@1100281001 : Record 50000;
      i@1100281000 : Integer;
    BEGIN
      InitValues;

      IF ExcelTemplatePath <> '' THEN BEGIN
        ExcelBuffer.OpenBook(ExcelTemplatePath,Text011);
        ExcelBuffer.CreateSheet(Text011,Text011,'','');
      END ELSE BEGIN
        ExcelBuffer.CreateBookWithoutSheet;
        ExcelBuffer.AddSheet(Text011,Text011,'','');
      END;


      ExcelBuffer.DELETEALL;

      RowNo := 2;
      InsertRow(RowNo,1,Text020,'','');
      InsertRow(RowNo + 1,1,Text021,'','');
      InsertRow(RowNo + 2,1,Text022,'','');

      InsertRow(RowNo,2,TerritoryFilter,'','');
      InsertRow(RowNo + 1,2,AreaFilter,'','');
      IF DetailByArea THEN
        InsertRow(RowNo + 2,2,Text024,'','')
      ELSE
        InsertRow(RowNo + 2,2,Text023,'','');

      RowNo := StartRowNo;
      ColNo := StartColNo;

      //Entˆte tableau
      IF  DetailByArea THEN
        InsertRow(RowNo,ColNo,Text032,'','')
      ELSE
        InsertRow(RowNo,ColNo,Text032,'','');
      ColNo := ColNo + 1;
      InsertRow(RowNo,ColNo,Text033,'','');
      FOR i:= 0 TO NbStatus - 1 DO BEGIN
        lProvider.Status := i;
        ColNo := ColNo + 1;
        InsertRow(RowNo,ColNo,FORMAT(lProvider.Status),'','');
      END;
      ColNo := ColNo + 1;
      InsertRow(RowNo,ColNo,Text037,'','');

      RowNo := RowNo + 1;
      //Ligne tableau
      TempTerritory.RESET;
      IF TempTerritory.FINDFIRST THEN BEGIN
        REPEAT

          TempArea.RESET;
          TempArea.SETRANGE("IMH Territory Code",TempTerritory.Code);
          IF TempArea.FINDFIRST THEN BEGIN
            REPEAT
              ColNo := StartColNo;

              InsertRow(RowNo,ColNo,TempArea.Text,'','');
              InsertRow(RowNo + 1,ColNo,TempArea.Text,'','');
              ColNo := ColNo + 1;
              InsertRow(RowNo,ColNo,Text038,'','');  //DGS
              InsertRow(RowNo + 1,ColNo,Text039,'','');  //DPR
              UpdateValue(TempTerritory.Code,TempArea.Code);

              RowNo := RowNo + 2;
            UNTIL TempArea.NEXT = 0;
          END;

          ColNo := StartColNo;
          InsertRow(RowNo,ColNo,TempTerritory.Name,'','');
          InsertRow(RowNo + 1,ColNo,TempTerritory.Name,'','');
          ColNo := ColNo + 1;
          InsertRow(RowNo,ColNo,Text038,'','');  //DGS
          InsertRow(RowNo + 1,ColNo,Text039,'','');  //DPR
          UpdateValue(TempTerritory.Code,'');

          RowNo := RowNo + 2;
        UNTIL TempTerritory.NEXT = 0;
      END;

      IF ExcelTemplatePath <> '' THEN BEGIN
        ExcelBuffer.GetSheet(ExcelSheetName);
        ExcelBuffer.CreateSheet(ExcelSheetName,ExcelSheetName,'','');
      END ELSE
        ExcelBuffer.AddSheet(ExcelSheetName,ExcelSheetName,'','');

      ViewExcel;
    END;

    PROCEDURE UpdateValue@1100281002(pTerritoryCode@1100281000 : Code[10];pAreaCode@1100281001 : Code[10]);
    VAR
      lNbDGS@1100281004 : Integer;
      lNbDPR@1100281003 : Integer;
      lFromCellID@1100281005 : Text[10];
      lToCellID@1100281002 : Text[10];
      lFirstColNo@1100281006 : Integer;
      i@1100281007 : Integer;
    BEGIN
      lFirstColNo := ColNo + 1;

      FOR i:= 0 TO NbStatus - 1 DO BEGIN
        ColNo := ColNo + 1;

        lNbDGS := 0;
        lNbDPR := 0;

        TempBuffer.RESET;
        TempBuffer.SETRANGE("Code 1",pTerritoryCode);
        IF pAreaCode <> '' THEN
          TempBuffer.SETRANGE("Code 2",pAreaCode);
        TempBuffer.SETRANGE("Integer 1",i);
        IF TempBuffer.FINDSET THEN BEGIN
          REPEAT
            lNbDGS := lNbDGS + TempBuffer."Data Integer 1";
            lNbDPR := lNbDPR + TempBuffer."Data Integer 2";
          UNTIL TempBuffer.NEXT = 0;
        END;

        InsertRow(RowNo,ColNo,FORMAT(lNbDGS),'','');
        InsertRow(RowNo + 1 ,ColNo,FORMAT(lNbDPR),'','');
      END;

      ColNo := ColNo + 1;

      lFromCellID := GetCellID(RowNo,lFirstColNo);
      lToCellID := GetCellID(RowNo,ColNo - 1);
      InsertRow(RowNo,ColNo,'',STRSUBSTNO('=SOMME(%1:%2)',lFromCellID,lToCellID),'');

      lFromCellID := GetCellID(RowNo + 1,lFirstColNo);
      lToCellID := GetCellID(RowNo + 1,ColNo - 1);
      InsertRow(RowNo + 1,ColNo,'',STRSUBSTNO('=SOMME(%1:%2)',lFromCellID,lToCellID),'');
    END;

    PROCEDURE InsertRow@1100281004(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250];CellFormula@1100281000 : Text[250];NbFormat@1000000003 : Text[30]);
    BEGIN
      ExcelBuffer.INIT;
      ExcelBuffer.VALIDATE("Row No.",RowNo);
      ExcelBuffer.VALIDATE("Column No.",ColumnNo);
      ExcelBuffer."Cell Value as Text" := CellValue;
      ExcelBuffer.NumberFormat := NbFormat;
      ExcelBuffer.Formula := CellFormula; //'';
      ExcelBuffer.INSERT;
    END;

    PROCEDURE ViewExcel@1000000002();
    BEGIN

      //IF ExcelTemplatePath <> '' THEN
      //  ExcelBuffer.OpenBook(ExcelTemplatePath,ExcelSheetName)
      //ELSE
      //  ExcelBuffer.CreateBook;

      //ExcelBuffer.CreateSheet(ExcelSheetName,ExcelSheetName,'','');

      ExcelBuffer.GiveUserControl;
      CLEAR(ExcelBuffer);
    END;

    PROCEDURE GetCellID@1100281006(RowNo@1100281001 : Integer;ColumnNo@1100281000 : Integer) : Text[30];
    VAR
      lExcelBuffer@1100281002 : TEMPORARY Record 370;
    BEGIN
      lExcelBuffer.VALIDATE("Row No.",RowNo);
      lExcelBuffer.VALIDATE("Column No.",ColumnNo);
      EXIT(lExcelBuffer.xlColID+lExcelBuffer.xlRowID);
    END;

    BEGIN
    {
      /** @r IMH02 @d 15/10/13 @a ISAT.ST @v IMH6.01.353 @s Reorganisation region IMH @h 4760 @c Renommage CR / AR / R‚gion */
      /** @r IMH01 @d 24/11/11 @a ISAT.EBA @v IMH6.01.201 @s Reporting DPR @c Report 513 : Comparatif vision DGS - DPR */
    }
    END.
  }
  RDLDATA
  {
  }
}