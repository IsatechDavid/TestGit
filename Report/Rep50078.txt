OBJECT Report 50078 Report 45: Delai changt statut
{
  OBJECT-PROPERTIES
  {
    Date=15/10/13;
    Time=18:20:46;
    Modified=Yes;
    Version List=IMH6.01.08;
  }
  PROPERTIES
  {
    CaptionML=FRA=Report 45 : Delai de changement de statut;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   ProviderSetup.GET;
                 END;

    OnPreReport=BEGIN
                  IF FromStatusNo = 0 THEN
                    ERROR(Text001);

                  IF ToStatusNo = 0 THEN
                    ERROR(Text002);

                  IF StartDate = 0D THEN
                    ERROR(Text003);

                  IF EndDate = 0D THEN
                    ERROR(Text004);

                  CASE Period OF
                    Period::Year :
                      BEGIN
                        DatePeriodType := DatePeriodType::Year;
                        DateFormat := '<Year4>';
                      END;
                    Period::Month :
                      BEGIN
                        DatePeriodType := DatePeriodType::Month;
                        DateFormat := '<Month Text>';
                      END;

                    Period::Week :
                      BEGIN
                        DatePeriodType := DatePeriodType::Week;
                        DateFormat := '<Week Year4>';
                      END;

                    Period::Day :
                      BEGIN
                        DatePeriodType := DatePeriodType::Date;
                        DateFormat := '<Day,2>-<Month Text>';
                      END;
                  END;
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table50000;
        DataItemTableView=SORTING(No.)
                          WHERE(Network Assistant=FILTER(<>''));
        OnPreDataItem=BEGIN
                        NAFilter := Provider.GETFILTER("Network Assistant");
                        TerritoryFilter := Provider.GETFILTER("IMH Territory Code");

                        Window.OPEN(Text010);//,Provider."No.");
                        TotalCpt := COUNT;

                        TempNA."Code 1" := Text030;
                        TempNA."Code 2" := Text030;
                        TempNA.INSERT;
                      END;

        OnAfterGetRecord=VAR
                           lProcessStatusHistory@1100281003 : Record 50047;
                           lFromStatusDate@1100281001 : Date;
                           lToStatusDate@1100281002 : Date;
                           lDate@1100281004 : Date;
                           lNbDay@1100281000 : Decimal;
                         BEGIN

                           CurrCpt += 1;
                           IF CurrCpt >= 10 THEN BEGIN
                             Cpt += CurrCpt;
                             Window.UPDATE(1,ROUND(Cpt / TotalCpt * 9999,1));
                             CurrCpt := 0;
                           END;

                           IF "Network Assistant" = '' THEN
                             CurrReport.SKIP;

                           lProcessStatusHistory.RESET;
                           lProcessStatusHistory.SETRANGE("Source Table ID",DATABASE::Provider);
                           lProcessStatusHistory.SETRANGE("Source Key Code 1",Provider."No.");
                           //lProcessStatusHistory.SETRANGE("From Status No.",FromStatusNo);
                           lProcessStatusHistory.SETRANGE("To Status No.",FromStatusNo);
                           //lProcessStatusHistory.SETRANGE("Change Date",CREATEDATETIME(StartDate,0T),CREATEDATETIME(EndDate,235959T));
                           lProcessStatusHistory.SETFILTER("Change Date",'<=%1',CREATEDATETIME(EndDate,235959T));
                           IF lProcessStatusHistory.ISEMPTY THEN
                             CurrReport.SKIP;

                           lProcessStatusHistory.FINDFIRST;
                           //lProcessStatusHistory.FINDLAST;
                           lFromStatusDate := DT2DATE(lProcessStatusHistory."Change Date");

                           lProcessStatusHistory.RESET;
                           lProcessStatusHistory.SETRANGE("Source Table ID",DATABASE::Provider);
                           lProcessStatusHistory.SETRANGE("Source Key Code 1",Provider."No.");
                           lProcessStatusHistory.SETRANGE("To Status No.",ToStatusNo);
                           lProcessStatusHistory.SETRANGE("Change Date",CREATEDATETIME(StartDate,0T),CREATEDATETIME(EndDate,235959T));
                           IF lProcessStatusHistory.ISEMPTY THEN
                             CurrReport.SKIP;

                           //lProcessStatusHistory.FINDFIRST;
                           lProcessStatusHistory.FINDLAST;

                           lToStatusDate := DT2DATE(lProcessStatusHistory."Change Date");

                           CLEAR(TempNA);
                           TempNA."Code 2" := "Network Assistant";
                           IF TempNA.INSERT THEN;

                           lNbDay := lToStatusDate - lFromStatusDate;
                           lDate := lToStatusDate;
                            IF lNbDay <> 0 THEN
                            ;
                           CASE Period OF
                             Period::Year : lDate := CALCDATE('<-CY>',lDate);
                             Period::Month : lDate := CALCDATE('<-CM>',lDate);
                             Period::Week : lDate := CALCDATE('<-CW>',lDate);
                             Period::Day : ;
                           END;

                           TempByDate.RESET;
                           TempByDate.SETRANGE("Code 1","Network Assistant");
                           TempByDate.SETRANGE("Date 1",lDate);
                           IF TempByDate.FINDFIRST THEN BEGIN
                             TempByDate."Data Integer 1" := TempByDate."Data Integer 1" + 1;
                             TempByDate."Data Integer 2" := TempByDate."Data Integer 2" + lNbDay;
                             TempByDate.MODIFY;
                           END ELSE BEGIN
                             TempByDate."Code 1" := "Network Assistant";
                             TempByDate."Date 1" := lDate;
                             TempByDate."Data Integer 1" := 1;
                             TempByDate."Data Integer 2" := lNbDay;
                             TempByDate.INSERT;
                           END;

                           TempByDate.RESET;
                           TempByDate.SETRANGE("Code 1",Text030);
                           TempByDate.SETRANGE("Date 1",lDate);
                           IF TempByDate.FINDFIRST THEN BEGIN
                             TempByDate."Data Integer 1" := TempByDate."Data Integer 1" + 1;
                             TempByDate."Data Integer 2" := TempByDate."Data Integer 2" + lNbDay;
                             TempByDate.MODIFY;
                           END ELSE BEGIN
                             TempByDate."Code 1" := Text030;
                             TempByDate."Date 1" := lDate;
                             TempByDate."Data Integer 1" := 1;
                             TempByDate."Data Integer 2" := lNbDay;
                             TempByDate.INSERT;
                           END;
                         END;

        OnPostDataItem=BEGIN
                         Window.CLOSE;

                         ExportToExcel;
                       END;

        ReqFilterFields=Network Assistant,IMH Territory Code;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=5940;
      Height=4400;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   TargetAvgTime := ProviderSetup."Target Average Time";
                 END;

    }
    CONTROLS
    {
      { 1100281000;TextBox;3630 ;2200 ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Starting Date;
                                                              FRA=Date de d‚but];
                                                   SourceExpr=StartDate }
      { 1100281001;Label  ;220  ;2200 ;3300 ;440  ;ParentControl=1100281000 }
      { 1100281002;TextBox;3630 ;2750 ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Ending Date;
                                                              FRA=Date de fin];
                                                   SourceExpr=EndDate }
      { 1100281003;Label  ;220  ;2750 ;3300 ;440  ;ParentControl=1100281002 }
      { 1100281006;TextBox;3630 ;330  ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=From Status;
                                                              FRA=Statut d‚part];
                                                   SourceExpr=FromStatusNo;
                                                   OnValidate=VAR
                                                                lProcessStatus@1100281000 : Record 50042;
                                                              BEGIN
                                                                ProviderSetup.TESTFIELD("Provider Process Code");
                                                                lProcessStatus.GET(ProviderSetup."Provider Process Code",FromStatusNo);
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupStatusList(FromStatusNo);
                                                            END;
                                                             }
      { 1100281007;Label  ;220  ;330  ;3300 ;440  ;ParentControl=1100281006 }
      { 1100281008;TextBox;3630 ;880  ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=To Status;
                                                              FRA=Statut arriv‚];
                                                   SourceExpr=ToStatusNo;
                                                   OnValidate=VAR
                                                                lProcessStatus@1100281000 : Record 50042;
                                                              BEGIN
                                                                ProviderSetup.TESTFIELD("Provider Process Code");
                                                                lProcessStatus.GET(ProviderSetup."Provider Process Code",ToStatusNo);
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupStatusList(ToStatusNo);
                                                            END;
                                                             }
      { 1100281009;Label  ;220  ;880  ;3300 ;440  ;ParentControl=1100281008 }
      { 1100281004;TextBox;3630 ;1540 ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Period;
                                                              FRA=P‚riode];
                                                   OptionCaptionML=[ENU=Year,Month,Week,Day;
                                                                    FRA=Ann‚e,Mois,Semaine,Jour];
                                                   OptionString=Year,Month,Week,Day;
                                                   SourceExpr=Period }
      { 1100281005;Label  ;220  ;1540 ;3300 ;440  ;ParentControl=1100281004 }
      { 1100281010;TextBox;3630 ;3520 ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Target Average Time;
                                                              FRA=D‚lai moyen cible];
                                                   SourceExpr=TargetAvgTime }
      { 1100281011;Label  ;220  ;3520 ;3300 ;440  ;ParentControl=1100281010 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   TargetAvgTime := ProviderSetup."Target Average Time";
                 END;

    }
    CONTROLS
    {
      { 1100281000;;Container;
                  ContainerType=ContentArea }

      { 1100281001;1;Group  ;
                  CaptionML=[ENU=Options;
                             FRA=Options];
                  GroupType=Group }

      { 1100281002;2;Field  ;
                  CaptionML=[ENU=From Status;
                             FRA=Statut d‚part];
                  SourceExpr=FromStatusNo }

      { 1100281003;2;Field  ;
                  CaptionML=[ENU=To Status;
                             FRA=Statut arriv‚];
                  SourceExpr=ToStatusNo }

      { 1100281004;2;Field  ;
                  CaptionML=[ENU=Period;
                             FRA=P‚riode];
                  OptionCaptionML=[ENU=Year,Month,Week,Day;
                                   FRA=Ann‚e,Mois,Semaine,Jour];
                  SourceExpr=Period }

      { 1100281005;2;Field  ;
                  CaptionML=[ENU=Starting Date;
                             FRA=Date de d‚but];
                  SourceExpr=StartDate }

      { 1100281006;2;Field  ;
                  CaptionML=[ENU=Ending Date;
                             FRA=Date de fin];
                  SourceExpr=EndDate }

      { 1100281007;2;Field  ;
                  CaptionML=[ENU=Target Average Time;
                             FRA=D‚lai moyen cible];
                  SourceExpr=TargetAvgTime }

    }
  }
  CODE
  {
    VAR
      ProviderSetup@1100281003 : Record 50011;
      TempByDate@1100281002 : Record 50143;
      TempNA@1100281004 : TEMPORARY Record 50143;
      ExcelBuffer@1100281016 : TEMPORARY Record 370;
      Window@1100281018 : Dialog;
      Text000@1100281012 : TextConst 'ENU=Excel not found.;FRA=Programme Excel non trouv‚.';
      Text001@1100281007 : TextConst 'FRA=Veuillez saisir le statut processus d‚part.';
      Text002@1100281008 : TextConst 'FRA=Veuillez saisir le statut processus arriv‚e.';
      Text003@1100281015 : TextConst 'FRA=Veuillez saisir la date de d‚but.';
      Text004@1100281014 : TextConst 'FRA=Veuillez saisir la date de fin.';
      Text010@1100281019 : TextConst 'ENU=Provider No. : #1##############;FRA=Avancement\@1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Text011@1100281005 : TextConst 'ENU=Status Change Delay To Excel;FRA=D‚lai de changement de statut';
      NAFilter@1100281035 : Text[200];
      TerritoryFilter@1100281036 : Text[200];
      TextDate@1000000024 : Text[30];
      Period@1100281006 : 'Year,Month,Week,Day';
      DatePeriodType@1100281009 : 'Date,Week,Month,Quarter,Year';
      DateFormat@1100281010 : Text[50];
      StartDate@1100281000 : Date;
      EndDate@1100281001 : Date;
      FromStatusNo@1100281021 : Integer;
      ToStatusNo@1100281022 : Integer;
      TargetAvgTime@1100281011 : Integer;
      ExcelTemplatePath@1100281024 : Text[250];
      ExcelSheetName@1100281025 : Text[50];
      StartRowNo@1100281023 : Integer;
      StartColNo@1100281020 : Integer;
      Text020@1100281026 : TextConst 'FRA=Statut d‚part';
      Text021@1100281027 : TextConst 'FRA=Statut arriv‚';
      Text022@1100281028 : TextConst 'FRA=Zone IMH';
      Text023@1100281029 : TextConst 'FRA=AR';
      Text024@1100281030 : TextConst 'FRA=P‚riode';
      Text025@1100281031 : TextConst 'FRA=Date de d‚but';
      Text026@1100281032 : TextConst 'FRA=Date de fin';
      Text027@1100281037 : TextConst 'ENU=Year,Month,Week,Day;FRA=Ann‚e,Mois,Semaine,Jour';
      Text028@1000000000 : TextConst 'FRA=D‚lai moyen cible';
      Text029@1000000001 : TextConst 'FRA=D‚lai moyen national';
      Text030@1100281017 : TextConst 'ENU=Average;FRA=Moyenne';
      RowNo@1100281034 : Integer;
      ColNo@1100281033 : Integer;
      CurrCpt@1100281013 : Integer;
      Cpt@1100281038 : Integer;
      TotalCpt@1100281039 : Integer;

    PROCEDURE InitValues@1100281005();
    VAR
      lReportSetup@1100281000 : Record 50115;
      lFound@1100281001 : Boolean;
      lReportID@1100281002 : Integer;
    BEGIN
      lReportID := 50078;
      lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,USERID);
      IF NOT lFound THEN
        lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,'');

      IF lFound THEN BEGIN
        ExcelTemplatePath := lReportSetup."Excel Template Path";
        ExcelSheetName := lReportSetup."Excel Template Tabs";
        StartRowNo := lReportSetup."First Line";
        StartColNo := lReportSetup."First Column";
      END ELSE BEGIN
        ExcelTemplatePath := '';
        ExcelSheetName  := 'Page1';
      END;

      IF StartRowNo <= 8 THEN
        StartRowNo := 10;

      IF StartColNo <= 0 THEN
        StartColNo := 1;
    END;

    PROCEDURE ExportToExcel@1100281001();
    VAR
      lDate@1100281006 : Record 2000000007;
      lValue@1100281002 : Decimal;
      lCpt@1100281000 : Integer;
      lEntryNo@1100281008 : Integer;
      lFromCellID@1100281010 : Text[20];
      lToCellID@1100281012 : Text[20];
      lFirstRowNo@1100281013 : Integer;
      lWeekNo@1100281011 : Integer;
      lDayNo@1100281016 : Integer;
      lEndWeekNo@1100281017 : Integer;
      lEndDayNo@1100281018 : Integer;
      lPrevWeekNo@1100281014 : Integer;
      lLen@1100281015 : Integer;
      lCellID@1100281019 : Text[10];
      lTotalDay@1100281001 : Integer;
      lTotalProvider@1100281005 : Integer;
      lTotalValue@1000000000 : Decimal;
    BEGIN
      InitValues;

      RowNo := 2;
      InsertRow(RowNo,1,Text020,'','',0);
      InsertRow(RowNo + 1,1,Text021,'','',0);
      InsertRow(RowNo + 2,1,Text022,'','',0);
      InsertRow(RowNo + 3,1,Text023,'','',0);
      InsertRow(RowNo + 4,1,Text024,'','',0);
      InsertRow(RowNo + 5,1,Text025,'','',0);
      InsertRow(RowNo + 6,1,Text026,'','',0);
      InsertRow(RowNo + 7,1,Text028,'','',0);
      InsertRow(RowNo + 8,1,Text029,'','',0);

      InsertRow(RowNo,2,FORMAT(FromStatusNo),'','',0);
      InsertRow(RowNo + 1,2,FORMAT(ToStatusNo),'','',0);
      InsertRow(RowNo + 2,2,TerritoryFilter,'','',0);
      InsertRow(RowNo + 3,2,NAFilter,'','',0);
      InsertRow(RowNo + 4,2,SELECTSTR(Period + 1,Text027),'','',0);
      InsertRow(RowNo + 5,2,FORMAT(StartDate),'','',0);
      InsertRow(RowNo + 6,2,FORMAT(EndDate),'','',0);
      InsertRow(RowNo + 7,2,FORMAT(TargetAvgTime),'','',0);

      ColNo := StartColNo - 1;

      TempNA.RESET;
      IF TempNA.FINDSET THEN BEGIN
        ColNo := ColNo + 1;
        RowNo := StartRowNo;

        lDate.SETRANGE("Period Type",DatePeriodType);
        lDate.SETRANGE("Period Start",StartDate,EndDate);
        IF lDate.FINDSET THEN BEGIN
          REPEAT
            RowNo := RowNo + 1;
            InsertRow(RowNo,ColNo,FORMAT(lDate."Period Start",0,DateFormat),'','',0);
          UNTIL lDate.NEXT = 0;
        END;
        RowNo := RowNo + 1;
        InsertRow(RowNo,ColNo,Text030,'','',0);

         ColNo := StartColNo;
        REPEAT
          lTotalDay := 0;
          lTotalProvider := 0;

          ColNo := ColNo + 1;
          RowNo := StartRowNo;

          InsertRow(RowNo,ColNo,TempNA."Code 2",'','',0);

          lDate.SETRANGE("Period Type",DatePeriodType);
          lDate.SETRANGE("Period Start",StartDate,EndDate);
          IF lDate.FINDSET THEN BEGIN
            REPEAT
           //  lTotalDay := lTotalDay + TempByDate."Data Integer 1";
           //   lTotalProvider := lTotalProvider + TempByDate."Data Integer 2";
              RowNo := RowNo + 1;
              lValue := 0;

              TempByDate.RESET;
              TempByDate.SETRANGE("Code 1",TempNA."Code 2");
              TempByDate.SETRANGE("Date 1",lDate."Period Start");
              IF TempByDate.FINDFIRST THEN BEGIN
              lTotalDay := lTotalDay + TempByDate."Data Integer 1";
              lTotalProvider := lTotalProvider + TempByDate."Data Integer 2";

                IF TempByDate."Data Integer 1" <> 0 THEN
                  lValue := ROUND(TempByDate."Data Integer 2" / TempByDate."Data Integer 1",0.01);
              END;
              IF lValue >= TargetAvgTime THEN
                InsertRow(RowNo,ColNo,FORMAT(lValue),'','',255)
              ELSE
                InsertRow(RowNo,ColNo,FORMAT(lValue),'','',0);
            UNTIL lDate.NEXT = 0;
          END;

          RowNo := RowNo + 1;
          lValue := 0;
          IF lTotalDay <> 0 THEN
            lValue := ROUND(lTotalProvider / lTotalDay,0.01);
           lTotalValue := lValue;
          IF lValue >= TargetAvgTime THEN
            InsertRow(RowNo,ColNo,FORMAT(lValue),'','',255)
          ELSE
            InsertRow(RowNo,ColNo,FORMAT(lValue),'','',0)
        UNTIL TempNA.NEXT = 0;

        InsertRow(10,2,FORMAT(lTotalValue),'','',0);

      END;


      ViewExcel;
    END;

    PROCEDURE InsertRow@1100281004(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250];CellFormula@1100281000 : Text[250];NbFormat@1000000003 : Text[30];pColor@1000000004 : Integer);
    BEGIN
      ExcelBuffer.INIT;
      ExcelBuffer.VALIDATE("Row No.",RowNo);
      ExcelBuffer.VALIDATE("Column No.",ColumnNo);
      ExcelBuffer."Cell Value as Text" := CellValue;
      ExcelBuffer.NumberFormat := NbFormat;
      ExcelBuffer.Formula := CellFormula; //'';
      ExcelBuffer.Color := pColor;
      ExcelBuffer.INSERT;
    END;

    PROCEDURE GetCurrCellID@1100281000() : Text[20];
    BEGIN
      EXIT(ExcelBuffer.xlColID + ExcelBuffer.xlRowID);
    END;

    PROCEDURE ViewExcel@1000000002();
    BEGIN

      IF ExcelTemplatePath <> '' THEN
        ExcelBuffer.OpenBook(ExcelTemplatePath,ExcelSheetName)
      ELSE
        ExcelBuffer.CreateBook;

      ExcelBuffer.CreateSheet(ExcelSheetName,ExcelSheetName,'','');
      ExcelBuffer.GiveUserControl;
      CLEAR(ExcelBuffer);
    END;

    PROCEDURE CreateExcelBuffer@1000000004();
    BEGIN
      ExcelBuffer.DELETEALL;
      CLEAR(ExcelBuffer);
    END;

    PROCEDURE LookupStatusList@1100281003(VAR StatusNo@1100281002 : Integer);
    VAR
      lProcessStatus@1100281001 : Record 50042;
      lProcessStatusList@1100281000 : Form 50133;
    BEGIN
      ProviderSetup.TESTFIELD("Provider Process Code");
      lProcessStatus.SETRANGE("Process Code",ProviderSetup."Provider Process Code");
      lProcessStatusList.SETTABLEVIEW(lProcessStatus);
      lProcessStatusList.LOOKUPMODE(TRUE);
      IF lProcessStatusList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        lProcessStatusList.GETRECORD(lProcessStatus);
        StatusNo := lProcessStatus."Status No.";
      END;
    END;

    BEGIN
    {
      /** @r IMH01 @d 15/10/13 @a ISAT.ST @v IMH6.01.353 @s Reorganisation region IMH @h 4760 @c Renommage CR / AR / R‚gion */
    }
    END.
  }
  RDLDATA
  {
  }
}