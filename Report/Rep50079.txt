OBJECT Report 50079 Report 510: Etat des priorit‚s
{
  OBJECT-PROPERTIES
  {
    Date=15/10/13;
    Time=16:10:19;
    Modified=Yes;
    Version List=IMH6.01.08;
  }
  PROPERTIES
  {
    CaptionML=FRA=Report 510: Etat des priorit‚s;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   ProviderSetup.GET;
                 END;

    OnPreReport=BEGIN
                  IF NbProvider = 0 THEN
                    ERROR(Text001);
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table50000;
        DataItemTableView=SORTING(No.);
        OnPreDataItem=BEGIN
                        Window.OPEN(Text010,Provider."No.");

                        PriorityFilter := GETFILTER(Priority);
                        TerritoryFilter := GETFILTER("IMH Territory Code");
                        RCFilter  := GETFILTER("Regional Coordinator");

                        CreateExcelBuffer;
                        InitValues;

                        RowNo := 2;
                        InsertRow(RowNo,1,Text020,'','');
                        InsertRow(RowNo + 1,1,Text021,'','');
                        InsertRow(RowNo + 2,1,Text022,'','');

                        InsertRow(RowNo,2,PriorityFilter,'','');
                        InsertRow(RowNo + 1,2,TerritoryFilter,'','');
                        InsertRow(RowNo + 2,2,RCFilter,'','');

                        RowNo := StartRowNo;
                        ColNo := StartColNo;

                        InsertRow(RowNo,ColNo,Text030,'','');
                        InsertRow(RowNo,ColNo + 1,Text031,'','');
                        InsertRow(RowNo,ColNo + 2,Text032,'','');
                        InsertRow(RowNo,ColNo + 3,Text033,'','');

                        Cpt := 0;
                      END;

        OnAfterGetRecord=BEGIN
                           Window.UPDATE;

                           RowNo := RowNo + 1;
                           InsertRow(RowNo,ColNo,"No.",'','');
                           InsertRow(RowNo,ColNo + 1,Provider.Name,'','');
                           InsertRow(RowNo,ColNo + 2,FORMAT("Priority Start Date"),'','');
                           InsertRow(RowNo,ColNo + 3,FORMAT("Priority End Date"),'','');

                           Cpt := Cpt + 1;
                           IF Cpt >= NbProvider THEN
                             CurrReport.BREAK;
                         END;

        OnPostDataItem=BEGIN
                         RowNo := RowNo + 1;
                         InsertRow(RowNo,ColNo,Text034,'','');
                         InsertRow(RowNo,ColNo + 1,FORMAT(Cpt),'','');

                         Window.CLOSE;

                         ViewExcel;
                       END;

        ReqFilterFields=Priority,Regional Coordinator,IMH Territory Code;
      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=5940;
      Height=1320;
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100281012;TextBox;3630 ;330  ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Number of Provider;
                                                              FRA=Nombre de prestataire];
                                                   SourceExpr=NbProvider;
                                                   MinValue=1;
                                                   MaxValue=5000 }
      { 1100281013;Label  ;220  ;330  ;3300 ;440  ;ParentControl=1100281012 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100281000;;Container;
                  ContainerType=ContentArea }

      { 1100281001;1;Group  ;
                  CaptionML=[ENU=Options;
                             FRA=Options];
                  GroupType=Group }

      { 1100281002;2;Field  ;
                  CaptionML=[ENU=Number of Provider;
                             FRA=Nombre de prestataire];
                  SourceExpr=NbProvider }

    }
  }
  CODE
  {
    VAR
      ProviderSetup@1100281003 : Record 50011;
      ExcelBuffer@1100281016 : TEMPORARY Record 370;
      Window@1100281018 : Dialog;
      Text000@1100281012 : TextConst 'ENU=Excel not found.;FRA=Programme Excel non trouv‚.';
      Text001@1100281007 : TextConst 'ENU=Please enter provider number.;FRA=Veuillez saisir le nombre de prestataire … afficher.';
      PriorityFilter@1100281008 : Text[200];
      RCFilter@1100281009 : Text[200];
      TerritoryFilter@1100281010 : Text[200];
      NbProvider@1100281013 : Integer;
      ExcelTemplatePath@1100281024 : Text[250];
      ExcelSheetName@1100281025 : Text[50];
      StartRowNo@1100281023 : Integer;
      StartColNo@1100281020 : Integer;
      RowNo@1100281017 : Integer;
      ColNo@1100281026 : Integer;
      Text010@1100281000 : TextConst 'ENU=Provider No. : #1##############;FRA=Nø prestataire : #1##############';
      Cpt@1100281001 : Integer;
      Text020@1100281015 : TextConst 'ENU=Priority;FRA=Priorit‚';
      Text021@1100281014 : TextConst 'ENU=Territory;FRA=Zone';
      Text022@1100281011 : TextConst 'ENU=Area Responsible;FRA=Responsable de zone';
      Text030@1100281002 : TextConst 'ENU=Provider No.;FRA=Nø prestataire';
      Text031@1100281004 : TextConst 'ENU=Provider Name;FRA=Nom du prestataire';
      Text032@1100281005 : TextConst 'ENU=Starting Date;FRA=Date d‚but';
      Text033@1100281006 : TextConst 'ENU=Ending Date;FRA=Date fin';
      Text034@1100281019 : TextConst 'ENU=Total;FRA=Total';

    PROCEDURE InitValues@1100281005();
    VAR
      lReportSetup@1100281000 : Record 50115;
      lFound@1100281001 : Boolean;
      lReportID@1100281002 : Integer;
    BEGIN
      lReportID := 50079;
      lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,USERID);
      IF NOT lFound THEN
        lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,'');

      IF lFound THEN BEGIN
        ExcelTemplatePath := lReportSetup."Excel Template Path";
        ExcelSheetName := lReportSetup."Excel Template Tabs";
        StartRowNo := lReportSetup."First Line";
        StartColNo := lReportSetup."First Column";
      END ELSE BEGIN
        ExcelTemplatePath := '';
        ExcelSheetName  := 'Page1';
      END;

      IF StartRowNo <= 0 THEN
        StartRowNo := 8;

      IF StartColNo <= 0 THEN
        StartColNo := 1;
    END;

    PROCEDURE InsertRow@1100281004(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250];CellFormula@1100281000 : Text[250];NbFormat@1000000003 : Text[30]);
    BEGIN
      ExcelBuffer.INIT;
      ExcelBuffer.VALIDATE("Row No.",RowNo);
      ExcelBuffer.VALIDATE("Column No.",ColumnNo);
      ExcelBuffer."Cell Value as Text" := CellValue;
      ExcelBuffer.NumberFormat := NbFormat;
      ExcelBuffer.Formula := CellFormula; //'';
      ExcelBuffer.INSERT;
    END;

    PROCEDURE GetCurrCellID@1100281000() : Text[20];
    BEGIN
      EXIT(ExcelBuffer.xlColID + ExcelBuffer.xlRowID);
    END;

    PROCEDURE ViewExcel@1000000002();
    BEGIN

      IF ExcelTemplatePath <> '' THEN
        ExcelBuffer.OpenBook(ExcelTemplatePath,ExcelSheetName)
      ELSE
        ExcelBuffer.CreateBook;

      ExcelBuffer.CreateSheet(ExcelSheetName,ExcelSheetName,'','');
      ExcelBuffer.GiveUserControl;
      CLEAR(ExcelBuffer);
    END;

    PROCEDURE CreateExcelBuffer@1000000004();
    BEGIN
      ExcelBuffer.DELETEALL;
      CLEAR(ExcelBuffer);
    END;

    BEGIN
    {
      /** @r IMH01 @d 14/10/13 @a ISAT.ST @v IMH6.01.353 @s Reorganisation region IMH @h 4760 @c Renommage CR / AR / R‚gion */
    }
    END.
  }
  RDLDATA
  {
  }
}