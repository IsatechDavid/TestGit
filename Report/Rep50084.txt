OBJECT Report 50084 Report 56 : Provider Mesh
{
  OBJECT-PROPERTIES
  {
    Date=09/01/12;
    Time=08:54:56;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=FRA=Report 56 : Tableau de maillage r‚seau;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   ProviderSetup.GET;
                 END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table284;
        OnAfterGetRecord=BEGIN
                           CurrReport.BREAK;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemTable=Table50000;
        OnAfterGetRecord=BEGIN
                           CurrReport.BREAK;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemTable=Table50032;
        OnAfterGetRecord=BEGIN
                           CurrReport.BREAK;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemTable=Table50152;
        OnPreDataItem=BEGIN
                        //NAFilter := Provider.GETFILTER("Network Assistant");
                        //TerritoryFilter := Provider.GETFILTER("IMH Territory Code");

                        IF (Area.GETFILTERS <> '') THEN
                        BEGIN
                          "Mesh Goal".SETFILTER("Area Code",Area.GETFILTER(Code));
                          "Mesh Goal".SETFILTER("IMH Territory Code",Area.GETFILTER("IMH Territory Code"));
                          "Mesh Goal".SETFILTER("Admin. Territory Code",Area.GETFILTER("Admin. Territory Code"));
                        END;
                        "Mesh Goal".SETFILTER("Geo. Reference Code",'<>%1','');

                        BufferProvCitySpec.RESET;
                        BufferProvCitySpec.DELETEALL;
                        GeoRefBuffer.DELETEALL;
                        Window.OPEN(Text010);
                        GProvider.COPYFILTERS(Provider);
                      END;

        OnAfterGetRecord=VAR
                           lLevel@1100281000 : Option;
                         BEGIN
                           GeoRefBuffer.Code := "Geo. Reference Code";
                           GeoRefBuffer.Description := City;
                           IF GeoRefBuffer.INSERT THEN;
                         END;

        OnPostDataItem=BEGIN
                         MakeBuffer;
                         Window.CLOSE;

                         ExportToExcel;
                       END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=5940;
      Height=1100;
      SaveValues=Yes;
    }
    CONTROLS
    {
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      ProviderSetup@1100281003 : Record 50011;
      TempProvider@1100281039 : TEMPORARY Record 50000;
      TempServIntervLine@1100281038 : TEMPORARY Record 50075;
      ExcelBuffer@1100281016 : TEMPORARY Record 370;
      Window@1100281018 : Dialog;
      Text000@1100281012 : TextConst 'ENU=Excel not found.;FRA=Programme Excel non trouv‚.';
      Text001@1100281007 : TextConst 'FRA=Veuillez saisir le statut processus d‚part.';
      Text002@1100281008 : TextConst 'FRA=Veuillez saisir le statut processus arriv‚e.';
      Text003@1100281015 : TextConst 'FRA=Veuillez saisir la date de d‚but.';
      Text004@1100281014 : TextConst 'FRA=Veuillez saisir la date de fin.';
      Text010@1100281019 : TextConst 'ENU=Provider No. : #1##############;FRA=Traitement en cours !';
      Text011@1100281005 : TextConst 'ENU=Status Change Delay To Excel;FRA=D‚lai de changement de statut';
      NAFilter@1100281035 : Text[200];
      TerritoryFilter@1100281036 : Text[200];
      AssignmentTime@1100281037 : Integer;
      ExcelTemplatePath@1100281024 : Text[250];
      ExcelSheetName@1100281025 : Text[50];
      StartRowNo@1100281023 : Integer;
      StartColNo@1100281020 : Integer;
      Text020@1100281026 : TextConst 'FRA=Sp‚cialit‚';
      Text021@1100281027 : TextConst 'FRA=R‚gion';
      Text022@1100281028 : TextConst 'FRA=D‚partement';
      Text023@1100281029 : TextConst 'FRA=Prestataire';
      RowNo@1100281034 : Integer;
      ColNo@1100281033 : Integer;
      Text030@1100281004 : TextConst 'ENU=Provider No.;FRA=Ville REF';
      Text031@1100281002 : TextConst 'ENU=Provider;FRA=ETAT';
      Text032@1100281017 : TextConst 'ENU=Intervention No.;FRA=TOTAL';
      BufferProvCitySpec@1100281006 : TEMPORARY Record 50006;
      ProvSpec@1100281022 : Record 50006;
      AbilityGeoProv@1100281009 : Record 50016;
      MeshGoalDet@1100281010 : Record 50152;
      GProvider@1100281011 : Record 50000;
      TradeFilter@1100281021 : Text[250];
      GeoRefBuffer@1100281046 : TEMPORARY Record 50013;
      MeshGoalBuffer@1100281047 : TEMPORARY Record 50152;
      ReportingBuffer@1100281001 : TEMPORARY Record 8016755;
      Text040@1100281000 : TextConst 'FRA=Besoin';
      Text041@1100281030 : TextConst 'FRA=Reel';
      Text042@1100281031 : TextConst 'FRA=Delta';
      TotalDepBuffer@1100281032 : TEMPORARY Record 8016755;

    PROCEDURE InitValues@1100281005();
    VAR
      lReportSetup@1100281000 : Record 50115;
      lFound@1100281001 : Boolean;
      lReportID@1100281002 : Integer;
    BEGIN
      lReportID := 50084;
      lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,USERID);
      IF NOT lFound THEN
        lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,'');

      IF lFound THEN BEGIN
        ExcelTemplatePath := lReportSetup."Excel Template Path";
        ExcelSheetName := lReportSetup."Excel Template Tabs";
        StartRowNo := lReportSetup."First Line";
        StartColNo := lReportSetup."First Column";
      END ELSE BEGIN
        ExcelTemplatePath := '';
        ExcelSheetName  := 'Page1';
      END;

      IF StartRowNo <= 0 THEN
        StartRowNo := 8;

      IF StartColNo <= 0 THEN
        StartColNo := 1;
    END;

    PROCEDURE MakeBuffer@1100281010();
    BEGIN
      WITH GeoRefBuffer DO
      BEGIN
        IF GeoRefBuffer.FINDSET THEN
        REPEAT
          TradeFilter := '';
          MeshGoalDet.RESET;
          MeshGoalDet.SETRANGE("Geo. Reference Code",GeoRefBuffer.Code);
          IF ("Building Trade".GETFILTER("No.") <> '') THEN
            MeshGoalDet.SETFILTER("Building Trade No.","Building Trade".GETFILTER("No."))
          ELSE
            MeshGoalDet.SETFILTER("Building Trade No.",'<>%1','');
          IF MeshGoalDet.FINDSET THEN
          REPEAT
            IF (TradeFilter <> '') THEN
              TradeFilter += '|';
            TradeFilter += MeshGoalDet."Building Trade No.";
          UNTIL (MeshGoalDet.NEXT = 0);
          ProvSpec.SETFILTER("Building Trade No.",TradeFilter);


          Window.UPDATE;
          AbilityGeoProv.RESET;
          AbilityGeoProv.SETCURRENTKEY("End Ref. Geo. Code");
          AbilityGeoProv.SETRANGE("End Ref. Geo. Code",GeoRefBuffer.Code);
          IF AbilityGeoProv.FINDSET THEN
          REPEAT
            GProvider.SETRANGE("No.",AbilityGeoProv."Provider No.");
            IF NOT GProvider.ISEMPTY THEN
            BEGIN
              GProvider.FINDFIRST;
              ProvSpec.SETRANGE("Provider No.",GProvider."No.");
              IF NOT ProvSpec.ISEMPTY THEN
              BEGIN
                ProvSpec.FINDSET;
                REPEAT
                  BufferProvCitySpec."Provider No." := GProvider."No.";
                  BufferProvCitySpec."Building Trade No." := ProvSpec."Building Trade No.";
                  //BufferProvCitySpec."Geo. Reference Code" := GeoRefBuffer.Code;
                  BufferProvCitySpec."Search Specialization Descrip." := GeoRefBuffer.Code;
                  IF BufferProvCitySpec.INSERT THEN;
                UNTIL (ProvSpec.NEXT = 0);
              END;
            END;
          UNTIL (AbilityGeoProv.NEXT = 0);
        UNTIL (GeoRefBuffer.NEXT = 0);
      END;

      "Mesh Goal".FINDSET;
      REPEAT
        BufferProvCitySpec.SETRANGE("Building Trade No.","Mesh Goal"."Building Trade No.");
        //BufferProvCitySpec.SETRANGE("Geo. Reference Code","Mesh Goal"."Geo. Reference Code");
        BufferProvCitySpec.SETRANGE("Search Specialization Descrip.","Mesh Goal"."Geo. Reference Code");
        IF NOT BufferProvCitySpec.ISEMPTY THEN
        BEGIN
          IF BufferProvCitySpec.FINDSET THEN
          REPEAT
            ReportingBuffer.SETRANGE("Code 1","Mesh Goal"."Building Trade No.");
            ReportingBuffer.SETRANGE("Code 2","Mesh Goal"."Geo. Reference Code");
            IF ReportingBuffer.ISEMPTY THEN
            BEGIN
              ReportingBuffer."Code 1" := "Mesh Goal"."Building Trade No.";
              ReportingBuffer."Code 2" := "Mesh Goal"."Geo. Reference Code";
              ReportingBuffer."Data Text 1" := "Mesh Goal".City;
              ReportingBuffer."Data Code 1" := COPYSTR("Mesh Goal"."Geo. Reference Code",1,2);
              ReportingBuffer."Data Amount 1" := "Mesh Goal".Goal;
              ReportingBuffer."Data Amount 2" := 0;
              ReportingBuffer.INSERT;
            END ELSE
              ReportingBuffer.FINDSET;
            ReportingBuffer."Data Amount 2" += 1;
            ReportingBuffer.MODIFY;

            TotalDepBuffer.SETRANGE("Code 1","Mesh Goal"."Building Trade No.");
            TotalDepBuffer.SETRANGE("Code 2",COPYSTR("Mesh Goal"."Geo. Reference Code",1,2));
            IF TotalDepBuffer.ISEMPTY THEN
            BEGIN
              TotalDepBuffer.INIT;
              TotalDepBuffer."Code 1" := "Mesh Goal"."Building Trade No.";
              TotalDepBuffer."Code 2" := COPYSTR("Mesh Goal"."Geo. Reference Code",1,2);
              TotalDepBuffer."Data Text 1" := 'Dep : ' + FORMAT(TotalDepBuffer."Code 2");
              MeshGoalDet.RESET;
              MeshGoalDet.SETRANGE("Building Trade No.","Mesh Goal"."Building Trade No.");
              MeshGoalDet.SETRANGE("Area Code",COPYSTR("Mesh Goal"."Geo. Reference Code",1,2));
              IF MeshGoalDet.FINDSET THEN
              REPEAT
                TotalDepBuffer."Data Amount 1" += "Mesh Goal".Goal;
              UNTIL (MeshGoalDet.NEXT = 0);
              TotalDepBuffer."Data Amount 2" := 0;
              TotalDepBuffer.INSERT;
            END ELSE
              TotalDepBuffer.FINDSET;
            TotalDepBuffer."Data Amount 2" += 1;
            TotalDepBuffer.MODIFY;

          UNTIL (BufferProvCitySpec.NEXT = 0);
        END;
      UNTIL ("Mesh Goal".NEXT = 0);
    END;

    PROCEDURE ExportToExcel@1100281001();
    VAR
      lDate@1100281006 : Record 2000000007;
      lValue@1100281002 : Decimal;
      lCpt@1100281000 : Integer;
      lEntryNo@1100281008 : Integer;
      lFromCellID@1100281010 : Text[20];
      lToCellID@1100281012 : Text[20];
      lFirstRowNo@1100281013 : Integer;
      lWeekNo@1100281011 : Integer;
      lDayNo@1100281016 : Integer;
      lEndWeekNo@1100281017 : Integer;
      lEndDayNo@1100281018 : Integer;
      lPrevWeekNo@1100281014 : Integer;
      lLen@1100281015 : Integer;
      lCellID@1100281019 : Text[10];
      lCol@1100281001 : Integer;
      lBuildingTrade@1100281003 : Record 50032;
      lTotal@1100281004 : ARRAY [3] OF Decimal;
      lTer@1100281005 : Text[30];
    BEGIN
      InitValues;

      RowNo := 2;
      InsertRow(RowNo,1,Text020 + ': ' + "Building Trade".GETFILTERS,'','');
      InsertRow(RowNo + 1,1,Text021 + ': ' + Area.GETFILTER("Admin. Territory Code"),'','');
      InsertRow(RowNo + 2,1,Text022 + ': ' + Area.GETFILTER(Code),'','');
      InsertRow(RowNo + 3,1,Text023 + ': ' + Provider.GETFILTERS,'','');
      RowNo := 6;

      IF (StartRowNo > 6) THEN
        RowNo := StartRowNo;
      ColNo := StartColNo;

      InsertRow(RowNo,ColNo,Text030,'','');
      InsertRow(RowNo,ColNo + 1,Text031,'','');
      lCol := ColNo + 2;
      lBuildingTrade.FINDSET;
      REPEAT
        InsertRow(RowNo,lCol,lBuildingTrade.Description,'','');
        lCol += 1;
      UNTIL (lBuildingTrade.NEXT = 0);

      InsertRow(RowNo,lCol,Text032,'','');

      ColNo := StartColNo;
      RowNo += 1;
      GeoRefBuffer.RESET;
      IF GeoRefBuffer.FINDSET THEN
      REPEAT
        IF (lTer = '') THEN
          lTer := COPYSTR(GeoRefBuffer.Code,1,2);
        IF (lTer <> COPYSTR(GeoRefBuffer.Code,1,2)) THEN
        BEGIN
          InsertRow(RowNo,ColNo,'Dep : ' + lTer,'','');
          InsertRow(RowNo+1,ColNo,'Dep : ' + lTer,'','');
          InsertRow(RowNo+2,ColNo,'Dep : ' + lTer,'','');
          InsertRow(RowNo,ColNo+1,Text040,'','');
          InsertRow(RowNo+1,ColNo+1,Text041,'','');
          InsertRow(RowNo+2,ColNo+1,Text042,'','');
          lCol := ColNo + 2;
          lTotal[1] := 0;
          lTotal[2] := 0;
          lBuildingTrade.FINDSET;
          REPEAT
            TotalDepBuffer.RESET;
            TotalDepBuffer.SETRANGE("Code 1",lBuildingTrade."No.");
            TotalDepBuffer.SETRANGE("Code 2",lTer);
            IF TotalDepBuffer.FINDFIRST THEN
            BEGIN
              InsertRow(RowNo,lCol,FORMAT(TotalDepBuffer."Data Amount 1"),'','');
              InsertRow(RowNo+1,lCol,FORMAT(TotalDepBuffer."Data Amount 2"),'','');
              InsertRow(RowNo+2,lCol,FORMAT(TotalDepBuffer."Data Amount 2" - TotalDepBuffer."Data Amount 1"),'','');
              lTotal[1] += TotalDepBuffer."Data Amount 1";
              lTotal[2] += TotalDepBuffer."Data Amount 2";
            END;
            lCol += 1;
          UNTIL (lBuildingTrade.NEXT = 0);

          InsertRow(RowNo,lCol,FORMAT(lTotal[1]),'','');
          InsertRow(RowNo+1,lCol,FORMAT(lTotal[2]),'','');
          InsertRow(RowNo+2,lCol,FORMAT(lTotal[2] - lTotal[1]),'','');
          RowNo += 3;
          lTer := COPYSTR(GeoRefBuffer.Code,1,2);
        END;

        InsertRow(RowNo,ColNo,GeoRefBuffer.Description,'','');
        InsertRow(RowNo+1,ColNo,GeoRefBuffer.Description,'','');
        InsertRow(RowNo+2,ColNo,GeoRefBuffer.Description,'','');
        InsertRow(RowNo,ColNo+1,Text040,'','');
        InsertRow(RowNo+1,ColNo+1,Text041,'','');
        InsertRow(RowNo+2,ColNo+1,Text042,'','');
        lCol := ColNo + 2;
        lTotal[1] := 0;
        lTotal[2] := 0;
        lBuildingTrade.FINDSET;
        REPEAT
          ReportingBuffer.RESET;
          ReportingBuffer.SETRANGE("Code 1",lBuildingTrade."No.");
          ReportingBuffer.SETRANGE("Code 2",GeoRefBuffer.Code);
          IF ReportingBuffer.FINDFIRST THEN
          BEGIN
            InsertRow(RowNo,lCol,FORMAT(ReportingBuffer."Data Amount 1"),'','');
            InsertRow(RowNo+1,lCol,FORMAT(ReportingBuffer."Data Amount 2"),'','');
            InsertRow(RowNo+2,lCol,FORMAT(ReportingBuffer."Data Amount 2" - ReportingBuffer."Data Amount 1"),'','');
            lTotal[1] += ReportingBuffer."Data Amount 1";
            lTotal[2] += ReportingBuffer."Data Amount 2";
          END;
          lCol += 1;
        UNTIL (lBuildingTrade.NEXT = 0);
        InsertRow(RowNo,lCol,FORMAT(lTotal[1]),'','');
        InsertRow(RowNo+1,lCol,FORMAT(lTotal[2]),'','');
        InsertRow(RowNo+2,lCol,FORMAT(lTotal[2] - lTotal[1]),'','');
        RowNo += 3;

      UNTIL (GeoRefBuffer.NEXT= 0);

      InsertRow(RowNo,ColNo,'Dep : ' + lTer,'','');
      InsertRow(RowNo+1,ColNo,'Dep : ' + lTer,'','');
      InsertRow(RowNo+2,ColNo,'Dep : ' + lTer,'','');
      InsertRow(RowNo,ColNo+1,Text040,'','');
      InsertRow(RowNo+1,ColNo+1,Text041,'','');
      InsertRow(RowNo+2,ColNo+1,Text042,'','');
      lCol := ColNo + 2;
      lTotal[1] := 0;
      lTotal[2] := 0;
      lBuildingTrade.FINDSET;
      REPEAT
        TotalDepBuffer.RESET;
        TotalDepBuffer.SETRANGE("Code 1",lBuildingTrade."No.");
        TotalDepBuffer.SETRANGE("Code 2",lTer);
        IF TotalDepBuffer.FINDFIRST THEN
        BEGIN
          InsertRow(RowNo,lCol,FORMAT(TotalDepBuffer."Data Amount 1"),'','');
          InsertRow(RowNo+1,lCol,FORMAT(TotalDepBuffer."Data Amount 2"),'','');
          InsertRow(RowNo+2,lCol,FORMAT(TotalDepBuffer."Data Amount 2" - TotalDepBuffer."Data Amount 1"),'','');
          lTotal[1] += TotalDepBuffer."Data Amount 1";
          lTotal[2] += TotalDepBuffer."Data Amount 2";
        END;
        lCol += 1;
      UNTIL (lBuildingTrade.NEXT = 0);
      InsertRow(RowNo,lCol,FORMAT(lTotal[1]),'','');
      InsertRow(RowNo+1,lCol,FORMAT(lTotal[2]),'','');
      InsertRow(RowNo+2,lCol,FORMAT(lTotal[2] - lTotal[1]),'','');
      RowNo += 3;
      lTer := COPYSTR(GeoRefBuffer.Code,1,2);

      ViewExcel;
    END;

    PROCEDURE InsertRow@1100281004(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250];CellFormula@1100281000 : Text[250];NbFormat@1000000003 : Text[30]);
    BEGIN
      ExcelBuffer.INIT;
      ExcelBuffer.VALIDATE("Row No.",RowNo);
      ExcelBuffer.VALIDATE("Column No.",ColumnNo);
      ExcelBuffer."Cell Value as Text" := CellValue;
      ExcelBuffer.NumberFormat := NbFormat;
      ExcelBuffer.Formula := CellFormula; //'';
      ExcelBuffer.INSERT;
    END;

    PROCEDURE GetCurrCellID@1100281000() : Text[20];
    BEGIN
      EXIT(ExcelBuffer.xlColID + ExcelBuffer.xlRowID);
    END;

    PROCEDURE ViewExcel@1000000002();
    BEGIN

      IF ExcelTemplatePath <> '' THEN
        ExcelBuffer.OpenBook(ExcelTemplatePath,ExcelSheetName)
      ELSE
        ExcelBuffer.CreateBook;

      ExcelBuffer.CreateSheet(ExcelSheetName,ExcelSheetName,'','');
      ExcelBuffer.GiveUserControl;
      CLEAR(ExcelBuffer);
    END;

    PROCEDURE CreateExcelBuffer@1000000004();
    BEGIN
      ExcelBuffer.DELETEALL;
      CLEAR(ExcelBuffer);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}