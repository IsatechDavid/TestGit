OBJECT Report 50088 Report 53:Taux de r‚cl. conso
{
  OBJECT-PROPERTIES
  {
    Date=09/01/12;
    Time=16:52:20;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=FRA=Report 53 : Taux de r‚clamation consolid‚;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   ProviderSetup.GET;
                 END;

    OnPreReport=BEGIN
                  IF StartDate = 0D THEN
                    ERROR(Text003);

                  IF EndDate = 0D THEN
                    ERROR(Text004);

                  Filters := "Service Intervention Line".GETFILTERS;

                  RefDate := WORKDATE;

                  RefDateTime[1] := CREATEDATETIME(RefDate,0T);
                  RefDateTime[2] := CREATEDATETIME(CALCDATE('<-6M>',RefDate),0T);
                  RefDateTime[3] := CREATEDATETIME(CALCDATE('<-12M>',RefDate),0T);
                  RefDateTime[4] := CREATEDATETIME(CALCDATE('<-24M>',RefDate),0T);
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table50075;
        DataItemTableView=SORTING(Assigned Date,Provider No.,Intervention Status,Closed,Multi specialities);
        OnPreDataItem=BEGIN

                        SETRANGE("Assigned Date",StartDate,EndDate);
                        SETFILTER("Intervention Status",'<>%1',"Intervention Status"::Cancel);

                        TotalCpt := COUNT;
                        Window.OPEN(Text010);
                      END;

        OnAfterGetRecord=VAR
                           lLevel@1100281000 : Option;
                           lDate@1100281001 : Date;
                           lNbClaims@1100281002 : Integer;
                           lNbInterv@1100281003 : Integer;
                         BEGIN
                           CurrCpt += 1;
                           IF CurrCpt >= 10 THEN BEGIN
                             Cpt += CurrCpt;
                             Window.UPDATE(1,ROUND(Cpt / TotalCpt * 9999,1));
                             CurrCpt := 0;
                           END;

                           lDate := CALCDATE('<-CM>',DT2DATE("Creation Date"));

                           CLEAR(NbClaims);
                           IF Claim THEN BEGIN
                             IF ClaimServHeader.GET(ClaimServHeader."Document Type"::Invoice,"Service Header Claims No.") THEN BEGIN
                               IF ClaimServHeader."Creation Date" <= RefDateTime[1] THEN
                                 NbClaims[1] := 1;

                               IF ClaimServHeader."Creation Date" <= RefDateTime[2] THEN
                                 NbClaims[2] := 1;

                               IF ClaimServHeader."Creation Date" <= RefDateTime[3] THEN
                                 NbClaims[3] := 1;

                               IF ClaimServHeader."Creation Date" <= RefDateTime[4] THEN
                                 NbClaims[4] := 1;
                             END;
                           END;

                           TempBuffer.RESET;
                           TempBuffer.SETRANGE("Date 1",lDate);
                           IF TempBuffer.FINDFIRST THEN BEGIN
                             TempBuffer."Data Integer 1" := TempBuffer."Data Integer 1" + 1;
                             TempBuffer."Data Amount 1" := TempBuffer."Data Amount 1" + NbClaims[1];
                             TempBuffer."Data Amount 2" := TempBuffer."Data Amount 2" + NbClaims[2];
                             TempBuffer."Data Amount 3" := TempBuffer."Data Amount 3" + NbClaims[3];
                             TempBuffer."Data Amount 4" := TempBuffer."Data Amount 4" + NbClaims[4];
                             TempBuffer.MODIFY;
                           END ELSE BEGIN
                             TempBuffer.INIT;
                             TempBuffer."Date 1" := lDate;
                             TempBuffer."Data Integer 1" := 1;
                             TempBuffer."Data Amount 1" := NbClaims[1];
                             TempBuffer."Data Amount 2" := NbClaims[2];
                             TempBuffer."Data Amount 3" := NbClaims[3];
                             TempBuffer."Data Amount 4" := NbClaims[4];
                             TempBuffer.INSERT;
                           END;
                         END;

        OnPostDataItem=BEGIN
                         Window.CLOSE;

                         ExportToExcel;
                       END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=6490;
      Height=1650;
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100281000;TextBox;3630 ;220  ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Start Date;
                                                              FRA=Date de d‚but];
                                                   BlankZero=Yes;
                                                   SourceExpr=StartDate }
      { 1100281001;Label  ;220  ;220  ;3300 ;440  ;ParentControl=1100281000 }
      { 1100281002;TextBox;3630 ;770  ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=End Year;
                                                              FRA=Date de fin];
                                                   BlankZero=Yes;
                                                   SourceExpr=EndDate }
      { 1100281003;Label  ;220  ;770  ;3300 ;440  ;ParentControl=1100281002 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100281000;;Container;
                  ContainerType=ContentArea }

      { 1100281001;1;Group  ;
                  CaptionML=[ENU=Options;
                             FRA=Options];
                  GroupType=Group }

      { 1100281002;2;Field  ;
                  CaptionML=[ENU=Start Date;
                             FRA=Date de d‚but];
                  BlankZero=Yes;
                  SourceExpr=StartDate }

      { 1100281003;2;Field  ;
                  CaptionML=[ENU=End Year;
                             FRA=Date de fin];
                  BlankZero=Yes;
                  SourceExpr=EndDate }

    }
  }
  CODE
  {
    VAR
      ProviderSetup@1100281003 : Record 50011;
      TempBuffer@1100281001 : TEMPORARY Record 50143;
      ExcelBuffer@1100281016 : TEMPORARY Record 370;
      ClaimServHeader@1100281007 : Record 5900;
      Window@1100281018 : Dialog;
      Text000@1100281012 : TextConst 'ENU=Excel not found.;FRA=Programme Excel non trouv‚.';
      Text003@1100281015 : TextConst 'FRA=Veuillez saisir la date de d‚but.';
      Text004@1100281014 : TextConst 'FRA=Veuillez saisir la date de fin.';
      Text010@1100281019 : TextConst 'FRA=Avancement\@1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Filters@1100281031 : Text[1024];
      ExcelTemplatePath@1100281024 : Text[250];
      ExcelSheetName@1100281025 : Text[50];
      StartRowNo@1100281023 : Integer;
      StartColNo@1100281020 : Integer;
      Text022@1100281029 : TextConst 'ENU=Filters :;FRA=Filtres :';
      Text023@1100281030 : TextConst 'ENU=Period :;FRA=P‚riode :';
      RowNo@1100281034 : Integer;
      ColNo@1100281033 : Integer;
      Text030@1100281004 : TextConst 'FRA=Valeur … date';
      Text031@1100281002 : TextConst 'FRA=Valeur … 6 mois';
      Text032@1100281017 : TextConst 'FRA=Valeur … 12 mois';
      Text033@1100281040 : TextConst 'FRA=Valeur … 24 mois';
      StartDate@1100281039 : Date;
      EndDate@1100281056 : Date;
      TotalCpt@1100281055 : Integer;
      Cpt@1100281054 : Integer;
      CurrCpt@1100281053 : Integer;
      RefDate@1100281011 : Date;
      RefDateTime@1100281008 : ARRAY [4] OF DateTime;
      NbClaims@1100281013 : ARRAY [4] OF Integer;

    PROCEDURE InitValues@1100281005();
    VAR
      lReportSetup@1100281000 : Record 50115;
      lFound@1100281001 : Boolean;
      lReportID@1100281002 : Integer;
    BEGIN
      lReportID := 50088;
      lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,USERID);
      IF NOT lFound THEN
        lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,'');

      IF lFound THEN BEGIN
        ExcelTemplatePath := lReportSetup."Excel Template Path";
        ExcelSheetName := lReportSetup."Excel Template Tabs";
        StartRowNo := lReportSetup."First Line";
        StartColNo := lReportSetup."First Column";
      END ELSE BEGIN
        ExcelTemplatePath := '';
        ExcelSheetName  := 'Page1';
      END;

      IF StartRowNo <= 0 THEN
        StartRowNo := 8;

      IF StartColNo <= 0 THEN
        StartColNo := 1;
    END;

    PROCEDURE ExportToExcel@1100281001();
    VAR
      lDate@1100281002 : Record 2000000007;
      lNotFoundPct@1100281001 : Decimal;
      lDeprivationPct@1100281000 : Decimal;
      lValues@1100281003 : ARRAY [4] OF Decimal;
    BEGIN
      InitValues;

      RowNo := 3;
      InsertRow(RowNo,1,Text023,'','');
      InsertRow(RowNo,2,STRSUBSTNO('%1 - %2',StartDate,EndDate),'','');

      RowNo := StartRowNo;
      ColNo := StartColNo;

      InsertRow(RowNo + 1,ColNo,Text030,'','');
      InsertRow(RowNo + 2,ColNo,Text031,'','');
      InsertRow(RowNo + 3,ColNo,Text032,'','');
      InsertRow(RowNo + 4,ColNo,Text033,'','');

      lDate.SETRANGE("Period Type",lDate."Period Type"::Month);
      lDate.SETRANGE("Period Start",StartDate,EndDate);
      IF lDate.FINDSET THEN BEGIN
        REPEAT
          CLEAR(lValues);
          ColNo := ColNo + 1;
          InsertRow(RowNo,ColNo,FORMAT(lDate."Period Start",8,'<Month Text,3> <Year4>'),'','');

          TempBuffer.RESET;
          TempBuffer.SETRANGE("Date 1",lDate."Period Start");
          IF TempBuffer.FINDFIRST THEN BEGIN
            IF TempBuffer."Data Integer 1" <> 0 THEN  BEGIN
              lValues[1] := ROUND(TempBuffer."Data Amount 1" / TempBuffer."Data Integer 1" * 100,0.01);
              lValues[2] := ROUND(TempBuffer."Data Amount 2" / TempBuffer."Data Integer 1" * 100,0.01);
              lValues[3] := ROUND(TempBuffer."Data Amount 3" / TempBuffer."Data Integer 1" * 100,0.01);
              lValues[4] := ROUND(TempBuffer."Data Amount 4" / TempBuffer."Data Integer 1" * 100,0.01);
            END;
          END;

          InsertRow(RowNo + 1,ColNo,FORMAT(lValues[1]),'','');
          InsertRow(RowNo + 2,ColNo,FORMAT(lValues[2]),'','');
          InsertRow(RowNo + 3,ColNo,FORMAT(lValues[3]),'','');
          InsertRow(RowNo + 4,ColNo,FORMAT(lValues[4]),'','');
        UNTIL lDate.NEXT = 0;
      END;


      ViewExcel;
    END;

    PROCEDURE InsertRow@1100281004(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250];CellFormula@1100281000 : Text[250];NbFormat@1000000003 : Text[30]);
    BEGIN
      ExcelBuffer.INIT;
      ExcelBuffer.VALIDATE("Row No.",RowNo);
      ExcelBuffer.VALIDATE("Column No.",ColumnNo);
      ExcelBuffer."Cell Value as Text" := CellValue;
      ExcelBuffer.NumberFormat := NbFormat;
      ExcelBuffer.Formula := CellFormula; //'';
      ExcelBuffer.INSERT;
    END;

    PROCEDURE GetCurrCellID@1100281000() : Text[20];
    BEGIN
      EXIT(ExcelBuffer.xlColID + ExcelBuffer.xlRowID);
    END;

    PROCEDURE ViewExcel@1000000002();
    BEGIN

      IF ExcelTemplatePath <> '' THEN
        ExcelBuffer.OpenBook(ExcelTemplatePath,ExcelSheetName)
      ELSE
        ExcelBuffer.CreateBook;

      ExcelBuffer.CreateSheet(ExcelSheetName,ExcelSheetName,'','');
      ExcelBuffer.GiveUserControl;
      CLEAR(ExcelBuffer);
    END;

    PROCEDURE CreateExcelBuffer@1000000004();
    BEGIN
      ExcelBuffer.DELETEALL;
      CLEAR(ExcelBuffer);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}