OBJECT Report 50089 Report 52:Taux de r‚clamation
{
  OBJECT-PROPERTIES
  {
    Date=15/10/13;
    Time=18:21:31;
    Modified=Yes;
    Version List=IMH6.01.08;
  }
  PROPERTIES
  {
    CaptionML=FRA=Report 52:Taux de r‚clamation;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   ProviderSetup.GET;
                 END;

    OnPreReport=BEGIN
                  Filters := Provider.GETFILTERS + ' ' + "Service Intervention Line".GETFILTERS;

                  NationalClaimRate := ProviderSetup."National Target Claim Rate";
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table50000;
        OnPreDataItem=BEGIN
                        TotalCpt := COUNT;
                        Window.OPEN(Text010);
                      END;

        OnAfterGetRecord=BEGIN
                           CurrCpt += 1;
                           IF CurrCpt >= 10 THEN BEGIN
                             Cpt += CurrCpt;
                             Window.UPDATE(1,ROUND(Cpt / TotalCpt * 9999,1));
                             CurrCpt := 0;
                           END;
                         END;

        OnPostDataItem=BEGIN
                         Window.CLOSE;

                         ExportToExcel;
                       END;

        ReqFilterFields=IMH Territory Code;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table50075;
        DataItemTableView=SORTING(Provider No.,Claim,Assigned Date,Service Header Claims No.);
        OnPreDataItem=BEGIN
                        SETRANGE("Assigned Date",StartDate,EndDate);
                        SETFILTER("Intervention Status",'<>%1',"Intervention Status"::Cancel);
                      END;

        OnAfterGetRecord=VAR
                           lCode1@1100281000 : Code[20];
                         BEGIN

                           CASE GroupBy OF
                             GroupBy::"By Provider" : lCode1 := "Provider No.";
                             GroupBy::"By IMH Territory" : lCode1 := Provider."IMH Territory Code";
                             GroupBy::"By Corporate" : lCode1 := "Corporate No.";
                           END;

                           TempBuffer.RESET;
                           TempBuffer.SETRANGE("Code 1",lCode1);
                           IF TempBuffer.FINDFIRST THEN BEGIN
                             TempBuffer."Data Integer 1" := TempBuffer."Data Integer 1" + 1;
                             IF Claim THEN
                               TempBuffer."Data Integer 2" := TempBuffer."Data Integer 2" + 1;
                             TempBuffer.MODIFY;
                           END ELSE BEGIN
                             TempBuffer.INIT;
                             TempBuffer."Code 1" := lCode1;
                             TempBuffer."Data Integer 1" := 1;
                             IF Claim THEN
                               TempBuffer."Data Integer 2" := 1;

                             TempBuffer.INSERT;
                           END;
                         END;

        ReqFilterFields=Corporate No.,Corporate Region Code;
        DataItemLink=Provider No.=FIELD(No.);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=6930;
      Height=2750;
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100281000;TextBox;3630 ;220  ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Start Date;
                                                              FRA=Date de d‚but];
                                                   BlankZero=Yes;
                                                   SourceExpr=StartDate }
      { 1100281001;Label  ;220  ;220  ;3300 ;440  ;ParentControl=1100281000 }
      { 1100281002;TextBox;3630 ;770  ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=End Year;
                                                              FRA=Date de fin];
                                                   BlankZero=Yes;
                                                   SourceExpr=EndDate }
      { 1100281003;Label  ;220  ;770  ;3300 ;440  ;ParentControl=1100281002 }
      { 1100281004;TextBox;3630 ;1540 ;2530 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Group;
                                                              FRA=Regrouper];
                                                   OptionCaptionML=[ENU=By Provider,By IMH Territory,By Corporate;
                                                                    FRA=Par prestataire,Par zone IMH,Par grand compte];
                                                   OptionString=By Provider,By IMH Territory,By Corporate;
                                                   SourceExpr=GroupBy }
      { 1100281005;Label  ;220  ;1540 ;3300 ;440  ;ParentControl=1100281004 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100281000;;Container;
                  ContainerType=ContentArea }

      { 1100281001;1;Group  ;
                  CaptionML=[ENU=Options;
                             FRA=Options];
                  GroupType=Group }

      { 1100281002;2;Field  ;
                  CaptionML=[ENU=Start Date;
                             FRA=Date de d‚but];
                  BlankZero=Yes;
                  SourceExpr=StartDate }

      { 1100281003;2;Field  ;
                  CaptionML=[ENU=End Year;
                             FRA=Date de fin];
                  BlankZero=Yes;
                  SourceExpr=EndDate }

      { 1100281004;2;Field  ;
                  CaptionML=[ENU=Group;
                             FRA=Regrouper];
                  OptionCaptionML=[ENU=By Provider,By IMH Zone,By Corporate;
                                   FRA=Par prestataire,Par zone IMH,Par grand compte];
                  SourceExpr=GroupBy }

    }
  }
  CODE
  {
    VAR
      ProviderSetup@1100281003 : Record 50011;
      TempBuffer@1100281001 : TEMPORARY Record 50143;
      TempBuffer2@1100281010 : TEMPORARY Record 50143;
      ExcelBuffer@1100281016 : TEMPORARY Record 370;
      Window@1100281018 : Dialog;
      Text000@1100281012 : TextConst 'ENU=Excel not found.;FRA=Programme Excel non trouv‚.';
      Text003@1100281015 : TextConst 'FRA=Veuillez saisir la date de d‚but.';
      Text004@1100281014 : TextConst 'FRA=Veuillez saisir la date de fin.';
      Text010@1100281019 : TextConst 'FRA=Avancement\@1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Text011@1100281005 : TextConst 'ENU=Status Change Delay To Excel;FRA=D‚lai de changement de statut';
      GroupBy@1100281007 : 'By Provider,By IMH Territory,By Corporate';
      Filters@1100281031 : Text[1024];
      IMHTerritoryFilter@1100281038 : Text[200];
      AreaFilter@1100281036 : Text[200];
      CorporateFilter@1100281006 : Text[200];
      ExcelTemplatePath@1100281024 : Text[250];
      ExcelSheetName@1100281025 : Text[50];
      StartRowNo@1100281023 : Integer;
      StartColNo@1100281020 : Integer;
      Text021@1100281028 : TextConst 'ENU=Criteria 1:;FRA=CritŠre 1:';
      Text022@1100281029 : TextConst 'ENU=Filters :;FRA=Filtres :';
      Text023@1100281030 : TextConst 'ENU=Period :;FRA=P‚riode :';
      RowNo@1100281034 : Integer;
      ColNo@1100281033 : Integer;
      Text024@1100281011 : TextConst 'FRA=Objectif national :';
      Text027@1100281000 : TextConst 'ENU=By Provider,By IMH Territory,By Corporate;FRA=Par prestataire,Par zone IMH,Par grand compte';
      Text030@1100281004 : TextConst 'FRA=Nø prestataire';
      Text031@1100281002 : TextConst 'FRA=Grand compte';
      Text032@1100281017 : TextConst 'FRA=R‚gion grand compte';
      Text033@1100281040 : TextConst 'FRA=Zone IMH';
      StartDate@1100281039 : Date;
      StartDateTime@1100281022 : DateTime;
      EndDate@1100281056 : Date;
      EndDateTime@1100281027 : DateTime;
      TotalCpt@1100281055 : Integer;
      Cpt@1100281054 : Integer;
      CurrCpt@1100281053 : Integer;
      Text034@1100281013 : TextConst 'FRA=Nom du prestataire';
      Text035@1100281032 : TextConst 'FRA=Nombre de dossiers';
      Text036@1100281037 : TextConst 'FRA=Nombre de r‚clamation';
      Text037@1100281041 : TextConst 'FRA=Taux de r‚clamation';
      Text038@1100281042 : TextConst 'FRA=Ecart par rapport … l''objectif';
      NationalClaimRate@1100281009 : Decimal;
      Text039@1100281021 : TextConst 'FRA=Total';

    PROCEDURE InitValues@1100281005();
    VAR
      lReportSetup@1100281000 : Record 50115;
      lFound@1100281001 : Boolean;
      lReportID@1100281002 : Integer;
    BEGIN
      lReportID := 50089;
      lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,USERID);
      IF NOT lFound THEN
        lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,'');

      IF lFound THEN BEGIN
        ExcelTemplatePath := lReportSetup."Excel Template Path";
        ExcelSheetName := lReportSetup."Excel Template Tabs";
        StartRowNo := lReportSetup."First Line";
        StartColNo := lReportSetup."First Column";
      END ELSE BEGIN
        ExcelTemplatePath := '';
        ExcelSheetName  := 'Page1';
      END;

      IF StartRowNo <= 0 THEN
        StartRowNo := 8;

      IF StartColNo <= 0 THEN
        StartColNo := 1;
    END;

    PROCEDURE ExportToExcel@1100281001();
    VAR
      lClaimRate@1100281000 : Decimal;
      lEntryNo@1100281001 : Integer;
      lDiff@1100281002 : Decimal;
      lTotalInterv@1100281003 : Integer;
      lTotalClaims@1100281004 : Integer;
      lCode1Txt@1100281005 : Text[50];
    BEGIN
      InitValues;
      CASE GroupBy OF
        GroupBy::"By Provider" : lCode1Txt := Text030;
        GroupBy::"By IMH Territory" : lCode1Txt := Text033;
        GroupBy::"By Corporate" : lCode1Txt := Text031;
      END;

      RowNo := 2;
      InsertRow(RowNo,1,Text021,'','');
      InsertRow(RowNo + 1,1,Text022,'','');
      InsertRow(RowNo + 2,1,Text023,'','');
      InsertRow(RowNo + 3,1,Text024,'','');

      InsertRow(RowNo,2,lCode1Txt,'','');
      InsertRow(RowNo + 1,2,Filters,'','');
      InsertRow(RowNo + 2,2,STRSUBSTNO('%1 - %2',StartDate,EndDate),'','');
      InsertRow(RowNo + 3,2,STRSUBSTNO('%1%',NationalClaimRate),'','');

      RowNo := StartRowNo;
      ColNo := StartColNo;

      InsertRow(RowNo,ColNo,lCode1Txt,'','');
      InsertRow(RowNo,ColNo + 1,Text035,'','');
      InsertRow(RowNo,ColNo + 2,Text036,'','');
      InsertRow(RowNo,ColNo + 3,Text037,'','');
      InsertRow(RowNo,ColNo + 4,Text038,'','');

      TempBuffer.RESET;
      IF TempBuffer.FINDSET THEN BEGIN
        REPEAT
          IF TempBuffer."Data Integer 1" <> 0 THEN
            lClaimRate := ROUND(TempBuffer."Data Integer 2" * 100 / TempBuffer."Data Integer 1",0.01)
          ELSE
            lClaimRate := 0;

          lEntryNo := lEntryNo + 1;

          TempBuffer2.INIT;
          TempBuffer2."Decimal 1" := lClaimRate;
          TempBuffer2."Decimal 2" := NationalClaimRate - lClaimRate;
          TempBuffer2."Entry No." := lEntryNo;
          TempBuffer2."Data Code 1" := TempBuffer."Code 1";
          TempBuffer2."Data Integer 1" := TempBuffer."Data Integer 1";
          TempBuffer2."Data Integer 2" := TempBuffer."Data Integer 2";
          TempBuffer2.INSERT;
        UNTIL TempBuffer.NEXT = 0;
      END;


      TempBuffer2.RESET;
      IF TempBuffer2.FINDSET THEN BEGIN
        REPEAT
          RowNo := RowNo + 1;

          InsertRow(RowNo,ColNo,TempBuffer2."Data Code 1",'','');
          InsertRow(RowNo,ColNo + 1,FORMAT(TempBuffer2."Data Integer 1"),'','');
          InsertRow(RowNo,ColNo + 2,FORMAT(TempBuffer2."Data Integer 2"),'','');
          InsertRow(RowNo,ColNo + 3,FORMAT(TempBuffer2."Decimal 1"),'','');
          InsertRow(RowNo,ColNo + 4,FORMAT(TempBuffer2."Decimal 2"),'','');

          lTotalInterv := lTotalInterv + TempBuffer2."Data Integer 1";
          lTotalClaims := lTotalClaims + TempBuffer2."Data Integer 2";

        UNTIL TempBuffer2.NEXT = 0;

          IF lTotalInterv <> 0 THEN
            lClaimRate := ROUND(lTotalClaims * 100 / lTotalInterv,0.01)
          ELSE
            lClaimRate := 0;

          RowNo := RowNo + 1;
          InsertRow(RowNo,ColNo,Text039,'','');
          InsertRow(RowNo,ColNo + 1,FORMAT(lTotalInterv),'','');
          InsertRow(RowNo,ColNo + 2,FORMAT(lTotalClaims),'','');
          InsertRow(RowNo,ColNo + 3,FORMAT(lClaimRate),'','');
          InsertRow(RowNo,ColNo + 4,FORMAT(NationalClaimRate - lClaimRate),'','');

      END;


      ViewExcel;
    END;

    PROCEDURE InsertRow@1100281004(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250];CellFormula@1100281000 : Text[250];NbFormat@1000000003 : Text[30]);
    BEGIN
      ExcelBuffer.INIT;
      ExcelBuffer.VALIDATE("Row No.",RowNo);
      ExcelBuffer.VALIDATE("Column No.",ColumnNo);
      ExcelBuffer."Cell Value as Text" := CellValue;
      ExcelBuffer.NumberFormat := NbFormat;
      ExcelBuffer.Formula := CellFormula; //'';
      ExcelBuffer.INSERT;
    END;

    PROCEDURE GetCurrCellID@1100281000() : Text[20];
    BEGIN
      EXIT(ExcelBuffer.xlColID + ExcelBuffer.xlRowID);
    END;

    PROCEDURE ViewExcel@1000000002();
    BEGIN

      IF ExcelTemplatePath <> '' THEN
        ExcelBuffer.OpenBook(ExcelTemplatePath,ExcelSheetName)
      ELSE
        ExcelBuffer.CreateBook;

      ExcelBuffer.CreateSheet(ExcelSheetName,ExcelSheetName,'','');
      ExcelBuffer.GiveUserControl;
      CLEAR(ExcelBuffer);
    END;

    PROCEDURE CreateExcelBuffer@1000000004();
    BEGIN
      ExcelBuffer.DELETEALL;
      CLEAR(ExcelBuffer);
    END;

    BEGIN
    {
      /** @r IMH01 @d 14/10/13 @a ISAT.ST @v IMH6.01.353 @s Reorganisation region IMH @h 4760 @c Renommage CR / AR / R‚gion */
    }
    END.
  }
  RDLDATA
  {
  }
}