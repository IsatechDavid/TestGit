OBJECT Report 50095 Report 61: Act. Extranet Prov.
{
  OBJECT-PROPERTIES
  {
    Date=15/10/13;
    Time=18:21:47;
    Modified=Yes;
    Version List=IMH6.01.08;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Report 61: Act. Extranet Prov.;
               FRA=Report 61: Suivi de l'extranet par type d'action];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   ProviderSetup.GET;
                   StartDate := CALCDATE('<-1Y>', WORKDATE);
                   EndDate := WORKDATE;
                 END;

    OnPreReport=BEGIN
                  IF (StartDate = 0D) OR (EndDate = 0D) THEN
                    ERROR(Err001);

                  Filters := Provider.GETFILTERS + ' ' + "Service Intervention Line".GETFILTERS;
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table50000;
        DataItemTableView=SORTING(Enable)
                          WHERE(Enable=CONST(Yes));
        OnPreDataItem=BEGIN
                        TotalCpt := COUNT;
                        Window.OPEN(Text010);
                      END;

        OnAfterGetRecord=BEGIN
                           CurrCpt += 1;
                           IF CurrCpt >= 10 THEN BEGIN
                             Cpt += CurrCpt;
                             Window.UPDATE(1,ROUND(Cpt / TotalCpt * 9999,1));
                             CurrCpt := 0;
                           END;
                         END;

        OnPostDataItem=BEGIN
                         Window.CLOSE;

                         ExportToExcel;
                       END;

        ReqFilterFields=IMH Territory Code;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table50075;
        DataItemTableView=SORTING(Assigned Date,Provider No.,Intervention Status,Closed,Multi specialities);
        OnPreDataItem=BEGIN
                        SETRANGE("Assigned Date",StartDate,EndDate);
                        //SETFILTER("Intervention Status",'<>%1',"Intervention Status"::Cancel);
                      END;

        OnAfterGetRecord=VAR
                           lCode1@1100281000 : Code[20];
                           lProcessStatusHistory@1000000000 : Record 50047;
                           lMonth@1000000001 : Integer;
                           lYear@1000000004 : Integer;
                           lPostCode@1000000002 : Record 225;
                           lProcess@1000000003 : Record 50041;
                         BEGIN
                           IF AreaFilter <> '' THEN BEGIN
                             lPostCode.SETRANGE(Code, "Post Code");
                             lPostCode.SETRANGE(City, City);
                             lPostCode.SETFILTER("Area Code", AreaFilter);
                             IF lPostCode.ISEMPTY THEN
                               CurrReport.SKIP;
                           END;

                           lProcessStatusHistory.SETRANGE("Source Table ID", DATABASE::"Service Intervention Line");
                           lProcessStatusHistory.SETRANGE("Source Key Code 1", "Service Header No.");
                           lProcessStatusHistory.SETRANGE("Source Key Integer 1", "Line No.");

                           IF lProcessStatusHistory.FINDLAST THEN BEGIN
                             lMonth := DATE2DMY(DT2DATE(lProcessStatusHistory."Change Date"), 2);
                             lYear := DATE2DMY(DT2DATE(lProcessStatusHistory."Change Date"), 3);
                             lProcessStatusHistory.CALCFIELDS("Provider Reminder", "Remind Level");
                             lProcessStatusHistory.CALCFIELDS("From Process Provider Reminder", "From Process Remind Level",
                               "To Status Description", "To Process");
                             TempBuffer.SETRANGE("Code 1", lProcessStatusHistory."To Process Code");
                             TempBuffer.SETRANGE("Integer 1", lProcessStatusHistory."To Status No.");
                             TempBuffer.SETRANGE("Integer 2", lYear);
                             TempBuffer.SETRANGE("Decimal 1", lMonth);
                             TempBuffer.SETRANGE("Boolean 1", Provider.Extranet);
                             IF TempBuffer.FINDFIRST THEN BEGIN
                               TempBuffer."Data Amount 5" += 1;
                               IF lProcessStatusHistory."Provider Reminder" THEN
                                 TempBuffer."Data Amount 1" += 1;
                               IF lProcessStatusHistory."From Process Provider Reminder" THEN
                                 CASE lProcessStatusHistory."From Process Remind Level" OF
                                   1 : TempBuffer."Data Amount 2" += 1;
                                   2 : TempBuffer."Data Amount 3" += 1;
                                   3 : TempBuffer."Data Amount 4" += 1;
                                 END;
                               TempBuffer.MODIFY;
                             END ELSE BEGIN
                               TempBuffer.INIT;
                               TempBuffer."Code 1" := lProcessStatusHistory."To Process Code";
                               TempBuffer."Integer 1" := lProcessStatusHistory."To Status No.";
                               TempBuffer."Integer 2" := lYear;
                               TempBuffer."Decimal 1" := lMonth;
                               TempBuffer."Boolean 1" := Provider.Extranet;
                               TempBuffer."Data Text 1" := lProcessStatusHistory."To Process";
                               TempBuffer."Data Text 2" := lProcessStatusHistory."To Status Description";

                               TempBuffer."Data Amount 5" := 1;
                               IF lProcessStatusHistory."Provider Reminder" THEN
                                 TempBuffer."Data Amount 1" := 1;
                               IF lProcessStatusHistory."From Process Provider Reminder" THEN
                                 CASE lProcessStatusHistory."From Process Remind Level" OF
                                   1 : TempBuffer."Data Amount 2" := 1;
                                   2 : TempBuffer."Data Amount 3" := 1;
                                   3 : TempBuffer."Data Amount 4" := 1;
                                 END;
                               TempBuffer.INSERT;
                             END;
                           END;
                         END;

        ReqFilterFields=Corporate No.,Corporate Region Code;
        DataItemLink=Provider No.=FIELD(No.);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=6930;
      Height=2750;
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100281000;TextBox;3630 ;220  ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Start Date;
                                                              FRA=Date de d‚but];
                                                   BlankZero=Yes;
                                                   SourceExpr=StartDate }
      { 1100281001;Label  ;220  ;220  ;3300 ;440  ;ParentControl=1100281000 }
      { 1100281002;TextBox;3630 ;770  ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=End Year;
                                                              FRA=Date de fin];
                                                   BlankZero=Yes;
                                                   SourceExpr=EndDate }
      { 1100281003;Label  ;220  ;770  ;3300 ;440  ;ParentControl=1100281002 }
      { 1000000002;TextBox;3630 ;1650 ;1700 ;440  ;ValidateTableRelation=No;
                                                   InPage=-1;
                                                   CaptionML=[ENU=Area Filter;
                                                              FRA=Filtre d‚partement];
                                                   BlankZero=Yes;
                                                   SourceExpr=AreaFilter;
                                                   TableRelation=Area }
      { 1000000003;Label  ;220  ;1650 ;3300 ;440  ;ParentControl=1000000002 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100281000;;Container;
                  ContainerType=ContentArea }

      { 1100281001;1;Group  ;
                  CaptionML=[ENU=Options;
                             FRA=Options];
                  GroupType=Group }

      { 1100281002;2;Field  ;
                  CaptionML=[ENU=Start Date;
                             FRA=Date de d‚but];
                  BlankZero=Yes;
                  SourceExpr=StartDate }

      { 1100281003;2;Field  ;
                  CaptionML=[ENU=End Year;
                             FRA=Date de fin];
                  BlankZero=Yes;
                  SourceExpr=EndDate }

      { 1000000000;2;Field  ;
                  CaptionML=[ENU=Area Filter;
                             FRA=Filtre d‚partement];
                  BlankZero=Yes;
                  SourceExpr=AreaFilter;
                  TableRelation=Area }

    }
  }
  CODE
  {
    VAR
      ProviderSetup@1100281003 : Record 50011;
      TempBuffer@1100281001 : TEMPORARY Record 50143;
      ExcelBuffer@1100281016 : TEMPORARY Record 370;
      Window@1100281018 : Dialog;
      Text000@1100281012 : TextConst 'ENU=Excel not found.;FRA=Programme Excel non trouv‚.';
      Text003@1100281015 : TextConst 'FRA=Veuillez saisir la date de d‚but.';
      Text004@1100281014 : TextConst 'FRA=Veuillez saisir la date de fin.';
      Text010@1100281019 : TextConst 'FRA=Avancement\@1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Text011@1100281005 : TextConst 'ENU=Status Change Delay To Excel;FRA=D‚lai de changement de statut';
      Filters@1100281031 : Text[1024];
      IMHTerritoryFilter@1100281038 : Text[200];
      AreaFilter@1100281036 : Text[200];
      ExcelTemplatePath@1100281024 : Text[250];
      ExcelSheetName@1100281025 : Text[50];
      StartRowNo@1100281023 : Integer;
      StartColNo@1100281020 : Integer;
      Text021@1100281028 : TextConst 'ENU=Criteria 1:;FRA=CritŠre 1:';
      Text022@1100281029 : TextConst 'ENU=Filters :;FRA=Filtres :';
      Text023@1100281030 : TextConst 'ENU=Period :;FRA=P‚riode :';
      RowNo@1100281034 : Integer;
      ColNo@1100281033 : Integer;
      Text024@1100281011 : TextConst 'FRA=Objectif national :';
      Text030@1100281004 : TextConst 'FRA=Nø prestataire';
      Text031@1100281002 : TextConst 'FRA=Grand compte';
      Text032@1100281017 : TextConst 'FRA=R‚gion grand compte';
      StartDate@1100281039 : Date;
      StartDateTime@1100281022 : DateTime;
      EndDate@1100281056 : Date;
      EndDateTime@1100281027 : DateTime;
      TotalCpt@1100281055 : Integer;
      Cpt@1100281054 : Integer;
      CurrCpt@1100281053 : Integer;
      Text034@1100281013 : TextConst 'FRA=Nom du prestataire';
      Text035@1100281032 : TextConst 'FRA=Nombre de dossiers';
      Text036@1100281037 : TextConst 'FRA=Nombre de r‚clamation';
      Text037@1100281041 : TextConst 'FRA=Taux de r‚clamation';
      Text038@1100281042 : TextConst 'FRA=Ecart par rapport … l''objectif';
      Text039@1100281021 : TextConst 'FRA=Total';
      Err001@1000000004 : TextConst 'FRA=La date de d‚but et la date de fin doivent ˆtre renseign‚es';

    PROCEDURE InitValues@1100281005();
    VAR
      lReportSetup@1100281000 : Record 50115;
      lFound@1100281001 : Boolean;
      lReportID@1100281002 : Integer;
    BEGIN
      lReportID := 50095;
      lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,USERID);
      IF NOT lFound THEN
        lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,'');

      IF lFound THEN BEGIN
        ExcelTemplatePath := lReportSetup."Excel Template Path";
        ExcelSheetName := lReportSetup."Excel Template Tabs";
        StartRowNo := lReportSetup."First Line";
        StartColNo := lReportSetup."First Column";
      END ELSE BEGIN
        ExcelTemplatePath := '';
        ExcelSheetName  := 'Page1';
      END;

      IF StartRowNo <= 0 THEN
        StartRowNo := 8;

      IF StartColNo <= 0 THEN
        StartColNo := 1;
    END;

    PROCEDURE ExportToExcel@1100281001();
    BEGIN
      InitValues;

      RowNo := 2;
      InsertRow(RowNo + 1,1,Text022,'','');
      InsertRow(RowNo + 2,1,Text023,'','');

      InsertRow(RowNo + 1,2,Filters,'','');
      InsertRow(RowNo + 2,2,STRSUBSTNO('%1 - %2',StartDate,EndDate),'','');

      RowNo := StartRowNo;
      ColNo := StartColNo;

      TempBuffer.RESET;
      IF TempBuffer.FINDSET THEN BEGIN
        REPEAT
          RowNo := RowNo + 1;
          InsertRow(RowNo,ColNo,TempBuffer."Code 1",'','');
          InsertRow(RowNo,ColNo + 1,FORMAT(TempBuffer."Data Text 1"),'','');
          InsertRow(RowNo,ColNo + 2,FORMAT(TempBuffer."Integer 1"),'','');
          InsertRow(RowNo,ColNo + 3,FORMAT(TempBuffer."Data Text 2"),'','');
          InsertRow(RowNo,ColNo + 4,FORMAT(TempBuffer."Integer 2"),'','');
          InsertRow(RowNo,ColNo + 5,FORMAT(TempBuffer."Decimal 1"),'','');
          InsertRow(RowNo,ColNo + 6,FORMAT(TempBuffer."Data Amount 5"),'','');
          InsertRow(RowNo,ColNo + 7,FORMAT(TempBuffer."Data Amount 1"),'','');
          InsertRow(RowNo,ColNo + 8,FORMAT(TempBuffer."Data Amount 2"),'','');
          InsertRow(RowNo,ColNo + 9,FORMAT(TempBuffer."Data Amount 3"),'','');
          InsertRow(RowNo,ColNo + 10,FORMAT(TempBuffer."Data Amount 4"),'','');
          InsertRow(RowNo,ColNo + 11,FORMAT(TempBuffer."Boolean 1"),'','');
        UNTIL TempBuffer.NEXT = 0;
      END;

      ViewExcel;
    END;

    PROCEDURE InsertRow@1100281004(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250];CellFormula@1100281000 : Text[250];NbFormat@1000000003 : Text[30]);
    BEGIN
      ExcelBuffer.INIT;
      ExcelBuffer.VALIDATE("Row No.",RowNo);
      ExcelBuffer.VALIDATE("Column No.",ColumnNo);
      ExcelBuffer."Cell Value as Text" := CellValue;
      ExcelBuffer.NumberFormat := NbFormat;
      ExcelBuffer.Formula := CellFormula; //'';
      ExcelBuffer.INSERT;
    END;

    PROCEDURE GetCurrCellID@1100281000() : Text[20];
    BEGIN
      EXIT(ExcelBuffer.xlColID + ExcelBuffer.xlRowID);
    END;

    PROCEDURE ViewExcel@1000000002();
    BEGIN

      IF ExcelTemplatePath <> '' THEN
        ExcelBuffer.OpenBook(ExcelTemplatePath,ExcelSheetName)
      ELSE
        ExcelBuffer.CreateBook;

      ExcelBuffer.CreateSheet(ExcelSheetName,ExcelSheetName,'','');
      ExcelBuffer.GiveUserControl;
      CLEAR(ExcelBuffer);
    END;

    PROCEDURE CreateExcelBuffer@1000000004();
    BEGIN
      ExcelBuffer.DELETEALL;
      CLEAR(ExcelBuffer);
    END;

    BEGIN
    {
      /** @r IMH01 @d 14/10/13 @a ISAT.ST @v IMH6.01.353 @s Reorganisation region IMH @h 4760 @c Renommage CR / AR / R‚gion */
    }
    END.
  }
  RDLDATA
  {
  }
}