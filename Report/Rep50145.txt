OBJECT Report 50145 Add Visit - Pre-position
{
  OBJECT-PROPERTIES
  {
    Date=02/04/12;
    Time=11:33:57;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Add Visit - Pre-position;
               FRA=Ajouter de visite - Viste pr‚-positionn‚e];
    ProcessingOnly=Yes;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table50105;
        DataItemTableView=SORTING(Type)
                          WHERE(Type=FILTER(Claim|Quality Control|Formation|TH Control));
        OnPreDataItem=BEGIN
                        SETFILTER("Planning No.", '=%1', '');
                        SETRANGE(Closed, FALSE);
                        IF (ProviderVisitPlanning."Begin Date" <> 0D) AND (ProviderVisitPlanning."End Date" <> 0D) THEN
                          SETFILTER("Visit Date",'%1|%2..%3', 0D, ProviderVisitPlanning."Begin Date", ProviderVisitPlanning."End Date");
                        IF (ProviderVisitPlanning."Begin Date" <> 0D) AND (ProviderVisitPlanning."End Date" = 0D) THEN
                          SETFILTER("Visit Date",'%1|>=%2', 0D, ProviderVisitPlanning."Begin Date");
                        IF (ProviderVisitPlanning."Begin Date" = 0D) AND (ProviderVisitPlanning."End Date" <> 0D) THEN
                          SETFILTER("Visit Date",'%1|<=%3', 0D, ProviderVisitPlanning."End Date");

                        CountLine := 1;

                        IsOk := TRUE;
                        CurrReport.BREAK; //Traitement dans la fonction dans le codeUnit Network Visit Mgt
                      END;

        OnAfterGetRecord=BEGIN
                           IF NbLineToTreate <> 0 THEN
                             IF CountLine > NbLineToTreate THEN
                               CurrReport.BREAK;

                           "Planning No." := ProviderVisitPlanning."No.";
                           MODIFY(TRUE);

                           CountLine += 1;
                         END;

        ReqFilterFields=Main Specialization Code,Provider Post Code;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
    }
    CONTROLS
    {
      { 1000000000;TextBox;4400 ;1870 ;1700 ;440  ;CaptionML=[ENU=Zone Search (km);
                                                              FRA=Rayon recherche (km)];
                                                   SourceExpr=ZoneSearch }
      { 1000000001;Label  ;990  ;1870 ;3300 ;440  ;ParentControl=1000000000 }
      { 1000000002;TextBox;3410 ;0    ;1700 ;440  ;CaptionML=[ENU=Post Code Key;
                                                              FRA=Code postal];
                                                   SourceExpr=PostCodeKey }
      { 1000000003;Label  ;0    ;0    ;3300 ;440  ;ParentControl=1000000002 }
      { 1000000004;TextBox;4290 ;880  ;1700 ;440  ;CaptionML=[ENU=City Key;
                                                              FRA=Ville];
                                                   SourceExpr=CityKey }
      { 1000000005;Label  ;880  ;880  ;3300 ;440  ;ParentControl=1000000004 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1000000005;;Container;
                  ContainerType=ContentArea }

      { 1000000004;1;Group  ;
                  CaptionML=[ENU=Option;
                             FRA=Option];
                  GroupType=Group }

      { 1000000003;2;Group  ;
                  Name=CityKey;
                  CaptionML=[ENU=City Key;
                             FRA=Ville cl‚];
                  GroupType=Group }

      { 1000000001;3;Field  ;
                  Name=PostCodeKey;
                  CaptionML=[ENU=Post Code Key;
                             FRA=Code postal];
                  SourceExpr=PostCodeKey;
                  OnValidate=BEGIN
                               PostCode.ValidatePostCode(CityKey,PostCodeKey,CountryKey);
                             END;

                  OnLookup=BEGIN
                             PostCode.LookUpPostCode(CityKey,PostCodeKey,CountryKey,TRUE);
                           END;
                            }

      { 1000000002;3;Field  ;
                  Name=CityKey;
                  CaptionML=[ENU=City Key;
                             FRA=Ville];
                  SourceExpr=CityKey;
                  OnValidate=BEGIN
                               PostCode.ValidateCity(CityKey,PostCodeKey,CountryKey);
                             END;

                  OnLookup=BEGIN
                             PostCode.LookUpCity(CityKey,PostCodeKey,CountryKey,TRUE);
                           END;
                            }

      { 1000000000;2;Field  ;
                  Name=ZoneSearch;
                  CaptionML=[ENU=Zone Search (km);
                             FRA=Rayon recherche (km)];
                  SourceExpr=ZoneSearch }

    }
  }
  CODE
  {
    VAR
      NbLineToTreate@1000000000 : Integer;
      ProviderVisitPlanning@1000000001 : Record 50167;
      CountLine@1000000002 : Integer;
      PostCode@1000000008 : Record 225;
      IsOk@1000000007 : Boolean;
      CityKey@1000000006 : Text[30] INDATASET;
      PostCodeKey@1000000005 : Code[20];
      CountryKey@1000000004 : Code[10];
      ZoneSearch@1000000003 : Integer INDATASET;

    PROCEDURE SetPlanningTable@1000000004(pProviderVisitPlanning@1000000000 : Record 50167);
    BEGIN
      ProviderVisitPlanning := pProviderVisitPlanning;
      NbLineToTreate := pProviderVisitPlanning."Ligne To Treate Nb";
    END;

    PROCEDURE SetValues@1000000000(VAR pCityKey@1100281006 : Text[30];VAR pPostCodeKey@1100281005 : Code[20];VAR pCountryKey@1100281004 : Code[10];VAR pZoneSearch@1100281003 : Integer);
    VAR
      lCompanyInformation@1100281001 : Record 79;
    BEGIN
      CityKey := pCityKey;
      PostCodeKey := pPostCodeKey;
      IF pCountryKey = '' THEN BEGIN
        lCompanyInformation.GET;
        CountryKey := lCompanyInformation."Country/Region Code";
      END;
      ZoneSearch := pZoneSearch;
    END;

    PROCEDURE GetValues@1100281004(VAR pNetworkVisit@1100281000 : Record 50105;VAR pIsOk@1100281007 : Boolean;VAR pCityKey@1100281006 : Text[30];VAR pPostCodeKey@1100281005 : Code[20];VAR pCountryKey@1100281004 : Code[10];VAR pZoneSearch@1100281003 : Integer);
    VAR
      lCompanyInformation@1100281001 : Record 79;
    BEGIN
      pNetworkVisit.COPY("Network Visit");
      pIsOk := IsOk;
      pCityKey := CityKey;
      pPostCodeKey := PostCodeKey;
      IF CountryKey = '' THEN BEGIN
        lCompanyInformation.GET;
        CountryKey := lCompanyInformation."Country/Region Code";
      END;
      pCountryKey := CountryKey;
      pZoneSearch := ZoneSearch;
    END;

    BEGIN
    {
      /** @r IMH02 @d 02/04/12 @a ISAT.ZW @v IMH6.01.115 @s Visite Animation Reseau @h mantis 3206 @c FIltre sur rayon */
      /** @r IMH01 @d 15/02/12 @a ISAT.ZW @v IMH6.01.115 @s Visite Animation Reseau @c Cr‚ation */
    }
    END.
  }
  RDLDATA
  {
  }
}