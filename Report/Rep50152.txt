OBJECT Report 50152 Network Visit - Visit Minute
{
  OBJECT-PROPERTIES
  {
    Date=13/03/12;
    Time=10:54:43;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Network Visit - Visit Minute;
               FRA=Comptes rendus de visite];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  Filters := "Network Visit".GETFILTERS;
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table50105;
        DataItemTableView=SORTING(Status,Closed)
                          WHERE(Minute Mandatory=CONST(Yes),
                                Minites Imported=CONST(No),
                                Status=CONST(Done));
        OnPreDataItem=BEGIN
                        SETRANGE("Visit Date", StartDate, EndDate);
                        TotalCpt := COUNT;
                        Window.OPEN(Text010);

                        ExportHeaderToExcel;
                      END;

        OnAfterGetRecord=BEGIN
                           CurrCpt += 1;
                           IF CurrCpt >= 10 THEN BEGIN
                             Cpt += CurrCpt;
                             Window.UPDATE(1,ROUND(Cpt / TotalCpt * 9999,1));
                             CurrCpt := 0;
                           END;

                           RowNo := RowNo + 1;

                           InsertRow(RowNo,ColNo,"Provider No.",'','');
                           InsertRow(RowNo,ColNo + 1,"Provider Name",'','');
                           InsertRow(RowNo,ColNo + 2,"Provider Post Code",'','');
                           InsertRow(RowNo,ColNo + 3,"Provider City",'','');
                           InsertRow(RowNo,ColNo + 4,FORMAT("Visit Date"),'','');
                           InsertRow(RowNo,ColNo + 5,FORMAT(Type),'','');
                         END;

        OnPostDataItem=BEGIN
                         Window.CLOSE;

                         ViewExcel;
                       END;

        ReqFilterFields=Status,Prov. IMH Territory Code,Visit Interlocutor;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=6710;
      Height=1650;
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100281000;TextBox;3630 ;220  ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=Start Date;
                                                              FRA=Date de d‚but];
                                                   BlankZero=Yes;
                                                   SourceExpr=StartDate }
      { 1100281001;Label  ;220  ;220  ;3300 ;440  ;ParentControl=1100281000 }
      { 1100281002;TextBox;3630 ;770  ;1700 ;440  ;InPage=-1;
                                                   CaptionML=[ENU=End Year;
                                                              FRA=Date de fin];
                                                   BlankZero=Yes;
                                                   SourceExpr=EndDate }
      { 1100281003;Label  ;220  ;770  ;3300 ;440  ;ParentControl=1100281002 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100281000;;Container;
                  ContainerType=ContentArea }

      { 1100281001;1;Group  ;
                  CaptionML=[ENU=Options;
                             FRA=Options];
                  GroupType=Group }

      { 1100281002;2;Field  ;
                  CaptionML=[ENU=Start Date;
                             FRA=Date de d‚but];
                  BlankZero=Yes;
                  SourceExpr=StartDate }

      { 1100281003;2;Field  ;
                  CaptionML=[ENU=End Year;
                             FRA=Date de fin];
                  BlankZero=Yes;
                  SourceExpr=EndDate }

    }
  }
  CODE
  {
    VAR
      ExcelBuffer@1100281016 : TEMPORARY Record 370;
      Window@1100281018 : Dialog;
      Text000@1100281012 : TextConst 'ENU=Excel not found.;FRA=Programme Excel non trouv‚.';
      Text010@1100281019 : TextConst 'FRA=Avancement\@1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Filters@1100281031 : Text[1024];
      ExcelTemplatePath@1100281024 : Text[250];
      ExcelSheetName@1100281025 : Text[50];
      StartRowNo@1100281023 : Integer;
      StartColNo@1100281020 : Integer;
      Text022@1100281029 : TextConst 'ENU=Filters :;FRA=Filtres :';
      RowNo@1100281034 : Integer;
      ColNo@1100281033 : Integer;
      Text023@1000000000 : TextConst 'ENU=Period :;FRA=P‚riode :';
      StartDate@1100281039 : Date;
      EndDate@1100281056 : Date;
      TotalCpt@1100281055 : Integer;
      Cpt@1100281054 : Integer;
      CurrCpt@1100281053 : Integer;

    PROCEDURE InitValues@1100281005();
    VAR
      lReportSetup@1100281000 : Record 50115;
      lFound@1100281001 : Boolean;
      lReportID@1100281002 : Integer;
    BEGIN
      lReportID := 50152;
      lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,USERID);
      IF NOT lFound THEN
        lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,'');

      IF lFound THEN BEGIN
        ExcelTemplatePath := lReportSetup."Excel Template Path";
        ExcelSheetName := lReportSetup."Excel Template Tabs";
        StartRowNo := lReportSetup."First Line";
        StartColNo := lReportSetup."First Column";
      END ELSE BEGIN
        ExcelTemplatePath := '';
        ExcelSheetName  := 'Page1';
      END;

      IF StartRowNo <= 0 THEN
        StartRowNo := 4;

      IF StartColNo <= 0 THEN
        StartColNo := 1;
    END;

    PROCEDURE ExportHeaderToExcel@1100281001();
    VAR
      lClaimRate@1100281000 : Decimal;
      lEntryNo@1100281001 : Integer;
      lDiff@1100281002 : Decimal;
      lTotalInterv@1100281003 : Integer;
      lTotalClaims@1100281004 : Integer;
      lCode1Txt@1100281005 : Text[50];
    BEGIN
      InitValues;

      RowNo := 2;
      InsertRow(RowNo,1,Text022,'','');
      InsertRow(RowNo,2,Filters,'','');
      InsertRow(RowNo+1,1,Text023,'','');
      IF (StartDate <> 0D) OR (EndDate <> 0D) THEN
        InsertRow(RowNo+1,2,STRSUBSTNO('%1 - %2',StartDate,EndDate),'','');

      RowNo := StartRowNo;
      ColNo := StartColNo;
    END;

    PROCEDURE InsertRow@1100281004(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250];CellFormula@1100281000 : Text[250];NbFormat@1000000003 : Text[30]);
    BEGIN
      ExcelBuffer.INIT;
      ExcelBuffer.VALIDATE("Row No.",RowNo);
      ExcelBuffer.VALIDATE("Column No.",ColumnNo);
      ExcelBuffer."Cell Value as Text" := CellValue;
      ExcelBuffer.NumberFormat := NbFormat;
      ExcelBuffer.Formula := CellFormula; //'';
      ExcelBuffer.INSERT;
    END;

    PROCEDURE GetCurrCellID@1100281000() : Text[20];
    BEGIN
      EXIT(ExcelBuffer.xlColID + ExcelBuffer.xlRowID);
    END;

    PROCEDURE ViewExcel@1000000002();
    BEGIN
      IF ExcelTemplatePath <> '' THEN
        ExcelBuffer.OpenBook(ExcelTemplatePath,ExcelSheetName)
      ELSE
        ExcelBuffer.CreateBook;

      ExcelBuffer.CreateSheet(ExcelSheetName,ExcelSheetName,'','');
      ExcelBuffer.GiveUserControl;
      CLEAR(ExcelBuffer);
    END;

    PROCEDURE CreateExcelBuffer@1000000004();
    BEGIN
      ExcelBuffer.DELETEALL;
      CLEAR(ExcelBuffer);
    END;

    BEGIN
    {
      /** @r IMH01 @d 13/03/12 @a ISAT.ZW @v IMH6.01.115 @s Visite Animation Reseau @c Cr‚ation */
    }
    END.
  }
  RDLDATA
  {
  }
}