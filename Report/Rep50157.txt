OBJECT Report 50157 Interventions Extraction
{
  OBJECT-PROPERTIES
  {
    Date=02/04/14;
    Time=15:14:01;
    Modified=Yes;
    Version List=IMH6.01,5005;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Interventions Extraction;
               FRA=Liste d'interventions];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  Filters := "Service Intervention Line".GETFILTERS;

                  IF "Service Intervention Line".GETFILTER("Contact Name") <> ''  THEN
                    "Service Intervention Line".SETFILTER("Contact Name",
                       "Service Intervention Line".GETFILTER("Contact Name") +'*');
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table50075;
        DataItemTableView=;
        OnPreDataItem=BEGIN
                        TotalCpt := COUNT;
                        Window.OPEN(Text010);
                        InitValues;
                      END;

        OnAfterGetRecord=BEGIN
                           CurrCpt += 1;
                           IF CurrCpt >= 10 THEN BEGIN
                             Cpt += CurrCpt;
                             Window.UPDATE(1,ROUND(Cpt / TotalCpt * 9999,1));
                             CurrCpt := 0;
                           END;

                           RowNo := RowNo + 1;
                           CALCFIELDS("Process Status Description","Building Trade Description","Default Team Code",
                             "Service Cause", "Cancel Reason", "Provider Phone No.");  //IMH02
                           //InsertRow(RowNo,ColNo,FORMAT("Default Team Code"),'','');    //IMH03 d‚sactiv‚
                           InsertRow(RowNo,ColNo + 1,FORMAT("Service Header No."),'','');
                           InsertRow(RowNo,ColNo + 2,FORMAT("Intervention No."),'','');
                           InsertRow(RowNo,ColNo + 3,FORMAT("Corporate No."),'','');
                           InsertRow(RowNo,ColNo + 4,FORMAT("Process Status Description"),'','');
                           InsertRow(RowNo,ColNo + 5,FORMAT("Contact Name"),'','');
                           InsertRow(RowNo,ColNo + 6,FORMAT("Post Code"),'','');
                           InsertRow(RowNo,ColNo + 7,FORMAT(City),'','');
                           InsertRow(RowNo,ColNo + 8,FORMAT("Provider No."),'','');
                           InsertRow(RowNo,ColNo + 9,FORMAT("Provider Name"),'','');
                           InsertRow(RowNo,ColNo + 10,FORMAT("Building Trade Description"),'','');

                           //<<IMH02
                           InsertRow(RowNo,ColNo + 11,FORMAT(Urgent),'','');
                           InsertRow(RowNo,ColNo + 12,FORMAT("Service Order Type"),'','');
                           InsertRow(RowNo,ColNo + 13,FORMAT("Service Cause"),'','');
                           InsertRow(RowNo,ColNo + 14,FORMAT(IntervInfoPane.CalcNoOfTrayLines("Service Intervention Line",TRUE)),'','');
                           InsertRow(RowNo,ColNo + 15,FORMAT("Provider Phone No."),'','');
                           InsertRow(RowNo,ColNo + 16,FORMAT("Cancel Reason"),'','');
                           //<<IMH02
                         END;

        OnPostDataItem=BEGIN
                         Window.CLOSE;

                         ViewExcel;
                       END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=6710;
      Height=1650;
      SaveValues=Yes;
    }
    CONTROLS
    {
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      IntervInfoPane@1000000001 : Codeunit 50063;
      ExcelBuffer@1100281016 : TEMPORARY Record 370;
      Window@1100281018 : Dialog;
      Text000@1100281012 : TextConst 'ENU=Excel not found.;FRA=Programme Excel non trouv‚.';
      Text010@1100281019 : TextConst 'FRA=Avancement\@1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Filters@1100281031 : Text[1024];
      ExcelTemplatePath@1100281024 : Text[250];
      ExcelSheetName@1100281025 : Text[50];
      StartRowNo@1100281023 : Integer;
      StartColNo@1100281020 : Integer;
      Text022@1100281029 : TextConst 'ENU=Filters :;FRA=Filtres :';
      RowNo@1100281034 : Integer;
      ColNo@1100281033 : Integer;
      Text023@1000000000 : TextConst 'ENU=Period :;FRA=P‚riode :';
      TotalCpt@1100281055 : Integer;
      Cpt@1100281054 : Integer;
      CurrCpt@1100281053 : Integer;

    PROCEDURE InitValues@1100281005();
    VAR
      lReportSetup@1100281000 : Record 50115;
      lFound@1100281001 : Boolean;
      lReportID@1100281002 : Integer;
    BEGIN
      lReportID := 50157;
      lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,USERID);
      IF NOT lFound THEN
        lFound := lReportSetup.GET(lReportSetup."Object Type"::Report,lReportID,'');

      IF lFound THEN BEGIN
        ExcelTemplatePath := lReportSetup."Excel Template Path";
        ExcelSheetName := lReportSetup."Excel Template Tabs";
        StartRowNo := lReportSetup."First Line";
        StartColNo := lReportSetup."First Column";
      END ELSE BEGIN
        ExcelTemplatePath := '';
        ExcelSheetName  := 'Page1';
      END;

      IF StartRowNo <= 0 THEN
        StartRowNo := 4;

      IF StartColNo <= 0 THEN
        StartColNo := 1;
      RowNo := StartRowNo;
      ColNo := StartColNo;
    END;

    PROCEDURE ExportHeaderToExcel@1100281001();
    VAR
      lClaimRate@1100281000 : Decimal;
      lEntryNo@1100281001 : Integer;
      lDiff@1100281002 : Decimal;
      lTotalInterv@1100281003 : Integer;
      lTotalClaims@1100281004 : Integer;
      lCode1Txt@1100281005 : Text[50];
    BEGIN
      InitValues;

      RowNo := 2;
      InsertRow(RowNo,1,Text022,'','');
      InsertRow(RowNo,2,Filters,'','');
      InsertRow(RowNo+1,1,Text023,'','');

      RowNo := StartRowNo;
      ColNo := StartColNo;
    END;

    PROCEDURE InsertRow@1100281004(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250];CellFormula@1100281000 : Text[250];NbFormat@1000000003 : Text[30]);
    BEGIN
      ExcelBuffer.INIT;
      ExcelBuffer.VALIDATE("Row No.",RowNo);
      ExcelBuffer.VALIDATE("Column No.",ColumnNo);
      ExcelBuffer."Cell Value as Text" := CellValue;
      ExcelBuffer.NumberFormat := NbFormat;
      ExcelBuffer.Formula := CellFormula; //'';
      ExcelBuffer.INSERT;
    END;

    PROCEDURE GetCurrCellID@1100281000() : Text[20];
    BEGIN
      EXIT(ExcelBuffer.xlColID + ExcelBuffer.xlRowID);
    END;

    PROCEDURE ViewExcel@1000000002();
    BEGIN
      //ExcelBuffer.SetOnServerMode(TRUE);
      IF ExcelTemplatePath <> '' THEN
        ExcelBuffer.OpenBook(ExcelTemplatePath,ExcelSheetName)
      ELSE
        ExcelBuffer.CreateBook;

      ExcelBuffer.CreateSheet(ExcelSheetName,ExcelSheetName,'','');
      ExcelBuffer.GiveUserControl;
      CLEAR(ExcelBuffer);
    END;

    PROCEDURE CreateExcelBuffer@1000000004();
    BEGIN
      ExcelBuffer.DELETEALL;
      CLEAR(ExcelBuffer);
    END;

    BEGIN
    {
      /** @r IMH03 @d 19/03/14 @a ISAT.ZW @v IMH6.01.5005 @s Reorganisation DPS @h 5005 @c D‚sactivier d‚fault team code */
      /** @r IMH02 @d 24/09/12 @a ISAT.ZW @v IMH6.01.226 @s version 1.4 @h 2139 @c Afficher champs */
      /** @r IMH01 @d 23/04/12 @a ISAT.LLT @v IMH6.01.115 @s Extraction interventions @c Cr‚ation @h 1739 */
    }
    END.
  }
  RDLDATA
  {
  }
}