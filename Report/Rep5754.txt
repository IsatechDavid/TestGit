OBJECT Report 5754 Create Pick
{
  OBJECT-PROPERTIES
  {
    Date=14/08/09;
    Time=12:00:00;
    Version List=NAVW16.00.01,KITNA6.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create Pick;
               FRA=Cr‚er pr‚lŠvement];
    ProcessingOnly=Yes;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=CONST(1));
        OnPreDataItem=BEGIN
                        CLEAR(CreatePick);
                        CreatePick.SetValues(
                          AssignedID,0,SortPick,1,MaxNoOfSourceDoc,MaxNoOfLines,PerZone,
                          DoNotFillQtytoHandle,BreakbulkFilter,PerBin);
                      END;

        OnAfterGetRecord=BEGIN
                           PickWkshLine.SETFILTER("Qty. to Handle (Base)",'>%1',0);
                           PickWkshLineFilter.COPYFILTERS(PickWkshLine);

                           IF PickWkshLine.FIND('-') THEN BEGIN
                             IF PickWkshLine."Location Code" = '' THEN
                               Location.INIT
                             ELSE
                               Location.GET(PickWkshLine."Location Code");
                             REPEAT
                               PickWkshLine.CheckBin(PickWkshLine."Location Code",PickWkshLine."To Bin Code",TRUE);
                               TempNo := TempNo + 1;

                               IF PerWhseDoc THEN BEGIN
                                 PickWkshLine.SETRANGE("Whse. Document Type",PickWkshLine."Whse. Document Type");
                                 PickWkshLine.SETRANGE("Whse. Document No.",PickWkshLine."Whse. Document No.");
                               END;
                               IF PerDestination THEN BEGIN
                                 PickWkshLine.SETRANGE("Destination Type",PickWkshLine."Destination Type");
                                 PickWkshLine.SETRANGE("Destination No.",PickWkshLine."Destination No.");
                                 IF PerItem THEN BEGIN
                                   PickWkshLine.SETRANGE("Item No.",PickWkshLine."Item No.");
                                   IF PerBin THEN BEGIN
                                     IF NOT Location."Bin Mandatory" THEN
                                       PickWkshLine.SETRANGE("Shelf No.",PickWkshLine."Shelf No.");
                                     IF PerDate THEN BEGIN
                                       PickWkshLine.SETRANGE("Due Date",PickWkshLine."Due Date");
                                       CreateTempLine;
                                       PickWkshLineFilter.COPYFILTER("Due Date",PickWkshLine."Due Date");
                                     END ELSE BEGIN
                                      PickWkshLineFilter.COPYFILTER("Due Date",PickWkshLine."Due Date");
                                       CreateTempLine;
                                     END;
                                     IF NOT Location."Bin Mandatory" THEN
                                       PickWkshLineFilter.COPYFILTER("Shelf No.",PickWkshLine."Shelf No.");
                                   END ELSE BEGIN
                                     IF NOT Location."Bin Mandatory" THEN
                                       PickWkshLineFilter.COPYFILTER("Shelf No.",PickWkshLine."Shelf No.");
                                     IF PerDate THEN BEGIN
                                       PickWkshLine.SETRANGE("Due Date",PickWkshLine."Due Date");
                                       CreateTempLine;
                                       PickWkshLineFilter.COPYFILTER("Due Date",PickWkshLine."Due Date");
                                     END ELSE BEGIN
                                       PickWkshLineFilter.COPYFILTER("Due Date",PickWkshLine."Due Date");
                                       CreateTempLine;
                                     END;
                                   END;
                                   PickWkshLineFilter.COPYFILTER("Item No.",PickWkshLine."Item No.");
                                 END ELSE BEGIN
                                   PickWkshLineFilter.COPYFILTER("Item No.",PickWkshLine."Item No.");
                                   IF PerBin THEN BEGIN
                                     IF NOT Location."Bin Mandatory" THEN
                                       PickWkshLine.SETRANGE("Shelf No.",PickWkshLine."Shelf No.");
                                     IF PerDate THEN BEGIN
                                       PickWkshLine.SETRANGE("Due Date",PickWkshLine."Due Date");
                                       CreateTempLine;
                                       PickWkshLineFilter.COPYFILTER("Due Date",PickWkshLine."Due Date");
                                     END ELSE BEGIN
                                       PickWkshLineFilter.COPYFILTER("Due Date",PickWkshLine."Due Date");
                                       CreateTempLine;
                                     END;
                                     IF NOT Location."Bin Mandatory" THEN
                                       PickWkshLineFilter.COPYFILTER("Shelf No.",PickWkshLine."Shelf No.");
                                   END ELSE BEGIN
                                     IF NOT Location."Bin Mandatory" THEN
                                       PickWkshLineFilter.COPYFILTER("Shelf No.",PickWkshLine."Shelf No.");
                                     IF PerDate THEN BEGIN
                                       PickWkshLine.SETRANGE("Due Date",PickWkshLine."Due Date");
                                       CreateTempLine;
                                       PickWkshLineFilter.COPYFILTER("Due Date",PickWkshLine."Due Date");
                                     END ELSE BEGIN
                                       PickWkshLineFilter.COPYFILTER("Due Date",PickWkshLine."Due Date");
                                       CreateTempLine;
                                     END;
                                   END;
                                 END;
                                 PickWkshLineFilter.COPYFILTER("Destination Type",PickWkshLine."Destination Type");
                                 PickWkshLineFilter.COPYFILTER("Destination No.",PickWkshLine."Destination No.");
                               END ELSE BEGIN
                                 PickWkshLineFilter.COPYFILTER("Destination Type",PickWkshLine."Destination Type");
                                 PickWkshLineFilter.COPYFILTER("Destination No.",PickWkshLine."Destination No.");
                                 IF PerItem THEN BEGIN
                                   PickWkshLine.SETRANGE("Item No.",PickWkshLine."Item No.");
                                   IF PerBin THEN BEGIN
                                     IF NOT Location."Bin Mandatory" THEN
                                       PickWkshLine.SETRANGE("Shelf No.",PickWkshLine."Shelf No.");
                                     IF PerDate THEN BEGIN
                                       PickWkshLine.SETRANGE("Due Date",PickWkshLine."Due Date");
                                       CreateTempLine;
                                       PickWkshLineFilter.COPYFILTER("Due Date",PickWkshLine."Due Date");
                                     END ELSE BEGIN
                                       PickWkshLineFilter.COPYFILTER("Due Date",PickWkshLine."Due Date");
                                       CreateTempLine;
                                     END;
                                     IF NOT Location."Bin Mandatory" THEN
                                       PickWkshLineFilter.COPYFILTER("Shelf No.",PickWkshLine."Shelf No.");
                                   END ELSE BEGIN
                                     IF NOT Location."Bin Mandatory" THEN
                                       PickWkshLineFilter.COPYFILTER("Shelf No.",PickWkshLine."Shelf No.");
                                     IF PerDate THEN BEGIN
                                       PickWkshLine.SETRANGE("Due Date",PickWkshLine."Due Date");
                                       CreateTempLine;
                                       PickWkshLineFilter.COPYFILTER("Due Date",PickWkshLine."Due Date");
                                     END ELSE BEGIN
                                       PickWkshLineFilter.COPYFILTER("Due Date",PickWkshLine."Due Date");
                                       CreateTempLine;
                                     END;
                                   END;
                                   PickWkshLineFilter.COPYFILTER("Item No.",PickWkshLine."Item No.");
                                 END ELSE BEGIN
                                   PickWkshLineFilter.COPYFILTER("Item No.",PickWkshLine."Item No.");
                                   IF PerBin THEN BEGIN
                                     IF NOT Location."Bin Mandatory" THEN
                                       PickWkshLine.SETRANGE("Shelf No.",PickWkshLine."Shelf No.");
                                     IF PerDate THEN BEGIN
                                       PickWkshLine.SETRANGE("Due Date",PickWkshLine."Due Date");
                                       CreateTempLine;
                                       PickWkshLineFilter.COPYFILTER("Due Date",PickWkshLine."Due Date");
                                     END ELSE BEGIN
                                       PickWkshLineFilter.COPYFILTER("Due Date",PickWkshLine."Due Date");
                                       CreateTempLine;
                                     END;
                                     IF NOT Location."Bin Mandatory" THEN
                                       PickWkshLineFilter.COPYFILTER("Shelf No.",PickWkshLine."Shelf No.");
                                   END ELSE BEGIN
                                     IF NOT Location."Bin Mandatory" THEN
                                       PickWkshLineFilter.COPYFILTER("Shelf No.",PickWkshLine."Shelf No.");
                                     IF PerDate THEN BEGIN
                                       PickWkshLine.SETRANGE("Due Date",PickWkshLine."Due Date");
                                       CreateTempLine;
                                       PickWkshLineFilter.COPYFILTER("Due Date",PickWkshLine."Due Date");
                                     END ELSE BEGIN
                                       PickWkshLineFilter.COPYFILTER("Due Date",PickWkshLine."Due Date");
                                       CreateTempLine;
                                     END;
                                   END;
                                 END;
                               END;
                               PickWkshLineFilter.COPYFILTER("Whse. Document Type",PickWkshLine."Whse. Document Type");
                               PickWkshLineFilter.COPYFILTER("Whse. Document No.",PickWkshLine."Whse. Document No.");
                             UNTIL NOT PickWkshLine.FIND('-')
                           END ELSE
                             ERROR(Text000);
                         END;

      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9460;
      Height=9790;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   IF LocationCode <> '' THEN BEGIN
                     Location.GET(LocationCode);
                     IF Location."Use ADCS" THEN
                       DoNotFillQtytoHandle := TRUE;
                   END;
                 END;

    }
    CONTROLS
    {
      { 3   ;CheckBox     ;3410 ;1100 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Per Cust./Vend./Loc.;
                                                              FRA=Par client/fourn./mag.];
                                                   SourceExpr=PerDestination }
      { 4   ;Label        ;220  ;1100 ;3080 ;440  ;ParentControl=3 }
      { 5   ;Label        ;220  ;1650 ;3080 ;440  ;ParentControl=6 }
      { 6   ;CheckBox     ;3410 ;1650 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Per Item;
                                                              FRA=Par article];
                                                   SourceExpr=PerItem }
      { 7   ;Label        ;220  ;2750 ;3080 ;440  ;ParentControl=8 }
      { 8   ;CheckBox     ;3410 ;2750 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Per Bin;
                                                              FRA=Par emplacement];
                                                   SourceExpr=PerBin }
      { 9   ;Label        ;220  ;3300 ;3080 ;440  ;ParentControl=10 }
      { 10  ;CheckBox     ;3410 ;3300 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Per Due Date;
                                                              FRA=Par d‚lai];
                                                   SourceExpr=PerDate }
      { 13  ;Label        ;0    ;0    ;3300 ;440  ;LeaderDots=No;
                                                   CaptionML=[ENU=Create Pick;
                                                              FRA=Cr‚er pr‚lŠvement] }
      { 1   ;TextBox      ;3410 ;4180 ;1650 ;440  ;CaptionML=[ENU=Max. No. of Pick Lines;
                                                              FRA=Nombre max. de lignes];
                                                   BlankZero=Yes;
                                                   SourceExpr=MaxNoOfLines }
      { 2   ;Label        ;0    ;3850 ;3300 ;770  ;ParentControl=1;
                                                   VertAlign=Bottom;
                                                   MultiLine=Yes }
      { 11  ;Label        ;0    ;4840 ;3300 ;770  ;ParentControl=12;
                                                   VertAlign=Bottom;
                                                   MultiLine=Yes }
      { 12  ;TextBox      ;3410 ;5170 ;1650 ;440  ;CaptionML=[ENU=Max. No. of Pick Source Docs.;
                                                              FRA=Nombre max. de doc. origine];
                                                   BlankZero=Yes;
                                                   SourceExpr=MaxNoOfSourceDoc }
      { 14  ;CheckBox     ;3410 ;8800 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Print Pick;
                                                              FRA=Imprimer pr‚lŠvement];
                                                   SourceExpr=PrintPick }
      { 15  ;Label        ;0    ;8800 ;3300 ;440  ;ParentControl=14 }
      { 16  ;TextBox      ;3410 ;5830 ;2750 ;440  ;CaptionML=[ENU=Assigned User ID;
                                                              FRA=Code utilisateur affect‚];
                                                   SourceExpr=AssignedID;
                                                   TableRelation="Warehouse Employee";
                                                   OnValidate=VAR
                                                                WhseEmployee@1000 : Record 7301;
                                                              BEGIN
                                                                IF AssignedID <> '' THEN
                                                                  WhseEmployee.GET(AssignedID,LocationCode);
                                                              END;

                                                   OnLookup=VAR
                                                              WhseEmployee@1000 : Record 7301;
                                                              LookupWhseEmployee@1001 : Form 7348;
                                                            BEGIN
                                                              WhseEmployee.SETCURRENTKEY("Location Code");
                                                              WhseEmployee.SETRANGE("Location Code",LocationCode);
                                                              LookupWhseEmployee.LOOKUPMODE(TRUE);
                                                              LookupWhseEmployee.SETTABLEVIEW(WhseEmployee);
                                                              IF LookupWhseEmployee.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                LookupWhseEmployee.GETRECORD(WhseEmployee);
                                                                AssignedID := WhseEmployee."User ID";
                                                              END;
                                                            END;
                                                             }
      { 17  ;Label        ;0    ;5830 ;3300 ;440  ;ParentControl=16 }
      { 18  ;TextBox      ;3410 ;6820 ;2750 ;440  ;CaptionML=[ENU=Sorting Method for Pick Lines;
                                                              FRA=M‚thode de tri];
                                                   OptionCaptionML=[ENU=" ,Item,Document,Shelf/Bin No.,Due Date,Destination,Bin Ranking,Action Type";
                                                                    FRA=" ,Article,Document,Nø emplacement,D‚lai,Destination,Priorit‚ emplacement,Type action"];
                                                   SourceExpr=SortPick }
      { 19  ;Label        ;0    ;6490 ;3300 ;770  ;ParentControl=18;
                                                   VertAlign=Bottom;
                                                   MultiLine=Yes }
      { 20  ;Label        ;220  ;550  ;3080 ;440  ;ParentControl=21 }
      { 21  ;CheckBox     ;3410 ;550  ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Per Whse. Document;
                                                              FRA=Par document entrep“t];
                                                   SourceExpr=PerWhseDoc }
      { 22  ;Label        ;220  ;2200 ;3080 ;440  ;ParentControl=23 }
      { 23  ;CheckBox     ;3410 ;2200 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Per From Zone;
                                                              FRA=Par zone origine];
                                                   SourceExpr=PerZone }
      { 24  ;CheckBox     ;3410 ;8140 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Do Not Fill Qty. to Handle;
                                                              FRA=Ne pas remplir qt‚ … traiter];
                                                   SourceExpr=DoNotFillQtytoHandle }
      { 25  ;Label        ;0    ;8140 ;3300 ;440  ;ParentControl=24 }
      { 26  ;CheckBox     ;3410 ;7480 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Set Breakbulk Filter;
                                                              FRA=Filtrer d‚conditionnement];
                                                   SourceExpr=BreakbulkFilter }
      { 27  ;Label        ;0    ;7480 ;3300 ;440  ;ParentControl=26 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF LocationCode <> '' THEN BEGIN
                     Location.GET(LocationCode);
                     IF Location."Use ADCS" THEN
                       DoNotFillQtytoHandle := TRUE;
                   END;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             FRA=Options] }

      { 13  ;2   ;Group     ;
                  CaptionML=[ENU=Create Pick;
                             FRA=Cr‚er pr‚lŠvement] }

      { 21  ;3   ;Field     ;
                  CaptionML=[ENU=Per Whse. Document;
                             FRA=Par document entrep“t];
                  SourceExpr=PerWhseDoc }

      { 3   ;3   ;Field     ;
                  CaptionML=[ENU=Per Cust./Vend./Loc.;
                             FRA=Par client/fourn./mag.];
                  SourceExpr=PerDestination }

      { 6   ;3   ;Field     ;
                  CaptionML=[ENU=Per Item;
                             FRA=Par article];
                  SourceExpr=PerItem }

      { 23  ;3   ;Field     ;
                  CaptionML=[ENU=Per From Zone;
                             FRA=Par zone origine];
                  SourceExpr=PerZone }

      { 8   ;3   ;Field     ;
                  CaptionML=[ENU=Per Bin;
                             FRA=Par emplacement];
                  SourceExpr=PerBin }

      { 10  ;3   ;Field     ;
                  CaptionML=[ENU=Per Due Date;
                             FRA=Par d‚lai];
                  SourceExpr=PerDate }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Max. No. of Pick Lines;
                             FRA=Nombre max. de lignes];
                  BlankZero=Yes;
                  SourceExpr=MaxNoOfLines;
                  MultiLine=Yes }

      { 12  ;2   ;Field     ;
                  CaptionML=[ENU=Max. No. of Pick Source Docs.;
                             FRA=Nombre max. de doc. origine];
                  BlankZero=Yes;
                  SourceExpr=MaxNoOfSourceDoc;
                  MultiLine=Yes }

      { 16  ;2   ;Field     ;
                  CaptionML=[ENU=Assigned User ID;
                             FRA=Code utilisateur affect‚];
                  SourceExpr=AssignedID;
                  TableRelation="Warehouse Employee";
                  OnValidate=VAR
                               WhseEmployee@1000 : Record 7301;
                             BEGIN
                               IF AssignedID <> '' THEN
                                 WhseEmployee.GET(AssignedID,LocationCode);
                             END;

                  OnLookup=VAR
                             WhseEmployee@1000 : Record 7301;
                             LookupWhseEmployee@1001 : Form 7348;
                           BEGIN
                             WhseEmployee.SETCURRENTKEY("Location Code");
                             WhseEmployee.SETRANGE("Location Code",LocationCode);
                             LookupWhseEmployee.LOOKUPMODE(TRUE);
                             LookupWhseEmployee.SETTABLEVIEW(WhseEmployee);
                             IF LookupWhseEmployee.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               LookupWhseEmployee.GETRECORD(WhseEmployee);
                               AssignedID := WhseEmployee."User ID";
                             END;
                           END;
                            }

      { 18  ;2   ;Field     ;
                  CaptionML=[ENU=Sorting Method for Pick Lines;
                             FRA=M‚thode de tri];
                  OptionCaptionML=[ENU=" ,Item,Document,Shelf/Bin No.,Due Date,Destination,Bin Ranking,Action Type";
                                   FRA=" ,Article,Document,Nø emplacement,D‚lai,Destination,Priorit‚ emplacement,Type action"];
                  SourceExpr=SortPick;
                  MultiLine=Yes }

      { 26  ;2   ;Field     ;
                  CaptionML=[ENU=Set Breakbulk Filter;
                             FRA=Filtrer d‚conditionnement];
                  SourceExpr=BreakbulkFilter }

      { 24  ;2   ;Field     ;
                  CaptionML=[ENU=Do Not Fill Qty. to Handle;
                             FRA=Ne pas remplir qt‚ … traiter];
                  SourceExpr=DoNotFillQtytoHandle }

      { 14  ;2   ;Field     ;
                  CaptionML=[ENU=Print Pick;
                             FRA=Imprimer pr‚lŠvement];
                  SourceExpr=PrintPick }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Nothing to handle.;FRA=Il n''y a rien … traiter.';
      Text001@1001 : TextConst 'ENU=Pick activity no. %1 has been created.;FRA=Le pr‚lŠvement nø %1 a ‚t‚ cr‚‚.';
      Text002@1002 : TextConst 'ENU=Pick activities no. %1 to %2 have been created.;FRA=Les pr‚lŠvements du nø %1 au nø %2 ont ‚t‚ cr‚‚s.';
      Location@1006 : Record 14;
      PickWkshLine@1004 : Record 7326;
      PickWkshLineFilter@1005 : Record 7326;
      Cust@1011 : Record 18;
      WhseShptLine@1462000 : Record 7321;
      KitSalesLine@1462001 : Record 25000;
      CreatePick@1038 : Codeunit 7312;
      LocationCode@1009 : Code[10];
      AssignedID@1017 : Code[20];
      FirstPickNo@1018 : Code[20];
      FirstSetPickNo@1010 : Code[20];
      LastPickNo@1019 : Code[20];
      MaxNoOfLines@1020 : Integer;
      MaxNoOfSourceDoc@1021 : Integer;
      TempNo@1024 : Integer;
      SortPick@1029 : ' ,Item,Document,Shelf No.,Due Date,Destination,Bin Ranking,Action Type';
      PerDestination@1030 : Boolean;
      PerItem@1031 : Boolean;
      PerZone@1037 : Boolean;
      PerBin@1032 : Boolean;
      PerWhseDoc@1027 : Boolean;
      PerDate@1033 : Boolean;
      PrintPick@1034 : Boolean;
      DoNotFillQtytoHandle@1003 : Boolean;
      Text003@1008 : TextConst 'ENU="You can create a Pick only for the available quantity in %1 %2 = %3,%4 = %5,%6 = %7,%8 = %9.";FRA="Vous pouvez uniquement cr‚er un pr‚lŠvement pour %1 %2 = %3,%4 = %5,%6 = %7,%8 = %9."';
      BreakbulkFilter@1007 : Boolean;
      AvailKitQtyBase@1462002 : Decimal;

    LOCAL PROCEDURE CreateTempLine@1();
    VAR
      PickWhseActivHeader@1001 : Record 5766;
      TempWhseItemTrkgLine@1002 : TEMPORARY Record 6550;
      ItemTrackingMgt@1003 : Codeunit 6500;
      PickQty@1000 : Decimal;
      TempMaxNoOfSourceDoc@1004 : Integer;
      CompPickQty@1462000 : Decimal;
      CompPickQtyBase@1462001 : Decimal;
    BEGIN
      IF PickWkshLine.RECORDLEVELLOCKING THEN
        PickWkshLine.LOCKTABLE;
      REPEAT
        IF Location."Bin Mandatory" AND
           (NOT Location."Always Create Pick Line")
        THEN
          IF PickWkshLine."Build Kit" THEN BEGIN
            IF PickWkshLine.CalcAvailableKitQty(PickWkshLine,TRUE) < PickWkshLine."Qty. to Handle" THEN
              ERROR(
                Text003,
                PickWkshLine.TABLECAPTION,PickWkshLine.FIELDCAPTION("Worksheet Template Name"),
                PickWkshLine."Worksheet Template Name",PickWkshLine.FIELDCAPTION(Name),
                PickWkshLine.Name,PickWkshLine.FIELDCAPTION("Location Code"),
                PickWkshLine."Location Code",PickWkshLine.FIELDCAPTION("Line No."),
                PickWkshLine."Line No.");
          END ELSE
            IF PickWkshLine.CalcAvailableQtyBase(FALSE) < 0 THEN
              ERROR(
                Text003,
                PickWkshLine.TABLECAPTION,PickWkshLine.FIELDCAPTION("Worksheet Template Name"),
                PickWkshLine."Worksheet Template Name",PickWkshLine.FIELDCAPTION(Name),
                PickWkshLine.Name,PickWkshLine.FIELDCAPTION("Location Code"),
                PickWkshLine."Location Code",PickWkshLine.FIELDCAPTION("Line No."),
                PickWkshLine."Line No.");

        IF NOT PickWkshLine."Build Kit" THEN BEGIN
          CreatePick.SetWhseSource(0);
          PickWkshLine.TESTFIELD("Qty. per Unit of Measure");
          CreatePick.SetWhseWkshLine(PickWkshLine,TempNo);
          CASE PickWkshLine."Whse. Document Type" OF
            PickWkshLine."Whse. Document Type"::Shipment:
              CreatePick.SetTempWhseItemTrkgLine(
                PickWkshLine."Whse. Document No.",DATABASE::"Warehouse Shipment Line",'',0,
                PickWkshLine."Whse. Document Line No.",PickWkshLine."Location Code");
            PickWkshLine."Whse. Document Type"::"Internal Pick":
              CreatePick.SetTempWhseItemTrkgLine(
                PickWkshLine."Whse. Document No.",DATABASE::"Whse. Internal Pick Line",'',0,
                PickWkshLine."Whse. Document Line No.",PickWkshLine."Location Code");
            PickWkshLine."Whse. Document Type"::Production:
              CreatePick.SetTempWhseItemTrkgLine(
                PickWkshLine."Source No.",PickWkshLine."Source Type",'',PickWkshLine."Source Line No.",
                PickWkshLine."Source Subline No.",PickWkshLine."Location Code");
            ELSE // Movement Worksheet Line
              CreatePick.SetTempWhseItemTrkgLine(
                PickWkshLine.Name,DATABASE::"Prod. Order Component",PickWkshLine."Worksheet Template Name",
                0,PickWkshLine."Line No.",PickWkshLine."Location Code");
          END;

          PickQty := PickWkshLine."Qty. to Handle";
          IF (PickQty > 0) AND
             (PickWkshLine."Destination Type" = PickWkshLine."Destination Type"::Customer)
          THEN BEGIN
            PickWkshLine.TESTFIELD("Destination No.");
            Cust.GET(PickWkshLine."Destination No.");
            Cust.CheckBlockedCustOnDocs(Cust,PickWkshLine."Source Document",FALSE,FALSE);
          END;

          CreatePick.SetCalledFromWksh(TRUE);

          CreatePick.CreateTempLine(
            PickWkshLine."Location Code",PickWkshLine."Item No.",PickWkshLine."Variant Code",
            PickWkshLine."Unit of Measure Code",'',PickWkshLine."To Bin Code",
            PickWkshLine."Qty. per Unit of Measure",PickQty,PickWkshLine."Qty. to Handle (Base)");

          CreatePick.SaveTempItemTrkgLines;
        END ELSE BEGIN
          KitSalesLine.SETRANGE("Document Type",PickWkshLine."Source Subtype");
          KitSalesLine.SETRANGE("Document No.",PickWkshLine."Source No.");
          KitSalesLine.SETRANGE("Document Line No.",PickWkshLine."Source Line No.");
          KitSalesLine.SETRANGE(Type,KitSalesLine.Type::Item);
          KitSalesLine.SETFILTER("Quantity per",'>0');
          IF KitSalesLine.FINDSET THEN BEGIN
            PickQty := PickWkshLine."Qty. to Handle";
            IF (PickQty > 0) AND
               (PickWkshLine."Destination Type" = PickWkshLine."Destination Type"::Customer)
            THEN BEGIN
              PickWkshLine.TESTFIELD("Destination No.");
              Cust.GET(PickWkshLine."Destination No.");
              Cust.CheckBlockedCustOnDocs(Cust,PickWkshLine."Source Document",FALSE,FALSE);
            END;
            CreatePick.SetWhseSource(6);
            CreatePick.SetWhseWkshLine(PickWkshLine,TempNo);
            WhseShptLine.GET(PickWkshLine."Whse. Document No.",PickWkshLine."Whse. Document Line No.");
            CreatePick.SetWhseShipment2(WhseShptLine);
            REPEAT
              CreatePick.SetWhseKitShipment(KitSalesLine);
              CreatePick.SetTempWhseItemTrkgLine(
                PickWkshLine."Whse. Document No.",DATABASE::"Warehouse Shipment Line",'',
                PickWkshLine."Whse. Document Line No.",KitSalesLine."Line No.",PickWkshLine."Location Code");

              KitSalesLine.TESTFIELD("Qty. per Unit of Measure");
              KitSalesLine.CALCFIELDS("Pick Qty. (Base)");
              IF (PickWkshLine."Qty. to Handle (Base)" * KitSalesLine."Quantity per (Base)") <
                 (KitSalesLine."Extended Quantity (Base)" - KitSalesLine."Qty. Picked (Base)" - KitSalesLine."Pick Qty. (Base)")
              THEN
                CompPickQtyBase :=
                  ROUND(
                    (PickWkshLine."Qty. to Handle (Base)"  * KitSalesLine."Quantity per (Base)"),0.00001)
              ELSE
                CompPickQtyBase :=
                  ROUND(
                    (KitSalesLine."Extended Quantity (Base)" -
                     KitSalesLine."Qty. Picked (Base)" -
                     KitSalesLine."Pick Qty. (Base)"),0.00001);
              CompPickQty := ROUND(CompPickQtyBase / KitSalesLine."Qty. per Unit of Measure",0.00001);
              IF Location."Directed Put-away and Pick" THEN
                CreatePick.CreateTempLine(
                  PickWkshLine."Location Code",KitSalesLine."No.",KitSalesLine."Variant Code",KitSalesLine."Unit of Measure Code",
                  '',Location."Inbound BOM Bin Code",KitSalesLine."Qty. per Unit of Measure",CompPickQty,CompPickQtyBase)
              ELSE
                CreatePick.CreateTempLine(
                  PickWkshLine."Location Code",KitSalesLine."No.",KitSalesLine."Variant Code",KitSalesLine."Unit of Measure Code",
                  '',PickWkshLine."To Bin Code",KitSalesLine."Qty. per Unit of Measure",CompPickQty,CompPickQtyBase);

              CreatePick.SaveTempItemTrkgLines;
            UNTIL KitSalesLine.NEXT = 0;
            PickQty := 0;
          END;
        END;

        // Update/delete lines
        IF NOT PickWkshLine.RECORDLEVELLOCKING THEN
          PickWkshLine.LOCKTABLE(TRUE,TRUE);
        IF PickWkshLine.Quantity =
           PickWkshLine."Qty. Handled" + (PickWkshLine."Qty. to Handle" - PickQty)
        THEN
          PickWkshLine.DELETE(TRUE)
        ELSE BEGIN
          PickWkshLine."Qty. Handled" := PickWkshLine."Qty. Handled" + PickWkshLine."Qty. to Handle" - PickQty;
          PickWkshLine."Qty. Handled (Base)" := PickWkshLine.CalcBaseQty(PickWkshLine."Qty. Handled");
          PickWkshLine."Qty. Outstanding" := PickWkshLine.Quantity - PickWkshLine."Qty. Handled";
          PickWkshLine."Qty. Outstanding (Base)" :=  PickWkshLine.CalcBaseQty(PickWkshLine."Qty. Outstanding");
          PickWkshLine."Qty. to Handle" := 0;
          PickWkshLine."Qty. to Handle (Base)" := 0;
          PickWkshLine.MODIFY;
        END;
      UNTIL PickWkshLine.NEXT = 0;

      CreatePick.CreateWhseDocument(FirstSetPickNo,LastPickNo);
      CreatePick.CheckKitPicks(FirstSetPickNo,LastPickNo);
      IF TempNo = 1 THEN
        FirstPickNo := FirstSetPickNo;
      CreatePick.ReturnTempItemTrkgLines(TempWhseItemTrkgLine);
      ItemTrackingMgt.UpdateWhseItemTrkgLines(TempWhseItemTrkgLine);
      COMMIT;

      TempMaxNoOfSourceDoc := MaxNoOfSourceDoc;
      PickWhseActivHeader.SETRANGE(Type,PickWhseActivHeader.Type::Pick);
      PickWhseActivHeader.SETRANGE("No.",FirstSetPickNo,LastPickNo);
      PickWhseActivHeader.FIND('-');
      REPEAT
        IF SortPick > 0 THEN
          PickWhseActivHeader.SortWhseDoc;
        COMMIT;
        IF PrintPick THEN BEGIN
          REPORT.RUN(REPORT::"Picking List",FALSE,FALSE,PickWhseActivHeader);
          TempMaxNoOfSourceDoc -= 1;
        END;
      UNTIL ((PickWhseActivHeader.NEXT = 0) OR (TempMaxNoOfSourceDoc = 0));
    END;

    PROCEDURE SetWkshPickLine@4(VAR PickWkshLine2@1000 : Record 7326);
    BEGIN
      PickWkshLine.COPYFILTERS(PickWkshLine2);
      LocationCode := PickWkshLine2."Location Code";
    END;

    PROCEDURE GetResultMessage@2() : Boolean;
    BEGIN
      IF FirstPickNo <> '' THEN
        IF FirstPickNo = LastPickNo THEN
          MESSAGE(Text001,FirstPickNo)
        ELSE
          MESSAGE(Text002,FirstPickNo,LastPickNo);
      EXIT(FirstPickNo <> '');
    END;

    PROCEDURE InitializeReport@3(AssignedID2@1013 : Code[20];MaxNoOfLines2@1010 : Integer;MaxNoOfSourceDoc2@1009 : Integer;SortPick2@1007 : ' ,Item,Document,Shelf/Bin No.,Due Date,Ship-To,Bin Ranking,Action Type';PerDestination2@1006 : Boolean;PerItem2@1005 : Boolean;PerZone2@1004 : Boolean;PerBin2@1003 : Boolean;PerWhseDoc2@1002 : Boolean;PerDate2@1001 : Boolean;PrintPick2@1000 : Boolean;DoNotFillQtytoHandle2@1008 : Boolean;BreakbulkFilter2@1011 : Boolean);
    BEGIN
      AssignedID := AssignedID2;
      MaxNoOfLines := MaxNoOfLines2;
      MaxNoOfSourceDoc := MaxNoOfSourceDoc2;
      SortPick := SortPick2;
      PerDestination := PerDestination2;
      PerItem := PerItem2;
      PerZone := PerZone2;
      PerBin := PerBin2;
      PerWhseDoc := PerWhseDoc2;
      PerDate := PerDate2;
      PrintPick := PrintPick2;
      DoNotFillQtytoHandle := DoNotFillQtytoHandle2;
      BreakbulkFilter := BreakbulkFilter2;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}