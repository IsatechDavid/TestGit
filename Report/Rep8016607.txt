OBJECT Report 8016607 Vendor Days To Pay
{
  OBJECT-PROPERTIES
  {
    Date=01/03/10;
    Time=13:57:04;
    Version List=ISA6.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Vendor Days To Pay;
               FRA=D‚lai rŠglement fournisseur];
    TopMargin=1000;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table23;
        DataItemTableView=SORTING(No.);
        PrintOnlyIfDetail=Yes;
        OnPreDataItem=BEGIN
                        VendorFilter := COPYSTR(GETFILTERS,1,MAXSTRLEN(VendorFilter));
                        IF ExportExcel THEN BEGIN
                          CreateExcelHeader;
                        END;
                      END;

        OnAfterGetRecord=BEGIN
                           IF PaymentTerms.Code <> "Payment Terms Code" THEN BEGIN
                             IF NOT PaymentTerms.GET("Payment Terms Code") THEN
                               CLEAR(PaymentTerms);
                           END;

                           VendorBuffer.RESET;
                           VendorBuffer.DELETEALL;
                         END;

        OnPostDataItem=BEGIN
                         IF ExportExcel THEN BEGIN
                           ViewExcel(Text001);
                         END;
                       END;

        ReqFilterFields=No.,Date Filter;
        CalcFields=Balance (LCY);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=17400;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 1000000003;TextBox;14250;0    ;3150 ;423  ;HorzAlign=Right;
                                                         FontSize=7;
                                                         FontBold=No;
                                                         SourceExpr=FORMAT(TODAY,0,4) }
            { 1000000004;TextBox;14250;846  ;3150 ;423  ;HorzAlign=Right;
                                                         FontSize=7;
                                                         FontBold=No;
                                                         SourceExpr=USERID }
            { 1000000005;TextBox;16500;423  ;900  ;423  ;FontSize=7;
                                                         FontBold=No;
                                                         CaptionML=[DEU=Seite;
                                                                    ENU=Page;
                                                                    FRA=Page];
                                                         SourceExpr=CurrReport.PAGENO }
            { 1000000007;Label  ;15600;423  ;900  ;423  ;ParentControl=1000000005;
                                                         FontSize=7;
                                                         FontBold=No }
            { 1000000009;TextBox;0    ;423  ;7800 ;423  ;FontSize=7;
                                                         FontBold=No;
                                                         SourceExpr=COMPANYNAME }
            { 1000000011;TextBox;0    ;0    ;7800 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=Text001 }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=17400;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(VendorFilter <> '');
                         END;

          }
          CONTROLS
          {
            { 1000000008;TextBox;0    ;0    ;17400;423  ;FontSize=8;
                                                         FontBold=No;
                                                         SourceExpr=TABLECAPTION +' : ' + VendorFilter }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=17400;
            SectionHeight=876;
          }
          CONTROLS
          {
            { 1000000015;Label  ;3150 ;0    ;4650 ;846  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Name;
                                                                    FRA=Nom] }
            { 1000000016;Label  ;900  ;0    ;1950 ;846  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[FRA=Nø;
                                                                    ENB=No.] }
            { 1000000017;Shape  ;600  ;0    ;300  ;876  ;ShapeStyle=VertLine }
            { 1000000018;Shape  ;2850 ;0    ;300  ;876  ;ShapeStyle=VertLine }
            { 1000000022;Shape  ;750  ;0    ;16500;30   ;ShapeStyle=HorzLine }
            { 1000000023;Shape  ;750  ;846  ;16500;30   ;ShapeStyle=HorzLine }
            { 1000000019;Shape  ;7800 ;0    ;300  ;876  ;ShapeStyle=VertLine }
            { 1000000013;Label  ;8100 ;0    ;2850 ;846  ;ParentControl=1000000006;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1000000014;Label  ;13200;0    ;1800 ;846  ;ParentControl=1000000031;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1000000020;Shape  ;12900;0    ;300  ;876  ;ShapeStyle=VertLine }
            { 1000000030;Shape  ;15000;0    ;300  ;876  ;ShapeStyle=VertLine }
            { 1000000034;Label  ;15300;0    ;1800 ;846  ;ParentControl=1000000036;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1000000021;Shape  ;17100;0    ;300  ;876  ;ShapeStyle=VertLine }
            { 8016602;Shape     ;10950;0    ;300  ;876  ;ShapeStyle=VertLine }
            { 8016604;Label     ;11250;0    ;1650 ;846  ;ParentControl=8016603;
                                                         VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=17400;
            SectionHeight=1269;
            OnPreSection=BEGIN
                           CalcMean(TotalBuffer, DaysMean,TotalAmount);
                         END;

          }
          CONTROLS
          {
            { 1000000001;Label  ;5700 ;423  ;2100 ;423  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Total;
                                                                    FRA=Total] }
            { 1000000032;TextBox;8100 ;423  ;2850 ;423  ;FontSize=8;
                                                         DecimalPlaces=0:2;
                                                         SourceExpr=-TotalAmount }
            { 8016614;Shape     ;600  ;0    ;300  ;876  ;ShapeStyle=VertLine }
            { 8016615;Shape     ;2850 ;0    ;300  ;876  ;ShapeStyle=VertLine }
            { 8016616;Shape     ;7800 ;0    ;300  ;876  ;ShapeStyle=VertLine }
            { 8016617;Shape     ;10950;0    ;300  ;876  ;ShapeStyle=VertLine }
            { 8016618;Shape     ;12900;0    ;300  ;876  ;ShapeStyle=VertLine }
            { 8016619;Shape     ;15000;0    ;300  ;876  ;ShapeStyle=VertLine }
            { 8016620;Shape     ;17100;0    ;300  ;876  ;ShapeStyle=VertLine }
            { 8016621;Shape     ;750  ;846  ;16500;30   ;ShapeStyle=HorzLine }
            { 8016622;TextBox   ;13200;423  ;1800 ;423  ;FontSize=8;
                                                         CaptionML=[ENU=Theorical Delay;
                                                                    FRA=D‚lai th‚orique];
                                                         DecimalPlaces=0:1;
                                                         SourceExpr=DaysMean[2] }
            { 8016623;TextBox   ;15300;423  ;1800 ;423  ;FontSize=8;
                                                         CaptionML=[ENU=Real Delay;
                                                                    FRA=D‚lai r‚el];
                                                         DecimalPlaces=0:1;
                                                         SourceExpr=DaysMean[1] }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table25;
        DataItemTableView=SORTING(Vendor No.,Posting Date)
                          WHERE(Document Type=CONST(Invoice),
                                Amount=FILTER(<>0),
                                Closed by Entry No.=FILTER(<>0));
        OnAfterGetRecord=BEGIN
                           IF NOT VendLedgEntry.GET("Closed by Entry No.") THEN
                             CurrReport.SKIP;

                           CALCFIELDS("Amount (LCY)");
                           // Calcul du nombre de jours r‚el/th‚orique pour r‚gler la facture
                           NoOfDays[1] := VendLedgEntry."Posting Date" - "Posting Date";
                           NoOfDays[2] := "Due Date" - "Posting Date";
                           AddDaysToSum("Amount (LCY)",NoOfDays);
                         END;

        DataItemLink=Vendor No.=FIELD(No.),
                     Posting Date=FIELD(Date Filter),
                     Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                     Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                     Date Filter=FIELD(Date Filter);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=17400;
            SectionHeight=453;
            OnPreSection=BEGIN
                           CalcMean(VendorBuffer, DaysMean, TotalAmount);
                           CurrReport.SHOWOUTPUT(TotalAmount <> 0);
                         END;

            OnPostSection=BEGIN
                            IF CurrReport.SHOWOUTPUT THEN
                              CreateExcelLine;
                          END;

          }
          CONTROLS
          {
            { 1000000000;TextBox;900  ;0    ;1950 ;423  ;FontSize=8;
                                                         SourceExpr=Vendor."No." }
            { 1000000002;TextBox;3150 ;0    ;4650 ;423  ;FontSize=8;
                                                         SourceExpr=Vendor.Name }
            { 1000000024;Shape  ;750  ;423  ;16500;30   ;ShapeStyle=HorzLine }
            { 1000000025;Shape  ;600  ;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1000000026;Shape  ;2850 ;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1000000027;Shape  ;7800 ;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1000000028;Shape  ;10950;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1000000029;Shape  ;15000;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1000000006;TextBox;8100 ;0    ;2850 ;423  ;FontSize=8;
                                                         CaptionML=[ENU=Amount (LCY);
                                                                    FRA=Montant DS];
                                                         SourceExpr=-TotalAmount }
            { 1000000036;TextBox;15300;0    ;1800 ;423  ;FontSize=8;
                                                         CaptionML=[ENU=Real Delay;
                                                                    FRA=D‚lai r‚el];
                                                         DecimalPlaces=0:1;
                                                         SourceExpr=DaysMean[1] }
            { 1000000037;Shape  ;17100;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1000000031;TextBox;13200;0    ;1800 ;423  ;FontSize=8;
                                                         CaptionML=[ENU=Theorical Delay;
                                                                    FRA=D‚lai th‚orique];
                                                         DecimalPlaces=0:1;
                                                         SourceExpr=DaysMean[2] }
            { 8016603;TextBox   ;11250;0    ;1650 ;423  ;FontSize=8;
                                                         CaptionML=[ENU=Payment Terms;
                                                                    FRA=Conditions paiement];
                                                         SourceExpr=PaymentTerms."Due Date Calculation" }
            { 8016605;Shape     ;12900;0    ;300  ;423  ;ShapeStyle=VertLine }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
    }
    CONTROLS
    {
      { 1000000000;CheckBox;3190;220  ;440  ;440  ;InPage=-1;
                                                   ShowCaption=No;
                                                   CaptionML=[ENU=Excel Export;
                                                              FRA=Export Excel];
                                                   SourceExpr=ExportExcel }
      { 1000000001;Label  ;220  ;220  ;2530 ;440  ;ParentControl=1000000000;
                                                   CaptionML=[ENU=Print to  Excel;
                                                              FRA=Export Excel] }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      VendLedgEntry@1000000000 : Record 25;
      PaymentTerms@8016607 : Record 3;
      VendorBuffer@8016606 : TEMPORARY Record 49;
      TotalBuffer@8016605 : TEMPORARY Record 49;
      ExcelBuffer@8016611 : TEMPORARY Record 370;
      VendorFilter@8016602 : Text[250];
      DaysMean@8016608 : ARRAY [2] OF Decimal;
      TotalAmount@8016609 : Decimal;
      i@8016604 : Integer;
      Text001@1000000009 : TextConst 'ENU=Vendor days to pay;FRA=D‚lai de rŠglement fournisseur';
      CurrExcelLine@8016610 : Integer;
      NoOfDays@8016603 : ARRAY [2] OF Integer;
      ExportExcel@1000000021 : Boolean;
      Text014@1000000037 : TextConst 'ENU=Real Delay;FRA=D‚lai r‚el';
      Text015@1000000038 : TextConst 'ENU=Theorical Delay;FRA=D‚lai th‚orique';

    PROCEDURE CreateExcelHeader@8016602();
    BEGIN
      WITH ExcelBuffer DO BEGIN
        RESET;
        DELETEALL;
      END;
      CurrExcelLine := 1;
      InsertCell(CurrExcelLine,1,Text001,'@');
      InsertCell(CurrExcelLine,6,FORMAT(TODAY,0,4),'@');
      CurrExcelLine +=1;
      IF VendorFilter <> '' THEN
        InsertCell(CurrExcelLine,1,VendorFilter,'@');
      InsertCell(CurrExcelLine,6, USERID,'@');
      CurrExcelLine +=1;
      InsertCell(CurrExcelLine,1,Vendor.FIELDCAPTION("No."),'@');
      InsertCell(CurrExcelLine,2,Vendor.FIELDCAPTION(Name),'@');
      InsertCell(CurrExcelLine,3,"Vendor Ledger Entry".FIELDCAPTION("Amount (LCY)"),'@');
      InsertCell(CurrExcelLine,4,PaymentTerms.TABLECAPTION,'@');
      InsertCell(CurrExcelLine,5,Text015,'@');
      InsertCell(CurrExcelLine,6,Text014,'@');
      CurrExcelLine +=1;
    END;

    PROCEDURE CreateExcelLine@8016603();
    BEGIN
      InsertCell(CurrExcelLine,1,Vendor."No.",'@');
      InsertCell(CurrExcelLine,2,Vendor.Name,'@');
      InsertCell(CurrExcelLine,3,FORMAT(-TotalAmount,0,'<Standard Format,1>'),'0');
      InsertCell(CurrExcelLine,4,FORMAT(PaymentTerms."Due Date Calculation"),'@');
      InsertCell(CurrExcelLine,5,FORMAT(DaysMean[2]),'0');
      InsertCell(CurrExcelLine,6,FORMAT(DaysMean[1]),'0');
      CurrExcelLine +=1;
    END;

    PROCEDURE InsertCell@1000000003(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250];NbFormat@8016602 : Text[30]);
    BEGIN
      ExcelBuffer.INIT;
      ExcelBuffer.VALIDATE("Row No.",RowNo);
      ExcelBuffer.VALIDATE("Column No.",ColumnNo);
      ExcelBuffer."Cell Value as Text" := CellValue;
      ExcelBuffer.NumberFormat := NbFormat;
      ExcelBuffer.Formula := '';
      ExcelBuffer.INSERT;
    END;

    PROCEDURE ViewExcel@1000000002(Name@1000000000 : Text[30]);
    BEGIN
      ExcelBuffer.CreateBook;
      ExcelBuffer.CreateSheet(Name,Name,'','');
      ExcelBuffer.GiveUserControl;
      CLEAR(ExcelBuffer);
    END;

    PROCEDURE CreateExcelBuffer@1000000004();
    BEGIN
      ExcelBuffer.DELETEALL;
      CLEAR(ExcelBuffer);
    END;

    PROCEDURE AddDaysToSum@8016604(pAmount@8016603 : Decimal;pNoOfDays@8016602 : ARRAY [2] OF Integer);
    BEGIN
      FOR i := 1 TO ARRAYLEN(pNoOfDays) DO BEGIN
        // Somme vendeur
        WITH VendorBuffer DO BEGIN
          SETRANGE(Type, i);
          SETRANGE("Dimension Entry No.", pNoOfDays[i]);
          IF NOT FINDFIRST THEN BEGIN
            INIT;
            Type := i;
            "Dimension Entry No." := pNoOfDays[i];
            INSERT;
          END;
          Amount += pAmount;
          MODIFY;
        END; // WITH
        // Somme total
        WITH TotalBuffer DO BEGIN
          SETRANGE(Type, i);
          SETRANGE("Dimension Entry No.", pNoOfDays[i]);
          IF NOT FINDFIRST THEN BEGIN
            INIT;
            Type := i;
            "Dimension Entry No." := pNoOfDays[i];
            INSERT;
          END;
          Amount += pAmount;
          MODIFY;
        END; // WITH
      END;
    END;

    PROCEDURE CalcMean@8016605(VAR pBuffer@8016602 : Record 49;VAR pResultMean@8016603 : ARRAY [2] OF Decimal;VAR pTotalAmount@8016605 : Decimal);
    VAR
      lAmount@8016604 : ARRAY [2] OF Decimal;
    BEGIN
      CLEAR(pResultMean);
      FOR i := 1 TO ARRAYLEN(pResultMean) DO BEGIN
        CLEAR(lAmount);
        WITH pBuffer DO BEGIN
          RESET;
          SETRANGE(Type, i);
          IF FINDFIRST THEN
            REPEAT
              lAmount[1] += Amount;
              lAmount[2] += "Dimension Entry No." * Amount;
            UNTIL pBuffer.NEXT=0;
          IF lAmount[1] = 0 THEN
            pResultMean[i] := 0
          ELSE
            pResultMean[i] := lAmount[2] / lAmount[1];
        END; //WITH
      END;
      pTotalAmount := lAmount[1];
    END;

    BEGIN
    {
      /** @r ISA02 @d 01/03/10 @a ISAT.ST @v ISA6.00.00.01 @s Refonte **/
      /** @r ISA01 @d 07/07/09 @a ISAT.MA @v ISA6.00.00.01 @s Migration v6 **/
    }
    END.
  }
  RDLDATA
  {
  }
}