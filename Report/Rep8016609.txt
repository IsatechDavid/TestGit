OBJECT Report 8016609 Reminder Isatech +
{
  OBJECT-PROPERTIES
  {
    Date=07/07/09;
    Time=11:25:09;
    Version List=ISA6.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Reminder Isatech +;
               FRA=Relance Isatech +];
    TopMargin=0;
    OnInitReport=BEGIN
                   GLSetup.GET;
                 END;

    HorzGrid=210;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table297;
        DataItemTableView=SORTING(No.);
        NewPagePerRecord=Yes;
        ReqFilterHeadingML=[ENU=Reminder;
                            FRA=Relance];
        OnPreDataItem=BEGIN
                        CompanyInfo.GET;
                        FormatAddrCodeunit.Company(CompanyAddr,CompanyInfo);
                      END;

        OnAfterGetRecord=BEGIN
                           CurrReport.LANGUAGE := Language.GetLanguageID("Language Code");

                           FormatAddr(CustAddr);
                           IF "Your Reference" = '' THEN
                             ReferenceText := ''
                           ELSE
                             ReferenceText := FIELDCAPTION("Your Reference");
                           IF "VAT Registration No." = '' THEN
                             VATNoText := ''
                           ELSE
                             VATNoText := FIELDCAPTION("VAT Registration No.");
                           IF "Currency Code" = '' THEN BEGIN
                             GLSetup.TESTFIELD("LCY Code");
                             TotalText := STRSUBSTNO(Text000,GLSetup."LCY Code");
                             TotalInclVATText := STRSUBSTNO(Text001,GLSetup."LCY Code");
                           END ELSE BEGIN
                             TotalText := STRSUBSTNO(Text000,"Currency Code");
                             TotalInclVATText := STRSUBSTNO(Text001,"Currency Code");
                           END;
                           CurrReport.PAGENO := 1;

                           IF NOT CurrReport.PREVIEW THEN BEGIN
                             IF LogInteraction THEN
                               SegManagement.LogDocument(
                                 8,"No.",0,0,DATABASE::Customer,"Customer No.",'','',"Posting Description",'');
                             IncrNoPrinted;
                           END;
                         END;

        ReqFilterFields=No.;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=CONST(1));
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18060;
            SectionHeight=8883;
          }
          CONTROLS
          {
            { 28  ;TextBox      ;11340;2115 ;6300 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         SourceExpr="Issued Reminder Header"."Document Date";
                                                         Format=<Standard Format,4> }
            { 46  ;TextBox      ;11340;5922 ;6300 ;423  ;FontSize=9;
                                                         SourceExpr=CustAddr[8] }
            { 3   ;TextBox      ;11340;5499 ;6300 ;423  ;FontSize=9;
                                                         SourceExpr=CustAddr[7] }
            { 15  ;TextBox      ;11340;5076 ;6300 ;423  ;FontSize=9;
                                                         SourceExpr=CustAddr[6] }
            { 12  ;TextBox      ;11340;4653 ;6300 ;423  ;FontSize=9;
                                                         SourceExpr=CustAddr[5] }
            { 10  ;TextBox      ;11340;4230 ;6300 ;423  ;FontSize=9;
                                                         SourceExpr=CustAddr[4] }
            { 8   ;TextBox      ;11340;3807 ;6300 ;423  ;FontSize=9;
                                                         SourceExpr=CustAddr[3] }
            { 6   ;TextBox      ;11340;3384 ;6300 ;423  ;FontSize=9;
                                                         SourceExpr=CustAddr[2] }
            { 4   ;TextBox      ;11340;2961 ;6300 ;423  ;FontSize=9;
                                                         SourceExpr=CustAddr[1] }
            { 1000000001;TextBox;11340;1692 ;6300 ;423  ;FontSize=9;
                                                         SourceExpr=CompanyInfo.City+',' }
            { 1000000002;TextBox;210  ;7614 ;16380;423  ;FontSize=9;
                                                         SourceExpr=Text011 }
            { 1000000003;TextBox;210  ;8037 ;16380;423  ;FontSize=9;
                                                         SourceExpr=Text012 }
            { 1000000000;TextBox;0    ;2961 ;6300 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=CompanyAddr[1] }
            { 1000000007;TextBox;0    ;3384 ;6300 ;423  ;FontSize=9;
                                                         SourceExpr=CompanyAddr[2] }
            { 1000000008;TextBox;0    ;3807 ;6300 ;423  ;FontSize=9;
                                                         SourceExpr=CompanyAddr[3] }
            { 1000000009;TextBox;0    ;4230 ;6300 ;423  ;FontSize=9;
                                                         SourceExpr=CompanyAddr[4] }
            { 1000000010;TextBox;0    ;4653 ;6300 ;423  ;FontSize=9;
                                                         SourceExpr=CompanyAddr[5] }
            { 1000000014;TextBox;210  ;6768 ;10500;423  ;FontSize=9;
                                                         SourceExpr=Text010 }
            { 1000000039;TextBox;1260 ;5076 ;3990 ;423  ;FontSize=9;
                                                         CaptionML=[ENU=Phone no.;
                                                                    FRA=Nø t‚l.];
                                                         SourceExpr=CompanyInfo."Phone No." }
            { 1000000040;Label  ;0    ;5076 ;1260 ;423  ;ParentControl=1000000039;
                                                         VertAlign=Bottom;
                                                         FontSize=9 }
            { 1000000041;TextBox;1260 ;5499 ;3990 ;423  ;FontSize=9;
                                                         CaptionML=[ENU=Fax no.;
                                                                    FRA=Nø fax];
                                                         SourceExpr=CompanyInfo."Phone No." }
            { 1000000042;Label  ;0    ;5499 ;1260 ;423  ;ParentControl=1000000041;
                                                         VertAlign=Bottom;
                                                         FontSize=9 }
            { 1000000004;TextBox;16800;0    ;840  ;423  ;FontSize=9;
                                                         SourceExpr=CurrReport.PAGENO }
            { 1000000005;Label  ;15960;0    ;840  ;423  ;VertAlign=Bottom;
                                                         FontSize=9;
                                                         CaptionML=[ENU=Page;
                                                                    FRA=Page] }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=18060;
            SectionHeight=4230;
          }
          CONTROLS
          {
            { 1000000006;TextBox;210  ;846  ;3570 ;423  ;FontSize=9;
                                                         SourceExpr=Text013 }
            { 1000000015;TextBox;6720 ;3807 ;10500;423  ;FontSize=9;
                                                         SourceExpr=Text50002 }
            { 1000000018;TextBox;3780 ;846  ;2520 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr="Issued Reminder Line"."Remaining Amount" + ReminderInterestAmount + "Issued Reminder Line"."VAT Amount";
                                                         AutoFormatType=1;
                                                         AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }
            { 1000000019;TextBox;6510 ;846  ;10710;423  ;FontSize=9;
                                                         SourceExpr=Text014 }
            { 1000000016;TextBox;210  ;1692 ;17010;423  ;FontSize=9;
                                                         SourceExpr=text015 }
            { 1000000017;TextBox;210  ;2538 ;17220;423  ;FontSize=9;
                                                         SourceExpr=Text016 + ' ' + Text010 + ' ' +Text017 }
            { 1000000020;TextBox;6300 ;846  ;210  ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=Text018;
                                                         AutoFormatType=1 }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table298;
        DataItemTableView=SORTING(Reminder No.,Line No.);
        DataItemVarName=IssuedReminderLine3;
        OnPreDataItem=BEGIN
                        IF FIND('-') THEN BEGIN
                          StartLineNo := 0;
                          REPEAT
                            Continue := Type = Type::" ";
                            IF Continue {AND (Description = '')} THEN
                              StartLineNo := "Line No.";
                          UNTIL (NEXT = 0) OR NOT Continue;
                        END;
                        IF FIND('+') THEN BEGIN
                          EndLineNo := "Line No." + 1;
                          REPEAT
                            Continue := Type = Type::" ";
                            IF Continue {AND (Description = '')} THEN
                              EndLineNo := "Line No.";
                          UNTIL (NEXT(-1) = 0) OR NOT Continue;
                        END;

                        SETFILTER("Line No.",'<=%1',StartLineNo);
                      END;

        DataItemLinkReference=Issued Reminder Header;
        DataItemLink=Reminder No.=FIELD(No.);
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table298;
        DataItemTableView=SORTING(Due Date);
        OnPreDataItem=BEGIN
                        VATAmountLine.DELETEALL;
                        SETFILTER("Line No.",STRSUBSTNO('>%1&<%2',StartLineNo,EndLineNo));
                        CurrReport.CREATETOTALS("Remaining Amount","VAT Amount",ReminderInterestAmount);
                      END;

        OnAfterGetRecord=BEGIN
                           VATAmountLine.INIT;
                           VATAmountLine."VAT Identifier" := "VAT Identifier";
                           VATAmountLine."VAT Calculation Type" := "VAT Calculation Type";
                           VATAmountLine."Tax Group Code" := "Tax Group Code";
                           VATAmountLine."VAT %" := "VAT %";
                           VATAmountLine."VAT Base" := Amount;
                           VATAmountLine."VAT Amount" := "VAT Amount";
                           VATAmountLine."Amount Including VAT" := Amount + "VAT Amount";
                           VATAmountLine.InsertLine;

                           CASE Type OF
                             Type::"G/L Account":
                               "Remaining Amount" := Amount;
                             Type::"Customer Ledger Entry":
                               ReminderInterestAmount := Amount;
                           END;
                         END;

        GroupTotalFields=Due Date;
        DataItemLinkReference=Issued Reminder Header;
        DataItemLink=Reminder No.=FIELD(No.);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18060;
            SectionHeight=1299;
          }
          CONTROLS
          {
            { 29  ;Label        ;11760;423  ;1680 ;846  ;ParentControl=36;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=No;
                                                         MultiLine=Yes }
            { 30  ;Label        ;2520 ;423  ;2100 ;846  ;ParentControl=37;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=No;
                                                         MultiLine=Yes }
            { 33  ;Label        ;13860;423  ;2520 ;846  ;ParentControl=40;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=No;
                                                         MultiLine=Yes }
            { 54  ;Label        ;420  ;423  ;1680 ;846  ;ParentControl=90;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=No;
                                                         MultiLine=Yes }
            { 1000000022;Shape  ;0    ;423  ;420  ;876  ;ShapeStyle=VertLine }
            { 1000000023;Shape  ;2100 ;423  ;420  ;846  ;ShapeStyle=VertLine }
            { 1000000024;Shape  ;4620 ;423  ;420  ;846  ;ShapeStyle=VertLine }
            { 1000000026;Label  ;5040 ;423  ;6300 ;846  ;ParentControl=1000000025;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         MultiLine=Yes }
            { 1000000027;Shape  ;11340;423  ;420  ;846  ;ShapeStyle=VertLine }
            { 1000000028;Shape  ;13440;423  ;420  ;846  ;ShapeStyle=VertLine }
            { 1000000029;Shape  ;16380;423  ;420  ;876  ;ShapeStyle=VertLine }
            { 1000000037;Shape  ;210  ;423  ;16380;30   ;ShapeStyle=HorzLine }
            { 1000000038;Shape  ;210  ;1269 ;16380;30   ;ShapeStyle=HorzLine }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18060;
            SectionHeight=453;
            KeepWithNext=No;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT := ("Line No." > StartLineNo) AND (Type = Type::"Customer Ledger Entry");
                         END;

          }
          CONTROLS
          {
            { 36  ;TextBox      ;11760;0    ;1680 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         CaptionML=[ENU=Date;
                                                                    FRA=Date];
                                                         SourceExpr="Posting Date" }
            { 37  ;TextBox      ;2520 ;0    ;2100 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         SourceExpr="Document No." }
            { 40  ;TextBox      ;13860;0    ;2520 ;423  ;FontSize=9;
                                                         SourceExpr="Remaining Amount";
                                                         AutoFormatType=1;
                                                         AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }
            { 90  ;TextBox      ;420  ;0    ;1680 ;423  ;FontSize=9;
                                                         CaptionML=[ENU=Document Type;
                                                                    FRA=Type document];
                                                         SourceExpr="Document Type" }
            { 1000000025;TextBox;5040 ;0    ;6300 ;423  ;FontSize=9;
                                                         SourceExpr=Description }
            { 1000000030;Shape  ;0    ;0    ;420  ;453  ;ShapeStyle=VertLine }
            { 1000000031;Shape  ;2100 ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000032;Shape  ;4620 ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000033;Shape  ;11340;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000034;Shape  ;13440;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000035;Shape  ;16380;0    ;420  ;453  ;ShapeStyle=VertLine }
            { 1000000036;Shape  ;210  ;423  ;16380;30   ;ShapeStyle=HorzLine }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table298;
        DataItemTableView=SORTING(Reminder No.,Line No.);
        DataItemVarName=IssuedReminderLine2;
        OnPreDataItem=BEGIN
                        SETFILTER("Line No.",'>=%1',EndLineNo);
                      END;

        DataItemLinkReference=Issued Reminder Header;
        DataItemLink=Reminder No.=FIELD(No.);
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        DataItemVarName=VATCounter;
        OnPreDataItem=BEGIN
                        IF "Issued Reminder Line"."VAT Amount" = 0 THEN
                          CurrReport.BREAK;
                        SETRANGE(Number,1,VATAmountLine.COUNT);
                        CurrReport.CREATETOTALS(VATAmountLine."VAT Base",VATAmountLine."VAT Amount",VATAmountLine."Amount Including VAT");
                      END;

        OnAfterGetRecord=BEGIN
                           VATAmountLine.GetLine(Number);
                         END;

      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=3850;
      Height=990;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   //LogInteraction := SegManagement.FindInteractTmplCode(8) <> '';
                   //RequestOptionsForm.LogInteraction.ENABLED(LogInteraction);
                 END;

    }
    CONTROLS
    {
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Total %1;FRA=Total %1';
      Text001@1001 : TextConst 'ENU=Total %1 Incl. VAT;FRA=Total %1 TTC';
      Text002@1002 : TextConst 'ENU=Page %1;FRA=Page %1';
      GLSetup@1003 : Record 98;
      CompanyInfo@1004 : Record 79;
      VATAmountLine@1005 : TEMPORARY Record 290;
      Language@1007 : Record 8;
      FormatAddrCodeunit@1008 : Codeunit 365;
      SegManagement@1009 : Codeunit 5051;
      CustAddr@1010 : ARRAY [8] OF Text[50];
      CompanyAddr@1011 : ARRAY [8] OF Text[50];
      VATNoText@1012 : Text[30];
      ReferenceText@1013 : Text[30];
      TotalText@1014 : Text[50];
      TotalInclVATText@1015 : Text[50];
      ReminderInterestAmount@1016 : Decimal;
      StartLineNo@1017 : Integer;
      EndLineNo@1018 : Integer;
      Continue@1019 : Boolean;
      DimText@1020 : Text[120];
      OldDimText@1021 : Text[75];
      ShowInternalInfo@1022 : Boolean;
      LogInteraction@1023 : Boolean;
      Text50000@1000000000 : TextConst 'FRA=Objet : factures impay‚es';
      Text50001@1000000001 : TextConst 'FRA=A l''attention de la comptabilit‚ fournisseurs';
      Text50002@1000000002 : TextConst 'FRA=La comptabilit‚,';
      Text010@1000000003 : TextConst 'ENU=Dear Lady, Mister,;FRA=Cher Madame, Monsieur,';
      Text011@1000000004 : TextConst 'FRA=Sauf erreur ou omission de notre part, nous n''avons pas re‡u, … ce jour, le r‚glement de la(es) facture(s)';
      Text012@1000000005 : TextConst 'FRA=qui vous a (ont) ‚t‚ adr‚ss‚e(s) selon le d‚compte suivant :';
      Text013@1000000006 : TextConst 'FRA="Soit une somme de "';
      Text014@1000000007 : TextConst 'FRA=, dont nous vous prions de bien vouloir nous adresser le rŠglement.';
      text015@1000000008 : TextConst 'FRA=S''il y avait une difficult‚ relative … cette(ces) facture(s), nous vous remercions de nous en faire part.';
      Text016@1000000009 : TextConst 'FRA=Nous vous prions de croire,';
      Text017@1000000010 : TextConst 'FRA=… l''expression de nos sentiments distingu‚s.';
      Text018@1000000011 : TextConst 'FRA=°';

    BEGIN
    {
      /** @r ISA01 @d 07/07/09 @a ISAT.MA @v ISA6.00.00.01 @s Migration v6 **/
    }
    END.
  }
  RDLDATA
  {
  }
}