OBJECT Report 8016618 G/L Trial Balance Shortcut
{
  OBJECT-PROPERTIES
  {
    Date=18/09/12;
    Time=15:19:29;
    Modified=Yes;
    Version List=ISA6.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=G/L Trial Balance Shortcut;
               FRA=Balance comptes g‚n‚raux analytique];
    TopMargin=1000;
    BottomMargin=500;
    LeftMargin=1000;
    OnPreReport=BEGIN
                  Filter := "G/L Account".GETFILTERS;

                  FiltreGl := COPYSTR("G/L Account".GETFILTER("No."),1,30);
                  FiltreDate := "G/L Account".GETFILTER("Date Filter");

                  //FiltreGestion := "G/L Account".GETFILTER("Responsibility Center Filter");
                  FiltreType :=  "G/L Account".GETFILTER("G/L Entry Type Filter");

                  IF FiltreGl <> '' THEN
                    FiltreGlText := COPYSTR(STRSUBSTNO(Text1120005,FiltreGl),1,80)  //DB 23/10/06
                  ELSE
                    FiltreGlText := '';

                  IF FiltreType <> '' THEN
                    FiltreTypeText := STRSUBSTNO(Text1120007,FiltreType)
                  ELSE
                    FiltreTypeText := '';

                  IF FiltreDate <> '' THEN
                    FiltreDateText := STRSUBSTNO(Text1120006,FiltreDate)
                  ELSE
                    FiltreDateText := '';
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table15;
        DataItemTableView=SORTING(No.);
        OnPreDataItem=BEGIN
                        TemporaryTable.RESET;
                        TemporaryTable.DELETEALL;

                        IF GETFILTER("Date Filter") = '' THEN
                          ERROR(Text1120000,FIELDCAPTION("Date Filter"));

                        IF COPYSTR(GETFILTER("Date Filter"),1,1) = '.' THEN
                          ERROR(Text1120001);



                        StartDate := GETRANGEMIN("Date Filter");
                        PreviousEndDate := CLOSINGDATE(StartDate-1);
                        FiltreDateCalc.CreateFiscalYearFilter(TextDate,TextDate,StartDate,0);
                        TextDate := CONVERTSTR(TextDate,'.',',');
                        TextDate := SELECTSTR(1,TextDate);

                        EVALUATE(PreviousStartDate,TextDate);
                        IF COPYSTR(GETFILTER("Date Filter"),STRLEN(GETFILTER("Date Filter")),1) = '.' THEN BEGIN
                          EndDate := 0D;
                        END ELSE BEGIN
                          EndDate := GETRANGEMAX("Date Filter");
                        END;

                        IF Racc1Filter <> '' THEN BEGIN
                          SETFILTER("Global Dimension 1 Filter",Racc1Filter);
                        END;
                        IF Racc2Filter <> '' THEN BEGIN
                          SETFILTER("Global Dimension 2 Filter",Racc2Filter);
                        END;
                      END;

        OnAfterGetRecord=BEGIN
                           //IF "Income/Balance" = 0 THEN BEGIN
                             SETRANGE("Date Filter",StartDate,EndDate);
                           //END ELSE BEGIN
                           //  SETRANGE("Date Filter",0D,EndDate);
                           //END;
                           CALCFIELDS("Debit Amount","Credit Amount");

                           GLAccount2 := "G/L Account";

                           //IF "G/L Account".GETFILTER("Responsibility Center Filter") <> '' THEN BEGIN
                           //  "G/L Account".COPYFILTER("Responsibility Center Filter",GLAccount2."Responsibility Center Filter");
                           //END;

                           IF "G/L Account".GETFILTER("G/L Entry Type Filter") <> '' THEN
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLAccount2."G/L Entry Type Filter");
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLEntry."Entry Type");


                           GLAccount2.SETRANGE("Date Filter",0D,PreviousEndDate);
                           GLAccount2.CALCFIELDS("Debit Amount","Credit Amount");

                           //IF (GLAccount2."Debit Amount" - "Debit Amount" = 0) AND
                           //  (GLAccount2."Credit Amount" - "Credit Amount" = 0)
                           IF (GLAccount2."Debit Amount" - GLAccount2."Credit Amount" = 0) AND
                             ("Debit Amount"=0 ) AND
                             ("Credit Amount" = 0)
                           THEN BEGIN
                             IF ImprnoMvt THEN BEGIN
                               TemporaryTable.INIT;
                               TemporaryTable.JournalCode := '';
                               TemporaryTable.DocNo := '';
                               TemporaryTable.ExternalDocNo := '';
                               TemporaryTable.EntryNo := '';
                               TemporaryTable.AccountNo := '';
                               TemporaryTable.AccountNo2 := '';
                               TemporaryTable."Text 3" := '';
                               TemporaryTable.PostingDate := 0D;
                               IF (Level1 IN [0,1]) OR (Level2 IN [1]) THEN BEGIN
                                 CASE Level1 OF
                                   0,1 : BEGIN
                                     TemporaryTable.AccountNo := "G/L Account"."No.";
                                     IF "Account Type" <> "Account Type"::Posting THEN BEGIN
                                       TemporaryTable."Text 3" := 'OK';
                                     END;
                                   END;
                                   2 : BEGIN
                                     TemporaryTable.AccountNo := '';
                                   END;
                                   3 : BEGIN
                                     TemporaryTable.AccountNo := '';
                                   END;
                                 END;
                                 CASE Level2 OF
                                   1 : BEGIN
                                     TemporaryTable.AccountNo2 := "G/L Account"."No.";
                                     IF "Account Type" <> "Account Type"::Posting THEN BEGIN
                                       TemporaryTable."Text 3" := 'OK';
                                     END;
                                   END;
                                 END;
                                 TemporaryTable.INSERT;
                               END;
                             END;
                             CurrReport.SKIP;
                           END ELSE BEGIN
                             IF "Account Type" <> "Account Type"::Posting THEN BEGIN
                               TemporaryTable.INIT;
                               TemporaryTable.JournalCode := '';
                               TemporaryTable.DocNo := '';
                               TemporaryTable.ExternalDocNo := '';
                               TemporaryTable.EntryNo := '';
                               TemporaryTable.AccountNo := '';
                               TemporaryTable.AccountNo2 := '';
                               TemporaryTable."Text 3" := '';
                               TemporaryTable.PostingDate := 0D;
                               IF (Level1 IN [0,1]) OR (Level2 IN [1]) THEN BEGIN
                                 CASE Level1 OF
                                   0,1 : BEGIN
                                     TemporaryTable.AccountNo := "G/L Account"."No.";
                                     IF "Account Type" <> "Account Type"::Posting THEN BEGIN
                                       TemporaryTable."Text 3" := 'OK';
                                     END;
                                   END;
                                   2 : BEGIN
                                     TemporaryTable.AccountNo := '';
                                   END;
                                   3 : BEGIN
                                     TemporaryTable.AccountNo := '';
                                   END;
                                 END;
                                 CASE Level2 OF
                                   1 : BEGIN
                                     TemporaryTable.AccountNo2 := "G/L Account"."No.";
                                     IF "Account Type" <> "Account Type"::Posting THEN BEGIN
                                       TemporaryTable."Text 3" := 'OK';
                                     END;
                                   END;
                                 END;
                                 TemporaryTable.TotalDebit := "Debit Amount";
                                 TemporaryTable.TotalCredit := "Credit Amount";
                                 TemporaryTable.INSERT;
                               END;
                             END;
                           END;
                         END;

        ReqFilterFields=No.,Date Filter,G/L Entry Type Filter;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table17;
        DataItemTableView=SORTING(G/L Account No.,Posting Date,Source Code);
        OnPreDataItem=BEGIN
                        //SETRANGE("Posting Date",StartDate,CLOSINGDATE(EndDate));
                        SETRANGE("Posting Date",StartDate,EndDate);
                        IF Racc1Filter <> '' THEN BEGIN
                          SETFILTER("Global Dimension 1 Code",Racc1Filter);
                        END;
                        IF Racc2Filter <> '' THEN BEGIN
                          SETFILTER("Global Dimension 2 Code",Racc2Filter);
                        END;
                      END;

        OnAfterGetRecord=BEGIN
                           TemporaryTable.RESET;
                           CASE Level1 OF
                             0,1 : BEGIN
                               TemporaryTable.SETRANGE(AccountNo,"G/L Account No.");
                             END;
                             2 : BEGIN
                               TemporaryTable.SETRANGE(AccountNo,"Global Dimension 1 Code");
                             END;
                             3 : BEGIN
                               TemporaryTable.SETRANGE(AccountNo,"Global Dimension 2 Code");
                             END;
                           END;
                           CASE Level2 OF
                             1 : BEGIN
                               TemporaryTable.SETRANGE(AccountNo2,"G/L Account No.");
                             END;
                             2 : BEGIN
                               TemporaryTable.SETRANGE(AccountNo2,"Global Dimension 1 Code");
                             END;
                             3 : BEGIN
                               TemporaryTable.SETRANGE(AccountNo2,"Global Dimension 2 Code");
                             END;
                           END;

                           IF NOT TemporaryTable.FIND('-') THEN BEGIN
                             TemporaryTable.INIT;
                             TemporaryTable.JournalCode := '';
                             TemporaryTable.DocNo := '';
                             TemporaryTable.ExternalDocNo := '';
                             TemporaryTable.EntryNo := '';
                             TemporaryTable.AccountNo := '';
                             TemporaryTable.AccountNo2 := '';
                             TemporaryTable."Text 3" := '';
                             TemporaryTable.PostingDate := 0D;
                             CASE Level1 OF
                               0,1 : BEGIN
                                 TemporaryTable.AccountNo := "G/L Account No.";
                                 IF "G/L Account"."Account Type" <> "G/L Account"."Account Type"::Posting THEN BEGIN
                                   TemporaryTable."Text 3" := 'OK';
                                 END;
                               END;
                               2 : BEGIN
                                 TemporaryTable.AccountNo := "Global Dimension 1 Code";
                               END;
                               3 : BEGIN
                                 TemporaryTable.AccountNo := "Global Dimension 2 Code";
                               END;
                             END;
                             CASE Level2 OF
                               1 : BEGIN
                                 TemporaryTable.AccountNo2 := "G/L Account No.";
                                 IF "G/L Account"."Account Type" <> "G/L Account"."Account Type"::Posting THEN BEGIN
                                   TemporaryTable."Text 3" := 'OK';
                                 END;
                               END;
                               2 : BEGIN
                                 TemporaryTable.AccountNo2 := "Global Dimension 1 Code";
                               END;
                               3 : BEGIN
                                 TemporaryTable.AccountNo2 := "Global Dimension 2 Code";
                               END;
                             END;
                             TemporaryTable.INSERT;
                           END;

                           TemporaryTable.TotalDebit += "Debit Amount";
                           TemporaryTable.TotalCredit += "Credit Amount";
                           TemporaryTable.MODIFY;
                         END;

        DataItemLink=G/L Account No.=FIELD(No.),
                     Entry Type=FIELD(G/L Entry Type Filter);
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        DataItemVarName=Boucle;
        OnPreDataItem=BEGIN
                        TemporaryTable.RESET;
                        SETRANGE(Number,1,TemporaryTable.COUNT);

                        IF ExportExcel THEN BEGIN
                          ExcelLineNo := 1;
                          CreateExcelBuffer;
                          InsertRow(ExcelLineNo,4,Text007,'');
                          InsertRow(ExcelLineNo,6,Text008,'');
                          InsertRow(ExcelLineNo,8,Text009,'');
                          ExcelLineNo += 1;
                          InsertRow(ExcelLineNo,1,Text003,'');
                          InsertRow(ExcelLineNo,2,Text004,'');
                          InsertRow(ExcelLineNo,4,Text005,'');
                          InsertRow(ExcelLineNo,5,Text006,'');
                          InsertRow(ExcelLineNo,6,Text005,'');
                          InsertRow(ExcelLineNo,7,Text006,'');
                          InsertRow(ExcelLineNo,8,Text005,'');
                          InsertRow(ExcelLineNo,9,Text006,'');
                        END;
                      END;

        OnAfterGetRecord=BEGIN
                           IF Number = 1 THEN BEGIN
                             TemporaryTable.FIND('-');
                             ShowHeaderLevel1 := TRUE;
                             LastLevel1 := TemporaryTable.AccountNo;
                             IF Level2 <> Level2::" " THEN BEGIN
                               ShowHeaderLevel2 := TRUE;
                               LastLevel2 := TemporaryTable.AccountNo2;
                             END;
                           END ELSE BEGIN
                             TemporaryTable.NEXT;
                             IF (TemporaryTable.AccountNo <> LastLevel1) THEN BEGIN
                               ShowHeaderLevel1 := TRUE;
                               IF Level2 <> Level2::" " THEN BEGIN
                                 ShowHeaderLevel2 := TRUE;
                               END;
                               FOR i := 1 TO 2 DO BEGIN
                                 ValueLevel1[i] := 0;
                               END;
                               LastLevel1 := TemporaryTable.AccountNo;
                             END;
                             IF Level2 <> Level2::" " THEN BEGIN
                               IF (TemporaryTable.AccountNo2 <> LastLevel2) THEN BEGIN
                                 ShowHeaderLevel2 := TRUE;
                               END;
                               LastLevel2 := TemporaryTable.AccountNo2;
                             END;
                           END;

                           ValueLevel1[1] += TemporaryTable.TotalDebit;
                           ValueLevel1[2] += TemporaryTable.TotalCredit;

                           IF NOT (TemporaryTable.NEXT = 0) THEN BEGIN
                             IF (TemporaryTable.AccountNo <> LastLevel1) THEN BEGIN
                               ShowFooterLevel1 := TRUE;
                             END;
                             IF (Level2 <> Level2::" ") AND ((TemporaryTable.AccountNo2 <> LastLevel2) OR ShowFooterLevel1)
                             THEN BEGIN
                               ShowFooterLevel2 := TRUE;
                             END;
                             TemporaryTable.NEXT(-1);
                           END ELSE BEGIN
                             ShowFooterLevel1 := TRUE;
                             IF (Level2 <> Level2::" ") THEN BEGIN
                               ShowFooterLevel2 := TRUE;
                             END;
                           END;
                         END;

        OnPostDataItem=BEGIN
                         IF ExportExcel THEN BEGIN
                           ViewExcel('ExportExcel');
                         END;
                       END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=19230;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 1120002;Label     ;5550 ;0    ;8250 ;423  ;HorzAlign=Center;
                                                         FontSize=12;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=G/L Trial Balance;
                                                                    FRA=Balance analytique comptes g‚n‚raux] }
            { 1000000020;TextBox;15600;423  ;3450 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         SourceExpr=STRSUBSTNO(Text1120004,CurrReport.PAGENO) }
            { 1000000025;TextBox;14400;0    ;4650 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         SourceExpr=USERID+' - '+FORMAT(TODAY)+' - '+FORMAT(TIME,5) }
            { 1000000044;TextBox;0    ;423  ;7500 ;423  ;FontSize=8;
                                                         SourceExpr=COMPANYNAME }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=19230;
            SectionHeight=2538;
          }
          CONTROLS
          {
            { 1000000048;TextBox;0    ;0    ;6300 ;423  ;FontSize=8;
                                                         SourceExpr=STRSUBSTNO(Text1120003,PreviousStartDate) }
            { 1000000049;TextBox;0    ;423  ;6300 ;423  ;FontSize=8;
                                                         SourceExpr=FiltreGlText }
            { 1000000050;TextBox;0    ;846  ;6300 ;423  ;FontSize=8;
                                                         SourceExpr=FiltreDateText }
            { 1000000051;TextBox;0    ;1269 ;6300 ;423  ;FontSize=8;
                                                         SourceExpr=FiltreTypeText }
            { 1000000057;Shape  ;7500 ;846  ;30   ;1692 ;ShapeStyle=VertLine }
            { 1000000059;Label  ;7650 ;846  ;3600 ;846  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Balance at Starting Date;
                                                                    FRA=Solde en d‚but de p‚riode] }
            { 1000000061;Shape  ;9300 ;1692 ;150  ;846  ;ShapeStyle=VertLine }
            { 1000000064;Label  ;11400;846  ;3900 ;846  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Balance Date Range;
                                                                    FRA=Solde p‚riode] }
            { 1000000069;Label  ;15300;846  ;3750 ;846  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Balance at Ending date;
                                                                    FRA=Solde … fin de p‚riode] }
            { 1000000070;Label  ;15300;1692 ;1800 ;846  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Debit;
                                                                    FRA=D‚bit] }
            { 1000000072;Label  ;17250;1692 ;1800 ;846  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Credit;
                                                                    FRA=Cr‚dit] }
            { 1000000034;Label  ;13350;1692 ;1800 ;846  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Credit;
                                                                    FRA=Cr‚dit] }
            { 1000000035;Label  ;9450 ;1692 ;1800 ;846  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Credit;
                                                                    FRA=Cr‚dit] }
            { 1000000036;Label  ;11400;1692 ;1800 ;846  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Debit;
                                                                    FRA=D‚bit] }
            { 1000000037;Label  ;7500 ;1692 ;1800 ;846  ;VertAlign=Bottom;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Debit;
                                                                    FRA=D‚bit] }
            { 1000000038;Shape  ;7500 ;846  ;11700;30   ;ShapeStyle=HorzLine }
            { 1000000039;Shape  ;7500 ;1692 ;11700;30   ;ShapeStyle=HorzLine }
            { 1000000060;Shape  ;0    ;2508 ;19200;30   ;ShapeStyle=HorzLine }
            { 1000000058;Shape  ;11250;846  ;150  ;1692 ;ShapeStyle=VertLine }
            { 1000000063;Shape  ;15150;846  ;150  ;1692 ;ShapeStyle=VertLine }
            { 1000000068;Shape  ;19200;846  ;30   ;1692 ;ShapeStyle=VertLine }
            { 1000000071;Shape  ;13200;1692 ;150  ;846  ;ShapeStyle=VertLine }
            { 1000000073;Shape  ;17100;1692 ;150  ;846  ;ShapeStyle=VertLine }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19230;
            SectionHeight=423;
            OnPreSection=BEGIN
                           IF ShowHeaderLevel1 AND (Level2 > Level2::" ") AND (TemporaryTable."Text 3" = '') THEN BEGIN
                             CurrReport.SHOWOUTPUT(TRUE);
                             SoldeCredit1 := 0;
                             SoldeDebit1 := 0;
                             CASE Level1 OF
                               0,1 : BEGIN
                                 IF GLAccount3.GET(TemporaryTable.AccountNo) THEN BEGIN
                                   Level1TextNo := GLAccount3."No.";
                                   Level1TextName := GLAccount3.Name;
                                 END ELSE BEGIN
                                   Level1TextNo := '';
                                   Level1TextName := '';
                                 END;
                                 GLAccount2.RESET;
                                 IF GLAccount2.GET(TemporaryTable.AccountNo) THEN BEGIN
                           //EC 16/05/05  ISA4.00.01.00 :
                           //        IF "G/L Account".GETFILTER("Responsibility Center Filter") <> '' THEN BEGIN
                           //          "G/L Account".COPYFILTER("Responsibility Center Filter",GLAccount2."Responsibility Center Filter");
                           //        END;

                           IF "G/L Account".GETFILTER("G/L Entry Type Filter") <> '' THEN
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLAccount2."G/L Entry Type Filter");
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLEntry."Entry Type");

                                   IF GLAccount2."Income/Balance" = 0 THEN BEGIN
                                     GLAccount2.SETRANGE("Date Filter",PreviousStartDate,PreviousEndDate)
                                   END ELSE BEGIN
                                     GLAccount2.SETRANGE("Date Filter",0D,PreviousEndDate);
                                   END;
                                   GLAccount2.CALCFIELDS("Debit Amount","Credit Amount");
                                   SoldeCredit1 := GLAccount2."Credit Amount";
                                   SoldeDebit1 := GLAccount2."Debit Amount";
                                 END ELSE BEGIN
                                   GLAccount2.INIT;
                                 END;
                               END;
                               2 : BEGIN
                                 IF DimensionValue.GET(LabelLevel1,TemporaryTable.AccountNo) THEN BEGIN
                                   Level1TextNo := DimensionValue.Code;
                                   Level1TextName := DimensionValue.Name;
                                 END ELSE BEGIN
                                   Level1TextNo := '';
                                   Level1TextName := '';
                                 END;
                                 GLEntry.RESET;
                                 GLEntry.SETCURRENTKEY("G/L Account No.",
                                                       "Business Unit Code",
                                                       "Global Dimension 1 Code",
                                                       "Global Dimension 2 Code",
                                                       "Close Income Statement Dim. ID",
                                                       "Posting Date",
                                                       "Entry Type");
                           //EC 16/05/05  ISA4.00.01.00 :
                           //                            "Responsibility Center");
                                 GLEntry.SETRANGE("Global Dimension 1 Code",TemporaryTable.AccountNo);
                           //EC 16/05/05  ISA4.00.01.00 :
                           //      IF "G/L Account".GETFILTER("Responsibility Center Filter") <> '' THEN BEGIN
                           //        GLEntry.SETRANGE("Responsibility Center","G/L Account"."Responsibility Center Filter");
                           //      END;

                           IF "G/L Account".GETFILTER("G/L Entry Type Filter") <> '' THEN
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLAccount2."G/L Entry Type Filter");
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLEntry."Entry Type");

                                 GLEntry.SETRANGE("Posting Date",PreviousStartDate,PreviousEndDate);
                                 GLEntry.CALCSUMS("Debit Amount","Credit Amount");
                                 SoldeCredit1 := GLEntry."Credit Amount";
                                 SoldeDebit1 := GLEntry."Debit Amount";
                               END;
                               3 : BEGIN
                                 IF DimensionValue.GET(LabelLevel1,TemporaryTable.AccountNo) THEN BEGIN
                                   Level1TextNo := DimensionValue.Code;
                                   Level1TextName := DimensionValue.Name;
                                 END ELSE BEGIN
                                   Level1TextNo := '';
                                   Level1TextName := '';
                                 END;
                                 GLEntry.RESET;
                                 GLEntry.SETCURRENTKEY("G/L Account No.",
                                                       "Business Unit Code",
                                                       "Global Dimension 1 Code",
                                                       "Global Dimension 2 Code",
                                                       "Close Income Statement Dim. ID",
                                                       "Posting Date",
                                                       "Entry Type");
                           //EC 16/05/05  ISA4.00.01.00 :
                           //                            "Responsibility Center");
                                 GLEntry.SETRANGE("Global Dimension 2 Code",TemporaryTable.AccountNo);

                           //EC 16/05/05  ISA4.00.01.00 :
                           //      IF "G/L Account".GETFILTER("Responsibility Center Filter") <> '' THEN BEGIN
                           //        GLEntry.SETRANGE("Responsibility Center","G/L Account"."Responsibility Center Filter");
                           //      END;

                           IF "G/L Account".GETFILTER("G/L Entry Type Filter") <> '' THEN
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLAccount2."G/L Entry Type Filter");
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLEntry."Entry Type");

                                 GLEntry.SETRANGE("Posting Date",PreviousStartDate,PreviousEndDate);
                                 GLEntry.CALCSUMS("Debit Amount","Credit Amount");
                                 IF GLEntry.FIND('-') THEN BEGIN
                                   SoldeCredit1 := GLEntry."Credit Amount";
                                   SoldeDebit1 := GLEntry."Debit Amount";
                                 END ELSE BEGIN
                                   GLEntry.INIT;
                                 END;
                               END;
                             END;
                             ShowHeaderLevel1 := FALSE;
                             IF ExportExcel THEN BEGIN
                               ExcelLineNo += 1;
                               InsertRow(ExcelLineNo,1,Level1TextNo,'');
                               InsertRow(ExcelLineNo,2,Level1TextName,'');
                             END;
                           END ELSE BEGIN
                             CurrReport.SHOWOUTPUT(FALSE);
                           END;
                         END;

          }
          CONTROLS
          {
            { 1000000000;TextBox;2550 ;0    ;4800 ;423  ;FontSize=8;
                                                         SourceExpr=Level1TextName }
            { 1000000001;TextBox;300  ;0    ;2100 ;423  ;FontSize=8;
                                                         SourceExpr=Level1TextNo }
            { 1000000002;Shape  ;11250;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000003;Shape  ;13200;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000004;Shape  ;15150;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000016;Shape  ;17100;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000017;Shape  ;19200;0    ;30   ;423  ;ShapeStyle=VertLine }
            { 1000000018;Shape  ;0    ;0    ;30   ;423  ;ShapeStyle=VertLine }
            { 1000000031;Shape  ;7500 ;0    ;30   ;423  ;ShapeStyle=VertLine }
            { 1000000032;Shape  ;9300 ;0    ;150  ;423  ;ShapeStyle=VertLine }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19230;
            SectionHeight=423;
            OnPreSection=BEGIN
                           IF ShowHeaderLevel1 AND (Level2 > Level2::" ") AND (TemporaryTable."Text 3" = 'OK') THEN BEGIN
                             CurrReport.SHOWOUTPUT(TRUE);
                             SoldeCredit1 := 0;
                             SoldeDebit1 := 0;
                             CASE Level1 OF
                               0,1 : BEGIN
                                 IF GLAccount3.GET(TemporaryTable.AccountNo) THEN BEGIN
                                   Level1TextNo := GLAccount3."No.";
                                   Level1TextName := GLAccount3.Name;
                                 END ELSE BEGIN
                                   Level1TextNo := '';
                                   Level1TextName := '';
                                 END;
                                 GLAccount2.RESET;
                                 IF GLAccount2.GET(TemporaryTable.AccountNo) THEN BEGIN
                           //EC 16/05/05  ISA4.00.01.00 :
                           //        IF "G/L Account".GETFILTER("Responsibility Center Filter") <> '' THEN BEGIN
                           //          "G/L Account".COPYFILTER("Responsibility Center Filter",GLAccount2."Responsibility Center Filter");
                           //        END;

                           IF "G/L Account".GETFILTER("G/L Entry Type Filter") <> '' THEN
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLAccount2."G/L Entry Type Filter");
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLEntry."Entry Type");

                                   IF GLAccount2."Income/Balance" = 0 THEN BEGIN
                                     GLAccount2.SETRANGE("Date Filter",PreviousStartDate,PreviousEndDate)
                                   END ELSE BEGIN
                                     GLAccount2.SETRANGE("Date Filter",0D,PreviousEndDate);
                                   END;
                                   GLAccount2.CALCFIELDS("Debit Amount","Credit Amount");
                                   SoldeCredit1 := GLAccount2."Credit Amount";
                                   SoldeDebit1 := GLAccount2."Debit Amount";
                                 END ELSE BEGIN
                                   GLAccount2.INIT;
                                 END;
                               END;
                               2 : BEGIN
                                 IF DimensionValue.GET(LabelLevel1,TemporaryTable.AccountNo) THEN BEGIN
                                   Level1TextNo := DimensionValue.Code;
                                   Level1TextName := DimensionValue.Name;
                                 END ELSE BEGIN
                                   Level1TextNo := '';
                                   Level1TextName := '';
                                 END;
                                 GLEntry.RESET;
                                 GLEntry.SETCURRENTKEY("G/L Account No.",
                                                       "Business Unit Code",
                                                       "Global Dimension 1 Code",
                                                       "Global Dimension 2 Code",
                                                       "Close Income Statement Dim. ID",
                                                       "Posting Date",
                                                       "Entry Type");
                           //EC 16/05/05  ISA4.00.01.00 :
                           //                            "Responsibility Center");
                                 GLEntry.SETRANGE("Global Dimension 1 Code",TemporaryTable.AccountNo);

                           //EC 16/05/05  ISA4.00.01.00 :
                           //      IF "G/L Account".GETFILTER("Responsibility Center Filter") <> '' THEN BEGIN
                           //        GLEntry.SETRANGE("Responsibility Center","G/L Account"."Responsibility Center Filter");
                           //      END;

                           IF "G/L Account".GETFILTER("G/L Entry Type Filter") <> '' THEN
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLAccount2."G/L Entry Type Filter");
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLEntry."Entry Type");

                                 GLEntry.SETRANGE("Posting Date",PreviousStartDate,PreviousEndDate);
                                 GLEntry.CALCSUMS("Debit Amount","Credit Amount");
                                 SoldeCredit1 := GLEntry."Credit Amount";
                                 SoldeDebit1 := GLEntry."Debit Amount";
                               END;
                               3 : BEGIN
                                 IF DimensionValue.GET(LabelLevel1,TemporaryTable.AccountNo) THEN BEGIN
                                   Level1TextNo := DimensionValue.Code;
                                   Level1TextName := DimensionValue.Name;
                                 END ELSE BEGIN
                                   Level1TextNo := '';
                                   Level1TextName := '';
                                 END;
                                 GLEntry.RESET;
                                 GLEntry.SETCURRENTKEY("G/L Account No.",
                                                       "Business Unit Code",
                                                       "Global Dimension 1 Code",
                                                       "Global Dimension 2 Code",
                                                       "Close Income Statement Dim. ID",
                                                       "Posting Date",
                                                       "Entry Type");
                           //EC 16/05/05  ISA4.00.01.00 :
                           //                            "Responsibility Center");
                                 GLEntry.SETRANGE("Global Dimension 2 Code",TemporaryTable.AccountNo);
                           //EC 16/05/05  ISA4.00.01.00 :
                           //      IF "G/L Account".GETFILTER("Responsibility Center Filter") <> '' THEN BEGIN
                           //        GLEntry.SETRANGE("Responsibility Center","G/L Account"."Responsibility Center Filter");
                           //      END;

                           IF "G/L Account".GETFILTER("G/L Entry Type Filter") <> '' THEN
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLAccount2."G/L Entry Type Filter");
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLEntry."Entry Type");

                                 GLEntry.SETRANGE("Posting Date",PreviousStartDate,PreviousEndDate);
                                 GLEntry.CALCSUMS("Debit Amount","Credit Amount");
                                 IF GLEntry.FIND('-') THEN BEGIN
                                   SoldeCredit1 := GLEntry."Credit Amount";
                                   SoldeDebit1 := GLEntry."Debit Amount";
                                 END ELSE BEGIN
                                   GLEntry.INIT;
                                 END;
                               END;
                             END;
                             ShowHeaderLevel1 := FALSE;
                             IF ExportExcel THEN BEGIN
                               ExcelLineNo += 1;
                               InsertRowWithBold(ExcelLineNo,1,Level1TextNo,'');
                               InsertRowWithBold(ExcelLineNo,2,Level1TextName,'');
                             END;
                           END ELSE BEGIN
                             CurrReport.SHOWOUTPUT(FALSE);
                           END;
                         END;

          }
          CONTROLS
          {
            { 1000000062;Shape  ;0    ;0    ;30   ;423  ;ShapeStyle=VertLine }
            { 1000000065;TextBox;2550 ;0    ;4800 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=Level1TextName }
            { 1000000056;TextBox;300  ;0    ;2100 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=Level1TextNo }
            { 1000000074;Shape  ;7500 ;0    ;30   ;423  ;ShapeStyle=VertLine }
            { 1000000075;Shape  ;9300 ;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000076;Shape  ;11250;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000077;Shape  ;13200;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000078;Shape  ;15150;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000079;Shape  ;17100;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000080;Shape  ;19200;0    ;30   ;423  ;ShapeStyle=VertLine }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19230;
            SectionHeight=423;
            OnPreSection=BEGIN
                           IF ShowFooterLevel2 THEN BEGIN
                             CurrReport.SHOWOUTPUT(TRUE);
                             SoldeCredit2 := 0;
                             SoldeDebit2 := 0;
                             CASE Level2 OF
                               1 : BEGIN
                                 IF GLAccount3.GET(TemporaryTable.AccountNo2) THEN BEGIN
                                   Level2TextNo := GLAccount3."No.";
                                   Level2TextName := GLAccount3.Name;
                                 END ELSE BEGIN
                                   Level2TextNo := '';
                                   Level2TextName := '';
                                 END;
                                 GLEntry.RESET;
                                 GLEntry.SETCURRENTKEY("G/L Account No.",
                                                       "Business Unit Code",
                                                       "Global Dimension 1 Code",
                                                       "Global Dimension 2 Code",
                                                       "Close Income Statement Dim. ID",
                                                       "Posting Date",
                                                       "Entry Type");
                           //EC 16/05/05  ISA4.00.01.00 :
                           //                            "Responsibility Center");
                                 GLEntry.SETRANGE("G/L Account No.",TemporaryTable.AccountNo2);
                           //EC 16/05/05  ISA4.00.01.00 :
                           //      IF "G/L Account".GETFILTER("Responsibility Center Filter") <> '' THEN BEGIN
                           //        GLEntry.SETFILTER("Responsibility Center","G/L Account"."Responsibility Center Filter");
                           //      END;

                           IF "G/L Account".GETFILTER("G/L Entry Type Filter") <> '' THEN
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLAccount2."G/L Entry Type Filter");
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLEntry."Entry Type");

                                 CASE Level1 OF
                                   2 : BEGIN
                                     IF TemporaryTable.AccountNo = '' THEN BEGIN
                                       GLEntry.SETFILTER("Global Dimension 1 Code",'=%1','');
                                     END ELSE BEGIN
                                       GLEntry.SETFILTER("Global Dimension 1 Code",TemporaryTable.AccountNo);
                                     END;
                                   END;
                                   3 : BEGIN
                                     IF TemporaryTable.AccountNo = '' THEN BEGIN
                                       GLEntry.SETFILTER("Global Dimension 2 Code",'=%1','');
                                     END ELSE BEGIN
                                       GLEntry.SETFILTER("Global Dimension 2 Code",TemporaryTable.AccountNo);
                                     END;
                                   END;
                                 END;
                                 GLEntry.SETRANGE("Posting Date",PreviousStartDate,PreviousEndDate);
                                 GLEntry.CALCSUMS("Debit Amount","Credit Amount");
                                 SoldeCredit2 := GLEntry."Credit Amount";
                                 SoldeDebit2 := GLEntry."Debit Amount";
                               END;
                               2 : BEGIN
                                 IF DimensionValue.GET(LabelLevel2,TemporaryTable.AccountNo2) THEN BEGIN
                                   Level2TextNo := DimensionValue.Code;
                                   Level2TextName := DimensionValue.Name;
                                 END ELSE BEGIN
                                   Level2TextNo := '';
                                   Level2TextName := '';
                                 END;
                                 GLEntry.RESET;
                                 GLEntry.SETCURRENTKEY("G/L Account No.",
                                                       "Business Unit Code",
                                                       "Global Dimension 1 Code",
                                                       "Global Dimension 2 Code",
                                                       "Close Income Statement Dim. ID",
                                                       "Posting Date",
                                                       "Entry Type");
                           //EC 16/05/05  ISA4.00.01.00 :
                           //                            "Responsibility Center");
                                 IF TemporaryTable.AccountNo2 = '' THEN BEGIN
                                   GLEntry.SETFILTER("Global Dimension 1 Code",'=%1','');
                                 END ELSE BEGIN
                                   GLEntry.SETFILTER("Global Dimension 1 Code",TemporaryTable.AccountNo2);
                                 END;


                           //EC 16/05/05  ISA4.00.01.00 :
                           //      IF "G/L Account".GETFILTER("Responsibility Center Filter") <> '' THEN BEGIN
                           //        GLEntry.SETFILTER("Responsibility Center","G/L Account"."Responsibility Center Filter");
                           //      END;

                           IF "G/L Account".GETFILTER("G/L Entry Type Filter") <> '' THEN
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLAccount2."G/L Entry Type Filter");
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLEntry."Entry Type");

                                 CASE Level1 OF
                                   1 : BEGIN
                                     GLEntry.SETRANGE("G/L Account No.",TemporaryTable.AccountNo);
                                   END;
                                   3 : BEGIN
                                     IF TemporaryTable.AccountNo = '' THEN BEGIN
                                       GLEntry.SETFILTER("Global Dimension 2 Code",'=%1','');
                                     END ELSE BEGIN
                                       GLEntry.SETFILTER("Global Dimension 2 Code",TemporaryTable.AccountNo);
                                     END;
                                   END;
                                 END;
                                 GLEntry.SETRANGE("Posting Date",PreviousStartDate,PreviousEndDate);
                                 GLEntry.CALCSUMS("Debit Amount","Credit Amount");
                                 SoldeCredit2 := GLEntry."Credit Amount";
                                 SoldeDebit2 := GLEntry."Debit Amount";
                               END;
                               3 : BEGIN
                                 IF DimensionValue.GET(LabelLevel2,TemporaryTable.AccountNo2) THEN BEGIN
                                   Level2TextNo := DimensionValue.Code;
                                   Level2TextName := DimensionValue.Name;
                                 END ELSE BEGIN
                                   Level2TextNo := '';
                                   Level2TextName := '';
                                 END;
                                 GLEntry.RESET;
                                 GLEntry.SETCURRENTKEY("G/L Account No.",
                                                       "Business Unit Code",
                                                       "Global Dimension 1 Code",
                                                       "Global Dimension 2 Code",
                                                       "Close Income Statement Dim. ID",
                                                       "Posting Date",
                                                       "Entry Type");
                           //EC 16/05/05  ISA4.00.01.00 :
                           //                            "Responsibility Center");
                                 IF TemporaryTable.AccountNo2 = '' THEN BEGIN
                                   GLEntry.SETFILTER("Global Dimension 2 Code",'=%1','');
                                 END ELSE BEGIN
                                   GLEntry.SETFILTER("Global Dimension 2 Code",TemporaryTable.AccountNo2);
                                 END;

                           //EC 16/05/05  ISA4.00.01.00 :
                           //      IF "G/L Account".GETFILTER("Responsibility Center Filter") <> '' THEN BEGIN
                           //        GLEntry.SETFILTER("Responsibility Center","G/L Account"."Responsibility Center Filter");
                           //      END;

                           IF "G/L Account".GETFILTER("G/L Entry Type Filter") <> '' THEN
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLAccount2."G/L Entry Type Filter");
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLEntry."Entry Type");

                                 CASE Level1 OF
                                   1 : BEGIN
                                     GLEntry.SETRANGE("G/L Account No.",TemporaryTable.AccountNo);
                                   END;
                                   2 : BEGIN
                                     IF TemporaryTable.AccountNo = '' THEN BEGIN
                                       GLEntry.SETFILTER("Global Dimension 1 Code",'=%1','');
                                     END ELSE BEGIN
                                       GLEntry.SETFILTER("Global Dimension 1 Code",TemporaryTable.AccountNo);
                                     END;
                                   END;
                                 END;
                                 GLEntry.SETRANGE("Posting Date",PreviousStartDate,PreviousEndDate);
                                 GLEntry.CALCSUMS("Debit Amount","Credit Amount");
                                 SoldeCredit2 := GLEntry."Credit Amount";
                                 SoldeDebit2 := GLEntry."Debit Amount";
                               END;
                               ELSE BEGIN
                                 Level2TextNo := '';
                                 Level2TextName := '';
                               END;
                             END;
                             ShowFooterLevel2 := FALSE;
                             IF ExportExcel THEN BEGIN
                               ExcelLineNo += 1;
                               InsertRow(ExcelLineNo,2,Level2TextNo,'');
                               InsertRow(ExcelLineNo,3,Level2TextName,'');
                               IF SoldeDebit2 - SoldeCredit2 > 0 THEN BEGIN
                                 InsertRow(ExcelLineNo,4,ConvertNumber(SoldeDebit2 - SoldeCredit2),'');
                               END ELSE BEGIN
                                 InsertRow(ExcelLineNo,5,ConvertNumber(SoldeCredit2 - SoldeDebit2),'');
                               END;
                               InsertRow(ExcelLineNo,6,ConvertNumber(TemporaryTable.TotalDebit),'');
                               InsertRow(ExcelLineNo,7,ConvertNumber(TemporaryTable.TotalCredit),'');
                               IF ((TemporaryTable.TotalDebit + SoldeDebit2) - (TemporaryTable.TotalCredit + SoldeCredit2)) > 0 THEN BEGIN
                                 InsertRow(ExcelLineNo,8,ConvertNumber((TemporaryTable.TotalDebit + SoldeDebit2) -
                                                                       (TemporaryTable.TotalCredit + SoldeCredit2)),'');
                               END ELSE BEGIN
                                 InsertRow(ExcelLineNo,9,ConvertNumber((TemporaryTable.TotalCredit + SoldeCredit2) -
                                                                       (TemporaryTable.TotalDebit + SoldeDebit2)),'');
                               END;
                             END;
                           END ELSE BEGIN
                             CurrReport.SHOWOUTPUT(FALSE);
                           END;
                         END;

          }
          CONTROLS
          {
            { 1000000008;TextBox;3750 ;0    ;3600 ;423  ;FontSize=8;
                                                         SourceExpr=Level2TextName }
            { 1000000014;TextBox;13350;0    ;1800 ;423  ;BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=TemporaryTable.TotalCredit }
            { 1000000015;TextBox;11400;0    ;1800 ;423  ;BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=TemporaryTable.TotalDebit }
            { 1000000033;Shape  ;0    ;0    ;30   ;423  ;ShapeStyle=VertLine }
            { 1000000007;TextBox;7500 ;0    ;1800 ;423  ;BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=SoldeDebit2 - SoldeCredit2 }
            { 1000000045;TextBox;9450 ;0    ;1800 ;423  ;BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=SoldeCredit2 - SoldeDebit2 }
            { 1000000046;TextBox;17250;0    ;1800 ;423  ;BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=(TemporaryTable.TotalCredit + SoldeCredit2) - (TemporaryTable.TotalDebit + SoldeDebit2) }
            { 1000000047;TextBox;15300;0    ;1800 ;423  ;BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=(TemporaryTable.TotalDebit + SoldeDebit2) - (TemporaryTable.TotalCredit + SoldeCredit2) }
            { 1000000005;TextBox;1500 ;0    ;2100 ;423  ;FontSize=8;
                                                         SourceExpr=Level2TextNo }
            { 1000000098;Shape  ;7500 ;0    ;30   ;423  ;ShapeStyle=VertLine }
            { 1000000099;Shape  ;9300 ;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000100;Shape  ;11250;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000101;Shape  ;13200;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000102;Shape  ;15150;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000103;Shape  ;17100;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000104;Shape  ;19200;0    ;30   ;423  ;ShapeStyle=VertLine }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19230;
            SectionHeight=423;
            OnPreSection=BEGIN
                           IF ShowFooterLevel1  AND (TemporaryTable."Text 3" = '') THEN BEGIN
                             CurrReport.SHOWOUTPUT(TRUE);
                             CASE Level1 OF
                               0,1 : BEGIN
                                 IF GLAccount3.GET(TemporaryTable.AccountNo) THEN BEGIN
                                   Level1TextNo := GLAccount3."No.";
                                   Level1TextName := GLAccount3.Name;
                                 END ELSE BEGIN
                                   Level1TextNo := '';
                                   Level1TextName := '';
                                 END;
                                 GLAccount2.RESET;
                                 IF GLAccount2.GET(TemporaryTable.AccountNo) THEN BEGIN
                           //EC 16/05/05  ISA4.00.01.00 :
                           //        IF "G/L Account".GETFILTER("Responsibility Center Filter") <> '' THEN BEGIN
                           //          "G/L Account".COPYFILTER("Responsibility Center Filter",GLAccount2."Responsibility Center Filter");
                           //        END;

                           IF "G/L Account".GETFILTER("G/L Entry Type Filter") <> '' THEN
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLAccount2."G/L Entry Type Filter");
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLEntry."Entry Type");

                                   IF GLAccount2."Income/Balance" = 0 THEN BEGIN
                                     GLAccount2.SETRANGE("Date Filter",PreviousStartDate,PreviousEndDate)
                                   END ELSE BEGIN
                                     GLAccount2.SETRANGE("Date Filter",0D,PreviousEndDate);
                                   END;
                                   GLAccount2.CALCFIELDS("Debit Amount","Credit Amount");
                                   SoldeCredit1 := GLAccount2."Credit Amount";
                                   SoldeDebit1 := GLAccount2."Debit Amount";
                                 END ELSE BEGIN
                                   GLAccount2.INIT;
                                 END;
                               END;
                               2 : BEGIN
                                 IF DimensionValue.GET(LabelLevel1,TemporaryTable.AccountNo) THEN BEGIN
                                   Level1TextNo := DimensionValue.Code;
                                   Level1TextName := DimensionValue.Name;
                                 END ELSE BEGIN
                                   Level1TextNo := '';
                                   Level1TextName := '';
                                 END;
                               END;
                               3 : BEGIN
                                 IF DimensionValue.GET(LabelLevel1,TemporaryTable.AccountNo) THEN BEGIN
                                   Level1TextNo := DimensionValue.Code;
                                   Level1TextName := DimensionValue.Name;
                                 END ELSE BEGIN
                                   Level1TextNo := '';
                                   Level1TextName := '';
                                 END;
                               END;
                             END;
                             ShowFooterLevel1 := FALSE;
                             IF ExportExcel THEN BEGIN
                               ExcelLineNo += 1;
                               InsertRow(ExcelLineNo,1,Level1TextNo,'');
                               InsertRow(ExcelLineNo,2,Level1TextName,'');
                               IF SoldeDebit1 - SoldeCredit1 > 0 THEN BEGIN
                                 InsertRow(ExcelLineNo,4,ConvertNumber(SoldeDebit1 - SoldeCredit1),'');
                               END ELSE BEGIN
                                 InsertRow(ExcelLineNo,5,ConvertNumber(SoldeCredit1 - SoldeDebit1),'');
                               END;
                               InsertRow(ExcelLineNo,6,ConvertNumber(ValueLevel1[1]),'');
                               InsertRow(ExcelLineNo,7,ConvertNumber(ValueLevel1[2]),'');
                               IF ((ValueLevel1[1] + SoldeDebit1) - (ValueLevel1[2] + SoldeCredit1)) > 0 THEN BEGIN
                                 InsertRow(ExcelLineNo,8,ConvertNumber((ValueLevel1[1] + SoldeDebit1) - (ValueLevel1[2] + SoldeCredit1)),'');
                               END ELSE BEGIN
                                 InsertRow(ExcelLineNo,9,ConvertNumber((ValueLevel1[2] + SoldeCredit1) - (ValueLevel1[1] + SoldeDebit1)),'');
                               END;
                             END;
                           END ELSE BEGIN
                             CurrReport.SHOWOUTPUT(FALSE);
                           END;
                         END;

          }
          CONTROLS
          {
            { 1000000013;TextBox;13350;0    ;1800 ;423  ;BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=ValueLevel1[2] }
            { 1000000012;TextBox;11400;0    ;1800 ;423  ;BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=ValueLevel1[1] }
            { 1000000043;Shape  ;0    ;0    ;30   ;423  ;ShapeStyle=VertLine }
            { 1000000052;TextBox;7500 ;0    ;1800 ;423  ;BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=SoldeDebit1 - SoldeCredit1 }
            { 1000000053;TextBox;9450 ;0    ;1800 ;423  ;BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=SoldeCredit1 - SoldeDebit1 }
            { 1000000054;TextBox;15300;0    ;1800 ;423  ;BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=(ValueLevel1[1] + SoldeDebit1) - (ValueLevel1[2] + SoldeCredit1) }
            { 1000000055;TextBox;17250;0    ;1800 ;423  ;BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=(ValueLevel1[2] + SoldeCredit1) - (ValueLevel1[1] + SoldeDebit1) }
            { 1000000010;TextBox;600  ;0    ;1800 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=Level1TextNo }
            { 1000000011;TextBox;2550 ;0    ;4800 ;423  ;FontSize=8;
                                                         SourceExpr=Level1TextName }
            { 1000000105;Shape  ;7500 ;0    ;30   ;423  ;ShapeStyle=VertLine }
            { 1000000106;Shape  ;9300 ;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000107;Shape  ;11250;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000108;Shape  ;13200;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000109;Shape  ;15150;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000110;Shape  ;17100;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1000000111;Shape  ;19200;0    ;30   ;423  ;ShapeStyle=VertLine }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19230;
            SectionHeight=453;
            OnPreSection=BEGIN
                           IF ShowFooterLevel1  AND (TemporaryTable."Text 3" = 'OK') THEN BEGIN
                             CurrReport.SHOWOUTPUT(TRUE);
                             CASE Level1 OF
                               0,1 : BEGIN
                                 IF GLAccount3.GET(TemporaryTable.AccountNo) THEN BEGIN
                                   Level1TextNo := GLAccount3."No.";
                                   Level1TextName := GLAccount3.Name;
                                 END ELSE BEGIN
                                   Level1TextNo := '';
                                   Level1TextName := '';
                                 END;
                                 GLAccount2.RESET;
                                 IF GLAccount2.GET(TemporaryTable.AccountNo) THEN BEGIN

                           //EC 16/05/05  ISA4.00.01.00 :
                           //        IF "G/L Account".GETFILTER("Responsibility Center Filter") <> '' THEN BEGIN
                           //          "G/L Account".COPYFILTER("Responsibility Center Filter",GLAccount2."Responsibility Center Filter");
                           //        END;

                           IF "G/L Account".GETFILTER("G/L Entry Type Filter") <> '' THEN
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLAccount2."G/L Entry Type Filter");
                             "G/L Account".COPYFILTER("G/L Entry Type Filter",GLEntry."Entry Type");

                                   IF GLAccount2."Income/Balance" = 0 THEN BEGIN
                                     GLAccount2.SETRANGE("Date Filter",PreviousStartDate,PreviousEndDate)
                                   END ELSE BEGIN
                                     GLAccount2.SETRANGE("Date Filter",0D,PreviousEndDate);
                                   END;
                                   GLAccount2.CALCFIELDS("Debit Amount","Credit Amount");
                                   SoldeCredit1 := GLAccount2."Credit Amount";
                                   SoldeDebit1 := GLAccount2."Debit Amount";
                                 END ELSE BEGIN
                                   GLAccount2.INIT;
                                 END;
                               END;
                               2 : BEGIN
                                 IF DimensionValue.GET(LabelLevel1,TemporaryTable.AccountNo) THEN BEGIN
                                   Level1TextNo := DimensionValue.Code;
                                   Level1TextName := DimensionValue.Name;
                                 END ELSE BEGIN
                                   Level1TextNo := '';
                                   Level1TextName := '';
                                 END;
                               END;
                               3 : BEGIN
                                 IF DimensionValue.GET(LabelLevel1,TemporaryTable.AccountNo) THEN BEGIN
                                   Level1TextNo := DimensionValue.Code;
                                   Level1TextName := DimensionValue.Name;
                                 END ELSE BEGIN
                                   Level1TextNo := '';
                                   Level1TextName := '';
                                 END;
                               END;
                             END;
                             ShowFooterLevel1 := FALSE;
                             IF ExportExcel THEN BEGIN
                               ExcelLineNo += 1;
                               InsertRowWithBold(ExcelLineNo,1,Level1TextNo,'');
                               InsertRowWithBold(ExcelLineNo,2,Level1TextName,'');
                               IF SoldeDebit1 - SoldeCredit1 > 0 THEN BEGIN
                                 InsertRowWithBold(ExcelLineNo,4,ConvertNumber(SoldeDebit1 - SoldeCredit1),'');
                               END ELSE BEGIN
                                 InsertRowWithBold(ExcelLineNo,5,ConvertNumber(SoldeCredit1 - SoldeDebit1),'');
                               END;
                               InsertRowWithBold(ExcelLineNo,6,ConvertNumber(ValueLevel1[1]),'');
                               InsertRowWithBold(ExcelLineNo,7,ConvertNumber(ValueLevel1[2]),'');
                               IF ((ValueLevel1[1] + SoldeDebit1) - (ValueLevel1[2] + SoldeCredit1)) > 0 THEN BEGIN
                                 InsertRowWithBold(ExcelLineNo,8,ConvertNumber((ValueLevel1[1] + SoldeDebit1) - (ValueLevel1[2] + SoldeCredit1)),'');
                               END ELSE BEGIN
                                 InsertRowWithBold(ExcelLineNo,9,ConvertNumber((ValueLevel1[2] + SoldeCredit1) - (ValueLevel1[1] + SoldeDebit1)),'');
                               END;
                             END;
                           END ELSE BEGIN
                             CurrReport.SHOWOUTPUT(FALSE);
                           END;
                         END;

          }
          CONTROLS
          {
            { 1000000082;Shape  ;0    ;0    ;19200;30   ;ShapeStyle=HorzLine }
            { 1120003;Shape     ;19200;30   ;30   ;423  ;ShapeStyle=VertLine }
            { 1120004;TextBox   ;17250;30   ;1800 ;423  ;BackTransparent=Yes;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=(ValueLevel1[2] + SoldeCredit1) - (ValueLevel1[1] + SoldeDebit1) }
            { 1120005;TextBox   ;15300;30   ;1800 ;423  ;BackTransparent=Yes;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=(ValueLevel1[1] + SoldeDebit1) - (ValueLevel1[2] + SoldeCredit1) }
            { 1120006;Shape     ;17100;30   ;150  ;423  ;ShapeStyle=VertLine }
            { 1120007;Shape     ;15150;30   ;150  ;423  ;ShapeStyle=VertLine }
            { 1120008;TextBox   ;13350;30   ;1800 ;423  ;BackTransparent=Yes;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=ValueLevel1[2] }
            { 1120009;Shape     ;13200;30   ;150  ;423  ;ShapeStyle=VertLine }
            { 1120010;TextBox   ;11400;30   ;1800 ;423  ;BackTransparent=Yes;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=ValueLevel1[1] }
            { 1120011;TextBox   ;9450 ;30   ;1800 ;423  ;BackTransparent=Yes;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=SoldeCredit1 - SoldeDebit1 }
            { 1120012;Shape     ;11250;30   ;150  ;423  ;ShapeStyle=VertLine }
            { 1120013;TextBox   ;7500 ;30   ;1800 ;423  ;BackTransparent=Yes;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         BlankNumbers=BlankNegAndZero;
                                                         SourceExpr=SoldeDebit1 - SoldeCredit1 }
            { 1120014;Shape     ;9300 ;30   ;150  ;423  ;ShapeStyle=VertLine }
            { 1120015;Shape     ;7500 ;30   ;30   ;423  ;ShapeStyle=VertLine }
            { 1120016;TextBox   ;2550 ;30   ;4800 ;423  ;BackTransparent=Yes;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=Level1TextName }
            { 1120017;TextBox   ;300  ;30   ;2100 ;423  ;HorzAlign=Left;
                                                         BackTransparent=Yes;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=Level1TextNo }
            { 1120018;Shape     ;0    ;30   ;30   ;423  ;ShapeStyle=VertLine }
          }
           }
        { PROPERTIES
          {
            SectionType=TransFooter;
            SectionWidth=19230;
            SectionHeight=1269;
          }
          CONTROLS
          {
            { 1000000009;Shape  ;0    ;0    ;19200;30   ;ShapeStyle=HorzLine }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=19230;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1000000006;Shape  ;0    ;0    ;19200;30   ;ShapeStyle=HorzLine }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3190;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   SetRequestForm;
                 END;

    }
    CONTROLS
    {
      { 1120079;Label     ;110  ;0    ;4510 ;440  ;CaptionML=[ENU=Print G/L Accs. without balance;
                                                              FRA=Impr. cptes no mouvement‚s] }
      { 1120080;CheckBox  ;4840 ;0    ;440  ;440  ;ShowCaption=No;
                                                   SourceExpr=ImprnoMvt }
      { 1000000002;CheckBox;4840;550  ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Excel export;
                                                              FRA=Export excel];
                                                   SourceExpr=ExportExcel }
      { 1000000003;Label  ;110  ;550  ;4510 ;440  ;ParentControl=1000000002 }
      { 1000000000;TextBox;3410 ;1100 ;2750 ;440  ;Name=CaseLevel1;
                                                   CaptionML=[ENU=Level 1;
                                                              FRA=Niveau 1];
                                                   OptionCaptionML=[ENU=" ,G/L account,Global Dimension 1,Global Dimension 2";
                                                                    FRA=" ,Comptes g‚n‚raux,Axe 1,Axe 2"];
                                                   OptionString=[ ,G/L account,Global Dimension 1,Global Dimension 2];
                                                   SourceExpr=Level1;
                                                   OnValidate=BEGIN
                                                                SetRequestForm;
                                                              END;
                                                               }
      { 1000000001;Label  ;110  ;1100 ;3190 ;440  ;ParentControl=1000000000 }
      { 1000000004;TextBox;3410 ;1650 ;2750 ;440  ;Name=CaseLevel2;
                                                   CaptionML=[ENU=Level 2;
                                                              FRA=Niveau 2];
                                                   OptionCaptionML=[ENU=" ,G/L account,Global Dimension 1,Global Dimension 2";
                                                                    FRA=" ,Comptes g‚n‚raux,Axe 1,Axe 2"];
                                                   OptionString=[ ,G/L account,Global Dimension 1,Global Dimension 2];
                                                   SourceExpr=Level2;
                                                   OnValidate=BEGIN
                                                                SetRequestForm;
                                                              END;
                                                               }
      { 1000000005;Label  ;110  ;1650 ;3190 ;440  ;ParentControl=1000000004 }
      { 1000000006;TextBox;3410 ;2200 ;2750 ;440  ;Name=FiltreAna;
                                                   CaptionML=[ENU=Global Dimension 1 Filter;
                                                              FRA=Filtre Axe 1];
                                                   SourceExpr=Racc1Filter;
                                                   CaptionClass='1,3,1';
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                SetRequestForm;
                                                              END;
                                                               }
      { 1000000007;Label  ;110  ;2200 ;3190 ;440  ;ParentControl=1000000006 }
      { 1000000008;TextBox;3410 ;2750 ;2750 ;440  ;Name=FiltreGroup;
                                                   CaptionML=[ENU=Global Dimension 2 Filter;
                                                              FRA=Filtre Axe 2];
                                                   SourceExpr=Racc2Filter;
                                                   CaptionClass='1,3,2';
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                SetRequestForm;
                                                              END;
                                                               }
      { 1000000009;Label  ;110  ;2750 ;3190 ;440  ;ParentControl=1000000008 }
      { 1100281000;TextBox;6270 ;1100 ;2750 ;440  ;Editable=No;
                                                   Border=No;
                                                   SourceExpr=LabelLevel1 }
      { 1100281001;TextBox;6270 ;1650 ;2750 ;440  ;Editable=No;
                                                   Border=No;
                                                   SourceExpr=LabelLevel2 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text1120000@1120000 : TextConst 'ENU=You must fill in the %1 field.;FRA=Vous devez renseigner le champ %1.';
      Text1120001@1120001 : TextConst 'ENU=You must specify a Starting Date value.;FRA=Vous devez sp‚cifier une date d‚but.';
      Text1120002@1120002 : TextConst 'ENU=Printed by %1;FRA=Imprim‚ par %1';
      Text1120003@1120003 : TextConst 'ENU=Fiscal Year Start Date : %1;FRA=D‚but exercice comptable : %1';
      Text1120004@1120004 : TextConst 'ENU=Page %1;FRA=Page %1';
      TemporaryTable@1000000032 : TEMPORARY Record 8016603;
      GLAccount2@1120005 : Record 15;
      GLAccount3@1000000046 : Record 15;
      GLEntry@1000000048 : Record 17;
      ExcelBuffer@1000000008 : TEMPORARY Record 370;
      DimensionValue@1000000047 : Record 349;
      FiltreDateCalc@1120006 : Codeunit 358;
      StartDate@1000000027 : Date;
      EndDate@1000000026 : Date;
      PreviousStartDate@1000000025 : Date;
      PreviousEndDate@1000000024 : Date;
      TotalAccountNo@1000000002 : Code[8];
      LabelLevel1@1100281000 : Text[50];
      LabelLevel2@1100281001 : Text[50];
      FiltreDate@1000000019 : Text[30];
      FiltreDateText@1100281007 : Text[80];
      FiltreGl@1000000020 : Text[30];
      FiltreGlText@1100281005 : Text[80];
      FiltreType@1000000021 : Text[30];
      FiltreTypeText@1100281006 : Text[80];
      TextDate@1120011 : Text[30];
      Filter@1000000029 : Text[250];
      PeriodText@1000000028 : Text[30];
      Racc1Filter@1000000007 : Text[250];
      Racc2Filter@1000000006 : Text[250];
      LastLevel1@1000000038 : Text[30];
      LastLevel2@1000000039 : Text[30];
      LastLine@1000000040 : Text[30];
      Level1TextNo@1000000042 : Text[30];
      Level1TextName@1000000043 : Text[50];
      Level2TextNo@1000000044 : Text[30];
      Level2TextName@1000000045 : Text[50];
      PrintFlag@1000000052 : Boolean;
      ShowHeaderLevel1@1000000033 : Boolean;
      ShowHeaderLevel2@1000000034 : Boolean;
      ShowFooterLevel1@1000000036 : Boolean;
      ShowFooterLevel2@1000000035 : Boolean;
      ShowFooterLine@1000000037 : Boolean;
      ImprnoMvt@1120012 : Boolean;
      ExportExcel@1000000003 : Boolean;
      Solde@1000000051 : Decimal;
      ValueLevel1@1000000050 : ARRAY [2] OF Decimal;
      ValueTotal@1000000049 : ARRAY [2] OF Decimal;
      SoldeDebit1@1000000001 : Decimal;
      SoldeCredit1@1000000000 : Decimal;
      SoldeDebit2@1000000004 : Decimal;
      SoldeCredit2@1000000005 : Decimal;
      Text1120005@1100281002 : TextConst 'ENU=G/L Account :;FRA=Compte g‚n‚ral  : %1';
      Text1120006@1100281003 : TextConst 'FRA=Filtre date : %1';
      Text1120007@1100281004 : TextConst 'FRA=Filtre type ‚criture : %1';
      Text60000@1000000009 : TextConst 'FRA=Balance compte g‚n‚raux';
      Text60001@1000000010 : TextConst 'FRA=Solde d‚but de p‚riode';
      Text60002@1000000011 : TextConst 'FRA=Solde p‚riode';
      Text60003@1000000012 : TextConst 'FRA=Solde fin de p‚riode';
      Text60004@1000000013 : TextConst 'FRA=D‚bit';
      Text60005@1000000014 : TextConst 'FRA=Cr‚dit';
      ExcelLineNo@1000000015 : Integer;
      Text60006@1000000016 : TextConst 'FRA=Filtre date : %1';
      Text60007@1000000017 : TextConst 'FRA="D‚but exercice comptable : "';
      Text60008@1000000018 : TextConst 'FRA=Choisissez "Aper‡u" pour exporter dans excel';
      i@1000000041 : Integer;
      Level1@1000000023 : ' ,G/L account,Global Dimension 1,Global Dimension 2';
      Level2@1000000022 : ' ,G/L account,Global Dimension 1,Global Dimension 2';
      Text001@1000000031 : TextConst 'ENU=Please choice level 1 first.;FRA=Veuillez s‚lectionner d''abord le niveau 1.';
      Text002@1000000030 : TextConst 'ENU=Levels must be different.;FRA=Les niveaux doivent ˆtre diff‚rents.';
      Text003@1000000053 : TextConst 'ENU=No.;FRA=Nø';
      Text004@1000000054 : TextConst 'ENU=Name;FRA=Nom';
      Text005@1000000055 : TextConst 'FRA=Debit';
      Text006@1000000056 : TextConst 'FRA=Credit';
      Text007@1000000057 : TextConst 'FRA=Avant p‚riode';
      Text008@1000000058 : TextConst 'FRA=P‚riode';
      Text009@1000000059 : TextConst 'FRA=AprŠs p‚riode';

    PROCEDURE SetRequestForm@1000000003();
    BEGIN
      IF (Level1 = Level1::" ") THEN BEGIN
        Level2 := Level2::" ";
      END;
      IF (Level2 <> Level2::" ") AND (Level1 <> Level1::" ") AND (Level1 = Level2) THEN BEGIN
        ERROR(Text002);
      END;
      IF ((Level2 <> Level2::" ") AND (Level1 = Level1::" ")) THEN BEGIN
        ERROR(Text001);
      END;
      IF (Level1 = Level1::"Global Dimension 1") OR (Level2 = Level2::"Global Dimension 1") THEN BEGIN
        RequestOptionsForm.FiltreAna.VISIBLE := TRUE;
      END ELSE BEGIN
        Racc1Filter := '';
        RequestOptionsForm.FiltreAna.VISIBLE := FALSE;
      END;
      IF (Level1 = Level1::"Global Dimension 2") OR (Level2 = Level2::"Global Dimension 2") THEN BEGIN
        RequestOptionsForm.FiltreGroup.VISIBLE := TRUE;
      END ELSE BEGIN
        Racc2Filter := '';
        RequestOptionsForm.FiltreGroup.VISIBLE := FALSE;
      END;
      SetLabelLevel;
    END;

    PROCEDURE SetLabelLevel@1100281000();
    BEGIN
      CASE Level1 OF
        Level1::"Global Dimension 1" : BEGIN
          DimensionValue.RESET;
          DimensionValue.SETRANGE("Global Dimension No.",1);
          IF DimensionValue.FIND('-') THEN BEGIN
            LabelLevel1 := DimensionValue."Dimension Code";
          END ELSE BEGIN
            LabelLevel1 := '';
          END;
        END;
        Level1::"Global Dimension 2" : BEGIN
          DimensionValue.RESET;
          DimensionValue.SETRANGE("Global Dimension No.",2);
          IF DimensionValue.FIND('-') THEN BEGIN
            LabelLevel1 := DimensionValue."Dimension Code";
          END ELSE BEGIN
            LabelLevel1 := '';
          END;
        END;
        ELSE BEGIN
          LabelLevel1 := '';
        END;
      END;
      CASE Level2 OF
        Level2::"Global Dimension 1" : BEGIN
          DimensionValue.RESET;
          DimensionValue.SETRANGE("Global Dimension No.",1);
          IF DimensionValue.FIND('-') THEN BEGIN
            LabelLevel2 := DimensionValue."Dimension Code";
          END ELSE BEGIN
            LabelLevel2 := '';
          END;
        END;
        Level2::"Global Dimension 2" : BEGIN
          DimensionValue.RESET;
          DimensionValue.SETRANGE("Global Dimension No.",2);
          IF DimensionValue.FIND('-') THEN BEGIN
            LabelLevel2 := DimensionValue."Dimension Code";
          END ELSE BEGIN
            LabelLevel2 := '';
          END;
        END;
        ELSE BEGIN
          LabelLevel2 := '';
        END;
      END;
    END;

    PROCEDURE ConvertNumber@1000000005(Number@1000000000 : Decimal) : Text[50];
    VAR
      locFormat@1000000001 : Text[50];
      locFromCar@1000000004 : TextConst 'FRA=.';
      locToCar@1000000005 : TextConst 'FRA=,';
    BEGIN
      locFormat := '<Sign><Integer><Decimals>';

      EXIT(FORMAT(Number,0,locFormat));
      //EXIT(CONVERTSTR(FORMAT(Number,0,locFormat),locFromCar,locToCar));
    END;

    PROCEDURE InsertRow@1000000000(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250];NbFormat@1000000003 : Text[30]);
    BEGIN
      ExcelBuffer.INIT;
      ExcelBuffer.VALIDATE("Row No.",RowNo);
      ExcelBuffer.VALIDATE("Column No.",ColumnNo);
      ExcelBuffer."Cell Value as Text" := CellValue;
      ExcelBuffer.NumberFormat := NbFormat;
      ExcelBuffer.Formula := '';
      ExcelBuffer.INSERT;
    END;

    PROCEDURE InsertRowWithBold@1000000001(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250];NbFormat@1000000003 : Text[30]);
    BEGIN
      ExcelBuffer.INIT;
      ExcelBuffer.VALIDATE("Row No.",RowNo);
      ExcelBuffer.VALIDATE("Column No.",ColumnNo);
      ExcelBuffer."Cell Value as Text" := CellValue;
      ExcelBuffer.NumberFormat := NbFormat;
      ExcelBuffer.Bold := TRUE;
      ExcelBuffer.Formula := '';
      ExcelBuffer.INSERT;
    END;

    PROCEDURE ViewExcel@1000000002(Name@1000000000 : Text[30]);
    BEGIN
      ExcelBuffer.CreateBook;
      ExcelBuffer.CreateSheet(Name,Name,'','');
      ExcelBuffer.GiveUserControl;
      CLEAR(ExcelBuffer);
    END;

    PROCEDURE CreateExcelBuffer@1000000004();
    BEGIN
      ExcelBuffer.DELETEALL;
      CLEAR(ExcelBuffer);
    END;

    BEGIN
    {
      /** @r IMH01 @d 06/01/11 @a ISAT.MA @v IMH6.01.040 @s Isatech+ */
    }
    END.
  }
  RDLDATA
  {
  }
}