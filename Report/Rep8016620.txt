OBJECT Report 8016620 Cust. Receivables - Payables
{
  OBJECT-PROPERTIES
  {
    Date=18/09/12;
    Time=15:18:51;
    Modified=Yes;
    Version List=ISA6.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Customer Receivables - Payables;
               FRA=Clients : Ech‚ancier];
    TopMargin=1000;
    BottomMargin=500;
    LeftMargin=1500;
    OnPreReport=BEGIN
                  CustFilter := Customer.GETFILTERS;
                  CustDateFilter := Customer.GETFILTER("Date Filter");
                  EndDate := Customer.GETRANGEMAX("Date Filter");

                  TmpDetails.RESET;
                  TmpDetails.SETRANGE("USER ID",USERID);
                  IF TmpDetails.FIND('+') THEN
                    NextEntryNo := TmpDetails."Entry No."+1
                  ELSE
                    NextEntryNo := 1;
                  TmpDetails.RESET;
                END;

    OnPostReport=BEGIN
                   TmpDetails.RESET;
                   TmpDetails.SETRANGE("USER ID",USERID);
                   TmpDetails.DELETEALL;
                 END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table18;
        DataItemTableView=SORTING(No.);
        PrintOnlyIfDetail=Yes;
        OnPreDataItem=BEGIN
                        CurrReport.CREATETOTALS(
                          "Cust. Ledger Entry"."Amount (LCY)",
                          "Cust. Ledger Entry"."Debit Amount (LCY)",
                          "Cust. Ledger Entry"."Credit Amount (LCY)");

                        Window.OPEN(Text010);
                        CustCount := COUNT;
                        CurPercent := 0;
                        CurCust := 1;
                      END;

        OnAfterGetRecord=BEGIN
                           CurCust := CurCust + 1;

                           IF ROUND(CurCust * 100 / CustCount,1) > (CurPercent + 5) THEN BEGIN
                             Window.UPDATE(1,ROUND(CurCust * 9999 / CustCount,1));
                             CurPercent := ROUND(CurCust * 100 / CustCount,1);
                           END;
                         END;

        OnPostDataItem=BEGIN
                         Window.CLOSE;
                         CLEAR(Window);
                       END;

        ReqFilterFields=No.,Search Name,Customer Posting Group,Date Filter;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table21;
        DataItemTableView=SORTING(Customer No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date,Currency Code)
                          WHERE(Open=FILTER(Yes));
        OnPreDataItem=BEGIN
                        IF NOT TreatLedgerEntry THEN
                          CurrReport.BREAK;

                        // <<ISA02.ISAT.MA
                        IF PaymentMethodFilter <> '' THEN
                          SETFILTER("Payment Method Code", PaymentMethodFilter);
                        // >>ISA02.ISAT.MA
                      END;

        OnAfterGetRecord=VAR
                           TotalLettre@1000000000 : Decimal;
                         BEGIN
                           CALCFIELDS(Amount,"Remaining Amount","Original Amt. (LCY)","Remaining Amt. (LCY)");

                           IF Amount = 0 THEN
                             CurrReport.SKIP;

                           //lecture de l'ecriture de base
                           FilterEntry := '0';
                           GlobalCustLedgerEntry := "Cust. Ledger Entry";

                           CumulCustLedgerEntry.RESET;
                           CumulCustLedgerEntry.INIT;
                           CumulCustLedgerEntry.SETCURRENTKEY("Customer No.","Posting Date");
                           CumulCustLedgerEntry.SETRANGE("Customer No.","Customer No.");
                           CumulCustLedgerEntry.SETRANGE("Posting Date",0D,EndDate);

                           SetFilterLedger("Entry No.");

                           CumulCustLedgerEntry.SETFILTER("Entry No.",FilterEntry);
                           TotalLettre := 0;
                           IF CumulCustLedgerEntry.FIND('-') THEN
                             REPEAT
                               CumulCustLedgerEntry.CALCFIELDS(CumulCustLedgerEntry."Amount (LCY)");
                               TotalLettre:=TotalLettre+CumulCustLedgerEntry."Amount (LCY)";
                             UNTIL CumulCustLedgerEntry.NEXT = 0;

                           //Gestion de l'affichage des ‚critures ouvertes ou lettr‚s
                           IF TotalLettre = 0 THEN
                             CurrReport.SKIP;

                           AddCustLedgEntryToTemp("Cust. Ledger Entry");
                         END;

        ReqFilterFields=Document Type;
        DataItemLink=Customer No.=FIELD(No.),
                     Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                     Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                     Due Date=FIELD(Date Filter);
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table10866;
        DataItemTableView=SORTING(Account Type,Account No.,Copied To Line,Payment in Progress)
                          WHERE(Account Type=CONST(Customer),
                                Payment in Progress=CONST(Yes));
        OnPreDataItem=BEGIN
                        IF NOT TreatPaymentLine THEN
                          CurrReport.BREAK;
                      END;

        OnAfterGetRecord=BEGIN
                           // <<ISA02.ISAT.MA
                           IF PaymentMethodFilter <> '' THEN BEGIN
                             PaymentHeader.SETRANGE("No.", "No.");
                             PaymentHeader.SETFILTER("Payment Method Code", PaymentMethodFilter);
                             IF PaymentHeader.ISEMPTY THEN
                               CurrReport.SKIP;
                           END;
                           // >>ISA02.ISAT.MA

                           IF "Payment Line"."Copied To No." = '' THEN
                             AddPaymentLineToTemp("Payment Line");
                         END;

        DataItemLink=Account No.=FIELD(No.),
                     Due Date=FIELD(Date Filter);
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemTable=Table8016604;
        DataItemTableView=SORTING(Bank Account No.,Due Date,Payment Method Code,Source No.);
        OnPreDataItem=BEGIN
                        SETRANGE("USER ID",USERID);
                        BankAccount.INIT;
                      END;

        OnAfterGetRecord=BEGIN
                           IF "Bank Account No."<>BankAccount."No." THEN
                             IF NOT BankAccount.GET("Bank Account No.") THEN
                               BankAccount.INIT;
                         END;

        TotalFields=Amount,Remaining Amount;
        GroupTotalFields=Bank Account No.,Due Date,Payment Method Code,Source No.;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=18750;
            SectionHeight=2961;
          }
          CONTROLS
          {
            { 1100281127;Label  ;300  ;2115 ;1500 ;846  ;ParentControl=1100281070;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100281128;Label  ;1950 ;2115 ;4050 ;846  ;ParentControl=1100281072;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100281129;Label  ;6150 ;2115 ;1950 ;846  ;ParentControl=1100281074;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100281130;Label  ;8250 ;2115 ;1200 ;846  ;ParentControl=1100281076;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100281131;Label  ;9600 ;2115 ;1800 ;846  ;ParentControl=1100281078;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100281132;Label  ;11550;2115 ;1800 ;846  ;ParentControl=1100281080;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100281133;Label  ;13650;2115 ;1500 ;846  ;ParentControl=1100281082;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100281134;Label  ;15300;2115 ;1500 ;846  ;ParentControl=1100281084;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100281135;Label  ;16950;2115 ;1500 ;846  ;ParentControl=1100281086;
                                                         VertAlign=Bottom;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1100281136;Shape  ;150  ;2115 ;18300;30   ;ShapeStyle=HorzLine }
            { 1100281137;Shape  ;150  ;2931 ;18300;30   ;ShapeStyle=HorzLine }
            { 1100281138;Shape  ;0    ;2115 ;300  ;846  ;ShapeStyle=VertLine }
            { 1100281139;Shape  ;18300;2115 ;300  ;846  ;ShapeStyle=VertLine }
            { 1100281140;Shape  ;6000 ;2115 ;150  ;846  ;ShapeStyle=VertLine }
            { 1100281141;Shape  ;8100 ;2115 ;150  ;846  ;ShapeStyle=VertLine }
            { 1100281142;Shape  ;9450 ;2115 ;300  ;846  ;ShapeStyle=VertLine }
            { 1100281143;Shape  ;11400;2115 ;150  ;846  ;ShapeStyle=VertLine }
            { 1100281144;Shape  ;13350;2115 ;300  ;846  ;ShapeStyle=VertLine }
            { 1100281145;Shape  ;15150;2115 ;150  ;846  ;ShapeStyle=VertLine }
            { 1100281146;Shape  ;16800;2115 ;150  ;846  ;ShapeStyle=VertLine }
            { 1100281147;TextBox;15600;0    ;3150 ;423  ;HorzAlign=Right;
                                                         SourceExpr=FORMAT(TODAY,0,4) }
            { 1100281148;TextBox;150  ;423  ;7500 ;423  ;SourceExpr=STRSUBSTNO(Text000,CustDateFilter) }
            { 1100281149;TextBox;18300;423  ;450  ;423  ;CaptionML=[ENU=Page;
                                                                    FRA=Page];
                                                         SourceExpr=CurrReport.PAGENO }
            { 1100281150;Label  ;17550;423  ;750  ;423  ;ParentControl=1100281149 }
            { 1100281151;TextBox;150  ;846  ;7500 ;423  ;SourceExpr=COMPANYNAME }
            { 1100281152;TextBox;16500;846  ;2250 ;423  ;HorzAlign=Right;
                                                         SourceExpr=USERID }
            { 1100281153;Label  ;150  ;0    ;7500 ;423  ;HorzAlign=Left;
                                                         FontSize=12;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Customer Receivables-Payables;
                                                                    FRA=Ech‚ancier client] }
            { 1100281154;TextBox;150  ;1692 ;18150;423  ;SourceExpr=Customer.TABLECAPTION + ': ' + CustFilter }
          }
           }
        { PROPERTIES
          {
            SectionType=GroupHeader;
            SectionWidth=18750;
            SectionHeight=1269;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT((CurrReport.TOTALSCAUSEDBY=FIELDNO("Bank Account No.")) AND (BankAccount."No."<>''));
                         END;

          }
          CONTROLS
          {
            { 1100281126;TextBox;300  ;423  ;16500;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=BankAccount."No." + ' ' + BankAccount.Name }
            { 1100281156;Shape  ;0    ;423  ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281164;Shape  ;18300;423  ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281002;Shape  ;150  ;423  ;18300;30   ;ShapeStyle=HorzLine }
            { 1100281003;Shape  ;150  ;846  ;18300;30   ;ShapeStyle=HorzLine }
          }
           }
        { PROPERTIES
          {
            SectionType=GroupHeader;
            SectionWidth=18750;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(CurrReport.TOTALSCAUSEDBY=FIELDNO("Due Date"));
                         END;

          }
          CONTROLS
          {
            { 1100281088;TextBox;300  ;0    ;5550 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=STRSUBSTNO(Text020,"Due Date") }
            { 1100281089;Shape  ;0    ;0    ;300  ;846  ;ShapeStyle=VertLine }
            { 1100281090;Shape  ;6000 ;0    ;150  ;846  ;ShapeStyle=VertLine }
            { 1100281091;Shape  ;8100 ;0    ;150  ;846  ;ShapeStyle=VertLine }
            { 1100281092;Shape  ;9450 ;0    ;300  ;846  ;ShapeStyle=VertLine }
            { 1100281093;Shape  ;11400;0    ;150  ;846  ;ShapeStyle=VertLine }
            { 1100281094;Shape  ;13350;0    ;300  ;846  ;ShapeStyle=VertLine }
            { 1100281095;Shape  ;15150;0    ;150  ;846  ;ShapeStyle=VertLine }
            { 1100281096;Shape  ;16800;0    ;150  ;846  ;ShapeStyle=VertLine }
            { 1100281097;Shape  ;18300;0    ;300  ;846  ;ShapeStyle=VertLine }
            { 1100281001;Shape  ;150  ;0    ;18300;30   ;ShapeStyle=HorzLine }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=18750;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(NOT GroupBy);
                         END;

          }
          CONTROLS
          {
            { 1100281070;TextBox;300  ;0    ;1500 ;423  ;SourceExpr="Source No." }
            { 1100281072;TextBox;1950 ;0    ;4050 ;423  ;SourceExpr="Source Name" }
            { 1100281074;TextBox;6150 ;0    ;1950 ;423  ;SourceExpr="Document No." }
            { 1100281076;TextBox;8250 ;0    ;1200 ;423  ;SourceExpr="Document Date" }
            { 1100281078;TextBox;9600 ;0    ;1800 ;423  ;SourceExpr=Amount }
            { 1100281080;TextBox;11550;0    ;1950 ;423  ;SourceExpr="Remaining Amount" }
            { 1100281082;TextBox;13650;0    ;1500 ;423  ;SourceExpr="Currency Code" }
            { 1100281084;TextBox;15300;0    ;1500 ;423  ;SourceExpr="Notification Code" }
            { 1100281086;TextBox;16950;0    ;1500 ;423  ;SourceExpr="Payment Method Code" }
            { 1100281167;Shape  ;0    ;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281168;Shape  ;6000 ;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281169;Shape  ;8100 ;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281170;Shape  ;9450 ;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281171;Shape  ;11400;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281172;Shape  ;13350;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281173;Shape  ;15150;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281174;Shape  ;16800;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281175;Shape  ;18300;0    ;300  ;423  ;ShapeStyle=VertLine }
          }
           }
        { PROPERTIES
          {
            SectionType=GroupFooter;
            SectionWidth=18750;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(
                              (CurrReport.TOTALSCAUSEDBY=FIELDNO("Payment Method Code"))
                              AND GroupBy
                              AND IsOnlyOneEntry("Payables-Receivables Details"));
                         END;

          }
          CONTROLS
          {
            { 1100281008;TextBox;300  ;0    ;1500 ;423  ;SourceExpr="Source No." }
            { 1100281009;TextBox;1950 ;0    ;4050 ;423  ;SourceExpr="Source Name" }
            { 1100281012;TextBox;6150 ;0    ;1950 ;423  ;SourceExpr="Document No." }
            { 1100281013;TextBox;8250 ;0    ;1200 ;423  ;SourceExpr="Document Date" }
            { 1100281014;TextBox;9600 ;0    ;1800 ;423  ;SourceExpr=Amount }
            { 1100281024;TextBox;11550;0    ;1950 ;423  ;SourceExpr="Remaining Amount" }
            { 1100281025;TextBox;13650;0    ;1500 ;423  ;SourceExpr="Currency Code" }
            { 1100281026;TextBox;15300;0    ;1500 ;423  ;SourceExpr="Notification Code" }
            { 1100281027;TextBox;16950;0    ;1500 ;423  ;SourceExpr="Payment Method Code" }
            { 1100281028;Shape  ;0    ;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281029;Shape  ;6000 ;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281040;Shape  ;8100 ;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281042;Shape  ;9450 ;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281071;Shape  ;11400;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281073;Shape  ;13350;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281075;Shape  ;15150;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281077;Shape  ;16800;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281079;Shape  ;18300;0    ;300  ;423  ;ShapeStyle=VertLine }
          }
           }
        { PROPERTIES
          {
            SectionType=GroupFooter;
            SectionWidth=18750;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(
                              (CurrReport.TOTALSCAUSEDBY=FIELDNO("Payment Method Code"))
                              AND GroupBy
                              AND NOT IsOnlyOneEntry("Payables-Receivables Details"));
                         END;

          }
          CONTROLS
          {
            { 1100281006;TextBox;300  ;0    ;1500 ;423  ;SourceExpr="Source No." }
            { 1100281007;TextBox;1950 ;0    ;4050 ;423  ;SourceExpr="Source Name" }
            { 1100281010;TextBox;9600 ;0    ;1800 ;423  ;SourceExpr=Amount }
            { 1100281011;TextBox;11550;0    ;1950 ;423  ;SourceExpr="Remaining Amount" }
            { 1100281015;Shape  ;0    ;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281016;Shape  ;6000 ;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281017;Shape  ;8100 ;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281018;Shape  ;9450 ;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281019;Shape  ;11400;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281020;Shape  ;13350;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281021;Shape  ;15150;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281022;Shape  ;16800;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281023;Shape  ;18300;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281083;TextBox;6150 ;0    ;1950 ;423  ;SourceExpr=Text030 }
          }
           }
        { PROPERTIES
          {
            SectionType=GroupFooter;
            SectionWidth=18750;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(CurrReport.TOTALSCAUSEDBY=FIELDNO("Payment Method Code"));
                         END;

          }
          CONTROLS
          {
            { 1100281057;TextBox;11550;0    ;1950 ;423  ;FontBold=Yes;
                                                         SourceExpr="Remaining Amount" }
            { 1100281058;TextBox;9600 ;0    ;1800 ;423  ;FontBold=Yes;
                                                         SourceExpr=Amount }
            { 1100281059;TextBox;300  ;0    ;5700 ;423  ;FontBold=Yes;
                                                         SourceExpr=STRSUBSTNO(Text021,"Payment Method Code") }
            { 1100281060;Shape  ;0    ;0    ;300  ;846  ;ShapeStyle=VertLine }
            { 1100281061;Shape  ;6000 ;0    ;150  ;846  ;ShapeStyle=VertLine }
            { 1100281062;Shape  ;9450 ;0    ;300  ;846  ;ShapeStyle=VertLine }
            { 1100281063;Shape  ;11400;0    ;150  ;846  ;ShapeStyle=VertLine }
            { 1100281064;Shape  ;13350;0    ;300  ;846  ;ShapeStyle=VertLine }
            { 1100281065;Shape  ;15150;0    ;150  ;846  ;ShapeStyle=VertLine }
            { 1100281066;Shape  ;16800;0    ;150  ;846  ;ShapeStyle=VertLine }
            { 1100281067;Shape  ;18300;0    ;300  ;846  ;ShapeStyle=VertLine }
            { 1100281068;Shape  ;9600 ;0    ;3900 ;30   ;ShapeStyle=HorzLine }
            { 1100281069;Shape  ;8100 ;0    ;150  ;846  ;ShapeStyle=VertLine }
          }
           }
        { PROPERTIES
          {
            SectionType=GroupFooter;
            SectionWidth=18750;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(CurrReport.TOTALSCAUSEDBY=FIELDNO("Due Date"));
                         END;

          }
          CONTROLS
          {
            { 1100281043;TextBox;300  ;0    ;5700 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=STRSUBSTNO(Text022,"Due Date") }
            { 1100281044;TextBox;11550;0    ;1950 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr="Remaining Amount" }
            { 1100281045;TextBox;9600 ;0    ;1800 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=Amount }
            { 1100281046;Shape  ;0    ;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281047;Shape  ;6000 ;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281048;Shape  ;8100 ;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281049;Shape  ;9450 ;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281050;Shape  ;11400;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281051;Shape  ;13350;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281052;Shape  ;15150;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281053;Shape  ;16800;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281054;Shape  ;18300;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281055;Shape  ;9600 ;0    ;3900 ;30   ;ShapeStyle=HorzLine }
            { 1100281056;Shape  ;150  ;393  ;18300;30   ;ShapeStyle=HorzLine }
          }
           }
        { PROPERTIES
          {
            SectionType=GroupFooter;
            SectionWidth=18750;
            SectionHeight=453;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(CurrReport.TOTALSCAUSEDBY=FIELDNO("Bank Account No."));
                         END;

          }
          CONTROLS
          {
            { 1100281000;TextBox;11550;0    ;1950 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr="Remaining Amount" }
            { 1100281030;TextBox;9600 ;0    ;1800 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=Amount }
            { 1100281031;Shape  ;0    ;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281032;Shape  ;6000 ;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281033;Shape  ;8100 ;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281034;Shape  ;9450 ;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281035;Shape  ;11400;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281036;Shape  ;13350;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281037;Shape  ;15150;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281038;Shape  ;16800;0    ;150  ;423  ;ShapeStyle=VertLine }
            { 1100281039;Shape  ;18300;0    ;300  ;423  ;ShapeStyle=VertLine }
            { 1100281041;TextBox;300  ;0    ;5550 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=STRSUBSTNO(Text023,BankAccount.Name) }
            { 1100281004;Shape  ;150  ;0    ;18300;30   ;ShapeStyle=HorzLine }
            { 1100281005;Shape  ;150  ;423  ;18300;30   ;ShapeStyle=HorzLine }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=8140;
      Height=3410;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   TreatLedgerEntry := TRUE;
                   TreatPaymentLine := TRUE;
                   RequestOptionsForm.PaymentMethodCtrl.EDITABLE(TreatLedgerEntry);
                 END;

    }
    CONTROLS
    {
      { 1000000000;CheckBox;3410;0    ;440  ;440  ;InPage=-1;
                                                   ShowCaption=No;
                                                   CaptionML=[ENU=Treat Customer Ledger Entry;
                                                              FRA=Traiter ‚critures clients];
                                                   SourceExpr=TreatLedgerEntry;
                                                   OnAfterValidate=BEGIN
                                                                     RequestOptionsForm.PaymentMethodCtrl.EDITABLE(TreatLedgerEntry);
                                                                   END;
                                                                    }
      { 1000000001;Label  ;0    ;0    ;3300 ;440  ;ParentControl=1000000000 }
      { 1000000002;CheckBox;3410;550  ;440  ;440  ;InPage=-1;
                                                   ShowCaption=No;
                                                   CaptionML=[ENU=Treat Payement Line;
                                                              FRA=Traiter ‚critures bordereau];
                                                   SourceExpr=TreatPaymentLine }
      { 1000000003;Label  ;0    ;550  ;3300 ;440  ;ParentControl=1000000002 }
      { 1000000004;TextBox;3410 ;2420 ;2310 ;440  ;Name=PaymentMethodCtrl;
                                                   InPage=-1;
                                                   AssistEdit=Yes;
                                                   CaptionML=[ENU=Payment Method Filter;
                                                              FRA=Filtre m‚thode de paiement];
                                                   SourceExpr=PaymentMethodFilter;
                                                   OnAssistEdit=VAR
                                                                  LocPaymentMethod@1000000000 : Record 289;
                                                                BEGIN
                                                                  IF FORM.RUNMODAL(0,LocPaymentMethod) = ACTION::LookupOK THEN BEGIN
                                                                    IF PaymentMethodFilter<>'' THEN
                                                                      PaymentMethodFilter := PaymentMethodFilter + '|';
                                                                    PaymentMethodFilter := PaymentMethodFilter + LocPaymentMethod.Code;
                                                                  END;
                                                                END;
                                                                 }
      { 1000000005;Label  ;0    ;2420 ;3300 ;440  ;ParentControl=1000000004 }
      { 1100281000;TextBox;3410 ;2970 ;2310 ;440  ;Name=PaymentMethodCtrl;
                                                   InPage=-1;
                                                   AssistEdit=Yes;
                                                   CaptionML=[ENU=Bank Filter;
                                                              FRA=Filtre compte bancaire];
                                                   SourceExpr=BankFilter;
                                                   OnAssistEdit=VAR
                                                                  LocBankAccount@1000000000 : Record 270;
                                                                BEGIN
                                                                  IF FORM.RUNMODAL(0,LocBankAccount) = ACTION::LookupOK THEN BEGIN
                                                                    IF BankFilter<>'' THEN
                                                                      BankFilter := BankFilter + '|';
                                                                    BankFilter := BankFilter + LocBankAccount."No.";
                                                                  END;
                                                                END;
                                                                 }
      { 1100281001;Label  ;0    ;2970 ;3300 ;440  ;ParentControl=1100281000 }
      { 1100281002;CheckBox;3410;1760 ;440  ;440  ;InPage=-1;
                                                   ShowCaption=No;
                                                   CaptionML=[ENU=Display Source Doc. No.;
                                                              FRA=Afficher Nø de document origine];
                                                   SourceExpr=OriginDocNo }
      { 1100281003;Label  ;0    ;1760 ;3300 ;440  ;ParentControl=1100281002 }
      { 1100281004;CheckBox;3410;1210 ;440  ;440  ;InPage=-1;
                                                   ShowCaption=No;
                                                   CaptionML=[ENU=Group by customer;
                                                              FRA=Centralisation par client];
                                                   SourceExpr=GroupBy }
      { 1100281005;Label  ;0    ;1210 ;3300 ;440  ;ParentControl=1100281004 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Period: %1;FRA=P‚riode : %1';
      TmpDetails@1000000000 : Record 8016604;
      CreateCustLedgEntry@1000000002 : Record 21;
      GlobalCustLedgerEntry@1000000009 : Record 21;
      CumulCustLedgerEntry@1000000010 : Record 21;
      BankAccount@1100281000 : Record 270;
      PaymentHeader@8016602 : Record 10865;
      CustFilter@1004 : Text[250];
      CustDateFilter@1005 : Text[30];
      EndDate@1000000001 : Date;
      TransfooterLedger@1000000004 : Boolean;
      FilterEntry@1000000008 : Text[1000];
      NextEntryNo@1000000005 : Integer;
      Window@1000000011 : Dialog;
      Text010@1000000012 : TextConst 'ENU=Customer\@1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;FRA=Parcours des clients\@1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@';
      CustCount@1000000013 : Integer;
      CurPercent@1000000015 : Integer;
      CurCust@1000000014 : Integer;
      Cpt@1000000021 : Integer;
      TreatPaymentLine@1000000023 : Boolean;
      TreatLedgerEntry@1000000024 : Boolean;
      OriginDocNo@1100281003 : Boolean;
      GroupBy@1100281004 : Boolean;
      PaymentMethodFilter@1000000025 : Code[50];
      Text020@1000000027 : TextConst 'ENU=DUE TO %1;FRA=ECHEANCE AU %1';
      Text021@1000000026 : TextConst 'ENU=PAYMENT METHOD %1 TOTAL;FRA=TOTAL MODE DE PAIEMENT %1';
      Text022@1000000028 : TextConst 'ENU=DUE %1 TOTAL;FRA=TOTAL ECHEANCE %1';
      Text023@1100281001 : TextConst 'ENU=%1 BANK TOTAL;FRA=TOTAL BANQUE %1';
      BankFilter@1100281002 : Code[50];
      Text030@1100281005 : TextConst 'ENU=GROUP BY;FRA=CENTRALISATION';

    PROCEDURE SetFilterLedger@1000000000(EntryNo@1000000001 : Integer);
    VAR
      Loc_apply2@1000000000 : Record 21;
    BEGIN
      //Cette fonction doit permettre de constituer le filtre qui va bien
      //pour l'ensemble des ‚criture li‚ par un lettrage
      IF NOT Existe(EntryNo) THEN  BEGIN
        Descendant(EntryNo);
        Ascendant(EntryNo);
      END;
    END;

    PROCEDURE Descendant@1000000001(EntryNo@1000000000 : Integer);
    VAR
      LocCustLedgerEntry@1000000001 : Record 21;
    BEGIN
      IF NOT Existe(EntryNo) THEN
        FilterEntry := STRSUBSTNO('%1|%2',FilterEntry,EntryNo);

      LocCustLedgerEntry.GET(EntryNo);

      IF LocCustLedgerEntry."Closed by Entry No."<>0 THEN
        IF NOT Existe(LocCustLedgerEntry."Closed by Entry No.") THEN
          SetFilterLedger(LocCustLedgerEntry."Closed by Entry No.")
      ELSE
        GlobalCustLedgerEntry := LocCustLedgerEntry;
    END;

    PROCEDURE Ascendant@1000000002(EntryNo@1000000001 : Integer);
    VAR
      LocCustLedgerEntry@1000000002 : Record 21;
    BEGIN
      IF NOT Existe(EntryNo) THEN
        FilterEntry := STRSUBSTNO('%1|%2',FilterEntry,EntryNo);

      LocCustLedgerEntry.SETRANGE("Closed by Entry No.",EntryNo);

      IF LocCustLedgerEntry.FIND('-') THEN BEGIN
       REPEAT
        IF LocCustLedgerEntry."Closed by Entry No."=0 THEN
          GlobalCustLedgerEntry := LocCustLedgerEntry;
        IF NOT Existe(LocCustLedgerEntry."Entry No.") THEN
          SetFilterLedger(LocCustLedgerEntry."Entry No.");
       UNTIL LocCustLedgerEntry.NEXT = 0;
      END;
    END;

    PROCEDURE Existe@1000000003(EntryNo@1000000000 : Integer) : Boolean;
    VAR
      LocFilter@1000000001 : Text[1000];
    BEGIN
      LocFilter := FilterEntry + '|';

      IF STRPOS(LocFilter,STRSUBSTNO('|%1|',FORMAT(EntryNo))) = 0 THEN
        EXIT(FALSE)
      ELSE
        EXIT(TRUE);
    END;

    PROCEDURE AddCustLedgEntryToTemp@1000000004(VAR ParCustLedgEntry@1000000000 : Record 21);
    VAR
      LocSalesInvoiceHeader@1000000001 : Record 112;
      LocSalesCrMemoHeader@1000000002 : Record 114;
      LocPaymentHeader@1000000003 : Record 10865;
      LocPaymentMethod@1000000004 : Record 289;
      LocCustLedgEntry@1100281000 : Record 21;
    BEGIN
      //Insertion de l'‚criture dans la table Temporaire
      WITH TmpDetails DO
      BEGIN
        INIT;
        "Entry No." := NextEntryNo;
        "USER ID" := USERID;
         "Payment Method Code" := ParCustLedgEntry."Payment Method Code"; // ISA02.ISAT.MA

        //r‚cup‚ration du document d'origine
        CASE ParCustLedgEntry."Document Type" OF
          ParCustLedgEntry."Document Type"::Invoice: BEGIN
            LocSalesInvoiceHeader.SETRANGE("No.",ParCustLedgEntry."Document No.");
            LocSalesInvoiceHeader.SETFILTER("Payment Method Code",PaymentMethodFilter);
            IF LocSalesInvoiceHeader.FIND('-') THEN BEGIN
            // <<ISA02.ISAT.MA
              //IF LocPaymentMethod.GET(LocSalesInvoiceHeader."Payment Method Code") THEN
              //  "Payment Method Code" := LocPaymentMethod.Description;
            // >>ISA02.ISAT.MA
              "Payment Terms Code" := LocSalesInvoiceHeader."Payment Terms Code";
              "Source Name" := LocSalesInvoiceHeader."Sell-to Customer Name";
            END;
          END;
          ParCustLedgEntry."Document Type"::"Credit Memo": BEGIN
            LocSalesCrMemoHeader.SETRANGE("No.",ParCustLedgEntry."Document No.");
            LocSalesCrMemoHeader.SETFILTER("Payment Method Code",PaymentMethodFilter);
            IF LocSalesCrMemoHeader.FIND('-') THEN BEGIN
            // <<ISA02.ISAT.MA
              //IF LocPaymentMethod.GET(LocSalesCrMemoHeader."Payment Method Code") THEN
              //  "Payment Method Code" := LocPaymentMethod.Description;
            // >>ISA02.ISAT.MA
              "Payment Terms Code" := LocSalesCrMemoHeader."Payment Terms Code";
              "Source Name" := LocSalesCrMemoHeader."Sell-to Customer Name";
            END;
          END;
          ParCustLedgEntry."Document Type"::Payment: BEGIN
            IF LocPaymentHeader.GET(ParCustLedgEntry."Document No.") THEN BEGIN
              IF LocPaymentHeader."Account Type"=LocPaymentHeader."Account Type"::"Bank Account" THEN
                "Bank Account No." := LocPaymentHeader."Account No.";

            //  "Payment Method Code" := LocPaymentHeader."Payment Class"; //ISA02.ISAT.MA
            END;
          END;
        END;

      // <<ISA02.ISAT.MA
        //IF "Payment Method Code" = '' THEN
        //  "Payment Method Code" := Customer."Payment Method Code";
      // >>ISA02.ISAT.MA
        "Source No." := ParCustLedgEntry."Customer No.";

        IF "Source Name" = '' THEN
          "Source Name" := Customer.Name;

        Description := ParCustLedgEntry.Description;

        IF OriginDocNo THEN BEGIN
          IF ParCustLedgEntry."Closed by Entry No." <> 0 THEN BEGIN
            ParCustLedgEntry."Entry No." := ParCustLedgEntry."Closed by Entry No.";
            LocCustLedgEntry := ParCustLedgEntry;
            LocCustLedgEntry.MARK(TRUE);
          END;
          LocCustLedgEntry.SETCURRENTKEY("Closed by Entry No.");
          LocCustLedgEntry.SETRANGE("Closed by Entry No.",ParCustLedgEntry."Entry No.");
          IF LocCustLedgEntry.FIND('-') THEN
            REPEAT
              LocCustLedgEntry.MARK(TRUE);
            UNTIL NEXT = 0;
          LocCustLedgEntry.MARKEDONLY(TRUE);
          CASE LocCustLedgEntry.COUNT OF
            0 : "Document No." := ParCustLedgEntry."Document No.";
            1 : "Document No." := LocCustLedgEntry."Document No.";
            ELSE "Document No." := Text030;
          END;
        END ELSE
          "Document No." := ParCustLedgEntry."Document No.";

        "Document Date" := ParCustLedgEntry."Document Date";
        "Due Date" := ParCustLedgEntry."Due Date";
        Amount := ParCustLedgEntry."Original Amt. (LCY)";
        "Remaining Amount" := ParCustLedgEntry."Remaining Amt. (LCY)";
        "Currency Code" := ParCustLedgEntry."Currency Code";
        "Notification Code" := ParCustLedgEntry."On Hold";
        INSERT(TRUE);
      END;

      NextEntryNo := NextEntryNo + 1;
    END;

    PROCEDURE AddPaymentLineToTemp@1000000005(VAR ParPaymentLine@1000000000 : Record 10866);
    VAR
      LocPaymentHeader@1000000001 : Record 10865;
      LocCustLedgEntry@1100281000 : Record 21;
    BEGIN
      //Insertion de l'‚criture dans la table Temporaire

      //r‚cup‚ration de l'entˆte
      IF NOT LocPaymentHeader.GET(ParPaymentLine."No.") THEN
        LocPaymentHeader.INIT;

      WITH TmpDetails DO
      BEGIN
        INIT;
        "Entry No." := NextEntryNo;
        "USER ID" := USERID;
        "Source No." := ParPaymentLine."Account No.";
        "Source Name" := Customer.Name;
        Description := ParPaymentLine."External Document No.";
        IF OriginDocNo THEN BEGIN
          LocCustLedgEntry.RESET;
          LocCustLedgEntry.SETCURRENTKEY("Applies-to ID");
          LocCustLedgEntry.SETRANGE("Applies-to ID","Document No.");
          IF LocCustLedgEntry.FIND('-') THEN
            "Document No." := LocCustLedgEntry."Document No.";
        END ELSE
          "Document No." := ParPaymentLine."No.";

        "Document Date" := LocPaymentHeader."Document Date";
        "Due Date" := ParPaymentLine."Due Date";
        Amount := - ParPaymentLine."Amount (LCY)";
        "Remaining Amount" := - ParPaymentLine."Amount (LCY)";
        "Currency Code" := ParPaymentLine."Currency Code";
        "Payment Method Code" := ParPaymentLine."Payment Class";

        IF LocPaymentHeader."Account Type"=LocPaymentHeader."Account Type"::"Bank Account"
        THEN BEGIN
          "Bank Account No." := LocPaymentHeader."Account No.";
        END ELSE
          "Bank Account No." := '';

        INSERT(TRUE);
      END;

      NextEntryNo := NextEntryNo + 1;
    END;

    PROCEDURE IsOnlyOneEntry@1100281000(ParDetails@1100281001 : Record 8016604) : Boolean;
    VAR
      LocDetails@1100281000 : Record 8016604;
    BEGIN
      LocDetails.RESET;
      LocDetails.SETCURRENTKEY("Bank Account No.","Due Date","Payment Method Code","Source No.");
      LocDetails.SETRANGE("Bank Account No.",ParDetails."Bank Account No.");
      LocDetails.SETRANGE("Due Date",ParDetails."Due Date");
      LocDetails.SETRANGE("Payment Method Code",ParDetails."Payment Method Code");
      LocDetails.SETRANGE("Source No.",ParDetails."Source No.");
      IF LocDetails.COUNT > 1 THEN
        EXIT(FALSE)
      ELSE
        EXIT(TRUE);
    END;

    BEGIN
    {
      /** @r IMH01 @d 06/01/11 @a ISAT.MA @v IMH6.01.040 @s Isatech+ */
    }
    END.
  }
  RDLDATA
  {
  }
}