OBJECT Report 8016649 Liste des immobilisations
{
  OBJECT-PROPERTIES
  {
    Date=18/09/12;
    Time=15:21:52;
    Modified=Yes;
    Version List=ISA6.00,IMISAT6.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Fixed Asset List;
               FRA=Liste des immobilisations];
    TopMargin=1000;
    BottomMargin=1000;
    LeftMargin=500;
    OnPreReport=BEGIN
                  NumberOfTypes := 6;
                  DeprBook.GET(DeprBookCode);
                  IF GroupTotals = GroupTotals::"FA Posting Group" THEN
                    FAGenReport.SetFAPostingGroup("Fixed Asset",DeprBook.Code);
                  FAGenReport.AppendFAPostingFilter("Fixed Asset",StartingDate,EndingDate);
                  FAFilter := "Fixed Asset".GETFILTERS;
                  MainHeadLineText := Text000;
                  IF BudgetReport THEN
                    MainHeadLineText := STRSUBSTNO('%1 %2',MainHeadLineText,Text001);
                  DeprBookText := STRSUBSTNO('%1%2 %3',DeprBook.TABLECAPTION,':',DeprBookCode);
                  MakeGroupTotalText;
                  FAGenReport.ValidateDates(StartingDate,EndingDate);
                  MakeDateText;
                  MakeHeadLine;
                  IF PrintDetails THEN BEGIN
                    FANo := "Fixed Asset".FIELDCAPTION("No.");
                    FADescription := "Fixed Asset".FIELDCAPTION(Description);
                  END;
                  Period1 := Period1::"Before Starting Date";
                  Period2 := Period2::"Net Change";
                END;

    OnPostReport=BEGIN
                   IF CreateXl THEN BEGIN
                      FASetup.GET;
                      IF ((FASetup."R50047.Filemane" <> '') AND (FASetup."R50047.Sheet" <> '')) THEN
                         R370.OpenBook(FASetup."R50047.Filemane",FASetup."R50047.Sheet")
                      ELSE
                         R370.CreateBook;

                      R370.CreateSheet('Liste immobilitations','Immobilisation',COMPANYNAME,USERID);
                      R370.DELETEALL;
                      R370B.RESET;
                      IF R370B.FIND('-') THEN
                      BEGIN
                         REPEAT
                            R370.INIT;
                            R370.TRANSFERFIELDS(R370B);
                            R370.INSERT(TRUE);
                         UNTIL(R370B.NEXT = 0);
                         R370.CreateSheet('SynthŠse','Immobilisation',COMPANYNAME,USERID);
                      END;
                      R370.GiveUserControl;
                   END;
                 END;

    Orientation=Landscape;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table5600;
        NewPagePerGroup=Yes;
        OnPreDataItem=BEGIN
                        CASE GroupTotals OF
                          GroupTotals::"FA Class":
                            SETCURRENTKEY("FA Class Code");
                          GroupTotals::"FA Subclass":
                            SETCURRENTKEY("FA Subclass Code");
                          GroupTotals::"FA Location":
                            SETCURRENTKEY("FA Location Code");
                          GroupTotals::"Main Asset":
                            SETCURRENTKEY("Component of Main Asset");
                          GroupTotals::"Global Dimension 1":
                            SETCURRENTKEY("Global Dimension 1 Code");
                          GroupTotals::"Global Dimension 2":
                            SETCURRENTKEY("Global Dimension 2 Code");
                          GroupTotals::"FA Posting Group":
                            SETCURRENTKEY("FA Posting Group");
                        END;

                        IF (CreateXl) THEN
                        BEGIN
                           XlLine(R370);
                           R370.INIT;
                           R370.VALIDATE("Row No.",VLine);
                           R370.VALIDATE("Column No.",2);
                           R370.Bold := TRUE;
                           R370."Cell Value as Text" := 'Nø immobilisation';
                           R370.INSERT;
                           R370.VALIDATE("Column No.",1);
                           R370."Cell Value as Text" := 'Groupe';
                           R370.INSERT;
                           R370.VALIDATE("Column No.",3);
                           R370."Cell Value as Text" := 'D‚signation';
                           R370.INSERT;
                           R370.VALIDATE("Column No.",4);
                           R370."Cell Value as Text" := 'Emplacement';
                           R370.INSERT;
                           R370.VALIDATE("Column No.",5);
                           R370."Cell Value as Text" := HeadLineText[4];
                           R370.INSERT;
                           R370.VALIDATE("Column No.",6);
                           R370."Cell Value as Text" := 'Type et taux';
                           R370.INSERT;
                           R370.VALIDATE("Column No.",7);
                           R370."Cell Value as Text" := HeadLineText[5];
                           R370.INSERT;
                           R370.VALIDATE("Column No.",8);
                           R370."Cell Value as Text" := HeadLineText[6];
                           R370.INSERT;
                           R370.VALIDATE("Column No.",9);
                           R370."Cell Value as Text" := HeadLineText[7];
                           R370.INSERT;
                           R370.VALIDATE("Column No.",10);
                           R370."Cell Value as Text" := HeadLineText[8];
                           R370.INSERT;
                           R370.VALIDATE("Column No.",11);
                           R370."Cell Value as Text" := HeadLineText[10];
                           R370.INSERT;
                           VLine += 2;
                        END;
                      END;

        OnAfterGetRecord=BEGIN
                           IF NOT FADeprBook.GET("No.",DeprBookCode) THEN
                             CurrReport.SKIP;
                           IF SkipRecord THEN
                             CurrReport.SKIP;

                           IF GroupTotals = GroupTotals::"FA Posting Group" THEN
                             IF "FA Posting Group" <> FADeprBook."FA Posting Group" THEN
                               ERROR(Text007,FIELDCAPTION("FA Posting Group"),"No.");

                           BeforeAmount := 0;
                           EndingAmount := 0;
                           IF BudgetReport THEN
                             BudgetDepreciation.Calculate(
                               "No.",GetStartingDate(StartingDate),EndingDate,DeprBookCode,BeforeAmount,EndingAmount);

                           i := 0;
                           WHILE i < NumberOfTypes DO BEGIN
                             i := i + 1;
                             CASE i OF
                               1: PostingType := FADeprBook.FIELDNO("Acquisition Cost");
                               2: PostingType := FADeprBook.FIELDNO(Depreciation);
                               3: PostingType := FADeprBook.FIELDNO("Write-Down");
                               4: PostingType := FADeprBook.FIELDNO(Appreciation);
                               5: PostingType := FADeprBook.FIELDNO("Custom 1");
                               6: PostingType := FADeprBook.FIELDNO("Custom 2");
                             END;
                             IF StartingDate <= 01010000D THEN
                               StartAmounts[i] := 0
                             ELSE
                               StartAmounts[i] := FAGenReport.CalcFAPostedAmount("No.",PostingType,Period1,StartingDate,
                                 EndingDate,DeprBookCode,BeforeAmount,EndingAmount,FALSE,TRUE);
                               NetChangeAmounts[i] :=
                                 FAGenReport.CalcFAPostedAmount(
                                   "No.",PostingType,Period2,StartingDate,EndingDate,
                                   DeprBookCode,BeforeAmount,EndingAmount,FALSE,TRUE);
                             IF GetPeriodDisposal THEN
                               DisposalAmounts[i] := -(StartAmounts[i] + NetChangeAmounts[i])
                             ELSE
                              DisposalAmounts[i] := 0;
                             IF i >= 3 THEN
                               AddPostingType(i - 3);
                           END;
                           FOR j := 1 TO NumberOfTypes DO
                             TotalEndingAmounts[j] := StartAmounts[j] + NetChangeAmounts[j] + DisposalAmounts[j];
                           BookValueAtEndingDate := 0;
                           BookValueAtStartingDate := 0;
                           FOR j := 1 TO NumberOfTypes DO BEGIN
                             BookValueAtEndingDate := BookValueAtEndingDate + TotalEndingAmounts[j];
                             BookValueAtStartingDate := BookValueAtStartingDate + StartAmounts[j];
                           END;

                           RateTxt := '';
                           IF (FADeprBook."No. of Depreciation Years" <> 0) THEN
                           CASE FADeprBook."Depreciation Method" OF
                              FADeprBook."Depreciation Method"::"Straight-Line": RateTxt := 'L ' +
                                         FORMAT(ROUND(100 / FADeprBook."No. of Depreciation Years",0.01),0,'<Precision,0:2><Standard Format,0>');
                              FADeprBook."Depreciation Method"::"Declining-Balance 1": RateTxt := 'D ' +
                                         FORMAT(FADeprBook."Declining-Balance %",0,'<Precision,0:2><Standard Format,0>');
                              FADeprBook."Depreciation Method"::"DB1/SL": RateTxt := 'DL ' +
                                         FORMAT(FADeprBook."Declining-Balance %",0,'<Precision,0:2><Standard Format,0>');
                           END;
                         END;

        ReqFilterFields=No.,FA Class Code,FA Subclass Code,Budgeted Asset,FA Posting Group;
        GroupTotalFields=FA Class Code,FA Subclass Code,Global Dimension 1 Code,Global Dimension 2 Code,FA Location Code,Component of Main Asset,FA Posting Group;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=27750;
            SectionHeight=1692;
          }
          CONTROLS
          {
            { 32  ;TextBox      ;450  ;423  ;7500 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         SourceExpr=COMPANYNAME }
            { 34  ;TextBox      ;20250;0    ;7500 ;423  ;HorzAlign=Right;
                                                         SourceExpr=FORMAT(TODAY,0,4) }
            { 35  ;TextBox      ;20250;846  ;7500 ;423  ;HorzAlign=Right;
                                                         SourceExpr=USERID }
            { 36  ;TextBox      ;27300;423  ;450  ;423  ;CaptionML=[ENU=Page;
                                                                    FRA=Page];
                                                         SourceExpr=CurrReport.PAGENO }
            { 37  ;Label        ;26550;423  ;750  ;423  ;ParentControl=36 }
            { 69  ;TextBox      ;450  ;0    ;7500 ;423  ;FontSize=9;
                                                         SourceExpr=DeprBookText }
            { 1000000000;Label  ;9300 ;423  ;8850 ;846  ;HorzAlign=Center;
                                                         FontSize=14;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Fixed Assett List;
                                                                    FRA=Liste des immobilisations] }
            { 1000000001;Shape  ;9300 ;423  ;8850 ;846  ;BorderWidth=1pt }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=27750;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT((CurrReport.PAGENO = 1) AND (FAFilter <> ''));
                         END;

          }
          CONTROLS
          {
            { 28  ;TextBox      ;300  ;0    ;18150;423  ;FontSize=8;
                                                         SourceExpr="Fixed Asset".TABLECAPTION + ': ' + FAFilter }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=27750;
            SectionHeight=2538;
            OnPreSection=BEGIN
                           IF RecFAPostingGroup.GET("FA Posting Group") THEN
                              GroupCodeName := RecFAPostingGroup."Acquisition Cost Account"
                           ELSE
                              GroupCodeName := '';
                         END;

          }
          CONTROLS
          {
            { 17  ;TextBox      ;10200;846  ;2700 ;1269 ;HorzAlign=Center;
                                                         VertAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         SourceExpr=HeadLineText[4] }
            { 19  ;TextBox      ;14250;846  ;2400 ;1269 ;HorzAlign=Center;
                                                         VertAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         SourceExpr=HeadLineText[5] }
            { 21  ;TextBox      ;16800;846  ;2550 ;1269 ;HorzAlign=Center;
                                                         VertAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         SourceExpr=HeadLineText[6] }
            { 39  ;TextBox      ;19500;846  ;2550 ;1269 ;HorzAlign=Center;
                                                         VertAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         SourceExpr=HeadLineText[7] }
            { 44  ;TextBox      ;24900;846  ;2700 ;1269 ;HorzAlign=Center;
                                                         VertAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         SourceExpr=HeadLineText[10] }
            { 2   ;TextBox      ;300  ;1269 ;2100 ;846  ;HorzAlign=Center;
                                                         VertAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=FANo }
            { 3   ;TextBox      ;2550 ;1269 ;5250 ;846  ;HorzAlign=Center;
                                                         VertAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=FADescription }
            { 1000000004;Shape  ;300  ;2115 ;27300;423  ;BorderWidth=1pt;
                                                         ShapeStyle=HorzLine }
            { 1000000007;Shape  ;300  ;423  ;27300;423  ;BorderWidth=1pt;
                                                         ShapeStyle=HorzLine }
            { 1000000009;Label  ;7950 ;1269 ;2250 ;846  ;ParentControl=1000000008;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Location;
                                                                    FRA=Emplacement] }
            { 1000000012;Label  ;12900;846  ;1350 ;1269 ;FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=FRA=Type et taux }
            { 1000000002;TextBox;22200;846  ;2550 ;1269 ;HorzAlign=Center;
                                                         VertAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         SourceExpr=HeadLineText[8] }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=27750;
            SectionHeight=0;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT((GroupTotals = 0) OR NOT PrintDetails);
                         END;

          }
          CONTROLS
          {
          }
           }
        { PROPERTIES
          {
            SectionType=TransHeader;
            SectionWidth=27750;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100281026;TextBox;24900;0    ;2700 ;423  ;FontSize=9;
                                                         FontBold=No;
                                                         FontItalic=Yes;
                                                         SourceExpr=TransTotalAmounts[10];
                                                         AutoFormatType=1 }
            { 1100281036;TextBox;19350;0    ;2700 ;423  ;FontSize=9;
                                                         FontBold=No;
                                                         FontItalic=Yes;
                                                         SourceExpr=TransTotalAmounts[7];
                                                         AutoFormatType=1 }
            { 1100281037;TextBox;16800;0    ;2550 ;423  ;FontSize=9;
                                                         FontBold=No;
                                                         FontItalic=Yes;
                                                         SourceExpr=TransTotalAmounts[6];
                                                         AutoFormatType=1 }
            { 1100281038;TextBox;14250;0    ;2550 ;423  ;FontSize=9;
                                                         FontBold=No;
                                                         FontItalic=Yes;
                                                         SourceExpr=TransTotalAmounts[5];
                                                         AutoFormatType=1 }
            { 1100281039;TextBox;10200;0    ;2400 ;423  ;FontSize=9;
                                                         FontBold=No;
                                                         FontItalic=Yes;
                                                         SourceExpr=TransTotalAmounts[1];
                                                         AutoFormatType=1 }
            { 1100281040;Label  ;300  ;0    ;1350 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Report;
                                                                    FRA=Report] }
            { 1000000003;TextBox;22050;0    ;2700 ;423  ;FontSize=9;
                                                         FontBold=No;
                                                         FontItalic=Yes;
                                                         SourceExpr=TransTotalAmounts[8];
                                                         AutoFormatType=1 }
          }
           }
        { PROPERTIES
          {
            SectionType=GroupHeader;
            SectionWidth=27750;
            SectionHeight=846;
            OnPreSection=BEGIN
                           MakeGroupHeadLine;
                           CurrReport.SHOWOUTPUT(PrintDetails AND (GroupTotals <> 0) AND XlSection);


                           TransTotalAmounts[1] := 0;
                           TransTotalAmounts[2] := 0;
                           TransTotalAmounts[3] := 0;
                           TransTotalAmounts[4] := 0;
                           TransTotalAmounts[5] := 0;
                           TransTotalAmounts[6] := 0;
                           TransTotalAmounts[7] := 0;
                           TransTotalAmounts[8] := 0;
                           TransTotalAmounts[9] := 0;
                           TransTotalAmounts[10] := 0;

                           IF (CreateXl AND XlSection) THEN
                           BEGIN
                              R370.INIT;
                              R370.VALIDATE("Row No.",VLine);
                              R370.VALIDATE("Column No.",2);
                              R370.Bold := TRUE;
                              R370."Cell Value as Text" := GroupHeadLine;
                              R370.INSERT;
                              VLine += 1;
                           END;
                         END;

          }
          CONTROLS
          {
            { 26  ;TextBox      ;300  ;0    ;7500 ;423  ;Visible=Yes;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=GroupHeadLine }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=27750;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(PrintDetails);
                         END;

            OnPostSection=BEGIN
                            TransTotalAmounts[1] += TotalEndingAmounts[1];
                            TransTotalAmounts[2] += StartAmounts[2];
                            TransTotalAmounts[3] += NetChangeAmounts[2] - DisposalAmounts[2];
                            TransTotalAmounts[4] += TotalEndingAmounts[2];
                            TransTotalAmounts[5] += StartAmounts[2];
                            TransTotalAmounts[6] += NetChangeAmounts[2];
                            TransTotalAmounts[7] += DisposalAmounts[2];
                            TransTotalAmounts[8] += TotalEndingAmounts[2];
                            TransTotalAmounts[9] += BookValueAtEndingDate;
                            TransTotalAmounts[10] += BookValueAtEndingDate;

                            UpdateTotals;

                            IF (CreateXl) THEN
                            BEGIN
                               R370.INIT;
                               R370.VALIDATE("Row No.",VLine);
                               R370.VALIDATE("Column No.",2);
                               R370.Bold := FALSE;
                               R370."Cell Value as Text" := "No.";
                               R370.INSERT;
                               R370.VALIDATE("Column No.",1);
                               R370."Cell Value as Text" := "Fixed Asset"."FA Subclass Code";
                               R370.INSERT;
                               R370.VALIDATE("Column No.",3);
                               R370."Cell Value as Text" := Description;
                               R370.INSERT;
                               R370.VALIDATE("Column No.",4);
                               R370."Cell Value as Text" := "FA Location Code";
                               R370.INSERT;
                               R370.VALIDATE("Column No.",5);
                               R370."Cell Value as Text" := FORMAT(TotalEndingAmounts[1]);
                               R370.INSERT;
                               R370.VALIDATE("Column No.",6);
                               R370."Cell Value as Text" := RateTxt;
                               R370.INSERT;
                               R370.VALIDATE("Column No.",7);
                               R370."Cell Value as Text" := FORMAT(StartAmounts[2]);
                               R370.INSERT;
                               R370.VALIDATE("Column No.",8);
                               R370."Cell Value as Text" := FORMAT(NetChangeAmounts[2]);
                               R370.INSERT;
                               R370.VALIDATE("Column No.",9);
                               R370."Cell Value as Text" := FORMAT(DisposalAmounts[2]);
                               R370.INSERT;
                               R370.VALIDATE("Column No.",10);
                               R370."Cell Value as Text" := FORMAT(TotalEndingAmounts[2]);
                               R370.INSERT;
                               R370.VALIDATE("Column No.",11);
                               R370."Cell Value as Text" := FORMAT(BookValueAtEndingDate);
                               R370.INSERT;
                               VLine += 1;
                            END;
                          END;

          }
          CONTROLS
          {
            { 1   ;TextBox      ;300  ;0    ;1950 ;423  ;HorzAlign=Center;
                                                         FontSize=9;
                                                         SourceExpr="No." }
            { 5   ;TextBox      ;2400 ;0    ;5400 ;423  ;FontSize=9;
                                                         SourceExpr=Description }
            { 47  ;TextBox      ;10200;0    ;2400 ;423  ;FontSize=9;
                                                         SourceExpr=TotalEndingAmounts[1];
                                                         AutoFormatType=1 }
            { 50  ;TextBox      ;14250;0    ;2550 ;423  ;FontSize=9;
                                                         SourceExpr=StartAmounts[2];
                                                         AutoFormatType=1 }
            { 53  ;TextBox      ;16800;0    ;2550 ;423  ;FontSize=9;
                                                         SourceExpr=NetChangeAmounts[2];
                                                         AutoFormatType=1 }
            { 59  ;TextBox      ;22050;0    ;2700 ;423  ;FontSize=9;
                                                         SourceExpr=TotalEndingAmounts[2];
                                                         AutoFormatType=1 }
            { 65  ;TextBox      ;24900;0    ;2700 ;423  ;FontSize=9;
                                                         SourceExpr=BookValueAtEndingDate;
                                                         AutoFormatType=1 }
            { 1000000008;TextBox;7950 ;0    ;2100 ;423  ;FontSize=9;
                                                         SourceExpr="FA Location Code" }
            { 1000000013;TextBox;12750;0    ;1500 ;423  ;HorzAlign=Right;
                                                         FontSize=9;
                                                         SourceExpr=RateTxt;
                                                         AutoFormatType=1 }
            { 1000000010;TextBox;19350;0    ;2700 ;423  ;FontSize=9;
                                                         SourceExpr=DisposalAmounts[2];
                                                         AutoFormatType=1 }
          }
           }
        { PROPERTIES
          {
            SectionType=GroupFooter;
            SectionWidth=27750;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(GroupTotals <> 0);
                           CreateGroupTotals;
                         END;

            OnPostSection=BEGIN
                            IF CurrReport.SHOWOUTPUT THEN BEGIN
                              TempTable.RESET;
                              TempTable.SETRANGE(AccountNo,GroupHeadLine);
                              IF NOT TempTable.FIND('-') THEN BEGIN
                                TempTable.AccountNo := GroupHeadLine;
                                TempTable.TotalDebit := TotalEndingAmounts[1];
                                TempTable.TotalCredit := GroupStartAmounts[2];
                                TempTable."Amount 3" := GroupNetChangeAmounts[2];
                                TempTable."Amount 4" := GroupDisposalAmounts[2];
                                TempTable."Amount 5" := TotalEndingAmounts[2];
                                TempTable."Amount 6" := BookValueAtEndingDate;
                                TempTable.INSERT;
                              END;
                            END;
                            IF (CreateXl AND XlSection) THEN
                            BEGIN
                               R370.INIT;
                               R370.VALIDATE("Row No.",VLine);
                               R370.VALIDATE("Column No.",2);
                               R370.Bold := FALSE;
                               R370."Cell Value as Text" := Text002 + ': ' + GroupHeadLine;
                               R370.INSERT;
                               R370.VALIDATE("Column No.",5);
                               R370."Cell Value as Text" := FORMAT(TotalEndingAmounts[1]);
                               R370.INSERT;
                               R370.VALIDATE("Column No.",7);
                               R370."Cell Value as Text" := FORMAT(GroupStartAmounts[2]);
                               R370.INSERT;
                               R370.VALIDATE("Column No.",8);
                               R370."Cell Value as Text" := FORMAT(GroupNetChangeAmounts[2]);
                               R370.INSERT;
                               R370.VALIDATE("Column No.",9);
                               R370."Cell Value as Text" := FORMAT(GroupDisposalAmounts[2]);
                               R370.INSERT;
                               R370.VALIDATE("Column No.",10);
                               R370."Cell Value as Text" := FORMAT(TotalEndingAmounts[2]);
                               R370.INSERT;
                               R370.VALIDATE("Column No.",11);
                               R370."Cell Value as Text" := FORMAT(BookValueAtEndingDate);
                               R370.INSERT;
                               VLine += 2;
                            END;
                          END;

          }
          CONTROLS
          {
            { 27  ;TextBox      ;300  ;423  ;7500 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=Text002 + ': ' + GroupHeadLine }
            { 48  ;TextBox      ;10200;423  ;2400 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TotalEndingAmounts[1];
                                                         AutoFormatType=1 }
            { 1000000005;Shape  ;300  ;0    ;27300;423  ;BorderWidth=1pt;
                                                         ShapeStyle=HorzLine }
            { 1000000011;TextBox;16800;423  ;2550 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=GroupNetChangeAmounts[2];
                                                         AutoFormatType=1 }
            { 1000000014;TextBox;24900;423  ;2700 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=BookValueAtEndingDate;
                                                         AutoFormatType=1 }
            { 1000000015;TextBox;22050;423  ;2700 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TotalEndingAmounts[2];
                                                         AutoFormatType=1 }
            { 1000000016;TextBox;19350;423  ;2700 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=GroupDisposalAmounts[2];
                                                         AutoFormatType=1 }
            { 1000000017;TextBox;14250;423  ;2550 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=GroupStartAmounts[2];
                                                         AutoFormatType=1 }
          }
           }
        { PROPERTIES
          {
            SectionType=TransFooter;
            SectionWidth=27750;
            SectionHeight=846;
          }
          CONTROLS
          {
            { 1100281002;Shape  ;300  ;0    ;27300;423  ;BorderWidth=1pt;
                                                         ShapeStyle=HorzLine }
            { 1100281005;TextBox;10200;423  ;2400 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TransTotalAmounts[1];
                                                         AutoFormatType=1 }
            { 1100281006;Label  ;300  ;423  ;1350 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Report;
                                                                    FRA=Report] }
            { 1000000018;TextBox;24900;423  ;2700 ;423  ;FontSize=9;
                                                         FontBold=No;
                                                         FontItalic=Yes;
                                                         SourceExpr=TransTotalAmounts[10];
                                                         AutoFormatType=1 }
            { 1000000019;TextBox;22050;423  ;2700 ;423  ;FontSize=9;
                                                         FontBold=No;
                                                         FontItalic=Yes;
                                                         SourceExpr=TransTotalAmounts[8];
                                                         AutoFormatType=1 }
            { 1000000020;TextBox;19350;423  ;2700 ;423  ;FontSize=9;
                                                         FontBold=No;
                                                         FontItalic=Yes;
                                                         SourceExpr=TransTotalAmounts[7];
                                                         AutoFormatType=1 }
            { 1000000021;TextBox;16800;423  ;2550 ;423  ;FontSize=9;
                                                         FontBold=No;
                                                         FontItalic=Yes;
                                                         SourceExpr=TransTotalAmounts[6];
                                                         AutoFormatType=1 }
            { 1000000022;TextBox;14250;423  ;2550 ;423  ;FontSize=9;
                                                         FontBold=No;
                                                         FontItalic=Yes;
                                                         SourceExpr=TransTotalAmounts[5];
                                                         AutoFormatType=1 }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=27750;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CreateTotals;
                         END;

            OnPostSection=BEGIN
                            IF (CreateXl) THEN
                            BEGIN
                               R370.INIT;
                               R370.VALIDATE("Row No.",VLine);
                               R370.VALIDATE("Column No.",2);
                               R370.Bold := FALSE;
                               R370."Cell Value as Text" := 'Total';
                               R370.INSERT;
                               R370.VALIDATE("Column No.",5);
                               R370."Cell Value as Text" := FORMAT(TotalEndingAmounts[1]);
                               R370.INSERT;
                               R370.VALIDATE("Column No.",7);
                               R370."Cell Value as Text" := FORMAT(TotalStartAmounts[2]);
                               R370.INSERT;
                               R370.VALIDATE("Column No.",8);
                               R370."Cell Value as Text" := FORMAT(TotalNetChangeAmounts[2]);
                               R370.INSERT;
                               R370.VALIDATE("Column No.",9);
                               R370."Cell Value as Text" := FORMAT(TotalDisposalAmounts[2]);
                               R370.INSERT;
                               R370.VALIDATE("Column No.",10);
                               R370."Cell Value as Text" := FORMAT(TotalEndingAmounts[2]);
                               R370.INSERT;
                               R370.VALIDATE("Column No.",11);
                               R370."Cell Value as Text" := FORMAT(BookValueAtEndingDate);
                               R370.INSERT;
                               VLine += 1;
                            END;
                          END;

          }
          CONTROLS
          {
            { 38  ;Label        ;300  ;423  ;1350 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Total;
                                                                    FRA=Total] }
            { 49  ;TextBox      ;10200;423  ;2400 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TotalEndingAmounts[1];
                                                         AutoFormatType=1 }
            { 52  ;TextBox      ;14250;423  ;2550 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TotalStartAmounts[2];
                                                         AutoFormatType=1 }
            { 55  ;TextBox      ;16800;423  ;2550 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TotalNetChangeAmounts[2];
                                                         AutoFormatType=1 }
            { 61  ;TextBox      ;22050;423  ;2700 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TotalEndingAmounts[2];
                                                         AutoFormatType=1 }
            { 67  ;TextBox      ;24900;423  ;2700 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=BookValueAtEndingDate;
                                                         AutoFormatType=1 }
            { 1000000006;Shape  ;300  ;0    ;27300;423  ;BorderWidth=1pt;
                                                         ShapeStyle=HorzLine }
            { 1000000023;TextBox;19350;423  ;2700 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TotalDisposalAmounts[2];
                                                         AutoFormatType=1 }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=FILTER(1..));
        DataItemVarName=Buffer;
        OnPreDataItem=BEGIN
                        IF NOT PrintAmountsPerGroup THEN
                          CurrReport.BREAK;

                        IF PrintAmountsPerGroup THEN
                          CurrReport.NEWPAGE;

                        TempTable.RESET;

                        IF (CreateXl) THEN
                        BEGIN
                           XlLine(R370B);

                           R370B.INIT;
                           R370B.VALIDATE("Row No.",VLine);
                           R370B.VALIDATE("Column No.",1);
                           R370B.Bold := TRUE;
                           R370B."Cell Value as Text" := 'SynthŠse des cumuls d''Amortissments';
                           R370B.INSERT;
                           VLine += 1;

                           R370B.VALIDATE("Row No.",VLine);
                           R370B.VALIDATE("Column No.",1);
                           R370B.Bold := TRUE;
                           R370B."Cell Value as Text" := GroupCodeName;
                           R370B.INSERT;
                           R370B.VALIDATE("Column No.",2);
                           R370B."Cell Value as Text" := HeadLineText[4];
                           R370B.INSERT;
                           R370B.VALIDATE("Column No.",3);
                           R370B."Cell Value as Text" := HeadLineText[5];
                           R370B.INSERT;
                           R370B.VALIDATE("Column No.",4);
                           R370B."Cell Value as Text" := HeadLineText[6];
                           R370B.INSERT;
                           R370B.VALIDATE("Column No.",5);
                           R370B."Cell Value as Text" := HeadLineText[7];
                           R370B.INSERT;
                           R370B.VALIDATE("Column No.",6);
                           R370B."Cell Value as Text" := HeadLineText[8];
                           R370B.INSERT;
                           R370B.VALIDATE("Column No.",7);
                           R370B."Cell Value as Text" := HeadLineText[10];
                           R370B.INSERT;
                           VLine += 1;
                        END;
                      END;

        OnAfterGetRecord=BEGIN
                           IF Number = 1 THEN BEGIN
                             IF NOT TempTable.FIND('-') THEN
                               CurrReport.BREAK;
                           END ELSE
                             IF TempTable.NEXT = 0 THEN
                               CurrReport.BREAK;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=27750;
            SectionHeight=2961;
          }
          CONTROLS
          {
            { 1100281014;TextBox;20100;846  ;7500 ;423  ;HorzAlign=Right;
                                                         SourceExpr=USERID }
            { 1100281015;TextBox;27150;423  ;450  ;423  ;CaptionML=[ENU=Page;
                                                                    FRA=Page];
                                                         SourceExpr=CurrReport.PAGENO }
            { 1100281016;Label  ;26400;423  ;750  ;423  ;ParentControl=1100281015 }
            { 1100281017;Label  ;9150 ;423  ;8850 ;846  ;HorzAlign=Center;
                                                         FontSize=14;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Fixed Assett Summary;
                                                                    FRA=SynthŠse des immobilisations] }
            { 1100281018;Shape  ;9150 ;423  ;8850 ;846  ;BorderWidth=1pt }
            { 1100281019;TextBox;20100;0    ;7500 ;423  ;HorzAlign=Right;
                                                         SourceExpr=FORMAT(TODAY,0,4) }
            { 1100281020;TextBox;300  ;423  ;7500 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         SourceExpr=COMPANYNAME }
            { 1100281021;TextBox;300  ;0    ;7500 ;423  ;FontSize=9;
                                                         SourceExpr=DeprBookText }
            { 1100281025;TextBox;10350;1692 ;2850 ;1269 ;HorzAlign=Center;
                                                         VertAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         SourceExpr=HeadLineText[4] }
            { 1100281027;TextBox;14250;1692 ;2550 ;1269 ;HorzAlign=Center;
                                                         VertAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         SourceExpr=HeadLineText[5] }
            { 1100281028;TextBox;16800;1692 ;2550 ;1269 ;HorzAlign=Center;
                                                         VertAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         SourceExpr=HeadLineText[6] }
            { 1100281029;TextBox;22050;1692 ;2700 ;1269 ;HorzAlign=Center;
                                                         VertAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         SourceExpr=HeadLineText[8] }
            { 1100281030;TextBox;24900;1692 ;2700 ;1269 ;HorzAlign=Center;
                                                         VertAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         SourceExpr=HeadLineText[10] }
            { 1100281024;TextBox;300  ;2115 ;7500 ;846  ;Visible=Yes;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=GroupCodeName }
            { 1000000024;TextBox;19350;1692 ;2700 ;1269 ;HorzAlign=Center;
                                                         VertAlign=Center;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         SourceExpr=HeadLineText[7] }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=27750;
            SectionHeight=846;
            OnPostSection=BEGIN
                            IF (CreateXl) THEN
                            BEGIN
                               R370B.INIT;
                               R370B.VALIDATE("Row No.",VLine);
                               R370B.VALIDATE("Column No.",1);
                               R370B.Bold := FALSE;
                               R370B."Cell Value as Text" := TempTable.AccountNo;
                               R370B.INSERT;
                               R370B.VALIDATE("Column No.",2);
                               R370B."Cell Value as Text" := FORMAT(TempTable.TotalDebit);
                               R370B.INSERT;
                               R370B.VALIDATE("Column No.",3);
                               R370B."Cell Value as Text" := FORMAT(TempTable.TotalCredit);
                               R370B.INSERT;
                               R370B.VALIDATE("Column No.",4);
                               R370B."Cell Value as Text" := FORMAT(TempTable."Amount 3");
                               R370B.INSERT;
                               R370B.VALIDATE("Column No.",5);
                               R370B."Cell Value as Text" := FORMAT(TempTable."Amount 4");
                               R370B.INSERT;
                               R370B.VALIDATE("Column No.",6);
                               R370B."Cell Value as Text" := FORMAT(TempTable."Amount 5");
                               R370B.INSERT;
                               R370B.VALIDATE("Column No.",7);
                               R370B."Cell Value as Text" := FORMAT(TempTable."Amount 6");
                               R370B.INSERT;
                               VLine += 1;
                            END;
                          END;

          }
          CONTROLS
          {
            { 1100281007;TextBox;22050;423  ;2700 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TempTable."Amount 5";
                                                         AutoFormatType=1 }
            { 1100281008;TextBox;19350;423  ;2700 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TempTable."Amount 4";
                                                         AutoFormatType=1 }
            { 1100281009;TextBox;16800;423  ;2550 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TempTable."Amount 3";
                                                         AutoFormatType=1 }
            { 1100281010;TextBox;14250;423  ;2550 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TempTable.TotalCredit;
                                                         AutoFormatType=1 }
            { 1100281011;TextBox;10200;423  ;2400 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TempTable.TotalDebit;
                                                         AutoFormatType=1 }
            { 1100281012;TextBox;300  ;423  ;7500 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TempTable.AccountNo }
            { 1100281013;Shape  ;300  ;0    ;27300;423  ;BorderWidth=1pt;
                                                         ShapeStyle=HorzLine }
            { 1000000025;TextBox;24900;423  ;2700 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TempTable."Amount 6";
                                                         AutoFormatType=1 }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=27750;
            SectionHeight=846;
            OnPostSection=BEGIN
                            IF (CreateXl) THEN
                            BEGIN
                               R370B.INIT;
                               R370B.VALIDATE("Row No.",VLine);
                               R370B.VALIDATE("Column No.",1);
                               R370B.Bold := FALSE;
                               R370B."Cell Value as Text" := 'Total';
                               R370B.INSERT;
                               R370B.VALIDATE("Column No.",2);
                               R370B."Cell Value as Text" := FORMAT(TotalEndingAmounts[1]);
                               R370B.INSERT;
                               R370B.VALIDATE("Column No.",3);
                               R370B."Cell Value as Text" := FORMAT(TotalStartAmounts[2]);
                               R370B.INSERT;
                               R370B.VALIDATE("Column No.",4);
                               R370B."Cell Value as Text" := FORMAT(TotalNetChangeAmounts[2]);
                               R370B.INSERT;
                               R370B.VALIDATE("Column No.",5);
                               R370B."Cell Value as Text" := FORMAT(TotalDisposalAmounts[2]);
                               R370B.INSERT;
                               R370B.VALIDATE("Column No.",6);
                               R370B."Cell Value as Text" := FORMAT(TotalEndingAmounts[2]);
                               R370B.INSERT;
                               R370B.VALIDATE("Column No.",7);
                               R370B."Cell Value as Text" := FORMAT(BookValueAtEndingDate);
                               R370B.INSERT;
                               VLine += 1;
                            END;
                          END;

          }
          CONTROLS
          {
            { 1100281033;Shape  ;300  ;0    ;27300;423  ;BorderWidth=1pt;
                                                         ShapeStyle=HorzLine }
            { 1100281022;TextBox;10200;423  ;2400 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TotalEndingAmounts[1];
                                                         AutoFormatType=1 }
            { 1100281023;Label  ;300  ;423  ;1350 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=Total;
                                                                    FRA=Total] }
            { 1000000026;TextBox;24900;423  ;2700 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=BookValueAtEndingDate;
                                                         AutoFormatType=1 }
            { 1000000027;TextBox;22050;423  ;2700 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TotalEndingAmounts[2];
                                                         AutoFormatType=1 }
            { 1000000028;TextBox;19350;423  ;2700 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TotalDisposalAmounts[2];
                                                         AutoFormatType=1 }
            { 1000000029;TextBox;16800;423  ;2550 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TotalNetChangeAmounts[2];
                                                         AutoFormatType=1 }
            { 1000000030;TextBox;14250;423  ;2550 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TotalStartAmounts[2];
                                                         AutoFormatType=1 }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=6160;
      Height=5060;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   IF DeprBookCode = '' THEN BEGIN
                     FASetup.GET;
                     DeprBookCode := FASetup."Default Depr. Book";
                   END;
                 END;

    }
    CONTROLS
    {
      { 1   ;Label        ;0    ;1760 ;3300 ;440  ;ParentControl=2 }
      { 2   ;TextBox      ;3410 ;1760 ;2750 ;440  ;CaptionML=[ENU=Group Totals;
                                                              FRA=Sous-totaux];
                                                   OptionCaptionML=[ENU=" ,FA Class,FA Subclass,FA Location,Main Asset,Global Dimension 1,Global Dimension 2,FA Posting Group";
                                                                    FRA=" ,Classe immo.,Sous-classe immo.,Emplacement immo.,Immo. principale,Axe principal 1,Axe principal 2,Groupe compta. immo."];
                                                   SourceExpr=GroupTotals }
      { 12  ;Label        ;0    ;660  ;3300 ;440  ;ParentControl=14 }
      { 13  ;Label        ;0    ;1210 ;3300 ;440  ;ParentControl=15 }
      { 14  ;TextBox      ;3410 ;660  ;1650 ;440  ;CaptionML=[ENU=Starting Date;
                                                              FRA=Date d‚but];
                                                   SourceExpr=StartingDate }
      { 15  ;TextBox      ;3410 ;1210 ;1650 ;440  ;CaptionML=[ENU=Ending Date;
                                                              FRA=Date fin];
                                                   SourceExpr=EndingDate }
      { 18  ;Label        ;0    ;2310 ;3300 ;440  ;ParentControl=21 }
      { 21  ;CheckBox     ;3410 ;2310 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Print per Fixed Asset;
                                                              FRA=Imprimer par immobilisation];
                                                   SourceExpr=PrintDetails }
      { 23  ;Label        ;0    ;2860 ;3300 ;440  ;ParentControl=24 }
      { 24  ;CheckBox     ;3410 ;2860 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Budget Report;
                                                              FRA=Etat budget];
                                                   SourceExpr=BudgetReport }
      { 3   ;TextBox      ;3410 ;110  ;2750 ;440  ;CaptionML=[ENU=Depreciation Book;
                                                              FRA=Lois d'amortissement];
                                                   SourceExpr=DeprBookCode;
                                                   TableRelation="Depreciation Book" }
      { 4   ;Label        ;0    ;110  ;3300 ;440  ;ParentControl=3 }
      { 1100281000;Label  ;0    ;3410 ;3300 ;440  ;ParentControl=1100281001 }
      { 1100281001;CheckBox;3410;3410 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Summary;
                                                              FRA=SynthŠse];
                                                   SourceExpr=PrintAmountsPerGroup }
      { 1000000000;CheckBox;3410;4070 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=FRA=Export vers Excel;
                                                   SourceExpr=CreateXl }
      { 1000000001;Label  ;0    ;4070 ;3300 ;440  ;ParentControl=1000000000 }
      { 1000000002;CheckBox;3410;4620 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=FRA=Export les ruptures vers Excel;
                                                   SourceExpr=XlSection }
      { 1000000003;Label  ;0    ;4620 ;3300 ;440  ;ParentControl=1000000002 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Fixed Asset - Book Value 01;FRA=Immo. - Immobilisations par Comptes';
      Text001@1001 : TextConst 'ENU=(Budget Report);FRA=(Etat budget)';
      Text002@1002 : TextConst 'ENU=Group Total;FRA=Sous-total';
      Text003@1003 : TextConst 'ENU=Group Totals;FRA=Sous-totaux';
      Text004@1004 : TextConst 'ENU=in Period;FRA=dans la p‚riode';
      Text005@1005 : TextConst 'ENU=Disposal;FRA=Cession';
      Text006@1006 : TextConst 'ENU=Addition;FRA=Ajout';
      Text007@1007 : TextConst 'ENU=%1 has been modified in fixed asset %2;FRA=%1 a ‚t‚ modifi‚(e) dans l''immobilisation %2';
      TempTable@1100281001 : TEMPORARY Record 8016603;
      FASetup@1008 : Record 5603;
      DeprBook@1009 : Record 5611;
      FADeprBook@1010 : Record 5612;
      FA@1011 : Record 5600;
      FAPostingTypeSetup@1012 : Record 5604;
      FAGenReport@1013 : Codeunit 5626;
      BudgetDepreciation@1014 : Codeunit 5615;
      DeprBookCode@1015 : Code[10];
      FAFilter@1016 : Text[250];
      MainHeadLineText@1017 : Text[100];
      DeprBookText@1018 : Text[50];
      GroupCodeName@1019 : Text[50];
      GroupHeadLine@1020 : Text[50];
      FANo@1021 : Text[50];
      FADescription@1022 : Text[50];
      GroupTotals@1023 : ' ,FA Class,FA Subclass,FA Location,Main Asset,Global Dimension 1,Global Dimension 2,FA Posting Group';
      HeadLineText@1024 : ARRAY [10] OF Text[50];
      StartAmounts@1025 : ARRAY [10] OF Decimal;
      NetChangeAmounts@1026 : ARRAY [10] OF Decimal;
      DisposalAmounts@1027 : ARRAY [10] OF Decimal;
      GroupStartAmounts@1028 : ARRAY [10] OF Decimal;
      GroupNetChangeAmounts@1029 : ARRAY [10] OF Decimal;
      GroupDisposalAmounts@1030 : ARRAY [10] OF Decimal;
      TotalStartAmounts@1031 : ARRAY [10] OF Decimal;
      TotalNetChangeAmounts@1032 : ARRAY [10] OF Decimal;
      TotalDisposalAmounts@1033 : ARRAY [10] OF Decimal;
      TotalEndingAmounts@1034 : ARRAY [10] OF Decimal;
      BookValueAtStartingDate@1035 : Decimal;
      BookValueAtEndingDate@1036 : Decimal;
      i@1037 : Integer;
      j@1038 : Integer;
      NumberOfTypes@1039 : Integer;
      PostingType@1040 : Integer;
      Period1@1041 : 'Before Starting Date,Net Change,at Ending Date';
      Period2@1042 : 'Before Starting Date,Net Change,at Ending Date';
      StartingDate@1043 : Date;
      EndingDate@1044 : Date;
      PrintDetails@1045 : Boolean;
      BudgetReport@1046 : Boolean;
      BeforeAmount@1047 : Decimal;
      EndingAmount@1048 : Decimal;
      AcquisitionDate@1049 : Date;
      DisposalDate@1050 : Date;
      StartText@1051 : Text[30];
      EndText@1052 : Text[30];
      Text008@1000000000 : TextConst 'FRA=r‚siduelle au';
      Text009@1000000001 : TextConst 'FRA=Dotation';
      Text010@1000000002 : TextConst 'FRA=Cumul';
      RateTxt@1000000003 : Text[30];
      RecFAPostingGroup@1000000004 : Record 5606;
      PrintAmountsPerGroup@1100281000 : Boolean;
      TransTotalAmounts@1100281002 : ARRAY [10] OF Decimal;
      R370@1000000011 : TEMPORARY Record 370;
      R370B@1000000010 : TEMPORARY Record 370;
      VLine@1000000009 : Integer;
      VColumn@1000000008 : Integer;
      CreateXl@1000000007 : Boolean;
      CreateHeader@1000000006 : Boolean;
      "fa setup"@1000000005 : Record 5603;
      XlSection@1000000012 : Boolean;

    LOCAL PROCEDURE AddPostingType@29(PostingType@1000 : 'Write-Down,Appreciation,Custom 1,Custom 2');
    VAR
      i@1001 : Integer;
      j@1002 : Integer;
    BEGIN
      i := PostingType + 3;
      WITH FAPostingTypeSetup DO BEGIN
        CASE PostingType OF
          PostingType::"Write-Down":
            GET(DeprBookCode,"FA Posting Type"::"Write-Down");
          PostingType::Appreciation:
            GET(DeprBookCode,"FA Posting Type"::Appreciation);
          PostingType::"Custom 1":
            GET(DeprBookCode,"FA Posting Type"::"Custom 1");
          PostingType::"Custom 2":
            GET(DeprBookCode,"FA Posting Type"::"Custom 2");
        END;
        IF "Depreciation Type" THEN
          j := 2
        ELSE IF "Acquisition Type" THEN
          j := 1;
      END;
      IF j > 0 THEN BEGIN
        StartAmounts[j] := StartAmounts[j] + StartAmounts[i];
        StartAmounts[i] := 0;
        NetChangeAmounts[j] := NetChangeAmounts[j] + NetChangeAmounts[i];
        NetChangeAmounts[i] := 0;
        DisposalAmounts[j] := DisposalAmounts[j] + DisposalAmounts[i];
        DisposalAmounts[i] := 0;
      END;
    END;

    LOCAL PROCEDURE SkipRecord@5() : Boolean;
    BEGIN
      AcquisitionDate := FADeprBook."Acquisition Date";
      DisposalDate := FADeprBook."Disposal Date";
      EXIT(
        "Fixed Asset".Inactive OR
        (AcquisitionDate = 0D) OR
        (AcquisitionDate > EndingDate) AND (EndingDate > 0D) OR
        (DisposalDate > 0D) AND (DisposalDate < StartingDate))
    END;

    LOCAL PROCEDURE GetPeriodDisposal@11() : Boolean;
    BEGIN
      IF DisposalDate > 0D THEN
        IF (EndingDate = 0D) OR (DisposalDate <= EndingDate) THEN
          EXIT(TRUE);
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE MakeGroupTotalText@6();
    BEGIN
      CASE GroupTotals OF
        GroupTotals::"FA Class":
          GroupCodeName := "Fixed Asset".FIELDCAPTION("FA Class Code");
        GroupTotals::"FA Subclass":
          GroupCodeName := "Fixed Asset".FIELDCAPTION("FA Subclass Code");
        GroupTotals::"FA Location":
          GroupCodeName := "Fixed Asset".FIELDCAPTION("FA Location Code");
        GroupTotals::"Main Asset":
          GroupCodeName := "Fixed Asset".FIELDCAPTION("Main Asset/Component");
        GroupTotals::"Global Dimension 1":
          GroupCodeName := "Fixed Asset".FIELDCAPTION("Global Dimension 1 Code");
        GroupTotals::"Global Dimension 2":
          GroupCodeName := "Fixed Asset".FIELDCAPTION("Global Dimension 2 Code");
        GroupTotals::"FA Posting Group":
          GroupCodeName := "Fixed Asset".FIELDCAPTION("FA Posting Group");
      END;
      IF GroupCodeName <> '' THEN
        GroupCodeName := STRSUBSTNO('%1%2 %3',Text003,':',GroupCodeName);
    END;

    LOCAL PROCEDURE MakeDateText@3();
    BEGIN
      StartText := STRSUBSTNO('%1',StartingDate - 1);
      EndText := STRSUBSTNO('%1',EndingDate);
    END;

    LOCAL PROCEDURE MakeHeadLine@9();
    VAR
      InPeriodText@1000 : Text[30];
      DisposalText@1001 : Text[30];
      ResidualText@1000000000 : Text[30];
      InPeriodDotationText@1000000001 : Text[30];
      CumulText@1000000002 : Text[30];
    BEGIN
      InPeriodText := Text004;
      DisposalText := Text005;
      ResidualText := Text008;
      InPeriodDotationText := Text009;
      CumulText := Text010;
      HeadLineText[1] := STRSUBSTNO('%1 %2',FADeprBook.FIELDCAPTION("Acquisition Cost"),StartText);
      HeadLineText[2] := STRSUBSTNO('%1 %2',Text006,EndText);
      HeadLineText[3] := STRSUBSTNO('%1 %2',DisposalText,EndText);
      HeadLineText[4] := STRSUBSTNO('%1 %2',FADeprBook.FIELDCAPTION("Acquisition Cost"),EndText);
      HeadLineText[5] := STRSUBSTNO('%1 %2',FADeprBook.FIELDCAPTION(Depreciation),StartText);
      HeadLineText[6] := STRSUBSTNO('%1 %2 %3',InPeriodDotationText,FADeprBook.FIELDCAPTION(Depreciation),EndText);
      HeadLineText[7] := STRSUBSTNO('%1 %2 %3',DisposalText,FADeprBook.FIELDCAPTION(Depreciation),EndText);
      HeadLineText[8] :=  STRSUBSTNO('%1 %2 %3',CumulText,FADeprBook.FIELDCAPTION(Depreciation),EndText);
      HeadLineText[9] :=  STRSUBSTNO('%1 %2 %3',FADeprBook.FIELDCAPTION("Book Value"),ResidualText,StartText);
      HeadLineText[10] := STRSUBSTNO('%1 %2 %3',FADeprBook.FIELDCAPTION("Book Value"),ResidualText,EndText);
    END;

    LOCAL PROCEDURE MakeGroupHeadLine@1();
    BEGIN
      FOR j := 1 TO NumberOfTypes DO BEGIN
         GroupStartAmounts[j] := 0;
         GroupNetChangeAmounts[j] := 0;
         GroupDisposalAmounts[j] := 0;
      END;
      WITH "Fixed Asset" DO BEGIN
        CASE GroupTotals OF
          GroupTotals::"FA Class":
            GroupHeadLine := "FA Class Code";
          GroupTotals::"FA Subclass":
            GroupHeadLine := "FA Subclass Code";
          GroupTotals::"FA Location":
            GroupHeadLine := "FA Location Code";
          GroupTotals::"Main Asset":
            BEGIN
              FA."Main Asset/Component" := FA."Main Asset/Component"::"Main Asset";
              GroupHeadLine :=
                STRSUBSTNO('%1 %2',FA."Main Asset/Component","Component of Main Asset");
              IF "Component of Main Asset" = '' THEN
                GroupHeadLine := STRSUBSTNO('%1 %2',GroupHeadLine,'*****');
            END;
          GroupTotals::"Global Dimension 1":
            GroupHeadLine := "Global Dimension 1 Code";
          GroupTotals::"Global Dimension 2":
            GroupHeadLine := "Global Dimension 2 Code";
          GroupTotals::"FA Posting Group":
            GroupHeadLine := "FA Posting Group";
        END;
      END;
      IF GroupHeadLine = '' THEN
        GroupHeadLine := '*****';
    END;

    LOCAL PROCEDURE UpdateTotals@10();
    BEGIN
      FOR j := 1 TO NumberOfTypes DO BEGIN
        GroupStartAmounts[j] := GroupStartAmounts[j] + StartAmounts[j];
        GroupNetChangeAmounts[j] := GroupNetChangeAmounts[j] + NetChangeAmounts[j];
        GroupDisposalAmounts[j] := GroupDisposalAmounts[j] + DisposalAmounts[j];
        TotalStartAmounts[j] := TotalStartAmounts[j] + StartAmounts[j];
        TotalNetChangeAmounts[j] := TotalNetChangeAmounts[j] + NetChangeAmounts[j];
        TotalDisposalAmounts[j] := TotalDisposalAmounts[j] + DisposalAmounts[j];
      END;
    END;

    LOCAL PROCEDURE CreateGroupTotals@4();
    BEGIN
      FOR j := 1 TO NumberOfTypes DO
        TotalEndingAmounts[j] :=
          GroupStartAmounts[j] + GroupNetChangeAmounts[j] + GroupDisposalAmounts[j];
      BookValueAtEndingDate := 0;
      BookValueAtStartingDate := 0;
      FOR j := 1 TO NumberOfTypes DO BEGIN
        BookValueAtEndingDate := BookValueAtEndingDate + TotalEndingAmounts[j];
        BookValueAtStartingDate := BookValueAtStartingDate + GroupStartAmounts[j];
      END;
    END;

    LOCAL PROCEDURE CreateTotals@7();
    BEGIN
      FOR j := 1 TO NumberOfTypes DO
        TotalEndingAmounts[j] :=
          TotalStartAmounts[j] + TotalNetChangeAmounts[j] + TotalDisposalAmounts[j];
      BookValueAtEndingDate := 0;
      BookValueAtStartingDate := 0;
      FOR j := 1 TO NumberOfTypes DO BEGIN
        BookValueAtEndingDate := BookValueAtEndingDate + TotalEndingAmounts[j];
        BookValueAtStartingDate := BookValueAtStartingDate + TotalStartAmounts[j];
      END;
    END;

    LOCAL PROCEDURE GetStartingDate@8(StartingDate@1000 : Date) : Date;
    BEGIN
      IF StartingDate <= 01010000D THEN
        EXIT(0D)
      ELSE
        EXIT(StartingDate - 1);
    END;

    PROCEDURE "---ISAT---"@1000000000();
    BEGIN
    END;

    PROCEDURE XlLine@1100281001(VAR me@1000000000 : Record 370);
    VAR
      XlHead1@1000000001 : TextConst 'FRA=Liste des dotations';
    BEGIN
      FASetup.GET;
      IF CreateHeader AND FASetup."R50047.Init" THEN
      BEGIN
         me.INIT;
         me.VALIDATE("Row No.",1);
         me.VALIDATE("Column No.",1);
         me."Cell Value as Text" := XlHead1;
         me.INSERT;
         me.VALIDATE("Column No.",8);
         me."Cell Value as Text" := FORMAT(TODAY,0,'<Day> <Month text> <Year4>');
         me.Bold := TRUE;
         me.INSERT;
         me.VALIDATE("Row No.",2);
         me.VALIDATE("Column No.",1);
         me.Bold := TRUE;
         me."Cell Value as Text" := COMPANYNAME;
         me.Bold := TRUE;
         me.INSERT;
         me.Bold := FALSE;
         me.VALIDATE("Column No.",8);
         me."Cell Value as Text" := FORMAT(USERID);
         me.Bold := TRUE;
         me.INSERT;
         me.VALIDATE("Row No.",3);
         me.VALIDATE("Column No.",1);
         me."Cell Value as Text" := FORMAT(USERID);
         me.Bold := TRUE;
         me.INSERT;
      END;

      VLine := 5;
      CreateHeader := FALSE;
    END;

    BEGIN
    {
      /** @r IMH01 @d 06/07/11 @a ISAT.ST @v IMH6.01.151 @s Immobilisation */
    }
    END.
  }
  RDLDATA
  {
  }
}