OBJECT Report 8016653 Sales - Credit Memo Isatech+
{
  OBJECT-PROPERTIES
  {
    Date=18/09/12;
    Time=15:19:52;
    Modified=Yes;
    Version List=ISA6.00;
  }
  PROPERTIES
  {
    Permissions=TableData 7190=rimd;
    CaptionML=[ENU=Sales - Credit Memo;
               FRA=Ventes - Avoir Isatech+];
    LeftMargin=1000;
    OnInitReport=BEGIN
                   GLSetup.GET;
                 END;

    OnPreReport=BEGIN
                  IF NOT CurrReport.USEREQUESTFORM THEN
                    InitLogInteraction;
                END;

    HorzGrid=210;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table114;
        DataItemTableView=SORTING(No.);
        NewPagePerRecord=Yes;
        ReqFilterHeadingML=[ENU=Posted Sales Credit Memo;
                            FRA=Avoir vente enregistr‚];
        OnAfterGetRecord=BEGIN
                           CurrReport.LANGUAGE := Language.GetLanguageID("Language Code");

                           CompanyInfo.GET;
                           CompanyInfo.CALCFIELDS(Picture);
                           IF RespCenter.GET("Responsibility Center") THEN BEGIN
                             FormatAddr.RespCenter(CompanyAddr,RespCenter);
                             CompanyInfo."Phone No." := RespCenter."Phone No.";
                             CompanyInfo."Fax No." := RespCenter."Fax No.";
                           END ELSE BEGIN
                             FormatAddr.Company(CompanyAddr,CompanyInfo);
                           END;

                           PostedDocDim1.SETRANGE("Table ID",DATABASE::"Sales Cr.Memo Header");
                           PostedDocDim1.SETRANGE("Document No.","Sales Cr.Memo Header"."No.");

                           IF "Return Order No." = '' THEN
                             ReturnOrderNoText := ''
                           ELSE
                             ReturnOrderNoText := FIELDCAPTION("Return Order No.");
                           IF "Salesperson Code" = '' THEN BEGIN
                             SalesPurchPerson.INIT;
                             SalesPersonText := '';
                           END ELSE BEGIN
                             SalesPurchPerson.GET("Salesperson Code");
                             SalesPersonText := Text000;
                           END;
                           IF "Your Reference" = '' THEN
                             ReferenceText := ''
                           ELSE
                             ReferenceText := FIELDCAPTION("Your Reference");
                           IF "VAT Registration No." = '' THEN
                             VATNoText := ''
                           ELSE
                             VATNoText := FIELDCAPTION("VAT Registration No.");
                           IF "Currency Code" = '' THEN BEGIN
                             GLSetup.TESTFIELD("LCY Code");
                             TotalText := STRSUBSTNO(Text001,GLSetup."LCY Code");
                             TotalInclVATText := STRSUBSTNO(Text002,GLSetup."LCY Code");
                             TotalExclVATText := STRSUBSTNO(Text007,GLSetup."LCY Code");
                           END ELSE BEGIN
                             TotalText := STRSUBSTNO(Text001,"Currency Code");
                             TotalInclVATText := STRSUBSTNO(Text002,"Currency Code");
                             TotalExclVATText := STRSUBSTNO(Text007,"Currency Code");
                           END;
                           FormatAddr.SalesCrMemoBillTo(CustAddr,"Sales Cr.Memo Header");
                           IF "Applies-to Doc. No." = '' THEN
                             AppliedToText := ''
                           ELSE
                             AppliedToText := STRSUBSTNO(Text003,"Applies-to Doc. Type","Applies-to Doc. No.");

                           FormatAddr.SalesCrMemoShipTo(ShipToAddr,"Sales Cr.Memo Header");
                           ShowShippingAddr := "Sell-to Customer No." <> "Bill-to Customer No.";
                           FOR i := 1 TO ARRAYLEN(ShipToAddr) DO
                             IF ShipToAddr[i] <> CustAddr[i] THEN
                               ShowShippingAddr := TRUE;

                           IF LogInteraction THEN
                             IF NOT CurrReport.PREVIEW THEN
                               SegManagement.LogDocument(
                                 6,"No.",0,0,DATABASE::Customer,"Sell-to Customer No.","Salesperson Code",
                                 "Campaign No.","Posting Description",'');


                           Cust.GET("Bill-to Customer No.");
                           IF NOT Country.GET("Bill-to Country/Region Code") THEN BEGIN
                             Country.INIT;
                           END;
                           IF NOT BankAccount.GET(CompanyInfo."Default Bank Account No.") THEN BEGIN
                             BankAccount.INIT;
                           END;

                           CompanyAddrText :=
                             STRSUBSTNO(
                               Text008,
                               CompanyInfo.Address + CompanyInfo."Address 2",
                               COPYSTR(CompanyInfo."Country/Region Code",1,1),
                               CompanyInfo."Post Code",
                               CompanyInfo.City);

                           i := 1;
                           VATTotal := 0;
                           REPEAT
                             VatBaseText[i] := '';
                             VATRateText[i] := '';
                             VATBase[i] := 0;
                             VATRate[i] := 0;
                             i += 1;
                           UNTIL (i = 4);
                           i := 1;
                         END;

        ReqFilterFields=No.,Sell-to Customer No.,No. Printed;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        NewPagePerRecord=Yes;
        DataItemVarName=CopyLoop;
        OnPreDataItem=BEGIN
                        NoOfLoops := ABS(NoOfCopies) + 1;
                        CopyText := '';
                        SETRANGE(Number,1,NoOfLoops);
                      END;

        OnAfterGetRecord=BEGIN
                           CurrReport.PAGENO := 1;
                           IF Number > 1 THEN
                             CopyText := Text004;
                         END;

        OnPostDataItem=BEGIN
                         IF NOT CurrReport.PREVIEW THEN
                           SalesCrMemoCountPrinted.RUN("Sales Cr.Memo Header");
                       END;

      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=2;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=CONST(1));
        DataItemVarName=PageLoop;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=19320;
            SectionHeight=8037;
          }
          CONTROLS
          {
            { 1   ;TextBox      ;0    ;2961 ;6300 ;423  ;FontSize=10;
                                                         FontBold=Yes;
                                                         SourceExpr=STRSUBSTNO(Text005,CopyText) }
            { 30  ;TextBox      ;11970;5499 ;5250 ;423  ;FontSize=9;
                                                         SourceExpr="Sales Cr.Memo Header"."VAT Registration No." }
            { 1000000000;TextBox;6720 ;1692 ;9660 ;423  ;FontSize=8;
                                                         CaptionML=[ENU=VAT Reg. No.;
                                                                    FRA=Nø id. intracomm.];
                                                         SourceExpr=CompanyInfo."Trade Register" + ' - APE ' + CompanyInfo."APE Code" }
            { 1000000001;TextBox;11130;846  ;3570 ;423  ;FontSize=8;
                                                         CaptionML=[ENU=Fax No.;
                                                                    FRA=Nø t‚l‚copie];
                                                         SourceExpr=CompanyInfo."Fax No." }
            { 1000000002;TextBox;8820 ;1269 ;5880 ;423  ;FontSize=8;
                                                         CaptionML=[ENU=VAT Reg. No.;
                                                                    FRA=Nø id. intracomm.];
                                                         SourceExpr=CompanyInfo."VAT Registration No." }
            { 1000000003;TextBox;6720 ;423  ;9660 ;423  ;FontSize=8;
                                                         SourceExpr=CompanyAddrText }
            { 1000000004;Label  ;10290;846  ;840  ;423  ;ParentControl=1000000001;
                                                         FontSize=8;
                                                         CaptionML=[ENU=Fax :;
                                                                    FRA=Fax :] }
            { 1000000005;TextBox;7350 ;846  ;2940 ;423  ;FontSize=8;
                                                         CaptionML=[ENU=Phone No.;
                                                                    FRA=Nø t‚l‚phone];
                                                         SourceExpr=CompanyInfo."Phone No." }
            { 1000000006;Label  ;6720 ;1269 ;2100 ;423  ;ParentControl=1000000002;
                                                         FontSize=8;
                                                         CaptionML=[ENU=VAT ID;
                                                                    FRA=Nø ID intracom.] }
            { 1000000007;Label  ;6720 ;846  ;630  ;423  ;ParentControl=1000000005;
                                                         FontSize=8;
                                                         CaptionML=[ENU=Tel :;
                                                                    FRA=Tel :] }
            { 1000000008;PictureBox;0 ;0    ;5460 ;2538 ;SourceExpr=CompanyInfo.Picture }
            { 1000000009;TextBox;8400 ;5499 ;3570 ;423  ;FontSize=9;
                                                         SourceExpr=VATNoText }
            { 1000000010;Label  ;8400 ;5922 ;3570 ;423  ;FontSize=9;
                                                         CaptionML=[ENU=Your Contact;
                                                                    FRA=Votre contact] }
            { 1000000011;Label  ;8400 ;6345 ;3570 ;423  ;FontSize=9;
                                                         CaptionML=[ENU=Vendor;
                                                                    FRA=Vendeur] }
            { 1000000013;TextBox;11970;6345 ;5250 ;423  ;FontSize=9;
                                                         SourceExpr=SalesPurchPerson.Name }
            { 1000000014;TextBox;11970;5922 ;5250 ;423  ;FontSize=9;
                                                         SourceExpr="Sales Cr.Memo Header"."Sell-to Contact" }
            { 1000000015;Label  ;8400 ;6768 ;3570 ;423  ;FontSize=9;
                                                         CaptionML=[ENU=Country of Origin;
                                                                    FRA=Pays d'origine] }
            { 1000000016;TextBox;11970;6768 ;5250 ;423  ;FontSize=9;
                                                         SourceExpr='France' }
            { 1000000018;TextBox;2940 ;5076 ;3780 ;423  ;FontSize=9;
                                                         SourceExpr="Sales Cr.Memo Header"."External Document No." }
            { 1000000020;Label  ;420  ;5076 ;2520 ;423  ;FontSize=9;
                                                         CaptionML=[ENU=Your Ref.;
                                                                    FRA=Votre ref.] }
            { 1000000021;TextBox;2940 ;4653 ;2100 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         SourceExpr="Sales Cr.Memo Header"."Posting Date" }
            { 1000000022;Label  ;420  ;4653 ;2520 ;423  ;ParentControl=1000000021;
                                                         FontSize=9;
                                                         CaptionML=[ENU=Date;
                                                                    FRA=Date] }
            { 1000000023;Label  ;420  ;4230 ;2520 ;423  ;ParentControl=1000000024;
                                                         FontSize=9;
                                                         CaptionML=[ENU=Customer Code;
                                                                    FRA=Code client] }
            { 1000000024;TextBox;2940 ;4230 ;2100 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         SourceExpr="Sales Cr.Memo Header"."Bill-to Customer No." }
            { 1000000025;Label  ;420  ;3807 ;2520 ;423  ;FontSize=9;
                                                         CaptionML=[ENU=Credit Memo No.;
                                                                    FRA=Nø avoir] }
            { 1000000026;TextBox;2940 ;3807 ;2100 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         SourceExpr="Sales Cr.Memo Header"."No." }
            { 1000000051;Shape  ;8400 ;2961 ;9660 ;2115  }
            { 1000000052;TextBox;8820 ;3384 ;8820 ;423  ;FontSize=11;
                                                         SourceExpr="Sales Cr.Memo Header"."Bill-to Name" }
            { 1000000053;TextBox;8820 ;3807 ;8820 ;423  ;FontSize=11;
                                                         SourceExpr=["Sales Cr.Memo Header"."Bill-to Address" + '  ' + "Sales Cr.Memo Header"."Bill-to Address 2"  ] }
            { 1000000054;TextBox;8820 ;4230 ;8820 ;423  ;FontSize=11;
                                                         SourceExpr="Sales Cr.Memo Header"."Bill-to Post Code" + ' ' + "Sales Cr.Memo Header"."Bill-to City" + ', ' + Country.Name }
            { 1000000055;TextBox;2940 ;5499 ;3780 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         SourceExpr=Cust."Our Account No." }
            { 1000000056;Label  ;420  ;5499 ;2520 ;423  ;FontSize=9;
                                                         CaptionML=[ENU=Our Account No.;
                                                                    FRA=Notre compte] }
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            PrintOnEveryPage=Yes;
            PlaceInBottom=Yes;
            SectionWidth=19320;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1000000233;TextBox;17430;0    ;1680 ;423  ;FontSize=9;
                                                         SourceExpr=STRSUBSTNO(Text006,FORMAT(CurrReport.PAGENO)) }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=3;
        DataItemTable=Table115;
        DataItemTableView=SORTING(Document No.,Line No.);
        OnPreDataItem=BEGIN
                        VATAmountLine.DELETEALL;
                        SalesShipmentBuffer.RESET;
                        SalesShipmentBuffer.DELETEALL;
                        FirstValueEntryNo := 0;
                        MoreLines := FIND('+');
                        WHILE MoreLines AND (Description = '') AND ("No." = '') AND (Quantity = 0) AND (Amount = 0) DO
                          MoreLines := NEXT(-1) <> 0;
                        IF NOT MoreLines THEN
                          CurrReport.BREAK;
                        SETRANGE("Line No.",0,"Line No.");
                        CurrReport.CREATETOTALS(Amount,"Amount Including VAT","Inv. Discount Amount");
                      END;

        OnAfterGetRecord=BEGIN
                           SalesShipmentBuffer.DELETEALL;
                           PostedReceiptDate := 0D;
                           IF Quantity <> 0 THEN
                             PostedReceiptDate := FindPostedShipmentDate;

                           IF (Type = Type::"G/L Account") AND (NOT ShowInternalInfo) THEN
                             "No." := '';

                           VATAmountLine.INIT;
                           VATAmountLine."VAT Identifier" := "VAT Identifier";
                           VATAmountLine."VAT Calculation Type" := "VAT Calculation Type";
                           VATAmountLine."Tax Group Code" := "Tax Group Code";
                           VATAmountLine."VAT %" := "VAT %";
                           VATAmountLine."VAT Base" := Amount;
                           VATAmountLine."Amount Including VAT" := "Amount Including VAT";
                           VATAmountLine."Line Amount" := "Line Amount";
                           IF "Allow Invoice Disc." THEN
                             VATAmountLine."Inv. Disc. Base Amount" := "Line Amount";
                           VATAmountLine."Invoice Discount Amount" := "Inv. Discount Amount";
                           VATAmountLine.InsertLine;
                         END;

        TotalFields=Line Amount;
        DataItemLinkReference=Sales Cr.Memo Header;
        DataItemLink=Document No.=FIELD(No.);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=19320;
            SectionHeight=1722;
          }
          CONTROLS
          {
            { 38  ;Label        ;420  ;846  ;2100 ;846  ;ParentControl=61;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 39  ;Label        ;2940 ;846  ;4410 ;846  ;ParentControl=62;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 40  ;Label        ;7770 ;846  ;1470 ;846  ;ParentControl=63;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 41  ;Label        ;11550;846  ;1470 ;846  ;ParentControl=64;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 42  ;Label        ;13440;846  ;1680 ;846  ;ParentControl=65;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Unit Price;
                                                                    FRA=Prix unitaire] }
            { 43  ;Label        ;15540;846  ;840  ;846  ;ParentControl=66;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 44  ;Label        ;16800;846  ;2100 ;846  ;ParentControl=67;
                                                         HorzAlign=Right;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Amount;
                                                                    FRA=Montant] }
            { 103 ;Label        ;9660 ;0    ;1470 ;1692 ;ParentControl=97;
                                                         VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=Yes;
                                                         MultiLine=Yes }
            { 1000000027;Shape  ;0    ;0    ;420  ;1692 ;ShapeStyle=VertLine }
            { 1000000028;Shape  ;2520 ;0    ;420  ;1692 ;ShapeStyle=VertLine }
            { 1000000029;Shape  ;7350 ;0    ;420  ;1692 ;ShapeStyle=VertLine }
            { 1000000030;Shape  ;9240 ;0    ;420  ;1692 ;ShapeStyle=VertLine }
            { 1000000031;Shape  ;11130;0    ;420  ;1692 ;ShapeStyle=VertLine }
            { 1000000032;Shape  ;13020;0    ;420  ;1692 ;ShapeStyle=VertLine }
            { 1000000033;Shape  ;15120;0    ;420  ;1692 ;ShapeStyle=VertLine }
            { 1000000034;Shape  ;16380;0    ;420  ;1692 ;ShapeStyle=VertLine }
            { 1000000036;Shape  ;18900;0    ;420  ;1692 ;ShapeStyle=VertLine }
            { 1000000037;Shape  ;210  ;1692 ;18900;30   ;ShapeStyle=HorzLine }
            { 1000000038;Shape  ;210  ;0    ;18900;30   ;ShapeStyle=HorzLine }
          }
           }
        { PROPERTIES
          {
            SectionType=TransHeader;
            SectionWidth=19320;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 53  ;TextBox      ;16800;0    ;2100 ;423  ;FontSize=9;
                                                         CaptionML=[ENU=Continued;
                                                                    FRA=Report];
                                                         SourceExpr="Line Amount";
                                                         AutoFormatType=1;
                                                         AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }
            { 1000000039;Shape  ;0    ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000040;Shape  ;2520 ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000041;Shape  ;7350 ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000042;Shape  ;9240 ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000043;Shape  ;11130;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000044;Shape  ;13020;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000047;Shape  ;18900;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000046;Shape  ;210  ;0    ;18900;30   ;ShapeStyle=HorzLine }
            { 1000000057;Shape  ;16380;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000058;Shape  ;15120;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000045;Label  ;13440;0    ;2940 ;423  ;FontSize=9;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Continued;
                                                                    FRA=Report] }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19320;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(Type = 0);
                         END;

          }
          CONTROLS
          {
            { 54  ;TextBox      ;2940 ;0    ;4410 ;423  ;FontSize=9;
                                                         SourceExpr=Description }
            { 1000000059;Shape  ;0    ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000060;Shape  ;2520 ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000064;Shape  ;13020;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000065;Shape  ;15120;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000066;Shape  ;16380;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000067;Shape  ;18900;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000012;Shape  ;7350 ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000017;Shape  ;9240 ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000019;Shape  ;11130;0    ;420  ;423  ;ShapeStyle=VertLine }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19320;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(Type > 0);
                         END;

          }
          CONTROLS
          {
            { 61  ;TextBox      ;420  ;0    ;2100 ;423  ;HorzAlign=Left;
                                                         FontSize=9;
                                                         SourceExpr="No." }
            { 62  ;TextBox      ;2940 ;0    ;4410 ;423  ;FontSize=9;
                                                         SourceExpr=Description }
            { 63  ;TextBox      ;7770 ;0    ;1470 ;423  ;FontSize=9;
                                                         BlankZero=Yes;
                                                         SourceExpr=Quantity }
            { 64  ;TextBox      ;11550;0    ;1470 ;423  ;FontSize=9;
                                                         SourceExpr="Unit of Measure" }
            { 65  ;TextBox      ;13440;0    ;1680 ;423  ;FontSize=9;
                                                         BlankZero=Yes;
                                                         SourceExpr="Unit Price";
                                                         AutoFormatType=2;
                                                         AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }
            { 66  ;TextBox      ;15540;0    ;840  ;423  ;FontSize=9;
                                                         CaptionML=[ENU=Disc. %;
                                                                    FRA=% remise];
                                                         BlankZero=Yes;
                                                         SourceExpr="Line Discount %" }
            { 67  ;TextBox      ;16800;0    ;2100 ;423  ;FontSize=9;
                                                         CaptionML=[ENU=Amount;
                                                                    FRA=Montant];
                                                         BlankZero=Yes;
                                                         SourceExpr="Line Amount";
                                                         AutoFormatType=1;
                                                         AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }
            { 97  ;TextBox      ;9660 ;0    ;1470 ;423  ;FontSize=9;
                                                         CaptionML=[ENU=Posted Return Receipt Date;
                                                                    FRA=Date r‚ception retour valid‚e];
                                                         SourceExpr=PostedReceiptDate }
            { 1000000079;Shape  ;0    ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000080;Shape  ;2520 ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000081;Shape  ;11130;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000082;Shape  ;9240 ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000083;Shape  ;7350 ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000084;Shape  ;13020;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000085;Shape  ;15120;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000086;Shape  ;16380;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000088;Shape  ;18900;0    ;420  ;423  ;ShapeStyle=VertLine }
          }
           }
        { PROPERTIES
          {
            SectionType=TransFooter;
            SectionWidth=19320;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 82  ;Label        ;11550;0    ;1470 ;423  ;ParentControl=83;
                                                         FontSize=9;
                                                         LeaderDots=Yes;
                                                         CaptionML=[ENU=Continued;
                                                                    FRA=Report] }
            { 83  ;TextBox      ;16800;0    ;2100 ;423  ;FontSize=9;
                                                         CaptionML=[ENU=Continued;
                                                                    FRA=Report];
                                                         SourceExpr="Line Amount";
                                                         AutoFormatType=1;
                                                         AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }
            { 1000000089;Shape  ;0    ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000090;Shape  ;2520 ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000091;Shape  ;11130;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000092;Shape  ;9240 ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000093;Shape  ;7350 ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000094;Shape  ;13020;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000098;Shape  ;18900;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000099;Shape  ;210  ;393  ;18900;30   ;ShapeStyle=HorzLine }
            { 1000000049;Shape  ;16380;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000050;Shape  ;15120;0    ;420  ;423  ;ShapeStyle=VertLine }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=4;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        DataItemVarName=Sales Shipment Buffer;
        OnPreDataItem=BEGIN
                        SETRANGE(Number,1,SalesShipmentBuffer.COUNT);
                      END;

        OnAfterGetRecord=BEGIN
                           IF Number = 1 THEN
                             SalesShipmentBuffer.FIND('-')
                           ELSE
                             SalesShipmentBuffer.NEXT;
                         END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19320;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 139 ;TextBox      ;9660 ;0    ;1470 ;423  ;FontSize=9;
                                                         CaptionML=[ENU=Posted Return Receipt Date;
                                                                    FRA=Date r‚ception retour valid‚e];
                                                         SourceExpr=SalesShipmentBuffer."Posting Date" }
            { 140 ;TextBox      ;7770 ;0    ;1470 ;423  ;FontSize=9;
                                                         DecimalPlaces=0:5;
                                                         BlankZero=Yes;
                                                         SourceExpr=SalesShipmentBuffer.Quantity }
            { 141 ;Label        ;2940 ;0    ;4410 ;423  ;VertAlign=Bottom;
                                                         FontSize=9;
                                                         FontBold=No;
                                                         MultiLine=Yes;
                                                         CaptionML=[ENU=Return Receipt;
                                                                    FRA=R‚ception retour] }
            { 1000000069;Shape  ;0    ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000070;Shape  ;2520 ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000071;Shape  ;11130;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000072;Shape  ;9240 ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000073;Shape  ;7350 ;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000074;Shape  ;13020;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000075;Shape  ;15120;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000076;Shape  ;16380;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000078;Shape  ;18900;0    ;420  ;423  ;ShapeStyle=VertLine }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=3;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number);
        DataItemVarName=VATCounter;
        OnPreDataItem=BEGIN
                        IF VATAmountLine.GetTotalVATAmount = 0 THEN
                          CurrReport.BREAK;
                        SETRANGE(Number,1,VATAmountLine.COUNT);
                        CurrReport.CREATETOTALS(
                          VATAmountLine."Line Amount",VATAmountLine."Inv. Disc. Base Amount",
                          VATAmountLine."Invoice Discount Amount",VATAmountLine."VAT Base",VATAmountLine."VAT Amount");
                      END;

        OnAfterGetRecord=VAR
                           locVATBaseText@1000000001 : TextConst 'ENU=VAT Base;FRA=Base TVA';
                           locVATRateText@1000000000 : TextConst 'ENU=VAT Rate;FRA=Taux TVA';
                         BEGIN
                           VATAmountLine.GetLine(Number);

                           IF i <= 3 THEN BEGIN
                             VatBaseText[i] := locVATBaseText;
                             VATRateText[i] := locVATRateText;
                             VATBase[i] := VATAmountLine."VAT Base";
                             VATRate[i] := VATAmountLine."VAT %";
                             VATTotal += VATAmountLine."VAT Amount";
                             i += 1;
                           END;
                         END;

      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=3;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=CONST(1));
        DataItemVarName=Total;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=3;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=CONST(1));
        DataItemVarName=Total2;
        OnPreDataItem=BEGIN
                        IF NOT ShowShippingAddr THEN
                          CurrReport.BREAK;
                      END;

      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=3;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=CONST(1));
        DataItemVarName=VATShow;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19320;
            SectionHeight=2961;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT((VATTotal <> 0));
                         END;

          }
          CONTROLS
          {
            { 1000000155;TextBox;13650;846  ;2730 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=TotalInclVATText }
            { 1000000156;Shape  ;13020;0    ;420  ;1269 ;ShapeStyle=VertLine }
            { 1000000157;Shape  ;16380;0    ;420  ;1269 ;ShapeStyle=VertLine }
            { 1000000158;TextBox;16800;846  ;2100 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr="Sales Cr.Memo Line"."Amount Including VAT";
                                                         AutoFormatType=1;
                                                         AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }
            { 1000000159;Shape  ;18900;0    ;420  ;1269 ;ShapeStyle=VertLine }
            { 1000000160;Shape  ;13230;1269 ;5880 ;30   ;ShapeStyle=HorzLine }
            { 1000000161;Shape  ;8190 ;393  ;420  ;2115 ;ShapeStyle=VertLine }
            { 1000000162;Shape  ;210  ;1239 ;8190 ;30   ;ShapeStyle=HorzLine }
            { 1000000163;Shape  ;210  ;1662 ;8190 ;30   ;ShapeStyle=HorzLine }
            { 1000000164;Shape  ;210  ;2085 ;8190 ;30   ;ShapeStyle=HorzLine }
            { 1000000165;Shape  ;210  ;2508 ;8190 ;30   ;ShapeStyle=HorzLine }
            { 1000000166;TextBox;6720 ;816  ;1470 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         BlankZero=Yes;
                                                         SourceExpr=VATRate[1] }
            { 1000000167;TextBox;6720 ;1239 ;1470 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         BlankZero=Yes;
                                                         SourceExpr=VATRate[2] }
            { 1000000168;TextBox;6720 ;1662 ;1470 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         BlankZero=Yes;
                                                         SourceExpr=VATRate[3] }
            { 1000000169;TextBox;4830 ;2085 ;3360 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         BlankZero=Yes;
                                                         SourceExpr=VATTotal }
            { 1000000174;TextBox;4830 ;816  ;1890 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         SourceExpr=VATRateText[1] }
            { 1000000175;TextBox;4830 ;1239 ;1890 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         SourceExpr=VATRateText[2] }
            { 1000000176;TextBox;4830 ;1662 ;1890 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         SourceExpr=VATRateText[3] }
            { 1000000178;TextBox;13650;423  ;2730 ;423  ;FontSize=8;
                                                         SourceExpr=VATAmountLine.VATAmountText }
            { 1000000179;TextBox;16800;423  ;2100 ;423  ;FontSize=9;
                                                         SourceExpr="Sales Cr.Memo Line"."Amount Including VAT" - "Sales Cr.Memo Line".Amount;
                                                         AutoFormatType=1;
                                                         AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }
            { 1000000180;Shape  ;210  ;816  ;8190 ;30   ;ShapeStyle=HorzLine }
            { 1000000181;Label  ;420  ;393  ;7770 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=VAT Amount Specification;
                                                                    FRA=D‚tail TVA] }
            { 1000000183;Shape  ;4410 ;816  ;420  ;1722 ;ShapeStyle=VertLine }
            { 1000000187;Label  ;420  ;2085 ;3990 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         FontBold=Yes;
                                                         CaptionML=[ENU=VAT Total;
                                                                    FRA=Total TVA] }
            { 1000000188;TextBox;2310 ;816  ;2100 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         BlankZero=Yes;
                                                         SourceExpr=VATBase[1] }
            { 1000000189;TextBox;2310 ;1239 ;2100 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         BlankZero=Yes;
                                                         SourceExpr=VATBase[2] }
            { 1000000190;TextBox;2310 ;1662 ;2100 ;423  ;HorzAlign=Right;
                                                         FontSize=8;
                                                         BlankZero=Yes;
                                                         SourceExpr=VATBase[3] }
            { 1000000191;TextBox;13650;0    ;2730 ;423  ;FontSize=8;
                                                         FontBold=Yes;
                                                         SourceExpr=TotalText }
            { 1000000192;TextBox;16800;0    ;2100 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr="Sales Cr.Memo Line".Amount;
                                                         AutoFormatType=1;
                                                         AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }
            { 1000000193;Shape  ;210  ;393  ;8190 ;30   ;ShapeStyle=HorzLine }
            { 1000000196;TextBox;420  ;816  ;1890 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         SourceExpr=VatBaseText[1] }
            { 1000000197;TextBox;420  ;1239 ;1890 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         SourceExpr=VatBaseText[2] }
            { 1000000198;TextBox;420  ;1662 ;1890 ;423  ;HorzAlign=Center;
                                                         FontSize=8;
                                                         SourceExpr=VatBaseText[3] }
            { 1000000201;Shape  ;210  ;0    ;18900;30   ;ShapeStyle=HorzLine }
            { 1000000204;Shape  ;0    ;393  ;420  ;2115 ;ShapeStyle=VertLine }
          }
           }
      }
       }
    { PROPERTIES
      {
        DataItemIndent=3;
        DataItemTable=Table2000000026;
        DataItemTableView=SORTING(Number)
                          WHERE(Number=CONST(1));
        DataItemVarName=NotVATShow;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19320;
            SectionHeight=453;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT((VATTotal = 0));
                         END;

          }
          CONTROLS
          {
            { 1000000205;Shape  ;18900;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000206;TextBox;16800;0    ;2100 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr="Sales Cr.Memo Line"."Amount Including VAT";
                                                         AutoFormatType=1;
                                                         AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }
            { 1000000207;TextBox;14280;0    ;2100 ;423  ;FontSize=9;
                                                         FontBold=Yes;
                                                         SourceExpr=TotalInclVATText }
            { 1000000208;Shape  ;16380;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000209;Shape  ;13020;0    ;420  ;423  ;ShapeStyle=VertLine }
            { 1000000210;Shape  ;13230;423  ;5880 ;30   ;ShapeStyle=HorzLine }
            { 1000000228;Shape  ;210  ;0    ;18900;30   ;ShapeStyle=HorzLine }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=5060;
      Height=1540;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   LogInteraction := SegManagement.FindInteractTmplCode(6) <> '';
                   RequestOptionsForm.LogInteraction.ENABLED(LogInteraction);
                 END;

    }
    CONTROLS
    {
      { 1   ;TextBox      ;3410 ;0    ;1650 ;440  ;CaptionML=[ENU=No. of Copies;
                                                              FRA=Nombre de copies];
                                                   SourceExpr=NoOfCopies }
      { 21  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=1 }
      { 2   ;CheckBox     ;3410 ;550  ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Show Internal Information;
                                                              FRA=Afficher info. internes];
                                                   SourceExpr=ShowInternalInfo }
      { 3   ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=2 }
      { 4   ;CheckBox     ;3410 ;1100 ;440  ;440  ;Name=LogInteraction;
                                                   ShowCaption=No;
                                                   CaptionML=[ENU=Log Interaction;
                                                              FRA=Journal interaction];
                                                   SourceExpr=LogInteraction }
      { 5   ;Label        ;0    ;1100 ;3300 ;440  ;ParentControl=4 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Salesperson;FRA=Vendeur';
      Text001@1001 : TextConst 'ENU=Total %1;FRA=Total %1';
      Text002@1002 : TextConst 'ENU=Total %1 Incl. VAT;FRA=Total %1 TTC';
      Text003@1003 : TextConst 'ENU=(Applies to %1 %2);FRA=(Doc. lettrage %1 %2)';
      Text004@1004 : TextConst 'ENU=COPY;FRA=COPIE';
      Text005@1005 : TextConst 'ENU=Sales - Credit Memo %1;FRA=Ventes : Avoir %1';
      Text006@1006 : TextConst 'ENU=Page %1;FRA=Page %1';
      Text007@1007 : TextConst 'ENU=Total %1 Excl. VAT;FRA=Total %1 HT';
      GLSetup@1008 : Record 98;
      SalesPurchPerson@1009 : Record 13;
      CompanyInfo@1010 : Record 79;
      VATAmountLine@1011 : TEMPORARY Record 290;
      PostedDocDim1@1012 : Record 359;
      PostedDocDim2@1013 : Record 359;
      Language@1014 : Record 8;
      SalesShipmentBuffer@1042 : TEMPORARY Record 7190;
      SalesCrMemoCountPrinted@1015 : Codeunit 316;
      FormatAddr@1016 : Codeunit 365;
      SegManagement@1017 : Codeunit 5051;
      RespCenter@1018 : Record 5714;
      CustAddr@1019 : ARRAY [8] OF Text[50];
      ShipToAddr@1020 : ARRAY [8] OF Text[50];
      CompanyAddr@1021 : ARRAY [8] OF Text[50];
      ReturnOrderNoText@1039 : Text[30];
      SalesPersonText@1022 : Text[30];
      VATNoText@1023 : Text[30];
      ReferenceText@1024 : Text[30];
      AppliedToText@1025 : Text[40];
      TotalText@1026 : Text[50];
      TotalExclVATText@1027 : Text[50];
      TotalInclVATText@1028 : Text[50];
      MoreLines@1029 : Boolean;
      NoOfCopies@1030 : Integer;
      NoOfLoops@1031 : Integer;
      CopyText@1032 : Text[30];
      ShowShippingAddr@1033 : Boolean;
      i@1034 : Integer;
      DimText@1035 : Text[120];
      OldDimText@1036 : Text[75];
      ShowInternalInfo@1037 : Boolean;
      Continue@1038 : Boolean;
      LogInteraction@1040 : Boolean;
      FirstValueEntryNo@1041 : Integer;
      PostedReceiptDate@1043 : Date;
      NextEntryNo@1044 : Integer;
      CompanyAddrText@1000000000 : Text[250];
      Cust@1000000001 : Record 18;
      Country@1000000002 : Record 9;
      BankAccount@1000000003 : Record 270;
      VATBase@1000000008 : ARRAY [3] OF Decimal;
      VATRate@1000000007 : ARRAY [3] OF Decimal;
      VATTotal@1000000006 : Decimal;
      VatBaseText@1000000005 : ARRAY [3] OF Text[30];
      VATRateText@1000000004 : ARRAY [3] OF Text[30];
      Text008@1000000010 : TextConst 'ENU=Address : %1, %2-%3 %4;FRA=Adresse : %1, %2-%3 %4';

    PROCEDURE InitLogInteraction@1();
    BEGIN
      LogInteraction := SegManagement.FindInteractTmplCode(6) <> '';
    END;

    PROCEDURE FindPostedShipmentDate@6() : Date;
    VAR
      ReturnReceiptHeader@1000 : Record 6660;
      SalesShipmentBuffer2@1001 : TEMPORARY Record 7190;
    BEGIN
      NextEntryNo := 1;
      IF "Sales Cr.Memo Line"."Return Receipt No." <> '' THEN
        IF ReturnReceiptHeader.GET("Sales Cr.Memo Line"."Return Receipt No.") THEN
          EXIT(ReturnReceiptHeader."Posting Date");

      CASE "Sales Cr.Memo Line".Type OF
        "Sales Cr.Memo Line".Type::Item:
          GenerateBufferFromValueEntry("Sales Cr.Memo Line");
        "Sales Cr.Memo Line".Type::"G/L Account","Sales Cr.Memo Line".Type::Resource,
        "Sales Cr.Memo Line".Type::"Charge (Item)","Sales Cr.Memo Line".Type::"Fixed Asset":
           GenerateBufferFromShipment("Sales Cr.Memo Line");
        "Sales Cr.Memo Line".Type::" ":
            EXIT(0D);
      END;

      SalesShipmentBuffer.RESET;
      SalesShipmentBuffer.SETRANGE("Document No.","Sales Cr.Memo Line"."Document No.");
      SalesShipmentBuffer.SETRANGE("Line No." ,"Sales Cr.Memo Line"."Line No.");

      IF SalesShipmentBuffer.FIND('-') THEN BEGIN
        SalesShipmentBuffer2 := SalesShipmentBuffer;
          IF SalesShipmentBuffer.NEXT = 0 THEN BEGIN
            SalesShipmentBuffer.GET(SalesShipmentBuffer2."Document No.",SalesShipmentBuffer2."Line No.",SalesShipmentBuffer2."Entry No."
      );
            SalesShipmentBuffer.DELETE;
            EXIT(SalesShipmentBuffer2."Posting Date");;
          END;
         SalesShipmentBuffer.CALCSUMS(Quantity);
         IF SalesShipmentBuffer.Quantity <> "Sales Cr.Memo Line".Quantity THEN BEGIN
           SalesShipmentBuffer.DELETEALL;
           EXIT("Sales Cr.Memo Header"."Posting Date");
         END;
      END ELSE
        EXIT("Sales Cr.Memo Header"."Posting Date");
    END;

    PROCEDURE GenerateBufferFromValueEntry@2(SalesCrMemoLine2@1002 : Record 115);
    VAR
      ValueEntry@1000 : Record 5802;
      ItemLedgerEntry@1001 : Record 32;
      TotalQuantity@1003 : Decimal;
      Quantity@1004 : Decimal;
    BEGIN
      TotalQuantity := SalesCrMemoLine2."Quantity (Base)";
      ValueEntry.SETCURRENTKEY("Document No.","Posting Date");
      ValueEntry.SETRANGE("Document No.",SalesCrMemoLine2."Document No.");
      ValueEntry.SETRANGE("Posting Date","Sales Cr.Memo Header"."Posting Date");
      ValueEntry.SETRANGE("Item Charge No.",'');
      ValueEntry.SETFILTER("Entry No.",'%1..',FirstValueEntryNo);
      IF ValueEntry.FIND('-') THEN
        REPEAT
          IF ItemLedgerEntry.GET(ValueEntry."Item Ledger Entry No.") THEN BEGIN
            IF SalesCrMemoLine2."Qty. per Unit of Measure" <> 0 THEN
              Quantity := ValueEntry."Invoiced Quantity" / SalesCrMemoLine2."Qty. per Unit of Measure"
            ELSE
              Quantity := ValueEntry."Invoiced Quantity";
            AddBufferEntry(
              SalesCrMemoLine2,
              -Quantity,
              ItemLedgerEntry."Posting Date");
            TotalQuantity := TotalQuantity - ValueEntry."Invoiced Quantity";
          END;
          FirstValueEntryNo := ValueEntry."Entry No." + 1;
        UNTIL (ValueEntry.NEXT = 0) OR (TotalQuantity = 0);
    END;

    PROCEDURE GenerateBufferFromShipment@8(SalesCrMemoLine@1000 : Record 115);
    VAR
      SalesCrMemoHeader@1001 : Record 114;
      SalesCrMemoLine2@1002 : Record 115;
      ReturnReceiptHeader@1006 : Record 6660;
      ReturnReceiptLine@1004 : Record 6661;
      TotalQuantity@1003 : Decimal;
      Quantity@1005 : Decimal;
    BEGIN
      TotalQuantity := 0;
      SalesCrMemoHeader.SETCURRENTKEY("Return Order No.");
      SalesCrMemoHeader.SETFILTER("No.",'..%1',"Sales Cr.Memo Header"."No.");
      SalesCrMemoHeader.SETRANGE("Return Order No.","Sales Cr.Memo Header"."Return Order No.");
      IF SalesCrMemoHeader.FIND('-') THEN
        REPEAT
          SalesCrMemoLine2.SETRANGE("Document No.",SalesCrMemoHeader."No.");
          SalesCrMemoLine2.SETRANGE("Line No.",SalesCrMemoLine."Line No.");
          SalesCrMemoLine2.SETRANGE(Type,SalesCrMemoLine.Type);
          SalesCrMemoLine2.SETRANGE("No.",SalesCrMemoLine."No.");
          SalesCrMemoLine2.SETRANGE("Unit of Measure Code",SalesCrMemoLine."Unit of Measure Code");
          IF SalesCrMemoLine2.FIND('-') THEN
            REPEAT
              TotalQuantity := TotalQuantity + SalesCrMemoLine2.Quantity;
            UNTIL SalesCrMemoLine2.NEXT = 0;
        UNTIL SalesCrMemoHeader.NEXT = 0;

      ReturnReceiptLine.SETCURRENTKEY("Return Order No.","Return Order Line No.");
      ReturnReceiptLine.SETRANGE("Return Order No.","Sales Cr.Memo Header"."Return Order No.");
      ReturnReceiptLine.SETRANGE("Return Order Line No.",SalesCrMemoLine."Line No.");
      ReturnReceiptLine.SETRANGE("Line No.",SalesCrMemoLine."Line No.");
      ReturnReceiptLine.SETRANGE(Type,SalesCrMemoLine.Type);
      ReturnReceiptLine.SETRANGE("No.",SalesCrMemoLine."No.");
      ReturnReceiptLine.SETRANGE("Unit of Measure Code",SalesCrMemoLine."Unit of Measure Code");
      ReturnReceiptLine.SETFILTER(Quantity,'<>%1',0);

      IF ReturnReceiptLine.FIND('-') THEN
        REPEAT
          IF "Sales Cr.Memo Header"."Get Return Receipt Used" THEN
            CorrectShipment(ReturnReceiptLine);
          IF ABS(ReturnReceiptLine.Quantity) <= ABS(TotalQuantity - SalesCrMemoLine.Quantity) THEN
            TotalQuantity := TotalQuantity - ReturnReceiptLine.Quantity
          ELSE BEGIN
            IF ABS(ReturnReceiptLine.Quantity)  > ABS(TotalQuantity) THEN
              ReturnReceiptLine.Quantity := TotalQuantity;
            Quantity :=
              ReturnReceiptLine.Quantity - (TotalQuantity- SalesCrMemoLine.Quantity);

            SalesCrMemoLine.Quantity := SalesCrMemoLine.Quantity - Quantity;
            TotalQuantity := TotalQuantity - ReturnReceiptLine.Quantity;

            IF ReturnReceiptHeader.GET(ReturnReceiptLine."Document No.") THEN
              BEGIN
                AddBufferEntry(
                  SalesCrMemoLine,
                  -Quantity,
                  ReturnReceiptHeader."Posting Date");
              END;
          END;
        UNTIL (ReturnReceiptLine.NEXT = 0) OR (TotalQuantity = 0);
    END;

    PROCEDURE CorrectShipment@7(VAR ReturnReceiptLine@1001 : Record 6661);
    VAR
      SalesCrMemoLine@1000 : Record 115;
    BEGIN
      SalesCrMemoLine.SETCURRENTKEY("Return Receipt No.","Return Receipt Line No.");
      SalesCrMemoLine.SETRANGE("Return Receipt No.",ReturnReceiptLine."Document No.");
      SalesCrMemoLine.SETRANGE("Return Receipt Line No.",ReturnReceiptLine."Line No.");
      IF SalesCrMemoLine.FIND('-') THEN
         REPEAT
            ReturnReceiptLine.Quantity := ReturnReceiptLine.Quantity - SalesCrMemoLine.Quantity;
         UNTIL SalesCrMemoLine.NEXT = 0;
    END;

    PROCEDURE AddBufferEntry@3(SalesCrMemoLine@1001 : Record 115;QtyOnShipment@1002 : Decimal;PostingDate@1003 : Date);
    BEGIN
      SalesShipmentBuffer.SETRANGE("Document No.",SalesCrMemoLine."Document No.");
      SalesShipmentBuffer.SETRANGE("Line No.",SalesCrMemoLine."Line No.");
      SalesShipmentBuffer.SETRANGE("Posting Date",PostingDate);
      IF SalesShipmentBuffer.FIND('-') THEN BEGIN
        SalesShipmentBuffer.Quantity := SalesShipmentBuffer.Quantity - QtyOnShipment;
        SalesShipmentBuffer.MODIFY;
        EXIT;
      END;

      WITH SalesShipmentBuffer DO BEGIN
        INIT;
        "Document No." := SalesCrMemoLine."Document No.";
        "Line No." := SalesCrMemoLine."Line No.";
        "Entry No." := NextEntryNo;
        Type := SalesCrMemoLine.Type;
        "No." := SalesCrMemoLine."No.";
        Quantity := -QtyOnShipment;
       "Posting Date" := PostingDate;
        INSERT;
        NextEntryNo := NextEntryNo + 1
      END;
    END;

    BEGIN
    {
      /** @r IMH01 @d 06/01/11 @a ISAT.MA @v IMH6.01.040 @s Isatech+ */
    }
    END.
  }
  RDLDATA
  {
  }
}