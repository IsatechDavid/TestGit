OBJECT Report 8016666 VAT Statement isa+
{
  OBJECT-PROPERTIES
  {
    Date=18/09/12;
    Time=15:20:17;
    Modified=Yes;
    Version List=ISA6.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=VAT Statement isa+;
               FRA=D‚claration de TVA isa+;
               NLB=BTW-aangifte isa+];
    TopMargin=1000;
    BottomMargin=500;
    LeftMargin=1000;
    OnPreReport=BEGIN
                  IF EndDateReq = 0D THEN
                    EndDate := 31129999D
                  ELSE
                    EndDate := EndDateReq;
                  VATStmtLine.SETRANGE("Date Filter",StartDate,EndDateReq);
                  IF PeriodSelection = PeriodSelection::"Before and Within Period" THEN
                    Heading := Text000
                  ELSE
                    Heading := Text004;
                  Heading2 := STRSUBSTNO(Text005,StartDate,EndDateReq);
                  VATStmtLineFilter := VATStmtLine.GETFILTERS;
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table257;
        DataItemTableView=SORTING(Statement Template Name,Name);
        NewPagePerRecord=Yes;
        OnPreDataItem=BEGIN
                        GLSetup.GET;
                      END;

        OnAfterGetRecord=BEGIN
                           CurrReport.PAGENO := 1;
                         END;

        ReqFilterFields=Statement Template Name,Name;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table256;
        DataItemTableView=SORTING(Statement Template Name,Statement Name)
                          WHERE(Print=CONST(Yes));
        OnAfterGetRecord=BEGIN
                           CalcLineTotal("VAT Statement Line",TotalAmount,0);
                           IF PrintInIntegers THEN
                             TotalAmount := ROUND(TotalAmount,1,'<');
                           IF "Print with" = "Print with"::"Opposite Sign" THEN
                             TotalAmount := -TotalAmount;
                         END;

        ReqFilterFields=Row No.;
        DataItemLink=Statement Template Name=FIELD(Statement Template Name),
                     Statement Name=FIELD(Name);
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=19330;
            SectionHeight=3384;
            OnPreSection=BEGIN
                           gTotalGeneral:= 0;
                         END;

          }
          CONTROLS
          {
            { 3   ;TextBox      ;0    ;846  ;10650;423  ;FontSize=8;
                                                         SourceExpr=Heading }
            { 8   ;Label        ;0    ;2115 ;3600 ;423  ;ParentControl=9;
                                                         FontSize=8 }
            { 9   ;TextBox      ;3750 ;2115 ;1500 ;423  ;FontSize=8;
                                                         CaptionML=[ENU=VAT Statement Template;
                                                                    FRA=ModŠle d‚claration TVA;
                                                                    NLB=BTW-aangiftesjabloon];
                                                         SourceExpr="VAT Statement Name"."Statement Template Name" }
            { 10  ;Label        ;0    ;2538 ;3600 ;423  ;ParentControl=11;
                                                         FontSize=8 }
            { 11  ;TextBox      ;3750 ;2538 ;1500 ;423  ;FontSize=8;
                                                         CaptionML=[ENU=VAT Statement Name;
                                                                    FRA=Nom d‚claration TVA;
                                                                    NLB=BTW-aangifte];
                                                         SourceExpr="VAT Statement Name".Name }
            { 24  ;TextBox      ;0    ;1269 ;10650;423  ;FontSize=8;
                                                         SourceExpr=Heading2 }
            { 1100281000;TextBox;0    ;0    ;10650;423  ;FontSize=12;
                                                         FontBold=Yes;
                                                         SourceExpr=gText000 }
            { 1100281001;TextBox;0    ;423  ;10650;423  ;FontSize=8;
                                                         SourceExpr=COMPANYNAME }
            { 1100281002;TextBox;14700;0    ;2850 ;423  ;HorzAlign=Left;
                                                         FontSize=8;
                                                         SourceExpr=FORMAT(TODAY,0,4) }
            { 1100281003;TextBox;14700;423  ;2850 ;423  ;FontSize=8;
                                                         SourceExpr=STRSUBSTNO(Text1120002,USERID) }
            { 1100281004;TextBox;14700;846  ;2850 ;477  ;FontSize=8;
                                                         SourceExpr=STRSUBSTNO(Text1120004,CurrReport.PAGENO) }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=19330;
            SectionHeight=846;
            OnPreSection=BEGIN
                           IF UseAmtsInAddCurr THEN
                             HeaderText := STRSUBSTNO(Text002,GLSetup."Additional Reporting Currency")
                           ELSE BEGIN
                             GLSetup.TESTFIELD("LCY Code");
                             HeaderText := STRSUBSTNO(Text002,GLSetup."LCY Code");
                           END;
                         END;

          }
          CONTROLS
          {
            { 22  ;TextBox      ;0    ;0    ;10650;423  ;FontSize=8;
                                                         SourceExpr=HeaderText }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=19330;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(PrintInIntegers AND NOT UseAmtsInAddCurr);
                         END;

          }
          CONTROLS
          {
            { 12  ;Label        ;0    ;0    ;10650;423  ;FontSize=8;
                                                         CaptionML=[ENU=Amounts are in whole LCYs.;
                                                                    FRA=Les montants sont affich‚s sans d‚cimale.;
                                                                    NLB=Bedragen zijn in gehele LV.] }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            SectionWidth=19330;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(PrintInIntegers AND UseAmtsInAddCurr);
                         END;

          }
          CONTROLS
          {
            { 23  ;TextBox      ;0    ;0    ;10650;423  ;FontSize=8;
                                                         SourceExpr=STRSUBSTNO(Text003,GLSetup."Additional Reporting Currency") }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=19330;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(Selection = Selection::"Open and Closed");
                         END;

          }
          CONTROLS
          {
            { 13  ;Label        ;0    ;0    ;10650;423  ;FontSize=8;
                                                         CaptionML=[ENU=The report includes all VAT entries.;
                                                                    FRA=L'‚tat inclut toutes les ‚critures TVA.;
                                                                    NLB=De lijst bevat alle BTW-posten.] }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=19330;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(Selection = Selection::Closed);
                         END;

          }
          CONTROLS
          {
            { 14  ;Label        ;0    ;0    ;10650;423  ;FontSize=8;
                                                         CaptionML=[ENU=The report includes only closed VAT entries.;
                                                                    FRA=L'‚tat n'inclut que les ‚critures TVA cl“tur‚es.;
                                                                    NLB=De lijst bevat alleen afgesloten BTW-posten.] }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=19330;
            SectionHeight=423;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT(Selection IN [Selection::Closed,Selection::"Open and Closed"]);
                         END;

          }
          CONTROLS
          {
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=19330;
            SectionHeight=846;
            OnPreSection=BEGIN
                           CurrReport.SHOWOUTPUT((CurrReport.PAGENO = 1) AND (VATStmtLineFilter <> ''));
                         END;

          }
          CONTROLS
          {
            { 15  ;TextBox      ;0    ;0    ;18150;423  ;FontSize=8;
                                                         SourceExpr="VAT Statement Line".TABLECAPTION + ': ' + VATStmtLineFilter }
          }
           }
        { PROPERTIES
          {
            SectionType=Header;
            PrintOnEveryPage=Yes;
            SectionWidth=19330;
            SectionHeight=876;
          }
          CONTROLS
          {
            { 1100281006;Shape  ;19300;0    ;30   ;846  ;ShapeStyle=VertLine }
            { 1100281007;Shape  ;16950;0    ;30   ;846  ;ShapeStyle=VertLine }
            { 1100281013;Shape  ;1500 ;0    ;30   ;846  ;ShapeStyle=VertLine }
            { 1100281014;Shape  ;0    ;0    ;30   ;846  ;ShapeStyle=VertLine }
            { 1100281015;Shape  ;0    ;0    ;19300;30   ;ShapeStyle=HorzLine }
            { 1100281016;Shape  ;0    ;846  ;19300;30   ;ShapeStyle=HorzLine }
            { 1100281017;TextBox;150  ;0    ;1350 ;846  ;FontSize=7;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         CaptionML=FRA=Contr“le1120003>;
                                                         SourceExpr=gText001 }
            { 1100281018;TextBox;1650 ;0    ;15000;846  ;FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         SourceExpr=gText002 }
            { 1100281024;TextBox;17100;0    ;1950 ;846  ;FontSize=8;
                                                         FontBold=Yes;
                                                         MultiLine=Yes;
                                                         SourceExpr=gText003 }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19330;
            SectionHeight=423;
            OnPreSection=BEGIN
                           gTotalGeneral += TotalAmount;
                         END;

          }
          CONTROLS
          {
            { 1100281026;TextBox;75   ;0    ;1350 ;423  ;FontSize=7;
                                                         CaptionML=[ENU=Posting Date;
                                                                    FRA=Date comptabilisation];
                                                         SourceExpr="Row No." }
            { 1100281027;TextBox;1725 ;0    ;15000;423  ;FontSize=7;
                                                         CaptionML=[ENU=Source Code;
                                                                    FRA=Code journal];
                                                         SourceExpr=Description }
            { 1100281034;TextBox;17100;0    ;2100 ;423  ;FontSize=7;
                                                         BlankZero=Yes;
                                                         SourceExpr=TotalAmount }
            { 1100281035;Shape  ;0    ;0    ;30   ;423  ;ShapeStyle=VertLine }
            { 1100281036;Shape  ;1500 ;0    ;30   ;423  ;ShapeStyle=VertLine }
            { 1100281041;Shape  ;16950;0    ;30   ;423  ;ShapeStyle=VertLine }
            { 1100281042;Shape  ;19300;0    ;30   ;423  ;ShapeStyle=VertLine }
          }
           }
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=19330;
            SectionHeight=0;
            OnPreSection=BEGIN
                           IF "New Page" THEN
                             CurrReport.NEWPAGE;
                         END;

          }
          CONTROLS
          {
          }
           }
        { PROPERTIES
          {
            SectionType=Footer;
            SectionWidth=19330;
            SectionHeight=423;
          }
          CONTROLS
          {
            { 1100281023;Shape  ;0    ;0    ;19300;30   ;ShapeStyle=HorzLine }
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=8360;
      Height=6490;
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1   ;OptionButton ;3410 ;1760 ;4950 ;440  ;CaptionML=[ENU=Open;
                                                              FRA=Ouvertes;
                                                              NLB=Openen];
                                                   SourceExpr=Selection;
                                                   OptionValue=Open }
      { 21  ;Label        ;0    ;1760 ;3300 ;440  ;ParentControl=1;
                                                   CaptionML=[ENU=Include VAT Entries;
                                                              FRA=Inclure ‚critures TVA;
                                                              NLB=BTW-posten opnemen] }
      { 2   ;OptionButton ;3410 ;2310 ;4950 ;440  ;CaptionML=[ENU=Closed;
                                                              FRA=Cl“tur‚es;
                                                              NLB=Afgesloten];
                                                   SourceExpr=Selection;
                                                   OptionValue=Closed }
      { 3   ;OptionButton ;3410 ;2860 ;4950 ;440  ;CaptionML=[ENU=Open and Closed;
                                                              FRA=Ouvertes et cl“tur‚es;
                                                              NLB=Open en afgesloten];
                                                   SourceExpr=Selection;
                                                   OptionValue=Open and Closed }
      { 4   ;OptionButton ;3410 ;3520 ;4950 ;440  ;CaptionML=[ENU=Within Period;
                                                              FRA=Dans la p‚riode;
                                                              NLB=Tijdens periode];
                                                   SourceExpr=PeriodSelection;
                                                   OptionValue=Within Period }
      { 24  ;Label        ;0    ;3520 ;3300 ;440  ;ParentControl=4;
                                                   CaptionML=[ENU=Include VAT Entries;
                                                              FRA=Inclure ‚critures TVA;
                                                              NLB=BTW-posten opnemen] }
      { 5   ;OptionButton ;3410 ;4070 ;4950 ;440  ;CaptionML=[ENU=Before and Within Period;
                                                              FRA=Avant et dans la p‚riode;
                                                              NLB=Voor en tijdens periode];
                                                   SourceExpr=PeriodSelection;
                                                   OptionValue=Before and Within Period }
      { 6   ;CheckBox     ;3410 ;4730 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Round to Whole Numbers;
                                                              FRA=Arrondir … l'entier;
                                                              NLB=Afronden op gehele getallen];
                                                   SourceExpr=PrintInIntegers }
      { 26  ;Label        ;0    ;4730 ;3300 ;440  ;ParentControl=6 }
      { 7   ;CheckBox     ;3410 ;5830 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[ENU=Show Amounts in Add. Reporting Currency;
                                                              FRA=Afficher montants en devise report;
                                                              NLB=Bedragen in rapp.-valuta weergeven];
                                                   SourceExpr=UseAmtsInAddCurr }
      { 8   ;Label        ;0    ;5390 ;3300 ;880  ;ParentControl=7;
                                                   MultiLine=Yes }
      { 9   ;Label        ;220  ;1100 ;3300 ;440  ;CaptionML=[ENU=Ending Date;
                                                              FRA=Date fin;
                                                              NLB=Einddatum] }
      { 10  ;TextBox      ;3630 ;1100 ;1650 ;440  ;CaptionML=[ENU=Ending Date;
                                                              FRA=Date fin;
                                                              NLB=Einddatum];
                                                   SourceExpr=EndDateReq }
      { 11  ;Label        ;220  ;550  ;3300 ;440  ;CaptionML=[ENU=Starting Date;
                                                              FRA=Date d‚but;
                                                              NLB=Begindatum] }
      { 12  ;TextBox      ;3630 ;550  ;1650 ;440  ;CaptionML=[ENU=Starting Date;
                                                              FRA=Date d‚but;
                                                              NLB=Begindatum];
                                                   SourceExpr=StartDate }
      { 13  ;Label        ;0    ;0    ;3300 ;440  ;LeaderDots=No;
                                                   CaptionML=[ENU=Statement Period;
                                                              FRA=P‚riode de d‚claration;
                                                              NLB=Dagafschriftperiode] }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=VAT entries before and within the period;FRA=Ecritures TVA avant et dans la p‚riode;NLB=BTW-posten voor en tijdens de periode';
      Text002@1001 : TextConst 'ENU=All amounts are in %1;FRA=Tous les montants sont en %1;NLB=Alle bedragen zijn in %1.';
      Text003@1002 : TextConst 'ENU=Amounts are in whole %1.;FRA=Montants entiers en %1.;NLB=Bedragen zijn in gehele %1.';
      Text004@1003 : TextConst 'ENU=VAT entries within the period;FRA=Ecritures TVA dans la p‚riode.;NLB=BTW-posten tijdens de periode';
      Text005@1004 : TextConst 'ENU=Period: %1..%2;FRA=P‚riode : %1..%2;NLB=Periode: %1..%2';
      GLAcc@1005 : Record 15;
      VATEntry@1006 : Record 254;
      GLSetup@1007 : Record 98;
      Selection@1008 : 'Open,Closed,Open and Closed';
      PeriodSelection@1009 : 'Before and Within Period,Within Period';
      PrintInIntegers@1010 : Boolean;
      VATStmtLineFilter@1011 : Text[250];
      Heading@1012 : Text[50];
      Amount@1013 : Decimal;
      TotalAmount@1014 : Decimal;
      RowNo@1015 : ARRAY [6] OF Code[10];
      ErrorText@1016 : Text[80];
      i@1017 : Integer;
      UseAmtsInAddCurr@1018 : Boolean;
      HeaderText@1019 : Text[50];
      EndDate@1020 : Date;
      StartDate@1021 : Date;
      EndDateReq@1022 : Date;
      VATStmtLine@1023 : Record 256;
      Heading2@1024 : Text[50];
      gText000@1100281000 : TextConst 'ENU=VAT STATEMENT;FRA=DECLARATION DE TVA';
      gText001@1100281003 : TextConst 'ENU=Total Row No.;FRA=No ligne totalisation';
      gText002@1100281004 : TextConst 'ENU=Description;FRA=D‚signation';
      gText003@1100281005 : TextConst 'ENU=Amount;FRA=Montant';
      gText004@1100281007 : TextConst;
      Text1120002@1100281002 : TextConst 'ENU=Printed by %1;FRA=Imprim‚ par %1';
      Text1120004@1100281001 : TextConst 'ENU=Page %1;FRA=Page %1';
      gTotalGeneral@1100281006 : Decimal;

    PROCEDURE CalcLineTotal@1(VATStmtLine2@1000 : Record 256;VAR TotalAmount@1001 : Decimal;Level@1002 : Integer) : Boolean;
    BEGIN
      IF Level = 0 THEN
        TotalAmount := 0;
      CASE VATStmtLine2.Type OF
        VATStmtLine2.Type::"Account Totaling":
          BEGIN
            GLAcc.SETFILTER("No.",VATStmtLine2."Account Totaling");
            IF EndDateReq = 0D THEN
              EndDate := 31129999D
            ELSE
              EndDate := EndDateReq;
            GLAcc.SETRANGE("Date Filter",StartDate,EndDate);
            Amount := 0;
            IF GLAcc.FIND('-') AND (VATStmtLine2."Account Totaling" <> '') THEN
              REPEAT
                GLAcc.CALCFIELDS("Net Change","Additional-Currency Net Change");
                Amount := ConditionalAdd(Amount,GLAcc."Net Change",GLAcc."Additional-Currency Net Change");
              UNTIL GLAcc.NEXT = 0;
            CalcTotalAmount(VATStmtLine2,TotalAmount);
          END;
        VATStmtLine2.Type::"VAT Entry Totaling":
          BEGIN
            VATEntry.RESET;
            IF VATEntry.SETCURRENTKEY(
                 Type,Closed,"VAT Bus. Posting Group","VAT Prod. Posting Group","Posting Date")
            THEN BEGIN
              VATEntry.SETRANGE("VAT Bus. Posting Group",VATStmtLine2."VAT Bus. Posting Group");
              VATEntry.SETRANGE("VAT Prod. Posting Group",VATStmtLine2."VAT Prod. Posting Group");
            END ELSE BEGIN
              VATEntry.SETCURRENTKEY(
                Type,Closed,"Tax Jurisdiction Code","Use Tax","Posting Date");
              VATEntry.SETRANGE("Tax Jurisdiction Code",VATStmtLine2."Tax Jurisdiction Code");
              VATEntry.SETRANGE("Use Tax",VATStmtLine2."Use Tax");
            END;
            VATEntry.SETRANGE(Type,VATStmtLine2."Gen. Posting Type");
            IF (EndDateReq <> 0D) OR (StartDate <> 0D) THEN
              IF PeriodSelection = PeriodSelection::"Before and Within Period" THEN
                VATEntry.SETRANGE("Posting Date",0D,EndDate)
              ELSE
                VATEntry.SETRANGE("Posting Date",StartDate,EndDate);
            CASE Selection OF
              Selection::Open:
                VATEntry.SETRANGE(Closed,FALSE);
              Selection::Closed:
                VATEntry.SETRANGE(Closed,TRUE);
              ELSE
                VATEntry.SETRANGE(Closed);
            END;
            CASE VATStmtLine2."Amount Type" OF
              VATStmtLine2."Amount Type"::Amount:
                BEGIN
                  VATEntry.CALCSUMS(Amount,"Additional-Currency Amount");
                  Amount := ConditionalAdd(0,VATEntry.Amount,VATEntry."Additional-Currency Amount");
                END;
              VATStmtLine2."Amount Type"::Base:
                BEGIN
                  VATEntry.CALCSUMS(Base,"Additional-Currency Base");
                  Amount := ConditionalAdd(0,VATEntry.Base,VATEntry."Additional-Currency Base");
                END;
              VATStmtLine2."Amount Type"::"Unrealized Amount":
                BEGIN
                  VATEntry.CALCSUMS("Unrealized Amount","Add.-Currency Unrealized Amt.");
                  Amount := ConditionalAdd(0,VATEntry."Unrealized Amount",VATEntry."Add.-Currency Unrealized Amt.");
                END;
              VATStmtLine2."Amount Type"::"Unrealized Base":
                BEGIN
                  VATEntry.CALCSUMS("Unrealized Base","Add.-Currency Unrealized Base");
                  Amount := ConditionalAdd(0,VATEntry."Unrealized Base",VATEntry."Add.-Currency Unrealized Base");
                END;
            END;
            CalcTotalAmount(VATStmtLine2,TotalAmount);
          END;
        VATStmtLine2.Type::"Row Totaling":
          BEGIN
            IF Level >= ARRAYLEN(RowNo) THEN
              EXIT(FALSE);
            Level := Level + 1;
            RowNo[Level] := VATStmtLine2."Row No.";

            IF VATStmtLine2."Row Totaling" = '' THEN
              EXIT(TRUE);
            VATStmtLine2.SETRANGE("Statement Template Name",VATStmtLine2."Statement Template Name");
            VATStmtLine2.SETRANGE("Statement Name",VATStmtLine2."Statement Name");
            VATStmtLine2.SETFILTER("Row No.",VATStmtLine2."Row Totaling");
            IF VATStmtLine2.FIND('-') THEN
              REPEAT
                IF NOT CalcLineTotal(VATStmtLine2,TotalAmount,Level) THEN BEGIN
                  IF Level > 1 THEN
                    EXIT(FALSE);
                  FOR i := 1 TO ARRAYLEN(RowNo) DO
                    ErrorText := ErrorText + RowNo[i] + ' => ';
                  ErrorText := ErrorText + '...';
                  VATStmtLine2.FIELDERROR("Row No.",ErrorText);
                END;
              UNTIL VATStmtLine2.NEXT = 0;
          END;
        VATStmtLine2.Type::Description:
          ;
      END;

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CalcTotalAmount@2(VATStmtLine2@1000 : Record 256;VAR TotalAmount@1001 : Decimal);
    BEGIN
      IF VATStmtLine2."Calculate with" = 1 THEN
        Amount := -Amount;
      IF PrintInIntegers AND VATStmtLine2.Print THEN
        Amount := ROUND(Amount,1,'<');
      TotalAmount := TotalAmount + Amount;
    END;

    PROCEDURE InitializeRequest@3(VAR NewVATStmtName@1000 : Record 257;VAR NewVATStatementLine@1001 : Record 256;NewSelection@1002 : 'Open,Closed,Open and Closed';NewPeriodSelection@1003 : 'Before and Within Period,Within Period';NewPrintInIntegers@1004 : Boolean;NewUseAmtsInAddCurr@1005 : Boolean);
    BEGIN
      "VAT Statement Name".COPY(NewVATStmtName);
      "VAT Statement Line".COPY(NewVATStatementLine);
      Selection := NewSelection;
      PeriodSelection := NewPeriodSelection;
      PrintInIntegers := NewPrintInIntegers;
      UseAmtsInAddCurr := NewUseAmtsInAddCurr;
      IF NewVATStatementLine.GETFILTER("Date Filter") <> '' THEN BEGIN
        StartDate := NewVATStatementLine.GETRANGEMIN("Date Filter");
        EndDateReq := NewVATStatementLine.GETRANGEMAX("Date Filter");
        EndDate := EndDateReq;
      END ELSE BEGIN
        StartDate := 0D;
        EndDateReq := 0D;
        EndDate := 31129999D
      END;
    END;

    PROCEDURE ConditionalAdd@4(Amount@1000 : Decimal;AmountToAdd@1001 : Decimal;AddCurrAmountToAdd@1002 : Decimal) : Decimal;
    BEGIN
      IF UseAmtsInAddCurr THEN
        EXIT(Amount + AddCurrAmountToAdd)
      ELSE
        EXIT(Amount + AmountToAdd);
    END;

    LOCAL PROCEDURE GetCurrency@5() : Code[10];
    BEGIN
      IF UseAmtsInAddCurr THEN
        EXIT(GLSetup."Additional Reporting Currency")
      ELSE
        EXIT('');
    END;

    BEGIN
    {
      /** @r IMH01 @d 06/01/11 @a ISAT.MA @v IMH6.01.040 @s Isatech+ */
    }
    END.
  }
  RDLDATA
  {
  }
}