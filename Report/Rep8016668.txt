OBJECT Report 8016668 Dimension Value Update
{
  OBJECT-PROPERTIES
  {
    Date=18/09/12;
    Time=15:20:28;
    Modified=Yes;
    Version List=ISA6.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Dimension Value Update;
               FRA=Modification des axes analytiques];
    ProcessingOnly=Yes;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table17;
        DataItemTableView=SORTING(Entry No.);
        OnPreDataItem=BEGIN
                        IF DimensionValueCode <> '' THEN BEGIN
                          IF NOT DimensionValue.GET(DimensionCode,DimensionValueCode) THEN
                            ERROR(Text002);
                        END;
                      END;

        OnAfterGetRecord=BEGIN
                           // Appel au codeunit de modifications des ‚critures comptables

                           // On modifie la table 355
                           // Si shortcut 1 ou 2 on modifie les tables sources
                           // La modification d'un axe analytique doit mettre … jour les vues utilisant cet axe :
                           // -Si compression date, r‚-initialisation de la vue. Message d'avertissement sur l'initialisation
                           // -Si pas de compression, mise … jour de l'‚criture.
                           GLEntryEdit.UpdateDimLedgEntry(DATABASE::"G/L Entry","Entry No.",DimensionCode,DimensionValueCode);
                         END;

      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
    }
    CONTROLS
    {
      { 1100481002;TextBox;3520 ;110  ;2860 ;440  ;CaptionML=[ENU=Dimension Code;
                                                              FRA=Code axe];
                                                   SourceExpr=DimensionCode;
                                                   TableRelation=Dimension;
                                                   OnAfterValidate=BEGIN
                                                                     DimensionValueCode := '';
                                                                   END;
                                                                    }
      { 1100481003;Label  ;110  ;110  ;3300 ;440  ;ParentControl=1100481002 }
      { 1100481004;TextBox;3520 ;660  ;2860 ;440  ;CaptionML=[ENU=New Dimension Value;
                                                              FRA=Nouvelle valeur];
                                                   SourceExpr=DimensionValueCode;
                                                   OnLookup=BEGIN
                                                              EXIT(LookupDimValue(DimensionCode,Text));
                                                            END;

                                                   OnAfterValidate=BEGIN
                                                                     IF DimensionValueCode <> '' THEN BEGIN
                                                                       IF NOT DimensionValue.GET(DimensionCode,DimensionValueCode) THEN BEGIN
                                                                         MESSAGE(Text002);
                                                                         DimensionValueCode := '';
                                                                       END;
                                                                     END;
                                                                   END;
                                                                    }
      { 1100481005;Label  ;110  ;660  ;3300 ;440  ;ParentControl=1100481004 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100481002;;Container;
                  CaptionML=[ENU=Options;
                             FRA=Options];
                  ContainerType=ContentArea }

      { 1100481000;1;Field  ;
                  CaptionML=[ENU=Dimension Code;
                             FRA=Code axe];
                  SourceExpr=DimensionCode;
                  TableRelation=Dimension }

      { 1100481001;1;Field  ;
                  CaptionML=[ENU=New Dimension Value;
                             FRA=Nouvelle valeur];
                  SourceExpr=DimensionValueCode;
                  OnValidate=BEGIN
                               IF DimensionValueCode <> '' THEN BEGIN
                                 IF NOT DimensionValue.GET(DimensionCode,DimensionValueCode) THEN BEGIN
                                   MESSAGE(Text002);
                                   DimensionValueCode := '';
                                 END;
                               END;
                             END;

                  OnLookup=BEGIN
                             EXIT(LookupDimValue(DimensionCode,Text));
                           END;
                            }

    }
  }
  CODE
  {
    VAR
      DimensionValue@1100481003 : Record 349;
      DimensionValueCode@1100481000 : Code[20];
      DimensionCode@1100481001 : Code[20];
      Text001@1100481002 : TextConst 'ENU=Select Dimension;FRA=Saisir un code axe';
      Text002@1100481004 : TextConst 'ENU=Dimension value does not exists;FRA=L''axe analytique n''existe pas';
      GLEntryEdit@1100481005 : Codeunit 8016604;

    LOCAL PROCEDURE LookupDimValue@1100481000(pDimCode@1100481001 : Code[20];VAR pText@1100481000 : Text[1024]) : Boolean;
    BEGIN
      IF pDimCode = '' THEN
        ERROR(Text001);

      DimensionValue.SETRANGE("Dimension Code", pDimCode);
      IF STRLEN(pText) <= MAXSTRLEN(DimensionValue.Code) THEN
        IF DimensionValue.GET(pDimCode, pText) THEN;
      IF FORM.RUNMODAL(0,DimensionValue) = ACTION::LookupOK THEN BEGIN
        pText := DimensionValue.Code;
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    BEGIN
    {
      /** @r IMH01 @d 06/01/11 @a ISAT.MA @v IMH6.01.040 @s Isatech+ */
    }
    END.
  }
  RDLDATA
  {
  }
}