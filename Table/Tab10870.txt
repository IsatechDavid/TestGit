OBJECT Table 10870 Payment Address
{
  OBJECT-PROPERTIES
  {
    Date=25/02/12;
    Time=15:36:57;
    Modified=Yes;
    Version List=NAVFR5.00,IMH6.01;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TouchRecord(TRUE); //IMH02.ST
             END;

    OnModify=BEGIN
               TouchRecord(FALSE); //IMH02.ST
             END;

    CaptionML=[ENU=Payment Address;
               FRA=Adresse de rŠglement];
    LookupFormID=Form10875;
    DrillDownFormID=Form10875;
  }
  FIELDS
  {
    { 1   ;   ;Account Type        ;Option        ;CaptionML=[ENU=Account Type;
                                                              FRA=Type compte];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset;
                                                                    FRA=G‚n‚ral,Client,Fournisseur,Banque,Immobilisation];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset }
    { 2   ;   ;Account No.         ;Code20        ;TableRelation=IF (Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Account Type=CONST(Vendor)) Vendor;
                                                   CaptionML=[ENU=Account No.;
                                                              FRA=Nø compte] }
    { 3   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              FRA=Code] }
    { 4   ;   ;Name                ;Text50        ;OnValidate=BEGIN
                                                                IF ("Search Name" = UPPERCASE(xRec.Name)) OR ("Search Name" = '') THEN
                                                                  "Search Name" := Name;
                                                              END;

                                                   CaptionML=[ENU=Name;
                                                              FRA=Nom] }
    { 5   ;   ;Search Name         ;Code50        ;CaptionML=[ENU=Search Name;
                                                              FRA=Nom de recherche] }
    { 6   ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              FRA=Nom 2] }
    { 7   ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              FRA=Adresse] }
    { 8   ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              FRA=Adresse (2Šme ligne)] }
    { 9   ;   ;Post Code           ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code", "Country/Region Code");         //IMH01 Ajout Code pays
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode(City,"Post Code","Country/Region Code",TRUE);      //IMH01 Ajout Code pays
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              FRA=Code postal] }
    { 10  ;   ;City                ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code","Country/Region Code");        //IMH01 Ajout Code pays
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode(City,"Post Code","Country/Region Code",TRUE);      //IMH01 Ajout Code pays
                                                            END;

                                                   CaptionML=[ENU=City;
                                                              FRA=Ville] }
    { 11  ;   ;Contact             ;Text50        ;CaptionML=[ENU=Contact;
                                                              FRA=Contact] }
    { 12  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              FRA=Code pays/r‚gion] }
    { 13  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              FRA=R‚gion] }
    { 20  ;   ;Default Value       ;Boolean       ;OnValidate=VAR
                                                                PaymentAddress@1120000 : Record 10870;
                                                              BEGIN
                                                                IF "Default Value" THEN BEGIN
                                                                  PaymentAddress.SETRANGE("Account Type", "Account Type");
                                                                  PaymentAddress.SETRANGE("Account No.", "Account No.");
                                                                  PaymentAddress.SETFILTER(Code, '<>%1', Code);
                                                                  PaymentAddress.MODIFYALL("Default Value", FALSE ,FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Default Value;
                                                              FRA=Valeur par d‚faut] }
    { 50000;  ;Address 3           ;Text50        ;CaptionML=[ENU=Address 3;
                                                              FRA=Adresse (3Šme ligne)] }
    { 50012;  ;Created From Service No.;Code20    ;TableRelation=Service;
                                                   CaptionML=[ENU=Created From Service No.;
                                                              FRA=Cr‚‚ … partir du service] }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Account Type,Account No.,Code           ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PostCode@1120000 : Record 225;

    PROCEDURE TouchRecord@1100281006(pInsert@1100281000 : Boolean);
    BEGIN
      //IMH02.ST
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;
      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    BEGIN
    {
      /** @r IMH02 @d 25/02/12 @a ISAT.ST @v IMH6.01.146 @s Comptabilit‚ @c Adresse de rŠglement
          @c Ajout champ 50000 Address 3
          @c Ajout champ 50012 "Created From Service No."
          @c Ajout champs de suivi modifications */
      /** @r IHM01 @d 10/02/11 @a ISAT.ZW @v IMH6.01.001 @s Normalisation des donn‚es
          @c Associer les Pays au code postaux - descendre le code pays automatiquement*/
    }
    END.
  }
}