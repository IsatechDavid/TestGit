OBJECT Table 112 Sales Invoice Header
{
  OBJECT-PROPERTIES
  {
    Date=18/03/13;
    Time=11:30:14;
    Modified=Yes;
    Version List=NAVW16.00.10,ISA6.00,IMH6.01;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Sell-to Customer Name;
    OnDelete=BEGIN
               TESTFIELD("No. Printed");
               LOCKTABLE;
               PostSalesLinesDelete.DeleteSalesInvLines(Rec);

               SalesCommentLine.SETRANGE("Document Type",SalesCommentLine."Document Type"::"Posted Invoice");
               SalesCommentLine.SETRANGE("No.","No.");
               SalesCommentLine.DELETEALL;

               DimMgt.DeletePostedDocDim(DATABASE::"Sales Invoice Header","No.",0);

               ApprovalsMgt.DeletePostedApprovalEntry(DATABASE::"Sales Invoice Header","No.");
             END;

    CaptionML=[ENU=Sales Invoice Header;
               FRA=En-tˆte facture vente];
    LookupFormID=Form143;
    DrillDownFormID=Form143;
  }
  FIELDS
  {
    { 2   ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Sell-to Customer No.;
                                                              FRA=Nø donneur d'ordre];
                                                   NotBlank=Yes }
    { 3   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              FRA=Nø] }
    { 4   ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              FRA=Nø client factur‚];
                                                   NotBlank=Yes }
    { 5   ;   ;Bill-to Name        ;Text50        ;CaptionML=[ENU=Bill-to Name;
                                                              FRA=Nom] }
    { 6   ;   ;Bill-to Name 2      ;Text50        ;CaptionML=[ENU=Bill-to Name 2;
                                                              FRA=Nom 2] }
    { 7   ;   ;Bill-to Address     ;Text50        ;CaptionML=[ENU=Bill-to Address;
                                                              FRA=Adresse] }
    { 8   ;   ;Bill-to Address 2   ;Text50        ;CaptionML=[ENU=Bill-to Address 2;
                                                              FRA=Adresse (2Šme ligne)] }
    { 9   ;   ;Bill-to City        ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity("Bill-to City","Bill-to Post Code", "Bill-to Country/Region Code");      //IMH01 Ajout Code pays
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity("Bill-to City","Bill-to Post Code","Bill-to Country/Region Code",FALSE);  //IMH01 Ajout Code pays
                                                            END;

                                                   CaptionML=[ENU=Bill-to City;
                                                              FRA=Ville] }
    { 10  ;   ;Bill-to Contact     ;Text50        ;CaptionML=[ENU=Bill-to Contact;
                                                              FRA=Contact] }
    { 11  ;   ;Your Reference      ;Text30        ;CaptionML=[ENU=Your Reference;
                                                              FRA=Votre r‚f‚rence] }
    { 12  ;   ;Ship-to Code        ;Code10        ;TableRelation="Ship-to Address".Code WHERE (Customer No.=FIELD(Sell-to Customer No.));
                                                   CaptionML=[ENU=Ship-to Code;
                                                              FRA=Code destinataire] }
    { 13  ;   ;Ship-to Name        ;Text50        ;CaptionML=[ENU=Ship-to Name;
                                                              FRA=Nom du destinataire] }
    { 14  ;   ;Ship-to Name 2      ;Text50        ;CaptionML=[ENU=Ship-to Name 2;
                                                              FRA=Nom du destinataire 2] }
    { 15  ;   ;Ship-to Address     ;Text50        ;CaptionML=[ENU=Ship-to Address;
                                                              FRA=Adresse destinataire] }
    { 16  ;   ;Ship-to Address 2   ;Text50        ;CaptionML=[ENU=Ship-to Address 2;
                                                              FRA=Adresse destinataire 2] }
    { 17  ;   ;Ship-to City        ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity("Ship-to City","Ship-to Post Code","Ship-to Country/Region Code");       //IMH01 Ajout Code pays
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity("Ship-to City","Ship-to Post Code","Ship-to Country/Region Code",FALSE);   //IMH01 Ajout Code pays
                                                            END;

                                                   CaptionML=[ENU=Ship-to City;
                                                              FRA=Ville destinataire] }
    { 18  ;   ;Ship-to Contact     ;Text50        ;CaptionML=[ENU=Ship-to Contact;
                                                              FRA=Contact destinataire] }
    { 19  ;   ;Order Date          ;Date          ;CaptionML=[ENU=Order Date;
                                                              FRA=Date commande] }
    { 20  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              FRA=Date comptabilisation] }
    { 21  ;   ;Shipment Date       ;Date          ;CaptionML=[ENU=Shipment Date;
                                                              FRA=Date de pr‚paration] }
    { 22  ;   ;Posting Description ;Text50        ;CaptionML=[ENU=Posting Description;
                                                              FRA=Libell‚ ‚criture] }
    { 23  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   CaptionML=[ENU=Payment Terms Code;
                                                              FRA=Code condition paiement] }
    { 24  ;   ;Due Date            ;Date          ;CaptionML=[ENU=Due Date;
                                                              FRA=Date d'‚ch‚ance] }
    { 25  ;   ;Payment Discount %  ;Decimal       ;CaptionML=[ENU=Payment Discount %;
                                                              FRA=% escompte];
                                                   DecimalPlaces=0:5 }
    { 26  ;   ;Pmt. Discount Date  ;Date          ;CaptionML=[ENU=Pmt. Discount Date;
                                                              FRA=Date d'escompte] }
    { 27  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              FRA=Code condition livraison] }
    { 28  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              FRA=Code magasin] }
    { 29  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              FRA=Code raccourci axe 1];
                                                   CaptionClass='1,2,1' }
    { 30  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              FRA=Code raccourci axe 2];
                                                   CaptionClass='1,2,2' }
    { 31  ;   ;Customer Posting Group;Code10      ;TableRelation="Customer Posting Group";
                                                   CaptionML=[ENU=Customer Posting Group;
                                                              FRA=Groupe compta. client];
                                                   Editable=No }
    { 32  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              FRA=Code devise];
                                                   Editable=No }
    { 33  ;   ;Currency Factor     ;Decimal       ;CaptionML=[ENU=Currency Factor;
                                                              FRA=Facteur devise];
                                                   DecimalPlaces=0:15;
                                                   MinValue=0 }
    { 34  ;   ;Customer Price Group;Code10        ;TableRelation="Customer Price Group";
                                                   CaptionML=[ENU=Customer Price Group;
                                                              FRA=Groupe prix client] }
    { 35  ;   ;Prices Including VAT;Boolean       ;CaptionML=[ENU=Prices Including VAT;
                                                              FRA=Prix TTC] }
    { 37  ;   ;Invoice Disc. Code  ;Code20        ;CaptionML=[ENU=Invoice Disc. Code;
                                                              FRA=Code remise facture] }
    { 40  ;   ;Customer Disc. Group;Code10        ;TableRelation="Customer Discount Group";
                                                   CaptionML=[ENU=Customer Disc. Group;
                                                              FRA=Groupe rem. client] }
    { 41  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              FRA=Code langue] }
    { 43  ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Salesperson Code;
                                                              FRA=Code vendeur] }
    { 44  ;   ;Order No.           ;Code20        ;CaptionML=[ENU=Order No.;
                                                              FRA=Nø commande] }
    { 46  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Sales Comment Line" WHERE (Document Type=CONST(Posted Invoice),
                                                                                                 No.=FIELD(No.),
                                                                                                 Document Line No.=CONST(0)));
                                                   CaptionML=[ENU=Comment;
                                                              FRA=Commentaires];
                                                   Editable=No }
    { 47  ;   ;No. Printed         ;Integer       ;CaptionML=[ENU=No. Printed;
                                                              FRA=Nbre impressions];
                                                   Editable=No }
    { 51  ;   ;On Hold             ;Code3         ;CaptionML=[ENU=On Hold;
                                                              FRA=En attente] }
    { 52  ;   ;Applies-to Doc. Type;Option        ;CaptionML=[ENU=Applies-to Doc. Type;
                                                              FRA=Type doc. lettrage];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    FRA=" ,Paiement,Facture,Avoir,Int‚rˆts,Relance,Remboursement"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 53  ;   ;Applies-to Doc. No. ;Code20        ;OnLookup=BEGIN
                                                              CustLedgEntry.SETCURRENTKEY("Document No.");
                                                              CustLedgEntry.SETRANGE("Document Type","Applies-to Doc. Type");
                                                              CustLedgEntry.SETRANGE("Document No.","Applies-to Doc. No.");
                                                              FORM.RUN(0,CustLedgEntry);
                                                            END;

                                                   CaptionML=[ENU=Applies-to Doc. No.;
                                                              FRA=Nø doc. lettrage] }
    { 55  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account";
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              FRA=Nø compte contrepartie] }
    { 60  ;   ;Amount              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Invoice Line".Amount WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=[ENU=Amount;
                                                              FRA=Montant];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 61  ;   ;Amount Including VAT;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Invoice Line"."Amount Including VAT" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=[ENU=Amount Including VAT;
                                                              FRA=Montant TTC];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 70  ;   ;VAT Registration No.;Text20        ;CaptionML=[ENU=VAT Registration No.;
                                                              FRA=Nø identif. intracomm.] }
    { 73  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              FRA=Code motif] }
    { 74  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              FRA=Groupe compta. march‚] }
    { 75  ;   ;EU 3-Party Trade    ;Boolean       ;CaptionML=[ENU=EU 3-Party Trade;
                                                              FRA=Trans. tripartite UE] }
    { 76  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=[ENU=Transaction Type;
                                                              FRA=Nature transaction] }
    { 77  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=[ENU=Transport Method;
                                                              FRA=Mode de transport] }
    { 78  ;   ;VAT Country/Region Code;Code10     ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=VAT Country/Region Code;
                                                              FRA=Code pays/r‚gion TVA] }
    { 79  ;   ;Sell-to Customer Name;Text50       ;CaptionML=[ENU=Sell-to Customer Name;
                                                              FRA=Nom du donneur d'ordre] }
    { 80  ;   ;Sell-to Customer Name 2;Text50     ;CaptionML=[ENU=Sell-to Customer Name 2;
                                                              FRA=Nom du donneur d'ordre 2] }
    { 81  ;   ;Sell-to Address     ;Text50        ;CaptionML=[ENU=Sell-to Address;
                                                              FRA=Adresse donneur d'ordre] }
    { 82  ;   ;Sell-to Address 2   ;Text50        ;CaptionML=[ENU=Sell-to Address 2;
                                                              FRA=Adresse donneur d'ordre 2] }
    { 83  ;   ;Sell-to City        ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity("Sell-to City","Sell-to Post Code","Sell-to Country/Region Code");        //IMH01 Ajout Code pays
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity("Sell-to City","Sell-to Post Code","Sell-to Country/Region Code",FALSE);   //IMH01 Ajout Code pays
                                                            END;

                                                   CaptionML=[ENU=Sell-to City;
                                                              FRA=Ville donneur d'ordre] }
    { 84  ;   ;Sell-to Contact     ;Text50        ;CaptionML=[ENU=Sell-to Contact;
                                                              FRA=Contact donneur d'ordre] }
    { 85  ;   ;Bill-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode("Bill-to City","Bill-to Post Code","Bill-to Country/Region Code");     //IMH01 Ajout Code pays
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode("Bill-to City","Bill-to Post Code","Bill-to Country/Region Code", FALSE);  //IMH01 Ajout Code pays
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Bill-to Post Code;
                                                              FRA=Code postal] }
    { 86  ;   ;Bill-to County      ;Text30        ;CaptionML=[ENU=Bill-to County;
                                                              FRA=R‚gion] }
    { 87  ;   ;Bill-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Bill-to Country/Region Code;
                                                              FRA=Code pays/r‚gion facturation] }
    { 88  ;   ;Sell-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode("Sell-to City","Sell-to Post Code","Sell-to Country/Region Code");      //IMH01 Ajout Code pays
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode("Sell-to City","Sell-to Post Code","Sell-to Country/Region Code",FALSE); //IMH01 Ajout Code pays
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Sell-to Post Code;
                                                              FRA=Code postal donneur d'ordre] }
    { 89  ;   ;Sell-to County      ;Text30        ;CaptionML=[ENU=Sell-to County;
                                                              FRA=R‚gion donneur d'ordre] }
    { 90  ;   ;Sell-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Sell-to Country/Region Code;
                                                              FRA=Code pays/r‚gion donneur d'ordre] }
    { 91  ;   ;Ship-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode("Ship-to City","Ship-to Post Code","Ship-to Country/Region Code");     //IMH01 Ajout Code pays
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode("Ship-to City","Ship-to Post Code","Ship-to Country/Region Code",FALSE); //IMH01 Ajout Code pays
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Ship-to Post Code;
                                                              FRA=Code postal destinataire] }
    { 92  ;   ;Ship-to County      ;Text30        ;CaptionML=[ENU=Ship-to County;
                                                              FRA=R‚gion destinataire] }
    { 93  ;   ;Ship-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Ship-to Country/Region Code;
                                                              FRA=Code pays/r‚gion destinataire] }
    { 94  ;   ;Bal. Account Type   ;Option        ;CaptionML=[ENU=Bal. Account Type;
                                                              FRA=Type compte contrepartie];
                                                   OptionCaptionML=[ENU=G/L Account,Bank Account;
                                                                    FRA=G‚n‚ral,Banque];
                                                   OptionString=G/L Account,Bank Account }
    { 97  ;   ;Exit Point          ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=[ENU=Exit Point;
                                                              FRA=Pays destination] }
    { 98  ;   ;Correction          ;Boolean       ;CaptionML=[ENU=Correction;
                                                              FRA=Correction] }
    { 99  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              FRA=Date document] }
    { 100 ;   ;External Document No.;Code20       ;CaptionML=[ENU=External Document No.;
                                                              FRA=Nø doc. externe] }
    { 101 ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=[ENU=Area;
                                                              FRA=D‚pt destination/provenance] }
    { 102 ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=[ENU=Transaction Specification;
                                                              FRA=R‚gime] }
    { 104 ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   CaptionML=[ENU=Payment Method Code;
                                                              FRA=Code mode de rŠglement] }
    { 105 ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent";
                                                   CaptionML=[ENU=Shipping Agent Code;
                                                              FRA=Code transporteur] }
    { 106 ;   ;Package Tracking No.;Text30        ;CaptionML=[ENU=Package Tracking No.;
                                                              FRA=Nø r‚c‚piss‚] }
    { 107 ;   ;Pre-Assigned No. Series;Code10     ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Pre-Assigned No. Series;
                                                              FRA=Souche de nø pr‚-attribu‚s] }
    { 108 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              FRA=Souches de nø];
                                                   Editable=No }
    { 110 ;   ;Order No. Series    ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Order No. Series;
                                                              FRA=Souche de nø commande] }
    { 111 ;   ;Pre-Assigned No.    ;Code20        ;CaptionML=[ENU=Pre-Assigned No.;
                                                              FRA=Nø pr‚-attribu‚s] }
    { 112 ;   ;User ID             ;Code20        ;TableRelation=User;
                                                   OnLookup=VAR
                                                              LoginMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              LoginMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              FRA=Code utilisateur] }
    { 113 ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              FRA=Code journal] }
    { 114 ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              FRA=Code zone recouvrement] }
    { 115 ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              FRA=Soumis … recouvrement] }
    { 116 ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              FRA=Groupe compta. march‚ TVA] }
    { 119 ;   ;VAT Base Discount % ;Decimal       ;CaptionML=[ENU=VAT Base Discount %;
                                                              FRA=% remise base TVA];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 131 ;   ;Prepayment No. Series;Code10       ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Prepayment No. Series;
                                                              FRA=Nø de s‚rie acompte] }
    { 136 ;   ;Prepayment Invoice  ;Boolean       ;CaptionML=[ENU=Prepayment Invoice;
                                                              FRA=Facture acompte] }
    { 137 ;   ;Prepayment Order No.;Code20        ;CaptionML=[ENU=Prepayment Order No.;
                                                              FRA=Nø ordre acompte] }
    { 151 ;   ;Quote No.           ;Code20        ;CaptionML=[ENU=Quote No.;
                                                              FRA=Nø devis];
                                                   Editable=No }
    { 827 ;   ;Credit Card No.     ;Code20        ;TableRelation="DO Payment Credit Card" WHERE (Customer No.=FIELD(Bill-to Customer No.));
                                                   CaptionML=[ENU=Credit Card No.;
                                                              FRA=Nø de carte de cr‚dit] }
    { 5050;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   CaptionML=[ENU=Campaign No.;
                                                              FRA=Nø campagne] }
    { 5052;   ;Sell-to Contact No. ;Code20        ;TableRelation=Contact;
                                                   CaptionML=[ENU=Sell-to Contact No.;
                                                              FRA=Nø contact donneur d'ordre] }
    { 5053;   ;Bill-to Contact No. ;Code20        ;TableRelation=Contact;
                                                   CaptionML=[ENU=Bill-to Contact No.;
                                                              FRA=Nø contact] }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=[ENU=Responsibility Center;
                                                              FRA=Centre de gestion] }
    { 5900;   ;Service Mgt. Document;Boolean      ;CaptionML=[ENU=Service Mgt. Document;
                                                              FRA=Document de gestion des services] }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;CaptionML=[ENU=Allow Line Disc.;
                                                              FRA=Autoriser remise ligne] }
    { 7200;   ;Get Shipment Used   ;Boolean       ;CaptionML=[ENU=Get Shipment Used;
                                                              FRA=Extraire le mode d'exp‚dition utilis‚] }
    { 50001;  ;Service No.         ;Code20        ;TableRelation=Service;
                                                   CaptionML=[ENU=Service No.;
                                                              FRA=Nø service] }
    { 50002;  ;Corporate No.       ;Code20        ;TableRelation=Customer.No. WHERE (Service Contact=CONST(Corporate Customer));
                                                   CaptionML=[ENU=Corporate No.;
                                                              FRA=Nø grand compte] }
    { 50003;  ;Corporate Region Code;Code10       ;TableRelation="Corporate Region"."Region Code";
                                                   CaptionML=[ENU=Corporate Region Code;
                                                              FRA=Code r‚gion grand compte] }
    { 50004;  ;Service Order Type  ;Code10        ;TableRelation="Service Order Type".Code;
                                                   CaptionML=[ENU=Service Order Type;
                                                              FRA=Type produit] }
    { 50006;  ;Inv. Matrix Entry No.;Integer       }
    { 50007;  ;Service Header No.  ;Code20        ;TableRelation="Service Header".No. WHERE (Document Type=CONST(Invoice),
                                                                                             Service No.=FIELD(Service No.));
                                                   CaptionML=[ENU=Service Header No.;
                                                              FRA=Nø ligne produit] }
    { 50008;  ;Intervention Line No.;Integer      ;TableRelation="Service Intervention Line"."Line No." WHERE (Service Header No.=FIELD(No.));
                                                   CaptionML=[ENU=Intervention Line No.;
                                                              FRA=Nø ligne intervention] }
    { 50009;  ;Quote Line No.      ;Integer       ;TableRelation="Service Intervention Quote"."Line No." WHERE (Service Header No.=FIELD(Service Header No.),
                                                                                                                Intervention Line No.=FIELD(Intervention Line No.));
                                                   CaptionML=[ENU=Quote Line No.;
                                                              FRA=Nø ligne devis] }
    { 50010;  ;IMH Service No.     ;Code20        ;CaptionML=[ENU=IMH Service No.;
                                                              FRA=Nø du service d'origine IMH] }
    { 50011;  ;IMH Service Header No.;Code20      ;CaptionML=[ENU=IMH Service Header No.;
                                                              FRA=Nø de la ligne de produit] }
    { 50012;  ;IMH Intervention Line No.;Integer  ;CaptionML=[ENU=IMH Intervention Line No.;
                                                              FRA=Nø de ligne d'intervention d'origine IMH] }
    { 50013;  ;EAI Message Entry No.;Code20       ;CaptionML=[ENU=EAI Message Entry No.;
                                                              FRA=Nø du flux EAI] }
    { 50014;  ;Canceled            ;Boolean       ;CaptionML=[ENU=Canceled;
                                                              FRA=Annul‚e] }
    { 56010;  ;Fusion Document No. ;Code30        ;TableRelation="Fusion Invoicing Doc. Head"."Fusion Document No.";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Fusion Document No.;
                                                              FRA=Nø document Fusion] }
    { 60500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 60501;  ;Creation User ID    ;Text30        ;CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 60502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 60503;  ;Last Modification User ID;Text30   ;ValidateTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
    { 8016602;;Draft generate      ;Boolean       ;CaptionML=[ENU=Draft generate;
                                                              FRA=Effet g‚n‚r‚];
                                                   Description=ISA5.00.00.00 si oui l'effet a d‚j… ‚t‚ g‚n‚r‚ dans la table 10865 en etat initial.(t112) }
    { 99008509;;Date Sent          ;Date          ;CaptionML=[ENU=Date Sent;
                                                              FRA=Date d'envoi] }
    { 99008510;;Time Sent          ;Time          ;CaptionML=[ENU=Time Sent;
                                                              FRA=Heure d'envoi] }
    { 99008516;;BizTalk Sales Invoice;Boolean     ;CaptionML=[ENU=BizTalk Sales Invoice;
                                                              FRA=Facture vente BizTalk] }
    { 99008519;;Customer Order No. ;Code20        ;CaptionML=[ENU=Customer Order No.;
                                                              FRA=Nø commande client] }
    { 99008521;;BizTalk Document Sent;Boolean     ;CaptionML=[ENU=BizTalk Document Sent;
                                                              FRA=Document BizTalk envoy‚] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Order No.                                }
    {    ;Pre-Assigned No.                         }
    {    ;Sell-to Customer No.,External Document No. }
    {    ;Sell-to Customer No.,Order Date          }
    {    ;Sell-to Customer No.,No.                 }
    {    ;Prepayment Order No.,Prepayment Invoice ;KeyGroups=PrePmt }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Sell-to Customer No.,Bill-to Customer No.,Posting Date,Posting Description }
  }
  CODE
  {
    VAR
      SalesInvHeader@1000 : Record 112;
      SalesCommentLine@1001 : Record 44;
      CustLedgEntry@1003 : Record 21;
      PostCode@1007 : Record 225;
      PostSalesLinesDelete@1004 : Codeunit 363;
      DimMgt@1005 : Codeunit 408;
      ApprovalsMgt@1008 : Codeunit 439;

    PROCEDURE PrintRecords@1(ShowRequestForm@1000 : Boolean);
    VAR
      ReportSelection@1001 : Record 77;
    BEGIN
      WITH SalesInvHeader DO BEGIN
        COPY(Rec);
        FIND('-');
        ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"S.Invoice");
        ReportSelection.SETFILTER("Report ID",'<>0');
        ReportSelection.FIND('-');
        REPEAT
          REPORT.RUNMODAL(ReportSelection."Report ID",ShowRequestForm,FALSE,SalesInvHeader);
        UNTIL ReportSelection.NEXT = 0;
      END;
    END;

    PROCEDURE Navigate@2();
    VAR
      NavigateForm@1000 : Form 344;
    BEGIN
      NavigateForm.SetDoc("Posting Date","No.");
      NavigateForm.RUN;
    END;

    PROCEDURE GetCreditcardNumber@52() : Text[20];
    VAR
      paymentCreditCard@1001 : Record 827;
    BEGIN
      IF "Credit Card No." = '' THEN
        EXIT('');
      EXIT(paymentCreditCard.GetCreditCardNumber("Credit Card No."));
    END;

    PROCEDURE LookupAdjmtValueEntries@3();
    VAR
      ValueEntry@1000 : Record 5802;
    BEGIN
      ValueEntry.SETCURRENTKEY("Document No.");
      ValueEntry.SETRANGE("Document No.","No.");
      ValueEntry.SETRANGE("Document Type",ValueEntry."Document Type"::"Sales Invoice");
      ValueEntry.SETRANGE(Adjustment,TRUE);
      FORM.RUNMODAL(0,ValueEntry);
    END;

    PROCEDURE GroupLines@1100281000(VAR TempLine@1100281001 : TEMPORARY Record 113);
    VAR
      lSalesInvLine@1100281000 : Record 113;
    BEGIN
      //<<IMH03.ISAT.EBA
      TempLine.RESET;
      TempLine.DELETEALL;

      WITH TempLine DO BEGIN
        lSalesInvLine.SETRANGE("Document No.",Rec."No.");
        lSalesInvLine.SETFILTER(Type,'<>%1',lSalesInvLine.Type::" ");
        IF lSalesInvLine.FINDSET THEN BEGIN
          REPEAT
            SETRANGE(Type,lSalesInvLine.Type);
            SETRANGE("No.",lSalesInvLine."No.");
            SETRANGE("Unit of Measure Code",lSalesInvLine."Unit of Measure Code");
            IF FINDFIRST THEN BEGIN
              Quantity := Quantity + lSalesInvLine.Quantity;
              "Quantity (Base)" := "Quantity (Base)" + lSalesInvLine."Quantity (Base)";
              Amount := Rec.Amount + lSalesInvLine.Amount;
              "Amount Including VAT" := "Amount Including VAT" + lSalesInvLine."Amount Including VAT";
              "Line Discount Amount" := "Line Discount Amount" + lSalesInvLine."Line Discount Amount";
              "Line Amount" := "Line Amount" + lSalesInvLine."Line Amount";
              "Unit Price" := ("Line Discount Amount" + "Line Amount") / Quantity;
              MODIFY;
            END ELSE BEGIN
              TempLine := lSalesInvLine;
              TempLine.INSERT;
            END;
          UNTIL lSalesInvLine.NEXT = 0;

          RESET;
          FINDFIRST;
        END;
      END;
      //>>IMH03.ISAT.EBA
    END;

    PROCEDURE IsGroupedLines@1100281001() : Boolean;
    VAR
      lInvMatrixSetup@1100281000 : Record 50137;
      lGroupedLines@1100281001 : Boolean;
    BEGIN
      //<<IMH03.ISAT.EBA
      lGroupedLines := FALSE;
      IF ("Corporate No." <> '') OR ("Service Order Type" <> '') OR ("Corporate Region Code" <> '') THEN BEGIN
         lInvMatrixSetup.SETRANGE("Corporate No.","Corporate No.");
         lInvMatrixSetup.SETRANGE("Service Order Type","Service Order Type");
         lInvMatrixSetup.SETRANGE("Corporate Region Code","Corporate Region Code");
         IF lInvMatrixSetup.FINDFIRST THEN
           lGroupedLines := lInvMatrixSetup."Edit Line Regroup Method" = lInvMatrixSetup."Edit Line Regroup Method"::Cumulative;
      END;
      EXIT(lGroupedLines);
      //>>IMH03.ISAT.EBA
    END;

    BEGIN
    {
      /** @r IMH06 @d 22/02/13 @a ISAT.PC @v IMH6.01.340 @s NEP IMH 4 @h 4171
          @c ajout champ 50006, Inv. Matrix Setup Entry No. */
      /** @r IMH05 @d 29/11/12 @a ISAT.ZW @v IMH6.01.220 @s Projet Facturation Fusion
          @c Ajout champ 56010 Fusion Document No. */
      /** @r IMH04 @d 11/01/12 @a ISAT.PC @v IMH6.01.146 @s Rapprochement
          @c ajout champ 60500, Creation Date
          @c ajout champ 60501, Creation User ID
          @c ajout champ 60502, Last Modification Date
          @c ajout champ 60503, Last Modification User ID */
      /** @r IMH03 @d 25/06/11 @a ISAT.EBA @v IMH6.01.146 @s Regroupement visuelle des factures
          @c Ajout de fonction "GroupLines"
          @c Ajout de fonction "IsGroupedLines" */
      /** @r IMH02 @d 14/03/11 @a ISAT.LLT @v IMH6.01.146 @s Gestion facturation
          @c Ajout champ 50001 Service No.
          @c Ajout champ 50002 Corporate No.
          @c Ajout champ 50003 Corporate Region Code
          @c Ajout champ 50007 Service Header No.
          @c Ajout champ 50008 Intervention Line No.
          @c Ajout champ 50009 Quote Line No.*/
      /** @r IHM01 @d 10/02/11 @a ISAT.ZW @v IMH6.01.001 @s Normalisation des donn‚es
          @c Associer les Pays au code postaux - descendre le code pays automatiquement*/
      /**@r ISA01 @d 06/07/09 @a ISAT.ST @v ISA6.00.00.01 @s migration ISATECH +
         @c Ajout effet genere */
    }
    END.
  }
}