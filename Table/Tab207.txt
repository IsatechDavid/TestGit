OBJECT Table 207 Res. Journal Line
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               LOCKTABLE;
               ResJnlTemplate.GET("Journal Template Name");
               ResJnlBatch.GET("Journal Template Name","Journal Batch Name");

               ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
               ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
               DimMgt.InsertJnlLineDim(
                 DATABASE::"Res. Journal Line",
                 "Journal Template Name","Journal Batch Name","Line No.",0,
                 "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
             END;

    OnDelete=BEGIN
               DimMgt.DeleteJnlLineDim(
                 DATABASE::"Res. Journal Line",
                 "Journal Template Name","Journal Batch Name","Line No.",0);
             END;

    CaptionML=[ENU=Res. Journal Line;
               FRA=Ligne feuille ressource];
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;TableRelation="Res. Journal Template";
                                                   CaptionML=[ENU=Journal Template Name;
                                                              FRA=Nom modŠle feuille] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              FRA=Nø ligne] }
    { 3   ;   ;Entry Type          ;Option        ;CaptionML=[ENU=Entry Type;
                                                              FRA=Type ‚criture];
                                                   OptionCaptionML=[ENU=Usage,Sale;
                                                                    FRA=Activit‚,Vente];
                                                   OptionString=Usage,Sale }
    { 4   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              FRA=Nø document] }
    { 5   ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                VALIDATE("Document Date","Posting Date");
                                                              END;

                                                   CaptionML=[ENU=Posting Date;
                                                              FRA=Date comptabilisation] }
    { 6   ;   ;Resource No.        ;Code20        ;TableRelation=Resource;
                                                   OnValidate=BEGIN
                                                                IF "Resource No." = '' THEN BEGIN
                                                                  CreateDim(
                                                                    DATABASE::Resource,"Resource No.",
                                                                    DATABASE::"Resource Group","Resource Group No.",
                                                                    DATABASE::Job,"Job No.");
                                                                  EXIT;
                                                                END;

                                                                Res.GET("Resource No.");
                                                                Res.TESTFIELD(Blocked,FALSE);
                                                                Description := Res.Name;
                                                                "Direct Unit Cost" := Res."Direct Unit Cost";
                                                                "Unit Cost" := Res."Unit Cost";
                                                                "Unit Price" := Res."Unit Price";
                                                                "Resource Group No." := Res."Resource Group No.";
                                                                "Work Type Code" := '';
                                                                "Gen. Prod. Posting Group" := Res."Gen. Prod. Posting Group";
                                                                VALIDATE("Unit of Measure Code",Res."Base Unit of Measure");

                                                                CreateDim(
                                                                  DATABASE::Resource,"Resource No.",
                                                                  DATABASE::"Resource Group","Resource Group No.",
                                                                  DATABASE::Job,"Job No.");
                                                              END;

                                                   CaptionML=[ENU=Resource No.;
                                                              FRA=Nø ressource] }
    { 7   ;   ;Resource Group No.  ;Code20        ;TableRelation="Resource Group";
                                                   OnValidate=BEGIN
                                                                CreateDim(
                                                                  DATABASE::"Resource Group","Resource Group No.",
                                                                  DATABASE::Resource,"Resource No.",
                                                                  DATABASE::Job,"Job No.");
                                                              END;

                                                   CaptionML=[ENU=Resource Group No.;
                                                              FRA=Nø groupe ressources];
                                                   Editable=No }
    { 8   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              FRA=D‚signation] }
    { 9   ;   ;Work Type Code      ;Code10        ;TableRelation="Work Type";
                                                   OnValidate=BEGIN
                                                                IF "Resource No." <> '' THEN BEGIN
                                                                  IF WorkType.GET("Work Type Code") THEN
                                                                    "Unit of Measure Code" := WorkType."Unit of Measure Code"
                                                                  ELSE BEGIN
                                                                    Res.GET("Resource No.");
                                                                    "Unit of Measure Code" := Res."Base Unit of Measure";
                                                                  END;
                                                                  FindResUnitCost;
                                                                  FindResPrice;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Work Type Code;
                                                              FRA=Code type travail] }
    { 10  ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   OnValidate=BEGIN
                                                                FindResPrice;

                                                                CreateDim(
                                                                  DATABASE::Job,"Job No.",
                                                                  DATABASE::Resource,"Resource No.",
                                                                  DATABASE::"Resource Group","Resource Group No.");
                                                              END;

                                                   CaptionML=[ENU=Job No.;
                                                              FRA=Nø projet] }
    { 11  ;   ;Unit of Measure Code;Code10        ;TableRelation="Resource Unit of Measure".Code WHERE (Resource No.=FIELD(Resource No.));
                                                   OnValidate=VAR
                                                                ResUnitofMeasure@1000 : Record 205;
                                                              BEGIN
                                                                IF CurrFieldNo <> FIELDNO("Work Type Code") THEN
                                                                  TESTFIELD("Work Type Code",'');

                                                                IF "Unit of Measure Code" = '' THEN BEGIN
                                                                  Res.GET("Resource No.");
                                                                  "Unit of Measure Code" := Res."Base Unit of Measure"
                                                                END;
                                                                ResUnitofMeasure.GET("Resource No.","Unit of Measure Code");
                                                                "Qty. per Unit of Measure" := ResUnitofMeasure."Qty. per Unit of Measure";

                                                                FindResUnitCost;
                                                                FindResPrice;

                                                                VALIDATE(Quantity);
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              FRA=Code unit‚] }
    { 12  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Unit Cost");
                                                                VALIDATE("Unit Price");
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              FRA=Quantit‚];
                                                   DecimalPlaces=0:5 }
    { 13  ;   ;Direct Unit Cost    ;Decimal       ;CaptionML=[ENU=Direct Unit Cost;
                                                              FRA=Co–t unitaire direct];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 14  ;   ;Unit Cost           ;Decimal       ;OnValidate=BEGIN
                                                                "Total Cost" := Quantity * "Unit Cost";
                                                              END;

                                                   CaptionML=[ENU=Unit Cost;
                                                              FRA=Co–t unitaire];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 15  ;   ;Total Cost          ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Quantity);
                                                                GetGLSetup;
                                                                "Unit Cost" := ROUND("Total Cost" / Quantity,GLSetup."Unit-Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Total Cost;
                                                              FRA=Co–t total];
                                                   AutoFormatType=1 }
    { 16  ;   ;Unit Price          ;Decimal       ;OnValidate=BEGIN
                                                                "Total Price" := Quantity * "Unit Price";
                                                              END;

                                                   CaptionML=[ENU=Unit Price;
                                                              FRA=Prix unitaire];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 17  ;   ;Total Price         ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Quantity);
                                                                GetGLSetup;
                                                                "Unit Price" := ROUND("Total Price" / Quantity,GLSetup."Unit-Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Total Price;
                                                              FRA=Prix total];
                                                   AutoFormatType=1 }
    { 18  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              FRA=Code raccourci axe 1];
                                                   CaptionClass='1,2,1' }
    { 19  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              FRA=Code raccourci axe 2];
                                                   CaptionClass='1,2,2' }
    { 21  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              FRA=Code journal];
                                                   Editable=No }
    { 22  ;   ;Chargeable          ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Chargeable;
                                                              FRA=Facturable] }
    { 23  ;   ;Journal Batch Name  ;Code10        ;TableRelation="Res. Journal Batch".Name WHERE (Journal Template Name=FIELD(Journal Template Name));
                                                   CaptionML=[ENU=Journal Batch Name;
                                                              FRA=Nom feuille] }
    { 24  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              FRA=Code motif] }
    { 25  ;   ;Recurring Method    ;Option        ;CaptionML=[ENU=Recurring Method;
                                                              FRA=Mode abonnement];
                                                   OptionCaptionML=[ENU=,Fixed,Variable;
                                                                    FRA=,Fixe,Variable];
                                                   OptionString=,Fixed,Variable;
                                                   BlankZero=Yes }
    { 26  ;   ;Expiration Date     ;Date          ;CaptionML=[ENU=Expiration Date;
                                                              FRA=Date d'expiration] }
    { 27  ;   ;Recurring Frequency ;DateFormula   ;CaptionML=[ENU=Recurring Frequency;
                                                              FRA=P‚riodicit‚ abonnement] }
    { 28  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              FRA=Groupe compta. march‚] }
    { 29  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              FRA=Groupe compta. produit] }
    { 30  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              FRA=Date document] }
    { 31  ;   ;External Document No.;Code20       ;CaptionML=[ENU=External Document No.;
                                                              FRA=Nø doc. externe] }
    { 32  ;   ;Posting No. Series  ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Posting No. Series;
                                                              FRA=Souches de nø validation] }
    { 33  ;   ;Source Type         ;Option        ;CaptionML=[ENU=Source Type;
                                                              FRA=Type origine];
                                                   OptionCaptionML=[ENU=" ,Customer";
                                                                    FRA=" ,Client"];
                                                   OptionString=[ ,Customer] }
    { 34  ;   ;Source No.          ;Code20        ;TableRelation=IF (Source Type=CONST(Customer)) Customer.No.;
                                                   CaptionML=[ENU=Source No.;
                                                              FRA=Nø origine] }
    { 35  ;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=[ENU=Qty. per Unit of Measure;
                                                              FRA=Quantit‚ par unit‚] }
  }
  KEYS
  {
    {    ;Journal Template Name,Journal Batch Name,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ResJnlTemplate@1000 : Record 206;
      ResJnlBatch@1001 : Record 236;
      ResJnlLine@1002 : Record 207;
      Res@1003 : Record 156;
      ResCost@1004 : Record 202;
      ResPrice@1005 : Record 201;
      WorkType@1006 : Record 200;
      GLSetup@1012 : Record 98;
      ResFindUnitCost@1007 : Codeunit 220;
      ResFindUnitPrice@1008 : Codeunit 221;
      NoSeriesMgt@1009 : Codeunit 396;
      DimMgt@1010 : Codeunit 408;
      GLSetupRead@1011 : Boolean;

    LOCAL PROCEDURE FindResUnitCost@1();
    BEGIN
      ResCost.INIT;
      ResCost.Code := "Resource No.";
      ResCost."Work Type Code" := "Work Type Code";
      ResFindUnitCost.RUN(ResCost);
      "Direct Unit Cost" := ResCost."Direct Unit Cost" * "Qty. per Unit of Measure";
      "Unit Cost" := ResCost."Unit Cost" * "Qty. per Unit of Measure";
      VALIDATE("Unit Cost");
    END;

    LOCAL PROCEDURE FindResPrice@2();
    BEGIN
      ResPrice.INIT;
      ResPrice."Job No." := "Job No.";
      ResPrice.Code := "Resource No.";
      ResPrice."Work Type Code" := "Work Type Code";
      ResFindUnitPrice.RUN(ResPrice);
      "Unit Price" := ResPrice."Unit Price" * "Qty. per Unit of Measure";
      VALIDATE("Unit Price");
    END;

    PROCEDURE EmptyLine@5() : Boolean;
    BEGIN
      EXIT(("Resource No." = '') AND (Quantity = 0));
    END;

    PROCEDURE SetUpNewLine@8(LastResJnlLine@1000 : Record 207);
    BEGIN
      ResJnlTemplate.GET("Journal Template Name");
      ResJnlBatch.GET("Journal Template Name","Journal Batch Name");
      ResJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
      ResJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
      IF ResJnlLine.FIND('-') THEN BEGIN
        "Posting Date" := LastResJnlLine."Posting Date";
        "Document Date" := LastResJnlLine."Posting Date";
        "Document No." := LastResJnlLine."Document No.";
      END ELSE BEGIN
        "Posting Date" := WORKDATE;
        "Document Date" := WORKDATE;
        IF ResJnlBatch."No. Series" <> '' THEN BEGIN
          CLEAR(NoSeriesMgt);
          "Document No." := NoSeriesMgt.TryGetNextNo(ResJnlBatch."No. Series","Posting Date");
        END;
      END;
      "Recurring Method" := LastResJnlLine."Recurring Method";
      "Source Code" := ResJnlTemplate."Source Code";
      "Reason Code" := ResJnlBatch."Reason Code";
      "Posting No. Series" := ResJnlBatch."Posting No. Series";
    END;

    PROCEDURE CreateDim@13(Type1@1000 : Integer;No1@1001 : Code[20];Type2@1002 : Integer;No2@1003 : Code[20];Type3@1004 : Integer;No3@1005 : Code[20]);
    VAR
      TableID@1006 : ARRAY [10] OF Integer;
      No@1007 : ARRAY [10] OF Code[20];
    BEGIN
      TableID[1] := Type1;
      No[1] := No1;
      TableID[2] := Type2;
      No[2] := No2;
      TableID[3] := Type3;
      No[3] := No3;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      DimMgt.GetDefaultDim(
        TableID,No,"Source Code",
        "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      IF "Line No." <> 0 THEN
        DimMgt.UpdateJnlLineDefaultDim(
          DATABASE::"Res. Journal Line","Journal Template Name",
          "Journal Batch Name","Line No.",0,
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE ValidateShortcutDimCode@14(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      IF "Line No." <> 0 THEN BEGIN
        DimMgt.SaveJnlLineDim(
          DATABASE::"Res. Journal Line","Journal Template Name",
          "Journal Batch Name","Line No.",0,FieldNumber,ShortcutDimCode);
        IF MODIFY THEN;
      END ELSE
        DimMgt.SaveTempDim(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE LookupShortcutDimCode@18(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      IF "Line No." <> 0 THEN BEGIN
        DimMgt.SaveJnlLineDim(
          DATABASE::"Res. Journal Line","Journal Template Name",
          "Journal Batch Name","Line No.",0,FieldNumber,ShortcutDimCode);
        MODIFY;
      END ELSE
        DimMgt.SaveTempDim(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE ShowShortcutDimCode@15(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    BEGIN
      IF "Line No." <> 0 THEN
        DimMgt.ShowJnlLineDim(
          DATABASE::"Res. Journal Line","Journal Template Name",
          "Journal Batch Name","Line No.",0,ShortcutDimCode)
      ELSE
        DimMgt.ShowTempDim(ShortcutDimCode);
    END;

    LOCAL PROCEDURE GetGLSetup@3();
    BEGIN
      IF NOT GLSetupRead THEN
        GLSetup.GET;
      GLSetupRead := TRUE;
    END;

    BEGIN
    END.
  }
}