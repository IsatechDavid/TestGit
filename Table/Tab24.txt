OBJECT Table 24 Vendor Invoice Disc.
{
  OBJECT-PROPERTIES
  {
    Date=29/06/11;
    Time=22:35:33;
    Modified=Yes;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Vendor Invoice Disc.;
               FRA=Remise facture fournisseur];
    LookupFormID=Form28;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              FRA=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Minimum Amount      ;Decimal       ;CaptionML=[ENU=Minimum Amount;
                                                              FRA=Montant minimum];
                                                   MinValue=0;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 3   ;   ;Discount %          ;Decimal       ;CaptionML=[ENU=Discount %;
                                                              FRA=% remise];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 4   ;   ;Service Charge      ;Decimal       ;CaptionML=[ENU=Service Charge;
                                                              FRA=Frais forfaitaires];
                                                   MinValue=0;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 5   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              FRA=Code devise] }
    { 50000;  ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=[ENU=Vendor Invoice Disc.,Package Price;
                                                                    FRA=Remise facture fournisseur,Type de forfait];
                                                   OptionString=Vendor Invoice Disc.,Package Price }
    { 50001;  ;Description         ;Text150        }
    { 50005;  ;Type Hour           ;Option        ;CaptionML=[ENU=Min Hour;
                                                              FRA=Test heure];
                                                   OptionCaptionML=[ENU=" ,Less,More";
                                                                    FRA=" ,Moins,Plus"];
                                                   OptionString=[ ,Less,More] }
    { 50006;  ;Nb Hour             ;Decimal       ;CaptionML=[ENU=Max Hour;
                                                              FRA=Nombre d'heure] }
    { 50010;  ;Monday              ;Boolean       ;CaptionML=[ENU=Monday;
                                                              FRA=Lundi] }
    { 50011;  ;Tuesday             ;Boolean       ;CaptionML=[ENU=Tuesday;
                                                              FRA=Mardi] }
    { 50012;  ;Wednesday           ;Boolean       ;CaptionML=[ENU=Wednesday;
                                                              FRA=Mercredi] }
    { 50013;  ;Thursday            ;Boolean       ;CaptionML=[ENU=Thursday;
                                                              FRA=Jeudi] }
    { 50014;  ;Friday              ;Boolean       ;CaptionML=[ENU=Friday;
                                                              FRA=Vendredi] }
    { 50015;  ;Saturday            ;Boolean       ;CaptionML=[ENU=Saturday;
                                                              FRA=Samedi] }
    { 50016;  ;Sunday              ;Boolean       ;CaptionML=[ENU=Sunday;
                                                              FRA=Dimanche] }
    { 50017;  ;Day Off             ;Boolean       ;CaptionML=FRA=Jour chom‚ }
    { 50018;  ;Day Off Code        ;Code10        ;TableRelation=Code.Code WHERE (Table ID=CONST(50007),
                                                                                  Field ID=CONST(40));
                                                   OnValidate=VAR
                                                                lCode@1100281000 : Record 50079;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Nonworking Reason Code;
                                                              FRA=Code jour chom‚] }
    { 50020;  ;Monday Starting Hour;Time          ;CaptionML=[ENU=Monday;
                                                              FRA=Heure de d‚but Lundi] }
    { 50021;  ;Tuesday Starting Hour;Time         ;CaptionML=[ENU=Tuesday;
                                                              FRA=Heure de d‚but Mardi] }
    { 50022;  ;Wednesday Starting Hour;Time       ;CaptionML=[ENU=Wednesday;
                                                              FRA=Heure de d‚but Mercredi] }
    { 50023;  ;Thursday Starting Hour;Time        ;CaptionML=[ENU=Thursday;
                                                              FRA=Heure de d‚but Jeudi] }
    { 50024;  ;Friday Starting Hour;Time          ;CaptionML=[ENU=Friday;
                                                              FRA=Heure de d‚but Vendredi] }
    { 50025;  ;Saturday Starting Hour;Time        ;CaptionML=[ENU=Saturday;
                                                              FRA=Heure de d‚but Samedi] }
    { 50026;  ;Sunday Starting Hour;Time          ;CaptionML=[ENU=Sunday;
                                                              FRA=Heure de d‚but Dimanche] }
    { 50027;  ;Day Off Starting Hour;Time         ;CaptionML=FRA=Heure de d‚but Jour chom‚ }
    { 50030;  ;Monday Ending Hour  ;Time          ;CaptionML=[ENU=Monday;
                                                              FRA=Heure de fin Lundi] }
    { 50031;  ;Tuesday Ending Hour ;Time          ;CaptionML=[ENU=Tuesday;
                                                              FRA=Heure de fin Mardi] }
    { 50032;  ;Wednesday Ending Hour;Time         ;CaptionML=[ENU=Wednesday;
                                                              FRA=Heure de fin Mercredi] }
    { 50033;  ;Thursday Ending Hour;Time          ;CaptionML=[ENU=Thursday;
                                                              FRA=Heure de fin Jeudi] }
    { 50034;  ;Friday Ending Hour  ;Time          ;CaptionML=[ENU=Friday;
                                                              FRA=Heure de fin Vendredi] }
    { 50035;  ;Saturday Ending Hour;Time          ;CaptionML=[ENU=Saturday;
                                                              FRA=Heure de fin Samedi] }
    { 50036;  ;Sunday Ending Hour  ;Time          ;CaptionML=[ENU=Sunday;
                                                              FRA=Heure de fin Dimanche] }
    { 50037;  ;Day Off Ending Hour ;Time          ;CaptionML=FRA=Heure de fin jour chom‚ }
  }
  KEYS
  {
    {    ;Code,Currency Code,Minimum Amount       ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE GetRec@1(NewCode@1000 : Code[20];CurrencyCode@1001 : Code[10];CurrencyDate@1002 : Date;BaseAmount@1003 : Decimal);
    VAR
      Currency@1004 : Record 4;
      CurrExchRate@1005 : Record 330;
      CurrencyFactor@1006 : Decimal;
    BEGIN
      SETRANGE(Code,NewCode);
      SETRANGE("Currency Code",CurrencyCode);
      SETRANGE("Minimum Amount",0,BaseAmount);
      IF NOT FIND('+') THEN
        IF CurrencyCode <> '' THEN BEGIN
          CurrencyFactor := CurrExchRate.ExchangeRate(CurrencyDate,CurrencyCode);
          SETRANGE("Currency Code",'');
          SETRANGE(
            "Minimum Amount",0,
            CurrExchRate.ExchangeAmtFCYToLCY(
              CurrencyDate,CurrencyCode,
              BaseAmount,CurrencyFactor));
          IF NOT FIND('+') THEN
            INIT
          ELSE BEGIN
            Currency.GET(CurrencyCode);
            "Service Charge" :=
              ROUND(
                CurrExchRate.ExchangeAmtLCYToFCY(
                  CurrencyDate,CurrencyCode,
                  "Service Charge",CurrencyFactor),
                Currency."Amount Rounding Precision");
          END;
        END ELSE
          INIT;
    END;

    PROCEDURE GetCode@1100281000("Assignation Day"@1100281000 : Date;"Assignation Hour"@1100281001 : Time;"Intervention Day"@1100281002 : Date;"Intervention Hour"@1100281003 : Time) Result : Code[10];
    VAR
      lBaseCalChange@1100281004 : Record 7601;
      lComInfo@1100281005 : Record 79;
      lVendInvDisc@1100281006 : Record 24;
      lTimeIntervale@1100281007 : Decimal;
    BEGIN
      WITH lVendInvDisc DO
      BEGIN
        Result := '';


        RESET;

        lComInfo.GET;
        lBaseCalChange.RESET;
        lBaseCalChange.SETRANGE("Base Calendar Code",lComInfo."Base Calendar Code");
        lBaseCalChange.SETRANGE("Recurring System",lBaseCalChange."Recurring System"::"Annual Recurring");
        lBaseCalChange.SETRANGE("Start Date","Intervention Day");
        IF lBaseCalChange.FINDFIRST THEN
        BEGIN
          SETRANGE("Day Off Code",lBaseCalChange."Nonworking Reason Code");
          SETRANGE("Day Off",TRUE);
          SETFILTER("Day Off Starting Hour",'>%1',"Intervention Hour");
          SETFILTER("Day Off Ending Hour",'<%1',"Intervention Hour");
          GetBestCode(lVendInvDisc,lTimeIntervale);
          IF (lVendInvDisc.Code <> '') THEN
            EXIT(lVendInvDisc.Code);
        END;

        CASE DATE2DWY("Intervention Day",2) OF
          1: BEGIN
            SETRANGE(Monday,TRUE);
            SETFILTER("Monday Starting Hour",'>%1',"Intervention Hour");
            SETFILTER("Monday Ending Hour",'<%1',"Intervention Hour");
          END;
          2: BEGIN
            SETRANGE(Tuesday,TRUE);
            SETFILTER("Tuesday Starting Hour",'>%1',"Intervention Hour");
            SETFILTER("Tuesday Ending Hour",'<%1',"Intervention Hour");
          END;
          3: BEGIN
            SETRANGE(Wednesday,TRUE);
            SETFILTER("Wednesday Starting Hour",'>%1',"Intervention Hour");
            SETFILTER("Wednesday Ending Hour",'<%1',"Intervention Hour");
          END;
          4: BEGIN
            SETRANGE(Thursday,TRUE);
            SETFILTER("Thursday Starting Hour",'>%1',"Intervention Hour");
            SETFILTER("Thursday Ending Hour",'<%1',"Intervention Hour");
          END;
          5: BEGIN
            SETRANGE(Friday,TRUE);
            SETFILTER("Friday Starting Hour",'>%1',"Intervention Hour");
            SETFILTER("Friday Ending Hour",'<%1',"Intervention Hour");
          END;
          6: BEGIN
            SETRANGE(Saturday,TRUE);
            SETFILTER("Saturday Starting Hour",'>%1',"Intervention Hour");
            SETFILTER("Saturday Ending Hour",'<%1',"Intervention Hour");
          END;
          7: BEGIN
            SETRANGE(Sunday,TRUE);
            SETFILTER("Sunday Starting Hour",'>%1',"Intervention Hour");
            SETFILTER("Sunday Ending Hour",'<%1',"Intervention Hour");
          END;
        END;
        GetBestCode(lVendInvDisc,lTimeIntervale);
        IF (lVendInvDisc.Code <> '') THEN
          EXIT(lVendInvDisc.Code);

      END;
    END;

    PROCEDURE GetBestCode@1100281003(VAR pVendInvDisc@1100281000 : Record 24;pTimeIntervale@1100281001 : Decimal);
    BEGIN
      IF NOT pVendInvDisc.ISEMPTY THEN
      BEGIN
        pVendInvDisc.INIT;
        EXIT
      END;

      IF NOT (pVendInvDisc.COUNT = 1) THEN
      BEGIN
        pVendInvDisc.FINDFIRST;
        EXIT
      END ELSE BEGIN

      END;
    END;

    BEGIN
    END.
  }
}