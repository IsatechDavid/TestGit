OBJECT Table 25001 Kit BOM Journal Line
{
  OBJECT-PROPERTIES
  {
    Date=13/02/07;
    Time=12:00:00;
    Version List=KITNA5.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               ReserveKitBOMJnlLine@1480000 : Codeunit 25002;
             BEGIN
               ReserveKitBOMJnlLine.DeleteLine(Rec);
             END;

    CaptionML=[ENU=Kit BOM Journal Line;
               FRA=Ligne feuille nomenclature kit];
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;TableRelation="BOM Journal Template";
                                                   CaptionML=[ENU=Journal Template Name;
                                                              FRA=Nom modŠle feuille] }
    { 2   ;   ;Journal Batch Name  ;Code10        ;TableRelation="BOM Journal Batch".Name WHERE (Journal Template Name=FIELD(Journal Template Name));
                                                   CaptionML=[ENU=Journal Batch Name;
                                                              FRA=Nom feuille] }
    { 3   ;   ;Journal Line No.    ;Integer       ;TableRelation="BOM Journal Line"."Line No." WHERE (Journal Template Name=FIELD(Journal Template Name),
                                                                                                      Journal Batch Name=FIELD(Journal Batch Name));
                                                   CaptionML=[ENU=Journal Line No.;
                                                              FRA=Nø ligne feuille] }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              FRA=Nø ligne] }
    { 5   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              FRA=Type];
                                                   OptionCaptionML=[ENU=" ,Item,,Resource,Setup Resource";
                                                                    FRA=" ,Article,,Ressource,Ressource paramŠtres"];
                                                   OptionString=[ ,Item,,Resource,Setup Resource] }
    { 6   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=FILTER(Resource|Setup Resource)) Resource;
                                                   CaptionML=[ENU=No.;
                                                              FRA=Nø] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              FRA=D‚signation] }
    { 9   ;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              FRA=Code variante] }
    { 10  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              FRA=Code magasin];
                                                   Editable=No }
    { 11  ;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE IF (Type=FILTER(Resource|Setup Resource)) "Resource Unit of Measure".Code WHERE (Resource No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              FRA=Code unit‚] }
    { 13  ;   ;Qty. per Unit of Measure;Decimal   ;InitValue=1;
                                                   CaptionML=[ENU=Qty. per Unit of Measure;
                                                              FRA=Quantit‚ par unit‚];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 14  ;   ;Quantity per        ;Decimal       ;CaptionML=[ENU=Quantity per;
                                                              FRA=Quantit‚ par];
                                                   DecimalPlaces=0:5 }
    { 15  ;   ;Quantity per (Base) ;Decimal       ;CaptionML=[ENU=Quantity per (Base);
                                                              FRA=Quantit‚ par (base)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 16  ;   ;Extended Quantity   ;Decimal       ;CaptionML=[ENU=Extended Quantity;
                                                              FRA=Quantit‚ ‚tendue];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 17  ;   ;Extended Quantity (Base);Decimal   ;CaptionML=[ENU=Extended Quantity (Base);
                                                              FRA=Quantit‚ ‚tendue (base)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 18  ;   ;Applies-to Entry    ;Integer       ;OnValidate=VAR
                                                                ItemLedgEntry@1000 : Record 32;
                                                              BEGIN
                                                                TESTFIELD(Type,Type::Item);
                                                                TESTFIELD("Extended Quantity");
                                                                IF "Applies-to Entry" <> 0 THEN BEGIN
                                                                  ItemLedgEntry.GET("Applies-to Entry");
                                                                  ItemLedgEntry.TESTFIELD(Positive,TRUE);
                                                                  "Location Code" := ItemLedgEntry."Location Code";
                                                                  "Variant Code" := ItemLedgEntry."Variant Code";
                                                                  IF NOT ItemLedgEntry.Open THEN
                                                                    MESSAGE(Text001,"Applies-to Entry");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              TESTFIELD(Type,Type::Item);
                                                              SelectItemEntry;
                                                            END;

                                                   CaptionML=[ENU=Applies-to Entry;
                                                              FRA=Ecriture lettrage] }
    { 19  ;   ;Bin Code            ;Code20        ;TableRelation=IF (Type=CONST(Item)) "Bin Content"."Bin Code" WHERE (Location Code=FIELD(Location Code),
                                                                                                                       Item No.=FIELD(No.),
                                                                                                                       Variant Code=FIELD(Variant Code));
                                                   OnValidate=VAR
                                                                Location@1000 : Record 14;
                                                                Bin@1002 : Record 7354;
                                                              BEGIN
                                                                TESTFIELD(Type,Type::Item);
                                                                IF "Bin Code" <> xRec."Bin Code" THEN BEGIN
                                                                  TESTFIELD("Location Code");
                                                                  IF "Bin Code" <> '' THEN BEGIN
                                                                    Location.GET("Location Code");
                                                                    Location.TESTFIELD("Bin Mandatory");
                                                                    IF Location."Directed Put-away and Pick" THEN
                                                                      ERROR(Text002,
                                                                        FIELDCAPTION("Bin Code"),
                                                                        LOWERCASE(Location.TABLECAPTION),Location.Code,Location.FIELDCAPTION("Directed Put-away and Pick"));
                                                                    Bin.GET("Location Code","Bin Code");
                                                                    TESTFIELD("Location Code",Bin."Location Code");
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Bin Code;
                                                              FRA=Code emplacement] }
    { 20  ;   ;Unit Cost           ;Decimal       ;OnValidate=VAR
                                                                BOMJnlLine@1480002 : Record 89;
                                                                ItemJnlLine@1480001 : Record 83;
                                                                Item@1480000 : Record 27;
                                                              BEGIN
                                                                TESTFIELD(Type,Type::Item);
                                                                TESTFIELD("No.");
                                                                BOMJnlLine.GET("Journal Template Name","Journal Batch Name","Journal Line No.");
                                                                BOMJnlLine.TESTFIELD("Entry Type",BOMJnlLine."Entry Type"::Disassembly);
                                                                Item.GET("No.");
                                                                IF Item."Costing Method" = Item."Costing Method"::Standard THEN
                                                                  ERROR(
                                                                    Text003,
                                                                    FIELDCAPTION("Unit Cost"),Item.FIELDCAPTION("Costing Method"),Item."Costing Method");

                                                                CLEAR(ItemJnlLine);
                                                                ItemJnlLine."Entry Type" := ItemJnlLine."Entry Type"::"Positive Adjmt.";
                                                                ItemJnlLine."Item No." := "No.";
                                                                ItemJnlLine.VALIDATE("Unit Cost","Unit Cost");
                                                                "Unit Cost" := ItemJnlLine."Unit Cost";
                                                              END;

                                                   CaptionML=[ENU=Unit Cost;
                                                              FRA=Co–t unitaire];
                                                   AutoFormatType=2 }
  }
  KEYS
  {
    {    ;Journal Template Name,Journal Batch Name,Journal Line No.,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1000 : TextConst 'ENU=When Posting the entry %1 will be opened first;FRA=Lors de la validation, l''‚criture %1 s''ouvre d''abord';
      Text002@1001 : TextConst 'ENU=You cannot use a %1 because %2 %3 is set up with %4.;FRA=Utilisation de %1 impossible parce que %2 %3 est param‚tr‚(e) avec %4.';
      Text003@1480002 : TextConst 'ENU=You cannot change %1 when %2 is %3.;FRA=Vous ne pouvez pas modifier %1 si %2 est %3.';

    LOCAL PROCEDURE SelectItemEntry@3();
    VAR
      ItemLedgEntry@1001 : Record 32;
      KitBOMJnlLine2@1002 : Record 25001;
    BEGIN
      ItemLedgEntry.SETRANGE("Item No.","No.");
      ItemLedgEntry.SETCURRENTKEY("Item No.",Open);
      ItemLedgEntry.SETRANGE(Open,TRUE);
      ItemLedgEntry.SETRANGE(Positive,TRUE);
      IF "Location Code" <> '' THEN
        ItemLedgEntry.SETRANGE("Location Code","Location Code");

      IF FORM.RUNMODAL(FORM::"Item Ledger Entries",ItemLedgEntry) = ACTION::LookupOK THEN BEGIN
        KitBOMJnlLine2 := Rec;
        KitBOMJnlLine2.VALIDATE("Applies-to Entry",ItemLedgEntry."Entry No.");
        Rec := KitBOMJnlLine2;
      END;
    END;

    PROCEDURE OpenItemTrackingLines@2();
    VAR
      ReserveKitBOMJnlLine@1480000 : Codeunit 25002;
    BEGIN
      TESTFIELD(Type,Type::Item);
      TESTFIELD("No.");
      TESTFIELD("Extended Quantity");
      ReserveKitBOMJnlLine.CallItemTracking(Rec);
    END;

    PROCEDURE ShowBinContents@1();
    VAR
      BinContent@1000 : Record 7302;
    BEGIN
      TESTFIELD(Type,Type::Item);
      TESTFIELD("No.");
      BinContent.SETCURRENTKEY("Location Code","Item No.","Variant Code");
      BinContent.SETRANGE("Location Code","Location Code");
      BinContent.SETRANGE("Item No.","No.");
      BinContent.SETRANGE("Variant Code","Variant Code");
      FORM.RUN(FORM::"Bin Contents List",BinContent);
    END;

    BEGIN
    END.
  }
}