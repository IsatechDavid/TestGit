OBJECT Table 32 Item Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=05/12/12;
    Time=12:10:29;
    Modified=Yes;
    Version List=NAVW16.00.01,NAVFR4.00,ISA6.00,IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Item Ledger Entry;
               FRA=êcriture comptable article];
    LookupFormID=Form38;
    DrillDownFormID=Form38;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              FRA=N¯ sÇquence] }
    { 2   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Item No.;
                                                              FRA=N¯ article] }
    { 3   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              FRA=Date comptabilisation] }
    { 4   ;   ;Entry Type          ;Option        ;CaptionML=[ENU=Entry Type;
                                                              FRA=Type Çcriture];
                                                   OptionCaptionML=[ENU=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output;
                                                                    FRA=Achat,Vente,Positif (ajust.),NÇgatif (ajust.),Transfert,Consommation,Production];
                                                   OptionString=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output }
    { 5   ;   ;Source No.          ;Code20        ;TableRelation=IF (Source Type=CONST(Customer)) Customer
                                                                 ELSE IF (Source Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Source Type=CONST(Item)) Item;
                                                   CaptionML=[ENU=Source No.;
                                                              FRA=N¯ origine] }
    { 6   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              FRA=N¯ document] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              FRA=DÇsignation] }
    { 8   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              FRA=Code magasin] }
    { 12  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              FRA=QuantitÇ];
                                                   DecimalPlaces=0:5 }
    { 13  ;   ;Remaining Quantity  ;Decimal       ;CaptionML=[ENU=Remaining Quantity;
                                                              FRA=QuantitÇ non affectÇe];
                                                   DecimalPlaces=0:5 }
    { 14  ;   ;Invoiced Quantity   ;Decimal       ;CaptionML=[ENU=Invoiced Quantity;
                                                              FRA=QuantitÇ facturÇe];
                                                   DecimalPlaces=0:5 }
    { 28  ;   ;Applies-to Entry    ;Integer       ;CaptionML=[ENU=Applies-to Entry;
                                                              FRA=Ecriture lettrage] }
    { 29  ;   ;Open                ;Boolean       ;CaptionML=[ENU=Open;
                                                              FRA=Ouvert] }
    { 33  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              FRA=Code axe principal 1];
                                                   CaptionClass='1,1,1' }
    { 34  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              FRA=Code axe principal 2];
                                                   CaptionClass='1,1,2' }
    { 36  ;   ;Positive            ;Boolean       ;CaptionML=[ENU=Positive;
                                                              FRA=Positif] }
    { 41  ;   ;Source Type         ;Option        ;CaptionML=[ENU=Source Type;
                                                              FRA=Type origine];
                                                   OptionCaptionML=[ENU=" ,Customer,Vendor,Item";
                                                                    FRA=" ,Client,Fournisseur,Article"];
                                                   OptionString=[ ,Customer,Vendor,Item] }
    { 47  ;   ;Drop Shipment       ;Boolean       ;CaptionML=[ENU=Drop Shipment;
                                                              FRA=Livraison directe] }
    { 50  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=[ENU=Transaction Type;
                                                              FRA=Nature transaction] }
    { 51  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=[ENU=Transport Method;
                                                              FRA=Mode de transport] }
    { 52  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              FRA=Code pays/rÇgion] }
    { 59  ;   ;Entry/Exit Point    ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=[ENU=Entry/Exit Point;
                                                              FRA=Pays destination/provenance] }
    { 60  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              FRA=Date document] }
    { 61  ;   ;External Document No.;Code20       ;CaptionML=[ENU=External Document No.;
                                                              FRA=N¯ doc. externe] }
    { 62  ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=[ENU=Area;
                                                              FRA=DÇpt destination/provenance] }
    { 63  ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=[ENU=Transaction Specification;
                                                              FRA=RÇgime] }
    { 64  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              FRA=Souches de n¯] }
    { 70  ;   ;Reserved Quantity   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Reservation Entry"."Quantity (Base)" WHERE (Source ID=CONST(),
                                                                                                                Source Ref. No.=FIELD(Entry No.),
                                                                                                                Source Type=CONST(32),
                                                                                                                Source Subtype=CONST(0),
                                                                                                                Source Batch Name=CONST(),
                                                                                                                Source Prod. Order Line=CONST(0),
                                                                                                                Reservation Status=CONST(Reservation)));
                                                   CaptionML=[ENU=Reserved Quantity;
                                                              FRA=QuantitÇ rÇservÇe];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 79  ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              FRA=Type document];
                                                   OptionCaptionML=[ENU=" ,Sales Shipment,Sales Invoice,Sales Return Receipt,Sales Credit Memo,Purchase Receipt,Purchase Invoice,Purchase Return Shipment,Purchase Credit Memo,Transfer Shipment,Transfer Receipt,Service Shipment,Service Invoice,Service Credit Memo";
                                                                    FRA=" ,ExpÇdition vente,Facture vente,RÇception retour vente,Avoir vente,RÇception achat,Facture achat,ExpÇdition retour achat,Avoir achat,ExpÇdition transfert,RÇception transfert,ExpÇdition service,Facture service,Avoir service"];
                                                   OptionString=[ ,Sales Shipment,Sales Invoice,Sales Return Receipt,Sales Credit Memo,Purchase Receipt,Purchase Invoice,Purchase Return Shipment,Purchase Credit Memo,Transfer Shipment,Transfer Receipt,Service Shipment,Service Invoice,Service Credit Memo] }
    { 80  ;   ;Document Line No.   ;Integer       ;CaptionML=[ENU=Document Line No.;
                                                              FRA=N¯ ligne document] }
    { 1000;   ;Job No.             ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=[ENU=Job No.;
                                                              FRA=N¯ projet] }
    { 1001;   ;Job Task No.        ;Code20        ;TableRelation="Job Task"."Job Task No." WHERE (Job No.=FIELD(Job No.));
                                                   CaptionML=[ENU=Job Task No.;
                                                              FRA=N¯ tÉche projet] }
    { 1002;   ;Job Purchase        ;Boolean       ;CaptionML=[ENU=Job Purchase;
                                                              FRA=Achat projet] }
    { 5401;   ;Prod. Order No.     ;Code20        ;CaptionML=[ENU=Prod. Order No.;
                                                              FRA=N¯ ordre de fabrication] }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              FRA=Code variante] }
    { 5404;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=[ENU=Qty. per Unit of Measure;
                                                              FRA=QuantitÇ par unitÇ];
                                                   DecimalPlaces=0:5 }
    { 5407;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              FRA=Code unitÇ] }
    { 5408;   ;Derived from Blanket Order;Boolean ;CaptionML=[ENU=Derived from Blanket Order;
                                                              FRA=Issue de commande ouverte] }
    { 5700;   ;Cross-Reference No. ;Code20        ;CaptionML=[ENU=Cross-Reference No.;
                                                              FRA=RÇfÇrence externe] }
    { 5701;   ;Originally Ordered No.;Code20      ;TableRelation=Item;
                                                   CaptionML=[ENU=Originally Ordered No.;
                                                              FRA=N¯ article substituÇ] }
    { 5702;   ;Originally Ordered Var. Code;Code10;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Originally Ordered No.));
                                                   CaptionML=[ENU=Originally Ordered Var. Code;
                                                              FRA=Code variante substituÇ] }
    { 5703;   ;Out-of-Stock Substitution;Boolean  ;CaptionML=[ENU=Out-of-Stock Substitution;
                                                              FRA=Substitution sur rupture] }
    { 5704;   ;Item Category Code  ;Code10        ;TableRelation="Item Category";
                                                   CaptionML=[ENU=Item Category Code;
                                                              FRA=Code catÇgorie article] }
    { 5705;   ;Nonstock            ;Boolean       ;CaptionML=[ENU=Nonstock;
                                                              FRA=Non stockÇ] }
    { 5706;   ;Purchasing Code     ;Code10        ;TableRelation=Purchasing;
                                                   CaptionML=[ENU=Purchasing Code;
                                                              FRA=Code achat] }
    { 5707;   ;Product Group Code  ;Code10        ;TableRelation="Product Group".Code WHERE (Item Category Code=FIELD(Item Category Code));
                                                   CaptionML=[ENU=Product Group Code;
                                                              FRA=Code groupe produits] }
    { 5740;   ;Transfer Order No.  ;Code20        ;CaptionML=[ENU=Transfer Order No.;
                                                              FRA=N¯ ordre transfert];
                                                   Editable=No }
    { 5800;   ;Completely Invoiced ;Boolean       ;CaptionML=[ENU=Completely Invoiced;
                                                              FRA=Entiärement facturÇ] }
    { 5801;   ;Last Invoice Date   ;Date          ;CaptionML=[ENU=Last Invoice Date;
                                                              FRA=Derniäre date facturation] }
    { 5802;   ;Applied Entry to Adjust;Boolean    ;CaptionML=[ENU=Applied Entry to Adjust;
                                                              FRA=Ecriture lettrÇe Ö ajuster] }
    { 5803;   ;Cost Amount (Expected);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Expected)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Cost Amount (Expected);
                                                              FRA=Coñt total (prÇvu)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5804;   ;Cost Amount (Actual);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Actual)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Cost Amount (Actual);
                                                              FRA=Coñt total (rÇel)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5805;   ;Cost Amount (Non-Invtbl.);Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Non-Invtbl.)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Cost Amount (Non-Invtbl.);
                                                              FRA=Coñt total (non incorp.)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5806;   ;Cost Amount (Expected) (ACY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Expected) (ACY)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Cost Amount (Expected) (ACY);
                                                              FRA=Montant coñt (prÇvu) DR];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 5807;   ;Cost Amount (Actual) (ACY);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Actual) (ACY)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Cost Amount (Actual) (ACY);
                                                              FRA=Coñt total (rÇel) DR];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 5808;   ;Cost Amount (Non-Invtbl.)(ACY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Non-Invtbl.)(ACY)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Cost Amount (Non-Invtbl.)(ACY);
                                                              FRA=Coñt total non incorp. DR];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 5813;   ;Purchase Amount (Expected);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Purchase Amount (Expected)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Purchase Amount (Expected);
                                                              FRA=Montant achat (prÇvu)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5814;   ;Purchase Amount (Actual);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Purchase Amount (Actual)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Purchase Amount (Actual);
                                                              FRA=Montant achat (rÇel)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5815;   ;Sales Amount (Expected);Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Sales Amount (Expected)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Sales Amount (Expected);
                                                              FRA=Montant vente (prÇvu)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5816;   ;Sales Amount (Actual);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Sales Amount (Actual)" WHERE (Item Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Sales Amount (Actual);
                                                              FRA=Montant vente (rÇel)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5817;   ;Correction          ;Boolean       ;CaptionML=[ENU=Correction;
                                                              FRA=Correction] }
    { 5818;   ;Shipped Qty. Not Returned;Decimal  ;CaptionML=[ENU=Shipped Qty. Not Returned;
                                                              FRA=QtÇ livrÇe non renvoyÇe];
                                                   DecimalPlaces=0:5 }
    { 5832;   ;Prod. Order Line No.;Integer       ;CaptionML=[ENU=Prod. Order Line No.;
                                                              FRA=N¯ ligne O.F.] }
    { 5833;   ;Prod. Order Comp. Line No.;Integer ;CaptionML=[ENU=Prod. Order Comp. Line No.;
                                                              FRA=N¯ ligne composant O.F.] }
    { 5900;   ;Service Order No.   ;Code20        ;CaptionML=[ENU=Service Order No.;
                                                              FRA=N¯ commande service] }
    { 6500;   ;Serial No.          ;Code20        ;OnLookup=BEGIN
                                                              ItemTrackingMgt.LookupLotSerialNoInfo("Item No.","Variant Code",0,"Serial No.");
                                                            END;

                                                   CaptionML=[ENU=Serial No.;
                                                              FRA=N¯ de sÇrie] }
    { 6501;   ;Lot No.             ;Code20        ;OnLookup=BEGIN
                                                              ItemTrackingMgt.LookupLotSerialNoInfo("Item No.","Variant Code",1,"Lot No.");
                                                            END;

                                                   CaptionML=[ENU=Lot No.;
                                                              FRA=N¯ lot] }
    { 6502;   ;Warranty Date       ;Date          ;CaptionML=[ENU=Warranty Date;
                                                              FRA=Date garantie] }
    { 6503;   ;Expiration Date     ;Date          ;CaptionML=[ENU=Expiration Date;
                                                              FRA=Date d'expiration] }
    { 6510;   ;Item Tracking       ;Option        ;CaptionML=[ENU=Item Tracking;
                                                              FRA=TraáabilitÇ];
                                                   OptionCaptionML=[ENU=None,Lot No.,Lot and Serial No.,Serial No.;
                                                                    FRA=Aucun,N¯ lot,N¯ lot et de sÇrie,N¯ de sÇrie];
                                                   OptionString=None,Lot No.,Lot and Serial No.,Serial No.;
                                                   Editable=No }
    { 6602;   ;Return Reason Code  ;Code10        ;TableRelation="Return Reason";
                                                   CaptionML=[ENU=Return Reason Code;
                                                              FRA=Code motif retour] }
    { 10800;  ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              FRA=Code condition livraison] }
    { 50000;  ;Corporate No.       ;Code20        ;TableRelation=Customer.No. WHERE (Service Contact=CONST(Corporate Customer));
                                                   CaptionML=[ENU=Corporate No.;
                                                              FRA=N¯ grand compte] }
    { 50001;  ;Corporate Region Code;Code10       ;TableRelation="Corporate Region"."Region Code";
                                                   CaptionML=[ENU=Corporate Region Code;
                                                              FRA=Code rÇgion grand compte] }
    { 50002;  ;Service No.         ;Code20        ;TableRelation=Service;
                                                   CaptionML=[ENU=Service No.;
                                                              FRA=N¯ service] }
    { 50003;  ;Service Header No.  ;Code20        ;TableRelation="Service Header".No. WHERE (Document Type=CONST(Invoice),
                                                                                             Service No.=FIELD(Service No.));
                                                   CaptionML=[ENU=Service Header No.;
                                                              FRA=N¯ ligne produit] }
    { 50004;  ;Intervention Line No.;Integer      ;TableRelation="Service Intervention Line"."Line No." WHERE (Service Header No.=FIELD(Service Header No.));
                                                   CaptionML=[ENU=Intervention Line No.;
                                                              FRA=N¯ ligne intervention] }
    { 50005;  ;Service Order Type  ;Code10        ;TableRelation="Service Order Type";
                                                   CaptionML=[ENU=Service Order Type;
                                                              FRA=Code type produit] }
    { 50100;  ;Assigned Date       ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Intervention Line"."Assigned Date" WHERE (Service Header No.=FIELD(Service Header No.),
                                                                                                                         Line No.=FIELD(Intervention Line No.)));
                                                   CaptionML=FRA=Date d'assignation;
                                                   Editable=No }
    { 56010;  ;Fusion Document No. ;Code30        ;TableRelation="Fusion Invoicing Doc. Head"."Fusion Document No.";
                                                   CaptionML=[ENU=Fusion Document No.;
                                                              FRA=N¯ document Fusion] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Item No.                                 }
    {    ;Item No.,Posting Date                    }
    {    ;Item No.,Entry Type,Variant Code,Drop Shipment,Location Code,Posting Date;
                                                   SumIndexFields=Quantity,Invoiced Quantity }
    {    ;Source Type,Source No.,Item No.,Variant Code,Posting Date;
                                                   SumIndexFields=Quantity }
    {    ;Item No.,Open,Variant Code,Positive,Location Code,Posting Date;
                                                   SumIndexFields=Quantity,Remaining Quantity;
                                                   SIFTLevelsToMaintain=[{Item No.,Open,Variant Code,Positive},
                                                                         {Item No.,Open,Variant Code,Positive,Location Code},
                                                                         {Item No.,Open,Variant Code,Positive,Location Code,Posting Date:Day}] }
    {    ;Item No.,Open,Variant Code,Positive,Location Code,Posting Date,Expiration Date,Lot No.,Serial No.;
                                                   SumIndexFields=Quantity,Remaining Quantity;
                                                   KeyGroups=Item(Trkg);
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Country/Region Code,Entry Type,Posting Date;
                                                   KeyGroups=Intrastat }
    {    ;Document No.,Document Type,Document Line No. }
    { No ;Item No.,Entry Type,Variant Code,Drop Shipment,Global Dimension 1 Code,Global Dimension 2 Code,Location Code,Posting Date;
                                                   SumIndexFields=Quantity,Invoiced Quantity;
                                                   KeyGroups=Item(Dim) }
    { No ;Source Type,Source No.,Global Dimension 1 Code,Global Dimension 2 Code,Item No.,Variant Code,Posting Date;
                                                   SumIndexFields=Quantity }
    {    ;Prod. Order No.,Prod. Order Line No.,Entry Type,Prod. Order Comp. Line No.;
                                                   SumIndexFields=Quantity;
                                                   KeyGroups=Item(MFG);
                                                   MaintainSIFTIndex=No }
    {    ;Item No.,Applied Entry to Adjust        ;KeyGroups=Item(Adj) }
    {    ;Item No.,Positive,Location Code,Variant Code }
    { No ;Entry Type,Nonstock,Item No.,Posting Date }
    { No ;Item No.,Location Code,Open,Variant Code,Unit of Measure Code,Lot No.,Serial No.;
                                                   SumIndexFields=Remaining Quantity;
                                                   KeyGroups=ConvLoc }
    {    ;Item No.,Open,Variant Code,Positive,Expiration Date,Lot No.,Serial No.;
                                                   KeyGroups=Item(Trkg);
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Item No.,Open,Variant Code,Location Code,Item Tracking,Lot No.,Serial No.;
                                                   SumIndexFields=Remaining Quantity;
                                                   KeyGroups=Item(Trkg);
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    { No ;Lot No.                                  }
    { No ;Serial No.                               }
    {    ;Source Type,Source No.,Document No.,Posting Date }
    {    ;Service No.,Service Header No.,Intervention Line No. }
    {    ;Corporate No.,Corporate Region Code      }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Description,Item No.,Posting Date,Entry Type,Document No. }
  }
  CODE
  {
    VAR
      GLSetup@1000 : Record 98;
      ReservEntry@1001 : Record 337;
      ReservEngineMgt@1002 : Codeunit 99000831;
      ReserveItemLedgEntry@1003 : Codeunit 99000841;
      ItemTrackingMgt@1006 : Codeunit 6500;
      GLSetupRead@1005 : Boolean;

    PROCEDURE GetCurrencyCode@1() : Code[10];
    BEGIN
      IF NOT GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
      EXIT(GLSetup."Additional Reporting Currency");
    END;

    PROCEDURE ShowReservationEntries@2(Modal@1000 : Boolean);
    BEGIN
      ReservEngineMgt.InitFilterAndSortingLookupFor(ReservEntry,TRUE);
      ReserveItemLedgEntry.FilterReservFor(ReservEntry,Rec);
      IF Modal THEN
        FORM.RUNMODAL(FORM::"Reservation Entries",ReservEntry)
      ELSE
        FORM.RUN(FORM::"Reservation Entries",ReservEntry);
    END;

    PROCEDURE SetAppliedEntryToAdjust@66(AppliedEntryToAdjust@1001 : Boolean);
    BEGIN
      IF "Applied Entry to Adjust" <> AppliedEntryToAdjust THEN BEGIN
        "Applied Entry to Adjust" := AppliedEntryToAdjust;
        MODIFY;
      END;
    END;

    PROCEDURE SetAvgTransCompletelyInvoiced@80() : Boolean;
    VAR
      ItemApplnEntry@1005 : Record 339;
      InbndItemLedgEntry@1004 : Record 32;
      CompletelyInvoiced@1002 : Boolean;
    BEGIN
      IF "Entry Type" <> "Entry Type"::Transfer THEN
        EXIT(FALSE);

      ItemApplnEntry.SETCURRENTKEY("Item Ledger Entry No.");
      ItemApplnEntry.SETRANGE("Item Ledger Entry No.","Entry No.");
      ItemApplnEntry.FIND('-');
      IF NOT "Completely Invoiced" THEN BEGIN
        CompletelyInvoiced := TRUE;
        REPEAT
          InbndItemLedgEntry.GET(ItemApplnEntry."Inbound Item Entry No.");
          IF NOT InbndItemLedgEntry."Completely Invoiced" THEN
            CompletelyInvoiced := FALSE;
        UNTIL ItemApplnEntry.NEXT = 0;

        IF CompletelyInvoiced THEN BEGIN
          SetCompletelyInvoiced;
          EXIT(TRUE);
        END;
      END;
      EXIT(FALSE);
    END;

    PROCEDURE SetCompletelyInvoiced@3();
    BEGIN
      IF NOT "Completely Invoiced" THEN BEGIN
        "Completely Invoiced" := TRUE;
        MODIFY;
      END;
    END;

    PROCEDURE AppliedEntryToAdjustExists@40(ItemNo@1001 : Code[20]) : Boolean;
    BEGIN
      RESET;
      SETCURRENTKEY("Item No.","Applied Entry to Adjust");
      SETRANGE("Item No.",ItemNo);
      SETRANGE("Applied Entry to Adjust",TRUE);
      EXIT(FIND('-'));
    END;

    PROCEDURE IsOutbndConsump@57() : Boolean;
    BEGIN
      EXIT(("Entry Type" = "Entry Type"::Consumption) AND NOT Positive);
    END;

    PROCEDURE IsExactCostReversingPurchase@59() : Boolean;
    BEGIN
      EXIT(
        ("Applies-to Entry" <> 0) AND
        ("Entry Type" = "Entry Type"::Purchase) AND
        ("Invoiced Quantity" < 0));
    END;

    PROCEDURE UpdateItemTracking@5();
    VAR
      ItemTrackingMgt@1000 : Codeunit 6500;
    BEGIN
      "Item Tracking" := ItemTrackingMgt.ItemTrackingOption("Lot No.","Serial No.");
    END;

    PROCEDURE GetUnitCostLCY@4() : Decimal;
    BEGIN
      IF Quantity=0 THEN
        EXIT("Cost Amount (Actual)");

      EXIT(ROUND("Cost Amount (Actual)"/Quantity,0.00001));
    END;

    BEGIN
    {
      /** @r IMH03 @d 05/12/12 @a ISAT.ZW @v IMH6.01.220 @s Projet Facturation Fusion
          @c Ajout champ 56010 Fusion Document No. */
      /** @r IMH02 @d 24/03/11 @a ISAT.PC @v IMH6.01.105 @s Scoring
          @c ajout clÇ Service No.,Service Header No.,Intervention Line No. pour la gestion du cout des interventions dans le scoring
          @c ajout clÇ Corporate No.,Corporate Region Code pour la facturation
          @c dÇsactivation du maintient index sur la clÇ
          @c Item No.,Open,Variant Code,Positive,Location Code,Posting Date,Expiration Date,Lot No.,Serial No.
          @c pour gain de performance */
      /** @r IMH01 @d 14/03/11 @a ISAT.LLT @v IMH6.01.146 @s Gestion facturation
          @c Ajout champ 50000 Corporate Contact No.
          @c Ajout champ 50001 Corporate Region Code
          @c Ajout champ 50002 Service No.
          @c Ajout champ 50003 Service Header No.
          @c Ajout champ 50004 Intervention Line No.
          @c Ajout champ 50005 Service Order Type */
      /** @r ISA01 @d 06/07/09 @a ISAT.ST @v ISA6.00.00.01 @s migration ISATECH +
          @c Ajout dernier index */
    }
    END.
  }
}