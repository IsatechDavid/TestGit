OBJECT Table 349 Dimension Value
{
  OBJECT-PROPERTIES
  {
    Date=23/03/11;
    Time=09:31:57;
    Modified=Yes;
    Version List=NAVW16.00.01,ISA6.00,IMH6.01;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               GLSetup.GET;
               "Global Dimension No." := 0;
               IF GLSetup."Global Dimension 1 Code" = "Dimension Code" THEN
                 "Global Dimension No." := 1;
               IF GLSetup."Global Dimension 2 Code" = "Dimension Code" THEN
                 "Global Dimension No." := 2;
             END;

    OnModify=BEGIN
               IF "Dimension Code" <> xRec."Dimension Code" THEN BEGIN
                 GLSetup.GET;
                 "Global Dimension No." := 0;
                 IF GLSetup."Global Dimension 1 Code" = "Dimension Code" THEN
                   "Global Dimension No." := 1;
                 IF GLSetup."Global Dimension 2 Code" = "Dimension Code" THEN
                   "Global Dimension No." := 2;
               END;
             END;

    OnDelete=BEGIN
               IF CheckIfDimValueUsed("Dimension Code",Code) THEN
                 ERROR(Text000,GetCheckDimErr);

               DimValueComb.SETRANGE("Dimension 1 Code","Dimension Code");
               DimValueComb.SETRANGE("Dimension 1 Value Code",Code);
               DimValueComb.DELETEALL(TRUE);

               DimValueComb.RESET;
               DimValueComb.SETRANGE("Dimension 2 Code","Dimension Code");
               DimValueComb.SETRANGE("Dimension 2 Value Code",Code);
               DimValueComb.DELETEALL(TRUE);

               DefaultDim.SETRANGE("Dimension Code","Dimension Code");
               DefaultDim.SETRANGE("Dimension Value Code",Code);
               DefaultDim.DELETEALL(TRUE);

               SelectedDim.SETRANGE("Dimension Code","Dimension Code");
               SelectedDim.SETRANGE("New Dimension Value Code",Code);
               SelectedDim.DELETEALL(TRUE);

               AnalysisSelectedDim.SETRANGE("Dimension Code","Dimension Code");
               AnalysisSelectedDim.SETRANGE("New Dimension Value Code",Code);
               AnalysisSelectedDim.DELETEALL(TRUE);
             END;

    OnRename=BEGIN
               RenameBudgEntryDim;
               RenameAnalysisViewEntryDim;
               RenameItemBudgEntryDim;
               RenameItemAnalysisViewEntryDim;
             END;

    CaptionML=[ENU=Dimension Value;
               FRA=Section analytique];
    LookupFormID=Form560;
  }
  FIELDS
  {
    { 1   ;   ;Dimension Code      ;Code20        ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Dimension Code;
                                                              FRA=Code axe];
                                                   NotBlank=Yes }
    { 2   ;   ;Code                ;Code20        ;OnValidate=BEGIN
                                                                IF UPPERCASE(Code) = Text002 THEN
                                                                  ERROR(Text003,
                                                                    FIELDCAPTION(Code));
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              FRA=Code];
                                                   NotBlank=Yes }
    { 3   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              FRA=Nom] }
    { 4   ;   ;Dimension Value Type;Option        ;OnValidate=BEGIN
                                                                IF ("Dimension Value Type" <> "Dimension Value Type"::Standard) AND
                                                                   (xRec."Dimension Value Type" = xRec."Dimension Value Type"::Standard)
                                                                THEN
                                                                  IF CheckIfDimValueUsed("Dimension Code",Code) THEN
                                                                    ERROR(Text004,GetCheckDimErr);
                                                                Totaling := '';
                                                              END;

                                                   CaptionML=[ENU=Dimension Value Type;
                                                              FRA=Type section];
                                                   OptionCaptionML=[ENU=Standard,Heading,Total,Begin-Total,End-Total;
                                                                    FRA=Standard,Titre,Total,D‚but total,Fin total];
                                                   OptionString=Standard,Heading,Total,Begin-Total,End-Total }
    { 5   ;   ;Totaling            ;Text250       ;TableRelation=IF (Dimension Value Type=CONST(Total)) "Dimension Value"."Dimension Code" WHERE (Dimension Code=FIELD(Dimension Code));
                                                   OnValidate=BEGIN
                                                                IF NOT ("Dimension Value Type" IN
                                                                  ["Dimension Value Type"::Total,"Dimension Value Type"::"End-Total"]) AND (Totaling <> '')
                                                                THEN
                                                                  FIELDERROR("Dimension Value Type");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Totaling;
                                                              FRA=Totalisation] }
    { 6   ;   ;Blocked             ;Boolean       ;CaptionML=[ENU=Blocked;
                                                              FRA=Bloqu‚] }
    { 7   ;   ;Consolidation Code  ;Code20        ;CaptionML=[ENU=Consolidation Code;
                                                              FRA=Code consolidation] }
    { 8   ;   ;Indentation         ;Integer       ;CaptionML=[ENU=Indentation;
                                                              FRA=Indentation] }
    { 9   ;   ;Global Dimension No.;Integer       ;CaptionML=[ENU=Global Dimension No.;
                                                              FRA=Nø axe principal] }
    { 10  ;   ;Map-to IC Dimension Code;Code20    ;CaptionML=[ENU=Map-to IC Dimension Code;
                                                              FRA=Code axe IC … faire corresp.] }
    { 11  ;   ;Map-to IC Dimension Value Code;Code20;
                                                   TableRelation="IC Dimension Value".Code WHERE (Dimension Code=FIELD(Map-to IC Dimension Code));
                                                   CaptionML=[ENU=Map-to IC Dimension Value Code;
                                                              FRA="Code sect an. axe IC => corres"] }
    { 50000;  ;Dimension Repartition Code;Code10  ;TableRelation="Dimension Repartition"."Table Code" WHERE (Type=CONST(Header));
                                                   OnValidate=VAR
                                                                lCsttext001@1100281000 : TextConst 'FRA=Vous pouvez uniquement faire une r‚partition analytique sur les 2 axes principaux %1 et %2.';
                                                              BEGIN
                                                                //<<IMH02.JC
                                                                GLSetup.GET;
                                                                IF ("Dimension Code"<>GLSetup."Global Dimension 1 Code") AND
                                                                  ("Dimension Code"<>GLSetup."Global Dimension 2 Code") THEN
                                                                  ERROR(lCsttext001,GLSetup."Global Dimension 1 Code",GLSetup."Global Dimension 2 Code");
                                                                //>>IMH02.JC
                                                              END;

                                                   Description=IMH6.01 }
    { 8016602;;Status              ;Option        ;OnValidate=BEGIN
                                                                IF "Entry Type"="Entry Type"::Pourcentage THEN
                                                                 BEGIN
                                                                   CALCFIELDS("Percentage Total");
                                                                   IF "Percentage Total"<>100 THEN
                                                                    ERROR('le total pourcentage de la ventilation doit faire 100');
                                                                 END;
                                                              END;

                                                   CaptionML=[ENU=Status;
                                                              FRA=Statut];
                                                   OptionCaptionML=[ENU=Creation,Enabled,Modification,Closed;
                                                                    FRA=Cr‚ation en cours,Valid‚e,Modification en cours,Clotur‚e];
                                                   OptionString=Cr‚ation en cours,Valid‚e,Modification en cours,Clotur‚e;
                                                   Description=ISA5.00.00.00 }
    { 8016603;;Expiration Date     ;Date          ;CaptionML=[ENU=Expiration Date;
                                                              FRA=Date d'expiration];
                                                   Description=ISA5.00.00.00 }
    { 8016604;;Entry Type          ;Option        ;CaptionML=[ENU=Entry Type;
                                                              FRA=Type d'entr‚e];
                                                   OptionCaptionML=[ENU=Percentage,Quantity;
                                                                    FRA=Pourcentage,Quantit‚];
                                                   OptionString=Pourcentage,Quantit‚;
                                                   Description=ISA5.00.00.00 }
    { 8016605;;Total Quantity      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Dimension Value Allocation"."Applied Quantity" WHERE (Main Dimension Code=FIELD(Dimension Code),
                                                                                                                          Main Code=FIELD(Code)));
                                                   CaptionML=[ENU=Total Quantity;
                                                              FRA=Total quantit‚];
                                                   Description=ISA5.00.00.00 }
    { 8016606;;Percentage Total    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Dimension Value Allocation".Percentage WHERE (Main Dimension Code=FIELD(Dimension Code),
                                                                                                                  Main Code=FIELD(Code)));
                                                   CaptionML=[ENU=Percentage Total;
                                                              FRA=Total pourcentage];
                                                   Description=ISA5.00.00.00 }
    { 8016607;;Extended            ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Dimension Value Allocation" WHERE (Main Dimension Code=FIELD(Dimension Code),
                                                                                                         Main Code=FIELD(Code)));
                                                   CaptionML=[ENU=Extended;
                                                              FRA=Etendu];
                                                   Description=ISA5.00.00.00 }
    { 8016608;;Departure City Port ;Text30        ;CaptionML=[ENU=Departure City Port;
                                                              FRA=D‚part];
                                                   Description=ISA5.00.00.00 }
    { 8016609;;Arrival City Port   ;Text30        ;CaptionML=[ENU=Arrival City Port;
                                                              FRA=Arriv‚e];
                                                   Description=ISA5.00.00.00 }
    { 8016610;;Tracking No.        ;Code10        ;CaptionML=[ENU=Tracking No.;
                                                              FRA=Voyage No.];
                                                   Description=ISA5.00.00.00 }
  }
  KEYS
  {
    {    ;Dimension Code,Code                     ;Clustered=Yes }
    {    ;Code,Global Dimension No.                }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Dimension Code,Name                 }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1\You cannot delete it.;FRA=%1\Vous ne pouvez pas supprimer l''enregistrement.';
      Text002@1002 : TextConst 'ENU=(CONFLICT);FRA=(CONFLIT)';
      Text003@1003 : TextConst 'ENU=%1 can not be (CONFLICT). This name is used internally by the system.;FRA=%1 ne peut pas ˆtre (CONFLICT). Ce nom est utilis‚ en interne par le systŠme.';
      Text004@1004 : TextConst 'ENU=%1\You cannot change the type.;FRA=%1\Vous ne pouvez pas modifier le type.';
      Text005@1005 : TextConst 'ENU=This dimension value is used in posted and budget entries.;FRA=Cette section analytique est utilis‚e dans les ‚critures enregistr‚es et les ‚critures budget.';
      Text006@1006 : TextConst 'ENU=This dimension value is used in posted entries.;FRA=Cette section analytique est utilis‚e dans les ‚critures enregistr‚es.';
      Text007@1007 : TextConst 'ENU=This dimension value is used in budget entries.;FRA=Cette section analytique est utilis‚e dans les ‚critures budget.';
      LedgEntryDim@1008 : Record 355;
      JnlLineDim@1009 : Record 356;
      DocDim@1010 : Record 357;
      ProdDocDim@1011 : Record 358;
      PostedDocDim@1012 : Record 359;
      GLBudgetDim@1013 : Record 361;
      ItemBudgetDim@1022 : Record 7135;
      DimValueComb@1014 : Record 351;
      DefaultDim@1015 : Record 352;
      SelectedDim@1016 : Record 369;
      AnalysisSelectedDim@1021 : Record 7159;
      GLSetup@1020 : Record 98;
      CheckDimErr@1017 : Text[250];
      UsedInPostedEntries@1018 : Boolean;
      UsedInBudgetEntries@1019 : Boolean;

    PROCEDURE CheckIfDimValueUsed@1(DimChecked@1000 : Code[20];DimValueChecked@1001 : Code[20]) : Boolean;
    BEGIN
      UsedInPostedEntries := FALSE;
      UsedInBudgetEntries := FALSE;

      IF NOT LedgEntryDim.SETCURRENTKEY("Dimension Code","Dimension Value Code") THEN;
      LedgEntryDim.SETRANGE("Dimension Code",DimChecked);
      LedgEntryDim.SETRANGE("Dimension Value Code",DimValueChecked);
      IF NOT LedgEntryDim.ISEMPTY THEN
        UsedInPostedEntries := TRUE;

      IF NOT JnlLineDim.SETCURRENTKEY("Dimension Code","Dimension Value Code") THEN;
      JnlLineDim.SETRANGE("Dimension Code",DimChecked);
      JnlLineDim.SETRANGE("Dimension Value Code",DimValueChecked);
      IF NOT JnlLineDim.ISEMPTY THEN
        UsedInPostedEntries := TRUE;

      JnlLineDim.SETRANGE("Dimension Code");
      JnlLineDim.SETRANGE("Dimension Value Code");
      JnlLineDim.SETRANGE("Dimension Code",DimChecked);
      JnlLineDim.SETRANGE("New Dimension Value Code",DimValueChecked);
      IF NOT JnlLineDim.ISEMPTY THEN
        UsedInPostedEntries := TRUE;

      IF NOT DocDim.SETCURRENTKEY("Dimension Code","Dimension Value Code") THEN;
      DocDim.SETRANGE("Dimension Code",DimChecked);
      DocDim.SETRANGE("Dimension Value Code",DimValueChecked);
      IF NOT DocDim.ISEMPTY THEN
        UsedInPostedEntries := TRUE;

      IF NOT ProdDocDim.SETCURRENTKEY("Dimension Code","Dimension Value Code") THEN;
      ProdDocDim.SETRANGE("Dimension Code",DimChecked);
      ProdDocDim.SETRANGE("Dimension Value Code",DimValueChecked);
      IF NOT ProdDocDim.ISEMPTY THEN
        UsedInPostedEntries := TRUE;

      IF NOT PostedDocDim.SETCURRENTKEY("Dimension Code","Dimension Value Code") THEN;
      PostedDocDim.SETRANGE("Dimension Code",DimChecked);
      PostedDocDim.SETRANGE("Dimension Value Code",DimValueChecked);
      IF NOT PostedDocDim.ISEMPTY THEN
        UsedInPostedEntries := TRUE;

      IF NOT GLBudgetDim.SETCURRENTKEY("Dimension Code","Dimension Value Code") THEN;
      GLBudgetDim.SETRANGE("Dimension Code",DimChecked);
      GLBudgetDim.SETRANGE("Dimension Value Code",DimValueChecked);
      IF NOT GLBudgetDim.ISEMPTY THEN
        UsedInBudgetEntries := TRUE;

      IF NOT ItemBudgetDim.SETCURRENTKEY("Dimension Code","Dimension Value Code") THEN;
      ItemBudgetDim.SETRANGE("Dimension Code",DimChecked);
      ItemBudgetDim.SETRANGE("Dimension Value Code",DimValueChecked);
      IF NOT ItemBudgetDim.ISEMPTY THEN
        UsedInBudgetEntries := TRUE;

      IF UsedInPostedEntries OR UsedInBudgetEntries THEN BEGIN
        MakeCheckDimErr;
        EXIT(TRUE);
      END ELSE
        EXIT(FALSE);
    END;

    LOCAL PROCEDURE MakeCheckDimErr@4();
    BEGIN
      IF UsedInPostedEntries THEN BEGIN
        IF UsedInBudgetEntries THEN
          CheckDimErr := Text005
        ELSE
          CheckDimErr := Text006;
      END ELSE
        IF UsedInBudgetEntries THEN
          CheckDimErr := Text007;
    END;

    PROCEDURE GetCheckDimErr@2() : Text[250];
    BEGIN
      EXIT(CheckDimErr);
    END;

    LOCAL PROCEDURE RenameBudgEntryDim@3();
    VAR
      GLBudget@1002 : Record 95;
      GLBudgetEntry@1003 : Record 96;
      GLBudgetEntry2@1001 : Record 96;
      BudgDimNo@1000 : Integer;
    BEGIN
      GLBudget.LOCKTABLE;
      IF RECORDLEVELLOCKING THEN
        IF GLBudget.FIND('-') THEN
          REPEAT
          UNTIL GLBudget.NEXT = 0;
      FOR BudgDimNo := 1 TO 4 DO BEGIN
        CASE TRUE OF
          BudgDimNo = 1:
            GLBudget.SETRANGE("Budget Dimension 1 Code","Dimension Code");
          BudgDimNo = 2:
            GLBudget.SETRANGE("Budget Dimension 2 Code","Dimension Code");
          BudgDimNo = 3:
            GLBudget.SETRANGE("Budget Dimension 3 Code","Dimension Code");
          BudgDimNo = 4:
            GLBudget.SETRANGE("Budget Dimension 4 Code","Dimension Code");
        END;
        IF GLBudget.FIND('-') THEN BEGIN
          GLBudgetEntry.SETCURRENTKEY("Budget Name","G/L Account No.","Business Unit Code","Global Dimension 1 Code");
          REPEAT
            GLBudgetEntry.SETRANGE("Budget Name",GLBudget.Name);
            CASE TRUE OF
              BudgDimNo = 1:
                GLBudgetEntry.SETRANGE("Budget Dimension 1 Code",xRec.Code);
              BudgDimNo = 2:
                GLBudgetEntry.SETRANGE("Budget Dimension 2 Code",xRec.Code);
              BudgDimNo = 3:
                GLBudgetEntry.SETRANGE("Budget Dimension 3 Code",xRec.Code);
              BudgDimNo = 4:
                GLBudgetEntry.SETRANGE("Budget Dimension 4 Code",xRec.Code);
            END;
            IF GLBudgetEntry.FIND('-') THEN
              REPEAT
                GLBudgetEntry2 := GLBudgetEntry;
                CASE TRUE OF
                  BudgDimNo = 1:
                    GLBudgetEntry2."Budget Dimension 1 Code" := Code;
                  BudgDimNo = 2:
                    GLBudgetEntry2."Budget Dimension 2 Code" := Code;
                  BudgDimNo = 3:
                    GLBudgetEntry2."Budget Dimension 3 Code" := Code;
                  BudgDimNo = 4:
                    GLBudgetEntry2."Budget Dimension 4 Code" := Code;
                END;
                GLBudgetEntry2.MODIFY;
              UNTIL GLBudgetEntry.NEXT = 0;
            GLBudgetEntry.RESET;
          UNTIL GLBudget.NEXT = 0;
        END;
        GLBudget.RESET;
      END;
    END;

    LOCAL PROCEDURE RenameAnalysisViewEntryDim@5();
    VAR
      AnalysisView@1001 : Record 363;
      AnalysisViewEntry@1002 : Record 365;
      AnalysisViewEntry2@1003 : Record 365;
      AnalysisViewBudgEntry@1004 : Record 366;
      AnalysisViewBudgEntry2@1005 : Record 366;
      DimensionNo@1000 : Integer;
    BEGIN
      AnalysisView.LOCKTABLE;
      IF RECORDLEVELLOCKING THEN
        IF AnalysisView.FIND('-') THEN
          REPEAT
          UNTIL AnalysisView.NEXT = 0;

      FOR DimensionNo := 1 TO 4 DO BEGIN
        CASE TRUE OF
          DimensionNo = 1:
            AnalysisView.SETRANGE("Dimension 1 Code","Dimension Code");
          DimensionNo = 2:
            AnalysisView.SETRANGE("Dimension 2 Code","Dimension Code");
          DimensionNo = 3:
            AnalysisView.SETRANGE("Dimension 3 Code","Dimension Code");
          DimensionNo = 4:
            AnalysisView.SETRANGE("Dimension 4 Code","Dimension Code");
        END;
        IF AnalysisView.FIND('-') THEN
          REPEAT
            AnalysisViewEntry.SETRANGE("Analysis View Code",AnalysisView.Code);
            AnalysisViewBudgEntry.SETRANGE("Analysis View Code",AnalysisView.Code);
            CASE TRUE OF
              DimensionNo = 1:
                BEGIN
                  AnalysisViewEntry.SETRANGE("Dimension 1 Value Code",xRec.Code);
                  AnalysisViewBudgEntry.SETRANGE("Dimension 1 Value Code",xRec.Code);
                END;
              DimensionNo = 2:
                BEGIN
                  AnalysisViewEntry.SETRANGE("Dimension 2 Value Code",xRec.Code);
                  AnalysisViewBudgEntry.SETRANGE("Dimension 2 Value Code",xRec.Code);
                END;
              DimensionNo = 3:
                BEGIN
                  AnalysisViewEntry.SETRANGE("Dimension 3 Value Code",xRec.Code);
                  AnalysisViewBudgEntry.SETRANGE("Dimension 3 Value Code",xRec.Code);
                END;
              DimensionNo = 4:
                BEGIN
                  AnalysisViewEntry.SETRANGE("Dimension 4 Value Code",xRec.Code);
                  AnalysisViewBudgEntry.SETRANGE("Dimension 4 Value Code",xRec.Code);
                END;
            END;
            IF AnalysisViewEntry.FIND('-') THEN
              REPEAT
                AnalysisViewEntry2 := AnalysisViewEntry;
                CASE TRUE OF
                  DimensionNo = 1:
                    AnalysisViewEntry2."Dimension 1 Value Code" := Code;
                  DimensionNo = 2:
                    AnalysisViewEntry2."Dimension 2 Value Code" := Code;
                  DimensionNo = 3:
                    AnalysisViewEntry2."Dimension 3 Value Code" := Code;
                  DimensionNo = 4:
                    AnalysisViewEntry2."Dimension 4 Value Code" := Code;
                END;
                AnalysisViewEntry.DELETE;
                AnalysisViewEntry2.INSERT;
              UNTIL AnalysisViewEntry.NEXT = 0;
            AnalysisViewEntry.RESET;
            IF AnalysisViewBudgEntry.FIND('-') THEN
              REPEAT
                AnalysisViewBudgEntry2 := AnalysisViewBudgEntry;
                CASE TRUE OF
                  DimensionNo = 1:
                    AnalysisViewBudgEntry2."Dimension 1 Value Code" := Code;
                  DimensionNo = 2:
                    AnalysisViewBudgEntry2."Dimension 2 Value Code" := Code;
                  DimensionNo = 3:
                    AnalysisViewBudgEntry2."Dimension 3 Value Code" := Code;
                  DimensionNo = 4:
                    AnalysisViewBudgEntry2."Dimension 4 Value Code" := Code;
                END;
                AnalysisViewBudgEntry.DELETE;
                AnalysisViewBudgEntry2.INSERT;
              UNTIL AnalysisViewBudgEntry.NEXT = 0;
            AnalysisViewBudgEntry.RESET;
          UNTIL AnalysisView.NEXT = 0;
        AnalysisView.RESET;
      END;
    END;

    LOCAL PROCEDURE RenameItemBudgEntryDim@6();
    VAR
      ItemBudget@1003 : Record 7132;
      ItemBudgetEntry@1002 : Record 7134;
      ItemBudgetEntry2@1001 : Record 7134;
      BudgDimNo@1000 : Integer;
    BEGIN
      ItemBudget.LOCKTABLE;
      IF RECORDLEVELLOCKING THEN
        IF ItemBudget.FIND('-') THEN
          REPEAT
          UNTIL ItemBudget.NEXT = 0;

      FOR BudgDimNo := 1 TO 3 DO BEGIN
        CASE TRUE OF
          BudgDimNo = 1:
            ItemBudget.SETRANGE("Budget Dimension 1 Code","Dimension Code");
          BudgDimNo = 2:
            ItemBudget.SETRANGE("Budget Dimension 2 Code","Dimension Code");
          BudgDimNo = 3:
            ItemBudget.SETRANGE("Budget Dimension 3 Code","Dimension Code");
        END;
        IF ItemBudget.FIND('-') THEN BEGIN
          ItemBudgetEntry.SETCURRENTKEY(
            "Analysis Area","Budget Name","Item No.","Source Type","Source No.",Date,"Location Code","Global Dimension 1 Code");
          REPEAT
            ItemBudgetEntry.SETRANGE("Analysis Area",ItemBudget."Analysis Area");
            ItemBudgetEntry.SETRANGE("Budget Name",ItemBudget.Name);
            CASE TRUE OF
              BudgDimNo = 1:
                ItemBudgetEntry.SETRANGE("Budget Dimension 1 Code",xRec.Code);
              BudgDimNo = 2:
                ItemBudgetEntry.SETRANGE("Budget Dimension 2 Code",xRec.Code);
              BudgDimNo = 3:
                ItemBudgetEntry.SETRANGE("Budget Dimension 3 Code",xRec.Code);
            END;
            IF ItemBudgetEntry.FIND('-') THEN
              REPEAT
                ItemBudgetEntry2 := ItemBudgetEntry;
                CASE TRUE OF
                  BudgDimNo = 1:
                    ItemBudgetEntry2."Budget Dimension 1 Code" := Code;
                  BudgDimNo = 2:
                    ItemBudgetEntry2."Budget Dimension 2 Code" := Code;
                  BudgDimNo = 3:
                    ItemBudgetEntry2."Budget Dimension 3 Code" := Code;
                END;
                ItemBudgetEntry2.MODIFY;
              UNTIL ItemBudgetEntry.NEXT = 0;
            ItemBudgetEntry.RESET;
          UNTIL ItemBudget.NEXT = 0;
        END;
        ItemBudget.RESET;
      END;
    END;

    LOCAL PROCEDURE RenameItemAnalysisViewEntryDim@7();
    VAR
      ItemAnalysisView@1005 : Record 7152;
      ItemAnalysisViewEntry@1004 : Record 7154;
      ItemAnalysisViewEntry2@1003 : Record 7154;
      ItemAnalysisViewBudgEntry@1002 : Record 7156;
      ItemAnalysisViewBudgEntry2@1001 : Record 7156;
      DimensionNo@1000 : Integer;
    BEGIN
      ItemAnalysisView.LOCKTABLE;
      IF RECORDLEVELLOCKING THEN
        IF ItemAnalysisView.FIND('-') THEN
          REPEAT
          UNTIL ItemAnalysisView.NEXT = 0;

      FOR DimensionNo := 1 TO 3 DO BEGIN
        CASE TRUE OF
          DimensionNo = 1:
            ItemAnalysisView.SETRANGE("Dimension 1 Code","Dimension Code");
          DimensionNo = 2:
            ItemAnalysisView.SETRANGE("Dimension 2 Code","Dimension Code");
          DimensionNo = 3:
            ItemAnalysisView.SETRANGE("Dimension 3 Code","Dimension Code");
        END;
        IF ItemAnalysisView.FIND('-') THEN
          REPEAT
            ItemAnalysisViewEntry.SETRANGE("Analysis Area",ItemAnalysisView."Analysis Area");
            ItemAnalysisViewEntry.SETRANGE("Analysis View Code",ItemAnalysisView.Code);
            ItemAnalysisViewBudgEntry.SETRANGE("Analysis Area",ItemAnalysisView."Analysis Area");
            ItemAnalysisViewBudgEntry.SETRANGE("Analysis View Code",ItemAnalysisView.Code);
            CASE TRUE OF
              DimensionNo = 1:
                BEGIN
                  ItemAnalysisViewEntry.SETRANGE("Dimension 1 Value Code",xRec.Code);
                  ItemAnalysisViewBudgEntry.SETRANGE("Dimension 1 Value Code",xRec.Code);
                END;
              DimensionNo = 2:
                BEGIN
                  ItemAnalysisViewEntry.SETRANGE("Dimension 2 Value Code",xRec.Code);
                  ItemAnalysisViewBudgEntry.SETRANGE("Dimension 2 Value Code",xRec.Code);
                END;
              DimensionNo = 3:
                BEGIN
                  ItemAnalysisViewEntry.SETRANGE("Dimension 3 Value Code",xRec.Code);
                  ItemAnalysisViewBudgEntry.SETRANGE("Dimension 3 Value Code",xRec.Code);
                END;
            END;
            IF ItemAnalysisViewEntry.FIND('-') THEN
              REPEAT
                ItemAnalysisViewEntry2 := ItemAnalysisViewEntry;
                CASE TRUE OF
                  DimensionNo = 1:
                    ItemAnalysisViewEntry2."Dimension 1 Value Code" := Code;
                  DimensionNo = 2:
                    ItemAnalysisViewEntry2."Dimension 2 Value Code" := Code;
                  DimensionNo = 3:
                    ItemAnalysisViewEntry2."Dimension 3 Value Code" := Code;
                END;
                ItemAnalysisViewEntry.DELETE;
                ItemAnalysisViewEntry2.INSERT;
              UNTIL ItemAnalysisViewEntry.NEXT = 0;
            ItemAnalysisViewEntry.RESET;
            IF ItemAnalysisViewBudgEntry.FIND('-') THEN
              REPEAT
                ItemAnalysisViewBudgEntry2 := ItemAnalysisViewBudgEntry;
                CASE TRUE OF
                  DimensionNo = 1:
                    ItemAnalysisViewBudgEntry2."Dimension 1 Value Code" := Code;
                  DimensionNo = 2:
                    ItemAnalysisViewBudgEntry2."Dimension 2 Value Code" := Code;
                  DimensionNo = 3:
                    ItemAnalysisViewBudgEntry2."Dimension 3 Value Code" := Code;
                END;
                ItemAnalysisViewBudgEntry.DELETE;
                ItemAnalysisViewBudgEntry2.INSERT;
              UNTIL ItemAnalysisViewBudgEntry.NEXT = 0;
            ItemAnalysisViewBudgEntry.RESET;
          UNTIL ItemAnalysisView.NEXT = 0;
        ItemAnalysisView.RESET;
      END;
    END;

    BEGIN
    {
      /** @r IMH02 @d 02/03/11 @a CAP.JC @v IMH6.01.152 @s Gestion Analytique
          @c Ajout Champs 50000, "Dimension Repartition Code" */
      /** @r ISA01 @d 06/07/09 @a ISAT.ST @v ISA6.00.00.01 @s migration ISATECH +
          @c Ajout champs */
    }
    END.
  }
}