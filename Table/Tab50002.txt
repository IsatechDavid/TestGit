OBJECT Table 50002 Statistics Group
{
  OBJECT-PROPERTIES
  {
    Date=15/10/13;
    Time=18:18:56;
    Modified=Yes;
    Version List=IMH6.01.08;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               GetProviderSetup;
               IF "No." = '' THEN BEGIN
                 ProviderSetup.TESTFIELD("Statistics Group Nos.");
                 NoSeriesMgt.InitSeries(ProviderSetup."Statistics Group Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               StatisticsGroupMgt.OnInsert(Rec);
               CreateVendor;
               TouchRecord(TRUE);
             END;

    OnModify=BEGIN
               IF (Name <> xRec.Name) OR
                  ("Search Name" <> xRec."Search Name") OR
                  ("Name 2" <> xRec."Name 2") OR
                  (Address <> xRec.Address) OR
                  ("Address 2" <> xRec."Address 2") OR
                  (City <> xRec.City) OR
                  ("Post Code" <> xRec."Post Code") OR
                  (County <> xRec.County) OR
                  ("Country/Region Code" <> xRec."Country/Region Code") OR
                  ("Phone No." <> xRec."Phone No.") OR
                  ("Mobile Phone No. 2" <> xRec."Mobile Phone No. 2") OR
                  ("Mobile Phone No." <> xRec."Mobile Phone No.") OR
                  ("Territory Code" <> xRec."Territory Code") OR
                  ("Language Code" <> xRec."Language Code") OR
                  ("Fax No." <> xRec."Fax No.") OR
                  ("Business Phone No." <> xRec."Business Phone No.") OR
                  ("VAT Registration No." <> xRec."VAT Registration No.") OR
                  ("E-Mail" <> xRec."E-Mail") OR
                  ("E-Mail 2" <> xRec."E-Mail 2") OR
                  ("Home Page" <> xRec."Home Page") OR
                  ("Correspondence Type" <> xRec."Correspondence Type") OR
                  ("Salutation Code" <> xRec."Salutation Code") OR
                  ("VAT Registration No." <> xRec."VAT Registration No.") OR
                  //<<IMH06
                  (Exclusion <> xRec.Exclusion) OR
                  ("Temp. Exclusion" <> xRec."Temp. Exclusion")
                  //>>IMH06
               THEN BEGIN
                 //<<IMH06
                 IF (Exclusion <> xRec.Exclusion) THEN
                   StatisticsGroupMgt.UpdateExclusionProvider(Rec);
                 IF ("Temp. Exclusion" <> xRec."Temp. Exclusion") THEN
                   StatisticsGroupMgt.UpdateExclusionTempProvider(Rec);
                 //>>IMH06
                 MODIFY;
                 StatisticsGroupMgt.OnModify(Rec);
               END;

               TouchRecord(FALSE);
             END;

    OnDelete=VAR
               lProvider@1100281000 : Record 50000;
             BEGIN
               IF NOT CONFIRM(Text002) THEN
                 ERROR('');
               StatisticsGroupMgt.OnDelete(Rec);

               lProvider.SETCURRENTKEY("Statistics Group No.");
               lProvider.SETRANGE("Statistics Group No.","No.");
               IF lProvider.FINDSET THEN
                 REPEAT
                   lProvider.SetSkipConfirmStatGroup(TRUE);
                   lProvider.VALIDATE("Statistics Group No.", '');
                   lProvider.MODIFY(FALSE);
                 UNTIL lProvider.NEXT = 0;
             END;

    OnRename=BEGIN
               TouchRecord(FALSE);
             END;

    CaptionML=[ENU=Statistics Group;
               FRA=Groupe statistique];
    LookupFormID=Form50145;
    DrillDownFormID=Form50145;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Name;
                                                   CaptionML=[ENU=No.;
                                                              FRA=Nø] }
    { 2   ;   ;Name                ;Text50        ;OnValidate=VAR
                                                                ContBusRel@1001 : Record 5054;
                                                                Cust@1000 : Record 18;
                                                                Vend@1002 : Record 23;
                                                              BEGIN
                                                                IF ("Search Name" = UPPERCASE(xRec.Name)) OR ("Search Name" = '') THEN BEGIN
                                                                  "Search Name" := Name;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Name;
                                                              FRA=Raison sociale] }
    { 3   ;   ;Search Name         ;Code50        ;CaptionML=[ENU=Search Name;
                                                              FRA=Nom de recherche] }
    { 4   ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Business Name;
                                                              FRA=D‚nomination commerciale] }
    { 5   ;   ;Address             ;Text50        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity(
                                                                  City,
                                                                  "Post Code",
                                                                  "Country/Region Code");
                                                              END;

                                                   CaptionML=[ENU=Address;
                                                              FRA=Adresse] }
    { 6   ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              FRA=Adresse (2Šme ligne)] }
    { 7   ;   ;City                ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity(
                                                                  City,
                                                                  "Post Code",
                                                                  "Country/Region Code");
                                                                GetTerritoryCode;
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity(
                                                                City,
                                                                "Post Code",
                                                                "Country/Region Code",
                                                                TRUE);
                                                              GetTerritoryCode;
                                                            END;

                                                   CaptionML=[ENU=City;
                                                              FRA=Ville] }
    { 9   ;   ;Phone No.           ;Text30        ;OnValidate=BEGIN
                                                                PhoneStandardization.ValidatePhoneNo(
                                                                  DATABASE::"Statistics Group",FIELDNO("Phone No.") ,"Country/Region Code","Phone No.");
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              FRA=Nø t‚l‚phone] }
    { 10  ;   ;Mobile Phone No. 2  ;Text30        ;OnValidate=BEGIN
                                                                PhoneStandardization.ValidatePhoneNo(
                                                                  DATABASE::"Statistics Group",FIELDNO("Mobile Phone No. 2"),"Country/Region Code","Mobile Phone No. 2");
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Mobile Phone No. 2;
                                                              FRA=Nø t‚l‚phone mobile 2] }
    { 14  ;   ;Area Code           ;Code10        ;TableRelation=Area;
                                                   CaptionML=[ENU=Area Code;
                                                              FRA=Code d‚partement];
                                                   Editable=No }
    { 15  ;   ;Territory Code      ;Code10        ;TableRelation=Territory;
                                                   CaptionML=[ENU=IMH Country;
                                                              FRA=Zone IMH];
                                                   Editable=No }
    { 24  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              FRA=Code langue] }
    { 35  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   OnValidate=VAR
                                                                lCountryRegion@1100281000 : Record 9;
                                                              BEGIN
                                                                IF "Country/Region Code" <> '' THEN
                                                                  IF lCountryRegion.GET("Country/Region Code") THEN
                                                                    IF "Language Code" = '' THEN
                                                                      VALIDATE("Language Code", lCountryRegion."Language Code");
                                                              END;

                                                   CaptionML=[ENU=Country/Region Code;
                                                              FRA=Code pays];
                                                   Editable=No }
    { 38  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Adv. Comment Line" WHERE (Source Table ID=CONST(50000),
                                                                                                Source No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              FRA=Commentaires];
                                                   Editable=No }
    { 84  ;   ;Fax No.             ;Text30        ;OnValidate=BEGIN
                                                                PhoneStandardization.ValidatePhoneNo(
                                                                  DATABASE::"Statistics Group",FIELDNO("Fax No."),"Country/Region Code","Fax No.");
                                                              END;

                                                   CaptionML=[ENU=Fax No.;
                                                              FRA=Nø fax] }
    { 85  ;   ;Business Phone No.  ;Text30        ;OnValidate=BEGIN
                                                                PhoneStandardization.ValidatePhoneNo(
                                                                  DATABASE::"Statistics Group",FIELDNO("Business Phone No."),"Country/Region Code","Business Phone No.");
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Business Phone No.;
                                                              FRA=Nø t‚l‚phone affaire] }
    { 86  ;   ;VAT Registration No.;Text20        ;OnValidate=VAR
                                                                lVATRegNoFormat@1000 : Record 381;
                                                              BEGIN
                                                                lVATRegNoFormat.Test("VAT Registration No.","Country/Region Code","No.",DATABASE::"Statistics Group");
                                                              END;

                                                   CaptionML=[ENU=VAT Registration No.;
                                                              FRA=Nø TVA intracomm.] }
    { 89  ;   ;Picture             ;BLOB          ;CaptionML=[ENU=Picture;
                                                              FRA=Image];
                                                   SubType=Bitmap }
    { 91  ;   ;Post Code           ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(
                                                                  City,
                                                                  "Post Code",
                                                                  "Country/Region Code");
                                                                GetTerritoryCode;
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode(
                                                                City,
                                                                "Post Code",
                                                                "Country/Region Code",
                                                                TRUE);
                                                              GetTerritoryCode;
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              FRA=Code postal] }
    { 92  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              FRA=R‚gion] }
    { 102 ;   ;E-Mail              ;Text80        ;OnValidate=VAR
                                                                lEmailStandardization@1100281000 : Codeunit 50096;
                                                              BEGIN
                                                                IF ("Search E-Mail" = UPPERCASE(xRec."E-Mail")) OR ("Search E-Mail" = '') THEN BEGIN
                                                                  "Search E-Mail" := "E-Mail";
                                                                END;
                                                                lEmailStandardization.ValidateEmail("E-Mail");
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=E-Mail;
                                                              FRA=E-mail] }
    { 103 ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Home Page;
                                                              FRA=Site internet] }
    { 107 ;   ;No. Series          ;Code10        ;TableRelation="No. Series".Code;
                                                   CaptionML=[ENU=No. Series;
                                                              FRA=Souches de nø] }
    { 5061;   ;Mobile Phone No.    ;Text30        ;OnValidate=BEGIN
                                                                PhoneStandardization.ValidatePhoneNo(
                                                                  DATABASE::Contact,FIELDNO("Mobile Phone No."),"Country/Region Code","Mobile Phone No.");
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Mobile Phone No.;
                                                              FRA=Nø t‚l‚phone mobile] }
    { 5062;   ;Pager               ;Text30        ;CaptionML=[ENU=Pager;
                                                              FRA=Pager] }
    { 5100;   ;Correspondence Type ;Option        ;CaptionML=[ENU=Correspondence Type;
                                                              FRA=Moyen de communication privil‚gi‚];
                                                   OptionCaptionML=[ENU=" ,Mail,E-Mail,Fax";
                                                                    FRA=" ,Courrier,E-Mail,Fax"];
                                                   OptionString=[ ,Mail,E-Mail,Fax] }
    { 5101;   ;Salutation Code     ;Code10        ;TableRelation=Salutation.Code;
                                                   CaptionML=[ENU=Salutation Code;
                                                              FRA=Civilit‚] }
    { 5102;   ;Search E-Mail       ;Code80        ;CaptionML=[ENU=Search E-Mail;
                                                              FRA=E-mail de recherche] }
    { 5105;   ;E-Mail 2            ;Text80        ;OnValidate=VAR
                                                                lEmailStandardization@1100281000 : Codeunit 50096;
                                                              BEGIN
                                                                lEmailStandardization.ValidateEmail("E-Mail");
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=E-Mail 2;
                                                              FRA=E-mail 2] }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;ValidateTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
    { 54130;  ;NAF Code            ;Code10        ;TableRelation=Code.Code WHERE (Table ID=CONST(50000),
                                                                                  Field ID=CONST(54130));
                                                   OnValidate=VAR
                                                                lCode@1100281000 : Record 50079;
                                                              BEGIN
                                                                lCode.SETRANGE("Table ID",DATABASE::Provider);
                                                                lCode.SETRANGE("Field ID",54130);
                                                                IF NOT lCode.ISEMPTY THEN BEGIN
                                                                  lCode.FINDFIRST;
                                                                  "NAF Activity" := lCode.Description;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=NAF Code;
                                                              FRA=Code NAF] }
    { 54131;  ;NAF Activity        ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Code.Description WHERE (Table ID=CONST(50000),
                                                                                              Field ID=CONST(54130),
                                                                                              Code=FIELD(NAF Code)));
                                                   CaptionML=[ENU=NAF Activity;
                                                              FRA=Activit‚ NAF];
                                                   Editable=No }
    { 54132;  ;SIREN No.           ;Code9         ;OnValidate=VAR
                                                                lProviderMgt@1100281000 : Codeunit 50018;
                                                              BEGIN
                                                                lProviderMgt.ValidateSIRENNo("SIREN No.", '', TRUE);
                                                              END;

                                                   CaptionML=[ENU=SIREN No.;
                                                              FRA=Nø SIREN] }
    { 54135;  ;Registration No.    ;Code20        ;OnValidate=VAR
                                                                lProviderMgt@1100281000 : Codeunit 50018;
                                                              BEGIN
                                                                lProviderMgt.ValidateSIRETNo("Registration No.", TRUE);
                                                                IF "Registration No." <> '' THEN
                                                                  VALIDATE("SIREN No.", COPYSTR("Registration No.", 1, 9));
                                                              END;

                                                   CaptionML=[ENU=Registration No.;
                                                              FRA=Nø SIRET] }
    { 54200;  ;Temp. Exclusion     ;Boolean       ;OnValidate=BEGIN
                                                                IF "Temp. Exclusion" THEN BEGIN
                                                                  TESTFIELD("Temp. Exclusion Reason Code");
                                                                  TESTFIELD("Temp. Exclusion Start Date");
                                                                  //<<IMH05.ISAT.EBA
                                                                  //TESTFIELD("Temp. Exclusion Process Code");
                                                                  //TESTFIELD("Temp. Exclu. Proc. Status No.");
                                                                  //>>IMH05.ISAT.EBA

                                                                  //TESTFIELD("Temp. Exclusion End Date"); IMH24 isat.nfo
                                                                // <<IMH48.ISAT.MA
                                                                  TESTFIELD("Temp. Exclusion End Date");
                                                                  IF "Temp. Exclusion Start Date" > "Temp. Exclusion End Date" THEN
                                                                    ERROR(Text030,FIELDCAPTION("Temp. Exclusion Start Date"),FIELDCAPTION("Temp. Exclusion End Date"));
                                                                // >>IMH48.ISAT.MA
                                                                END ELSE BEGIN
                                                                  "Temp. Exclusion Reason Code" := '';
                                                                  "Temp. Exclusion Start Date" := 0D;
                                                                  "Temp. Exclusion End Date" := 0D;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Temp. Exclusion;
                                                              FRA=Exclusion temporaire] }
    { 54201;  ;Temp. Exclusion Reason Code;Code10 ;TableRelation=Code.Code WHERE (Table ID=CONST(50000),
                                                                                  Field ID=CONST(54201));
                                                   OnValidate=BEGIN
                                                                IF "Temp. Exclusion Reason Code" = '' THEN BEGIN
                                                                  VALIDATE("Temp. Exclusion",FALSE);
                                                                END ELSE BEGIN
                                                                  //<<IMH05.ISAT.EBA
                                                                  //IF NOT CONFIRM(Text001) THEN BEGIN
                                                                  //  ERROR('');
                                                                  //END;
                                                                  //>>IMH05.ISAT.EBA
                                                                  IF "Temp. Exclusion Start Date" = 0D THEN
                                                                    "Temp. Exclusion Start Date" := WORKDATE;
                                                                  IF "Temp. Exclusion End Date" = 0D THEN
                                                                    "Temp. Exclusion End Date" := WORKDATE + 1;
                                                                  VALIDATE("Temp. Exclusion", TRUE);
                                                                END;
                                                                //StatisticsGroupMgt.UpdateExclusionTempProvider(Rec);
                                                              END;

                                                   CaptionML=[ENU=Temp. Exclusion Reason Code;
                                                              FRA=Motif exclusion temporaire] }
    { 54202;  ;Temp. Exclusion Start Date;Date    ;OnValidate=BEGIN
                                                                IF "Temp. Exclusion Start Date" = 0D THEN BEGIN
                                                                  VALIDATE("Temp. Exclusion",FALSE);
                                                                END ELSE BEGIN
                                                                END;
                                                                //StatisticsGroupMgt.UpdateExclusionTempProvider(Rec);
                                                              END;

                                                   CaptionML=[ENU=Temp. Exclusion Start Date;
                                                              FRA=Date d‚but exclusion temporaire] }
    { 54203;  ;Temp. Exclusion End Date;Date      ;OnValidate=BEGIN
                                                                //StatisticsGroupMgt.UpdateExclusionTempProvider(Rec);
                                                              END;

                                                   CaptionML=[ENU=Temp. Exclusion End Date;
                                                              FRA=Date fin exclusion temporaire] }
    { 54204;  ;Temp. Exclusion Reason Desc.;Text50;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Code.Description WHERE (Table ID=CONST(50000),
                                                                                              Field ID=CONST(54201),
                                                                                              Code=FIELD(Temp. Exclusion Reason Code)));
                                                   CaptionML=[ENU=Temp. Exclusion Reason Desc.;
                                                              FRA=Description motif exclusion temp.];
                                                   Editable=No }
    { 54206;  ;Temp. Exclusion Process Code;Code10;TableRelation=Process.Code WHERE (Source Table No.=CONST(50000));
                                                   CaptionML=[ENU=Temp. Exclusion Process Code;
                                                              FRA=Code processus exclusion temp.] }
    { 54207;  ;Temp. Exclu. Proc. Status No.;Integer;
                                                   TableRelation="Process Status"."Status No." WHERE (Process Code=FIELD(Temp. Exclusion Process Code));
                                                   CaptionML=[ENU=Temp. Exclu. Proc. Status No.;
                                                              FRA=Nø statut processus exclusion temp.];
                                                   BlankZero=Yes }
    { 54208;  ;Temp. Exclu. Proc. Status Desc;Text30;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Process Status".Description WHERE (Process Code=FIELD(Temp. Exclusion Process Code),
                                                                                                          Status No.=FIELD(Temp. Exclu. Proc. Status No.)));
                                                   CaptionML=[ENU=Temp. Exclu. Proc. Status Desc;
                                                              FRA=Statut processus exclusion temp.];
                                                   Editable=No }
    { 54210;  ;Exclusion           ;Boolean       ;OnValidate=BEGIN
                                                                IF Exclusion THEN BEGIN
                                                                  TESTFIELD("Exclusion Reason Code");
                                                                  TESTFIELD("Exclusion Date");
                                                                  //TESTFIELD("Exclusion Process Code");
                                                                  TESTFIELD("Exclu. Proc. Status No.");
                                                                END ELSE BEGIN
                                                                  "Exclusion Reason Code" := '';
                                                                  "Exclusion Date" := 0D;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Permanent Exclusion;
                                                              FRA=Exclusion d‚finitive] }
    { 54211;  ;Exclusion Reason Code;Code10       ;TableRelation=Code.Code WHERE (Table ID=CONST(50000),
                                                                                  Field ID=CONST(54211));
                                                   OnValidate=BEGIN
                                                                IF "Exclusion Reason Code" = '' THEN BEGIN
                                                                  VALIDATE(Exclusion,FALSE);
                                                                END ELSE BEGIN
                                                                  //<<IMH05.ISAT.EBA
                                                                  //IF NOT Exclusion THEN
                                                                  //  IF NOT CONFIRM(Text001) THEN BEGIN
                                                                  //    ERROR('');
                                                                  //  END;
                                                                  //>>IMH05.ISAT.EBA
                                                                  IF "Exclusion Date" = 0D THEN
                                                                    "Exclusion Date" := WORKDATE;
                                                                  Exclusion := "Exclusion Date" <> 0D;
                                                                END;
                                                                //StatisticsGroupMgt.UpdateExclusionProvider(Rec);
                                                              END;

                                                   CaptionML=[ENU=Perm. Reason Code Exclusion;
                                                              FRA=Motif exclusion d‚finitive] }
    { 54212;  ;Exclusion Date      ;Date          ;TableRelation=IF (Exclusion=CONST(Yes)) Date."Period Start" WHERE (Period Start=FILTER(<>''));
                                                   OnValidate=BEGIN
                                                                IF "Exclusion Date" = 0D THEN BEGIN
                                                                  VALIDATE(Exclusion,FALSE);
                                                                END ELSE BEGIN
                                                                  VALIDATE(Exclusion, TRUE);
                                                                END;
                                                                //StatisticsGroupMgt.UpdateExclusionProvider(Rec);
                                                              END;

                                                   CaptionML=[ENU=Permanent Exclusion Date;
                                                              FRA=Date exclusion d‚finitive] }
    { 54213;  ;Exclusion Reason Description;Text50;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Code.Description WHERE (Table ID=CONST(50000),
                                                                                              Field ID=CONST(54211),
                                                                                              Code=FIELD(Exclusion Reason Code)));
                                                   CaptionML=[ENU=Perm. Exclusion Reason Description;
                                                              FRA=Description motif exclusion d‚finitive];
                                                   Editable=No }
    { 54216;  ;Exclusion Process Code;Code10      ;TableRelation=Process.Code WHERE (Source Table No.=CONST(50000));
                                                   CaptionML=[ENU=Exclusion Process Code;
                                                              FRA=Code processus exclusion d‚finitive] }
    { 54217;  ;Exclu. Proc. Status No.;Integer    ;TableRelation="Process Status"."Status No." WHERE (Process Code=FIELD(Exclusion Process Code));
                                                   CaptionML=[ENU=Exclu. Proc. Status No.;
                                                              FRA=Nø statut processus exclusion d‚finitive];
                                                   BlankZero=Yes }
    { 54218;  ;Exclu. Proc. Status Desc;Text30    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Process Status".Description WHERE (Process Code=FIELD(Exclusion Process Code),
                                                                                                          Status No.=FIELD(Exclu. Proc. Status No.)));
                                                   CaptionML=[ENU=Exclu. Proc. Status Desc;
                                                              FRA=Statut processus exclusion d‚finitive];
                                                   Editable=No }
    { 54500;  ;Black List          ;Boolean       ;OnValidate=BEGIN
                                                                IF "Black List" THEN BEGIN
                                                                  TESTFIELD("Black List Reason Code");
                                                                  TESTFIELD("Black List Date");
                                                                  TESTFIELD("Black List Process Code");
                                                                  TESTFIELD("Black List Proc. Status No.");
                                                                END ELSE BEGIN
                                                                  "Black List Reason Code" := '';
                                                                  "Black List Date" := 0D;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Black List;
                                                              FRA=Black List] }
    { 54501;  ;Black List Reason Code;Code10      ;TableRelation=Code.Code WHERE (Table ID=CONST(50000),
                                                                                  Field ID=CONST(54501));
                                                   OnValidate=BEGIN
                                                                IF "Black List Reason Code" = '' THEN BEGIN
                                                                  VALIDATE("Black List",FALSE);
                                                                END ELSE BEGIN
                                                                  //<<IMH05.ISAT.EBA
                                                                  //IF NOT CONFIRM(Text001) THEN BEGIN
                                                                  //  ERROR('');
                                                                  //>>IMH05.ISAT.EBA

                                                                  IF "Black List Date" = 0D THEN
                                                                    "Black List Date" := WORKDATE;
                                                                  "Black List" := "Black List Date" <> 0D;
                                                                END;
                                                                //StatisticsGroupMgt.UpdateBlackListProvider(Rec);
                                                              END;

                                                   CaptionML=[ENU=Black List Reason Code;
                                                              FRA=Motif Black List] }
    { 54502;  ;Black List Date     ;Date          ;OnValidate=BEGIN
                                                                IF "Black List Date" = 0D THEN BEGIN
                                                                  VALIDATE("Black List",FALSE);
                                                                END ELSE BEGIN
                                                                  VALIDATE("Black List", TRUE);
                                                                END;
                                                                //StatisticsGroupMgt.UpdateBlackListProvider(Rec);
                                                              END;

                                                   CaptionML=[ENU=Black List Date;
                                                              FRA=Date Black List] }
    { 54503;  ;Black List Reason Desc.;Text50     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Code.Description WHERE (Table ID=CONST(50000),
                                                                                              Field ID=CONST(54501),
                                                                                              Code=FIELD(Black List Reason Code)));
                                                   CaptionML=[ENU=Black List Reason Desc.;
                                                              FRA=Description motif black list];
                                                   Editable=No }
    { 54506;  ;Black List Process Code;Code10     ;TableRelation=Process.Code WHERE (Source Table No.=CONST(50000));
                                                   CaptionML=[ENU=Black List Process Code;
                                                              FRA=Code processus black list] }
    { 54507;  ;Black List Proc. Status No.;Integer;TableRelation="Process Status"."Status No." WHERE (Process Code=FIELD(Black List Process Code));
                                                   CaptionML=[ENU=Black List Proc. Status No.;
                                                              FRA=Nø statut processus black list];
                                                   BlankZero=Yes }
    { 54508;  ;Black List Proc. Status Desc;Text30;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Process Status".Description WHERE (Process Code=FIELD(Black List Process Code),
                                                                                                          Status No.=FIELD(Black List Proc. Status No.)));
                                                   CaptionML=[ENU=Black List Proc. Status Desc;
                                                              FRA=Statut processus black list];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Search Name                              }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Name                                 }
  }
  CODE
  {
    VAR
      PostCode@1100281000 : Record 225;
      Area@1100281010 : Record 284;
      PhoneStandardization@1100281001 : Codeunit 50099;
      ProviderSetup@1100281003 : Record 50011;
      ProviderSetupOK@1100281002 : Boolean;
      NoSeriesMgt@1100281004 : Codeunit 396;
      MarketingSetup@1100281007 : Record 5079;
      MarketingSetupOK@1100281006 : Boolean;
      StatisticsGroupMgt@1100281005 : Codeunit 50126;
      Text001@1100281011 : TextConst 'ENU=This modif will modify all the providers of this statistics group. Do you want to continue?;FRA=Cette modification va modifier l''ensemble des prestataires associ‚s … ce groupement statistique. Souhaitez-vous continuer?';
      Text002@1100281009 : TextConst 'ENU=This delele will modify all the providers of this statistics group. Do you want to continue?;FRA=La suppression va mettre … z‚ro l''ensemble des fournisseurs … payer des prestataires associ‚s. Souhaitez-vous continuer?';
      Text030@1100281008 : TextConst 'ENU=%1 must be earlier than %2.;FRA=%1 doit ˆtre inf‚rieur … %2.';

    PROCEDURE GetProviderSetup@1100281005();
    BEGIN
      //IMH05
      IF ProviderSetupOK THEN BEGIN
        EXIT;
      END;

      ProviderSetup.GET;
      ProviderSetupOK := TRUE;
    END;

    PROCEDURE GetSpecializationList@1100281000(VAR pProviderSpecializationTemp@1100281002 : Record 50006);
    VAR
      lProviderTemp@1100281000 : TEMPORARY Record 50000;
      lProviderSpecialization@1100281001 : Record 50006;
    BEGIN
      // IMH04.isat.PC
      // Donne la liste des specialit‚s du groupement

      SelectProvider(lProviderTemp,"No.");
      IF NOT lProviderTemp.FINDSET THEN
        EXIT;
      REPEAT
        lProviderSpecialization.SETRANGE("Provider No.",lProviderTemp."No.");
        IF lProviderSpecialization.FINDSET THEN BEGIN
          REPEAT
            pProviderSpecializationTemp := lProviderSpecialization;
            pProviderSpecializationTemp.INSERT;
          UNTIL lProviderSpecialization.NEXT = 0;
        END;
      UNTIL lProviderTemp.NEXT = 0;
    END;

    PROCEDURE ShowProviderSpecialitiesList@1100281007();
    VAR
      lProviderSpecializationTmp@1100281000 : TEMPORARY Record 50006;
      lProviderSpecTempList@1100281003 : Form 50268;
    BEGIN
      GetSpecializationList(lProviderSpecializationTmp);

      lProviderSpecTempList.SetProviderNoVisible(TRUE);
      lProviderSpecTempList.LoadTable(lProviderSpecializationTmp);
      lProviderSpecTempList.RUN;
    END;

    PROCEDURE GetGeoAbilitySetupList@1100281002(VAR pAbilityGeoProviderSetupTemp@1100281002 : Record 50033);
    VAR
      lProviderTemp@1100281001 : TEMPORARY Record 50000;
      lAbilityGeoProviderSetup@1100281000 : Record 50033;
    BEGIN
      // IMH04.isat.PC
      // Liste la comp‚tence geo du groupement

      SelectProvider(lProviderTemp,"No.");
      IF NOT lProviderTemp.FINDSET THEN
        EXIT;
      REPEAT
        lAbilityGeoProviderSetup.SETRANGE("Provider No.",lProviderTemp."No.");
        IF lAbilityGeoProviderSetup.FINDSET THEN BEGIN
          REPEAT
            pAbilityGeoProviderSetupTemp := lAbilityGeoProviderSetup;
            pAbilityGeoProviderSetupTemp.INSERT;
          UNTIL lAbilityGeoProviderSetup.NEXT = 0;
        END;
      UNTIL lProviderTemp.NEXT = 0;
    END;

    PROCEDURE ShowAbilityGeoProv@1100281001();
    VAR
      lAbilityGeoProviderSetupTmp@1100281000 : TEMPORARY Record 50033;
      lAbilityGeoProvTmpList@1100281003 : Form 50269;
    BEGIN
      GetGeoAbilitySetupList(lAbilityGeoProviderSetupTmp);

      lAbilityGeoProvTmpList.LoadTable(lAbilityGeoProviderSetupTmp);
      lAbilityGeoProvTmpList.SetProviderNoVisible(TRUE);
      lAbilityGeoProvTmpList.RUN;
    END;

    PROCEDURE SelectProvider@1100281004(VAR pProvider@1100281000 : Record 50000;pStatisticGroupNo@1100281002 : Code[20]);
    VAR
      lProvider@1100281001 : Record 50000;
    BEGIN
      // IMH04.isat.PC
      // Permet de s‚lectionner les providers d'un groupement statistique

      lProvider.SETCURRENTKEY("Statistics Group No.");
      lProvider.SETRANGE("Statistics Group No.","No.");
      IF lProvider.ISEMPTY THEN
        EXIT;

      lProvider.FINDSET;
      REPEAT
        pProvider := lProvider;
        pProvider.INSERT;
      UNTIL lProvider.NEXT  = 0;
    END;

    PROCEDURE CreateVendor@1100281011();
    VAR
      lContact@1001 : Record 5050;
      lGeneralLedgerSetup@1100281001 : Record 98;
      lVendor@1100281002 : Record 23;
      lDataTemplateHeader@1100281005 : Record 8618;
      lTemplateMgt@1100281000 : Codeunit 8612;
      lRecRef@1100281003 : RecordRef;
      lVendorNo@1100281004 : Code[20];
      lProvider@1100281006 : Record 50000;
      lProviderVendorNo@1100281007 : Code[20];
    BEGIN
      //IMH05
      lGeneralLedgerSetup.GET;
      lGeneralLedgerSetup.TESTFIELD("IMH Vendor Template");
      lDataTemplateHeader.GET(lGeneralLedgerSetup."IMH Vendor Template");
      lContact.GET("No.");
      lContact.CreateVendor;
      lVendorNo := GetVendorNo("No.");
      IF lVendor.GET(lVendorNo) THEN BEGIN
        lRecRef.GETTABLE(lVendor);
        lTemplateMgt.UpdateRecord(lDataTemplateHeader,lRecRef);
      END;

      lProvider.SETCURRENTKEY("Statistics Group No.");
      lProvider.SETRANGE("Statistics Group No.", "No.");
      IF lProvider.FINDSET THEN
        REPEAT
          lProviderVendorNo := lProvider.GetVendorNo(lProvider."No.");
          IF lVendor.GET(lProviderVendorNo) THEN BEGIN
            IF lVendor."Pay-to Vendor No." <> lVendorNo THEN BEGIN
              lVendor.VALIDATE("Pay-to Vendor No.", lVendorNo);
              lVendor.MODIFY(TRUE);
            END;
          END;
        UNTIL lProvider.NEXT = 0;
    END;

    PROCEDURE GetVendorNo@1100281023(pStatisticsGroupNo@1100281000 : Code[20]) rValue : Code[20];
    VAR
      lContactBusinessRelation@1100281001 : Record 5054;
    BEGIN
      //IMH05
      // Permet d'avoir le nø de fournisseur associ‚ au prestataire
      rValue := '';
      IF pStatisticsGroupNo = '' THEN
        EXIT;

      GetMarketingSetup;
      MarketingSetup.TESTFIELD("Bus. Rel. Code for Vendors");
      IF NOT lContactBusinessRelation.GET(pStatisticsGroupNo,MarketingSetup."Bus. Rel. Code for Vendors") THEN BEGIN
        EXIT;
      END;
      IF lContactBusinessRelation."Link to Table" <> lContactBusinessRelation."Link to Table"::Vendor THEN BEGIN
        EXIT;
      END;

      EXIT(lContactBusinessRelation."No.");
    END;

    PROCEDURE GetMarketingSetup@1100281024();
    BEGIN
      //IMH05
      IF MarketingSetupOK THEN BEGIN
        EXIT;
      END;

      MarketingSetupOK := TRUE;
      MarketingSetup.GET;
    END;

    PROCEDURE ShowVendorCard@1100281028(pStatisticsGroupNo@1100281003 : Code[20]);
    VAR
      lVendor@1100281000 : Record 23;
      lVendorCard@1100281001 : Form 26;
    BEGIN
      //IMH05
      // Permet d'avoir la fiche fournisseur du prestataire

      IF lVendor.GET(GetVendorNo(pStatisticsGroupNo)) THEN BEGIN
        lVendor.FILTERGROUP(2);
        lVendor.SETRECFILTER;
        lVendor.FILTERGROUP(0);
        CLEAR(lVendorCard);
        lVendorCard.SETTABLEVIEW(lVendor);
        lVendorCard.EDITABLE(FALSE);
        lVendorCard.RUNMODAL;
      END;
    END;

    PROCEDURE ShowContact@1();
    VAR
      lContactBusinessRelation@1000 : Record 5054;
      lContact@1001 : Record 5050;
      lProviderContactUpdate@1100281000 : Codeunit 50010;
    BEGIN
      IF "No." = '' THEN BEGIN
        EXIT;
      END;

      lContactBusinessRelation.SETCURRENTKEY("Link to Table","No.");
      lContactBusinessRelation.SETRANGE("Link to Table",lContactBusinessRelation."Link to Table"::"Statistics Group");
      lContactBusinessRelation.SETRANGE("No.","No.");
      IF NOT lContactBusinessRelation.FINDFIRST THEN BEGIN
        StatisticsGroupMgt.InsertNewContact(Rec,FALSE);
        lContactBusinessRelation.FINDFIRST;
      END;
      COMMIT;

      lContact.SETCURRENTKEY("Company Name","Company No.",Type,Name);
      lContact.SETRANGE("Company No.",lContactBusinessRelation."Contact No.");
      lContact.SETRANGE(Type,lContact.Type::Company);
      lContact.SETRANGE("Service Contact",lContact."Service Contact"::"Statistics Group");
      FORM.RUN(FORM::"Contact Card",lContact);
    END;

    PROCEDURE GetTerritoryCode@1100281003();
    BEGIN
      IF NOT Area.GET(COPYSTR("Post Code",1,2)) THEN BEGIN
        EXIT;
      END;
      "Territory Code" := Area."IMH Territory Code";
    END;

    PROCEDURE TouchRecord@1100281006(pInsert@1100281000 : Boolean);
    BEGIN
      //IMH05
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;

      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    BEGIN
    {
      /** @r IMH07 @d 15/10/13 @a ISAT.ST @v IMH6.01.353 @s Reorganisation region IMH @h 4760 @c Renommage CR / AR / R‚gion */
      /** @r IHM06 @d 15/09/11 @a ISAT.LLT @v IMH6.01.029 @s Statistiques @c Gestion exclusion */
      /** @r IHM05 @d 07/09/11 @a ISAT.EBA @v IMH6.01.029 @s Statistiques @c finalisation */
      /** @r IHM53 @d 24/06/11 @a ISAT.ZW @v IMH6.01.029 @s Statistiques @c finalisation */
      /** @r IHM03 @d 22/06/11 @a ISAT.PC @v IMH6.01.029 @s Statistiques
          @c Ajout fonction GetSpecializationList, SelectProvider, GetGeoAbilitySetupList, CreateVendor */
      /** @r IHM02 @d 01/06/11 @a ISAT.MA @v IMH6.01.029 @s Statistiques @c Ajout cl‚ sur Description */
      /** @r IHM01 @d 23/09/10 @a ISAT.PC @v IMH6.01.029 @s Statistiques @c Creation */
    }
    END.
  }
}