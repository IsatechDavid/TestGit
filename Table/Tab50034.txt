OBJECT Table 50034 Campaign Provider Setup
{
  OBJECT-PROPERTIES
  {
    Date=25/09/12;
    Time=15:02:44;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lProvider@1000000000 : Record 50000;
               lContact@1000000001 : Record 5050;
               lCampProvSpe@1100281000 : Record 50036;
               lProvSpe@1100281001 : Record 50006;
             BEGIN
               IF lProvider.GET("No.") THEN BEGIN
                 lContact.SETRANGE("No.",lProvider."No.");
                 lContact.SETRANGE("Preferred Contact DGS",TRUE);
                 IF lContact.FINDFIRST() THEN BEGIN
                   "Phone No." := lContact."Phone No.";
                   "Mobile Phone No." := lContact."Mobile Phone No.";
                   "Fax No." := lContact."Fax No."; //IMH06
                   City := lContact.City;
                   "Post Code" := lContact."Post Code";
                   "Geo. Reference Code" := lContact."Geo. Reference Code";
                   "E-Mail" := lContact."E-Mail";
                   "Contact No." :=lContact."No.";
                 END ELSE BEGIN
                   "Phone No." := lProvider."Phone No.";
                   "Mobile Phone No." := lProvider."Mobile Phone No.";
                   "Fax No." := lProvider."Fax No."; //IMH06
                   City := lProvider.City;
                   "Post Code" := lProvider."Post Code";
                   "Geo. Reference Code" := lProvider."Geo. Reference Code";
                   "E-Mail" := lProvider."E-Mail";
                   "Contact No." := lProvider."No.";
                 END;
                 CreateAbilityCampGeoLine; //IMH07
               END;
               {
               lCampProvSpe.SETRANGE("Document Type","No.");
               lCampProvSpe.SETRANGE("User ID",USERID);
               lCampProvSpe.DELETEALL();
               lProvSpe.SETRANGE("Provider No.","No.");
               IF lProvSpe.FINDSET() THEN
                 REPEAT
                   lCampProvSpe."Document Type" := "No.";
                   lCampProvSpe."No."
                   lCampProvSpe."User ID" := USERID;
                   lCampProvSpe."Specialization Code" := lProvSpe."Specialization Code";
                   lCampProvSpe.INSERT();
                 UNTIL lProvSpe.NEXT()=0;
               }
             END;

    CaptionML=[ENU=Campaign Provider Setup;
               FRA=ParamŠtre campagne prestataire];
    LookupFormID=Form50313;
    DrillDownFormID=Form50313;
  }
  FIELDS
  {
    { 1   ;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   CaptionML=[ENU=Campaign No.;
                                                              FRA=Nø d'evŠnement exceptionnel] }
    { 2   ;   ;No.                 ;Code20        ;TableRelation=Provider;
                                                   CaptionML=[ENU=Provider No.;
                                                              FRA=Nø prestataire] }
    { 10  ;   ;Interv. Maximum     ;Integer       ;CaptionML=[ENU=Interv. Maximum;
                                                              FRA=Maximum d'interventions] }
    { 12  ;   ;CR Call             ;Boolean       ;CaptionML=[ENU=CR Call;
                                                              FRA=Appel CR] }
    { 13  ;   ;Campaign Exclusion  ;Boolean       ;CaptionML=[ENU=Campaign Exclusion;
                                                              FRA=Exclu ‚venement climatique] }
    { 14  ;   ;Phone No.           ;Text30        ;OnValidate=BEGIN
                                                                PhoneStandardization.ValidatePhoneNo(
                                                                  DATABASE::Provider,FIELDNO("Phone No.") ,"Country/Region Code","Phone No.");
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              FRA=Nø t‚l‚phone] }
    { 15  ;   ;Mobile Phone No.    ;Text30        ;OnValidate=BEGIN
                                                                PhoneStandardization.ValidatePhoneNo(
                                                                  DATABASE::Contact,FIELDNO("Mobile Phone No."),"Country/Region Code","Mobile Phone No.");
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Mobile Phone No.;
                                                              FRA=Nø t‚l‚phone mobile] }
    { 16  ;   ;E-Mail              ;Text80        ;OnValidate=VAR
                                                                lEmailStandardization@1100281000 : Codeunit 50096;
                                                              BEGIN
                                                                "E-Mail" := LOWERCASE("E-Mail");
                                                                lEmailStandardization.ValidateEmail("E-Mail"); //IMH19
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=E-Mail;
                                                              FRA=E-mail] }
    { 17  ;   ;Contact No.         ;Code10        ;OnLookup=VAR
                                                              lContactBusinessRelation@1000000000 : Record 5054;
                                                              lContact@1000000001 : Record 5050;
                                                            BEGIN
                                                              lContactBusinessRelation.SETCURRENTKEY("Link to Table","No.");
                                                              lContactBusinessRelation.SETRANGE("Link to Table",lContactBusinessRelation."Link to Table"::Provider);
                                                              lContactBusinessRelation.SETRANGE("No.","No.");
                                                              IF NOT lContactBusinessRelation.FINDFIRST THEN   EXIT;
                                                              lContact.SETCURRENTKEY("Company Name","Company No.",Type,Name);
                                                              lContact.SETRANGE("Company No.",lContactBusinessRelation."Contact No.");
                                                              lContact.SETRANGE(Type,lContact.Type::Company);
                                                              lContact.SETRANGE("Service Contact",lContact."Service Contact"::Provider);
                                                              FORM.RUN(FORM::"Contact Card",lContact);
                                                            END;

                                                   CaptionML=FRA=Nø contact }
    { 18  ;   ;Correspondence Type ;Option        ;CaptionML=[ENU=Correspondence Type;
                                                              FRA=Moyen de communication privil‚gi‚];
                                                   OptionCaptionML=[ENU=" ,Mail,E-Mail,Fax";
                                                                    FRA=" ,Courrier,E-Mail,Fax"];
                                                   OptionString=[ ,Mail,E-Mail,Fax] }
    { 19  ;   ;City                ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code", "Country/Region Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity(City,"Post Code","Country/Region Code", TRUE);
                                                              "Geo. Reference Code" := PostCode.GetReferenceGeoCode("Post Code",City);
                                                            END;

                                                   CaptionML=[ENU=City;
                                                              FRA=Ville] }
    { 20  ;   ;Post Code           ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code", "Country/Region Code");      //IMH11 Ajout Code pays
                                                                "Geo. Reference Code" := PostCode.GetReferenceGeoCode("Post Code",City);
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode(City,"Post Code","Country/Region Code",TRUE);    //IMH11 Ajout Code pays
                                                              "Geo. Reference Code" := PostCode.GetReferenceGeoCode("Post Code",City);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              FRA=Code postal] }
    { 21  ;   ;Geo. Reference Code ;Code10        ;TableRelation="Geographical Reference".Code;
                                                   CaptionML=[ENU=Geo. Reference Code;
                                                              FRA=Code de r‚f‚rence g‚ographique] }
    { 22  ;   ;Archived            ;Boolean       ;CaptionML=[ENU=Archived;
                                                              FRA=Archiv‚] }
    { 23  ;   ;Fax No.             ;Text30        ;OnValidate=BEGIN
                                                                //IMH06
                                                                PhoneStandardization.ValidatePhoneNo(
                                                                  DATABASE::Provider,FIELDNO("Fax No."),"Country/Region Code","Fax No.");
                                                              END;

                                                   CaptionML=[ENU=Fax No.;
                                                              FRA=Nø fax] }
    { 35  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              FRA=Code pays/r‚gion] }
    { 50000;  ;Provider Name       ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Provider.Name WHERE (No.=FIELD(No.)));
                                                   CaptionML=[ENU=Provider Name;
                                                              FRA=Nom prestataire];
                                                   Editable=No }
    { 50001;  ;Contact Name        ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Contact No.)));
                                                   CaptionML=[ENU=Contact Name;
                                                              FRA=Nom contact];
                                                   Editable=No }
    { 50010;  ;Consulted           ;Boolean       ;CaptionML=[ENU=Consulted;
                                                              FRA=Consult‚] }
    { 54043;  ;Current Service Interv. Count;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Service Intervention Line" WHERE (Provider No.=FIELD(No.),
                                                                                                        Campaign No.=FIELD(Campaign No.),
                                                                                                        Intervention Status=FILTER(' '|InProgress|Suspended),
                                                                                                        Closed=CONST(No)));
                                                   CaptionML=[ENU=Current Service Interv. Count;
                                                              FRA=Nombre d'interventions en cours];
                                                   Editable=No }
    { 54044;  ;Response Time       ;Integer       ;CaptionML=[ENU=Response Time;
                                                              FRA=D‚lai d'intervention] }
  }
  KEYS
  {
    {    ;Campaign No.,No.                        ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PhoneStandardization@1000000000 : Codeunit 50099;
      PostCode@1000000001 : Record 225;

    PROCEDURE CreateAbilityCampGeoLine@1000000000();
    VAR
      lAbilityGeoProviderSetup@1000000000 : Record 50033;
      lAbilityCampGeoProvSetup@1000000001 : Record 50037;
    BEGIN
      //IMH07
      IF "Campaign No." = '' THEN
        EXIT;
      IF "No." = '' THEN
        EXIT;

      lAbilityGeoProviderSetup.SETRANGE("Provider No.", "No.");
      lAbilityGeoProviderSetup.SETRANGE("Specialization Code", '');
      lAbilityGeoProviderSetup.SETRANGE(Standard, TRUE);
      IF lAbilityGeoProviderSetup.FINDSET THEN
        REPEAT
          lAbilityCampGeoProvSetup."Campaign No." := "Campaign No.";
          lAbilityCampGeoProvSetup."Provider No." := "No.";
          lAbilityCampGeoProvSetup."Start Reference Code" := lAbilityGeoProviderSetup."Start Reference Code";
          lAbilityCampGeoProvSetup."Setup Type" := lAbilityGeoProviderSetup."Setup Type";
          lAbilityCampGeoProvSetup."Start Reference Text" := lAbilityGeoProviderSetup."Start Reference Text";
          lAbilityCampGeoProvSetup."Distance (km)" := lAbilityGeoProviderSetup."Distance (km)";
          lAbilityCampGeoProvSetup.Exclusion := lAbilityGeoProviderSetup."Standard Exclusion";
          IF lAbilityCampGeoProvSetup.INSERT(TRUE) THEN;
        UNTIL lAbilityGeoProviderSetup.NEXT = 0;
    END;

    PROCEDURE PhoneNoAssistEdit@1000000002(pPhoneNo@1100281000 : Text[30]);
    VAR
      lCTIMgt@1100281001 : Codeunit 50138;
    BEGIN
      // IMH09
      IF pPhoneNo <> '' THEN BEGIN
        lCTIMgt.MakeCall(pPhoneNo);
      END;
    END;

    BEGIN
    {
      /** @r IMH09 @d 25/09/12 @a ISAT.ZW @v IMH6.01.214 @s Ev‚nement climatique @h 3404  @c Correction */
      /** @r IMH08 @d 30/05/11 @a ISAT.ZW @v IMH6.01.028 @s EVC   @h mantis 3534
          @c Ajout‚ champ Consult‚ */
      /** @r IMH07 @d 16/05/11 @a ISAT.ZW @v IMH6.01.028 @s EVC   @h mantis 3393
          @c ramener les lignes Comp GEO du presta sur l'EVC */
      /** @r IMH06 @d 24/04/11 @a ISAT.ZW @v IMH6.01.028 @s EVC   @h mantis 3394 @c Ajout nø fax */
      /** @r IMH05 @d 16/04/11 @a ISAT.NFO @v IMH6.01.028 @s EVC   @c ajout du champ Response Time */
      /** @r IMH04 @d 16/04/11 @a ISAT.NFO @v IMH6.01.028 @s EVC   @c Correction */
      /** @r IMH03 @d 18/03/11 @a ISAT.NFO @v IMH6.01.028 @s Recherche prestataire
          @c Ajout du champ 11 */

      /** @r IMH02 @d 11/03/11 @a ISAT.PC @v IMH6.01.028 @s Recherche prestataire

          @c Ajout de la cl‚ "Provider No." pour la gestion de la suppression */
      /** @r IMH01 @d 25/11/10 @a ISAT.NFO @v IMH6.01.028 @s Recherche prestataire @c Creation */
    }
    END.
  }
}