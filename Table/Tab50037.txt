OBJECT Table 50037 Ability Camp. Geo. Prov. Setup
{
  OBJECT-PROPERTIES
  {
    Date=25/04/12;
    Time=10:14:18;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               //<<IMH06
               //Provider.GET("Provider No.");
               //IF Provider.CheckUserPermission(Provider,TRUE) THEN;
               //>>IMH06
               CheckLine;
               TESTFIELD("Start Reference Code"); //IMH04
               TouchRecord(TRUE);
             END;

    OnModify=BEGIN
               //<<IMH06
               //Provider.GET("Provider No.");
               //IF Provider.CheckUserPermission(Provider,TRUE) THEN;
               //>>IMH06
               CheckLine;

               TouchRecord(FALSE);
             END;

    OnDelete=VAR
               lAbilityGeoProvider@1100281000 : Record 50016;
               lAbilityGeoProviderSetup@1100281001 : Record 50033;
               lAbilityGeoProviderSetup2@1100281003 : Record 50033;
               lProviderSpecialization@1100281004 : Record 50006;
               lAbilityGeoMgt@1100281002 : Codeunit 50011;
             BEGIN

               {
               //<<IMH06
               IF Provider.GET("Provider No.") THEN
                 IF Provider.CheckUserPermission(Provider,TRUE) THEN;
               //>>IMH06

               IF "Specialization Code" <> '' THEN BEGIN
                 lAbilityGeoProvider.SETRANGE("Provider No.","Provider No.");
                 lAbilityGeoProvider.SETRANGE("Setup Type","Setup Type");
                 IF "Setup Type" <> "Setup Type"::Manual THEN
                   lAbilityGeoProvider.SETRANGE("Start Reference Code","Start Reference Code");
                 lAbilityGeoProvider.SETRANGE("Specialization Code","Specialization Code");
                 IF NOT lAbilityGeoProvider.ISEMPTY THEN BEGIN
                   lAbilityGeoProvider.DELETEALL;
                 END;
                 // Si un param‚trage toutes sp‚cialit‚s confondu existe on reg‚n‚re
                 lAbilityGeoProviderSetup.RESET;
                 lAbilityGeoProviderSetup.SETRANGE("Provider No.","Provider No.");
                 lAbilityGeoProviderSetup.SETRANGE("Setup Type","Setup Type");
                 IF "Setup Type" <> "Setup Type"::Manual THEN
                   lAbilityGeoProviderSetup.SETRANGE("Start Reference Code","Start Reference Code");
                 lAbilityGeoProviderSetup.SETRANGE("Specialization Code",'');
                 IF NOT lAbilityGeoProviderSetup.ISEMPTY THEN BEGIN
                   lAbilityGeoProviderSetup.FINDFIRST;
                   lAbilityGeoProviderSetup2 := Rec;
                   lAbilityGeoProviderSetup2.Standard := lAbilityGeoProviderSetup.Standard;
                   lAbilityGeoProviderSetup2.Emergency := lAbilityGeoProviderSetup.Emergency;
                   lAbilityGeoProviderSetup2."Distance (km)" := lAbilityGeoProviderSetup."Distance (km)";
                   lAbilityGeoProviderSetup2."Emergency Distance (km)" := lAbilityGeoProviderSetup."Emergency Distance (km)";
                   lAbilityGeoMgt.GenerateAbilityGeoProvider(lAbilityGeoProviderSetup2);
                 END;
               END ELSE BEGIN
                 lAbilityGeoProviderSetup.RESET;
                 lAbilityGeoProvider.SETRANGE("Provider No.","Provider No.");
                 lAbilityGeoProvider.SETRANGE("Setup Type","Setup Type");
                 lAbilityGeoProvider.SETRANGE("Start Reference Code","Start Reference Code");
                 IF "Specialization Code" <> '' THEN BEGIN
                   lAbilityGeoProvider.SETRANGE("Specialization Code","Specialization Code");
                 END;
                 IF NOT lAbilityGeoProvider.ISEMPTY THEN BEGIN
                   lAbilityGeoProvider.DELETEALL;
                 END;

               END;
               }
             END;

    OnRename=BEGIN
               //<<IMH06
               //Provider.GET("Provider No.");
               //IF Provider.CheckUserPermission(Provider,TRUE) THEN;
               //>>IMH06
               CheckLine;

               TouchRecord(FALSE);
             END;

    CaptionML=[ENU=Ability Camp. Geo. Prov. Setup;
               FRA=ParamŠtre evŠnement exceptionnel g‚o. prestataire];
    LookupFormID=Form50018;
    DrillDownFormID=Form50018;
  }
  FIELDS
  {
    { 1   ;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   CaptionML=[ENU=Campaign No.;
                                                              FRA=Nø ev‚nement expeptionnel] }
    { 2   ;   ;Provider No.        ;Code20        ;TableRelation=Provider;
                                                   CaptionML=FRA=Nø prestataire }
    { 20  ;   ;Start Reference Code;Code10        ;TableRelation=IF (Setup Type=CONST("City (Distance)")) "Geographical Reference"
                                                                 ELSE IF (Setup Type=CONST(Area)) Area
                                                                 ELSE IF (Setup Type=CONST(Territory)) Territory WHERE (Type=CONST(Administratif))
                                                                 ELSE IF (Setup Type=CONST(Country)) Country/Region.Code;
                                                   OnValidate=BEGIN
                                                                Generated := FALSE; //IMH05
                                                              END;

                                                   CaptionML=[ENU=Start Reference Code;
                                                              FRA=Code r‚f‚rence d‚part];
                                                   NotBlank=Yes }
    { 21  ;   ;Start Reference Text;Text100       ;TableRelation=IF (Setup Type=CONST("City (Distance)")) "Geographical Reference"
                                                                 ELSE IF (Setup Type=CONST(Area)) Area
                                                                 ELSE IF (Setup Type=CONST(Territory)) Territory WHERE (Type=CONST(Administratif))
                                                                 ELSE IF (Setup Type=CONST(Country)) Country/Region.Code;
                                                   OnValidate=BEGIN
                                                                "Start Reference Code" := GetGeoRefCode("Start Reference Text");
                                                                "Start Reference Text" := "Start Reference Code";
                                                                Generated := FALSE; //IMH05
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Start Reference;
                                                              FRA=R‚f‚rence d‚part] }
    { 29  ;   ;Setup Type          ;Option        ;CaptionML=[ENU=Setup Type;
                                                              FRA=Type paramŠtrage];
                                                   OptionCaptionML=[ENU=City (Distance),Area,Territory,Manual,Country;
                                                                    FRA=Ville (distance),D‚partement,R‚gion,Manuel,Pays];
                                                   OptionString=City (Distance),Area,Territory,Manual,Country }
    { 30  ;   ;Distance (km)       ;Integer       ;OnValidate=BEGIN

                                                                TESTFIELD("Setup Type", "Setup Type"::"City (Distance)");       //IMH05
                                                                Generated := FALSE; //IMH05
                                                              END;

                                                   CaptionML=[ENU=Distance (km);
                                                              FRA=Distance (km)];
                                                   MinValue=0 }
    { 40  ;   ;Generated           ;Boolean       ;CaptionML=[ENU=Generated;
                                                              FRA=G‚n‚r‚] }
    { 100 ;   ;Exclusion           ;Boolean       ;CaptionML=[ENU=Exclusion;
                                                              FRA=Exclusion];
                                                   Editable=No }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;ValidateTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
    { 60000;  ;Count Line          ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Ability Camp. Geo." WHERE (Campaign No.=FIELD(Campaign No.),
                                                                                                 Setup Type=FIELD(Setup Type),
                                                                                                 Start Ref. Geo. Code=FIELD(Start Reference Code)));
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Campaign No.,Provider No.,Start Reference Code,Setup Type;
                                                   Clustered=Yes }
    {    ;Start Reference Code,Setup Type          }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100281000 : TextConst 'ENU=Ability geographical is setup to emergency but there aren''t any emergency specialization.;FRA=La comp‚tence g‚ographique est param‚tr‚e comme ‚tant urgente mais aucune sp‚cialit‚ n''est en urgent.';
      Text002@1100281002 : TextConst 'ENU=Ability geographical is setup to standard but there aren''t any standard specialization.;FRA=La comp‚tence g‚ographique est param‚tr‚e comme ‚tant standard mais aucune sp‚cialit‚ n''est en standard.';
      Text003@1100281001 : TextConst 'ENU=Provider specialization must be fill first.;FRA=Veuillez pr‚alablement saisir les sp‚cialit‚s du prestataire.';
      Provider@1100281003 : Record 50000;

    PROCEDURE GetGeoRefCode@5(pText@1000 : Text[100]) rValue : Code[10];
    VAR
      lGeographicalReference@1002 : Record 50013;
      lGeographicalReference2@1004 : Record 50013;
      lPostCode@1100281000 : Record 225;
      lPostCode2@1100281001 : Record 225;
      lArea@1100281002 : Record 284;
      lArea2@1100281004 : Record 284;
      lTerritory@1100281003 : Record 286;
      lTerritory2@1100281005 : Record 286;
      lSearchText@1003 : Text[100];
      lCountry@1100281006 : Record 9;
      lCountry2@1100281007 : Record 9;
    BEGIN
      rValue := '';
      IF NOT GUIALLOWED THEN BEGIN
        EXIT;
      END;
      IF pText = '' THEN BEGIN
        EXIT;
      END;

      lSearchText := STRSUBSTNO('*%1*', pText);
      CASE "Setup Type" OF
        "Setup Type"::"City (Distance)" : BEGIN
          lGeographicalReference.SETFILTER(Code,lSearchText);
          IF lGeographicalReference.FINDFIRST THEN BEGIN
            lGeographicalReference2.COPY(lGeographicalReference);
            IF lGeographicalReference2.NEXT = 1 THEN BEGIN
              IF FORM.RUNMODAL(0,lGeographicalReference,lGeographicalReference.Code) <> ACTION::LookupOK THEN BEGIN
                EXIT;
              END;
            END;
            IF lGeographicalReference.Code <> '' THEN BEGIN
              EXIT(lGeographicalReference.Code);
            END;
          END;

          lGeographicalReference.SETCURRENTKEY("Town Name");
          lGeographicalReference.SETFILTER("Town Name",lSearchText);
          IF lGeographicalReference.FINDFIRST THEN BEGIN
            lGeographicalReference2.COPY(lGeographicalReference);
            IF lGeographicalReference2.NEXT = 1 THEN BEGIN
              IF FORM.RUNMODAL(0,lGeographicalReference,lGeographicalReference.Code) <> ACTION::LookupOK THEN BEGIN
                EXIT;
              END;
            END;
            IF lGeographicalReference.Code <> '' THEN BEGIN
              EXIT(lGeographicalReference.Code);
            END;
          END;

          lPostCode.SETCURRENTKEY("Search City");
          lPostCode.SETFILTER("Search City",lSearchText);
          IF lPostCode.FINDFIRST THEN BEGIN
            lPostCode2.COPY(lPostCode);
            IF lPostCode2.NEXT = 1 THEN BEGIN
              IF FORM.RUNMODAL(0,lPostCode,lPostCode.City) <> ACTION::LookupOK THEN BEGIN
                EXIT;
              END;
            END;
            IF lPostCode."Geo. Reference Code" <> '' THEN BEGIN
              EXIT(lPostCode."Geo. Reference Code");
            END;
          END;

          lPostCode.RESET;
          lPostCode.SETFILTER(Code,lSearchText);
          IF lPostCode.FINDFIRST THEN BEGIN
            lPostCode2.COPY(lPostCode);
            IF lPostCode2.NEXT = 1 THEN BEGIN
              IF FORM.RUNMODAL(0,lPostCode,lPostCode.Code) <> ACTION::LookupOK THEN BEGIN
                EXIT;
              END;
            END;
            IF lPostCode."Geo. Reference Code" <> '' THEN BEGIN
              EXIT(lPostCode."Geo. Reference Code");
            END;
          END;
        END;
        "Setup Type"::Area : BEGIN
          lArea.SETFILTER(Code,lSearchText);
          IF lArea.FINDFIRST THEN BEGIN
            lArea2.COPY(lArea);
            IF lArea2.NEXT = 1 THEN BEGIN
              IF FORM.RUNMODAL(0,lArea,lArea.Code) <> ACTION::LookupOK THEN BEGIN
                EXIT;
              END;
            END;
            IF lArea.Code <> '' THEN BEGIN
              EXIT(lArea.Code);
            END;
          END;

          lArea.RESET;
          lArea.SETFILTER(Text,lSearchText);
          IF lArea.FINDFIRST THEN BEGIN
            lArea2.COPY(lArea);
            IF lArea2.NEXT = 1 THEN BEGIN
              IF FORM.RUNMODAL(0,lArea,lArea.Code) <> ACTION::LookupOK THEN BEGIN
                EXIT;
              END;
            END;
            IF lArea.Code <> '' THEN BEGIN
              EXIT(lArea.Code);
            END;
          END;
        END;

        "Setup Type"::Territory : BEGIN
          lTerritory.SETFILTER(Code,lSearchText);
          IF lTerritory.FINDFIRST THEN BEGIN
            lTerritory2.COPY(lTerritory);
            IF lTerritory2.NEXT = 1 THEN BEGIN
              IF FORM.RUNMODAL(0,lTerritory,lTerritory.Code) <> ACTION::LookupOK THEN BEGIN
                EXIT;
              END;
            END;
            IF lTerritory.Code <> '' THEN BEGIN
              EXIT(lTerritory.Code);
            END;
          END;
          lTerritory.RESET;
          lTerritory.SETFILTER(Name,lSearchText);
          IF lTerritory.FINDFIRST THEN BEGIN
            lTerritory2.COPY(lTerritory);
            IF lTerritory2.NEXT = 1 THEN BEGIN
              IF FORM.RUNMODAL(0,lTerritory,lTerritory.Code) <> ACTION::LookupOK THEN BEGIN
                EXIT;
              END;
            END;
            IF lTerritory.Code <> '' THEN BEGIN
              EXIT(lTerritory.Code);
            END;
          END;
        END;

        "Setup Type"::Country : BEGIN
          lCountry.SETFILTER(Code,lSearchText);
          IF lCountry.FINDFIRST THEN BEGIN
            lCountry2.COPY(lCountry);
            IF lCountry2.NEXT = 1 THEN BEGIN
              IF FORM.RUNMODAL(0,lCountry,lCountry.Code) <> ACTION::LookupOK THEN BEGIN
                EXIT;
              END;
            END;
            IF lCountry.Code <> '' THEN BEGIN
              EXIT(lCountry.Code);
            END;
          END;
          lCountry.RESET;
          lCountry.SETFILTER(Name,lSearchText);
          IF lCountry.FINDFIRST THEN BEGIN
            lCountry2.COPY(lTerritory);
            IF lTerritory2.NEXT = 1 THEN BEGIN
              IF FORM.RUNMODAL(0,lCountry,lCountry.Code) <> ACTION::LookupOK THEN BEGIN
                EXIT;
              END;
            END;
            IF lCountry.Code <> '' THEN BEGIN
              EXIT(lCountry.Code);
            END;
          END;
        END;

      END;
    END;

    PROCEDURE IsGenerated@1100281001() rValue : Boolean;
    VAR
      lAbilityCampGeoProv@1100281000 : Record 50015;
    BEGIN
      // Permet de savoir si la comp‚tence g‚ographique a ‚t‚ g‚n‚r‚
      //IMH09 isat.nfo
      lAbilityCampGeoProv.SETRANGE("Provider No.","Provider No.");
      lAbilityCampGeoProv.SETRANGE("Campaign No.","Campaign No.");
      lAbilityCampGeoProv.SETRANGE("Setup Type","Setup Type");
      lAbilityCampGeoProv.SETRANGE("Start Ref. Geo. Code","Start Reference Code");
      rValue := NOT lAbilityCampGeoProv.ISEMPTY;
    END;

    PROCEDURE TouchRecord@1100281000(pInsert@1100281000 : Boolean);
    BEGIN
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;

      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    PROCEDURE GetAreaDescription@1100281004(pCode@1100281003 : Code[10]) rValue : Text[50];
    VAR
      lGeographicalReference@1100281000 : Record 50013;
      lArea@1100281001 : Record 284;
      lTerritory@1100281002 : Record 286;
    BEGIN
      rValue := '';

      CASE "Setup Type" OF
        "Setup Type"::"City (Distance)" : BEGIN
          IF lGeographicalReference.GET(pCode) THEN BEGIN
            rValue := lGeographicalReference."Town Name";
          END;
        END;
        "Setup Type"::Area : BEGIN
          IF lArea.GET(pCode) THEN BEGIN
            rValue := lArea.Text;
          END;
        END;
        "Setup Type"::Territory : BEGIN
          IF lTerritory.GET(pCode) THEN BEGIN
            rValue := lTerritory.Name;
          END;
        END;
      END;
    END;

    PROCEDURE GetSpecializationDescription@1100281003(pCode@1100281001 : Code[10]) rValue : Text[80];
    VAR
      lSpecialization@1100281000 : Record 50005;
    BEGIN
    END;

    PROCEDURE CheckLine@1100281002();
    VAR
      lProviderSpecialization@1100281000 : Record 50006;
    BEGIN
      //IMH02
      // V‚rifie si spc‚cialit‚ urgente
      IF "Start Reference Code" = '' THEN BEGIN
        EXIT;
      END;
    END;

    BEGIN
    {
      /** @r IMH09 @d 25/04/12 @a ISAT.NFO  @v IMH6.01.022 @s Comp‚tence g‚o @h Mantis 3396
        @ correction fonction isgenerated */

      /** @r IMH08 @d 18/10/11 @a ISAT.EBA @v IMH6.01.022 @s Comp‚tence g‚o - Mantis 1305
          @c Modification "CalcFormula" champ 100 Standard Exclusion
          @c Modification "CalcFormula" champ 101 Emergency Exclusion */
      /** @r IHM07 @d 07/07/11 @a ISAT.PC @v IMH6.01.177 @s correctif */
      /** @r IHM06 @d 08/06/11 @a ISAT.VA @v IMH6.01.177 @s S‚curit‚ des prestataires */
      /** @r IMH05 @d 25/03/11 @a ISAT.ZW @v IMH6.01.022 @s Comp‚tence g‚o
          @c Ajout champ Generated
          @c Type paramŠtrage <> ville --> distance non editable */
      /** @r IMH04 @d 03/12/10 @a ISAT.LLT @v IMH6.01.022 @s Comp‚tence g‚o @c Code reg geo obligatoire */
      /** @r IMH03 @d 23/11/10 @a ISAT.NFO @v IMH6.01.022 @s Comp‚tence g‚o @c Si urgent alors standard */
      /** @r IMH02 @d 17/11/10 @a ISAT.LLT @v IMH6.01.022 @s Comp‚tence g‚o @c Ajout fonction de v‚rification */
      /** @r IMH01 @d 23/09/10 @a ISAT.PC @v IMH6.01.022 @s Comp‚tence g‚o @c Creation */
    }
    END.
  }
}