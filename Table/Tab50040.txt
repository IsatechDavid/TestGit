OBJECT Table 50040 Service Code
{
  OBJECT-PROPERTIES
  {
    Date=14/03/12;
    Time=10:28:06;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TouchRecord(TRUE);
               UpdateRec(0);;
             END;

    OnModify=BEGIN
               TouchRecord(FALSE);
               UpdateRec(1);
             END;

    OnDelete=BEGIN
               Main := FALSE; // met … blanc le record r‚f‚rence
               UpdateRec(2);
             END;

    OnRename=BEGIN
               TouchRecord(FALSE);
             END;

    CaptionML=[ENU=Service Code;
               FRA=Code service];
    LookupFormID=Form50128;
    DrillDownFormID=Form50128;
  }
  FIELDS
  {
    { 1   ;   ;Service Type        ;Option        ;CaptionML=[ENU=Service Type;
                                                              FRA=Type Service];
                                                   OptionCaptionML=[ENU=Service,Service Header,Intervention;
                                                                    FRA=Service,Ligne produit,Intervention];
                                                   OptionString=Service,ServiceHeader,Intervention }
    { 2   ;   ;Service No.         ;Code20        ;TableRelation=Service."Service No.";
                                                   CaptionML=[ENU=Service No.;
                                                              FRA=Nø service] }
    { 3   ;   ;Service Header No.  ;Code20        ;TableRelation="Service Header".No. WHERE (Document Type=CONST(Invoice));
                                                   OnValidate=VAR
                                                                lServHeader@1100281000 : Record 5900;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Service Header No.;
                                                              FRA=Nø ligne produit] }
    { 4   ;   ;Intervention Line No.;Integer      ;TableRelation="Service Intervention Line"."Line No." WHERE (Service Header No.=FIELD(Service Header No.));
                                                   CaptionML=[ENU=Intervention Line No.;
                                                              FRA=Nø ligne intervention] }
    { 9   ;   ;Intervention No.    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Intervention Line"."Intervention No." WHERE (Service Header No.=FIELD(Service Header No.),
                                                                                                                            Line No.=FIELD(Intervention Line No.)));
                                                   CaptionML=[ENU=Intervention No.;
                                                              FRA=Nø intervention];
                                                   Editable=No }
    { 10  ;   ;Code Type           ;Option        ;OnValidate=BEGIN
                                                                //<<IMH03
                                                                {IF "Code Type" = "Code Type"::Speciality THEN
                                                                  IF "Service Type" = "Service Type"::Service THEN
                                                                    FIELDERROR("Service Type");
                                                                }
                                                                //>>IMH03
                                                              END;

                                                   CaptionML=[ENU=Code Type;
                                                              FRA=Type de code];
                                                   OptionCaptionML=[ENU=" ,Speciality,Provider Qualification,Project Type";
                                                                    FRA=" ,Sp‚cialit‚,Qualification prestataire,Type projet"];
                                                   OptionString=[ ,Speciality,ProviderQualification,ProjectType] }
    { 11  ;   ;Code                ;Code10        ;TableRelation=IF (Code Type=CONST(Speciality),
                                                                     Building Trade No.=FILTER(<>'')) "Specialization Building Trade"."Specialization Code" WHERE (Building Trade No.=FIELD(Building Trade No.))
                                                                     ELSE IF (Code Type=CONST(Speciality),
                                                                              Building Trade No.=FILTER('')) "Specialization Building Trade"."Specialization Code"
                                                                              ELSE IF (Code Type=CONST(ProviderQualification)) "Provider Qualification"."Qualification Code"
                                                                              ELSE IF (Code Type=CONST(ProjectType)) Code.Code WHERE (Table ID=CONST(5900),
                                                                                                                                      Field ID=CONST(50109));
                                                   OnValidate=VAR
                                                                lSpeciality@1100281000 : Record 50005;
                                                                lBuildTrade@1100281001 : Code[20];
                                                              BEGIN
                                                                IF "Code Type" = "Code Type"::Speciality THEN BEGIN
                                                                  IF lSpeciality.GetBuildingTrade(Code, lBuildTrade) THEN
                                                                    "Building Trade No." := lBuildTrade
                                                                  ELSE
                                                                    Code := xRec.Code;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              FRA=Code];
                                                   NotBlank=Yes }
    { 12  ;   ;Main                ;Boolean       ;OnValidate=VAR
                                                                lServCode@1100281000 : Record 50040;
                                                              BEGIN
                                                                IF Main THEN BEGIN
                                                                  lServCode := Rec;
                                                                  lServCode.SETRECFILTER;
                                                                  lServCode.SETFILTER(Code, '<>%1', Code);
                                                                  lServCode.SETRANGE(Main, TRUE);
                                                                  IF lServCode.FINDFIRST THEN BEGIN
                                                                    lServCode.Main := FALSE;
                                                                    lServCode.MODIFY(TRUE);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Main;
                                                              FRA=Principale] }
    { 13  ;   ;Building Trade No.  ;Code20        ;TableRelation="Building Trade";
                                                   OnValidate=VAR
                                                                lSpecBuild@1100281000 : Record 50031;
                                                              BEGIN
                                                                IF "Code Type" = "Code Type"::Speciality THEN BEGIN
                                                                  IF Code <> '' THEN BEGIN
                                                                    IF "Building Trade No." = '' THEN
                                                                      VALIDATE(Code, '')
                                                                    ELSE
                                                                      IF NOT lSpecBuild.GET("Building Trade No.", Code) THEN
                                                                        VALIDATE(Code, '')
                                                                  END;
                                                                END
                                                                ELSE
                                                                  TESTFIELD("Building Trade No.", '');
                                                              END;

                                                   CaptionML=[ENU=Building Trade No.;
                                                              FRA=Nø corps de m‚tier] }
    { 100 ;   ;Amount Excl. VAT    ;Decimal       ;CaptionML=[ENU=Amount Excl. VAT;
                                                              FRA=Montant HT];
                                                   Editable=No }
    { 101 ;   ;Amount Incl. VAT    ;Decimal       ;CaptionML=[ENU=Amount Incl. VAT;
                                                              FRA=Montant TTC];
                                                   Editable=No }
    { 102 ;   ;Order VAT Prod. Posting Group;Code10;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Intervention Description"."VAT Prod. Posting Group" WHERE (Service Header No.=FIELD(Service Header No.),
                                                                                                                                  Speciality Code=FIELD(Code)));
                                                   TableRelation="VAT Product Posting Group";
                                                   OnValidate=VAR
                                                                lVATPostingSetup@1100281000 : Record 325;
                                                                lServInterLine@1100281001 : Record 50075;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Order VAT Prod. Posting Group;
                                                              FRA=Taux TVA commande];
                                                   Editable=No }
    { 103 ;   ;Order VAT Bus. Posting Group;Code10;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Intervention Description"."VAT Bus. Posting Group" WHERE (Service Header No.=FIELD(Service Header No.),
                                                                                                                                 Speciality Code=FIELD(Code)));
                                                   TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              FRA=Groupe compta. march‚ TVA];
                                                   Editable=No }
    { 104 ;   ;VAT %               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              FRA=% TVA];
                                                   MinValue=0;
                                                   Editable=No }
    { 105 ;   ;VAT Amount          ;Decimal       ;CaptionML=[ENU=VAT Amount;
                                                              FRA=Montant TVA] }
    { 200 ;   ;Estimate Amt Excl. VAT (LCY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Intervention Description"."Amount Excl. VAT (LCY)" WHERE (Service Header No.=FIELD(Service Header No.),
                                                                                                                              Speciality Code=FIELD(Code)));
                                                   CaptionML=[ENU=Estimate Amount Excl. VAT (LCY);
                                                              FRA=Montant chiffrage HT (DS)];
                                                   Editable=No }
    { 201 ;   ;Estimate Amt Incl. VAT (LCY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Intervention Description"."Amount Incl. VAT (LCY)" WHERE (Service Header No.=FIELD(Service Header No.),
                                                                                                                              Speciality Code=FIELD(Code)));
                                                   CaptionML=[ENU=Estimate Amount Incl. VAT (LCY);
                                                              FRA=Montant chiffrage TTC (DS)];
                                                   Editable=No }
    { 50000;  ;Provider No.        ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Intervention Line"."Provider No." WHERE (Service Header No.=FIELD(Service Header No.),
                                                                                                                        Line No.=FIELD(Intervention Line No.)));
                                                   CaptionML=[ENU=Provider No.;
                                                              FRA=Nø prestataire];
                                                   Editable=No }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Service Type,Service No.,Service Header No.,Intervention Line No.,Code Type,Code,Building Trade No.;
                                                   SumIndexFields=Amount Excl. VAT,Amount Incl. VAT,VAT Amount;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Service Type,Service Header No.,Code Type,Code }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE TouchRecord@1100281006(pInsert@1100281000 : Boolean);
    BEGIN
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;
      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    PROCEDURE GetCodeDescription@1100281000() : Text[80];
    VAR
      lSpeciality@1100281000 : Record 50005;
      lCode@1100281001 : Record 50079;
    BEGIN
      IF Code = '' THEN
        EXIT;
      CASE "Code Type" OF
        "Code Type"::Speciality : BEGIN
          IF lSpeciality.GET(Code) THEN
            EXIT(lSpeciality.Description)
          ELSE
            EXIT(Code);
        END;
        //<<IMH03
        "Code Type"::ProjectType:
          BEGIN
            lCode.SETRANGE("Table ID",DATABASE::"Service Code");
            lCode.SETRANGE("Field ID",FIELDNO(Code));
            lCode.SETRANGE(Code,Code);
            IF lCode.ISEMPTY THEN EXIT;
            lCode.FINDFIRST;
            EXIT(lCode.Description);
          END;
        //>>IMH03
      END;
    END;

    PROCEDURE GetBuildCodeDescription@1100281004() : Text[80];
    VAR
      lBuildingTrade@1100281000 : Record 50032;
      lCode@1100281001 : Record 50079;
    BEGIN
      //<<IMH06.ST
      //IF Code = '' THEN
      IF "Building Trade No." = '' THEN
        EXIT;
      //>>IMH06.ST
      CASE "Code Type" OF
        "Code Type"::Speciality : BEGIN
          IF lBuildingTrade.GET("Building Trade No.") THEN
            EXIT(lBuildingTrade.Description)
          ELSE
            EXIT("Building Trade No.");
        END;
      END;
    END;

    PROCEDURE UpdateRec@1100281001(pTypeAction@1100281004 : 'Insert,Modify,Delete,Rename');
    VAR
      lServHeader@1100281000 : Record 5900;
      lService@1100281001 : Record 50066;
      lIntervention@1100281002 : Record 50075;
      lServiceCode@1100281003 : Record 50040;
      lToModify@1100281005 : Boolean;
    BEGIN
      IF Main THEN BEGIN
        CASE "Service Type" OF
          "Service Type"::Intervention :
            IF ("Service Header No." <> '') AND ("Intervention Line No." <> 0) AND
               ("Code Type" IN ["Code Type"::Speciality])
            THEN BEGIN
              lIntervention.GET("Service Header No.", "Intervention Line No.");
              IF ("Code Type" = "Code Type"::Speciality) THEN BEGIN
                IF Main AND (lIntervention."Main Speciality" <> Code) THEN BEGIN
                  lIntervention."Main Speciality" := Code;
                  lToModify := TRUE;
                  //lIntervention.MODIFY(TRUE);
                END;
                IF (NOT Main) AND (lIntervention."Main Speciality" = Code) THEN BEGIN
                  lIntervention."Main Speciality" := '';
                  lToModify := TRUE;
                  //lIntervention.MODIFY(TRUE);
                END;
                lServiceCode.SETRANGE("Service Type", "Service Type");
                lServiceCode.SETRANGE("Service No.", "Service No.");
                lServiceCode.SETRANGE("Service Header No.", "Service Header No.");
                lServiceCode.SETRANGE("Intervention Line No.", "Intervention Line No.");
                lServiceCode.SETRANGE("Code Type", "Code Type");
                CASE pTypeAction OF
                  pTypeAction::Insert : BEGIN
                    IF NOT lServiceCode.ISEMPTY THEN BEGIN
                      lIntervention."Multi specialities" := TRUE;
                      lToModify := TRUE;
                    END;
                  END;
                  pTypeAction::Delete : BEGIN
                    IF (lServiceCode.COUNT - 1) > 1 THEN BEGIN
                      lIntervention."Multi specialities" := TRUE;
                      lToModify := TRUE;
                    END;
                  END;
                END;
                IF lToModify THEN
                  lIntervention.MODIFY(TRUE);
              END;
            END;
        END;
      END;
    END;

    PROCEDURE UpdateMain@1100281002(pServType@1100281000 : Integer;pServHeaderNo@1100281001 : Code[20];pInterventionLineNo@1100281002 : Integer;pCodeType@1100281003 : Integer;pCode1@1100281004 : Code[10];pCode2@1100281005 : Code[20]);
    VAR
      lServCode@1100281006 : Record 50040;
    BEGIN
      lServCode.SETCURRENTKEY("Service Type","Service Header No.","Code Type"); //IMH08.ST
      lServCode.SETRANGE("Service Type", pServType);
      lServCode.SETRANGE("Service Header No.", pServHeaderNo);
      IF pServType = "Service Type"::Intervention THEN
        lServCode.SETRANGE("Intervention Line No.", pInterventionLineNo);
      lServCode.SETRANGE("Code Type", pCodeType);
      lServCode.SETRANGE(Main, TRUE);
      lServCode.SETFILTER(Code, '<>%1', pCode1);
      IF lServCode.FINDFIRST THEN
        lServCode.DELETE(FALSE);

      IF pCode1 <> '' THEN BEGIN
        lServCode.INIT;
        lServCode."Service Type" := pServType;
        lServCode."Service Header No." := pServHeaderNo;
        IF pServType = "Service Type"::Intervention THEN
          lServCode."Intervention Line No." := pInterventionLineNo;
        lServCode."Code Type" := pCodeType;
        lServCode.Code := pCode1;
        IF pCodeType = "Code Type"::Speciality THEN
          lServCode."Building Trade No." := pCode2;
        lServCode.Main := TRUE;
        lServCode.TouchRecord(TRUE);
        IF NOT lServCode.INSERT(FALSE) THEN
          lServCode.MODIFY(FALSE);
      END;
    END;

    PROCEDURE TestFields@1100281003();
    BEGIN
      //IMH04.ST
      IF Code = '' THEN
        FIELDERROR(Code);
      IF "Code Type" = "Code Type"::Speciality THEN
        IF "Building Trade No." = '' THEN
          FIELDERROR("Building Trade No.");
    END;

    BEGIN
    {
      /** @r IMH10 @d 14/03/12 @a ISAT.ST @v IMH6.01.146 @s Refonte facturation
          @c Ajout champ 200 Estimate Amt Excl. VAT (LCY) et 201 Estimate Amt Incl. VAT (LCY) pour initialisations de PV */
      /** @r IMH09 @d 29/12/11 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Ajout champ Provider No.*/
      /** @r IMH08 @d 17/11/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c SETCURRENTKEY manquant */
      /** @r IMH07 @d 14/11/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c MaintienSIFT … non sur PK */
      /** @r IMH06 @d 19/04/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c Correction GetBuildCodeDescription + Affichage code si n'existe pas */
      /** @r IMH05 @d 28/02/11 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service
          @c Nouveau Table relation pour le champ Code de type projet : table code TalbeID = 5900, Field ID = 50109 */
      /** @r IMH04 @d 27/01/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c Ajout fonction TestFIelds pour appel recherche prestataire */
      /** @r IMH03 @d 30/11/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout champ Building Trade No.
          @c Gestion type projet */
      /** @r IMH03 @d 26/11/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c S‚lection specialit‚ sur service */
      /** @r IMH02 @d 09/11/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Passage du Nø service de integer a code(20) */
      /** @r IMH01 @d 28/10/10 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Cr‚ation */


      --- Li‚ aux interventions si nø ligne renseign‚e--------
    }
    END.
  }
}