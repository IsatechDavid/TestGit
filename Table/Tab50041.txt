OBJECT Table 50041 Process
{
  OBJECT-PROPERTIES
  {
    Date=06/12/11;
    Time=12:58:52;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               VALIDATE("Source Data");
               TouchRecord(TRUE);
             END;

    OnModify=BEGIN
               TouchRecord(FALSE);
             END;

    OnDelete=VAR
               lProcessStatus@1100281000 : Record 50042;
             BEGIN
               lProcessStatus.SETRANGE("Process Code", Code);
               IF NOT lProcessStatus.ISEMPTY THEN
                 lProcessStatus.DELETEALL(TRUE);
             END;

    OnRename=BEGIN
               TouchRecord(FALSE);
             END;

    CaptionML=[ENU=Process;
               FRA=Processus];
    LookupFormID=Form50132;
    DrillDownFormID=Form50132;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              FRA=Code];
                                                   NotBlank=Yes }
    { 10  ;   ;Description         ;Text30        ;CaptionML=[ENU=Description;
                                                              FRA=D‚signation] }
    { 15  ;   ;Modification Status ;Option        ;OnValidate=VAR
                                                                PlanningAssignment@1000 : Record 99000850;
                                                                MfgSetup@1004 : Record 99000765;
                                                                ProdBOMCheck@1001 : Codeunit 99000769;
                                                                BNManagement@1002 : Codeunit 8000;
                                                                OldStatus@1003 : Integer;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Modification Status;
                                                              FRA=Statut modification];
                                                   OptionCaptionML=[ENU=Under Development,Certified;
                                                                    FRA=Modification en cours,Valid‚e];
                                                   OptionString=Under Development,Certified }
    { 19  ;   ;Source Data         ;Option        ;OnValidate=VAR
                                                                lProcessAction@1100281000 : Record 50044;
                                                                lProcessReq@1100281001 : Record 50045;
                                                                lProcessStep@1100281002 : Record 50043;
                                                              BEGIN
                                                                IF ("Source Data" <> xRec."Source Data") AND (Code <> '') THEN BEGIN
                                                                  lProcessStep.SETRANGE("Next Process Code", Code);
                                                                  IF NOT lProcessStep.ISEMPTY THEN
                                                                    ERROR(Text001, FIELDCAPTION("Source Data"), lProcessStep.TABLECAPTION);
                                                                  lProcessReq.SETRANGE("Process Code", Code);
                                                                  IF NOT lProcessReq.ISEMPTY THEN
                                                                    ERROR(Text001, FIELDCAPTION("Source Data"), lProcessReq.TABLECAPTION);
                                                                  lProcessAction.SETRANGE("Process Code", Code);
                                                                  lProcessAction.SETFILTER("Action Type", '%1|%2', lProcessAction."Action Type"::"Run Object",
                                                                                                                   lProcessAction."Action Type"::"Set Value");
                                                                  IF NOT lProcessAction.ISEMPTY THEN
                                                                    ERROR(Text001, FIELDCAPTION("Source Data"), lProcessAction.TABLECAPTION);
                                                                END;
                                                                CASE "Source Data" OF
                                                                  "Source Data"::Service :           "Source Table No." := DATABASE::Service;
                                                                  "Source Data"::ServiceHeader :     "Source Table No." := DATABASE::"Service Header";
                                                                  "Source Data"::Intervention :      "Source Table No." := DATABASE::"Service Intervention Line";
                                                                  "Source Data"::InterventionQuote : "Source Table No." := DATABASE::"Service Intervention Quote";//IMH04
                                                                  "Source Data"::Provider :          "Source Table No." := DATABASE::Provider;
                                                                  "Source Data"::"Compltness Task" : "Source Table No." := DATABASE::"Completness Task";

                                                                END; //CASE
                                                              END;

                                                   CaptionML=[ENU=Source Data;
                                                              FRA=Donn‚es process];
                                                   OptionCaptionML=[ENU=Service,Service Header,Intervention,Provider,Compltness Task,Intervention Quote,Quality Control;
                                                                    FRA=Service,Ligne produit,Intervention,Prestataire,Tƒche de compl‚tude,Devis intervention,Contr“le qualit‚];
                                                   OptionString=Service,ServiceHeader,Intervention,Provider,Compltness Task,InterventionQuote,Quality Control }
    { 20  ;   ;Source Table No.    ;Integer       ;CaptionML=[ENU=Source Table No.;
                                                              FRA=Nø table source];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 21  ;   ;Source Table Name   ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(TableData),
                                                                                                  Object ID=FIELD(Source Table No.)));
                                                   CaptionML=[ENU=Source Table Name;
                                                              FRA=Nom table source];
                                                   Editable=No }
    { 30  ;   ;No. Of Status       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Process Status" WHERE (Process Code=FIELD(Code)));
                                                   CaptionML=[ENU=No. Of Status;
                                                              FRA=Nombre de statuts];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 50  ;   ;AutoStep Error Tray Code;Code10    ;TableRelation=Team.Code;
                                                   CaptionML=[ENU=AutoStep Error Tray;
                                                              FRA=Corbeille erreur process auto.] }
    { 51  ;   ;AutoStep Error Tray Service;Boolean;CaptionML=[ENU=AutoStep Error Tray Service;
                                                              FRA=Corbeille service erreur process auto.] }
    { 52  ;   ;AutoStep Error Task ;Code10        ;TableRelation=IF (Source Table No.=CONST(50000)) "Tray Task"."Task Code" WHERE (Source Table No.=CONST(5050))
                                                                 ELSE IF (Source Table No.=FILTER(<>50000)) "Tray Task"."Task Code" WHERE (Source Table No.=FIELD(Source Table No.));
                                                   CaptionML=[ENU=AutoStep Error Task;
                                                              FRA=Tƒche erreur process auto.] }
    { 55  ;   ;NAS From Mail       ;Text80        ;CaptionML=[ENU=NAS From Mail;
                                                              FRA=Mail groupe NAS] }
    { 120 ;   ;Base Calendar Code  ;Code10        ;TableRelation="Base Calendar";
                                                   CaptionML=[ENU=Base Calendar Code;
                                                              FRA=Code calendrier principal] }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Description                         }
  }
  CODE
  {
    VAR
      Text001@1100281000 : TextConst 'FRA=Vous ne pouvez pas changer %1 car des %2 sont d‚finies sur ce processus.';
      Text101@1100281003 : TextConst 'ENU=''Import_Export Parameters'';FRA=''Import_Export parametres''';
      Text102@1100281002 : TextConst 'ENU=''txt'';FRA=''txt''';
      Text103@1100281001 : TextConst 'ENU=Import_Export Parameters.txt;FRA=Import_Export parametres.txt';
      Text104@1100281005 : TextConst 'ENU=Import finished.;FRA=Import termin‚.';
      Text105@1100281004 : TextConst 'ENU=Export finished.;FRA=Export termin‚.';

    PROCEDURE TouchRecord@1100281006(pInsert@1100281000 : Boolean);
    BEGIN
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;
      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    PROCEDURE IsModifyStatus@1100281000(pProcessCode@1100281000 : Code[20];pError@1100281002 : Boolean) rValue : Boolean;
    VAR
      lProcess@1100281001 : Record 50041;
    BEGIN
      IF NOT lProcess.GET(pProcessCode) THEN
        rValue := FALSE
      ELSE BEGIN
        IF pError THEN
          lProcess.TESTFIELD("Modification Status", "Modification Status"::"Under Development");
        rValue := lProcess."Modification Status" = "Modification Status"::"Under Development";
      END;
    END;

    PROCEDURE ImportExportSetup@1100281001(pImport@1100281000 : Boolean);
    VAR
      lRBAutoMgt@1100281009 : Codeunit 419;
      lDataport@1100281004 : Dataport 50099;
      lToFile@1100281003 : Text[1024];
      lInstream@1100281002 : InStream;
      lImportFile@1100281001 : File;
      lServerFileName@1100281007 : Text[1024];
      lServerFile@1100281006 : File;
      lFileoutstream@1100281005 : OutStream;
    BEGIN
      IF ISSERVICETIER THEN BEGIN
        IF pImport THEN BEGIN
          UPLOAD('', '', '', '', lToFile);
          lImportFile.OPEN(lToFile);
          lImportFile.CREATEINSTREAM(lInstream);
          XMLPORT.IMPORT(XMLPORT::"Import/Export Process Setup", lInstream);
          lImportFile.CLOSE;
          MESSAGE(Text104);
        END
        ELSE BEGIN
          lServerFileName := lRBAutoMgt.ServerTempFileName(Text101,Text102);
          lServerFile.CREATE(lServerFileName);
          lServerFile.CREATEOUTSTREAM(lFileoutstream);
          XMLPORT.EXPORT(XMLPORT::"Import/Export Process Setup", lFileoutstream,Rec);
          lServerFile.CLOSE;

          lToFile := Text103;
          DOWNLOAD(lServerFileName,'','','',lToFile);
          ERASE(lServerFileName);
          MESSAGE(Text105);
        END;
      END
      ELSE BEGIN
        lDataport.IMPORT(pImport);
        lDataport.RUN;
      END;
    END;

    BEGIN
    {
      /** @r IMH06 @d 06/12/11 @a ISAT.ST @v IMH6.01.102 @s Gestion des statuts @c Ajout "NAS From Mail" */
      /** @r IMH05 @d 14/03/11 @a ISAT.ZW @v IMH6.01.102 @s Gestion des statuts @c Ajout champ Base Calendar Code */
      /** @r IMH04 @d 20/01/11 @a ISAT.LLT @v IMH6.01.102 @s Gestion des statuts
          @c Ajout du devis en option de Source Data */
      /** @r IMH03 @d 31/12/10 @a ISAT.ST @v IMH6.01.102 @s Gestion des statuts @c Finalisation */
      /** @r IMH02 @d 07/12/10 @a ISAT.ST @v IMH6.01.102 @s Gestion des statuts @c Ajout champ 19 "Source Data" */
      /** @r IMH01 @d 05/11/10 @a ISAT.ZW @v IMH6.01.102 @s Gestion des statuts @c Creation Objet */
    }
    END.
  }
}