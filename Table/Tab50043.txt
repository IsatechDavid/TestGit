OBJECT Table 50043 Process Step
{
  OBJECT-PROPERTIES
  {
    Date=18/04/12;
    Time=14:03:07;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lProcessStep@1100281000 : Record 50043;
             BEGIN
               ProcessEditable(TRUE);
               IF "Next Process Code" = '' THEN
                 "Next Process Code" := "Process Code";
               IF "Process Code" = '' THEN
                 "Process Code" := "Next Process Code";
               //TESTFIELD("Process Code");

               TESTFIELD("Line No.");
               TouchRecord(TRUE);
               CheckValues; //IMH07.ST
             END;

    OnModify=BEGIN
               ProcessEditable(TRUE);
               TouchRecord(FALSE);
               CheckValues; //IMH07.ST
             END;

    OnDelete=VAR
               lProcessAction@1100281000 : Record 50044;
               lProcessStepsRequirement@1100281001 : Record 50045;
             BEGIN
               ProcessEditable(TRUE);
               lProcessAction.SETRANGE("Process Code", "Process Code");
               lProcessAction.SETRANGE("Source Action", lProcessAction."Source Action"::Step);
               lProcessAction.SETRANGE("Source Line No.", "Line No.");
               IF NOT lProcessAction.ISEMPTY THEN
                 lProcessAction.DELETEALL(TRUE);

               lProcessStepsRequirement.SETRANGE("Process Code", "Process Code");
               lProcessStepsRequirement.SETRANGE("Source Requirement", lProcessStepsRequirement."Source Requirement"::Step);
               lProcessStepsRequirement.SETRANGE("Source Line No.", "Line No.");
               IF NOT lProcessStepsRequirement.ISEMPTY THEN
                 lProcessStepsRequirement.DELETEALL(TRUE);
             END;

    OnRename=BEGIN
               ProcessEditable(TRUE);
               TouchRecord(FALSE);
             END;

    CaptionML=[ENU=Process Step;
               FRA=Etape processus];
    LookupFormID=Form50134;
    DrillDownFormID=Form50134;
  }
  FIELDS
  {
    { 1   ;   ;Process Code        ;Code10        ;TableRelation=Process.Code;
                                                   OnValidate=BEGIN
                                                                ValidateProcessCode("Next Process Code", "Process Code");
                                                                IF "Next Status" = 0 THEN
                                                                  "Next Process Code" := "Process Code";
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupProcessCode("Next Process Code", "Process Code");
                                                            END;

                                                   CaptionML=[ENU=Process Code;
                                                              FRA=Code processus];
                                                   NotBlank=Yes }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              FRA=Nø ligne];
                                                   NotBlank=Yes }
    { 5   ;   ;Previous Status     ;Integer       ;TableRelation="Process Status"."Status No." WHERE (Process Code=FIELD(Process Code));
                                                   OnValidate=VAR
                                                                lAction@1100281000 : Record 50044;
                                                                lReq@1100281001 : Record 50045;
                                                              BEGIN
                                                                CheckDescription("Process Code","Previous Status","Line No.",Description);//IMH05

                                                                IF CurrFieldNo = FIELDNO("Line No.") THEN
                                                                  CALCFIELDS("Previous Status Name");
                                                                IF "Line No." <> 0 THEN BEGIN
                                                                  lReq.SETRANGE("Process Code", "Process Code");
                                                                  lReq.SETRANGE("Source Requirement", lReq."Source Requirement"::Step);
                                                                  lReq.SETRANGE("Source Line No.", "Line No.");
                                                                  lReq.SETFILTER("Previous Status", '<>%1', "Previous Status");
                                                                  IF NOT lReq.ISEMPTY THEN
                                                                    lReq.MODIFYALL("Previous Status", "Previous Status");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Previous Status;
                                                              FRA=Statut pr‚c‚dent];
                                                   NotBlank=Yes }
    { 6   ;   ;Next Process Code   ;Code10        ;TableRelation=Process.Code;
                                                   OnValidate=VAR
                                                                lAction@1100281001 : Record 50044;
                                                                lReq@1100281000 : Record 50045;
                                                              BEGIN
                                                                IF "Next Process Code" = '' THEN
                                                                  "Next Process Code" := "Process Code";
                                                                ValidateProcessCode("Process Code", "Next Process Code");

                                                                IF CurrFieldNo = FIELDNO("Next Process Code") THEN
                                                                  CALCFIELDS("Next Process Name");

                                                                IF "Line No." <> 0 THEN BEGIN
                                                                  lReq.SETRANGE("Process Code", "Process Code");
                                                                  lReq.SETRANGE("Source Requirement", lReq."Source Requirement"::Step);
                                                                  lReq.SETRANGE("Source Line No.", "Line No.");
                                                                  lReq.SETFILTER("Next Process Code", '<>%1', "Next Process Code");
                                                                  IF NOT lReq.ISEMPTY THEN
                                                                    lReq.MODIFYALL("Next Process Code", "Next Process Code");
                                                                END;

                                                                IF "Next Process Code" <> xRec."Next Process Code" THEN
                                                                  VALIDATE("Next Status", 0);
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupProcessCode("Process Code", "Next Process Code");
                                                            END;

                                                   CaptionML=[ENU=Next Process Code;
                                                              FRA=Code processus suivant] }
    { 7   ;   ;Next Status         ;Integer       ;TableRelation="Process Status"."Status No." WHERE (Process Code=FIELD(Next Process Code));
                                                   OnValidate=VAR
                                                                lAction@1100281001 : Record 50044;
                                                                lReq@1100281000 : Record 50045;
                                                              BEGIN
                                                                IF CurrFieldNo = FIELDNO("Next Status") THEN
                                                                  CALCFIELDS("Next Status Name");

                                                                IF "Line No." <> 0 THEN BEGIN
                                                                  lReq.SETRANGE("Process Code", "Process Code");
                                                                  lReq.SETRANGE("Source Requirement", lReq."Source Requirement"::Step);
                                                                  lReq.SETRANGE("Source Line No.", "Line No.");
                                                                  lReq.SETFILTER("Next Status", '<>%1', "Next Status");
                                                                  IF NOT lReq.ISEMPTY THEN
                                                                    lReq.MODIFYALL("Next Status", "Next Status");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Next Status;
                                                              FRA=Statut suivant];
                                                   NotBlank=Yes }
    { 10  ;   ;Active              ;Boolean       ;OnValidate=BEGIN
                                                                IF Active THEN BEGIN
                                                                  TESTFIELD(Description);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Active;
                                                              FRA=Actif] }
    { 11  ;   ;Auto Process Step   ;Boolean       ;OnValidate=BEGIN
                                                                //<<IMH14.isat.PC
                                                                CheckSelectionCode;
                                                                //>>IMH14.isat.PC
                                                              END;

                                                   CaptionML=[ENU=Auto Process Step;
                                                              FRA=Etape automatique] }
    { 12  ;   ;Priority            ;Integer       ;CaptionML=[ENU=Priority;
                                                              FRA=Priorit‚] }
    { 13  ;   ;Manual User Step    ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Manual User Step;
                                                              FRA=Etape manuelle] }
    { 14  ;   ;Description         ;Text30        ;OnValidate=BEGIN
                                                                IF Description = '' THEN
                                                                  TESTFIELD(Active, FALSE);
                                                                //<<IMH05
                                                                IF STRPOS(Description,',') <> 0 THEN
                                                                  ERROR(STRSUBSTNO(Text002,FIELDCAPTION(Description)));
                                                                CheckDescription("Process Code","Previous Status","Line No.",Description);
                                                                //>>IMH05
                                                              END;

                                                   CaptionML=[ENU=Step Description;
                                                              FRA=D‚signation de l'‚tape] }
    { 17  ;   ;Disable System User ;Boolean       ;CaptionML=[ENU=Disable System User;
                                                              FRA=D‚sactivation utilisateur systŠme] }
    { 40  ;   ;Process Name        ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Process.Description WHERE (Code=FIELD(Process Code)));
                                                   CaptionML=[ENU=Process Name;
                                                              FRA=Nom processus];
                                                   Editable=No }
    { 41  ;   ;Previous Status Name;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Process Status".Description WHERE (Process Code=FIELD(Process Code),
                                                                                                          Status No.=FIELD(Previous Status)));
                                                   CaptionML=[ENU=Previous Process Status Name;
                                                              FRA=Nom statut pr‚c‚dent];
                                                   Editable=No }
    { 42  ;   ;Next Status Name    ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Process Status".Description WHERE (Process Code=FIELD(Next Process Code),
                                                                                                          Status No.=FIELD(Next Status)));
                                                   CaptionML=[ENU=Next Status Name;
                                                              FRA=Nom statut suivant];
                                                   Editable=No }
    { 43  ;   ;Next Process Name   ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Process.Description WHERE (Code=FIELD(Next Process Code)));
                                                   CaptionML=[ENU=Next Process Name;
                                                              FRA=Nom processus suivant];
                                                   Editable=No }
    { 80  ;   ;Actions             ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Process Action" WHERE (Process Code=FIELD(Process Code),
                                                                                             Source Action=CONST(Step),
                                                                                             Source Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Actions;
                                                              FRA=Actions];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 90  ;   ;Requirements        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Process Requirement" WHERE (Process Code=FIELD(Process Code),
                                                                                                  Source Requirement=CONST(Step),
                                                                                                  Source Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Requirements;
                                                              FRA=Conditions];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 100 ;   ;Process Table ID    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Process."Source Table No." WHERE (Code=FIELD(Process Code)));
                                                   CaptionML=[ENU=Process Table ID;
                                                              FRA=Nø table processus];
                                                   Editable=No }
    { 120 ;   ;Enforce User Time Limit;Boolean    ;CaptionML=[ENU=Enforce User Time Limit;
                                                              FRA=D‚lai impos‚ utilisateur] }
    { 121 ;   ;Step Date Limit Formula;DateFormula;CaptionML=[ENU=Step Date Limit Formula;
                                                              FRA=D‚lai date passage ‚tape] }
    { 122 ;   ;Step Time Limit Formula;Integer    ;CaptionML=[ENU=Step Time Limit Formula;
                                                              FRA=Delai heure passage ‚tape];
                                                   BlankZero=Yes }
    { 123 ;   ;Time Limit Base Date;Option        ;OnValidate=BEGIN
                                                                IF "Time Limit Base Date" = "Time Limit Base Date"::FieldValue THEN BEGIN
                                                                  CALCFIELDS("Process Table ID");
                                                                  IF NOT ("Process Table ID" IN [DATABASE::"Service Intervention Line"]) THEN
                                                                    TESTFIELD("Time Limit Base Date", "Time Limit Base Date"::FieldValue);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Time Limit Base Date;
                                                              FRA=Date base calcul passage];
                                                   OptionCaptionML=[ENU=Last Step,Field Value;
                                                                    FRA=DerniŠre ‚tape,Valeur de champ];
                                                   OptionString=LastStep,FieldValue }
    { 124 ;   ;Time Limit Base Field No.;Integer  ;OnValidate=VAR
                                                                lField@1100281000 : Record 2000000041;
                                                              BEGIN
                                                                IF "Time Limit Base Field No." <> 0 THEN BEGIN
                                                                  TESTFIELD("Time Limit Base Date", "Time Limit Base Date"::FieldValue);
                                                                  CALCFIELDS("Process Table ID");
                                                                  lField.GET("Process Table ID", "Time Limit Base Field No.");
                                                                  IF NOT (lField.Type IN [lField.Type::Date, lField.Type::DateTime]) THEN
                                                                    FIELDERROR("Time Limit Base Field No.");
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              lField@1100281000 : Record 2000000041;
                                                              lFieldList@1100281001 : Form 6521;
                                                            BEGIN
                                                              TESTFIELD("Time Limit Base Date", "Time Limit Base Date"::FieldValue);
                                                              CALCFIELDS("Process Table ID");
                                                              IF "Process Table ID" = 0 THEN
                                                                EXIT;
                                                              lField.FILTERGROUP(2);
                                                              lField.SETRANGE(TableNo, "Process Table ID");
                                                              lField.SETFILTER(Type, '%1|%2', lField.Type::Date, lField.Type::DateTime);
                                                              lField.SETFILTER(Class, '<>%1', lField.Class::FlowFilter);
                                                              lField.FILTERGROUP(0);
                                                              lField."No." := "Time Limit Base Field No.";
                                                              lFieldList.SETTABLEVIEW(lField);
                                                              lFieldList.SETRECORD(lField);
                                                              lFieldList.LOOKUPMODE(TRUE);
                                                              IF lFieldList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                lFieldList.GETRECORD(lField);
                                                                VALIDATE("Time Limit Base Field No.", lField."No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Time Limit Base Field No.;
                                                              FRA=Nø champ base calcul passage];
                                                   BlankZero=Yes }
    { 125 ;   ;Time Limit Base Field Caption;Text80;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=FIELD(Process Table ID),
                                                                                                   No.=FIELD(Time Limit Base Field No.)));
                                                   CaptionML=[ENU=Time Limit Base Field Caption;
                                                              FRA=Nom champ base calcul passage];
                                                   Editable=No }
    { 126 ;   ;Use Calendar        ;Boolean       ;OnValidate=VAR
                                                                lProcess@1100281000 : Record 50041;
                                                              BEGIN
                                                                //IMH08
                                                                IF "Use Calendar" THEN BEGIN
                                                                  lProcess.GET("Process Code");
                                                                  lProcess.TESTFIELD("Base Calendar Code");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Use Calendar;
                                                              FRA=Utiliser calendrier] }
    { 127 ;   ;Base Calendar Code  ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Process."Base Calendar Code" WHERE (Code=FIELD(Process Code)));
                                                   TableRelation="Base Calendar";
                                                   CaptionML=[ENU=Base Calendar Code;
                                                              FRA=Code calendrier principal];
                                                   Editable=No }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Process Code,Line No.                   ;Clustered=Yes }
    {    ;Process Code,Previous Status,Active,Priority,Auto Process Step }
    {    ;Next Process Code,Next Status            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100281000 : TextConst 'ENU=The source table of porcess %1 should be %2.;FRA=La table source du processus %1 doit ˆtre %2.';
      SkipStatusCheck@1100281001 : Boolean;
      Text002@1100281002 : TextConst 'ENU=Character "," is forbidden in %1 field.;FRA=Le caractŠre "," est interdit dans le champ %1.';
      Text003@1100281003 : TextConst 'FRA=La description existe d‚j… sur un mˆme statut pr‚c‚dent';
      Process@1100281004 : Record 50041;
      Text004@1100281005 : TextConst 'ENU=Please fill value to set on action %1.;FRA=Veuillez indiquer une valeur … mettre … jour sur l''action %1.';

    PROCEDURE SetSkipStatusCheck@1100281003(pSkipStatusCheck@1100281000 : Boolean);
    BEGIN
      SkipStatusCheck := pSkipStatusCheck;
    END;

    PROCEDURE TouchRecord@1100281006(pInsert@1100281000 : Boolean);
    BEGIN
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;
      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    LOCAL PROCEDURE LookupProcessCode@1100281005(pBaseProcessCode@1100281001 : Code[10];VAR pProcessCodeToLookup@1100281002 : Code[10]);
    VAR
      lProcess@1100281000 : Record 50041;
    BEGIN
      IF pBaseProcessCode = '' THEN BEGIN
        IF FORM.RUNMODAL(0, lProcess) = ACTION::LookupOK THEN
          pProcessCodeToLookup := lProcess.Code;
      END ELSE BEGIN
        lProcess.GET(pBaseProcessCode);
        lProcess.FILTERGROUP(2);
        lProcess.SETRANGE("Source Table No.", lProcess."Source Table No.");
        lProcess.FILTERGROUP(0);
        IF FORM.RUNMODAL(0, lProcess) = ACTION::LookupOK THEN
          pProcessCodeToLookup := lProcess.Code;
      END;
    END;

    LOCAL PROCEDURE ValidateProcessCode@1100281008(pBaseProcessCode@1100281001 : Code[10];pToProcessCode@1100281000 : Code[10]);
    VAR
      lProcessType@1100281002 : Record 50041;
      lProcessType2@1100281003 : Record 50041;
    BEGIN
      IF (pBaseProcessCode = '') OR (pToProcessCode = '') THEN
        EXIT;
      IF lProcessType.GET(pBaseProcessCode) THEN;
      IF lProcessType2.GET(pToProcessCode) THEN;

      IF lProcessType."Source Table No." <> lProcessType2."Source Table No." THEN
        ERROR(Text001, pToProcessCode, lProcessType."Source Table No.");
    END;

    PROCEDURE ProcessEditable@1100281000(pError@1100281000 : Boolean) rValue : Boolean;
    BEGIN
      IF SkipStatusCheck THEN
        EXIT(TRUE);
      EXIT(Process.IsModifyStatus("Process Code", pError));
    END;

    PROCEDURE ProcessActionExists@1100281001(VAR pAction@1100281000 : Record 50044) : Boolean;
    BEGIN
      IF ("Process Code" = '') OR ("Line No." = 0) THEN
        EXIT(FALSE);
      pAction.RESET;
      pAction.SETCURRENTKEY("Process Code", "Source Action", "Source Line No.", "Action Order");
      pAction.SETRANGE("Process Code", "Process Code");
      pAction.SETRANGE("Source Action", pAction."Source Action"::Step);
      pAction.SETRANGE("Source Line No.", "Line No.");
      pAction.SETRANGE("Suspend Action", FALSE); //IMH11.ST
      EXIT(NOT pAction.ISEMPTY);
    END;

    PROCEDURE SetRequirementFilter@1100281002(VAR pRequirement@1100281000 : Record 50045);
    BEGIN
      pRequirement.RESET;
      pRequirement.SETRANGE("Process Code", "Process Code");
      pRequirement.SETRANGE("Source Requirement", pRequirement."Source Requirement"::Step);
      pRequirement.SETRANGE("Source Line No.", "Line No.");
    END;

    PROCEDURE CheckDescription@1100281011(pProcessCode@1100281001 : Code[10];pPreviousStatus@1100281004 : Integer;pLineNo@1100281002 : Integer;pDescription@1100281003 : Text[30]);
    VAR
      lProcessStep@1100281000 : Record 50043;
    BEGIN
      //IMH05
      IF (pDescription = '') OR ("Previous Status" = 0) THEN
        EXIT;
      lProcessStep.SETCURRENTKEY("Process Code","Previous Status");
      lProcessStep.SETRANGE("Process Code",pProcessCode);
      lProcessStep.SETRANGE("Previous Status",pPreviousStatus);
      lProcessStep.SETFILTER("Line No.",'<>%1',pLineNo);
      lProcessStep.SETFILTER(Description,'=%1',pDescription);
      IF NOT lProcessStep.ISEMPTY THEN
        ERROR(Text003);
    END;

    PROCEDURE AutoSplitLineNo@1000000026(pXRec@1000000000 : Record 50043;pBelowXRec@1000000001 : Boolean);
    VAR
      lRec@1100281001 : Record 50043;
    BEGIN
      //IMH06.ST
      IF CURRENTKEY = lRec.CURRENTKEY THEN BEGIN
        // tri sur pk
        lRec := pXRec;
        lRec.SETRANGE("Process Code","Process Code");
        IF pXRec."Process Code" <> "Process Code" THEN BEGIN
          IF lRec.FINDLAST THEN
            "Line No." := lRec."Line No." + 10000
          ELSE
            "Line No." := 10000;
          EXIT;
        END;
        IF pBelowXRec THEN BEGIN
          IF lRec.NEXT = 0 THEN
            "Line No." := pXRec."Line No." + 10000
          ELSE
            "Line No." := lRec."Line No." + ROUND((pXRec."Line No." - lRec."Line No.")/2,1);
        END
        ELSE BEGIN
          IF lRec.NEXT(-1) = 0 THEN
            lRec."Line No." := 0;
          "Line No." := lRec."Line No." + ROUND((pXRec."Line No." - lRec."Line No.")/2,1);
        END;
      END
      ELSE BEGIN
        // Peu importe -> affectation en dernier
        lRec.SETRANGE("Process Code","Process Code");
        IF lRec.FINDLAST THEN
          "Line No." := lRec."Line No." + 10000
        ELSE
          "Line No." := 10000;
      END;
    END;

    PROCEDURE InitNewLine@1100281004();
    BEGIN
      // IMH06.ST
      // Init des valeurs filtr‚es (hors pk)
      IF GETFILTER("Previous Status") <> '' THEN
        IF GETRANGEMIN("Previous Status") = GETRANGEMAX("Previous Status") THEN
          VALIDATE("Previous Status", GETRANGEMIN("Previous Status"));
      IF GETFILTER("Next Process Code") <> '' THEN
        IF GETRANGEMIN("Next Process Code") = GETRANGEMAX("Next Process Code") THEN
          VALIDATE("Next Process Code", GETRANGEMIN("Next Process Code"));
      IF ("Next Process Code" = '') AND ("Process Code" <> '') THEN
        VALIDATE("Next Process Code", "Process Code");
      IF "Next Process Code" <> '' THEN
        IF GETFILTER("Next Status") <> '' THEN
          IF GETRANGEMIN("Next Status") = GETRANGEMAX("Next Status") THEN
            VALIDATE("Next Status", GETRANGEMIN("Next Status"));
    END;

    PROCEDURE HasTimeLimit@1100281007() : Boolean;
    VAR
      lEmptyDateFormula@1100281000 : DateFormula;
    BEGIN
      EXIT(("Step Date Limit Formula" <> lEmptyDateFormula) OR ("Step Time Limit Formula" = 0));
    END;

    LOCAL PROCEDURE CheckValues@1100281010();
    BEGIN
      //IMH07.ST
      IF "Time Limit Base Date" = "Time Limit Base Date"::FieldValue THEN
        IF "Time Limit Base Field No." = 0 THEN
          FIELDERROR("Time Limit Base Field No.");
    END;

    LOCAL PROCEDURE GetProcess@1100281012();
    BEGIN
      //IMH07.ST
      IF Process.Code <> "Process Code" THEN
        IF NOT Process.GET("Process Code") THEN
          CLEAR(Process);
    END;

    PROCEDURE CheckSelectionCode@1100281009();
    VAR
      lProcessAction@1100281000 : Record 50044;
    BEGIN
      //<<IMH09.isat.PC
      IF NOT "Auto Process Step" THEN BEGIN
        EXIT;
      END;

      lProcessAction.SETRANGE("Process Code","Process Code");
      //<<IMH13
      //lProcessAction.SETRANGE("Line No.","Line No.");
      lProcessAction.SETRANGE("Source Line No.","Line No.");
      //>>IMH13
      lProcessAction.SETRANGE("Value To Set",'');
      lProcessAction.SETRANGE("Select Code",TRUE);
      IF lProcessAction.FINDFIRST THEN BEGIN
        ERROR(Text004,lProcessAction.Description);
      END;
      //>>IMH09.isat.PC
    END;

    PROCEDURE GetCalendarCode@1100281013() : Code[10];
    BEGIN
      //IMH10.ST
      IF "Use Calendar" THEN BEGIN
        CALCFIELDS("Base Calendar Code");
        EXIT("Base Calendar Code");
      END;
      EXIT('');
    END;

    BEGIN
    {
      /** @r IMH13 @d 18/04/12 @a ISAT.ZW @v IMH6.01.133 @s Gestion des statuts @h mantis 3337 @c D‚bug */
      /** @r IMH12 @d 22/12/11 @a ISAT.ST @v IMH6.01.133 @s Gestion des statuts @c Ajout champ 17 "Disable On Task" */
      /** @r IMH11 @d 16/12/11 @a ISAT.ST @v IMH6.01.102 @s Gestion des statuts @c Suspension d'action */
      /** @r IMH10 @d 31/03/11 @a ISAT.ST @v IMH6.01.102 @s Gestion des statuts
          @c Ajout champ 126 Base Calendar COde + GetCalendarCode */
      /** @r IMH09 @d 24/03/11 @a ISAT.PC @v IMH6.01.102 @s Gestion des statuts
          @c Ajout test sur la s‚lection du code */
      /** @r IMH08 @d 14/03/11 @a ISAT.ZW @v IMH6.01.102 @s Gestion des statuts
          @c Ajout "Use Calendar" */
      /** @r IMH07 @d 08/03/11 @a ISAT.ST @v IMH6.01.102 @s Gestion des statuts
          @c Ajout "Time Limit Base Date", "Time Limit Base Field No." */
      /** @r IMH06 @d 21/01/11 @a ISAT.ST @v IMH6.01.102 @s Gestion des statuts
          @c Ajout fonctions InitNewLine et AutoSplitLineNo pour appel page/form */
      /** @r IMH05 @d 20/01/11 @a ISAT.LLT @v IMH6.01.102 @s Gestion des statuts
          @c Interdit la saisie de , dans la description
          @c Interdit la saisie d'une mˆme description pour un statut pr‚c‚dent identique */
      /** @r IMH04 @d 07/01/11 @a ISAT.ST @v IMH6.01.102 @s Gestion des statuts
          @c Ajout champ 13 Hide Step For User */
      /** @r IMH03 @d 31/12/10 @a ISAT.ST @v IMH6.01.102 @s Gestion des statuts @c Finalisation, changement PK */
      /** @r IMH02 @d 15/12/10 @a ISAT.ZW @v IMH6.01.102 @s Gestion des statuts @c Ajout Next process code */
      /** @r IMH01 @d 08/11/10 @a ISAT.ZW @v IMH6.01.102 @s Gestion des statuts @c Creation Objet */
    }
    END.
  }
}