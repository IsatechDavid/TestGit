OBJECT Table 50061 Service Amount
{
  OBJECT-PROPERTIES
  {
    Date=06/01/14;
    Time=11:30:52;
    Modified=Yes;
    Version List=IMH6.01,SUPPORT;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               SetPriority;//IMH04
               TouchRecord(TRUE);
               IF "Amount Type" = "Amount Type"::InterventionCeiling THEN
                 "Line No." := 1 // pas de ligne, Pk contient l'index
               ELSE
                 "Line No." := GetNextLine;
             END;

    OnModify=BEGIN
               SetPriority;//IMH04
               TouchRecord(FALSE);
             END;

    OnRename=BEGIN
               SetPriority;//IMH05
               TouchRecord(FALSE);
             END;

    CaptionML=[ENU=Service Amount;
               FRA=Plafond produit];
    LookupFormID=Form50065;
    DrillDownFormID=Form50065;
  }
  FIELDS
  {
    { 1   ;   ;Corporate No.       ;Code20        ;TableRelation=Customer.No. WHERE (Service Contact=CONST(Corporate Customer),
                                                                                     Service Corporate=CONST(Yes));
                                                   CaptionML=[ENU=Corporate No.;
                                                              FRA=Nø grand compte];
                                                   NotBlank=Yes }
    { 2   ;   ;Service Order Type  ;Code10        ;TableRelation="Product Catalog"."Service Order Type" WHERE (Corporate No.=FIELD(Corporate No.));
                                                   CaptionML=[ENU=Service Order Type;
                                                              FRA=Type produit];
                                                   NotBlank=Yes }
    { 3   ;   ;Amount Type         ;Option        ;OnValidate=BEGIN
                                                                IF "Amount Type" = "Amount Type"::InterventionCeiling THEN
                                                                  "Line No." := 1;
                                                              END;

                                                   CaptionML=[ENU=Amount Type;
                                                              FRA=Type montant];
                                                   OptionCaptionML=[ENU=Intervention Ceiling,Deposit Amount;
                                                                    FRA=Plafond d'intervention,Frais dossier];
                                                   OptionString=InterventionCeiling,DepositAmount }
    { 4   ;   ;Campaign No.        ;Code20        ;TableRelation=Campaign.No.;
                                                   CaptionML=[ENU=Campaign No.;
                                                              FRA=Nø ‚vŠnement exceptionnel] }
    { 5   ;   ;Corporate Region Code;Code10       ;TableRelation="Corporate Region"."Region Code" WHERE (Corporate No.=FIELD(Corporate No.));
                                                   CaptionML=[ENU=Corporate Region Code;
                                                              FRA=Code r‚gion grand compte] }
    { 6   ;   ;Priority            ;Integer       ;CaptionML=[ENU=Priority;
                                                              FRA=Priorit‚];
                                                   Editable=No }
    { 7   ;   ;Requisitioner       ;Code10        ;TableRelation=Code.Code WHERE (Table ID=CONST(50066),
                                                                                  Field ID=CONST(13));
                                                   CaptionML=[ENU=Requisitioner;
                                                              FRA=Demandeur] }
    { 8   ;   ;Service Cause       ;Code20        ;TableRelation="Fault Reason Code".Code;
                                                   CaptionML=[ENU=Service Cause;
                                                              FRA=Cause intervention] }
    { 9   ;   ;Urgent              ;Option        ;CaptionML=[ENU=Urgent;
                                                              FRA=Urgence];
                                                   OptionCaptionML=[ENU=" ,Yes,No";
                                                                    FRA=" ,Oui,Non"];
                                                   OptionString=[ ,Yes,No] }
    { 10  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              FRA=Montant];
                                                   AutoFormatType=1 }
    { 11  ;   ;Amount Incl. VAT    ;Boolean       ;CaptionML=[ENU=Amount Incl. VAT;
                                                              FRA=Montant TTC];
                                                   AutoFormatType=1 }
    { 13  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              FRA=Nø ligne] }
    { 20  ;   ;Contract Form Code  ;Code10        ;TableRelation="Corporate Contract"."Contract Form Code" WHERE (Corporate No.=FIELD(Corporate No.));
                                                   CaptionML=[ENU=Contract Form Code;
                                                              FRA=Code formule] }
    { 50070;  ;Occupier Nature     ;Code10        ;TableRelation=Code.Code WHERE (Table ID=CONST(5051),
                                                                                  Field ID=CONST(50070));
                                                   CaptionML=[ENU=Occupier Nature;
                                                              FRA=Nature de l'occupant] }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Corporate No.,Service Order Type,Amount Type,Campaign No.,Corporate Region Code,Service Cause,Requisitioner,Urgent,Occupier Nature,Contract Form Code,Line No.;
                                                   Clustered=Yes }
    {    ;Corporate No.,Service Order Type,Amount Type,Priority }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Amount                                   }
  }
  CODE
  {

    PROCEDURE TouchRecord@1000000001(pInsert@1000000000 : Boolean);
    BEGIN
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;
      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    PROCEDURE RetrieveServAmount@1100281000(VAR pServAmount@1100281000 : Record 50061) rValue : Boolean;
    VAR
      lServAmount@1100281001 : Record 50061;
    BEGIN
      IF (pServAmount."Corporate No." = '') OR (pServAmount."Service Order Type" = '') THEN BEGIN
        CLEAR(pServAmount);
        EXIT(FALSE);
      END;
      //<<IMH04
      {
      IF lServAmount.GET(pServAmount."Corporate No.", pServAmount."Service Order Type", pServAmount."Amount Type",
                         pServAmount."Campaign No.", pServAmount."Corporate Region Code") THEN BEGIN
        pServAmount := lServAmount;
        EXIT(TRUE);
      END;
      IF pServAmount."Corporate Region Code" <> '' THEN
        IF lServAmount.GET(pServAmount."Corporate No.", pServAmount."Service Order Type", pServAmount."Amount Type",
                           pServAmount."Campaign No.", '') THEN BEGIN
          pServAmount := lServAmount;
          EXIT(TRUE);
        END;
      IF pServAmount."Campaign No." <> '' THEN
        IF lServAmount.GET(pServAmount."Corporate No.", pServAmount."Service Order Type", pServAmount."Amount Type",
                           '', pServAmount."Corporate Region Code") THEN BEGIN
          pServAmount := lServAmount;
          EXIT(TRUE);
        END;
      IF (pServAmount."Corporate Region Code" <> '') AND (pServAmount."Campaign No." <> '') THEN
        IF lServAmount.GET(pServAmount."Corporate No.", pServAmount."Service Order Type", pServAmount."Amount Type",
                           '', '') THEN BEGIN
          pServAmount := lServAmount;
          EXIT(TRUE);
        END;
      EXIT(FALSE);
      }

      lServAmount.SETCURRENTKEY("Corporate No.","Service Order Type","Amount Type", Priority);
      lServAmount.SETRANGE("Corporate No.",pServAmount."Corporate No.");
      lServAmount.SETRANGE("Service Order Type",pServAmount."Service Order Type");
      lServAmount.SETFILTER("Campaign No.",'%1|%2',pServAmount."Campaign No.",'');
      lServAmount.SETFILTER("Corporate Region Code",'%1|%2','',pServAmount."Corporate Region Code");
      lServAmount.SETFILTER("Service Cause",'%1|%2','',pServAmount."Service Cause");
      lServAmount.SETFILTER(Requisitioner,'%1|%2','', pServAmount.Requisitioner);
      lServAmount.SETFILTER(Urgent, '%1|%2', lServAmount.Urgent::" ", pServAmount.Urgent);
      lServAmount.SETFILTER("Occupier Nature", '%1|%2', pServAmount."Occupier Nature", ''); //IMH07.ST
      lServAmount.SETFILTER("Contract Form Code", '%1|%2', pServAmount."Contract Form Code", ''); //IMH08.ZW
      IF lServAmount.ISEMPTY THEN
        EXIT(FALSE);
      lServAmount.FINDFIRST;
      pServAmount := lServAmount;
      EXIT(TRUE);
      //>>IMH04
    END;

    PROCEDURE SetPriority@1100281003();
    BEGIN
      //IMH05
      Priority := 1;
      //<<IMH08
      IF "Contract Form Code" = '' THEN
        Priority += 7;
      //>>IMH08
      IF "Campaign No." = '' THEN
        Priority += 32;
      IF "Service Cause" = '' THEN
        Priority += 16;
      IF Urgent = 0 THEN
        Priority += 8;
      IF "Occupier Nature" = '' THEN
        Priority += 4;
      IF Requisitioner = '' THEN
        Priority += 2;
      IF "Corporate Region Code" = '' THEN
        Priority += 1;
    END;

    LOCAL PROCEDURE SetFieldCharValue@1100281005(pTextValue@1100281000 : Text[30]) : Char;
    BEGIN
      IF pTextValue <> '' THEN
        EXIT('O')
      ELSE
        EXIT('N');
    END;

    LOCAL PROCEDURE SetFieldIntValue@1100281006(pOption@1100281000 : Integer) : Char;
    BEGIN
      IF pOption <> 0 THEN
        EXIT('O')
      ELSE
        EXIT('N');
    END;

    LOCAL PROCEDURE GetNextLine@1100281002() : Integer;
    VAR
      lServAmount@1100281000 : Record 50061;
    BEGIN
      lServAmount.SETRANGE("Corporate No.", "Corporate No.");
      lServAmount.SETRANGE("Service Order Type", "Service Order Type");
      lServAmount.SETRANGE("Amount Type", "Amount Type");
      lServAmount.LOCKTABLE;
      IF lServAmount.FINDLAST THEN
        EXIT(lServAmount."Line No." + 1)
      ELSE
        EXIT(1);
    END;

    PROCEDURE GetServAmountByServHeader@1100281001(pServHeader@1100281002 : Record 5900) rValue : Decimal;
    VAR
      lServiceAmount@1100281001 : Record 50061;
    BEGIN
      lServiceAmount."Corporate No." := pServHeader."Corporate No.";
      lServiceAmount."Service Order Type" := pServHeader."Service Order Type";
      lServiceAmount."Amount Type" := lServiceAmount."Amount Type"::InterventionCeiling;
      lServiceAmount."Campaign No." := pServHeader."Campaign No.";
      lServiceAmount."Corporate Region Code" := pServHeader."Corporate Region Code";
      lServiceAmount.Requisitioner  := pServHeader.Requisitioner;
      lServiceAmount."Service Cause" := pServHeader."Service Cause";
      lServiceAmount.Urgent := pServHeader.Urgent;
      lServiceAmount."Occupier Nature" := pServHeader."Occupier Nature";
      lServiceAmount."Contract Form Code" := pServHeader."Contract Form Code";  //IMH08
      IF NOT lServiceAmount.RetrieveServAmount(lServiceAmount) THEN
        EXIT(lServiceAmount.Amount);
    END;

    BEGIN
    {
      /** @r IMH08 @d 31/12/13 @a ISAT.ZW @v IMH6.01.4843 @h 4843 @s Ajout champ
          @c Ajout champ 20 code formule et l'ajouter dans la cl‚ primaire */
      /** @r IMH07 @d 20/01/12 @a ISAT.ST @v IMH6.01.010 @s Gestion du catalogue
          @c Filtre nature occupant */
      /** @r IMH06 @d 28/07/11 @a ISAT.ST @v IMH6.01.010 @s Gestion du catalogue
          @c Ajout Nature occupant
      /** @r IMH05 @d 02/04/11 @a ISAT.ST @v IMH6.01.010 @s Gestion du catalogue
          @c Ajout champ 9 Urgent
          @c R‚-‚criture fonction SetPriority
          @c Ajout Type Deposit Amount */
      /** @r IMH04 @d 08/03/11 @a ISAT.LLT @v IMH6.01.010 @s Gestion du catalogue
          @c Ajout champ 6 Priority
          @c Ajout champ 7 Requisitioner
          @c Ajout champ 8 Service Cause
          @c Ajout cl‚ Corporate No.,Service Order Type,Priority */
      /** @r IMH03 @d 24/01/11 @a ISAT.ST @v IMH6.01.010 @s Gestion du catalogue
          @c Ajout RetrieveServAmount */
      /** @r IMH02 @d 26/10/10 @a ISAT.ST @v IMH6.01.010 @s Gestion du catalogue
          @c Ajout champ 5 Corporate Region Code
          @c Ajout de Corporate Region code dans la cl‚ primaire */
      /** @r IMH01 @d 01/10/10 @a ISAT.LLT @v IMH6.01.010 @s Gestion du catalogue @c Cr‚ation */
    }
    END.
  }
}