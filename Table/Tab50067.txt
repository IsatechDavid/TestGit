OBJECT Table 50067 Service Time Register
{
  OBJECT-PROPERTIES
  {
    Date=11/12/12;
    Time=11:36:37;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "User ID" = '' THEN
                 "User ID" := USERID;
               VALIDATE("End DateTime");
               IF "Entry No." = 0 THEN
                 "Entry No." := GetNextEntryNo;
             END;

    CaptionML=[ENU=Service Time Register;
               FRA=Registre temps service];
    LookupFormID=Form50067;
    DrillDownFormID=Form50067;
  }
  FIELDS
  {
    { 1   ;   ;Service No.         ;Code20        ;TableRelation=Service;
                                                   CaptionML=[ENU=Service No.;
                                                              FRA=Nø service] }
    { 3   ;   ;Service Header No.  ;Code20        ;TableRelation="Service Header".No. WHERE (Document Type=CONST(Invoice));
                                                   CaptionML=[ENU=Service Header No.;
                                                              FRA=Nø ligne produit] }
    { 4   ;   ;Intervention Line No.;Integer      ;TableRelation="Service Intervention Line"."Line No." WHERE (Service Header No.=FIELD(Service Header No.));
                                                   CaptionML=[ENU=Intervention Line No.;
                                                              FRA=Nø ligne intervention] }
    { 5   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              FRA=Nø s‚quence] }
    { 9   ;   ;Intervention No.    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Intervention Line"."Intervention No." WHERE (Service Header No.=FIELD(Service Header No.),
                                                                                                                            Line No.=FIELD(Intervention Line No.)));
                                                   CaptionML=[ENU=Intervention No.;
                                                              FRA=Nø intervention];
                                                   Editable=No }
    { 10  ;   ;User ID             ;Code30        ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              FRA=ID utilisateur] }
    { 11  ;   ;Start DateTime      ;DateTime      ;CaptionML=[ENU=Datetime;
                                                              FRA=Date d‚but] }
    { 12  ;   ;End DateTime        ;DateTime      ;OnValidate=BEGIN
                                                                "Open Time" := ROUND(("End DateTime" - "Start DateTime") / 1000, 1);
                                                              END;

                                                   CaptionML=[ENU=End DateTime;
                                                              FRA=Date fin] }
    { 13  ;   ;Form ID             ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Form));
                                                   CaptionML=[ENU=Form ID;
                                                              FRA=Nø formulaire] }
    { 20  ;   ;Open Time           ;Integer       ;CaptionML=[ENU=Open Time (s);
                                                              FRA=Temps d'ouverture (s)];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 50  ;   ;Timing Process      ;Boolean       ;CaptionML=[ENU=Time Process;
                                                              FRA=Traitement temps] }
    { 51  ;   ;Corrected Time      ;Integer       ;CaptionML=[ENU=Corrected Time (s);
                                                              FRA=Temps corrig‚ (s)];
                                                   BlankZero=Yes }
    { 60  ;   ;From Quote          ;Boolean       ;CaptionML=[ENU=From Quote;
                                                              FRA=Depuis devis] }
    { 61  ;   ;From Comment        ;Boolean       ;CaptionML=[ENU=From Comment;
                                                              FRA=Depuis commentaire] }
    { 62  ;   ;From Log Entries    ;Boolean       ;CaptionML=[ENU=From Log Entries;
                                                              FRA=Depuis jnl interaction] }
    { 63  ;   ;From Attachment     ;Boolean       ;CaptionML=[ENU=From Attachment;
                                                              FRA=Depuis document joint] }
  }
  KEYS
  {
    {    ;Service No.,Service Header No.,Intervention Line No.,Entry No.;
                                                   Clustered=Yes }
    {    ;Timing Process,User ID,Start DateTime   ;MaintainSIFTIndex=No }
    {    ;User ID,Start DateTime                   }
    {    ;End DateTime                            ;MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    LOCAL PROCEDURE GetNextEntryNo@1100281002() : Integer;
    VAR
      lServTimeReg@1100281000 : Record 50067;
    BEGIN
      lServTimeReg := Rec;
      lServTimeReg.SETRECFILTER;
      lServTimeReg.SETRANGE("Entry No.");
      lServTimeReg.LOCKTABLE(TRUE);
      IF lServTimeReg.ISEMPTY THEN
        EXIT(1);
      lServTimeReg.FINDLAST;
      IF lServTimeReg."Entry No." < 0 THEN
        EXIT(1);
      EXIT(lServTimeReg."Entry No." + 1);
    END;

    PROCEDURE ShowServHeader@1100281000();
    VAR
      lServHeader@1100281000 : Record 5900;
    BEGIN
      IF lServHeader.GET(lServHeader."Document Type"::Invoice, "Service Header No.") THEN
        lServHeader.ShowCard(FALSE);
    END;

    BEGIN
    {
      /** @r IMH04 @d 05/12/12 @a ISAT.PC @v IMH6.01.334 @s Mantis 4004 @h 4004
          @c Ajout champ 60, From Quote
          @c Ajout champ 61, From Comment
          @c Ajout champ 62, From Log Entries
          @c Ajout champ 63, From Attachment */
      /** @r IMH03 @d 03/11/10 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c Ajout index User ID,Start DateTime pour des tests. MaintainSQLIndex … non */
      /** @r IMH02 @d 27/10/10 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c Changement cl‚ primaire : Service No.,Service Header No.,Intervention Line No.,Entry No. au lieu de User ID, Entry No. */
      /** @r IMH01 @d 04/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Cr‚ation */
    }
    END.
  }
}