OBJECT Table 50068 Service Header Address
{
  OBJECT-PROPERTIES
  {
    Date=21/08/13;
    Time=15:57:27;
    Modified=Yes;
    Version List=IMH6.01,JUIN;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TouchRecord(TRUE);
               TESTFIELD("Service Header No.");
               IF "Address No." = 0 THEN
                 "Address No." := GetNextAddressNo;
               UpdateHeaderStatus(TRUE); //IMH15

               //<<IMH19.PC
               //<<IMH17.PC
               ProviderNotificationMgt.CreateNotifFromServHeaderAddr(Rec,xRec,TRUE);
               //>>IMH17.PC
               //>>IMH19.PC

               //<<IMH18.ISAT.EBA
               CreateContact(Rec);
               //>>IMH18.ISAT.EBA
             END;

    OnModify=BEGIN
               CheckContactAltAddress;//IMH05
               UpdateHeaderStatus(FALSE); //IMH15
               TouchRecord(FALSE);

               //<<IMH19.PC
               //<<IMH17.PC
               ProviderNotificationMgt.CreateNotifFromServHeaderAddr(Rec,xRec,FALSE);
               //>>IMH17.PC
               //>>IMH19.PC

               //<<IMH18.ISAT.EBA
               IF (Name <> xRec.Name) OR
                  (Address <> xRec.Address) OR
                  ("Address 2" <> xRec."Address 2") OR
                  ("Address 3" <> xRec."Address 3") OR
                  (City <> xRec.City) OR
                  ("Phone No." <> xRec."Phone No.") OR
                  ("Mobile Phone No." <> xRec."Mobile Phone No.") OR
                  ("Country/Region Code" <> xRec."Country/Region Code") OR
                  ("Fax No." <> xRec."Fax No.") OR
                  ("Post Code" <> xRec."Post Code") OR
                  (County <> xRec.County) OR
                  ("Role Code" <> xRec."Role Code") OR
                  ("Salutation Code" <> xRec."Salutation Code") OR
                  ("First Name" <> xRec."First Name") OR
                  (Surname <> xRec.Surname)
               THEN BEGIN
                 MODIFY;
                 CreateContact(Rec);
               END;
               //>>IMH18.ISAT.EBA
             END;

    OnRename=BEGIN
               UpdateHeaderStatus(FALSE); //IMH15
               TouchRecord(FALSE);
             END;

    CaptionML=[ENU=Service Header Address;
               FRA=Adresse ligne produit];
    LookupFormID=Form50078;
    DrillDownFormID=Form50078;
  }
  FIELDS
  {
    { 3   ;   ;Service Header No.  ;Code20        ;TableRelation="Service Header".No. WHERE (Document Type=CONST(Invoice));
                                                   CaptionML=[ENU=Service Header No.;
                                                              FRA=Nø ligne produit];
                                                   Editable=No }
    { 4   ;   ;Address Type        ;Option        ;OnValidate=VAR
                                                                lServiceHeader@1100281000 : Record 5900;
                                                                lContactAltAddress@1100281001 : Record 5051;
                                                              BEGIN
                                                                //<<IMH05
                                                                // Initialisation
                                                                // Si Gardiennage : code adresse = code adresse MEO
                                                                // Si D‚m‚nagement ou garde-meuble r‚cupere les adresses secondaires autres que MEO

                                                                InitLine(); // IMH10.ISAT.MA

                                                                CASE "Address Type" OF
                                                                  "Address Type"::Guarding:
                                                                    BEGIN
                                                                      IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,"Service Header No.") THEN BEGIN
                                                                        VALIDATE("Contact Address Code",lServiceHeader."Ship-to Address Code");
                                                                      END;
                                                                      InitBuildingSpec;
                                                                    END;
                                                                  "Address Type"::"Public Storage","Address Type"::Moving:
                                                                    BEGIN
                                                                      IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,"Service Header No.") THEN BEGIN
                                                                        lContactAltAddress.SETRANGE("Contact No.",lServiceHeader."Contact No.");
                                                                        lContactAltAddress.SETFILTER(Code,'<>%1',lServiceHeader."Ship-to Address Code");
                                                                        IF NOT lContactAltAddress.ISEMPTY THEN BEGIN
                                                                          lContactAltAddress.FINDFIRST;
                                                                          VALIDATE("Contact Address Code",lContactAltAddress.Code);
                                                                        END;
                                                                      END;
                                                                      InitBuildingSpec;
                                                                    END;
                                                                END;
                                                                //>>IMH05
                                                              END;

                                                   CaptionML=[ENU=Address Type;
                                                              FRA=Type adresse];
                                                   OptionCaptionML=[ENU=Contact involved,Guarding,Moving,Public Storage,Annexe Contact,Disaster Declaration,Voucher Contact,Expert Contact;
                                                                    FRA=Tiers impliqu‚,Gardiennage,D‚m‚nagement,Garde-meuble,Contact annexe,D‚claration sinistre,Contact remboursement,Contact expert];
                                                   OptionString=Contact involved,Guarding,Moving,Public Storage,Annexe Contact,Disaster Declaration,Voucher,Expert Contact }
    { 5   ;   ;Address No.         ;Integer       ;CaptionML=[ENU=Address No.;
                                                              FRA=Nø adresse];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 10  ;   ;Name                ;Text50        ;OnValidate=BEGIN
                                                                NameBreakdown;//IMH05
                                                              END;

                                                   CaptionML=[ENU=Name;
                                                              FRA=Nom] }
    { 11  ;   ;Address             ;Text50        ;OnValidate=BEGIN
                                                                IF Address <> '' THEN
                                                                  CheckFields(FIELDCAPTION(Address)); //IMH10.ISAT.MA

                                                                //<<IMH19.PC
                                                                //<<IMH17.PC
                                                                //ProviderNotificationMgt.CreateNotifFromServHeaderAddr(Rec,xRec);
                                                                //>>IMH17.PC
                                                                //>>IMH19.PC
                                                              END;

                                                   CaptionML=[ENU=Address;
                                                              FRA=Adresse] }
    { 12  ;   ;Address 2           ;Text50        ;OnValidate=BEGIN
                                                                IF "Address 2" <> '' THEN

                                                                CheckFields(FIELDCAPTION("Address 2")); //IMH10.ISAT.MA
                                                                //<<IMH19.PC
                                                                //<<IMH17.PC
                                                                //ProviderNotificationMgt.CreateNotifFromServHeaderAddr(Rec,xRec);
                                                                //>>IMH17.PC
                                                                //>>IMH19.PC
                                                              END;

                                                   CaptionML=[ENU=Address 2;
                                                              FRA=Adresse 2] }
    { 13  ;   ;City                ;Text30        ;OnValidate=BEGIN
                                                                IF City <> '' THEN
                                                                  CheckFields(FIELDCAPTION(City)); //IMH10.ISAT.MA
                                                                PostCode.ValidateCity(City,"Post Code","Country/Region Code"); //IMH06 Ajout Code pays
                                                                //<<IMH19.PC
                                                                //<<IMH17.PC
                                                                //ProviderNotificationMgt.CreateNotifFromServHeaderAddr(Rec,xRec);
                                                                //>>IMH17.PC
                                                                //>>IMH19.PC
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity(City,"Post Code","Country/Region Code", TRUE); //IMH06 Ajout Code pays
                                                            END;

                                                   CaptionML=[ENU=City;
                                                              FRA=Ville] }
    { 14  ;   ;Post Code           ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                IF "Post Code" <> '' THEN
                                                                  CheckFields(FIELDCAPTION("Post Code")); //IMH10.ISAT.MA
                                                                PostCode.ValidatePostCode(City,"Post Code", "Country/Region Code"); //IMH06 Ajout Code pays
                                                                "Geo. Reference Code" := PostCode.GetReferenceGeoCode("Post Code",City);
                                                                //<<IMH19.PC
                                                                //<<IMH17.PC
                                                                //ProviderNotificationMgt.CreateNotifFromServHeaderAddr(Rec,xRec);
                                                                //>>IMH17.PC
                                                                //>>IMH19.PC
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode(City,"Post Code","Country/Region Code", TRUE); //IMH06 Ajout Code pays
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              FRA=Code postal] }
    { 15  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              FRA=Code pays/r‚gion] }
    { 16  ;   ;Digicode            ;Code20        ;OnValidate=BEGIN
                                                                IF Digicode <> '' THEN
                                                                  CheckFields(FIELDCAPTION(Digicode)); //IMH10.ISAT.MA
                                                              END;

                                                   CaptionML=[ENU=Digicode;
                                                              FRA=Digicode] }
    { 17  ;   ;Lift                ;Boolean       ;OnValidate=BEGIN
                                                                IF Lift <> FALSE THEN
                                                                  CheckFields(FIELDCAPTION(Lift)); //IMH10.ISAT.MA
                                                              END;

                                                   CaptionML=[ENU=Lift;
                                                              FRA=Ascenceur] }
    { 18  ;   ;Floor               ;Integer       ;OnValidate=BEGIN
                                                                IF Floor <> 0 THEN
                                                                  CheckFields(FIELDCAPTION(Floor)); //IMH10.ISAT.MA
                                                              END;

                                                   CaptionML=[ENU=Floor;
                                                              FRA=Etage];
                                                   BlankZero=Yes }
    { 19  ;   ;Phone No.           ;Text30        ;OnValidate=VAR
                                                                lPhoneStandardization@1100281000 : Codeunit 50099;
                                                              BEGIN
                                                                lPhoneStandardization.ValidatePhoneNo(DATABASE::Contact,9,"Country/Region Code","Phone No.");//IMH09
                                                                //<<IMH19.PC
                                                                //<<IMH17.PC
                                                                //ProviderNotificationMgt.CreateNotifFromServHeaderAddr(Rec,xRec);
                                                                //>>IMH17.PC
                                                                //>>IMH19.PC
                                                              END;

                                                   CaptionML=[ENU=Phone No.;
                                                              FRA=Nø t‚l‚phone] }
    { 20  ;   ;Notes               ;Text80        ;OnValidate=BEGIN
                                                                IF Notes <> '' THEN
                                                                  CheckFields(FIELDCAPTION(Notes)); //IMH10.ISAT.MA
                                                              END;

                                                   CaptionML=[ENU=Comments;
                                                              FRA=Commentaires] }
    { 21  ;   ;Location Nature     ;Text50        ;CaptionML=[ENU=Location Nature;
                                                              FRA=Nature des lieux] }
    { 22  ;   ;Suite Nature        ;Text250       ;OnValidate=BEGIN
                                                                IF "Suite Nature" <> '' THEN
                                                                  CheckFields(FIELDCAPTION("Suite Nature")); //IMH10.ISAT.MA
                                                              END;

                                                   CaptionML=[ENU=Suite Nature;
                                                              FRA=Nature du mobilier] }
    { 23  ;   ;Suite Value         ;Decimal       ;OnValidate=BEGIN
                                                                IF "Suite Value" <> 0 THEN
                                                                  CheckFields(FIELDCAPTION("Suite Value")); //IMH10.ISAT.MA
                                                              END;

                                                   CaptionML=[ENU=Suite Value;
                                                              FRA=Valeur du mobilier];
                                                   DecimalPlaces=0:2;
                                                   BlankZero=Yes }
    { 24  ;   ;Suite Cubage (m3)   ;Decimal       ;CaptionML=[ENU=Suite Cubage (m3);
                                                              FRA=Volume mobilier (m3)];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 25  ;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              FRA=Nø t‚l‚copie] }
    { 26  ;   ;Mobile Phone No.    ;Text30        ;OnValidate=VAR
                                                                lPhoneStandardization@1100281000 : Codeunit 50099;
                                                              BEGIN
                                                                lPhoneStandardization.ValidatePhoneNo(DATABASE::Contact,26,"Country/Region Code","Mobile Phone No.");//IMH09
                                                              END;

                                                   CaptionML=[ENU=Mobile Phone No.;
                                                              FRA=Nø t‚l‚phone portable] }
    { 30  ;   ;Role Code           ;Code10        ;TableRelation=Code.Code WHERE (Table ID=CONST(50068),
                                                                                  Field ID=CONST(30));
                                                   CaptionML=[ENU=Role Code;
                                                              FRA=Code r“le] }
    { 31  ;   ;Salutation Code     ;Code10        ;TableRelation=Salutation;
                                                   CaptionML=[ENU=Salutation Code;
                                                              FRA=Civilit‚] }
    { 32  ;   ;First Name          ;Text30        ;OnValidate=BEGIN
                                                                CalculateName;//IMH05
                                                              END;

                                                   CaptionML=[ENU=First Name;
                                                              FRA=Pr‚nom] }
    { 33  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              FRA=R‚gion] }
    { 34  ;   ;Contact Address Code;Code20        ;OnValidate=VAR
                                                                lContactAltAddress@1100281000 : Record 5051;
                                                                lServiceHeader@1100281001 : Record 5900;
                                                              BEGIN
                                                                //<<IMH05
                                                                IF NOT lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,"Service Header No.") THEN
                                                                  EXIT;
                                                                IF lContactAltAddress.GET(lServiceHeader."Contact No.","Contact Address Code") THEN BEGIN
                                                                  Address := lContactAltAddress.Address;
                                                                  "Address 2" := lContactAltAddress."Address 2";
                                                                  City := lContactAltAddress.City;
                                                                  "Post Code" := lContactAltAddress."Post Code";
                                                                  "Country/Region Code" := lContactAltAddress."Country/Region Code";
                                                                  County := lContactAltAddress.County;
                                                                  "Way Type" := lContactAltAddress."Way Type";
                                                                  "Way No." := lContactAltAddress."Way No.";
                                                                  "Way No. Extension" := lContactAltAddress."Way No. Extension";
                                                                  "Way Name" := lContactAltAddress."Way Name";
                                                                  "Geo. Reference Code" := lContactAltAddress."Geo. Reference Code";
                                                                  Longitude := lContactAltAddress.Longitude;
                                                                  Latitude := lContactAltAddress.Latitude;
                                                                END;
                                                                //>>IMH05
                                                              END;

                                                   OnLookup=VAR
                                                              lServiceHeader@1100281000 : Record 5900;
                                                              lContactAltAddress@1100281001 : Record 5051;
                                                            BEGIN
                                                              //<<IMH05
                                                              IF NOT lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,"Service Header No.") THEN
                                                                EXIT;
                                                              lContactAltAddress.SETRANGE("Contact No.",lServiceHeader."Contact No.");
                                                              IF FORM.RUNMODAL(0,lContactAltAddress) = ACTION::LookupOK THEN
                                                                "Contact Address Code" := lContactAltAddress.Code;
                                                              //>>IMH05
                                                            END;

                                                   CaptionML=[ENU=Contact Address Code;
                                                              FRA=Code adresse b‚n‚ficiaire] }
    { 35  ;   ;Surname             ;Text30        ;OnValidate=BEGIN
                                                                CalculateName;//IMH05
                                                              END;

                                                   CaptionML=[ENU=Surname;
                                                              FRA=Nom de famille] }
    { 36  ;   ;E-mail              ;Text80        ;OnValidate=VAR
                                                                lServHeader@1100281000 : Record 5900;
                                                              BEGIN
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=Contact E-mail;
                                                              FRA=E-mail] }
    { 40  ;   ;Way Type            ;Code10        ;TableRelation=Code.Code WHERE (Table ID=CONST(50077),
                                                                                  Field ID=CONST(21));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Way Type;
                                                              FRA=Type de voie] }
    { 41  ;   ;Way No.             ;Integer       ;CaptionML=[ENU=Way No.;
                                                              FRA=Nø de voie] }
    { 42  ;   ;Way No. Extension   ;Code10        ;TableRelation=Code.Code WHERE (Table ID=CONST(5051),
                                                                                  Field ID=CONST(50062));
                                                   CaptionML=[ENU=Way No. Extension;
                                                              FRA=Extension nø de voie] }
    { 43  ;   ;Way Name            ;Text50        ;TableRelation="Address Reference"."Way Name" WHERE (Post Code=FIELD(Post Code),
                                                                                                       Geo. Reference Code=FIELD(Geo. Reference Code));
                                                   OnLookup=VAR
                                                              lAddressReference@1100281000 : Record 50077;
                                                            BEGIN
                                                              //lAddressReference.SETRANGE("Address Key", "Post Code");
                                                              lAddressReference.SETRANGE("Geo. Reference Code", "Geo. Reference Code");

                                                              IF FORM.RUNMODAL(0, lAddressReference) = ACTION::LookupOK THEN BEGIN
                                                                "Way Name" := lAddressReference."Way Name";
                                                                //"Way Type" := lAddressReference."Way Type";//IMH10
                                                              END;
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Way Name;
                                                              FRA=Libell‚ de voie] }
    { 44  ;   ;Geo. Reference Code ;Code10        ;TableRelation="Geographical Reference";
                                                   CaptionML=[ENU=Geo. Reference Code;
                                                              FRA=Code r‚f‚rence g‚o.];
                                                   Editable=No }
    { 45  ;   ;Latitude            ;Integer       ;CaptionML=[ENU=Latitude;
                                                              FRA=Latitude] }
    { 46  ;   ;Longitude           ;Integer       ;CaptionML=[ENU=Longitude;
                                                              FRA=Longitude] }
    { 50  ;   ;Building Trade No.  ;Code20        ;OnValidate=VAR
                                                                lSpecBuild@1100281000 : Record 50031;
                                                              BEGIN
                                                                IF "Speciality Code" <> '' THEN BEGIN
                                                                  IF "Building Trade No." = '' THEN
                                                                    VALIDATE("Speciality Code", '')
                                                                  ELSE
                                                                    IF NOT lSpecBuild.GET("Building Trade No.", "Speciality Code") THEN
                                                                      VALIDATE("Speciality Code", '')
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              //IMH08
                                                              SelectBuildingTrade;
                                                            END;

                                                   CaptionML=[ENU=Building Trade No.;
                                                              FRA=Nø corps de m‚tier] }
    { 51  ;   ;Speciality Code     ;Code10        ;TableRelation=IF (Building Trade No.=FILTER(<>'')) "Specialization Building Trade"."Specialization Code" WHERE (Building Trade No.=FIELD(Building Trade No.))
                                                                 ELSE IF (Building Trade No.=FILTER(='')) Specialization.Code;
                                                   OnValidate=VAR
                                                                lSpeciality@1100281000 : Record 50005;
                                                                lBuildTrade@1100281001 : Code[20];
                                                              BEGIN
                                                                IF "Speciality Code" <> '' THEN BEGIN
                                                                  IF lSpeciality.GetBuildingTrade("Speciality Code", lBuildTrade) THEN
                                                                    "Building Trade No." := lBuildTrade
                                                                  ELSE
                                                                    "Speciality Code" := xRec."Speciality Code";
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              //IMH08
                                                              SelectSpecializationCode;
                                                            END;

                                                   CaptionML=[ENU=Speciality Code;
                                                              FRA=Code sp‚cialit‚];
                                                   NotBlank=Yes }
    { 100 ;   ;Contact No.         ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Header"."Contact No." WHERE (No.=FIELD(Service Header No.),
                                                                                                            Document Type=CONST(Invoice)));
                                                   CaptionML=[ENU=Contact No.;
                                                              FRA=Nø contact];
                                                   Editable=No }
    { 110 ;   ;Building Trade Description;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Building Trade".Description WHERE (No.=FIELD(Building Trade No.)));
                                                   CaptionML=[ENU=Building Trade Description;
                                                              FRA=D‚signation corps de m‚tier];
                                                   Editable=No }
    { 111 ;   ;Speciality Description;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Specialization.Description WHERE (Code=FIELD(Speciality Code)));
                                                   CaptionML=[ENU=Speciality Description;
                                                              FRA=D‚signation sp‚cialit‚];
                                                   Editable=No }
    { 120 ;   ;Starting Date       ;Date          ;CaptionML=[ENU=Starting Date;
                                                              FRA=Date d‚but] }
    { 121 ;   ;Starting Time       ;Time          ;OnValidate=BEGIN
                                                                IF "Starting Time" <> 0T THEN
                                                                  CheckFields(FIELDCAPTION("Starting Time")); //IMH10.ISAT.MA
                                                              END;

                                                   CaptionML=[ENU=Starting Time;
                                                              FRA=Heure d‚but] }
    { 122 ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                IF "Ending Date" <> 0D THEN
                                                                  CheckFields(FIELDCAPTION("Ending Date")); //IMH10.ISAT.MA
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              FRA=Date fin] }
    { 125 ;   ;Duration            ;Duration      ;OnValidate=BEGIN
                                                                IF Duration <> 0 THEN
                                                                  CheckFields(FIELDCAPTION(Duration)); //IMH10.ISAT.MA
                                                              END;

                                                   CaptionML=[ENU=Duration;
                                                              FRA=Dur‚e] }
    { 50000;  ;Comment             ;Text80        ;CaptionML=[ENU=Comment;
                                                              FRA=Commentaire] }
    { 50011;  ;Address 3           ;Text50        ;CaptionML=[ENU=Address 3;
                                                              FRA=Adresse 3];
                                                   Editable=No }
    { 50020;  ;Beneficiary Contact No.;Code20     ;CaptionML=[ENU=Beneficiary Contact No.;
                                                              FRA=Nø contact b‚n‚ficiaire] }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
    { 56012;  ;GUID Fusion Code    ;Code40        ;CaptionML=[ENU=GUID Fusion Code;
                                                              FRA=Code Fusion GUID] }
  }
  KEYS
  {
    {    ;Service Header No.,Address Type,Address No.;
                                                   Clustered=Yes }
    {    ;GUID Fusion Code                         }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PostCode@1100281000 : Record 225;
      Text000@1100281001 : TextConst 'FRA="Vous ne pouvez pas saisir %1 pour le %2 = %3."';
      ProviderNotificationMgt@1100281002 : Codeunit 50148;

    PROCEDURE TouchRecord@1100281006(pInsert@1100281000 : Boolean);
    BEGIN
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;
      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    PROCEDURE GetNextAddressNo@1100281000() : Integer;
    VAR
      lServiceHeaderAddress@1100281000 : Record 50068;
    BEGIN
      lServiceHeaderAddress.LOCKTABLE(TRUE);
      lServiceHeaderAddress.SETRANGE("Service Header No.","Service Header No.");
      lServiceHeaderAddress.SETRANGE("Address Type","Address Type");
      IF lServiceHeaderAddress.ISEMPTY THEN
        EXIT(1);
      lServiceHeaderAddress.FINDLAST;
      EXIT(lServiceHeaderAddress."Address No." + 1);
    END;

    PROCEDURE CheckContactAltAddress@1100281001();
    VAR
      lContactAltAddress@1100281000 : Record 5051;
    BEGIN
      IF ("Contact Address Code" = '') OR
         ("Contact Address Code" <> xRec."Contact Address Code") THEN
        EXIT;
      CALCFIELDS("Contact No.");
      IF NOT lContactAltAddress.GET("Contact No.","Contact Address Code") THEN
        EXIT;
      IF (lContactAltAddress.Address <> Address) OR
         (lContactAltAddress."Address 2" <> "Address 2") OR
         (lContactAltAddress."Post Code" <> "Post Code") OR
         (lContactAltAddress.City <> City) THEN BEGIN
        "Contact Address Code" := '';
      END;
    END;

    PROCEDURE CalculateName@1100281002();
    BEGIN
      IF "First Name" <> '' THEN BEGIN
        IF Surname <> '' THEN
          Name := "First Name" + ' ' + Surname
        ELSE
          Name := "First Name";
      END ELSE BEGIN
        IF Surname <> '' THEN
          Name := Surname

      END;
    END;

    PROCEDURE NameBreakdown@13();
    VAR
      NamePart@1000 : ARRAY [30] OF Text[250];
      TempName@1001 : Text[250];
      FirstName250@1004 : Text[250];
      i@1002 : Integer;
      NoOfParts@1003 : Integer;
    BEGIN
      //IMH05
      TempName := Name;
      WHILE STRPOS(TempName,' ') > 0 DO BEGIN
        IF STRPOS(TempName,' ') > 1 THEN BEGIN
          i := i + 1;
          NamePart[i] := COPYSTR(TempName,1,STRPOS(TempName,' ') - 1);
        END;
        TempName := COPYSTR(TempName,STRPOS(TempName,' ') + 1);
      END;
      i := i + 1;
      NamePart[i] := TempName;
      NoOfParts := i;

      "First Name" := '';
      Surname := '';
      FOR i := 1 TO NoOfParts DO BEGIN
        IF (i = NoOfParts) AND (NoOfParts > 1) THEN BEGIN
          IF STRLEN(NamePart[i]) > MAXSTRLEN(Surname) THEN
            EXIT;
          IF Surname <> '' THEN
            Surname := Surname + ' ' + NamePart[i]
          ELSE
            Surname := NamePart[i]
        END ELSE
          IF (i = NoOfParts - 1) AND (NoOfParts > 2) THEN BEGIN
            IF Surname <> '' THEN
              Surname := Surname + ' ' + NamePart[i]
            ELSE
              Surname := NamePart[i]
          END ELSE BEGIN
            IF "First Name" <> '' THEN BEGIN
              IF Surname <> '' THEN
                Surname := Surname + ' ' + NamePart[i]
              ELSE
                Surname := NamePart[i];
            END ELSE BEGIN
              FirstName250 := DELCHR("First Name" + ' ' + NamePart[i],'<',' ');
              "First Name" := FirstName250;
            END;
          END;
      END;
    END;

    PROCEDURE SelectBuildingTrade@1100281011();
    VAR
      lServiceHeader@1100281003 : Record 5900;
      lBuildingTrade@1100281002 : Record 50032;
      lSpeBuildingTrade@1100281004 : Record 50031;
      lSpecMgt@1100281001 : Codeunit 50020;
      lFilter@1100281000 : Text[100];
    BEGIN
      //IMH08
      IF NOT lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,"Service Header No.") THEN
        EXIT;
      lFilter := lSpecMgt.GetBuildingTradeFilter(
        lServiceHeader."Corporate No.",
        lServiceHeader."Service Order Type",
        lServiceHeader."Service Cause");
      IF lFilter <> '' THEN BEGIN
        IF "Speciality Code" = '' THEN BEGIN
          IF lFilter <> '' THEN
            lBuildingTrade.SETFILTER("No.",lFilter);
          IF FORM.RUNMODAL(0,lBuildingTrade) IN [ACTION::LookupOK,ACTION::OK] THEN
            "Building Trade No." := lBuildingTrade."No.";
        END
        ELSE BEGIN
          IF lFilter <> '' THEN
           lSpeBuildingTrade.SETFILTER("Building Trade No.",lFilter);
          lSpeBuildingTrade.SETRANGE("Specialization Code","Speciality Code");
          IF FORM.RUNMODAL(0,lSpeBuildingTrade) IN [ACTION::LookupOK,ACTION::OK] THEN
            "Building Trade No." := lSpeBuildingTrade."Building Trade No.";
        END;
      END ELSE BEGIN
        lSpeBuildingTrade.SETCURRENTKEY("Specialization Code","Building Trade No.");
        IF "Speciality Code" <> '' THEN
          lSpeBuildingTrade.SETRANGE("Specialization Code","Speciality Code");
        IF FORM.RUNMODAL(0,lSpeBuildingTrade) IN [ACTION::LookupOK,ACTION::OK] THEN
          "Building Trade No." := lSpeBuildingTrade."Building Trade No.";
      END;
    END;

    PROCEDURE SelectSpecializationCode@1100281015();
    VAR
      lSpecialization@1100281002 : Record 50005;
      lServiceHeader@1100281003 : Record 5900;
      lSpeBuildingTrade@1100281004 : Record 50031;
      lSpecMgt@1100281001 : Codeunit 50020;
      lFilter@1100281000 : Text[100];
    BEGIN
      //IMH08
      IF NOT lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,"Service Header No.") THEN
        EXIT;
      lFilter := lSpecMgt.GetBuildingTradeFilter(
        lServiceHeader."Corporate No.",
        lServiceHeader."Service Order Type",
        lServiceHeader."Service Cause");

      IF lFilter <> '' THEN BEGIN
        lSpeBuildingTrade.SETFILTER("Building Trade No.",lFilter);
        IF FORM.RUNMODAL(0,lSpeBuildingTrade) IN [ACTION::LookupOK,ACTION::OK] THEN BEGIN
          "Building Trade No." := lSpeBuildingTrade."Building Trade No.";
          "Speciality Code" := lSpeBuildingTrade."Specialization Code";
        END;
      END ELSE BEGIN
        IF "Building Trade No." <> '' THEN BEGIN
          lSpeBuildingTrade.SETRANGE("Building Trade No.","Building Trade No.");
          IF FORM.RUNMODAL(0,lSpeBuildingTrade) IN [ACTION::LookupOK,ACTION::OK] THEN BEGIN
            "Building Trade No." := lSpeBuildingTrade."Building Trade No.";
            "Speciality Code" := lSpeBuildingTrade."Specialization Code";
          END;
        END ELSE BEGIN
          IF FORM.RUNMODAL(0,lSpecialization) IN [ACTION::LookupOK,ACTION::OK] THEN BEGIN
            "Speciality Code" := lSpecialization.Code;
          END;

        END;
      END;
    END;

    PROCEDURE CheckFields@1100281003(pFieldCaption@1100281000 : Text[50]);
    BEGIN
      // IMH10.ISAT.MA  V‚rifie le champ saisi en fonction du type adresse.
      CASE "Address Type" OF
        "Address Type"::Guarding :
        BEGIN
          IF NOT (CurrFieldNo IN [FIELDNO("Starting Date"),FIELDNO("Starting Time"),FIELDNO(Duration)]) THEN
            ERROR(STRSUBSTNO(Text000,pFieldCaption,FIELDCAPTION("Address Type"),FORMAT("Address Type",0,'<Text>')));
        END;
        "Address Type"::Moving :
        BEGIN
          IF NOT (CurrFieldNo IN [FIELDNO("Starting Date"),FIELDNO(Digicode),FIELDNO(Lift),FIELDNO(Floor),FIELDNO(Address),
                                  FIELDNO("Address 2"),FIELDNO("Post Code"),FIELDNO(City),FIELDNO(Notes),
                                  FIELDNO("Suite Nature"),FIELDNO("Suite Value")]) THEN
            ERROR(STRSUBSTNO(Text000,pFieldCaption,FIELDCAPTION("Address Type"),FORMAT("Address Type",0,'<Text>')));
        END;
        "Address Type"::"Public Storage" :
        BEGIN
          IF NOT (CurrFieldNo IN [FIELDNO("Starting Date"),FIELDNO("Ending Date"),FIELDNO("Suite Nature"),FIELDNO("Suite Value")]) THEN
            ERROR(STRSUBSTNO(Text000,pFieldCaption,FIELDCAPTION("Address Type"),FORMAT("Address Type",0,'<Text>')));
        END;
      END;
    END;

    PROCEDURE InitLine@1100281004();
    BEGIN
      // IMH10.ISAT.MA R‚initialise l'enregistrement au changement de type adresse

      IF ("Address Type" <> "Address Type"::Guarding) THEN
      BEGIN
        "Starting Time" := 0T;
        Duration := 0;
      END;

      IF ("Address Type" <> "Address Type"::Moving) THEN
      BEGIN
        Digicode := '';
        Lift := FALSE;
        Floor := 0;
        Address := '';
        "Address 2" := '';
        "Post Code" := '';
        City := '';
        Notes := '';
      END;

      IF ("Address Type" <> "Address Type"::"Public Storage") THEN
      BEGIN
        "Ending Date" := 0D;
        "Suite Nature" := '';
        "Suite Value"  := 0;
      END;
    END;

    PROCEDURE InitBuildingSpec@1100281008();
    VAR
      lServiceMgtSetup@1100281000 : Record 5911;
    BEGIN
      //<<IMH05
      lServiceMgtSetup.GET;
      CASE "Address Type" OF
        "Address Type"::Guarding:BEGIN
          "Building Trade No." := lServiceMgtSetup."Guarding Building Trade No.";
          "Speciality Code" := lServiceMgtSetup."Guarding Speciality Code";
         END;
        "Address Type"::"Public Storage":BEGIN
           "Building Trade No." := lServiceMgtSetup."Public Storage Building Trade";
          "Speciality Code" := lServiceMgtSetup."Public Storage Speciality Code";
        END;
        "Address Type"::Moving:BEGIN
          "Building Trade No." := lServiceMgtSetup."Moving Building Trade No.";
          "Speciality Code" := lServiceMgtSetup."Moving Speciality Code";
        END;
      END;
      //>>IMMH05
    END;

    PROCEDURE UpdateHeaderStatus@1100281005(pFromInsert@1100281000 : Boolean);
    VAR
      lServHeader@1100281001 : Record 5900;
    BEGIN
      // pilotage du statut du produit
      IF NOT pFromInsert THEN
        MODIFY(FALSE);
      IF lServHeader.GET(lServHeader."Document Type"::Invoice, "Service Header No.") THEN
        IF lServHeader.AutoStep THEN
          lServHeader.MODIFY(TRUE);
    END;

    PROCEDURE CreateContact@4(VAR pServHeaderAddr@1000 : Record 50068);
    VAR
      lCont@1100281000 : Record 5050;
      lOldCont@1100281005 : Record 5050;
      lServHeader@1100281006 : Record 5900;
      lChangeLogMgt@1100281004 : Codeunit 423;
      lRecRef@1100281003 : RecordRef;
      lxRecRef@1100281002 : RecordRef;
      lContExist@1100281001 : Boolean;
    BEGIN
      //<<IMH18.ISAT.EBA
      IF pServHeaderAddr."Address Type" <> pServHeaderAddr."Address Type"::Voucher THEN
        EXIT;

      IF NOT lServHeader.GET(lServHeader."Document Type"::Invoice,pServHeaderAddr."Service Header No.") THEN
        lServHeader.INIT;

      WITH lCont DO BEGIN
        lContExist := GET(pServHeaderAddr."Beneficiary Contact No.");
        IF lContExist THEN
          lOldCont := lCont
        ELSE
          INIT;

        Type := Type::Company;
        "Service Contact" := "Service Contact"::Beneficiary;
        "Salutation Code" := pServHeaderAddr."Salutation Code";
        Name := pServHeaderAddr.Name;
        Address := pServHeaderAddr.Address;
        "Address 2" := pServHeaderAddr."Address 2";
        "Address 3" := pServHeaderAddr."Address 3";
        City := pServHeaderAddr.City;
        "Post Code" := pServHeaderAddr."Post Code";
        "Country/Region Code" := pServHeaderAddr."Country/Region Code";
        "Phone No." := pServHeaderAddr."Phone No.";
        "Fax No." := pServHeaderAddr."Fax No.";
        "Mobile Phone No." := pServHeaderAddr."Mobile Phone No.";
        "Role Code" := pServHeaderAddr."Role Code";
        "First Name" := pServHeaderAddr."First Name";
        Surname := pServHeaderAddr.Surname;
        County := pServHeaderAddr.County;
        "Corporate No." := lServHeader."Corporate No.";

        IF lContExist THEN BEGIN
          MODIFY(TRUE);

          lxRecRef.GETTABLE(lOldCont);
          lRecRef.GETTABLE(lCont);
          lChangeLogMgt.LogModification(lRecRef,lxRecRef);
        END ELSE BEGIN
          INSERT(TRUE);

          "Salutation Code" := pServHeaderAddr."Salutation Code";
          VALIDATE(Name);
          MODIFY;

          pServHeaderAddr."Beneficiary Contact No." := "No.";
          pServHeaderAddr.MODIFY;
        END;
      END;
      //>>IMH18.ISAT.EBA
    END;

    BEGIN
    {
      /** @r IMH19 @d 04/06/13 @a ISAT.PC @v IMH6.01.347 @s JUIN @h 4322 @c D‚placement du code */
      /** @r IMH18 @d 07/11/11 @a ISAT.EBA @v IMH6.01.011 @s Gestion du service
          @c Ajout champ 50020 "Beneficiary Contact No."
          @c Ajout focntion "CreateContact" */
      /** @r IMH17 @d 08/10/11 @a ISAT.PC @v IMH6.01.165 @s Gestion Notification
          @c Cr‚ation notif sur insertion et modification contact anexe */
      /** @r IMH15 @d 05/09/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Gestion du statut */
      /** @r IMH14 @d 22/08/11 @a ISAT.EB @v IMH6.01.165 @s Interface Extranet
          @c Ajout champ 50000 "Comment" */
      /** @r IMH13 @d 25/03/11 @a ISAT.PC @v IMH6.01.136 @s Interfact Fusion
          @c Ajout champ 56010-56012 GTA Code, GTA Norma, Fusion Code
      /** @r IMH12 @d 14/04/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c Init des corps de m‚tier et sp‚cialit‚s, d‚placement du code de l'insert sur le validate de adresse type */
      /** @r IMH11 @d 29/03/11 @a ISAT.ZW @v IMH6.01.136 @s Gestion interface fusion
          @c Ajouts type addresse Contact expert */
      /** @r IMH10 @d 24/03/11 @a ISAT.MA @v IMH6.01.011 @s Gestion du service
          @c Ajouts des champs 120 … 122 */
      /** @r IMH09 @d 18/03/2011 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout contr“le Phone No. */
      /** @r IMH08 @d 03/02/11 @a ISAT.LLT @v IMH6.01.010 @s Gestion du catalogue
          @c Filtre sur corps ‚tat en fonction de la cause */
      /** @r IMH07 @d 17/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Correction */
      /** @r IHM06 @d 10/02/11 @a ISAT.ZW @v IMH6.01.001 @s Normalisation des donn‚es
          @c Associer les Pays au code postaux - descendre le code pays automatiquement*/
      /** @r IMH05 @d 13/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout champ 35 Surname */
      /** @r IMH05 @d 16/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout des champs 31,32,33,34
          @c Ajout des champs li‚s … la sp‚cialit‚ */
      /** @r IMH04 @d 13/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout des champs 40,41,42,43 pour gestion adresse rapide */
      /** @r IMH03 @d 10/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout du type adresse "D‚claration sinistre" */
      /** @r IMH02 @d 18/11/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Aout du champ 30 Role Code */
      /** @r IMH01 @d 04/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Cr‚ation */
    }
    END.
  }
}