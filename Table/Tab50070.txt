OBJECT Table 50070 Intervention Description
{
  OBJECT-PROPERTIES
  {
    Date=24/06/13;
    Time=16:02:27;
    Modified=Yes;
    Version List=IMH6.01,JUIN;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lCampaign@1100281000 : Record 5071;
             BEGIN
               TESTFIELD("Service Header No.");
               TouchRecord(TRUE);
               //TestFields; //IMH03.ST
               UpdateRec;//IMH12
               //UpdateHeaderStatus(TRUE); //IMH11.ST
               //<<IMH20.isat.nfo
               lCampaign.UpdateInterDescRelatTables(Rec);
               //>>IMH20.isat.nfo
             END;

    OnModify=VAR
               lCampaign@1100281000 : Record 5071;
             BEGIN
               TouchRecord(FALSE);
               //TestFields; //IMH03.ST
               UpdateRec;//IMH12
               UpdateHeaderStatus(FALSE); //IMH11.ST
               //<<IMH20.isat.nfo
               lCampaign.UpdateInterDescRelatTables(Rec);
               //>>IMH20.isat.nfo
             END;

    OnDelete=BEGIN
               //IMH13
               //<<IMH16
               //CheckDelete;
               //>>IMH16

               //<<IMH18.ISAT.EBA
               IntervDescDetail.RESET;
               IntervDescDetail.SETRANGE("Service Header No.","Service Header No.");
               IntervDescDetail.SETRANGE("Affected Location Code","Affected Location Code");
               IntervDescDetail.SETRANGE("Speciality Code","Speciality Code");
               IntervDescDetail.SETRANGE("Building Trade No.","Building Trade No.");
               IF NOT IntervDescDetail.ISEMPTY THEN
                 IntervDescDetail.DELETEALL;
               //>>IMH18.ISAT.EBA
             END;

    OnRename=VAR
               lCampaign@1000000000 : Record 5071;
             BEGIN
               //<<IMH18.ISAT.EBA
               IntervDescDetail.RESET;
               IntervDescDetail.SETRANGE("Service Header No.",xRec."Service Header No.");
               IntervDescDetail.SETRANGE("Affected Location Code",xRec."Affected Location Code");
               IntervDescDetail.SETRANGE("Speciality Code",xRec."Speciality Code");
               IntervDescDetail.SETRANGE("Building Trade No.",xRec."Building Trade No.");
               IF IntervDescDetail.FINDSET THEN BEGIN
                 REPEAT
                   NewIntervDescDetail := IntervDescDetail;
                   NewIntervDescDetail."Service Header No." := "Service Header No.";
                   NewIntervDescDetail."Affected Location Code" := "Affected Location Code";
                   NewIntervDescDetail."Speciality Code" := "Speciality Code";
                   NewIntervDescDetail."Building Trade No." := "Building Trade No.";
                   NewIntervDescDetail."Affected Location Description" := "Affected Location Description";
                   NewIntervDescDetail.INSERT;
                 UNTIL IntervDescDetail.NEXT = 0;

                 IntervDescDetail.DELETEALL;
               END;
               //>>IMH18.ISAT.EBA

               TouchRecord(FALSE);
               //TestFields; //IMH03.ST
               UpdateRec;//IMH12
               //UpdateHeaderStatus(FALSE); //IMH11.ST

               //<<IMH24
               lCampaign.UpdateInterDescRelatTables(Rec);
               //>>IMH24

               UpdateHeaderStatus(TRUE); //IMH25
             END;

    CaptionML=[ENU=Intervention Description;
               FRA=Descriptif intervention];
    LookupFormID=Form50089;
    DrillDownFormID=Form50089;
  }
  FIELDS
  {
    { 3   ;   ;Service Header No.  ;Code20        ;TableRelation="Service Header".No. WHERE (Document Type=CONST(Invoice));
                                                   OnValidate=VAR
                                                                lServiceHeader@1100281000 : Record 5900;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Service Header No.;
                                                              FRA=Nø produit] }
    { 4   ;   ;Affected Location Code;Code10      ;TableRelation="Fault Area".Code;
                                                   OnValidate=VAR
                                                                lFaultArea@1100281000 : Record 5915;
                                                              BEGIN
                                                                IF "Affected Location Code" <> '' THEN
                                                                  IF lFaultArea.GET("Affected Location Code") THEN
                                                                    "Affected Location Description" := lFaultArea.Description;
                                                              END;

                                                   CaptionML=[ENU=Affected Location Code;
                                                              FRA=Code lieu] }
    { 5   ;   ;Speciality Code     ;Code10        ;TableRelation=IF (Building Trade No.=FILTER(<>'')) "Specialization Building Trade"."Specialization Code" WHERE (Building Trade No.=FIELD(Building Trade No.))
                                                                 ELSE IF (Building Trade No.=FILTER(='')) Specialization.Code WHERE (Code=FIELD(Speciality Code));
                                                   OnValidate=VAR
                                                                lSpeciality@1100281000 : Record 50005;
                                                                lBuildTrade@1100281001 : Code[20];
                                                                lSpecializationBuildingTrade@1100281002 : Record 50031;
                                                                lSpecializationBuildingTrade2@1100281003 : Record 50031;
                                                              BEGIN
                                                                //  lSpeciality.GET("Speciality Code");

                                                                // Descente du corps d'‚tat
                                                                IF "Building Trade No." = '' THEN BEGIN
                                                                  lSpecializationBuildingTrade.RESET;
                                                                  lSpecializationBuildingTrade.SETRANGE("Specialization Code","Speciality Code");
                                                                  IF lSpecializationBuildingTrade.FINDFIRST THEN BEGIN
                                                                    lSpecializationBuildingTrade2.COPY(lSpecializationBuildingTrade);
                                                                    IF lSpecializationBuildingTrade2.NEXT = 1 THEN BEGIN
                                                                      IF FORM.RUNMODAL(0,lSpecializationBuildingTrade) <> ACTION::LookupOK THEN BEGIN
                                                                        EXIT;
                                                                      END;
                                                                    END;
                                                                    VALIDATE("Building Trade No.",lSpecializationBuildingTrade."Building Trade No.");
                                                                  END;
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              SelectSpecializationCode;//IMH04
                                                            END;

                                                   CaptionML=[ENU=Speciality Code;
                                                              FRA=Code sp‚cialit‚] }
    { 10  ;   ;Work Type Code      ;Code10        ;TableRelation="Work Type".Code;
                                                   CaptionML=[ENU=Work Type Code;
                                                              FRA=Code type travail] }
    { 11  ;   ;Building Trade No.  ;Code20        ;TableRelation=IF (Speciality Code=FILTER('')) "Building Trade".No.
                                                                 ELSE IF (Speciality Code=FILTER(<>'')) "Specialization Building Trade"."Building Trade No." WHERE (Specialization Code=FIELD(Speciality Code));
                                                   OnValidate=VAR
                                                                lSpecBuild@1100281000 : Record 50031;
                                                              BEGIN
                                                                IF "Speciality Code" <> '' THEN BEGIN
                                                                  IF "Building Trade No." = '' THEN
                                                                    VALIDATE("Speciality Code", '')
                                                                  ELSE
                                                                    IF NOT lSpecBuild.GET("Building Trade No.", "Speciality Code") THEN
                                                                      VALIDATE("Speciality Code", '')
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              SelectBuildingTrade;//IMH04
                                                            END;

                                                   CaptionML=[ENU=Building Trade No.;
                                                              FRA=Nø corps de m‚tier] }
    { 12  ;   ;Main                ;Boolean       ;OnValidate=VAR
                                                                lInterDescr@1100281000 : Record 50070;
                                                              BEGIN
                                                                IF Main THEN BEGIN
                                                                  lInterDescr := Rec;
                                                                  lInterDescr.SETRECFILTER;
                                                                  lInterDescr.SETFILTER("Speciality Code", '<>%1', "Speciality Code");
                                                                  lInterDescr.SETRANGE(Main, TRUE);
                                                                  IF lInterDescr.FINDFIRST THEN BEGIN
                                                                    lInterDescr.Main := FALSE;
                                                                    lInterDescr.MODIFY(TRUE);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Main;
                                                              FRA=Principal] }
    { 13  ;   ;Area (Mý)           ;Decimal       ;CaptionML=[ENU=Area (Mý);
                                                              FRA=Surface (Mý)];
                                                   BlankZero=Yes }
    { 14  ;   ;VAT                 ;Code10        ;TableRelation="VAT Product Posting Group";
                                                   OnValidate=BEGIN
                                                                CalcAmount(FALSE);//IMH06
                                                              END;

                                                   CaptionML=[ENU=VAT;
                                                              FRA=TVA] }
    { 15  ;   ;Unit Price          ;Decimal       ;CaptionML=[ENU=Unit Price;
                                                              FRA=PU];
                                                   BlankZero=Yes }
    { 16  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              FRA=Quantit‚] }
    { 19  ;   ;Location Detail Code;Code10        ;TableRelation=Code.Code WHERE (Table ID=CONST(50070),
                                                                                  Field ID=CONST(19));
                                                   OnValidate=VAR
                                                                lCode@1100281000 : Record 50079;
                                                              BEGIN
                                                                //<<IMH19.ISAT.EBA
                                                                CheckDescDetail;

                                                                "Location Detail Description" := '';
                                                                //>>IMH19.ISAT.EBA
                                                                IF "Location Detail Code" <> '' THEN
                                                                  IF lCode.GET(DATABASE::"Intervention Description", FIELDNO("Location Detail Code"), "Location Detail Code") THEN
                                                                    "Location Detail Description" := lCode.Description;
                                                              END;

                                                   CaptionML=[ENU=Location Detail Code;
                                                              FRA=Code d‚tail lieu] }
    { 20  ;   ;Comment             ;Text80        ;CaptionML=[ENU=Comment;
                                                              FRA=Commentaires] }
    { 21  ;   ;Location Detail Description;Text80 ;CaptionML=[ENU=Location Detail Description;
                                                              FRA=D‚signation d‚tail lieu];
                                                   Editable=No }
    { 30  ;   ;Amount Incl. VAT    ;Decimal       ;OnValidate=BEGIN
                                                                //TESTFIELD(VAT);
                                                                "Amount Edit" := 30;
                                                                CalcAmount(TRUE); //IMH06
                                                              END;

                                                   CaptionML=[ENU=Amount Incl. VAT;
                                                              FRA=Montant TTC];
                                                   BlankZero=Yes }
    { 31  ;   ;Amount Excl. VAT    ;Decimal       ;OnValidate=BEGIN
                                                                "Amount Edit" := 31;
                                                                CalcAmount(FALSE);//IMH06
                                                              END;

                                                   CaptionML=[ENU=Amount Incl. VAT;
                                                              FRA=Montant HT];
                                                   BlankZero=Yes }
    { 32  ;   ;Amount Excl. VAT (LCY);Decimal     ;CaptionML=[ENU=Amount Excl. VAT (LCY);
                                                              FRA=Devis HT (DS)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 33  ;   ;Amount Incl. VAT (LCY);Decimal     ;CaptionML=[ENU=Amount Incl. VAT (LCY);
                                                              FRA=Devis TTC (DS)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 34  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Currency Code" <> xRec."Currency Code" THEN
                                                                  UpdateCurrencyFactor;
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              FRA=Code devise] }
    { 35  ;   ;Currency Factor     ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Amount Excl. VAT");
                                                                VALIDATE("Amount Incl. VAT");
                                                              END;

                                                   CaptionML=[ENU=Currency Factor;
                                                              FRA=Facteur devise];
                                                   DecimalPlaces=0:15;
                                                   MinValue=0;
                                                   Editable=No }
    { 36  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   OnValidate=VAR
                                                                lVATPostingSetup@1100281000 : Record 325;
                                                                ServMgtSetup@1100281001 : Record 5911;
                                                              BEGIN
                                                                //<<IMH15.isat.PC
                                                                ServMgtSetup.GET;
                                                                "VAT Bus. Posting Group" := ServMgtSetup."VAT Bus. Posting Group Default";

                                                                "VAT %" := 0;
                                                                IF lVATPostingSetup.GET("VAT Bus. Posting Group","VAT Prod. Posting Group") THEN
                                                                  "VAT %" := lVATPostingSetup."VAT %";

                                                                IF ("Amount Edit" = 30) THEN
                                                                  CalcAmount(TRUE)
                                                                ELSE
                                                                  CalcAmount(FALSE);
                                                                //>>IMH15.isat.PC
                                                              END;

                                                   CaptionML=[ENU=Order VAT Prod. Posting Group;
                                                              FRA="Groupe TVA "] }
    { 37  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              FRA=Groupe compta March‚ TVA] }
    { 38  ;   ;VAT %               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              FRA=% TVA] }
    { 39  ;   ;Amount Edit         ;Integer       ;CaptionML=FRA=Montant saisie }
    { 100 ;   ;Affected Location Description;Text50;
                                                   FieldClass=Normal;
                                                   CaptionML=[ENU=Description;
                                                              FRA=D‚signation lieu];
                                                   Editable=No }
    { 200 ;   ;Intervention Speciality;Boolean    ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Service Code" WHERE (Service Type=CONST(Intervention),
                                                                                           Service Header No.=FIELD(Service Header No.),
                                                                                           Code Type=FILTER(Speciality),
                                                                                           Code=FIELD(Speciality Code),
                                                                                           Intervention Line No.=FIELD(Intervention Line No. Filter)));
                                                   CaptionML=[ENU=Intervention Speciality;
                                                              FRA=Sp‚cialit‚ intervention] }
    { 300 ;   ;Intervention Line No. Filter;Integer;
                                                   FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Intervention Line No. Filter;
                                                              FRA=Filtre nø ligne intervention] }
    { 301 ;   ;Building Trade Description;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Building Trade".Description WHERE (No.=FIELD(Building Trade No.)));
                                                   CaptionML=[ENU=Building Trade Description;
                                                              FRA=D‚signation corps de m‚tier];
                                                   Editable=No }
    { 302 ;   ;Speciality Description;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Specialization.Description WHERE (Code=FIELD(Speciality Code)));
                                                   CaptionML=[ENU=Speciality Description;
                                                              FRA=D‚signation sp‚cialit‚];
                                                   Editable=No }
    { 310 ;   ;Intervention Lot No.;Text30        ;CaptionML=[ENU=Intervention Lot No.;
                                                              FRA=Nø lot intervention] }
    { 400 ;   ;Sensed Provider No. ;Code20        ;CaptionML=[ENU=Sensed Provider No.;
                                                              FRA=Nø prestataire pressenti] }
    { 401 ;   ;Sensed Provider Name;Text50        ;CaptionML=[ENU=Sensed Provider Name;
                                                              FRA=Raison sociale prestataire pressenti] }
    { 402 ;   ;Sensed Provider Post Code;Code20   ;CaptionML=[ENU=Sensed Provider Post Code;
                                                              FRA=Code postal prestataire pressenti] }
    { 403 ;   ;Sensed Provider City;Text30        ;CaptionML=[ENU=Sensed Provider City;
                                                              FRA=Ville prestataire pressenti] }
    { 404 ;   ;Sensed Provider Agreement No.;Code20;
                                                   CaptionML=[ENU=Sensed Provider Agreement No.;
                                                              FRA=Nø agr‚ment prestataire pressenti] }
    { 405 ;   ;Sensed Provider Affected;Option    ;CaptionML=[ENU=Sensed Provider Affected;
                                                              FRA=Prestataire pressenti missionn‚];
                                                   OptionCaptionML=[ENU="  ,Yes,No";
                                                                    FRA=" ,Oui,Non"];
                                                   OptionString=[ ,Yes,No] }
    { 50161;  ;Interv. Description Details;Integer;FieldClass=FlowField;
                                                   CalcFormula=Count("Interv. Description Detail" WHERE (Service Header No.=FIELD(Service Header No.),
                                                                                                         Affected Location Code=FIELD(Affected Location Code),
                                                                                                         Speciality Code=FIELD(Speciality Code),
                                                                                                         Building Trade No.=FIELD(Building Trade No.)));
                                                   CaptionML=[ENU=Interv. Description Details;
                                                              FRA=D‚tails descriptif intervention];
                                                   Editable=No }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Service Header No.,Affected Location Code,Speciality Code,Building Trade No.;
                                                   SumIndexFields=Amount Incl. VAT,Amount Excl. VAT,Amount Excl. VAT (LCY),Amount Incl. VAT (LCY);
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100281000 : TextConst 'ENU=The %1 field must be a decimal;FRA=Le champ %1 doit ˆtre de type d‚cimal';
      Text002@1100281001 : TextConst 'ENU=%1 can not be > to %2;FRA=%1 ne peut ˆtre > … %2';
      Currency@1100281002 : Record 4;
      Text003@1100281003 : TextConst 'ENU=Intervention exists;FRA=Impossible de supprimer la ligne car des interventions existent sur cette sp‚cialit‚';
      IntervDescDetail@1100281004 : Record 50161;
      NewIntervDescDetail@1100281005 : Record 50161;
      Text004@1100281006 : TextConst 'FRA=Impossible de modifier car il existe une ligne de d‚tail.';
      SkipCheckDescDetail@1100281007 : Boolean;

    PROCEDURE TouchRecord@1100281006(pInsert@1100281000 : Boolean);
    BEGIN
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;
      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    PROCEDURE GetSpecialityDescription@1100281002() : Text[50];
    VAR
      lSpecialization@1100281001 : Record 50005;
    BEGIN
      IF lSpecialization.GET("Speciality Code") THEN
        EXIT(lSpecialization.Description);
    END;

    PROCEDURE TestFields@1100281003();
    VAR
      lServiceHeader@1100281000 : Record 5900;
    BEGIN
      //IMH03.ST
      IF NOT lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, "Service Header No.") THEN
        CLEAR(lServiceHeader);
      IF NOT lServiceHeader."DARVA Interface" THEN
        IF "Affected Location Code" = '' THEN
          FIELDERROR("Affected Location Code");
      IF "Speciality Code" = '' THEN
        FIELDERROR("Speciality Code");
      IF "Building Trade No." = '' THEN
        FIELDERROR("Building Trade No.");
    END;

    PROCEDURE UpdateRec@1100281001();
    VAR
      lServHeader@1100281000 : Record 5900;
      lService@1100281001 : Record 50066;
      lIntervention@1100281002 : Record 50075;
    BEGIN
      //IMH12
      IF Main THEN BEGIN
        IF ("Service Header No." <> '')
          THEN BEGIN
            lIntervention.SETRANGE("Service Header No.","Service Header No.");
            //
            IF lIntervention.FINDSET THEN
            REPEAT
              IF Main AND (lIntervention."Main Speciality" <> "Speciality Code") THEN BEGIN
                lIntervention."Main Speciality" := "Speciality Code";
                lIntervention.MODIFY(TRUE);
              END;
              IF (NOT Main) AND (lIntervention."Main Speciality" = "Speciality Code") THEN BEGIN
                lIntervention."Main Speciality" := '';
                lIntervention.MODIFY(TRUE);
              END;
            UNTIL lIntervention.NEXT = 0;
          END;
      END;
    END;

    PROCEDURE CalcAmount@1100281013(pFromInclVAT@1100281001 : Boolean);
    VAR
      lVAT@1100281000 : Decimal;
      lText001@1100281002 : TextConst 'ENU=The %1 field must be a decimal;FRA=Le champ %1 doit ˆtre de type d‚cimal';
    BEGIN

      //IMH19.ST
      {IF VAT = '' THEN
        VAT := '0'
      ELSE
        IF NOT EVALUATE(lVAT,VAT) THEN
          ERROR(STRSUBSTNO(lText001,FIELDCAPTION(VAT)));
      }
      //<<IMH19.ISAT.EBA
      IF IntervDescDetailExist  THEN BEGIN
        IF CurrFieldNo <> 0 THEN
          ERROR(Text004);
      END ELSE BEGIN
      //>>IMH19.ISAT.EBA
        IF pFromInclVAT THEN BEGIN
          IF "Amount Incl. VAT" <> 0 THEN BEGIN
            "Amount Excl. VAT" := "Amount Incl. VAT" / (1+("VAT %"/100));
          END;
        END
        ELSE BEGIN
          IF "Amount Excl. VAT" <> 0 THEN BEGIN
            "Amount Incl. VAT" := "Amount Excl. VAT" + ("Amount Excl. VAT" * "VAT %")/100;
          END;
        END;
      //<<IMH19.ISAT.EBA
      END;
      //>>IMH19.ISAT.EBA

      GetCurrency("Currency Code");
      "Amount Incl. VAT (LCY)" := CalcExchAmtFCYToLCY("Amount Incl. VAT");
      "Amount Incl. VAT" := ROUND("Amount Incl. VAT",Currency."Amount Rounding Precision");
      "Amount Excl. VAT (LCY)" := CalcExchAmtFCYToLCY("Amount Excl. VAT");
      "Amount Excl. VAT" := ROUND("Amount Excl. VAT",Currency."Amount Rounding Precision");
    END;

    LOCAL PROCEDURE UpdateCurrencyFactor@1100281020();
    VAR
      lCurrExchRate@1100281000 : Record 330;
    BEGIN
      //ISAT01.ST
      IF "Currency Code" <> '' THEN
        "Currency Factor" := lCurrExchRate.ExchangeRate(WORKDATE,"Currency Code")
      ELSE
        "Currency Factor" := 0;
      VALIDATE("Currency Factor");
    END;

    LOCAL PROCEDURE GetCurrency@3(pCurrencyCode@1100281000 : Code[10]);
    BEGIN
      //ISAT01.ST
      IF pCurrencyCode = '' THEN BEGIN
        CLEAR(Currency);
        Currency.InitRoundingPrecision
      END ELSE
        IF pCurrencyCode <> Currency.Code THEN BEGIN
          Currency.GET(pCurrencyCode);
          Currency.TESTFIELD("Amount Rounding Precision");
        END;
    END;

    LOCAL PROCEDURE CalcExchAmtFCYToLCY@1100281019(pAmount@1100281000 : Decimal) : Decimal;
    VAR
      lCurrExchRate@1100281001 : Record 330;
    BEGIN
      //ISAT01.ST
      IF "Currency Code" = '' THEN
        EXIT(pAmount);

      EXIT(lCurrExchRate.ExchangeAmtFCYToLCY(
              WORKDATE,"Currency Code",
              pAmount,"Currency Factor"))
    END;

    PROCEDURE CheckAmount@1100281009();
    BEGIN
      //IMH10
      {IF ("Amount Excl. VAT" = 0) OR ("Amount Incl. VAT" = 0) THEN
        EXIT;
      IF "Amount Incl. VAT" < "Amount Excl. VAT" THEN
        ERROR(STRSUBSTNO(Text002,FIELDCAPTION("Amount Excl. VAT")
              ,FIELDCAPTION("Amount Incl. VAT")));
      }
    END;

    PROCEDURE SelectBuildingTrade@1100281011();
    VAR
      lServiceHeader@1100281003 : Record 5900;
      lBuildingTrade@1100281002 : Record 50032;
      lSpeBuildingTrade@1100281004 : Record 50031;
      lSpecMgt@1100281001 : Codeunit 50020;
      lFilter@1100281000 : Text[100];
    BEGIN
      IF NOT lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,"Service Header No.") THEN
        EXIT;
      lFilter := lSpecMgt.GetBuildingTradeFilter(
        lServiceHeader."Corporate No.",
        lServiceHeader."Service Order Type",
        lServiceHeader."Service Cause");
      IF lFilter <> '' THEN BEGIN
        IF "Speciality Code" = '' THEN BEGIN
          IF lFilter <> '' THEN
            lBuildingTrade.SETFILTER("No.",lFilter);
          IF FORM.RUNMODAL(0,lBuildingTrade) IN [ACTION::LookupOK,ACTION::OK] THEN
            "Building Trade No." := lBuildingTrade."No.";
        END
        ELSE BEGIN
          IF lFilter <> '' THEN
           lSpeBuildingTrade.SETFILTER("Building Trade No.",lFilter);
          lSpeBuildingTrade.SETRANGE("Specialization Code","Speciality Code");
          IF FORM.RUNMODAL(0,lSpeBuildingTrade) IN [ACTION::LookupOK,ACTION::OK] THEN
            "Building Trade No." := lSpeBuildingTrade."Building Trade No.";
        END;
      END ELSE BEGIN
        lSpeBuildingTrade.SETCURRENTKEY("Specialization Code","Building Trade No.");
        IF "Speciality Code" <> '' THEN
          lSpeBuildingTrade.SETRANGE("Specialization Code","Speciality Code");
        IF FORM.RUNMODAL(0,lSpeBuildingTrade) IN [ACTION::LookupOK,ACTION::OK] THEN
          "Building Trade No." := lSpeBuildingTrade."Building Trade No.";
      END;
    END;

    PROCEDURE SelectSpecializationCode@1100281015();
    VAR
      lSpecialization@1100281002 : Record 50005;
      lServiceHeader@1100281003 : Record 5900;
      lSpeBuildingTrade@1100281004 : Record 50031;
      lSpecMgt@1100281001 : Codeunit 50020;
      lFilter@1100281000 : Text[100];
    BEGIN
      IF NOT lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,"Service Header No.") THEN
        EXIT;
      lFilter := lSpecMgt.GetBuildingTradeFilter(
        lServiceHeader."Corporate No.",
        lServiceHeader."Service Order Type",
        lServiceHeader."Service Cause");

      IF lFilter <> '' THEN BEGIN
        lSpeBuildingTrade.SETFILTER("Building Trade No.",lFilter);
        IF FORM.RUNMODAL(0,lSpeBuildingTrade) IN [ACTION::LookupOK,ACTION::OK] THEN BEGIN
          "Building Trade No." := lSpeBuildingTrade."Building Trade No.";
          "Speciality Code" := lSpeBuildingTrade."Specialization Code";
        END;
      END ELSE BEGIN
        IF "Building Trade No." <> '' THEN BEGIN
          lSpeBuildingTrade.SETRANGE("Building Trade No.","Building Trade No.");
          IF FORM.RUNMODAL(0,lSpeBuildingTrade) IN [ACTION::LookupOK,ACTION::OK] THEN BEGIN
            "Building Trade No." := lSpeBuildingTrade."Building Trade No.";
            "Speciality Code" := lSpeBuildingTrade."Specialization Code";
          END;
        END ELSE BEGIN
          IF FORM.RUNMODAL(0,lSpecialization) IN [ACTION::LookupOK,ACTION::OK] THEN BEGIN
            "Speciality Code" := lSpecialization.Code;
          END;

        END;
      END;
    END;

    PROCEDURE UpdateHeaderStatus@1100281008(pFromInsert@1100281000 : Boolean);
    VAR
      lServHeader@1100281001 : Record 5900;
    BEGIN
      // pilotage du statut du produit
      IF NOT pFromInsert THEN
        MODIFY(FALSE);
      IF lServHeader.GET(lServHeader."Document Type"::Invoice, "Service Header No.") THEN
        IF lServHeader.AutoStep THEN
          lServHeader.MODIFY(TRUE);
    END;

    PROCEDURE InitLocationValues@1100281000();
    VAR
      lCode@1100281000 : Record 50079;
      lFaultArea@1100281001 : Record 5915;
    BEGIN
      IF ("Location Detail Description" = '') AND ("Location Detail Code" <> '') THEN
        IF lCode.GET(50070, 19, "Location Detail Code") THEN
          "Location Detail Description" := lCode.Description;

      IF ("Affected Location Description" = '') AND ("Affected Location Code" <> '') THEN
        IF lFaultArea.GET("Affected Location Code") THEN
          "Affected Location Description" := lFaultArea.Description;
    END;

    PROCEDURE CheckDelete@1100281004() rValue : Boolean;
    VAR
      lServiceCode@1100281001 : Record 50040;
      lServiceInterventionLine@1100281002 : Record 50075;
    BEGIN
      //IMH13
      lServiceCode.SETCURRENTKEY("Service Type","Service Header No.","Code Type",Code);
      lServiceCode.SETRANGE("Service Type",lServiceCode."Service Type"::Intervention);
      lServiceCode.SETRANGE("Service Header No.","Service Header No.");
      lServiceCode.SETRANGE("Code Type",lServiceCode."Code Type"::Speciality);
      lServiceCode.SETRANGE(Code,"Speciality Code");
      lServiceCode.SETRANGE("Building Trade No.","Building Trade No.");
      IF lServiceCode.ISEMPTY THEN
        EXIT(TRUE);
      lServiceCode.FINDSET;
      REPEAT
      IF lServiceInterventionLine.GET(lServiceCode."Service Header No.",
      lServiceCode."Intervention Line No.") THEN
        IF lServiceInterventionLine."Intervention Status" < 3 THEN
          ERROR(Text003);
      UNTIL lServiceCode.NEXT = 0;
    END;

    PROCEDURE GetInterventionDetailDesc@1100281005();
    VAR
      lIntervDescriptionDetail@1100281000 : Record 50161;
    BEGIN
      // IMH15.PC
      lIntervDescriptionDetail.FILTERGROUP(2);
      lIntervDescriptionDetail.SETRANGE("Service Header No.","Service Header No.");
      lIntervDescriptionDetail.SETRANGE("Affected Location Code","Affected Location Code");
      lIntervDescriptionDetail.SETRANGE("Speciality Code","Speciality Code");
      lIntervDescriptionDetail.SETRANGE("Building Trade No.","Building Trade No.");
      lIntervDescriptionDetail.FILTERGROUP(0);
      FORM.RUNMODAL(0,lIntervDescriptionDetail);
    END;

    PROCEDURE UpdateIntervDescDetail@1100281007();
    VAR
      lIntervDescDetail@1100281000 : Record 50161;
    BEGIN
      //<<IMH19.ISAT.EBA
      lIntervDescDetail.RESET;
      lIntervDescDetail.SETRANGE("Service Header No.","Service Header No.");
      lIntervDescDetail.SETRANGE("Affected Location Code","Affected Location Code");
      lIntervDescDetail.SETRANGE("Speciality Code","Speciality Code");
      lIntervDescDetail.SETRANGE("Building Trade No.","Building Trade No.");
      IF lIntervDescDetail.FINDSET(TRUE) THEN
        REPEAT
          lIntervDescDetail."Location Detail Code" := "Location Detail Code";
          lIntervDescDetail."Location Detail Description" := "Location Detail Description";
          lIntervDescDetail.MODIFY;
        UNTIL lIntervDescDetail.NEXT = 0;
      //>>IMH19.ISAT.EBA
    END;

    PROCEDURE IntervDescDetailExist@1100281010() : Boolean;
    VAR
      lIntervDescDetail@1100281000 : Record 50161;
    BEGIN
      //<<IMH19.ISAT.EBA
      lIntervDescDetail.RESET;
      lIntervDescDetail.SETRANGE("Service Header No.","Service Header No.");
      lIntervDescDetail.SETRANGE("Affected Location Code","Affected Location Code");
      lIntervDescDetail.SETRANGE("Speciality Code","Speciality Code");
      lIntervDescDetail.SETRANGE("Building Trade No.","Building Trade No.");
      EXIT(NOT lIntervDescDetail.ISEMPTY);
      //>>IMH19.ISAT.EBA
    END;

    PROCEDURE CheckDescDetail@1100281012();
    BEGIN
      //<<IMH19.ISAT.EBA
      //IF CurrFieldNo = 0 THEN
      //  EXIT;
      IF SkipCheckDescDetail THEN
        EXIT;

      IF IntervDescDetailExist THEN
        ERROR(Text004);
      //>>IMH19.ISAT.EBA
    END;

    PROCEDURE SetSkipCheckDescDetail@1100281014(pSkipCheckDescDetail@1100281000 : Boolean);
    BEGIN
      //<<IMH19.ISAT.EBA
      SkipCheckDescDetail := pSkipCheckDescDetail;
      //>>IMH19.ISAT.EBA
    END;

    BEGIN
    {
      /** @r IMH25 @d 24/06/12 @a ISAT.ZW @v IMH6.01.347 @s JUIN @h 4437 @c Avancement processus au renommage */
      /** @r IMH24 @d 14/05/12 @a ISAT.ZW @v IMH6.01.011 @s EVC @h mantis 3467 @c Ajout Controles EVC */
      /** @r IMH23 @d 14/05/12 @a ISAT.ZW @v IMH6.01.146 @s EVC
          @c Supprimer Campaign No. */
      /** @r IMH22 @d 02/05/12 @a ISAT.NFO @v IMH6.01.146 @s EVC
          @c Ajout Campaign No. */
      /** @r IMH21 @d 14/03/12 @a ISAT.ST @v IMH6.01.146 @s Refonte facturation
          @c Ajout Amount Excl. VAT (LCY) et Amount Incl. VAT (LCY) sur SIFT Pk */
      /** @r IMH20 @d 08/03/12 @a ISAT.NFO @v IMH6.01.011 @s EVC @c Ajout Controles EVC */
      /** @r IMH19 @d 27/12/11 @a ISAT.EBA @v IMH6.01.011 @s Gestion du service
          @c Ajout fonction "UpdateIntervDescDetail" */
      /** @r IMH18 @d 27/12/11 @a ISAT.EBA @v IMH6.01.011 @s Gestion du service
          @c Gestion "D‚tail descriptif intervention" */
      /** @r IMH17 @d 02/12/11 @a ISAT.EBA @v IMH6.01.132 @s DARVA
          @c Champ "Sensed Provider City" de Code20 … Text30 */
      /** @r IMH16 @d 23/11/11 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @s mantis 2448
          @c Autoriser la suppression de descriptif intervention meme intervention cr‚‚e*/
      /** @r IMH15 @d 21/09/11 @a ISAT.PC @v IMH6.01.132 @s DARVA
          @c Ajout champ 400, Sensed Provider No.
          @c Ajout champ 401, Sensed Provider Name
          @c Ajout champ 402, Sensed Provider Post Code
          @c Ajout champ 403, Sensed Provider City
          @c Ajout champ 404, Sensed Provider Agreement No.
          @c Ajout champ 405, Sensed Provider Affected */
      /** @r IMH14 @d 15/09/11 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service
          @c Ajout Quantity */
      /** @r IMH14 @d 14/09/11 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service
          @c Ajout Interv. Description Details */
      /** @r IMH13 @d 01/09/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout si sp‚cialit‚ existe dans intervention */
      /** @r IMH12 @d 23/08/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c Champs 21 et 100 de flowfield … normal + Ajout fonction InitValues pour actualiser */
      /** @r IMH11 @d 23/08/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @C Ajout UpdateHeaderStatus */
      /** @r IMH10 @d 30/06/11 @a ISAT.MA @v IMH6.01.134 @s DARVA Management
          @c Ajout champ 400 - D‚signation lieu DARVA et 401 - D‚signation d‚tail lieu DARVA */
      /** @r IMH09 @d 06/06/11 @a ISAT.PC @v IMH6.01.146 @s Facturation
          @c Modification de tableRelation du champ 14, VAT de
          @c "Code.Code WHERE (Table ID=CONST(50070),Field ID=CONST(14))" … "VAT Product Posting Group" */
      /** @r IMH08 @d 03/02/11 @a ISAT.LLT @v IMH6.01.010 @s Gestion du catalogue
          @c Filtre sur corps ‚tat en fonction de la cause */
      /** @r IMH07 @d 21/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout champ 19 Location Detail Code
          @c Ajout champ 21 Location Detail Description*/
      /** @r IMH06 @d 21/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout champ 13 Area (Mý)
          @c Ajout champ 14 VAT
          @c Ajout champ 15 Unit Price
          @c Ajout champ 31 Amount Excl. VAT */
      /** @r IMH05 @d 27/01/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c D‚sactivation appel TestFields (IMH03) */
      /** @r IMH04 @d 18/01/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout Building Trade dans la cl‚
          @c Ajout champ 12 Main et fonctions associ‚es
          @c Ajout champ 30 Amount Incl. VAT */
      /** @r IMH03 @d 05/01/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c gestion des sp‚cialit‚s */
      /** @r IMH02 @d 09/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c gestion des sp‚cialit‚s */
      /** @r IMH01 @d 03/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Cr‚ation */
    }
    END.
  }
}