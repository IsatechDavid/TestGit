OBJECT Table 50077 Address Reference
{
  OBJECT-PROPERTIES
  {
    Date=17/05/11;
    Time=14:16:37;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Entry No." = 0 THEN BEGIN
                 "Entry No." := GetNextAddressKey;
               END;

               TouchRecord(TRUE);
             END;

    OnModify=BEGIN
               IF NOT Linked THEN BEGIN
                 ERROR(Text002);
               END;

               TouchRecord(FALSE);
             END;

    OnDelete=BEGIN
               IF NOT Linked THEN BEGIN
                 ERROR(Text002);
               END;
             END;

    OnRename=BEGIN
               IF NOT Linked THEN BEGIN
                 ERROR(Text002);
               END;

               TouchRecord(FALSE);
             END;

    CaptionML=[ENU=Address Reference;
               FRA=R‚f‚rence adresse];
    LookupFormID=Form50096;
    DrillDownFormID=Form50096;
  }
  FIELDS
  {
    { 1   ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   AltSearchField=Way Name;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              FRA=Code pays/r‚gion] }
    { 2   ;   ;Post Code           ;Code20        ;TableRelation="Post Code".Code;
                                                   CaptionML=[ENU=Post Code;
                                                              FRA=Code postal] }
    { 3   ;   ;City                ;Text30        ;TableRelation="Post Code".City;
                                                   CaptionML=[ENU=City;
                                                              FRA=Ville] }
    { 5   ;   ;Entry No.           ;Integer       ;AltSearchField=Way Name;
                                                   CaptionML=[ENU=Entry No.;
                                                              FRA=Nø s‚quence] }
    { 20  ;   ;Way Name            ;Text50        ;CaptionML=[ENU=Way Name;
                                                              FRA=Libell‚ de voie] }
    { 21  ;   ;Way Type            ;Code10        ;TableRelation=Code.Code WHERE (Table ID=CONST(50077),
                                                                                  Field ID=CONST(21));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Way Type;
                                                              FRA=Type de voie] }
    { 40  ;   ;Geo. Reference Code ;Code10        ;TableRelation="Geographical Reference";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Geographical Reference Code;
                                                              FRA=Code r‚f‚rence g‚ographique] }
    { 501 ;   ;Link Country/Region Code;Code10    ;TableRelation=Country/Region;
                                                   AltSearchField=Way Name;
                                                   OnValidate=BEGIN
                                                                VALIDATE(Linked,"Link Country/Region Code" <> '');
                                                              END;

                                                   CaptionML=[ENU=Link Country/Region Code;
                                                              FRA=Code pays/r‚gion li‚] }
    { 502 ;   ;Link Post Code      ;Code20        ;TableRelation="Post Code".Code;
                                                   OnValidate=BEGIN
                                                                VALIDATE(Linked,"Link Post Code" <> '');
                                                              END;

                                                   CaptionML=[ENU=Link Post Code;
                                                              FRA=Code postal li‚] }
    { 503 ;   ;Link City           ;Text30        ;TableRelation="Post Code".City;
                                                   OnValidate=BEGIN
                                                                VALIDATE(Linked,"Link City" <> '');
                                                              END;

                                                   CaptionML=[ENU=Link City;
                                                              FRA=Ville li‚e] }
    { 505 ;   ;Link Entry No.      ;Integer       ;TableRelation="Address Reference" WHERE (Country/Region Code=FIELD(Country/Region Code),
                                                                                            Post Code=FIELD(Post Code),
                                                                                            City=FIELD(City),
                                                                                            Entry No.=FIELD(Entry No.));
                                                   OnValidate=BEGIN
                                                                VALIDATE(Linked,"Link Entry No." <> 0);
                                                              END;

                                                   CaptionML=[ENU=Link Entry No.;
                                                              FRA=Nø s‚quence li‚] }
    { 510 ;   ;Linked              ;Boolean       ;CaptionML=[ENU=Linked;
                                                              FRA=Li‚] }
    { 1000;   ;Import Error        ;Boolean       ;CaptionML=[ENU=Import Error;
                                                              FRA=Erreur import] }
    { 1001;   ;Import Error Description;Text100   ;CaptionML=[ENU=Import Error Description;
                                                              FRA=Description erreur import] }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Country/Region Code,Post Code,City,Entry No.;
                                                   Clustered=Yes }
    {    ;Post Code,City,Country/Region Code       }
    {    ;City,Post Code,Country/Region Code       }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Way Name,Way Type,Post Code              }
  }
  CODE
  {
    VAR
      Text001@1100281001 : TextConst 'ENU=You must link to a exists address. (%1);FRA=Le rattachement … une adresse existante est obligatoire. (%1)';
      Text002@1100281000 : TextConst 'ENU=You can''t delete/modify a link address;FRA=Vous ne pouvez pas supprimer/modifier une adresse de lien';

    PROCEDURE LinkAddress@1100281007(pAddress@1100281004 : Text[50];pPostCode@1100281000 : Code[20];pCity@1100281001 : Text[30];pCountryCode@1100281005 : Code[10]) rValue : Boolean;
    VAR
      lAddressReference@1100281002 : Record 50077;
      lCounter@1100281003 : Integer;
    BEGIN
      // permettre la liaison d'une nouvelle adresse vers une adresse existante

      rValue := FALSE;

      lAddressReference.SETCURRENTKEY("Post Code",City);
      IF pPostCode <> '' THEN BEGIN
        lAddressReference.SETFILTER("Post Code",pPostCode);
      END;
      IF pCity <> '' THEN BEGIN
        IF pPostCode = '' THEN BEGIN
          lAddressReference.SETCURRENTKEY(City,"Post Code");
        END;
        lAddressReference.SETFILTER(City,pCity)
      END;

      lCounter := lAddressReference.COUNT;
      CASE lCounter OF
        // Cr‚ation et rattachement … un code de r‚f‚rence g‚o existant
        0 : BEGIN
          IF NOT CreateAddress(pAddress,pPostCode,pCity,pCountryCode,'') THEN BEGIN
            EXIT;
          END;
        END;
        1 : ;
        ELSE BEGIN
          FORM.RUNMODAL(FORM::"Address References List",lAddressReference);
          IF NOT CreateAddress(pPostCode
                  ,pCity
                  ,pCountryCode
                  ,lAddressReference."Country/Region Code"
                  ,lAddressReference."Geo. Reference Code")
          THEN BEGIN
            EXIT;
          END;
        END;
      END;

      rValue := TRUE;
    END;

    PROCEDURE CreateAddress@1100281008(pPostCode@1100281000 : Code[20];pCity@1100281001 : Text[30];pAddressReference@1100281007 : Text[50];pCountryCode@1100281008 : Code[10];pGeoReferenceCode@1100281004 : Code[10]) rValue : Boolean;
    VAR
      lAddressReference@1100281002 : Record 50077;
      lAddressReference2@1100281003 : Record 50077;
      lAddressReferenceForm@1100281005 : Form 50096;
      lText001@1100281006 : TextConst 'ENU=Please fill a linking post code;FRA=Veuillez s‚lectionner un code postal de rattachement';
    BEGIN
      // Cr‚ation d'une nouvelle adresse

      rValue := FALSE;

      IF (pAddressReference = '') THEN BEGIN
        EXIT;
      END;

      lAddressReference.SETCURRENTKEY("Post Code",City,"Country/Region Code");
      IF pPostCode <> '' THEN BEGIN
        lAddressReference.SETFILTER("Post Code",COPYSTR(pPostCode,1,2) + '*');
      END;

      IF pCity <> '' THEN BEGIN
        IF pPostCode = '' THEN BEGIN
          lAddressReference.SETCURRENTKEY(City,"Post Code","Country/Region Code");
        END;
        lAddressReference.SETFILTER(City,pCity);
        IF lAddressReference.ISEMPTY THEN BEGIN
          lAddressReference.SETRANGE(City);
        END;
      END;

      IF pCountryCode <> '' THEN BEGIN
        lAddressReference.SETFILTER("Country/Region Code",pCountryCode);
      END;

      lAddressReference.SETRANGE(Linked,FALSE);

      IF pGeoReferenceCode = '' THEN BEGIN
        CLEAR(lAddressReferenceForm);
        lAddressReferenceForm.SETTABLEVIEW(lAddressReference);
        lAddressReferenceForm.LOOKUPMODE := TRUE;
        lAddressReferenceForm.EDITABLE := FALSE;
        lAddressReferenceForm.SetCaption(lText001);
        IF lAddressReferenceForm.RUNMODAL <> ACTION::LookupOK THEN BEGIN
          ERROR(Text001,pAddressReference);
        END ELSE BEGIN
          lAddressReferenceForm.GETRECORD(lAddressReference);
          pGeoReferenceCode := lAddressReference."Geo. Reference Code";
        END;
      END;

      IF pGeoReferenceCode = '' THEN BEGIN
        ERROR(Text001,pAddressReference);
      END;

      lAddressReference2.INIT;
      lAddressReference2.VALIDATE("Country/Region Code",lAddressReference."Country/Region Code");
      lAddressReference2.VALIDATE("Post Code",lAddressReference."Post Code");
      lAddressReference2.VALIDATE(City,lAddressReference.City);
      lAddressReference2.VALIDATE("Way Name",pAddressReference);
      lAddressReference2.VALIDATE("Way Type",lAddressReference."Way Type");
      lAddressReference2.VALIDATE("Geo. Reference Code",lAddressReference."Geo. Reference Code");
      lAddressReference2.VALIDATE("Link Country/Region Code",lAddressReference."Country/Region Code");
      lAddressReference2.VALIDATE("Link Post Code",lAddressReference."Post Code");
      lAddressReference2.VALIDATE("Link City",lAddressReference.City);
      lAddressReference2.VALIDATE("Link Entry No.",lAddressReference."Entry No.");
      lAddressReference2."Entry No." := GetNextAddressKey;
      lAddressReference2.TouchRecord(TRUE);
      lAddressReference2.INSERT;

      // On valide la cr‚ation du nouveau code postal
      COMMIT;

      rValue := TRUE;
    END;

    PROCEDURE GetNextAddressKey@1100281000() : Integer;
    VAR
      lAddressReference@1100281000 : Record 50077;
    BEGIN
      lAddressReference.LOCKTABLE;
      lAddressReference.SETRANGE("Country/Region Code","Country/Region Code");
      lAddressReference.SETRANGE("Post Code","Post Code");
      lAddressReference.SETRANGE(City,City);
      IF lAddressReference.ISEMPTY THEN BEGIN
        EXIT(1);
      END;

      lAddressReference.LOCKTABLE;
      lAddressReference.FINDLAST;
      EXIT(lAddressReference."Entry No." + 1);
    END;

    PROCEDURE TouchRecord@1100281006(pInsert@1100281000 : Boolean);
    BEGIN
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;

      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    BEGIN
    {
      /** @r IMH02 @d 21/10/2010 @a IMH.ZW @v IMH6.01.001 @s Normalisation des donn‚es
          @c Ajout champ Geo. Reference Code */
      /** @r IMH01 @d 13/10/2010 @a IMH.ST @v IMH6.01.001 @s Normalisation des donn‚es
          @c Cr‚ation objet */
    }
    END.
  }
}