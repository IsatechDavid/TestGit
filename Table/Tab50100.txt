OBJECT Table 50100 Service Header Claims
{
  OBJECT-PROPERTIES
  {
    Date=09/10/12;
    Time=16:41:27;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TouchRecord(TRUE);
             END;

    OnModify=BEGIN
               TouchRecord(FALSE);
               //<<IMH02.ST
               ServHeader.GET(ServHeader."Document Type"::Invoice, "Service Header No.");
               IF ServHeader.AutoStep THEN
                 ServHeader.MODIFY(TRUE);
               //>>IMH02.ST
             END;

    CaptionML=[ENU=Service Header Claims Details;
               FRA=D‚tails r‚clamations ligne produit];
  }
  FIELDS
  {
    { 1   ;   ;Service Header No.  ;Code20        ;CaptionML=[ENU=Service Header No.;
                                                              FRA=Nø ligne produit] }
    { 10  ;   ;Receipt Date        ;Date          ;CaptionML=[ENU=Receipt Date;
                                                              FRA=Date r‚ception r‚clamation] }
    { 11  ;   ;Receipt Support Date;Date          ;OnValidate=BEGIN
                                                                IF "Receipt Support Date" <> 0D THEN
                                                                 IF "Receipt Support Date" > TODAY THEN
                                                                   ERROR(STRSUBSTNO(Text002,FIELDCAPTION("Receipt Support Date")));
                                                              END;

                                                   CaptionML=[ENU=Receipt Support Date;
                                                              FRA=Date de prise en charge de la r‚clamation] }
    { 20  ;   ;Claims Cause        ;Code10        ;TableRelation=Code.Code WHERE (Table ID=FILTER(50100),
                                                                                  Field ID=FILTER(20));
                                                   CaptionML=[ENU=Claims Cause;
                                                              FRA=Motif r‚clamation] }
    { 21  ;   ;Claims Purpose      ;Text120       ;CaptionML=[ENU=Claims Pupose;
                                                              FRA=Objet r‚clamation] }
    { 30  ;   ;Responsibility      ;Option        ;CaptionML=[ENU=Responsibility;
                                                              FRA=Responsable];
                                                   OptionCaptionML=[ENU=" ,Provider,IMH,Expert";
                                                                    FRA=" ,Prestataire,IMH,Expert"];
                                                   OptionString=[ ,Provider,IMH,Expert] }
    { 31  ;   ;Admissibility       ;Option        ;CaptionML=[ENU=Admissibility;
                                                              FRA=Recevabilit‚];
                                                   OptionCaptionML=[ENU=" ,Yes,No";
                                                                    FRA=" ,Oui,Non"];
                                                   OptionString=[ ,Yes,No] }
    { 32  ;   ;Restart Work        ;Option        ;OnValidate=VAR
                                                                lServiceHeader@1100281000 : Record 5900;
                                                                lInterventionMgt@1000000000 : Codeunit 50014;
                                                                lTrayLine@1000000001 : Record 50048;
                                                              BEGIN
                                                                IF "Restart Work" = "Restart Work"::"Other provider" THEN BEGIN
                                                                  IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,"Service Header No.") THEN BEGIN
                                                                    //<<IMH04
                                                                    //IF CONFIRM(Text001) THEN
                                                                    //    lServiceHeader.CreateServiceInterventionLine(TRUE);
                                                                      lInterventionMgt.CreateProviderNotFoundTrayLine(lServiceHeader, lTrayLine);
                                                                      lTrayLine.ShowCard;
                                                                    END;
                                                                    //>>IMH04
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Restart Work;
                                                              FRA=Reprise travaux];
                                                   OptionCaptionML=[ENU=" ,No,Original Provider,Other provider";
                                                                    FRA=" ,Non,Prestataire origine,Autre prestataire"];
                                                   OptionString=[ ,No,Original Provider,Other provider] }
    { 33  ;   ;No Restart Work Cause;Code10       ;TableRelation=Code.Code WHERE (Table ID=CONST(50100),
                                                                                  Field ID=CONST(33));
                                                   CaptionML=[ENU=No Restart Work Cause;
                                                              FRA=Motif non reprise travaux] }
    { 34  ;   ;Other Provider Cause;Code10        ;TableRelation=Code.Code WHERE (Table ID=CONST(50100),
                                                                                  Field ID=CONST(34));
                                                   CaptionML=[ENU=Other Provider Cause;
                                                              FRA=Motif autre prestataire] }
    { 40  ;   ;Exp.start Date      ;Date          ;CaptionML=[ENU=Exp.start Date;
                                                              FRA=Date Pr‚v. reprise] }
    { 41  ;   ;Restart Work Start Date;Date       ;CaptionML=[ENU=Restart Work Start Date;
                                                              FRA=Date d‚but reprise travaux] }
    { 42  ;   ;Restart Work End Date;Date         ;CaptionML=[ENU=Restart Work End Date;
                                                              FRA=Date fin reprise travaux] }
    { 43  ;   ;Restart Work Min. Receipt Date;Date;CaptionML=[ENU=Restart Work Min. Receipt Date;
                                                              FRA=Date r‚ception PV reprise travaux] }
    { 44  ;   ;Joint Survey Date   ;Date          ;CaptionML=[ENU=Joint Survey Date;
                                                              FRA=Date expertise contradictoire] }
    { 45  ;   ;RC visit Date       ;Date          ;CaptionML=[ENU=RC visit Date;
                                                              FRA=Date Visite CR] }
    { 46  ;   ;Start Date          ;Date          ;CaptionML=[ENU=Start Date;
                                                              FRA=Date r‚elle reprise] }
    { 47  ;   ;Survey Report Receipt Date;Date    ;CaptionML=[ENU=Survey Report Receipt Date;
                                                              FRA=Date r‚ception rapport] }
    { 48  ;   ;Provider Compensation;Boolean      ;CaptionML=[ENU=Provider Compensation;
                                                              FRA=Indemnisation Presta.] }
    { 50  ;   ;Report Token Date   ;Date          ;CaptionML=[ENU=Report Token Date;
                                                              FRA=Report date reprise] }
    { 200 ;   ;Service Header Creation Date;DateTime;
                                                   CaptionML=[ENU=Service Header Creation Date;
                                                              FRA=Date cr‚ation ligne produit];
                                                   Editable=No }
    { 201 ;   ;Claims Cause Description;Text50    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Code.Description WHERE (Table ID=FILTER(50100),
                                                                                              Field ID=FILTER(20),
                                                                                              Code=FIELD(Claims Cause)));
                                                   CaptionML=[ENU=Claims Cause;
                                                              FRA=D‚signation motif r‚clamation];
                                                   Editable=No }
    { 50201;  ;Provider No.        ;Code20        ;TableRelation=Provider.No.;
                                                   CaptionML=[ENU=Provider No.;
                                                              FRA=Nø prestataire];
                                                   Editable=No }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Service Header No.                      ;Clustered=Yes }
    {    ;Provider No.                             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100281000 : TextConst 'ENU=Create Intervention Line ?;FRA=Cr‚er ligne intervention ?';
      ServHeader@1100281001 : Record 5900;
      Text002@1100281002 : TextConst 'ENU=%1 must not be > to today;FRA=%1 ne doit pas ˆtre sup‚rieure … la date du jour';

    PROCEDURE TouchRecord@1100281006(pInsert@1100281000 : Boolean);
    BEGIN
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;
      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    BEGIN
    {
      /** @r IMH04 @d 13/08/12 @a ISAT.ZW @v IMH6.01.226 @s V1.4 @h mantis 3614
          @c Gestion de "autre prestataire" pour la reprise des travaux */
      /** @r IMH03 @d 12/09/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Le champ Receipt Support Date devient normal au lieu de flowfield */
      /** @r IMH02 @d 25/03/11 @a ISAT.ST @v IMH6.01.102 @s Gestion du service @c Ajout AutoStep Service */
      /** @r IMH01 @d 17/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service @c Cr‚ation */
    }
    END.
  }
}