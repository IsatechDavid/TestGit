OBJECT Table 50136 Dimension Repartition
{
  OBJECT-PROPERTIES
  {
    Date=29/06/11;
    Time=11:38:23;
    Modified=Yes;
    Version List=IMH6.01;
  }
  PROPERTIES
  {
    DataCaptionFields=Table Code;
    OnInsert=VAR
               lRecDimensionRepartition@1100281000 : Record 50136;
             BEGIN
               IF "Table Code"='' THEN
                 ERROR(gCstTxt005);
               CASE Type OF
               Type::Line:
                 BEGIN
                   lRecDimensionRepartition.SETRANGE(Type,Type::Header);
                   lRecDimensionRepartition.SETRANGE("Table Code","Table Code");
                   IF lRecDimensionRepartition.FINDFIRST THEN BEGIN
                     IF lRecDimensionRepartition.Status = Status::Certified THEN
                       ERROR(gCstTxt002);
                     "Distribution Type" := lRecDimensionRepartition."Distribution Type";
                   END;
                 END;
               Type::Header:
                 BEGIN
                   lRecDimensionRepartition.SETRANGE(Type,Type::Header);
                   lRecDimensionRepartition.SETRANGE("Table Code","Table Code");
                   IF lRecDimensionRepartition.FINDFIRST THEN
                     ERROR(gCstTxt004);
                 END;
               END;
             END;

    OnModify=VAR
               lRecDimensionRepartition@1100281000 : Record 50136;
             BEGIN

               lRecDimensionRepartition.SETRANGE(Type,Type::Header);
               lRecDimensionRepartition.SETRANGE("Table Code","Table Code");
               IF lRecDimensionRepartition.FINDFIRST THEN
                 IF lRecDimensionRepartition.Status = Status::Certified THEN
                   ERROR(gCstTxt002);
             END;

    OnDelete=VAR
               lRecDimensionRepartition@1100281000 : Record 50136;
             BEGIN
               lRecDimensionRepartition.RESET;
               lRecDimensionRepartition.SETRANGE(Type,Type::Header);
               lRecDimensionRepartition.SETRANGE("Table Code","Table Code");
               IF lRecDimensionRepartition.FINDFIRST THEN
                 IF lRecDimensionRepartition.Status = Status::Certified THEN
                   ERROR(gCstTxt002);

               IF Type = Type::Header THEN
               BEGIN
                 lRecDimensionRepartition.RESET;
                 lRecDimensionRepartition.SETRANGE(Type,Type::Line);
                 lRecDimensionRepartition.SETRANGE("Table Code","Table Code");
                 lRecDimensionRepartition.DELETEALL;
               END;
             END;

    OnRename=VAR
               lRecDimensionRepartition@1100281000 : Record 50136;
             BEGIN
               IF Type = Type::Header THEN BEGIN
                  //Recheche existance ligne : interdit modification
                  lRecDimensionRepartition.SETRANGE(Type,Type::Line);
                  lRecDimensionRepartition.SETRANGE("Table Code",xRec."Table Code");
                  IF lRecDimensionRepartition.FINDFIRST THEN
                    ERROR(gCstTxt003);
               END;
             END;

    CaptionML=[ENU=Dimension Repartition;
               FRA=R‚partition Analytique];
    LookupFormID=Form50234;
    DrillDownFormID=Form50234;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;OptionCaptionML=[ENU=Header,Line;
                                                                    FRA=En-tˆte,Ligne];
                                                   OptionString=Header,Line }
    { 2   ;   ;Table Code          ;Code10        ;TableRelation="Dimension Repartition"."Table Code" WHERE (Type=CONST(Header));
                                                   OnValidate=VAR
                                                                lRecDimensionRepartition@1100281000 : Record 50136;
                                                              BEGIN
                                                                IF Rec."Table Code" <> '' THEN
                                                                  IF xRec."Table Code" <> ''  THEN
                                                                    IF "Table Code" <> xRec."Table Code" THEN
                                                                      IF Type = Type::Header THEN BEGIN
                                                                        //Recherche unicit‚
                                                                        lRecDimensionRepartition.SETRANGE(Type,Type::Header);
                                                                        lRecDimensionRepartition.SETRANGE("Table Code","Table Code");
                                                                        IF lRecDimensionRepartition.FINDFIRST THEN BEGIN
                                                                          xRec."Table Code" := '';
                                                                          "Table Code" :='';
                                                                          ERROR(gCstTxt004);
                                                                        END;
                                                                      END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=FRA=Code Table }
    { 3   ;   ;Table Description   ;Text50        ;CaptionML=FRA=D‚signation table }
    { 4   ;   ;Distribution Type   ;Option        ;OnValidate=VAR
                                                                lRecDimensionRepartition@1100281000 : Record 50136;
                                                              BEGIN
                                                                IF Type = Type::Header THEN BEGIN
                                                                  lRecDimensionRepartition.SETRANGE(Type,Type::Line);
                                                                  lRecDimensionRepartition.SETRANGE("Table Code","Table Code");
                                                                  IF lRecDimensionRepartition.FINDFIRST THEN BEGIN
                                                                    lRecDimensionRepartition.MODIFYALL("Distribution Type","Distribution Type");
                                                                    IF "Distribution Type" = "Distribution Type"::"%" THEN
                                                                      lRecDimensionRepartition.MODIFYALL("Allocation Amount", 0);
                                                                  END;
                                                                  IF "Distribution Type" = "Distribution Type"::"%" THEN
                                                                    Amount := 0;
                                                                END;
                                                              END;

                                                   CaptionML=FRA=Type de r‚partition;
                                                   OptionCaptionML=[ENU=%,Amount;
                                                                    FRA=%,Montant];
                                                   OptionString=%,Amount }
    { 5   ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              FRA=Statut];
                                                   OptionCaptionML=[ENU=New,Certified;
                                                                    FRA=En cours,Valid‚e];
                                                   OptionString=New,Certified }
    { 6   ;   ;Dimension Code      ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN

                                                                GLSetup.GET;
                                                                IF GLSetup."Global Dimension 1 Code"<>"Dimension Code" THEN
                                                                  IF GLSetup."Global Dimension 2 Code"<>"Dimension Code" THEN
                                                                    ERROR(gCstTxt001);
                                                                IF xRec.Type = xRec.Type::Line THEN
                                                                  IF NOT DimMgt.CheckDim("Dimension Code") THEN
                                                                    ERROR(DimMgt.GetDimErr);
                                                              END;

                                                   CaptionML=[ENU=Dimension Code;
                                                              FRA=Code axe] }
    { 8   ;   ;Dimension Value Code;Code20        ;TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Dimension Code));
                                                   OnValidate=BEGIN

                                                                IF xRec.Type = xRec.Type::Line THEN
                                                                  IF NOT DimMgt.CheckDimValue("Dimension Code","Dimension Value Code") THEN
                                                                    ERROR(DimMgt.GetDimErr);
                                                              END;

                                                   CaptionML=[ENU=Dimension Value Code;
                                                              FRA=Code section] }
    { 9   ;   ;% Allocation        ;Decimal       ;OnValidate=BEGIN
                                                                "CalcAmountBy%Allocation";
                                                                CheckAllocationAmount;
                                                              END;

                                                   CaptionML=[ENU=% Allocation;
                                                              FRA=R‚partition en %] }
    { 10  ;   ;No. Line            ;BigInteger    ;CaptionML=FRA=Nø ligne }
    { 20  ;   ;Amount              ;Decimal       ;OnValidate=VAR
                                                                lRecDimensionRepartition@1100281000 : Record 50136;
                                                              BEGIN
                                                                TESTFIELD("Distribution Type", "Distribution Type"::Amount);

                                                                IF Type = Type::Header THEN BEGIN
                                                                  lRecDimensionRepartition.SETRANGE(Type,Type::Line);
                                                                  lRecDimensionRepartition.SETRANGE("Table Code","Table Code");
                                                                  IF lRecDimensionRepartition.FINDFIRST THEN BEGIN
                                                                    MODIFY;
                                                                    REPEAT
                                                                      lRecDimensionRepartition."CalcAmountBy%Allocation";
                                                                      lRecDimensionRepartition.MODIFY;
                                                                    UNTIL lRecDimensionRepartition.NEXT = 0;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              FRA=Montant] }
    { 30  ;   ;Allocation Amount   ;Decimal       ;OnValidate=BEGIN
                                                                IF Type = Type::Line THEN
                                                                  TESTFIELD("Distribution Type", "Distribution Type"::Amount);
                                                                "Calc%AllocationByAmount";
                                                                CheckAllocationAmount;
                                                              END;

                                                   CaptionML=[ENU=Allocation Amount;
                                                              FRA=Montant r‚partition] }
  }
  KEYS
  {
    {    ;Type,Table Code,No. Line                 }
    {    ;Type,Table Code,Dimension Code,Dimension Value Code;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GLSetup@1100281001 : Record 98;
      DimMgt@1100281000 : Codeunit 408;
      gCstTxt001@1100281002 : TextConst 'FRA=Vous ne pouvez r‚partir qu''un axe principal';
      gCstTxt002@1100281003 : TextConst 'FRA=Vous ne pouvez pas modifier une r‚partition que si elle est en status "En cours".';
      gCstTxt003@1100281004 : TextConst 'FRA=Vous ne pouvez pas modifier le "code table" de la r‚partition analytique lorsque des lignes existent.';
      gCstTxt004@1100281005 : TextConst 'FRA=Il existe d‚j… un "code table" identique.';
      gCstTxt005@1100281006 : TextConst 'FRA=Vous devez saisir un code table.';
      Text001@1100281007 : TextConst 'ENU=Amount total should not be higher than the header amount.;FRA=Le total des montants r‚partition ne doit pas ˆtre sup‚rieur au montant entˆte.';

    PROCEDURE fNulCtrlLancerRepartition@1100281000();
    VAR
      lRecRepAna@1100281001 : Record 50136;
      "lInt%"@1100281000 : Decimal;
      lCstText001@1100281002 : TextConst 'FRA=La r‚partition de l''axe %1 avec la section %2 doit-ˆtre diff‚rente de z‚ro.';
      lCstText002@1100281003 : TextConst 'FRA=La r‚partition de l''axe %1 ‚tant en %, la somme des r‚partitions doit ˆtre 100%. Elle est de %2.';
      lIntBoucle@1100281004 : Integer;
      lCodAxe@1100281005 : Code[20];
      lCstText003@1100281006 : TextConst 'FRA=Vous devez cliquer sur l''entˆte pour lancer la r‚partition.';
      lintNbAxe@1100281007 : Integer;
      lCstText004@1100281008 : TextConst 'FRA=Vous devez au moins ventiller un seul axe analytique.';
      lCstText005@1100281009 : TextConst 'FRA=La r‚partition de l''axe %1 ‚tant en montant, la somme des montants r‚partitions doit ˆtre %2. Elle est de %3.';
      lTotalAmount@1100281010 : Decimal;
    BEGIN
      //Fonction controlant la bonne r‚partition analytique
      IF Type = Type::Line THEN
        ERROR(lCstText003);
      GLSetup.GET;
      lintNbAxe := 0;
      FOR lIntBoucle:=1 TO 2 DO
      BEGIN
        lRecRepAna.SETRANGE(Type,lRecRepAna.Type::Line);
        lRecRepAna.SETRANGE("Table Code","Table Code");
        IF lIntBoucle = 1 THEN
          lCodAxe := GLSetup."Global Dimension 1 Code"
        ELSE
          lCodAxe := GLSetup."Global Dimension 2 Code";
        lRecRepAna.SETRANGE("Dimension Code",lCodAxe);
        "lInt%" := 0;
        IF lRecRepAna.FINDFIRST THEN
        BEGIN
          REPEAT
            IF "Distribution Type" = "Distribution Type"::"%" THEN
              "lInt%" += lRecRepAna."% Allocation"
            ELSE
              lTotalAmount += lRecRepAna."Allocation Amount";
            IF lRecRepAna."% Allocation" = 0 THEN
              ERROR(lCstText001,lCodAxe,lRecRepAna."Dimension Value Code");
          UNTIL lRecRepAna.NEXT = 0;
          lintNbAxe += 1;
          IF "Distribution Type" = "Distribution Type"::"%" THEN BEGIN     //IMH02
            IF "lInt%" <> 100 THEN
              ERROR(lCstText002,lCodAxe,"lInt%");
          END ELSE
            IF lTotalAmount <> Amount THEN
              ERROR(lCstText005,lCodAxe,Amount, lTotalAmount);
        END;
      END;
      IF lintNbAxe = 0 THEN//Soit aucun axe soit 2 axes analytiques ont ‚t‚ paramettr‚
        ERROR(lCstText004);
      Status := Status::Certified;
      MODIFY;
    END;

    PROCEDURE fNulouvrirRepartition@1100281001();
    BEGIN
      Status := Status::New;
      MODIFY;
    END;

    PROCEDURE fIntSommeRepartition@1100281002(pCodAxe@1100281001 : Code[20]) rIntSomRep : Decimal;
    VAR
      lRecDimensionRepartition@1100281000 : Record 50136;
    BEGIN
      lRecDimensionRepartition.RESET;
      lRecDimensionRepartition.SETRANGE(Type,lRecDimensionRepartition.Type::Line);
      lRecDimensionRepartition.SETRANGE("Table Code","Table Code");
      lRecDimensionRepartition.SETRANGE("Dimension Code",pCodAxe);
      rIntSomRep := 0;
      IF lRecDimensionRepartition.FINDFIRST THEN
      REPEAT
        rIntSomRep += lRecDimensionRepartition."% Allocation"
      UNTIL lRecDimensionRepartition.NEXT =0;
    END;

    PROCEDURE "CalcAmountBy%Allocation"@1100281003();
    VAR
      lDimensionRepartition@1100281000 : Record 50136;
    BEGIN
      //IMH02
      IF "Distribution Type" = "Distribution Type"::"%" THEN
        EXIT;
      IF Type <> Type::Line THEN
        EXIT;
      IF "% Allocation" = 0 THEN BEGIN
        "Allocation Amount" := 0;
        EXIT;
      END;

      GetHeaderLine(lDimensionRepartition);
      lDimensionRepartition.TESTFIELD(Amount);
      "Allocation Amount" := lDimensionRepartition.Amount * ("% Allocation" / 100);
    END;

    PROCEDURE "Calc%AllocationByAmount"@1100281009();
    VAR
      lDimensionRepartition@1100281000 : Record 50136;
    BEGIN
      //IMH02
      IF "Distribution Type" = "Distribution Type"::"%" THEN
        EXIT;
      IF Type <> Type::Line THEN
        EXIT;
      IF "Allocation Amount" = 0 THEN BEGIN
        "% Allocation" := 0;
        EXIT;
      END;

      GetHeaderLine(lDimensionRepartition);
      lDimensionRepartition.TESTFIELD(Amount);
      "% Allocation" := ("Allocation Amount" / lDimensionRepartition.Amount) * 100;
    END;

    PROCEDURE CheckAllocationAmount@1100281004();
    VAR
      lDimensionRepartition@1100281000 : Record 50136;
      lAmount@1100281001 : Decimal;
    BEGIN
      //IMH02
      IF "Distribution Type" = "Distribution Type"::"%" THEN
        EXIT;
      lDimensionRepartition.SETRANGE(Type, lDimensionRepartition.Type::Line);
      lDimensionRepartition.SETRANGE("Table Code", "Table Code");
      lDimensionRepartition.SETRANGE("Distribution Type", "Distribution Type");
      lDimensionRepartition.SETFILTER("No. Line", '<>%1', "No. Line");

      IF lDimensionRepartition.FINDFIRST THEN
        REPEAT
          lAmount += lDimensionRepartition."Allocation Amount";
        UNTIL lDimensionRepartition.NEXT = 0;

      lAmount += "Allocation Amount";

      GetHeaderLine(lDimensionRepartition);
      lDimensionRepartition.TESTFIELD(Amount);
      IF lDimensionRepartition.Amount < lAmount THEN
        ERROR(Text001);
    END;

    PROCEDURE GetHeaderLine@1100281019(VAR pDimensionRepartition@1100281000 : Record 50136);
    BEGIN
      //IMH02
      pDimensionRepartition.RESET;
      pDimensionRepartition.SETRANGE(Type, pDimensionRepartition.Type::Header);
      pDimensionRepartition.SETRANGE("Table Code", "Table Code");
      pDimensionRepartition.SETRANGE("Distribution Type", "Distribution Type");

      pDimensionRepartition.FINDFIRST;
    END;

    BEGIN
    {
      /** @r IMH02 @d 26/04/11 @a ISAT.ZW @v IMH6.01.152 @s Gestion Analytique
          @c Ajout champs 20 Montant + 30 Montant r‚partition
          @c renommer champ 9 R‚partition --> R‚partition en %
          @c Ajout fonction Calc%AllocationByAmount **/
      /** @r IMH01 @d 01/03/11 @a CAP.JC @v IMH6.01.152 @s Gestion Analytique
          @c Cr‚ation de la table
          @c Ajout champ 1, Type
          @c Ajout champ 2, Table Code
          @c Ajout champ 3, Table Description
          @c Ajout champ 4, Distribution Type
          @c Ajout champ 5, Status
          @c Ajout champ 6, Dimension Code
          @c Ajout champ 8, Dimension Value Code
          @c Ajout champ 9, Allocation */
    }
    END.
  }
}