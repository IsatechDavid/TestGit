OBJECT Table 50137 Invoicing Matrix Setup
{
  OBJECT-PROPERTIES
  {
    Date=06/06/14;
    Time=11:11:05;
    Modified=Yes;
    Version List=IMH6.01,IMH6.01.P010;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lInvoicingMatrixSetup@1100281000 : Record 50137;
             BEGIN
               IF "Entry No." = 0 THEN
                 "Entry No." := GetNextEntryNo;
               TouchRecord(TRUE);

               "Line No." := 1;
               lInvoicingMatrixSetup.RESET;
               lInvoicingMatrixSetup.SETCURRENTKEY("Line No.");
               IF lInvoicingMatrixSetup.FINDLAST THEN
                 "Line No." += lInvoicingMatrixSetup."Line No.";
             END;

    OnModify=BEGIN
               TouchRecord(FALSE);
             END;

    OnRename=BEGIN
               TouchRecord(FALSE);
             END;

    CaptionML=[ENU=Invoicing Matrix Setup;
               FRA=ParamŠtre matrice de facturation];
  }
  FIELDS
  {
    { 1   ;   ;Corporate No.       ;Code20        ;TableRelation=Customer.No. WHERE (Service Contact=CONST(Corporate Customer));
                                                   CaptionML=[ENU=Corporate Contact No.;
                                                              FRA=Nø grand compte] }
    { 2   ;   ;Service Order Type  ;Code20        ;TableRelation="Service Order Type";
                                                   CaptionML=[ENU=Service Order Type;
                                                              FRA=Code type produit];
                                                   NotBlank=Yes }
    { 3   ;   ;Corporate Region Code;Code10       ;TableRelation="Corporate Region"."Region Code" WHERE (Corporate No.=FIELD(Corporate No.));
                                                   OnValidate=VAR
                                                                lCorporateRegion@1100281000 : Record 50058;
                                                              BEGIN
                                                                //<<IMH03
                                                                IF lCorporateRegion.GET("Corporate No.", "Corporate Region Code") THEN
                                                                  VALIDATE("Sell-To Customer No.", lCorporateRegion."Sell-to Customer No.");
                                                                //>>IMH03
                                                              END;

                                                   CaptionML=[ENU=Corporate Region Code;
                                                              FRA=Code r‚gion grand compte] }
    { 5   ;   ;Invoicing Type      ;Option        ;CaptionML=[ENU=Invoicing Type;
                                                              FRA=Type facturation];
                                                   OptionCaptionML=[ENU=" ,Unique,Member,Provider";
                                                                    FRA=" ,Unique,Soci‚taire,Prestataire"];
                                                   OptionString=[ ,Unique,Member,Provider] }
    { 6   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              FRA=Nø s‚quence] }
    { 7   ;   ;Accredited Provider Filter;Option  ;CaptionML=FRA=Filtre Prestataire agr‚‚;
                                                   OptionCaptionML=[ENU=" ,Yes,No";
                                                                    FRA=" ,Oui,Non"];
                                                   OptionString=[ ,Yes,No] }
    { 8   ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              FRA=Nø client factur‚] }
    { 10  ;   ;Enable              ;Boolean       ;CaptionML=[ENU=Enable;
                                                              FRA=Actif] }
    { 14  ;   ;Provider Invoice Payment;Option    ;CaptionML=[ENU=Provider Invoice Payment;
                                                              FRA=RŠglement facture prestataire];
                                                   OptionCaptionML=[ENU=" ,IMH,Corporate";
                                                                    FRA=" ,IMH,Grand compte"];
                                                   OptionString=[ ,IMH,Corporate] }
    { 15  ;   ;Corporate Declaration;Boolean      ;CaptionML=[ENU=Corporate Declaration;
                                                              FRA=D‚claration grand compte] }
    { 16  ;   ;Invoice Transmission;Boolean       ;CaptionML=[ENU=Invoice Transmission;
                                                              FRA=Transmission facture] }
    { 17  ;   ;Repayment Customer No.;Code20      ;TableRelation=Customer;
                                                   CaptionML=[ENU=Repayment Customer No.;
                                                              FRA=Nø client remboursement] }
    { 18  ;   ;Contact File Transmission;Code20   ;TableRelation=Contact;
                                                   CaptionML=[ENU=Contact File Transmission;
                                                              FRA=Contact pour envoi fichier] }
    { 19  ;   ;Contact Repayment   ;Code20        ;TableRelation=Contact;
                                                   CaptionML=[ENU=Contact Repayment;
                                                              FRA=Contact demande remboursement] }
    { 20  ;   ;Sale Payment Method ;Code10        ;TableRelation="Payment Method";
                                                   CaptionML=[ENU=Sale Payment Method Code;
                                                              FRA=Code mode de rŠglement vente] }
    { 21  ;   ;Sale Order Creation ;Boolean       ;CaptionML=[ENU=Sale Order Creation;
                                                              FRA=Cr‚ation com. vente IMH] }
    { 25  ;   ;Invoice Regroup Method;Option      ;CaptionML=[ENU=Invoice Regroup Method;
                                                              FRA=Mode regroupement facture];
                                                   OptionCaptionML=[ENU=" ,By Service Order Type";
                                                                    FRA=" ,Par type produit"];
                                                   OptionString=[ ,ByServiceOrderType] }
    { 26  ;   ;Edit Line Regroup Method;Option    ;CaptionML=[ENU=Edit Line Regroup Method;
                                                              FRA=Mode regroupement ligne ‚dition];
                                                   OptionCaptionML=[ENU=" ,Cumulative,By Service";
                                                                    FRA=" ,Cumul‚,Par service"];
                                                   OptionString=[ ,Cumulative,ByService] }
    { 30  ;   ;Contact invoice Transmission;Code20;TableRelation=Contact WHERE (Service Contact=FILTER(<>Beneficiary&<>Provider));
                                                   CaptionML=[ENU=Contact invoice Transmission;
                                                              FRA=Contact envoi facture] }
    { 31  ;   ;File Frequency Send ;Option        ;CaptionML=[ENU=File Frequency Send;
                                                              FRA=Fr‚quence envoi fichier];
                                                   OptionCaptionML=[ENU=Daily,Decade,Week,Fortnight,Monthly,Any;
                                                                    FRA=JournaliŠre,D‚cade,Semaine,Quinzaine,Mensuelle,Aucun];
                                                   OptionString=Daily,Decade,Week,Fortnight,Monthly,Any }
    { 32  ;   ;File Send Last Date ;DateTime      ;CaptionML=[ENU=File Send Last Date;
                                                              FRA=DerniŠre date d'envoi fichier] }
    { 36  ;   ;Net Invoice Method  ;Boolean       ;CaptionML=FRA=Facturation euro\euro }
    { 40  ;   ;Purchase Payment Method;Code10     ;TableRelation="Payment Method";
                                                   CaptionML=[ENU=Sale Payment Method Code;
                                                              FRA=Code mode de rŠglement achat] }
    { 41  ;   ;Purchase Order Creation;Boolean    ;CaptionML=[ENU=Purchase Order Creation;
                                                              FRA=Cr‚ation com. achat] }
    { 42  ;   ;Order Creation Without Int.;Boolean;CaptionML=[ENU=Order Creation Without Intervention;
                                                              FRA=Cr‚ation commande sans intervention] }
    { 50  ;   ;IMA S. Bill-to Customer No.;Code20 ;TableRelation=Customer;
                                                   CaptionML=[ENU=IMA S. Bill-to Customer No.;
                                                              FRA=Nø client factur‚ IMA service] }
    { 60  ;   ;Starting Date       ;Date          ;CaptionML=FRA=Date de d‚but }
    { 61  ;   ;Ending Date         ;Date          ;CaptionML=FRA=Date de fin }
    { 90  ;   ;Posting Date Filter ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Posting Date Filter;
                                                              FRA=Filtre date] }
    { 100 ;   ;IMA S. Sales Order Creation;Boolean;CaptionML=[ENU=IMA Service Sales Order Creation;
                                                              FRA=Cr‚ation com. vente IMA Service] }
    { 120 ;   ;IMA S. Purch. Order Creation;Boolean;
                                                   CaptionML=[ENU=IMA Service Purch. Order Creation;
                                                              FRA=Cr‚ation com. achat IMA Service] }
    { 130 ;   ;Corporate Transfer Mode;Option     ;CaptionML=[ENU=Corporate Transfer Mode;
                                                              FRA=Mode transfert GC];
                                                   OptionCaptionML=[ENU=None,DARVA,Excel,PMU;
                                                                    FRA=Aucun,DARVA,Excel,PMU];
                                                   OptionString=None,DARVA,Excel,PMU }
    { 131 ;   ;Corporate Decl. File Path;Text250  ;CaptionML=[ENU=Corporate Decl. File Path;
                                                              FRA=Chemin fichier pour d‚claration grd. cpt.] }
    { 140 ;   ;Invoicing frequency ;Option        ;CaptionML=[ENU=Invoicing frequency;
                                                              FRA=P‚riodicit‚ facturation];
                                                   OptionCaptionML=[ENU=Daily,Decade,Week,Fortnight,Monthly;
                                                                    FRA=JournaliŠre,D‚cade,Semaine,Quinzaine,Mensuelle];
                                                   OptionString=Daily,Decade,Week,Fortnight,Monthly }
    { 200 ;   ;Sell-To Customer No.;Code20        ;TableRelation=Customer.No.;
                                                   OnValidate=VAR
                                                                lCorporateRegion@1100281000 : Record 50058;
                                                              BEGIN
                                                                //<<IMH03
                                                                IF "Sell-To Customer No." <> '' THEN BEGIN
                                                                  lCorporateRegion.SETRANGE("Sell-to Customer No.", "Sell-To Customer No.");
                                                                  IF lCorporateRegion.FINDFIRST THEN BEGIN
                                                                    "Corporate No." := lCorporateRegion."Corporate No.";
                                                                    "Corporate Region Code" := lCorporateRegion."Region Code";
                                                                  END;
                                                                END;
                                                                //>>IMH03
                                                              END;

                                                   CaptionML=[ENU=Sell-To Customer No.;
                                                              FRA=Nø client donneur d'ordre] }
    { 300 ;   ;Journal Template Name;Code10       ;TableRelation="Gen. Journal Template";
                                                   CaptionML=[ENU=Journal Template Name;
                                                              FRA=Nom modŠle feuille] }
    { 301 ;   ;Journal Batch Name  ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Journal Template Name));
                                                   CaptionML=[ENU=Journal Batch Name;
                                                              FRA=Nom feuille] }
    { 400 ;   ;Commission          ;Boolean       ;CaptionML=[ENU=Commission;
                                                              FRA=Commission] }
    { 500 ;   ;Service Order Type Name;Text30     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Order Type".Description WHERE (Code=FIELD(Service Order Type)));
                                                   CaptionML=[ENU=Service Order Type Name;
                                                              FRA=Nom type produit];
                                                   Editable=No }
    { 501 ;   ;Corporate Name      ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Corporate No.)));
                                                   CaptionML=[ENU=Corporate Name;
                                                              FRA=Nom grand compte];
                                                   Editable=No }
    { 502 ;   ;Corporate Region Name;Text50       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Corporate Region".Name WHERE (Corporate No.=FIELD(Corporate No.),
                                                                                                     Region Code=FIELD(Corporate Region Code)));
                                                   CaptionML=[ENU=Corporate Region Name;
                                                              FRA=Nom r‚gion grand compte];
                                                   Editable=No }
    { 510 ;   ;DRT on Closed Service Header;Boolean;
                                                   CaptionML=[ENU=DRT on Closed Service Header;
                                                              FRA=DRT sur ligne produit cl“tur‚] }
    { 1000;   ;Last Execution Date ;Date          ;CaptionML=[ENU=Last Execution Date;
                                                              FRA=Date derniŠre ex‚cution] }
    { 1001;   ;Next Execution Date ;Date          ;CaptionML=[ENU=Next Execution Date;
                                                              FRA=Date prochaine ex‚cution] }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
    { 50504;  ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              FRA=Nø ligne] }
    { 50505;  ;Purchase Reference Date;Option     ;CaptionML=[ENU=Purchase Reference Date;
                                                              FRA=Date de r‚f‚rence achat];
                                                   OptionCaptionML=[ENU=" ,Quote Accept Date,Invoice Posting Date,,Minutes Validation Date,Open Service Date,Actual Meeting Date";
                                                                    FRA=" ,Date Acceptation Devis,Date de Comptabilisation de Facture,,Date de Validation PV,Date Ouverture de Service,Date R‚elle RDV"];
                                                   OptionString=[ ,Quote Accept Date,Invoice Posting Date,,Minutes Validation Date,Open Service Date,Actual Meeting Date] }
    { 50506;  ;Sales Reference Date;Option        ;CaptionML=[ENU=Sales Reference Date;
                                                              FRA=Date de r‚f‚rence Ventes];
                                                   OptionCaptionML=[ENU=" ,Service Header Close Date,Open Service Date,Payment Date,Actual Meeting Date,Minutes Validation Date";
                                                                    FRA=" ,Date de Cl“ture Ligne Service,Date Ouverture de Service,Date paiement,Date r‚elle RDV,Date validation PV"];
                                                   OptionString=[ ,Service Header Close Date,Open Service Date,Payment Date,Actual Meeting Date,Minutes Validation Date] }
  }
  KEYS
  {
    {    ;Corporate No.,Service Order Type,Corporate Region Code,Entry No.;
                                                   Clustered=Yes }
    {    ;Corporate No.,Invoicing frequency,Invoice Regroup Method }
    {    ;Line No.                                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100281000 : TextConst 'ENU=Any Sell-to customer set up about %1,%2;FRA=Pas de client donneur de param‚tr‚ pour %1, %2';

    PROCEDURE GetSellToCust@1100281004() rValue : Code[20];
    VAR
      lCustomer@1100281000 : Record 18;
      lCorporateRegion@1100281002 : Record 50058;
      lMarketingSetup@1100281003 : Record 5079;
    BEGIN
      //<<IMH02.isat.PC
      // r‚cupŠre le client donneur d'ordre … partir du code r‚gion et nø grand compte
      rValue := '';

      IF "Corporate No." = '' THEN BEGIN
        EXIT;
      END;

      lCustomer.GET("Corporate No.");

      IF "Corporate Region Code" <> '' THEN BEGIN
        IF lCorporateRegion.GET("Corporate No.","Corporate Region Code") THEN BEGIN
          rValue := lCorporateRegion."Sell-to Customer No.";
        END ELSE BEGIN
          MESSAGE(Text001);
          EXIT;
        END;
      END ELSE BEGIN
        rValue := lCustomer."No.";
      END;
      //>>IMH02.isat.PC
    END;

    PROCEDURE GetCorporateContact@1100281005(VAR pCorporateNo@1100281000 : Code[20];VAR pRegionCode@1100281002 : Code[20]);
    VAR
      lCorporateRegion@1100281001 : Record 50058;
    BEGIN
      //<<IMH02.isat.PC
      // r‚cupŠre le code r‚gion et nø grand compte … partir du client donneur d'ordre
      pCorporateNo := '';
      pRegionCode := '';

      IF "Sell-To Customer No." = '' THEN BEGIN
        EXIT;
      END;

      //>>IMH02.isat.PC
    END;

    PROCEDURE GetNextEntryNo@1100281001() : Integer;
    VAR
      lInvoicingSetup@1100281000 : Record 50137;
    BEGIN
      WITH lInvoicingSetup DO BEGIN
        SETRANGE("Corporate No.","Corporate No.");
        SETRANGE("Service Order Type","Service Order Type");
        SETRANGE("Corporate Region Code","Corporate Region Code");
        IF ISEMPTY THEN
          EXIT(1);

        LOCKTABLE;
        FINDLAST;
        EXIT("Entry No." + 1);
      END;
    END;

    PROCEDURE TouchRecord@1100281006(pInsert@1100281000 : Boolean);
    BEGIN
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;
      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    PROCEDURE GetSalesReferenceDate@1100281000(VAR pRecordRef@1100281000 : RecordRef) rDateRef : Date;
    VAR
      lServiceHeader@1100281002 : Record 5900;
      lService@1100281001 : Record 50066;
      Error001@1100281003 : TextConst 'ENU=No sales reference date found\Please verify matrix setup;FRA=Aucune date de ref‚rence vente trouv‚e\Merci de de v‚rifier le param‚trage de la matrice';
      lServiceInterventionMinutes@1000000000 : Record 50084;
      lServiceInterventionLine@1000000001 : Record 50075;
      lFusionInvoicingJournalLine@1100281004 : Record 50187;
    BEGIN
      rDateRef := 0D;
      CASE pRecordRef.NUMBER OF
        DATABASE::"Service Header" : BEGIN
          pRecordRef.SETTABLE(lServiceHeader);
          CASE "Sales Reference Date" OF
            "Sales Reference Date"::"Service Header Close Date" : BEGIN
              rDateRef := lServiceHeader."Finishing Date";
            END;
            "Sales Reference Date"::"Open Service Date" : BEGIN
              IF lService.GET(lServiceHeader."Service No.")  THEN
                rDateRef := DT2DATE(lService."Creation Date");
            END;
            //<<IMH11.PC
            // Gestion date de paiement
            "Sales Reference Date"::"Payment Date" : BEGIN
              rDateRef := lServiceHeader."Cheque / BC Receipt Date";
              IF rDateRef = 0D THEN BEGIN
                rDateRef := WORKDATE;
              END;
            END;
            // Date validation du PV (Service Habitat)
            "Sales Reference Date"::"Minutes Validation Date" : BEGIN
              lServiceInterventionMinutes.SETRANGE("Service Header No.",lServiceHeader."No.");
              lServiceInterventionMinutes.SETRANGE("Post Minute",TRUE);
              lServiceInterventionMinutes.SETRANGE(Status,lServiceInterventionMinutes.Status::Validated);
              IF lServiceInterventionMinutes.FINDFIRST THEN BEGIN
                rDateRef := lServiceInterventionMinutes."Status Date";
              END;
            END;
            // Date r‚elle de RDV (Diag Immo)
            "Sales Reference Date"::"Actual Meeting Date" : BEGIN
              lServiceInterventionLine.SETRANGE("Service Header No.",lServiceHeader."No.");
              IF lServiceInterventionLine.FINDFIRST THEN BEGIN
                rDateRef := lServiceInterventionLine."Actual Meeting Date";
              END;
            END;
            //>>IMH11.PC
          END;
        END;
        //<<IMH12.PC
        DATABASE::"Service Intervention Minutes" : BEGIN
          pRecordRef.SETTABLE(lServiceInterventionMinutes);
          CASE "Sales Reference Date" OF
            // Date validation du PV (Service Habitat)
            "Sales Reference Date"::"Minutes Validation Date" : BEGIN
              rDateRef := lServiceInterventionMinutes."Status Date";
            END;
          END;
        END;
        //>>IMH12.PC
        //<<IMH13
        DATABASE::"Fusion Invoicing Journal Line" : BEGIN
          pRecordRef.SETTABLE(lFusionInvoicingJournalLine);
          rDateRef := lFusionInvoicingJournalLine."Fusion Last Doc. Change Date";
        END;
        //>>IMH13
      END;
      //IF rDateRef=0D THEN
      //  ERROR(Error001);
    END;

    PROCEDURE GetPurchaseReferenceDate@1100281002(VAR pRecordRef@1100281000 : RecordRef) rDateRef : Date;
    VAR
      lServiceInterventionLine@1100281001 : Record 50075;
      lServiceInterventionQuote@1100281006 : Record 50076;
      lServiceHeader@1100281002 : Record 5900;
      lService@1100281003 : Record 50066;
      lPurchaseInvoiceHeader@1100281004 : Record 122;
      lServiceInterventionMinutes@1100281005 : Record 50084;
      Error001@1100281007 : TextConst 'ENU=No purchase reference date found\Please verify matrix setup;FRA=Aucune date de ref‚rence achat trouv‚e\Merci de de v‚rifier le param‚trage de la matrice';
      lPurchaseHeader@1100281009 : Record 38;
    BEGIN
      rDateRef := 0D;
      CASE pRecordRef.NUMBER OF
        DATABASE::"Purch. Inv. Header" : BEGIN
          pRecordRef.SETTABLE(lPurchaseInvoiceHeader);
          CASE "Purchase Reference Date" OF
            "Purchase Reference Date"::"Quote Accept Date" : BEGIN
              IF lServiceInterventionLine.GET(lPurchaseInvoiceHeader."Service Header No."
                                             ,lPurchaseInvoiceHeader."Intervention Line No.")  THEN
              BEGIN
                lServiceInterventionLine.CALCFIELDS("QuoteAcceptance Date");
                rDateRef := DT2DATE(lServiceInterventionLine."QuoteAcceptance Date");
              END
            END;
            "Purchase Reference Date"::"Invoice Posting Date" : BEGIN
              rDateRef := lPurchaseInvoiceHeader."Posting Date";
            END;
            //<<IMH11.PC
            // Gestion date de paiement => Annul‚
            {
            "Purchase Reference Date"::"3" : BEGIN
              lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,lPurchaseInvoiceHeader."Service Header No.");
              rDateRef := lServiceHeader."Cheque / BC Receipt Date";
            END;
            }
            //>>IMH11.PC
            "Purchase Reference Date"::"Minutes Validation Date" : BEGIN
              lServiceInterventionMinutes.SETRANGE("Service Header No.",lPurchaseInvoiceHeader."Service Header No.");
              lServiceInterventionMinutes.SETRANGE("Service Intervention Line No.",lPurchaseInvoiceHeader."Intervention Line No.");
              lServiceInterventionMinutes.SETRANGE("Document No.",lPurchaseInvoiceHeader."Minutes Document No.");
              lServiceInterventionMinutes.SETRANGE("Line No.",lPurchaseInvoiceHeader."Minutes Line No.");
              lServiceInterventionMinutes.SETRANGE("Post Minute",TRUE);
              lServiceInterventionMinutes.SETRANGE(Status,lServiceInterventionMinutes.Status::Validated);
              IF lServiceInterventionMinutes.FINDFIRST THEN
                rDateRef := lServiceInterventionMinutes."Status Date"
            END;
            "Purchase Reference Date"::"Open Service Date" : BEGIN
              IF lService.GET(lPurchaseInvoiceHeader."Service No.") THEN
                rDateRef := DT2DATE(lService."Creation Date");
            END;
            "Purchase Reference Date"::"Actual Meeting Date" : BEGIN
               lServiceInterventionLine.SETRANGE("Service Header No.",lPurchaseInvoiceHeader."Service Header No.");
               lServiceInterventionLine.SETRANGE("Line No.", lPurchaseInvoiceHeader."Intervention Line No." );
               IF lServiceInterventionLine.FINDFIRST THEN BEGIN
                 rDateRef := lServiceInterventionLine."Actual Meeting Date";
               END;
            END;
          END
        END;
        DATABASE::"Service Header" : BEGIN
          pRecordRef.SETTABLE(lServiceHeader);
          CASE "Purchase Reference Date" OF
            "Purchase Reference Date"::"Quote Accept Date" : BEGIN
              // Manque Filtre intervention
              lServiceInterventionLine.SETRANGE("Service Header No.",lServiceHeader."No.");
              IF lServiceInterventionLine.FINDFIRST THEN
              BEGIN
                lServiceInterventionLine.CALCFIELDS("QuoteAcceptance Date");
                rDateRef := DT2DATE(lServiceInterventionLine."QuoteAcceptance Date");
              END
            END;
            "Purchase Reference Date"::"Invoice Posting Date" : BEGIN
              lPurchaseInvoiceHeader.SETCURRENTKEY("Service No.","Service Header No.","Intervention Line No.");
              lPurchaseInvoiceHeader.SETRANGE(lPurchaseInvoiceHeader."Service Header No.",lServiceHeader."No.");
              lPurchaseInvoiceHeader.SETRANGE("Service No.",lServiceHeader."Service No.");
              // manque filtre sur l'intervention
              IF lPurchaseInvoiceHeader.FINDFIRST THEN
                rDateRef := lPurchaseInvoiceHeader."Posting Date"
              ELSE BEGIN
                //lPurchaseInvoiceHeader.SETCURRENTKEY("Service No.","Service Header No.","Intervention Line No.");
                lPurchaseHeader.SETRANGE("Document Type",lPurchaseHeader."Document Type"::Invoice);
                lPurchaseHeader.SETRANGE("Service Header No.",lServiceHeader."No.");
                lPurchaseHeader.SETRANGE("Service No.",lServiceHeader."Service No.");
                // manque filtre sur l'intervention
                IF lPurchaseHeader.FINDFIRST THEN
                  rDateRef:=lPurchaseHeader."Posting Date";
                //<<IMH10.PC
                IF  rDateRef = 0D THEN BEGIN
                  rDateRef := WORKDATE;
                END;
                //>>IMH10.PC
              END;
            END;
            //<<IMH11.PC
            // Gestion date de paiement => Annul‚
            {
            "Purchase Reference Date"::"3" : BEGIN
              rDateRef := lServiceHeader."Cheque / BC Receipt Date";
            END;
            }
            //>>IMH11.PC
            "Purchase Reference Date"::"Minutes Validation Date" : BEGIN
              lServiceInterventionMinutes.SETRANGE("Service Header No.",lServiceHeader."No.");
              // manque filtre ci dessous
              //lServiceInterventionMinutes.SETRANGE("Service Intervention Line No.",lPurchaseInvoiceHeader."Intervention Line No.");
              //lServiceInterventionMinutes.SETRANGE("Document No.",lPurchaseInvoiceHeader."Minutes Document No.");
              //lServiceInterventionMinutes.SETRANGE("Line No.",lPurchaseInvoiceHeader."Minutes Line No.");
              lServiceInterventionMinutes.SETRANGE("Post Minute",TRUE);
              lServiceInterventionMinutes.SETRANGE(Status,lServiceInterventionMinutes.Status::Validated);
              IF lServiceInterventionMinutes.FINDFIRST THEN
                rDateRef := lServiceInterventionMinutes."Status Date"
            END;
            "Purchase Reference Date"::"Open Service Date" : BEGIN
              IF lService.GET(lServiceHeader."Service No.")  THEN
                rDateRef := DT2DATE(lService."Creation Date");
            END;
            "Purchase Reference Date"::"Actual Meeting Date" : BEGIN
              lServiceInterventionLine.SETRANGE("Service Header No.",lServiceHeader."No.");
              // Manque Filtre Ci dessous
              //lServiceInterventionLine.SETRANGE("Line No.", lPurchaseInvoiceHeader."Intervention Line No." );
              IF lServiceInterventionLine.FINDFIRST THEN BEGIN
                rDateRef := lServiceInterventionLine."Actual Meeting Date";
              END;
            END;
          END
        END;
        DATABASE::"Service Intervention Line" : BEGIN
          pRecordRef.SETTABLE(lServiceInterventionLine);
          CASE "Purchase Reference Date" OF
            "Purchase Reference Date"::"Quote Accept Date" : BEGIN
              lServiceInterventionLine.CALCFIELDS("QuoteAcceptance Date");
              rDateRef := DT2DATE(lServiceInterventionLine."QuoteAcceptance Date");
            END;
            "Purchase Reference Date"::"Invoice Posting Date" : BEGIN
              lPurchaseInvoiceHeader.SETCURRENTKEY("Service No.","Service Header No.","Intervention Line No.");
              lPurchaseInvoiceHeader.SETRANGE("Service Header No.",lServiceInterventionLine."Service Header No.");
              lPurchaseInvoiceHeader.SETRANGE("Service No.",lServiceInterventionLine."Service No.");
              lPurchaseInvoiceHeader.SETRANGE("Intervention Line No.",lServiceInterventionLine."Line No.");
              IF lPurchaseInvoiceHeader.FINDFIRST THEN
                rDateRef := lPurchaseInvoiceHeader."Posting Date"
              ELSE BEGIN
                //lPurchaseInvoiceHeader.SETCURRENTKEY("Service No.","Service Header No.","Intervention Line No.");
                lPurchaseHeader.SETRANGE("Document Type",lPurchaseHeader."Document Type"::Invoice);
                lPurchaseHeader.SETRANGE("Service Header No.",lServiceInterventionLine."Service Header No.");
                lPurchaseHeader.SETRANGE("Service No.",lServiceInterventionLine."Service No.");
                lPurchaseHeader.SETRANGE("Intervention Line No.",lServiceInterventionLine."Line No.");
                IF lPurchaseHeader.FINDFIRST THEN
                  rDateRef := lPurchaseHeader."Posting Date";
                //<<IMH10.PC
                IF  rDateRef = 0D THEN BEGIN
                  rDateRef := WORKDATE;
                END;
                //>>IMH10.PC
              END
            END ;
            //<<IMH11.PC
            // Gestion date de paiement => Annul‚
            {
            "Purchase Reference Date"::"3" : BEGIN
              lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,lServiceInterventionLine."Service Header No.");
              rDateRef := lServiceHeader."Cheque / BC Receipt Date";
            END;
            }
            //>>IMH11.PC
            "Purchase Reference Date"::"Minutes Validation Date" : BEGIN
              lServiceInterventionMinutes.SETRANGE("Service Header No.",lServiceInterventionLine."Service Header No.");
              lServiceInterventionMinutes.SETRANGE("Service Intervention Line No.",lServiceInterventionLine."Line No.");
              //Manque Filtres ci dessous
              //lServiceInterventionMinutes.SETRANGE("Document No.",lPurchaseInvoiceHeader."Minutes Document No.");
              //lServiceInterventionMinutes.SETRANGE("Line No.",lPurchaseInvoiceHeader."Minutes Line No.");
              lServiceInterventionMinutes.SETRANGE("Post Minute",TRUE);
              lServiceInterventionMinutes.SETRANGE(Status,lServiceInterventionMinutes.Status::Validated);
              IF lServiceInterventionMinutes.FINDFIRST THEN
                rDateRef := lServiceInterventionMinutes."Status Date"
            END;
            "Purchase Reference Date"::"Open Service Date" : BEGIN
              IF lService.GET(lServiceInterventionLine."Service No.")  THEN
                rDateRef := DT2DATE(lService."Creation Date");
            END;
            "Purchase Reference Date"::"Actual Meeting Date" : BEGIN
               rDateRef := lServiceInterventionLine."Actual Meeting Date";
            END;
          END
        END;
      END;
      //IF  rDateRef = 0D THEN
      //  ERROR(Error001);
    END;

    BEGIN
    {
      /** @r IMH14 @d 06/06/14 @a ISAT.ZW @v IMH6.01.P010 @s Projet PMU @c Ajout type export PMU */
      /** @r IMH13 @d 05/12/12 @a ISAT.ZW @v IMH6.01.220 @s Projet Facturation Fusion
          @c Ajout traitement date de r‚ference vente */
      /** @r IMH12 @d 19/11/12 @a ISAT.PC @v IMH6.01.219 @s NEP00010 @h 3795
          @c Correction */
      /** @r IMH11 @d 29/10/12 @a ISAT.PC @v IMH6.01.212 @s Gestion date de reference matrice @h 3795
          @c Traduction option + suppr date paiement
          @c ajout option partie vente*/
      /** @r IMH10 @d 22/10/12 @a ISAT.PC @v IMH6.01.219 @s Gestion date de reference matrice @h 3794 */
      /** @r IMH09 @d 23/08/12 @a ISAT.RC @v IMH6.01.212 @s Gestion date de reference matrice @h 3795
          @c Ajout Champ 50505 Purchase Reference Date
          @c Ajout champ 50506 Sales Reference Date
          @c Ajout Fonction GetSalesReferenceDate
          @c Ajout Fonction GetPurchaseReferenceDate */
      /** @r IMH08 @d 06/09/11 @a ISAT.PC @v IMH6.01.146 @s Gestion facturation
          @c Ajout option Any dans champ 31
          @c Ajout champ 32 File Send Last Date */
      /** @r IMH07 @d 12/07/11 @a ISAT.MA @v IMH6.01.132 @s DARVA Management
          @c Ajout champ 510 - DRT sur ligne produit cl“tur‚" */
      /** @r IMH06 @d 06/05/11 @a ISAT.EBA @v IMH6.01.146 @s Gestion de la facturation client
          @c Ajout cl‚ "Corporate No.,Invoicing frequency,Invoice Regroup Method" */
      /** @r IMH05 @d 05/05/11 @a ISAT.PC @v IMH6.01.146 @s Gestion facturation @c Ajout champ 400, Commission */
      /** @r IMH04 @d 27/04/11 @a ISAT.ZW @v IMH6.01.146 @s Gestion facturation
          @c Ajout champ 20,  Contact invoice Transmission
          @c Ajout champ 35, Invoice Trans. Frequency
          @c Ajout champ 50, IMA S. Bill-to Customer No.
          @c Ajout champ 130, Corporate Transfer Mode
          @c Ajout champ 131, Excel File Path
          @c Ajout champ 25, Invoice Regroup Method
          @c Ajout champ 26, line Regroup Method
      /** @r IMH03 @d 26/04/11 @a ISAT.ZW @v IMH6.01.146 @s Gestion facturation
          @c renommer cr‚ation commande vente en cr‚ation commande vente IMH
          @c Saisie GC/r‚gion descendre le donneur d'ordre */
      /** @r IMH02 @d 12/04/11 @a ISAT.PC @v IMH6.01.146 @s Gestion facturation
          @c Ajout champ 18, Contact File Transmission
          @c Ajout champ 19, Contact Repayment
          @c Ajout champ 70, Provider Invoice Payment
          @c Ajout champ 100, IMA S. Sales Order Creation
          @c Ajout champ 120, IMA S. Purch. Order Creation */
      /** @r IMH01 @d 14/03/11 @a ISAT.LLT @v IMH6.01.146 @s Gestion facturation @c Cr‚ation */
    }
    END.
  }
}