OBJECT Table 50161 Interv. Description Detail
{
  OBJECT-PROPERTIES
  {
    Date=12/07/13;
    Time=16:59:50;
    Modified=Yes;
    Version List=IMH6.01,JUIN,V1.7;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lIntervDescriptionDetail@1100281000 : Record 50161;
             BEGIN
               TESTFIELD("Service Header No.");

               lIntervDescriptionDetail.LOCKTABLE(TRUE);
               lIntervDescriptionDetail.SETRANGE("Service Header No.","Service Header No.");
               lIntervDescriptionDetail.SETRANGE("Affected Location Code", "Affected Location Code");
               lIntervDescriptionDetail.SETRANGE("Speciality Code", "Speciality Code");
               lIntervDescriptionDetail.SETRANGE("Building Trade No.", "Building Trade No.");
               //<<IMH02.ST
               IF lIntervDescriptionDetail.ISEMPTY THEN BEGIN
                 "Line No." := 10000;
               END ELSE BEGIN
                 lIntervDescriptionDetail.FINDLAST;
                 "Line No." := lIntervDescriptionDetail."Line No." + 10000;
               END;

               GetDefaultValue;
               //<<IMH03.PC
               //UpdateIntervDescripAmount;
               UpdateIntervDescrip(NOT NotIntervDescrModifyTrue);
               //>>IMH03.PC
               TouchRecord(TRUE);
             END;

    OnModify=BEGIN
               TouchRecord(FALSE);
               //<<IMH03.PC
               //UpdateIntervDescripAmount;
               UpdateIntervDescrip(NOT NotIntervDescrModifyTrue);
               //>>IMH03.PC
             END;

    OnDelete=BEGIN
               //<<IMH05.ISAT.EBA
               FromDelete := TRUE;
               UpdateIntervDescrip(NOT NotIntervDescrModifyTrue);
               //>>IMH05.ISAT.EBA
             END;

    OnRename=BEGIN
               TouchRecord(FALSE);
             END;

    CaptionML=[ENU=Interv. Description Detail;
               FRA=Detail descriptif intervention];
    LookupFormID=Form50294;
    DrillDownFormID=Form50294;
  }
  FIELDS
  {
    { 3   ;   ;Service Header No.  ;Code20        ;TableRelation="Service Header".No. WHERE (Document Type=CONST(Invoice));
                                                   OnValidate=VAR
                                                                lServiceHeader@1100281000 : Record 5900;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Service Header No.;
                                                              FRA=Nø produit] }
    { 4   ;   ;Affected Location Code;Code10      ;TableRelation="Fault Area".Code;
                                                   CaptionML=[ENU=Affected Location Code;
                                                              FRA=Code lieu] }
    { 5   ;   ;Speciality Code     ;Code10        ;TableRelation=IF (Building Trade No.=FILTER(<>'')) "Specialization Building Trade"."Specialization Code" WHERE (Building Trade No.=FIELD(Building Trade No.))
                                                                 ELSE IF (Building Trade No.=FILTER(='')) Specialization.Code WHERE (Code=FIELD(Speciality Code));
                                                   CaptionML=[ENU=Speciality Code;
                                                              FRA=Code sp‚cialit‚] }
    { 6   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              FRA=Nø ligne] }
    { 10  ;   ;Work Type Code      ;Code10        ;TableRelation="Work Type".Code;
                                                   CaptionML=[ENU=Work Type Code;
                                                              FRA=Code type travail] }
    { 11  ;   ;Building Trade No.  ;Code20        ;TableRelation=IF (Speciality Code=FILTER('')) "Building Trade".No.
                                                                 ELSE IF (Speciality Code=FILTER(<>'')) "Specialization Building Trade"."Building Trade No." WHERE (Specialization Code=FIELD(Speciality Code));
                                                   CaptionML=[ENU=Building Trade No.;
                                                              FRA=Nø corps de m‚tier] }
    { 13  ;   ;Area (Mý)           ;Decimal       ;CaptionML=[ENU=Area (Mý);
                                                              FRA=Surface (Mý)];
                                                   BlankZero=Yes }
    { 14  ;   ;VAT                 ;Code10        ;TableRelation="VAT Product Posting Group";
                                                   OnValidate=BEGIN
                                                                CalcAmount(FALSE);//IMH06
                                                              END;

                                                   CaptionML=[ENU=VAT;
                                                              FRA=TVA] }
    { 15  ;   ;Unit Price          ;Decimal       ;OnValidate=BEGIN
                                                                //<<IMH05.ISAT.EBA
                                                                UpdateAmtExclVAT;
                                                                //>>IMH05.ISAT.EBA
                                                              END;

                                                   CaptionML=FRA=PU;
                                                   BlankZero=Yes }
    { 16  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                //<<IMH05.ISAT.EBA
                                                                VALIDATE("Unit Price");
                                                                //>>IMH05.ISAT.EBA
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              FRA=Quantit‚] }
    { 19  ;   ;Location Detail Code;Code10        ;TableRelation=Code.Code WHERE (Table ID=CONST(50070),
                                                                                  Field ID=CONST(19));
                                                   OnValidate=VAR
                                                                lCode@1100281000 : Record 50079;
                                                              BEGIN
                                                                //<<IMH05.ISAT.EBA
                                                                "Location Detail Description" := '';
                                                                IF "Location Detail Code" <> '' THEN
                                                                  IF lCode.GET(DATABASE::"Intervention Description", FIELDNO("Location Detail Code"), "Location Detail Code") THEN
                                                                    "Location Detail Description" := lCode.Description;
                                                                //>>IMH05.ISAT.EBA
                                                              END;

                                                   CaptionML=[ENU=Location Detail Code;
                                                              FRA=Code d‚tail lieu] }
    { 20  ;   ;Comment             ;Text80        ;CaptionML=[ENU=Comment;
                                                              FRA=Commentaires] }
    { 21  ;   ;Location Detail Description;Text80 ;CaptionML=[ENU=Location Detail Description;
                                                              FRA=D‚signation d‚tail lieu];
                                                   Editable=No }
    { 30  ;   ;Amount Incl. VAT    ;Decimal       ;OnValidate=BEGIN
                                                                "Amount Edit" := 30;
                                                                CalcAmount(TRUE); //IMH06

                                                                //<<IMH05.ISAT.EBA
                                                                UpdateUnitPrice
                                                                //>>IMH05.ISAT.EBA
                                                              END;

                                                   CaptionML=[ENU=Amount Incl. VAT;
                                                              FRA=Montant TTC];
                                                   BlankZero=Yes }
    { 31  ;   ;Amount Excl. VAT    ;Decimal       ;OnValidate=BEGIN
                                                                "Amount Edit" := 31;
                                                                CalcAmount(FALSE);//IMH06

                                                                //<<IMH05.ISAT.EBA
                                                                UpdateUnitPrice
                                                                //>>IMH05.ISAT.EBA
                                                              END;

                                                   CaptionML=[ENU=Amount Incl. VAT;
                                                              FRA=Montant HT];
                                                   BlankZero=Yes }
    { 32  ;   ;Amount Excl. VAT (LCY);Decimal     ;CaptionML=[ENU=Amount Excl. VAT (LCY);
                                                              FRA=Devis HT (DS)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 33  ;   ;Amount Incl. VAT (LCY);Decimal     ;CaptionML=[ENU=Amount Incl. VAT (LCY);
                                                              FRA=Devis TTC (DS)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 34  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Currency Code" <> xRec."Currency Code" THEN
                                                                  UpdateCurrencyFactor;
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              FRA=Code devise] }
    { 35  ;   ;Currency Factor     ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Amount Excl. VAT");
                                                                VALIDATE("Amount Incl. VAT");
                                                              END;

                                                   CaptionML=[ENU=Currency Factor;
                                                              FRA=Facteur devise];
                                                   DecimalPlaces=0:15;
                                                   MinValue=0;
                                                   Editable=No }
    { 36  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   OnValidate=VAR
                                                                lVATPostingSetup@1100281000 : Record 325;
                                                                ServMgtSetup@1100281001 : Record 5911;
                                                              BEGIN
                                                                //<<IMH15.isat.PC
                                                                ServMgtSetup.GET;
                                                                "VAT Bus. Posting Group" := ServMgtSetup."VAT Bus. Posting Group Default";

                                                                "VAT %" := 0;
                                                                IF lVATPostingSetup.GET("VAT Bus. Posting Group","VAT Prod. Posting Group") THEN
                                                                  "VAT %" := lVATPostingSetup."VAT %";

                                                                IF ("Amount Edit" = 30) THEN
                                                                  CalcAmount(TRUE)
                                                                ELSE
                                                                  CalcAmount(FALSE);
                                                                //>>IMH15.isat.PC
                                                              END;

                                                   CaptionML=[ENU=Order VAT Prod. Posting Group;
                                                              FRA="Groupe TVA "] }
    { 37  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              FRA=Groupe compta March‚ TVA] }
    { 38  ;   ;VAT %               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              FRA=% TVA] }
    { 39  ;   ;Amount Edit         ;Integer       ;CaptionML=FRA=Montant sasie }
    { 100 ;   ;Affected Location Description;Text50;
                                                   FieldClass=Normal;
                                                   CaptionML=[ENU=Description;
                                                              FRA=D‚signation lieu];
                                                   Editable=No }
    { 301 ;   ;Building Trade Description;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Building Trade".Description WHERE (No.=FIELD(Building Trade No.)));
                                                   CaptionML=[ENU=Building Trade Description;
                                                              FRA=D‚signation corps de m‚tier];
                                                   Editable=No }
    { 302 ;   ;Speciality Description;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Specialization.Description WHERE (Code=FIELD(Speciality Code)));
                                                   CaptionML=[ENU=Speciality Description;
                                                              FRA=D‚signation sp‚cialit‚];
                                                   Editable=No }
    { 310 ;   ;Intervention Lot No.;Text30        ;CaptionML=[ENU=Intervention Lot No.;
                                                              FRA=Nø lot intervention] }
    { 400 ;   ;Sensed Provider No. ;Code20        ;CaptionML=[ENU=Sensed Provider No.;
                                                              FRA=Nø prestataire pr‚ssenti] }
    { 401 ;   ;Sensed Provider Name;Text50        ;CaptionML=[ENU=Sensed Provider Name;
                                                              FRA=Raison sociale prestataire pr‚ssenti] }
    { 402 ;   ;Sensed Provider Post Code;Code20   ;CaptionML=[ENU=Sensed Provider Post Code;
                                                              FRA=Code postal prestataire pr‚ssenti] }
    { 403 ;   ;Sensed Provider City;Text30        ;CaptionML=[ENU=Sensed Provider City;
                                                              FRA=Ville prestataire pr‚ssenti] }
    { 404 ;   ;Sensed Provider Agreement No.;Code20;
                                                   CaptionML=[ENU=Sensed Provider Agreement No.;
                                                              FRA=Nø agr‚ment prestataire pr‚ssenti] }
    { 405 ;   ;Sensed Provider Affected;Option    ;CaptionML=[ENU=Sensed Provider Affected;
                                                              FRA=Prestataire pr‚ssenti mission‚];
                                                   OptionCaptionML=[ENU="  ,Yes,No";
                                                                    FRA=" ,Oui,Non"];
                                                   OptionString=[ ,Yes,No] }
    { 50038;  ;Depreciation %      ;Decimal       ;CaptionML=[ENU=Unsecured Depreciation %;
                                                              FRA=V‚tust‚ %];
                                                   BlankZero=Yes }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
    { 56010;  ;Fusion Descr. Amount Line Id;Code40;CaptionML=[ENU=Fusion Descr. Amount Line Id;
                                                              FRA=Fusion Dossier Chiffrage Ligne Id] }
    { 56011;  ;Fusion Descr. Amt. Elmt. Code;Code20;
                                                   CaptionML=[ENU=Fusion Descr. Amount Element Code;
                                                              FRA=Fusion code ‚l‚ment chiffrage] }
    { 56012;  ;Fusion Element Description;Text80  ;CaptionML=[ENU=Fusion Element Description;
                                                              FRA=Fusion description ‚l‚ment chiffrage] }
    { 56013;  ;Fusion Indemnity Mode;Code20       ;CaptionML=[ENU=Fusion Indemnity Mode;
                                                              FRA=Fusion Mode Indemnisation] }
    { 56014;  ;Fusion Damage Type Description;Text50;
                                                   CaptionML=[ENU=Fusion Damage Type Description;
                                                              FRA=Fusion libell‚ nature dommage] }
    { 56015;  ;Fusion Element Type Descrip.;Text50;CaptionML=[ENU=Fusion Element Type Description;
                                                              FRA=Fusion libell‚ nature ‚l‚ment] }
    { 56016;  ;Fusion Surface Type ;Text30        ;CaptionML=[ENU=Fusion Surface Type;
                                                              FRA=Fusion type surface] }
    { 56017;  ;Unit of Measure     ;Text50        ;TableRelation=Code.Code WHERE (Table ID=CONST(50161),
                                                                                  Field ID=CONST(56017));
                                                   CaptionML=[ENU=Unit of Measure;
                                                              FRA=Unit‚] }
    { 56018;  ;Fusion Descr. Amt. Elmt.;Text80    ;CaptionML=[ENU=Fusion Descr. Amt. Elmt.;
                                                              FRA=Fusion Description El‚ment Chiffrage] }
    { 56020;  ;Fusion Element Description 2;Text80;CaptionML=[ENU=Fusion Element Description 2;
                                                              FRA=Fusion description ‚l‚ment chiffrage 2] }
    { 56021;  ;Fusion Descr. Elmt. Family;Text80  ;CaptionML=[ENU=Fusion Descr. Amt. Elmt. Family;
                                                              FRA=Fusion libell‚ famille ‚l‚ment chiffrage] }
    { 56022;  ;Fusion Descr. Amount Line;Text80   ;CaptionML=[ENU=Fusion Descr. Amount Line;
                                                              FRA=Fusion libell‚ ligne chiffrage] }
    { 56050;  ;Unit of Measure Description;Text50 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Code.Description WHERE (Table ID=CONST(50161),
                                                                                              Field ID=CONST(56017),
                                                                                              Code=FIELD(Unit of Measure)));
                                                   CaptionML=[ENU=Unit of Measure Description;
                                                              FRA=Description unit‚];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Service Header No.,Affected Location Code,Speciality Code,Building Trade No.,Line No.;
                                                   SumIndexFields=Amount Incl. VAT,Amount Excl. VAT;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Fusion Descr. Amount Line Id             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100281000 : TextConst 'ENU=The %1 field must be a decimal;FRA=Le champ %1 doit ˆtre de type d‚cimal';
      Text002@1100281001 : TextConst 'ENU=%1 can not be > to %2;FRA=%1 ne peut ˆtre > … %2';
      Currency@1100281002 : Record 4;
      Text003@1100281003 : TextConst 'ENU=Intervention exists;FRA=Impossible de supprimer la ligne car des interventions existent sur cette sp‚cialit‚';
      NotIntervDescrModifyTrue@1100281004 : Boolean;
      FromDelete@1100281005 : Boolean;
      SkipUpdateIntervDescrip@1100281006 : Boolean;
      SkipUpIntervDetDescrip@1000000000 : Boolean;

    PROCEDURE TouchRecord@1100281006(pInsert@1100281000 : Boolean);
    BEGIN
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;
      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    PROCEDURE CalcAmount@1100281013(pFromInclVAT@1100281001 : Boolean);
    VAR
      lVAT@1100281000 : Decimal;
      lText001@1100281002 : TextConst 'ENU=The %1 field must be a decimal;FRA=Le champ %1 doit ˆtre de type d‚cimal';
    BEGIN
      //IMH19.ST
      {IF VAT = '' THEN
        VAT := '0'
      ELSE
        IF NOT EVALUATE(lVAT,VAT) THEN
          ERROR(STRSUBSTNO(lText001,FIELDCAPTION(VAT)));
      }
      IF pFromInclVAT THEN BEGIN
        IF "Amount Incl. VAT" <> 0 THEN BEGIN
          "Amount Excl. VAT" := "Amount Incl. VAT" / (1+("VAT %"/100));
        END;
      END
      ELSE BEGIN
        IF "Amount Excl. VAT" <> 0 THEN BEGIN
          "Amount Incl. VAT" := "Amount Excl. VAT" + ("Amount Excl. VAT" * "VAT %")/100;
        END;
      END;

      GetCurrency("Currency Code");
      "Amount Incl. VAT (LCY)" := CalcExchAmtFCYToLCY("Amount Incl. VAT");
      "Amount Incl. VAT" := ROUND("Amount Incl. VAT",Currency."Amount Rounding Precision");
      "Amount Excl. VAT (LCY)" := CalcExchAmtFCYToLCY("Amount Excl. VAT");
      "Amount Excl. VAT" := ROUND("Amount Excl. VAT",Currency."Amount Rounding Precision");
    END;

    LOCAL PROCEDURE UpdateCurrencyFactor@1100281020();
    VAR
      lCurrExchRate@1100281000 : Record 330;
    BEGIN
      //ISAT01.ST
      IF "Currency Code" <> '' THEN
        "Currency Factor" := lCurrExchRate.ExchangeRate(WORKDATE,"Currency Code")
      ELSE
        "Currency Factor" := 0;
      VALIDATE("Currency Factor");
    END;

    LOCAL PROCEDURE GetCurrency@3(pCurrencyCode@1100281000 : Code[10]);
    BEGIN
      //ISAT01.ST
      IF pCurrencyCode = '' THEN BEGIN
        CLEAR(Currency);
        Currency.InitRoundingPrecision
      END ELSE
        IF pCurrencyCode <> Currency.Code THEN BEGIN
          Currency.GET(pCurrencyCode);
          Currency.TESTFIELD("Amount Rounding Precision");
        END;
    END;

    LOCAL PROCEDURE CalcExchAmtFCYToLCY@1100281019(pAmount@1100281000 : Decimal) : Decimal;
    VAR
      lCurrExchRate@1100281001 : Record 330;
    BEGIN
      //ISAT01.ST
      IF "Currency Code" = '' THEN
        EXIT(pAmount);

      EXIT(lCurrExchRate.ExchangeAmtFCYToLCY(
              WORKDATE,"Currency Code",
              pAmount,"Currency Factor"))
    END;

    PROCEDURE CheckAmount@1100281009();
    BEGIN
      //IMH10
      {IF ("Amount Excl. VAT" = 0) OR ("Amount Incl. VAT" = 0) THEN
        EXIT;
      IF "Amount Incl. VAT" < "Amount Excl. VAT" THEN
        ERROR(STRSUBSTNO(Text002,FIELDCAPTION("Amount Excl. VAT")
              ,FIELDCAPTION("Amount Incl. VAT")));
      }
    END;

    PROCEDURE GetDefaultValue@1100281001();
    VAR
      lInterventionDescription@1100281000 : Record 50070;
    BEGIN
      lInterventionDescription.SETRANGE("Service Header No.", "Service Header No.");
      lInterventionDescription.SETRANGE("Affected Location Code", "Affected Location Code");
      lInterventionDescription.SETRANGE("Speciality Code", "Speciality Code");
      lInterventionDescription.SETRANGE("Building Trade No.", "Building Trade No.");
      IF lInterventionDescription.FINDFIRST THEN BEGIN
        "Work Type Code" := lInterventionDescription."Work Type Code";
      END;
    END;

    PROCEDURE UpdateIntervDescrip@1100281000(pWithModifyTrue@1100281002 : Boolean);
    VAR
      lInterventionDescription@1100281000 : Record 50070;
      lInterventionDescriptionTmp@1100281004 : TEMPORARY Record 50070;
      lIntervDescriptionDetail@1100281001 : Record 50161;
      lIntervDescriptionDetail2@1100281003 : Record 50161;
    BEGIN
      //<<IMH05.ISAT.EBA
      IF SkipUpdateIntervDescrip THEN
        EXIT;
      //>>IMH05.ISAT.EBA


      IF NOT lInterventionDescription.GET("Service Header No.", "Affected Location Code", "Speciality Code", "Building Trade No.") THEN
        EXIT;

      lIntervDescriptionDetail.SETRANGE("Service Header No.", "Service Header No.");
      lIntervDescriptionDetail.SETRANGE("Affected Location Code", "Affected Location Code");
      lIntervDescriptionDetail.SETRANGE("Speciality Code", "Speciality Code");
      lIntervDescriptionDetail.SETRANGE("Building Trade No.", "Building Trade No.");
      lIntervDescriptionDetail.SETFILTER("Line No.",'<>%1', "Line No.");

      IF lIntervDescriptionDetail.FINDFIRST THEN
        REPEAT
          lInterventionDescriptionTmp."Amount Incl. VAT" += lIntervDescriptionDetail."Amount Incl. VAT";
          lInterventionDescriptionTmp."Amount Excl. VAT" += lIntervDescriptionDetail."Amount Excl. VAT";
        UNTIL lIntervDescriptionDetail.NEXT = 0;

      //<<IMH05.ISAT.EBA
      IF NOT FromDelete THEN BEGIN
      //>>IMH05.ISAT.EBA
        lInterventionDescriptionTmp."Amount Incl. VAT" += "Amount Incl. VAT";
        lInterventionDescriptionTmp."Amount Excl. VAT" += "Amount Excl. VAT";
      //<<IMH05.ISAT.EBA
      END;
      //>>IMH05.ISAT.EBA

      //IF (lInterventionDescriptionTmp."Amount Excl. VAT" <> 0) OR
      //  (lInterventionDescriptionTmp."Amount Incl. VAT" <> 0) THEN BEGIN
      lInterventionDescription.VALIDATE("Amount Excl. VAT", lInterventionDescriptionTmp."Amount Excl. VAT");
      //<<IMH05.ISAT.EBA
      IF SameValue(FIELDNO("VAT Prod. Posting Group"),FromDelete,lIntervDescriptionDetail2) THEN BEGIN
      //>>IMH05.ISAT.EBA
        lInterventionDescription.VALIDATE("VAT Prod. Posting Group", lIntervDescriptionDetail2."VAT Prod. Posting Group");
        lInterventionDescription.VALIDATE("VAT Bus. Posting Group", lIntervDescriptionDetail2."VAT Bus. Posting Group");
        lInterventionDescription.VALIDATE("VAT %", lIntervDescriptionDetail2."VAT %");
      //<<IMH05.ISAT.EBA
      END ELSE BEGIN
        lInterventionDescription."VAT Prod. Posting Group" := '';
        lInterventionDescription."VAT %" := "VAT %";
      END;
      //>>IMH05.ISAT.EBA

        lInterventionDescription.VALIDATE("Amount Edit", "Amount Edit");
        lInterventionDescription.VALIDATE("Amount Incl. VAT", lInterventionDescriptionTmp."Amount Incl. VAT");
      //END;

      //>>IMH07.PC
      IF NOT SkipUpIntervDetDescrip THEN BEGIN
      //>>IMH07.PC
        //<<IMH05.ISAT.EBA
        lInterventionDescription.SetSkipCheckDescDetail(TRUE);
        IF SameValue(FIELDNO("Location Detail Code"),FromDelete,lIntervDescriptionDetail2) THEN BEGIN
          lInterventionDescription.VALIDATE("Location Detail Code", lIntervDescriptionDetail2."Location Detail Code");
        END ELSE BEGIN
          lInterventionDescription.VALIDATE("Location Detail Code",'');
        END;
        //>>IMH05.ISAT.EBA
      END;

      lInterventionDescription.MODIFY(pWithModifyTrue);
    END;

    PROCEDURE CreateIntervDescDetail@1100281025(VAR pInterventionDescription@1100281000 : Record 50070);
    VAR
      lIntervDescriptionDetail@1100281001 : Record 50161;
    BEGIN
      lIntervDescriptionDetail."Service Header No." := pInterventionDescription."Service Header No.";
      lIntervDescriptionDetail."Affected Location Code" := pInterventionDescription."Affected Location Code";
      lIntervDescriptionDetail."Speciality Code" := pInterventionDescription."Speciality Code";
      lIntervDescriptionDetail."Building Trade No." := pInterventionDescription."Building Trade No.";
      lIntervDescriptionDetail."Work Type Code" := pInterventionDescription."Work Type Code";
      lIntervDescriptionDetail."Area (Mý)" := pInterventionDescription."Area (Mý)";
      lIntervDescriptionDetail.VAT := pInterventionDescription.VAT;
      lIntervDescriptionDetail."Unit Price" := pInterventionDescription."Unit Price";
      lIntervDescriptionDetail."Location Detail Code" := pInterventionDescription."Location Detail Code";
      lIntervDescriptionDetail.Comment := pInterventionDescription.Comment;
      lIntervDescriptionDetail."Location Detail Description" := pInterventionDescription."Location Detail Description";
      lIntervDescriptionDetail."Amount Incl. VAT" := pInterventionDescription."Amount Incl. VAT";
      lIntervDescriptionDetail."Amount Excl. VAT" := pInterventionDescription."Amount Excl. VAT";
      lIntervDescriptionDetail."Amount Excl. VAT (LCY)" := pInterventionDescription."Amount Excl. VAT (LCY)";
      lIntervDescriptionDetail."Amount Incl. VAT (LCY)" := pInterventionDescription."Amount Incl. VAT (LCY)";
      lIntervDescriptionDetail."Currency Code" := pInterventionDescription."Currency Code";
      lIntervDescriptionDetail."Currency Factor" := pInterventionDescription."Currency Factor";
      lIntervDescriptionDetail."VAT Prod. Posting Group" := pInterventionDescription."VAT Prod. Posting Group";
      lIntervDescriptionDetail."VAT Bus. Posting Group" := pInterventionDescription."VAT Bus. Posting Group";
      lIntervDescriptionDetail."VAT %" := pInterventionDescription."VAT %";
      lIntervDescriptionDetail."Amount Edit" := pInterventionDescription."Amount Edit";
      lIntervDescriptionDetail."Affected Location Description" := pInterventionDescription."Affected Location Description";
      lIntervDescriptionDetail.INSERT(TRUE);
    END;

    PROCEDURE SetIntervDescrNotModifyTrue@1100281002(pNotIntervDescrModifyTrue@1100281000 : Boolean);
    BEGIN
      // IMH03.PC
      NotIntervDescrModifyTrue := pNotIntervDescrModifyTrue;
    END;

    PROCEDURE InitDetailLine@1100281003();
    VAR
      lInterventionDescription@1100281000 : Record 50070;
    BEGIN
      //<<IMH05.ISAT.EBA
      IF NOT
        lInterventionDescription.GET(
          "Service Header No.","Affected Location Code","Speciality Code","Building Trade No.")
      THEN
        EXIT;

      "Work Type Code" := lInterventionDescription."Work Type Code";
      "Area (Mý)" := lInterventionDescription."Area (Mý)";
      VAT := lInterventionDescription.VAT;
      "Location Detail Code" := lInterventionDescription."Location Detail Code";
      "Location Detail Description" := lInterventionDescription."Location Detail Description";
      "Currency Code" := lInterventionDescription."Currency Code";
      "Currency Factor" := lInterventionDescription."Currency Factor";
      "VAT Prod. Posting Group" := lInterventionDescription."VAT Prod. Posting Group";
      "VAT Bus. Posting Group" := lInterventionDescription."VAT Bus. Posting Group";
      "VAT %" := lInterventionDescription."VAT %";
      "Affected Location Description" := lInterventionDescription."Affected Location Description";
      //>>IMH05.ISAT.EBA
    END;

    PROCEDURE UpdateAmtExclVAT@1100281004();
    BEGIN
      //<<IMH05.ISAT.EBA
      IF "Currency Code" = '' THEN
        Currency.InitRoundingPrecision
      ELSE BEGIN
        Currency.GET("Currency Code");
        Currency.TESTFIELD("Amount Rounding Precision");
      END;

      VALIDATE("Amount Excl. VAT",
        ROUND("Unit Price" * Quantity,Currency."Amount Rounding Precision"));
      //>>IMH05.ISAT.EBA
    END;

    PROCEDURE UpdateUnitPrice@1100281005();
    BEGIN
      //<<IMH05.ISAT.EBA
      IF CurrFieldNo = FIELDNO("Unit Price") THEN
        EXIT;

      IF Quantity <> 0 THEN
        "Unit Price" := "Amount Excl. VAT" / Quantity
      ELSE
        "Unit Price" := "Amount Excl. VAT";
      //>>IMH05.ISAT.EBA
    END;

    PROCEDURE TransferTo@1100281007(pNewLine@1100281005 : Boolean);
    VAR
      lSpecBuildingTrade@1100281000 : Record 50031;
      lIntervDesc@1100281002 : Record 50070;
      lNewIntervDescDetail@1100281003 : Record 50161;
      lSpecBuildingTradeList@1100281001 : Form 50304;
      lIntervDescList@1100281004 : Form 50089;
      lCreateDetail@1100281006 : Boolean;
    BEGIN
      //<<IMH05.ISAT.EBA
      IF pNewLine THEN BEGIN
        lSpecBuildingTrade.RESET;
        lSpecBuildingTradeList.SETTABLEVIEW(lSpecBuildingTrade);
        lSpecBuildingTradeList.LOOKUPMODE(TRUE);
        IF lSpecBuildingTradeList.RUNMODAL = ACTION::LookupOK THEN BEGIN
          lSpecBuildingTradeList.GETRECORD(lSpecBuildingTrade);
          lCreateDetail := TRUE;

          IF NOT lIntervDesc.GET(
            "Service Header No.",
            "Affected Location Code",
            lSpecBuildingTrade."Specialization Code",
            lSpecBuildingTrade."Building Trade No.")
          THEN BEGIN
            lIntervDesc.INIT;
            lIntervDesc.VALIDATE("Service Header No.","Service Header No.");
            lIntervDesc.VALIDATE("Affected Location Code","Affected Location Code");
            lIntervDesc.VALIDATE("Speciality Code",lSpecBuildingTrade."Specialization Code");
            lIntervDesc.VALIDATE("Building Trade No.",lSpecBuildingTrade."Building Trade No.");
            lIntervDesc.VALIDATE("Location Detail Code","Location Detail Code");
            lIntervDesc.VALIDATE("VAT Prod. Posting Group", "VAT Prod. Posting Group");
            lIntervDesc.VALIDATE("VAT Bus. Posting Group", "VAT Bus. Posting Group");
            lIntervDesc.VALIDATE("VAT %", "VAT %");
            //IMH06.ZW reprendre les informations sur la description intervention
            lIntervDesc."Location Detail Description" := "Location Detail Description";
            lIntervDesc."Sensed Provider No." := "Sensed Provider No.";
            lIntervDesc."Sensed Provider Name" := "Sensed Provider Name";
            lIntervDesc."Sensed Provider Post Code" := "Sensed Provider Post Code";
            lIntervDesc."Sensed Provider City" := "Sensed Provider City";
            lIntervDesc."Sensed Provider Agreement No." := "Sensed Provider Agreement No.";
            lIntervDesc."Sensed Provider Affected" := "Sensed Provider Affected";
            lIntervDesc."Affected Location Description" := "Affected Location Description";
            //>>IMH06
            lIntervDesc.INSERT(TRUE);
          END;
        END;
      END ELSE BEGIN
        lIntervDesc.RESET;
        lIntervDesc.FILTERGROUP(2);
        lIntervDesc.SETRANGE("Service Header No.","Service Header No.");
        lIntervDesc.FILTERGROUP(0);
        lIntervDescList.SETTABLEVIEW(lIntervDesc);
        lIntervDescList.LOOKUPMODE(TRUE);
        IF lIntervDescList.RUNMODAL = ACTION::LookupOK THEN BEGIN
          lIntervDescList.GETRECORD(lIntervDesc);
          lCreateDetail := TRUE;
        END;
      END;

      IF lCreateDetail THEN BEGIN
        lNewIntervDescDetail := Rec;
        //<<IMH07.PC
        //lNewIntervDescDetail.VALIDATE("Affected Location Code",lIntervDesc."Affected Location Code");
        lNewIntervDescDetail."Affected Location Code" := lIntervDesc."Affected Location Code";
        lNewIntervDescDetail."Affected Location Description" := lIntervDesc."Affected Location Description";
        lNewIntervDescDetail."Location Detail Code" := lIntervDesc."Location Detail Code";
        lNewIntervDescDetail."Location Detail Description" := lIntervDesc."Location Detail Description";
        //>>IMH07.PC
        lNewIntervDescDetail."Speciality Code" := lIntervDesc."Speciality Code";
        lNewIntervDescDetail."Building Trade No." := lIntervDesc."Building Trade No.";
        //**lNewIntervDescDetail.InitDetailLine;
        //lNewIntervDescDetail.VALIDATE("VAT Prod. Posting Group","VAT Prod. Posting Group");
        //lNewIntervDescDetail.VALIDATE("VAT Bus. Posting Group","VAT Bus. Posting Group");
        //lNewIntervDescDetail.VALIDATE("VAT %","VAT %");
        //lNewIntervDescDetail.VALIDATE("Location Detail Code","Location Detail Code");
        //<<IMH07.PC
        lNewIntervDescDetail.SetSkipUpIntervDetDescrip(TRUE);
        //>>IMH07.PC
        lNewIntervDescDetail.INSERT(TRUE);

        DELETE(TRUE);
      END;
      //>>IMH05.ISAT.EBA
    END;

    PROCEDURE SameValue@1100281008(pFieldNo@1100281000 : Integer;pFromDelete@1100281004 : Boolean;VAR pIntervDescDetail@1100281006 : Record 50161) : Boolean;
    VAR
      lIntervDescDetail@1100281001 : Record 50161;
      lFirstVATProdPostingGr@1100281002 : Code[20];
      lFirstLocDetailCode@1100281005 : Code[10];
      lCpt@1100281003 : Integer;
    BEGIN
      //<<IMH05.ISAT.EBA
      lIntervDescDetail.RESET;
      lIntervDescDetail.SETRANGE("Service Header No.","Service Header No.");
      lIntervDescDetail.SETRANGE("Affected Location Code","Affected Location Code");
      lIntervDescDetail.SETRANGE("Speciality Code","Speciality Code");
      lIntervDescDetail.SETRANGE("Building Trade No.","Building Trade No.");
      lIntervDescDetail.SETFILTER("Line No.",'<>%1', "Line No.");
      IF lIntervDescDetail.FINDSET THEN BEGIN
        REPEAT
          lCpt := lCpt + 1;

          CASE pFieldNo OF
            FIELDNO("VAT Prod. Posting Group") :
              BEGIN
                IF lCpt = 1 THEN BEGIN
                  IF pFromDelete THEN
                    lFirstVATProdPostingGr := lIntervDescDetail."VAT Prod. Posting Group"
                  ELSE
                    lFirstVATProdPostingGr := "VAT Prod. Posting Group";
                END;

                IF lIntervDescDetail."VAT Prod. Posting Group" <> lFirstVATProdPostingGr THEN
                  EXIT(FALSE);

              END;


            FIELDNO("Location Detail Code") :
              BEGIN
                IF lCpt = 1 THEN BEGIN
                  IF pFromDelete THEN
                    lFirstLocDetailCode := lIntervDescDetail."Location Detail Code"
                  ELSE
                    lFirstLocDetailCode := "Location Detail Code";
                END;

                IF lIntervDescDetail."Location Detail Code" <> lFirstLocDetailCode THEN
                  EXIT(FALSE);

              END;

          END;


        UNTIL lIntervDescDetail.NEXT = 0;
      END;

      IF pFromDelete THEN
        pIntervDescDetail := lIntervDescDetail
      ELSE
        pIntervDescDetail := Rec;


      EXIT(TRUE);
      //>>IMH05.ISAT.EBA
    END;

    PROCEDURE SetSkipUpdateIntervDescrip@1100281010(pSkipUpdateIntervDescrip@1100281000 : Boolean);
    BEGIN
      //<<IMH05.ISAT.EBA
      SkipUpdateIntervDescrip := pSkipUpdateIntervDescrip;
      //>>IMH05.ISAT.EBA
    END;

    PROCEDURE SetSkipUpIntervDetDescrip@1000000000(pSkipUpIntervDetDescrip@1000000000 : Boolean);
    BEGIN
      // IMH07.PC
      SkipUpIntervDetDescrip := pSkipUpIntervDetDescrip;
    END;

    BEGIN
    {
      /** @r IMH07 @d 12/07/12 @a ISAT.PC @v IMH6.01.347 @s JUIN @h 4602 @c Correction suite mantis 4602
          @c Ajout fonction SetSkipUpIntervDetDescrip */
      /** @r IMH06 @d 30/01/12 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service
          @c modif fonction "transferto" */
      /** @r IMH05 @d 27/12/11 @a ISAT.EBA @v IMH6.01.011 @s Gestion du service
          @c Ajout fonction "InitDetailLine"
          @c Ajout fonction "UpdateAmtExclVAT"
          @c Ajout fonction "UpdateUnitPrice"
          @c Ajout fonction "TransferTo"
          @c Ajout fonction "SameValue" */
      /** @r IMH04 @d 02/12/11 @a ISAT.EBA @v IMH6.01.132 @s DARVA
          @c Champ "Sensed Provider City" de Code20 … Text30 */
      /** @r IMH03 @d 02/11/11 @a ISAT.PC @v IMH6.01.132 @s DARVA @c gestiondes status */
      /** @r IMH02 @d 21/09/11 @a ISAT.PC @v IMH6.01.132 @s DARVA
          @c Ajout champ 310, Intervention Lot No.
          @c Ajout champ 400, Sensed Provider No.
          @c Ajout champ 401, Sensed Provider Name
          @c Ajout champ 402, Sensed Provider Post Code
          @c Ajout champ 403, Sensed Provider City
          @c Ajout champ 404, Sensed Provider Agreement No.
          @c Ajout champ 405, Sensed Provider Affected */
      /** @r IMH01 @d 13/09/11 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service @c Cr‚ation */
    }
    END.
  }
}