OBJECT Table 50167 Network Visit Planning
{
  OBJECT-PROPERTIES
  {
    Date=14/10/13;
    Time=16:19:40;
    Modified=Yes;
    Version List=IMH6.01.08;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ProviderSetup.GET;
               IF "No." = '' THEN BEGIN
                 ProviderSetup.TESTFIELD("Visit Planning Nos.");
                 NoSeriesMgt.InitSeries(ProviderSetup."Visit Planning Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               TouchRecord(TRUE);
             END;

    OnModify=BEGIN
               TouchRecord(FALSE);
             END;

    OnDelete=VAR
               lNetworkVisit@1000000000 : Record 50105;
             BEGIN
               lNetworkVisit.SETCURRENTKEY("Planning No.");
               lNetworkVisit.SETRANGE("Planning No.", "No.");
               IF lNetworkVisit.FINDFIRST THEN
                 REPEAT
                   lNetworkVisit.DeletePlanningLine;
                 UNTIL lNetworkVisit.NEXT = 0;
             END;

    OnRename=BEGIN
               TouchRecord(FALSE);
             END;

    CaptionML=[ENU=Network Visit Planning;
               FRA=Planning visite r‚seau];
    LookupFormID=Form50320;
    DrillDownFormID=Form50320;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              FRA=Nø] }
    { 10  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              FRA=Description] }
    { 20  ;   ;Begin Date          ;Date          ;CaptionML=[ENU=Begin Date;
                                                              FRA=Date de d‚but] }
    { 21  ;   ;End Date            ;Date          ;CaptionML=[ENU=End Date;
                                                              FRA=Date de fin] }
    { 30  ;   ;Regional Coordinator;Code20        ;TableRelation="User Setup"."User ID" WHERE (User Type=FILTER(Area Responsible));
                                                   CaptionML=[ENU=Area Responsible;
                                                              FRA=Responsable de zone] }
    { 40  ;   ;Confirmed visit Nb  ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Network Visit" WHERE (Planning No.=FIELD(No.),
                                                                                            Visit Confirmed=CONST(Yes)));
                                                   CaptionML=[ENU=Confirmed visit Nb;
                                                              FRA=Lignes confirm‚es];
                                                   Editable=No }
    { 41  ;   ;No Confirmed visit Nb;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Network Visit" WHERE (Planning No.=FIELD(No.),
                                                                                            Visit Confirmed=CONST(No)));
                                                   CaptionML=[ENU=No Confirmed visit Nb;
                                                              FRA=Lignes non confirm‚es];
                                                   Editable=No }
    { 50  ;   ;Start City Post Code;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode("Start City","Start City Post Code", "Start City Country/Region Code");
                                                                "Start Geo. Reference Code" := PostCode.GetGeoCode("Start City Post Code","Start City");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode("Start City","Start City Post Code", "Start City Country/Region Code",TRUE);
                                                              "Start Geo. Reference Code" := PostCode.GetGeoCode("Start City Post Code","Start City");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Start City Post Code;
                                                              FRA=Code postal ville d‚part] }
    { 51  ;   ;Start City          ;Text30        ;TableRelation="Post Code".City;
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity("Start City","Start City Post Code", "Start City Country/Region Code");
                                                                "Start Geo. Reference Code" := PostCode.GetGeoCode("Start City Post Code","Start City");
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity("Start City","Start City Post Code", "Start City Country/Region Code",TRUE);
                                                              "Start Geo. Reference Code" := PostCode.GetGeoCode("Start City Post Code","Start City");
                                                            END;

                                                   CaptionML=[ENU=Start City;
                                                              FRA=Ville d‚part] }
    { 52  ;   ;Start City Country/Region Code;Code10;
                                                   TableRelation=Country/Region;
                                                   CaptionML=[ENU=Start City Country/Region Code;
                                                              FRA=Code pays ville d‚part] }
    { 53  ;   ;Zone Visit          ;Integer       ;CaptionML=[ENU=Zone Visit;
                                                              FRA=Rayon] }
    { 54  ;   ;Start Geo. Reference Code;Code10   ;CaptionML=[ENU=Start Geo. Reference Code;
                                                              FRA=Code r‚f‚rence g‚o. d‚part] }
    { 107 ;   ;No. Series          ;Code10        ;TableRelation="No. Series".Code;
                                                   CaptionML=[ENU=No. Series;
                                                              FRA=Souches de nø] }
    { 200 ;   ;Ligne To Treate Nb  ;Integer       ;CaptionML=[ENU=Ligne To Treate Number;
                                                              FRA=Nb de visites … extraire] }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProviderSetup@1000000001 : Record 50011;
      NoSeriesMgt@1000000000 : Codeunit 396;
      PostCode@1000000002 : Record 225;

    PROCEDURE TouchRecord@1100281002(pInsert@1100281000 : Boolean);
    BEGIN
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;
      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    PROCEDURE GetSalesPersonName@1000000002(pCode@1000000002 : Code[10]) rValue : Text[50];
    VAR
      lUserSetup@1000000000 : Record 91;
      lSalespersonPurchaser@1000000001 : Record 13;
    BEGIN
      // IMH04.PC
      // r‚cupŠre le nom du code vendeur en fonction du code pass‚ en paramŠtre

      rValue := '';

      IF NOT lUserSetup.GET(pCode) THEN BEGIN
        EXIT;
      END;
      IF NOT lSalespersonPurchaser.GET(lUserSetup."Salespers./Purch. Code") THEN BEGIN
        EXIT;
      END;

      rValue := lSalespersonPurchaser.Name;
    END;

    PROCEDURE ShowCard@1000000000();
    BEGIN
      FORM.RUN(FORM::"Provider Visit Planning Card", Rec);
    END;

    BEGIN
    {
      /** @r IMH02 @d 14/10/13 @a ISAT.ST @v IMH6.01.353 @s Reorganisation region IMH @h 4760 @c Renommage CR / AR */
      /** @r IMH01 @d 15/02/12 @a ISAT.ZW @v IMH6.01.115 @s Visite Animation Reseau @c Cr‚ation */
    }
    END.
  }
}