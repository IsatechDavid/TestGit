OBJECT Table 50175 Invoice Recon. Error
{
  OBJECT-PROPERTIES
  {
    Date=17/09/12;
    Time=09:30:12;
    Modified=Yes;
    Version List=A supprimer;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lInvoiceReconError@1100281000 : Record 50175;
             BEGIN
               TouchRecord(TRUE);
               IF "Entry No." = 0 THEN BEGIN
                 lInvoiceReconError.SETRANGE(Type,Type);
                 lInvoiceReconError.LOCKTABLE;
                 IF lInvoiceReconError.FINDLAST THEN BEGIN
                   "Entry No." := lInvoiceReconError."Entry No." + 1;
                 END ELSE BEGIN
                   "Entry No." := 1;
                 END;
               END;
             END;

    OnModify=BEGIN
               TouchRecord(FALSE);
             END;

    CaptionML=[ENU=Invoice Reconciliation Error;
               FRA=Erreur rapprochement facture];
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              FRA=Nø s‚quence] }
    { 2   ;   ;Type                ;Option        ;OptionCaptionML=[ENU=" ,Force Validation";
                                                                    FRA=" ,Forcer validation"];
                                                   OptionString=[ ,Force Validation] }
    { 10  ;   ;Origin Invoice No.  ;Code20        ;TableRelation="Purch. Inv. Header".No.;
                                                   CaptionML=[ENU=Origin Invoice No.;
                                                              FRA=Nø facture origine] }
    { 11  ;   ;Vendor Invoice No.  ;Code20        ;CaptionML=[ENU=Vendor Invoice No.;
                                                              FRA=Nø facture fournisseur] }
    { 15  ;   ;Credit Memo No.     ;Code20        ;TableRelation="Purch. Cr. Memo Hdr.".No.;
                                                   CaptionML=[ENU=Credit Memo No.;
                                                              FRA=Nø avoir] }
    { 16  ;   ;Credit Memo No. Buffer;Code20      ;TableRelation="Purchase Header".No. WHERE (Document Type=CONST(Credit Memo));
                                                   CaptionML=[ENU=Credit Memo No. Buffer;
                                                              FRA=Nø avoir provisoire] }
    { 20  ;   ;New Invoice No.     ;Code20        ;TableRelation="Purch. Inv. Header".No.;
                                                   CaptionML=[ENU=New Invoice No.;
                                                              FRA=Nouveau nø facture] }
    { 21  ;   ;New Invoice No. Buffer;Code20      ;TableRelation="Purchase Header".No. WHERE (Document Type=CONST(Invoice));
                                                   CaptionML=[ENU=New Invoice No. Buffer;
                                                              FRA=Nouveau nø facture provisoire] }
    { 30  ;   ;Current Invoice No. ;Code20        ;TableRelation="Purchase Header".No. WHERE (Document Type=CONST(Invoice));
                                                   CaptionML=[ENU=Current Invoice No.;
                                                              FRA=Nø facture courante] }
    { 31  ;   ;Current Vendor Invoice No.;Code20  ;CaptionML=[ENU=Current Vendor Invoice No.;
                                                              FRA=Nø facture courante fournisseur] }
    { 32  ;   ;Service Header No.  ;Code20        ;TableRelation="Service Header".No. WHERE (Document Type=CONST(Invoice));
                                                   CaptionML=[ENU=Service Header No.;
                                                              FRA=Nø ligne produit];
                                                   Editable=No }
    { 33  ;   ;Service Intervention Line No.;Integer;
                                                   TableRelation="Service Intervention Line"."Line No." WHERE (Service Header No.=FIELD(Service Header No.));
                                                   CaptionML=[ENU=Service Intervention Line No.;
                                                              FRA=Nø ligne intervention];
                                                   Editable=No }
    { 34  ;   ;Apply Correction    ;Boolean       ;CaptionML=[ENU=Apply Correction;
                                                              FRA=Correction appliqu‚e] }
    { 39  ;   ;Posted Invoice No.  ;Code20        ;TableRelation="Purch. Inv. Header".No.;
                                                   CaptionML=[ENU=Posted Invoice No.;
                                                              FRA=Nø facture enregistr‚e] }
    { 100 ;   ;Error Step          ;Text30        ;CaptionML=[ENU=Error Step;
                                                              FRA=Etape erreur] }
    { 101 ;   ;Error               ;Text250       ;CaptionML=[ENU=Error;
                                                              FRA=Erreur] }
    { 200 ;   ;Origin Reconc. Reject Reason;Text250;
                                                   CaptionML=[ENU=Origin Reconc. Reject Reason;
                                                              FRA=Motif rejet rappro. origin] }
    { 201 ;   ;Minutes Status      ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Intervention Minutes".Status WHERE (Service Header No.=FIELD(Service Header No.),
                                                                                                                   Service Intervention Line No.=FIELD(Service Intervention Line No.),
                                                                                                                   Current Minutes=CONST(Yes)));
                                                   OptionCaptionML=[ENU=" ,Validated,,Rejected";
                                                                    FRA=" ,Valid‚,,Refus‚"];
                                                   OptionString=[ ,Valid‚,,Refus‚];
                                                   Editable=No }
    { 202 ;   ;Minutes Type        ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Intervention Minutes".Type WHERE (Service Header No.=FIELD(Service Header No.),
                                                                                                                 Service Intervention Line No.=FIELD(Service Intervention Line No.),
                                                                                                                 Current Minutes=CONST(Yes)));
                                                   OptionString=1,2,3,4 }
    { 210 ;   ;Curr Invoice exists ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Purchase Header" WHERE (Document Type=CONST(Invoice),
                                                                                              No.=FIELD(Current Invoice No.)));
                                                   Editable=No }
    { 211 ;   ;Invoice Enter Amount;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Header"."Enter Amount Including VAT" WHERE (Document Type=CONST(Invoice),
                                                                                                                            No.=FIELD(Current Invoice No.)));
                                                   Editable=No }
    { 212 ;   ;Enter Vendor Invoice No.;Code20    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Header"."Vendor Invoice No." WHERE (Document Type=CONST(Invoice),
                                                                                                                    No.=FIELD(Current Invoice No.))) }
    { 213 ;   ;Invoice Deduct Amt  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Header"."Deductible Amount" WHERE (Document Type=CONST(Invoice),
                                                                                                                   No.=FIELD(Current Invoice No.)));
                                                   Editable=No }
    { 214 ;   ;Vendor No.          ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Purchase Header"."Buy-from Vendor No." WHERE (Document Type=CONST(Invoice),
                                                                                                                     No.=FIELD(Current Invoice No.)));
                                                   Editable=No }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;TableRelation="User Setup"."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Type,Entry No.                          ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE LookupCreditMenoBuffer@1100281003(pNo@1100281000 : Code[20]);
    VAR
      lPurchaseHeader@1100281001 : Record 38;
    BEGIN
      IF NOT lPurchaseHeader.GET(lPurchaseHeader."Document Type"::"Credit Memo",pNo) THEN BEGIN
        EXIT;
      END;
      FORM.RUN(FORM::"Purchase Credit Memo",lPurchaseHeader);
    END;

    PROCEDURE LookupCreditMemo@1100281002(pNo@1100281000 : Code[20]);
    VAR
      lPurchCrMemoHdr@1100281001 : Record 124;
    BEGIN
      IF NOT lPurchCrMemoHdr.GET(pNo) THEN BEGIN
        EXIT;
      END;
      FORM.RUN(FORM::"Posted Purchase Credit Memo",lPurchCrMemoHdr);
    END;

    PROCEDURE LookupInvoiceBuffer@1100281000(pNo@1100281000 : Code[20]);
    VAR
      lPurchaseHeader@1100281001 : Record 38;
    BEGIN
      IF NOT lPurchaseHeader.GET(lPurchaseHeader."Document Type"::Invoice,pNo) THEN BEGIN
        EXIT;
      END;
      FORM.RUN(FORM::"Purchase Invoice",lPurchaseHeader);
    END;

    PROCEDURE LookupInvoice@1100281001(pNo@1100281000 : Code[20]);
    VAR
      lPurchInvHeader@1100281001 : Record 122;
    BEGIN
      IF NOT lPurchInvHeader.GET(pNo) THEN BEGIN
        EXIT;
      END;
      FORM.RUN(FORM::"Posted Purchase Invoice",lPurchInvHeader);
    END;

    PROCEDURE LookupServiceHeader@1100281004(pNo@1100281000 : Code[20]);
    VAR
      lServiceHeader@1100281001 : Record 5900;
    BEGIN
      IF NOT lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,pNo) THEN BEGIN
        EXIT;
      END;
      FORM.RUN(FORM::"Service Header - Show Card",lServiceHeader);
    END;

    PROCEDURE LookupIntervention@1100281005(pNo@1100281001 : Code[20];pLineNo@1100281002 : Integer);
    VAR
      lServiceInterventionLine@1100281000 : Record 50075;
    BEGIN
      IF NOT lServiceInterventionLine.GET(pNo,pLineNo) THEN BEGIN
        EXIT;
      END;
      FORM.RUN(FORM::"Intervention Line Card",lServiceInterventionLine);
    END;

    LOCAL PROCEDURE TouchRecord@1000000001(pInsert@1000000000 : Boolean);
    BEGIN
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;
      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    BEGIN
    {
      /** @r IMH01 @d 25/01/12 @a ISAT.PC @v IMH6.01.146 @s Cr‚ation
          @c table de stockage pour suivre les factures suite au dysfonctionnement du moteur de rapprochement */
    }
    END.
  }
}