OBJECT Table 5065 Interaction Log Entry
{
  OBJECT-PROPERTIES
  {
    Date=19/12/13;
    Time=10:58:21;
    Modified=Yes;
    Version List=NAVW16.00.01,ISA6.00,IMH6.01,MATMUT01,SUPPORT;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               //<<IMH05.ST
               "Creation Date" := CURRENTDATETIME;
               "Creation User ID" := USERID;
               //>>IMH05.ST
             END;

    OnDelete=VAR
               InteractionCommentLine@1000 : Record 5123;
               CampaignMgt@1001 : Codeunit 7030;
             BEGIN
               InteractionCommentLine.SETRANGE("Entry No.","Entry No.");
               IF NOT InteractionCommentLine.ISEMPTY THEN //IMH08.ST
               InteractionCommentLine.DELETEALL;

               IF "Campaign No." <> '' THEN //IMH08.ST
               CampaignMgt.DeleteContfromTargetGr(Rec);
             END;

    CaptionML=[ENU=Interaction Log Entry;
               FRA=Ecriture journal interaction];
    LookupFormID=Form5076;
    DrillDownFormID=Form5076;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              FRA=Nø s‚quence] }
    { 2   ;   ;Contact No.         ;Code20        ;TableRelation=Contact;
                                                   CaptionML=[ENU=Contact No.;
                                                              FRA=Nø contact] }
    { 3   ;   ;Contact Company No. ;Code20        ;TableRelation=Contact WHERE (Type=CONST(Company));
                                                   CaptionML=[ENU=Primary Contact No.;
                                                              FRA=Nø contact soci‚t‚] }
    { 4   ;   ;Date                ;Date          ;CaptionML=[ENU=Date;
                                                              FRA=Date] }
    { 5   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              FRA=D‚signation] }
    { 6   ;   ;Information Flow    ;Option        ;CaptionML=[ENU=Information Flow;
                                                              FRA=Flux d'informations];
                                                   OptionCaptionML=[ENU=" ,Outbound,Inbound";
                                                                    FRA=" ,Sortant,Entrant"];
                                                   OptionString=[ ,Outbound,Inbound] }
    { 7   ;   ;Initiated By        ;Option        ;CaptionML=[ENU=Initiated By;
                                                              FRA=Initi‚ par];
                                                   OptionCaptionML=[ENU=" ,Us,Them";
                                                                    FRA=" ,Notre soci‚t‚,Le contact"];
                                                   OptionString=[ ,Us,Them] }
    { 8   ;   ;Attachment No.      ;Integer       ;TableRelation=Attachment;
                                                   CaptionML=[ENU=Attachment No.;
                                                              FRA=Nø document joint] }
    { 9   ;   ;Cost (LCY)          ;Decimal       ;CaptionML=[ENU=Cost (LCY);
                                                              FRA=Co–t DS];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 10  ;   ;Duration (Min.)     ;Decimal       ;CaptionML=[ENU=Duration (Min.);
                                                              FRA=Dur‚e (min.)];
                                                   DecimalPlaces=0:0;
                                                   Editable=No }
    { 11  ;   ;User ID             ;Code20        ;TableRelation=User;
                                                   OnLookup=VAR
                                                              LoginMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              LoginMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              FRA=Code utilisateur] }
    { 12  ;   ;Interaction Group Code;Code10      ;TableRelation="Interaction Group";
                                                   CaptionML=[ENU=Interaction Group Code;
                                                              FRA=Code groupe interactions] }
    { 13  ;   ;Interaction Template Code;Code10   ;TableRelation="Interaction Template";
                                                   CaptionML=[ENU=Interaction Template Code;
                                                              FRA=Code modŠle interaction] }
    { 14  ;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   CaptionML=[ENU=Campaign No.;
                                                              FRA=Nø ‚vŠnement exceptionnel] }
    { 15  ;   ;Campaign Entry No.  ;Integer       ;TableRelation="Campaign Entry" WHERE (Campaign No.=FIELD(Campaign No.));
                                                   CaptionML=[ENU=Campaign Entry No.;
                                                              FRA=Nø ligne campagne] }
    { 16  ;   ;Campaign Response   ;Boolean       ;CaptionML=[ENU=Campaign Response;
                                                              FRA=R‚ponse campagne] }
    { 17  ;   ;Campaign Target     ;Boolean       ;CaptionML=[ENU=Campaign Target;
                                                              FRA=Cible campagne] }
    { 18  ;   ;Segment No.         ;Code20        ;CaptionML=[ENU=Segment No.;
                                                              FRA=Nø segment] }
    { 19  ;   ;Evaluation          ;Option        ;CaptionML=[ENU=Evaluation;
                                                              FRA=Evaluation];
                                                   OptionCaptionML=[ENU=" ,Very Positive,Positive,Neutral,Negative,Very Negative";
                                                                    FRA=" ,TrŠs positive,Positive,Neutre,N‚gative,TrŠs N‚gative"];
                                                   OptionString=[ ,Very Positive,Positive,Neutral,Negative,Very Negative];
                                                   Editable=No }
    { 20  ;   ;Time of Interaction ;Time          ;CaptionML=[ENU=Time of Interaction;
                                                              FRA=Heure interaction] }
    { 21  ;   ;Attempt Failed      ;Boolean       ;CaptionML=[ENU=Attempt Failed;
                                                              FRA=Echec de la tentative] }
    { 23  ;   ;To-do No.           ;Code20        ;TableRelation=To-do;
                                                   CaptionML=[ENU=To-do No.;
                                                              FRA=Nø action] }
    { 24  ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Salesperson Code;
                                                              FRA=Code vendeur] }
    { 25  ;   ;Delivery Status     ;Option        ;CaptionML=[ENU=Delivery Status;
                                                              FRA=Statut envoi];
                                                   OptionCaptionML=[ENU=" ,In Progress,Error";
                                                                    FRA=" ,En cours,Erreur"];
                                                   OptionString=[ ,In Progress,Error] }
    { 26  ;   ;Canceled            ;Boolean       ;CaptionML=[ENU=Canceled;
                                                              FRA=Annul‚e] }
    { 27  ;   ;Correspondence Type ;Option        ;CaptionML=[ENU=Correspondence Type;
                                                              FRA=Moyen de communication privil‚gi‚];
                                                   OptionCaptionML=[ENU=" ,Hard Copy,E-Mail,Fax,SMS,DARVA";
                                                                    FRA=" ,Impression,E-Mail,T‚l‚copie,SMS,DARVA"];
                                                   OptionString=[ ,Hard Copy,E-Mail,Fax,SMS,DARVA] }
    { 28  ;   ;Contact Alt. Address Code;Code10   ;TableRelation="Contact Alt. Address".Code WHERE (Contact No.=FIELD(Contact No.));
                                                   CaptionML=[ENU=Contact Alt. Address Code;
                                                              FRA=Code adresse contact secondaire] }
    { 29  ;   ;Logged Segment Entry No.;Integer   ;TableRelation="Logged Segment";
                                                   CaptionML=[ENU=Logged Segment Entry No.;
                                                              FRA=Nø ‚criture segment journal] }
    { 30  ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              FRA=Type document];
                                                   OptionCaptionML=[ENU=" ,Sales Qte.,Sales Blnkt. Ord,Sales Ord. Cnfrmn.,Sales Inv.,Sales Shpt. Note,Sales Cr. Memo,Sales Stmnt.,Sales Rmdr.,Serv. Ord. Create,Serv. Ord. Post,Purch.Qte.,Purch. Blnkt. Ord.,Purch. Ord.,Purch. Inv.,Purch. Rcpt.,Purch. Cr. Memo,Cover Sheet,Sales Return Order,Sales Finance Charge Memo,Sales Return Receipt,Purch. Return Shipment,Purch. Return Ord. Cnfrmn.,Service Contract,Service Contract Quote,Service Quote,IssuedDocReminder,,,,Purch.pre-Inv,Purch.pre-CreditMemo,Visit Prov.";
                                                                    FRA=" ,Devis,Cde ouv. vente,Conf. cde vente,Fact. vente,BL vente,Avoir vente,Rapport vente,Relance vente,Cde serv.,Cde serv. enreg.,Demande prix,Cde ouv. achat,Cde achat,Fact. achat,R‚cept. achat,Avoir achat,Bordereau d'envoi,Retour achat,Fact. int‚rˆts vente,R‚cept. retour vente,Exp‚d. retour achat,Conf. retour achat,Contrat serv.,Devis contrat serv.,Devis serv.,Doc. Relance ‚mise,,,,Facture achat prov.,Avoir achat prov.,Visite Pres."];
                                                   OptionString=[ ,Sales Qte.,Sales Blnkt. Ord,Sales Ord. Cnfrmn.,Sales Inv.,Sales Shpt. Note,Sales Cr. Memo,Sales Stmnt.,Sales Rmdr.,Serv. Ord. Create,Serv. Ord. Post,Purch.Qte.,Purch. Blnkt. Ord.,Purch. Ord.,Purch. Inv.,Purch. Rcpt.,Purch. Cr. Memo,Cover Sheet,Sales Return Order,Sales Finance Charge Memo,Sales Return Receipt,Purch. Return Shipment,Purch. Return Ord. Cnfrmn.,Service Contract,Service Contract Quote,Service Quote,IssuedDocReminder,,,,PurchInv38,PurchCrMemo38,VisitProv] }
    { 31  ;   ;Document No.        ;Code20        ;TestTableRelation=No;
                                                   CaptionML=[ENU=Document No.;
                                                              FRA=Nø document] }
    { 32  ;   ;Version No.         ;Integer       ;CaptionML=[ENU=Version No.;
                                                              FRA=Nø version] }
    { 33  ;   ;Doc. No. Occurrence ;Integer       ;CaptionML=[ENU=Doc. No. Occurrence;
                                                              FRA=Occurrence nø doc.] }
    { 34  ;   ;Contact Via         ;Text80        ;CaptionML=[ENU=Contact Via;
                                                              FRA=Appel‚ au Nø] }
    { 35  ;   ;Send Word Docs. as Attmt.;Boolean  ;CaptionML=[ENU=Send Word Docs. as Attmt.;
                                                              FRA=Envoyer doc Word attach‚s] }
    { 36  ;   ;Interaction Language Code;Code10   ;TableRelation=Language;
                                                   CaptionML=[ENU=Interaction Language Code;
                                                              FRA=Code langue interaction] }
    { 37  ;   ;E-Mail Logged       ;Boolean       ;CaptionML=[ENU=E-Mail Logged;
                                                              FRA=E-mail journalis‚] }
    { 38  ;   ;Subject             ;Text50        ;CaptionML=[ENU=Subject;
                                                              FRA=Sujet] }
    { 39  ;   ;Contact Name        ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Contact No.)));
                                                   CaptionML=[ENU=Contact Name;
                                                              FRA=Nom contact];
                                                   Editable=No }
    { 40  ;   ;Contact Company Name;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Contact Company No.),
                                                                                          Type=CONST(Company)));
                                                   CaptionML=[ENU=Contact Company Name;
                                                              FRA=Nom soci‚t‚ contact];
                                                   Editable=No }
    { 43  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Inter. Log Entry Comment Line" WHERE (Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Comment;
                                                              FRA=Commentaires];
                                                   Editable=No }
    { 44  ;   ;Opportunity No.     ;Code20        ;TableRelation=Opportunity;
                                                   CaptionML=[ENU=Opportunity No.;
                                                              FRA=Nø opportunit‚] }
    { 45  ;   ;Postponed           ;Boolean       ;CaptionML=[ENU=Postponed;
                                                              FRA=Report‚] }
    { 46  ;   ;Mail GUID           ;GUID          ;CaptionML=[ENU=Mail GUID;
                                                              FRA=GUID de messagerie] }
    { 50030;  ;Service No.         ;Code20        ;TableRelation=Service."Service No.";
                                                   OnValidate=VAR
                                                                lService@1100281000 : Record 50066;
                                                              BEGIN
                                                                //IMH04
                                                                IF lService.GET("Service No.") THEN
                                                                  "Corporate No." := lService."Corporate No.";
                                                              END;

                                                   CaptionML=[ENU=Service No.;
                                                              FRA=Nø service] }
    { 50031;  ;Service Creation Date;DateTime     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Service."Creation Date" WHERE (Service No.=FIELD(Service No.)));
                                                   CaptionML=[ENU=Service Creation Date;
                                                              FRA=Date cr‚ation service];
                                                   Editable=No }
    { 50032;  ;Service Header No.  ;Code20        ;TableRelation="Service Header".No. WHERE (Service No.=FIELD(Service No.),
                                                                                             Document Type=CONST(Invoice));
                                                   OnValidate=VAR
                                                                lServiceHeader@1100281000 : Record 5900;
                                                              BEGIN
                                                                IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, "Service Header No.") THEN
                                                                  VALIDATE("Service No.", lServiceHeader."Service No.");
                                                              END;

                                                   CaptionML=[ENU=Service Header No.;
                                                              FRA=Nø ligne produit] }
    { 50033;  ;Intervention Line No.;Integer      ;TableRelation="Service Intervention Line"."Line No." WHERE (Service Header No.=FIELD(Service Header No.));
                                                   OnValidate=VAR
                                                                lInterventionLine@1100281000 : Record 50075;
                                                              BEGIN
                                                                IF lInterventionLine.GET("Service Header No.", "Intervention Line No.") THEN
                                                                  "Intervention No." := lInterventionLine."Intervention No.";
                                                              END;

                                                   CaptionML=[ENU=Intervention Line No.;
                                                              FRA=Nø ligne intervention];
                                                   BlankZero=Yes }
    { 50034;  ;Intervention No.    ;Integer       ;OnValidate=VAR
                                                                lInterventionLine@1100281000 : Record 50075;
                                                              BEGIN
                                                                TESTFIELD("Service Header No.");
                                                                lInterventionLine.SETCURRENTKEY("Service Header No.","Intervention No.");
                                                                lInterventionLine.SETRANGE("Service Header No.", "Service Header No.");
                                                                lInterventionLine.SETRANGE("Intervention No.", "Intervention No.");
                                                                lInterventionLine.FINDFIRST;
                                                                "Intervention Line No." := lInterventionLine."Line No.";
                                                              END;

                                                   OnLookup=VAR
                                                              lInterventionLine@1100281000 : Record 50075;
                                                            BEGIN
                                                              lInterventionLine.SETCURRENTKEY("Service Header No.","Intervention No.");
                                                              lInterventionLine.SETRANGE("Service Header No.", "Service Header No.");
                                                              IF lInterventionLine.GET("Service Header No.", "Intervention Line No.") THEN;
                                                              IF FORM.RUNMODAL(0, lInterventionLine) = ACTION::LookupOK THEN BEGIN
                                                                VALIDATE("Service Header No.", lInterventionLine."Service Header No.");
                                                                VALIDATE("Intervention Line No.", lInterventionLine."Line No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Intervention No.;
                                                              FRA=Nø intervention];
                                                   BlankZero=Yes }
    { 50035;  ;Provider No.        ;Code20        ;TableRelation=Provider;
                                                   CaptionML=[ENU=Provider No.;
                                                              FRA=Nø prestataire] }
    { 50036;  ;Intervention Quote No.;Integer     ;CaptionML=[ENU=Intervention Quote No.;
                                                              FRA=Nø ligne devis intervention] }
    { 50040;  ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              FRA=Date document] }
    { 50050;  ;Vendor No.          ;Code20        ;TableRelation=Vendor.No.;
                                                   CaptionML=[ENU=Vendor No.;
                                                              FRA=Nø fournisseur] }
    { 50090;  ;Service Corporate No.;Code20       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Header"."Corporate No." WHERE (Document Type=CONST(Invoice),
                                                                                                              No.=FIELD(Service Header No.)));
                                                   TableRelation=Customer.No.;
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Service Corporate No.;
                                                              FRA=Nø grand compte ligne produit];
                                                   Editable=No }
    { 50091;  ;Service Requisitionner;Code10      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Header".Requisitioner WHERE (Document Type=CONST(Invoice),
                                                                                                            No.=FIELD(Service Header No.)));
                                                   TableRelation=Code.Code WHERE (Table ID=CONST(50066),
                                                                                  Field ID=CONST(13));
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Service Requisitionner;
                                                              FRA=Demandeur ligne produit];
                                                   Editable=No }
    { 50100;  ;Corporate No.       ;Code20        ;TableRelation=Customer.No. WHERE (Service Contact=CONST(Corporate Customer),
                                                                                     Service Corporate=CONST(Yes));
                                                   CaptionML=[ENU=Corporate No.;
                                                              FRA=Nø grand compte] }
    { 50250;  ;Document Flow Code  ;Code10        ;TableRelation="Document Flow"."Flow Code";
                                                   CaptionML=[ENU=Document Flow Code;
                                                              FRA=Code flux document] }
    { 50251;  ;Document Queue Type ;Option        ;CaptionML=[ENU=Document Queue Type;
                                                              FRA=Type file de document];
                                                   OptionCaptionML=[ENU=Receipt,Emission;
                                                                    FRA=R‚ception,Emission];
                                                   OptionString=Receipt,Emission }
    { 50252;  ;Doc. Queue Entry No.;Integer       ;CaptionML=[ENU=Doc. Queue Entry No.;
                                                              FRA=Nø s‚quence file de document] }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;TableRelation=User."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;SMS Phone No.       ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("SMS Send Entry"."Phone No." WHERE (Interaction Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=SMS Phone No.;
                                                              FRA=Nø t‚l‚phone destinataire SMS];
                                                   Editable=No }
    { 50503;  ;SMS Send Type       ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("SMS Send Entry"."Send Type" WHERE (Interaction Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=SMS Send Type;
                                                              FRA=Type d'‚mission SMS];
                                                   OptionCaptionML=[ENU=Manuel,Automatic;
                                                                    FRA=Manuel,Automatique];
                                                   OptionString=Manuel,Automatique;
                                                   Editable=No }
    { 50504;  ;SMS Send Statut     ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("SMS Send Entry"."Send Status" WHERE (Interaction Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=SMS Send Statut;
                                                              FRA=Statut ‚mission SMS];
                                                   OptionCaptionML=[ENU=To send,Issued,Received,anomaly;
                                                                    FRA=A envoyer,Emis,Re‡u,En anomalie];
                                                   OptionString=A envoyer,Emis,Re‡u,En anomalie;
                                                   Editable=No }
    { 50505;  ;Status Date         ;DateTime      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("SMS Send Entry"."Status Date" WHERE (Interaction Entry No.=FIELD(Entry No.)));
                                                   CaptionML=FRA=Date statut }
    { 50610;  ;Attachment Deleted  ;Boolean       ;CaptionML=[ENU=Attachment Deleted;
                                                              FRA=Document joint supprim‚] }
  }
  KEYS
  {
    {    ;Entry No.                                }
    {    ;Contact Company No.,Entry No.           ;Clustered=Yes }
    {    ;Contact Company No.,Contact No.,Date,Postponed;
                                                   SumIndexFields=Cost (LCY),Duration (Min.);
                                                   MaintainSIFTIndex=No }
    {    ;Contact Company No.,Date,Contact No.,Canceled,Initiated By,Attempt Failed,Postponed;
                                                   SumIndexFields=Cost (LCY),Duration (Min.);
                                                   MaintainSIFTIndex=No }
    {    ;Interaction Group Code,Date              }
    {    ;Interaction Group Code,Canceled,Date,Postponed;
                                                   SumIndexFields=Cost (LCY),Duration (Min.);
                                                   MaintainSIFTIndex=No }
    {    ;Interaction Template Code,Date           }
    {    ;Interaction Template Code,Canceled,Date,Postponed;
                                                   SumIndexFields=Cost (LCY),Duration (Min.);
                                                   MaintainSIFTIndex=No }
    {    ;Canceled,Campaign No.,Campaign Entry No.,Date,Postponed;
                                                   SumIndexFields=Cost (LCY),Duration (Min.);
                                                   MaintainSIFTIndex=No }
    {    ;Campaign No.,Campaign Entry No.,Date,Postponed;
                                                   SumIndexFields=Cost (LCY),Duration (Min.);
                                                   MaintainSIFTIndex=No }
    {    ;Salesperson Code,Date,Postponed         ;SumIndexFields=Cost (LCY),Duration (Min.);
                                                   MaintainSIFTIndex=No }
    {    ;Canceled,Salesperson Code,Date,Postponed;SumIndexFields=Cost (LCY),Duration (Min.);
                                                   MaintainSIFTIndex=No }
    {    ;Logged Segment Entry No.,Postponed      ;KeyGroups=T5065_Segm }
    {    ;Attachment No.                           }
    {    ;To-do No.,Date                          ;KeyGroups=T5065_ToDo }
    {    ;Contact No.,Correspondence Type,E-Mail Logged,Subject,Postponed }
    {    ;Campaign No.,Campaign Target             }
    {    ;Campaign No.,Contact Company No.,Campaign Target,Postponed }
    {    ;Opportunity No.,Date                    ;KeyGroups=T5065_Opp }
    {    ;Service No.,Service Header No.,Intervention Line No.,Date,Postponed;
                                                   SumIndexFields=Cost (LCY),Duration (Min.);
                                                   MaintainSIFTIndex=No }
    {    ;Provider No.                             }
    {    ;Document No.,Document Type               }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 %2 is marked %3.\;FRA=%1 %2 est … %3.\';
      Text001@1001 : TextConst 'ENU=Do you wish to remove the checkmark?;FRA=Souhaitez-vous d‚sactiver le champ ?';
      Text002@1002 : TextConst 'ENU=Do you wish to mark %1 %2 as %3?;FRA=Souhaitez-vous mettre %1 %2 … %3 ?';
      Text003@1003 : TextConst 'ENU=It is not possible to view sales statements after they have been printed.;FRA=Il n''est plus possible de consulter les rapports vente aprŠs impression.';
      Text004@1004 : TextConst 'ENU=It is not possible to show cover sheets after they have been printed.;FRA=Il n''est plus possible d''afficher les bordereaux d''envoi aprŠs impression.';
      Text005@1005 : TextConst 'ENU=Do you wish to remove the checkmark from the selected %1 lines?;FRA=Souhaitez-vous d‚sactiver les %1 lignes s‚lectionn‚es ?';
      Text006@1006 : TextConst 'ENU=Do you wish to mark the selected %1 lines as %2?;FRA=Souhaitez-vous marquer les %1 lignes s‚lectionn‚es comme %2 ?';
      Text009@1007 : TextConst 'ENU=Do you want to remove Attachment?;FRA=Souhaitez-vous supprimer le document joint ?';
      Text010@1008 : TextConst 'ENU=Do you want to remove unique Attachments for the selected lines?;FRA=Souhaitez-vous supprimer les documents joints uniques des lignes s‚lectionn‚es ?';
      Text011@1009 : TextConst 'ENU=Very Positive,Positive,Neutral,Negative,Very Negative;FRA=TrŠs positive,Positive,Neutre,N‚gative,TrŠs N‚gative';

    PROCEDURE CreateInteraction@10();
    VAR
      SegLine@1000 : TEMPORARY Record 5077;
    BEGIN
      SegLine.CreateInteractionFromIntLogEnt(Rec,'');
    END;

    PROCEDURE CreateTodo@8();
    VAR
      TempTodo@1000 : TEMPORARY Record 5080;
    BEGIN
      TempTodo.CreateToDoFromInteractLogEntry(Rec)
    END;

    PROCEDURE OpenAttachment@5();
    VAR
      Attachment@1000 : Record 5062;
      SegLine@1001 : Record 5077;
    BEGIN
      IF "Attachment No." = 0 THEN
        EXIT;
      Attachment.GET("Attachment No.");

      IF Attachment."Storage Type" <> Attachment."Storage Type"::"Exchange Storage" THEN BEGIN
        SegLine."Contact No." := "Contact No.";
        SegLine."Salesperson Code" := "Salesperson Code";
        SegLine."Contact Alt. Address Code" := "Contact Alt. Address Code";
        SegLine.Date := Date;
        SegLine."Campaign No." := "Campaign No.";
        SegLine."Segment No." := "Segment No.";
        SegLine."Line No." := "Entry No.";
        SegLine.Description := Description;
        SegLine.Subject := Subject;
        SegLine."Language Code" := "Interaction Language Code";
        Attachment.SetInteractionTemplate("Interaction Template Code");//IMH04
        Attachment.ShowAttachment(SegLine,FORMAT("Entry No.") + ' ' + Description,FALSE);
      END ELSE
        Attachment.DisplayInOutlook;
    END;

    PROCEDURE ToggleCanceledCheckmark@7();
    VAR
      InteractionLogEntry@1003 : Record 5065;
      Attachment@1002 : Record 5062;
      ErrorTxt@1004 : Text[80];
      MasterCanceledCheckmark@1001 : Boolean;
      RemoveUniqueAttachment@1000 : Boolean;
    BEGIN
      IF FIND('-') THEN BEGIN
        IF ConfirmToggleCanceledCheckmark(COUNT,ErrorTxt) THEN BEGIN
          MasterCanceledCheckmark := NOT Canceled;
          IF FindUniqueAttachment AND MasterCanceledCheckmark THEN
            RemoveUniqueAttachment := CONFIRM(ErrorTxt,FALSE);
          SETCURRENTKEY("Entry No.");
          IF FIND('-') THEN
            REPEAT
              SetCanceledCheckmark(MasterCanceledCheckmark,RemoveUniqueAttachment);
            UNTIL NEXT = 0
          END;
      END
    END;

    PROCEDURE SetCanceledCheckmark@2(CanceledCheckmark@1003 : Boolean;RemoveUniqueAttachment@1004 : Boolean);
    VAR
      CampaignEntry@1000 : Record 5072;
      LoggedSeg@1001 : Record 5075;
      Attachment@1002 : Record 5062;
    BEGIN
      IF Canceled AND NOT CanceledCheckmark THEN BEGIN
        IF "Logged Segment Entry No." <> 0 THEN BEGIN
          LoggedSeg.GET("Logged Segment Entry No.");
          LoggedSeg.TESTFIELD(Canceled,FALSE);
        END;
        IF "Campaign Entry No." <> 0 THEN BEGIN
          CampaignEntry.GET("Campaign Entry No.");
          CampaignEntry.TESTFIELD(Canceled,FALSE);
        END;
      END;

      IF NOT Canceled AND CanceledCheckmark THEN BEGIN
        IF UniqueAttachment AND RemoveUniqueAttachment THEN BEGIN
          Attachment.GET("Attachment No.");
          IF Attachment.RemoveAttachment(FALSE) THEN
            "Attachment No." := 0;
        END;
      END;

      Canceled := CanceledCheckmark;
      MODIFY;
    END;

    PROCEDURE ConfirmToggleCanceledCheckmark@3(NumberOfSelectedLines@1000 : Integer;VAR ErrorTxt@1001 : Text[80]) : Boolean;
    BEGIN
      IF NumberOfSelectedLines = 1 THEN BEGIN
        ErrorTxt := Text009;
        IF Canceled THEN BEGIN
          EXIT(CONFIRM(
            Text000 +
            Text001,TRUE,TABLECAPTION,"Entry No.",FIELDCAPTION(Canceled)));
        END ELSE BEGIN
          EXIT(CONFIRM(
            Text002,TRUE,TABLECAPTION,"Entry No.",FIELDCAPTION(Canceled)));
        END;
      END ELSE BEGIN
        ErrorTxt := Text010;
        IF Canceled THEN BEGIN
          EXIT(CONFIRM(
            Text005,TRUE,TABLECAPTION));
        END ELSE BEGIN
          EXIT(CONFIRM(
            Text006,TRUE,TABLECAPTION,FIELDCAPTION(Canceled)));
        END;
      END
    END;

    PROCEDURE UniqueAttachment@4() IsUnique@1000 : Boolean;
    VAR
      InteractLogEntry@1001 : Record 5065;
    BEGIN
      IF "Attachment No." <> 0 THEN BEGIN
        InteractLogEntry.SETCURRENTKEY("Attachment No.");
        InteractLogEntry.SETRANGE("Attachment No.","Attachment No.");
        InteractLogEntry.SETFILTER("Entry No.",'<>%1',"Entry No.");
        IsUnique := NOT InteractLogEntry.FIND('-');
      END;
    END;

    PROCEDURE FindUniqueAttachment@6() IsUnique@1000 : Boolean;
    BEGIN
      IF FIND('-') THEN
        REPEAT
          IsUnique := UniqueAttachment;
        UNTIL (NEXT = 0) OR IsUnique
    END;

    PROCEDURE ShowDocument@1();
    VAR
      SalesHeader@1000 : Record 36;
      SalesHeaderArchive@1011 : Record 5107;
      SalesInvHeader@1001 : Record 112;
      SalesShptHeader@1002 : Record 110;
      SalesCrMemoHeader@1003 : Record 114;
      IssuedReminderHeader@1004 : Record 297;
      PurchHeader@1005 : Record 38;
      PurchHeaderArchive@1012 : Record 5109;
      PurchInvHeader@1006 : Record 122;
      PurchRcptHeader@1007 : Record 120;
      PurchCrMemoHeader@1008 : Record 124;
      ServHeader@1009 : Record 5900;
      ReturnRcptHeader@1013 : Record 6660;
      IssuedFinChargeMemoHeader@1015 : Record 304;
      ReturnReceiptHeader@1014 : Record 6660;
      ReturnShipmentHeader@1016 : Record 6650;
      ServiceContractHeader@1017 : Record 5965;
    BEGIN
      CASE "Document Type" OF
        "Document Type"::"Sales Qte.":
          IF "Version No." <> 0 THEN BEGIN
            SalesHeaderArchive.GET(
              SalesHeaderArchive."Document Type"::Quote,"Document No.",
              "Doc. No. Occurrence","Version No.");
            SalesHeaderArchive.SETRANGE("Document Type",SalesHeaderArchive."Document Type"::Quote);
            SalesHeaderArchive.SETRANGE("No.","Document No.");
            SalesHeaderArchive.SETRANGE("Doc. No. Occurrence","Doc. No. Occurrence");
            FORM.RUN(FORM::"Sales Quote Archive",SalesHeaderArchive);
          END ELSE BEGIN
            SalesHeader.GET(SalesHeader."Document Type"::Quote,"Document No.");
            FORM.RUN(FORM::"Sales Quote",SalesHeader);
          END;
        "Document Type"::"Sales Blnkt. Ord":
          BEGIN
            SalesHeader.GET(SalesHeader."Document Type"::"Blanket Order","Document No.");
            FORM.RUN(FORM::"Blanket Sales Order",SalesHeader);
          END;
        "Document Type"::"Sales Ord. Cnfrmn.":
          IF "Version No." <> 0 THEN BEGIN
            SalesHeaderArchive.GET(
              SalesHeaderArchive."Document Type"::Order,"Document No.",
              "Doc. No. Occurrence","Version No.");
            SalesHeaderArchive.SETRANGE("Document Type",SalesHeaderArchive."Document Type"::Order);
            SalesHeaderArchive.SETRANGE("No.","Document No.");
            SalesHeaderArchive.SETRANGE("Doc. No. Occurrence","Doc. No. Occurrence");
            FORM.RUN(FORM::"Sales Order Archive",SalesHeaderArchive);
          END ELSE BEGIN
            SalesHeader.GET(SalesHeader."Document Type"::Order,"Document No.");
            FORM.RUN(FORM::"Sales Order",SalesHeader);
          END;
        "Document Type"::"Sales Inv.":
          BEGIN
            SalesInvHeader.GET("Document No.");
            FORM.RUN(FORM::"Posted Sales Invoice",SalesInvHeader);
          END;
        "Document Type"::"Sales Shpt. Note":
          BEGIN
            SalesShptHeader.GET("Document No.");
            FORM.RUN(FORM::"Posted Sales Shipment",SalesShptHeader);
          END;
        "Document Type"::"Sales Cr. Memo":
          BEGIN
            SalesCrMemoHeader.GET("Document No.");
            FORM.RUN(FORM::"Posted Sales Credit Memo",SalesCrMemoHeader);
          END;
        "Document Type"::"Sales Stmnt.":
          ERROR(Text003);
        "Document Type"::"Sales Rmdr.":
          BEGIN
            IssuedReminderHeader.GET("Document No.");
            FORM.RUN(FORM::"Issued Reminder",IssuedReminderHeader);
          END;
        "Document Type"::"Serv. Ord. Create":
          BEGIN
            ServHeader.GET(ServHeader."Document Type"::Order,"Document No.");
            FORM.RUN(FORM::"Service Order",ServHeader)
          END;
        "Document Type"::"Purch.Qte.":
          IF "Version No." <> 0 THEN BEGIN
            PurchHeaderArchive.GET(
              PurchHeaderArchive."Document Type"::Quote,"Document No.",
              "Doc. No. Occurrence","Version No.");
            PurchHeaderArchive.SETRANGE("Document Type",PurchHeaderArchive."Document Type"::Quote);
            PurchHeaderArchive.SETRANGE("No.","Document No.");
            PurchHeaderArchive.SETRANGE("Doc. No. Occurrence","Doc. No. Occurrence");
            FORM.RUN(FORM::"Purchase Quote Archive",PurchHeaderArchive);
          END ELSE BEGIN
            PurchHeader.GET(PurchHeader."Document Type"::Quote,"Document No.");
            FORM.RUN(FORM::"Purchase Quote",PurchHeader);
          END;
        "Document Type"::"Purch. Blnkt. Ord.":
          BEGIN
            PurchHeader.GET(PurchHeader."Document Type"::"Blanket Order","Document No.");
            FORM.RUN(FORM::"Blanket Purchase Order",PurchHeader);
          END;
        "Document Type"::"Purch. Ord.":
          IF "Version No." <> 0 THEN BEGIN
            PurchHeaderArchive.GET(
              PurchHeaderArchive."Document Type"::Order,"Document No.",
              "Doc. No. Occurrence","Version No.");
            PurchHeaderArchive.SETRANGE("Document Type",PurchHeaderArchive."Document Type"::Order);
            PurchHeaderArchive.SETRANGE("No.","Document No.");
            PurchHeaderArchive.SETRANGE("Doc. No. Occurrence","Doc. No. Occurrence");
            FORM.RUN(FORM::"Purchase Order Archive",PurchHeaderArchive);
          END ELSE BEGIN
            PurchHeader.GET(PurchHeader."Document Type"::Order,"Document No.");
            FORM.RUN(FORM::"Purchase Order",PurchHeader);
          END;
        "Document Type"::"Purch. Inv.":
          BEGIN
            PurchInvHeader.GET("Document No.");
            FORM.RUN(FORM::"Posted Purchase Invoice",PurchInvHeader);
          END;
        "Document Type"::"Purch. Rcpt.":
          BEGIN
            PurchRcptHeader.GET("Document No.");
            FORM.RUN(FORM::"Posted Purchase Receipt",PurchRcptHeader);
          END;
        "Document Type"::"Purch. Cr. Memo":
          BEGIN
            PurchCrMemoHeader.GET("Document No.");
            FORM.RUN(FORM::"Posted Purchase Credit Memo",PurchCrMemoHeader);
          END;
        "Document Type"::"Cover Sheet":
          ERROR(Text004);
        "Document Type"::"Sales Return Order":
          IF SalesHeader.GET(SalesHeader."Document Type"::"Return Order","Document No.") THEN
            FORM.RUN(FORM::"Sales Return Order",SalesHeader)
          ELSE BEGIN
            ReturnRcptHeader.SETRANGE(ReturnRcptHeader."Return Order No.","Document No.");
            FORM.RUN(FORM::"Posted Return Receipt",ReturnRcptHeader);
          END;
        "Document Type"::"Sales Finance Charge Memo":
          BEGIN
            IssuedFinChargeMemoHeader.GET("Document No.");
            FORM.RUN(FORM::"Issued Finance Charge Memo",IssuedFinChargeMemoHeader);
          END;
        "Document Type"::"Sales Return Receipt":
          BEGIN
            ReturnReceiptHeader.GET("Document No.");
            FORM.RUN(FORM::"Posted Return Receipt",ReturnReceiptHeader);
          END;
        "Document Type"::"Purch. Return Shipment":
          BEGIN
            ReturnShipmentHeader.GET("Document No.");
            FORM.RUN(FORM::"Posted Return Shipment",ReturnShipmentHeader);
          END;
        "Document Type"::"Purch. Return Ord. Cnfrmn.":
          IF PurchHeader.GET(PurchHeader."Document Type"::"Return Order","Document No.") THEN
            FORM.RUN(FORM::"Purchase Return Order",PurchHeader)
          ELSE BEGIN
            ReturnShipmentHeader.SETRANGE(ReturnShipmentHeader."Return Order No.","Document No.");
            FORM.RUN(FORM::"Posted Return Shipment",ReturnShipmentHeader);
          END;
        "Document Type"::"Service Contract":
          BEGIN
            ServiceContractHeader.GET(ServiceContractHeader."Contract Type"::Contract,"Document No.");
            FORM.RUN(FORM::"Service Contract",ServiceContractHeader);
          END;
        "Document Type"::"Service Contract Quote":
          BEGIN
            ServiceContractHeader.GET(ServiceContractHeader."Contract Type"::Quote,"Document No.");
            FORM.RUN(FORM::"Service Contract Quote",ServiceContractHeader);
          END;
        "Document Type"::"Service Quote":
          BEGIN
            ServHeader.GET(ServHeader."Document Type"::Quote,"Document No.");
            FORM.RUN(FORM::"Service Quote",ServHeader);
          END;
      END;
    END;

    PROCEDURE EvaluateInteraction@9();
    VAR
      Selected@1000 : Integer;
    BEGIN
      IF FIND('-') THEN BEGIN
        Selected := DIALOG.STRMENU(Text011);
        IF Selected <> 0 THEN
          REPEAT
            Evaluation := Selected;
            MODIFY;
          UNTIL NEXT = 0
      END;
    END;

    PROCEDURE ResumeInteraction@11();
    VAR
      SegLine@1000 : TEMPORARY Record 5077;
      Cont@1006 : Record 5050;
      Salesperson@1005 : Record 13;
      Campaign@1004 : Record 5071;
      Todo@1003 : Record 5080;
      Opportunity@1002 : Record 5092;
      SegManagement@1001 : Codeunit 5051;
      lService@1100281002 : Record 50066;
      lServiceHeader@1100281001 : Record 5900;
      lInterventionLine@1100281000 : Record 50075;
    BEGIN
      SegLine.DELETEALL;
      SegLine.INIT;
      SegManagement.CopyFieldsFromInteractLogEntry(SegLine,Rec);
      SegLine.VALIDATE(Date,WORKDATE);

      IF Todo.GET(GETFILTER("To-do No.")) THEN
        SegLine.SETRANGE("To-do No.",Todo."No.");
      IF Cont.GET(GETFILTER("Contact Company No.")) THEN
        SegLine.SETRANGE("Contact Company No.",Cont."No.");
      IF Cont.GET(GETFILTER("Contact No.")) THEN
        SegLine.SETRANGE("Contact No.",Cont."No.");
      IF Salesperson.GET(GETFILTER("Salesperson Code")) THEN
        SegLine.SETRANGE("Salesperson Code",Salesperson.Code);
      IF Campaign.GET(GETFILTER("Campaign No.")) THEN
        SegLine.SETRANGE("Campaign No.",Campaign."No.");
      IF Opportunity.GET(GETFILTER("Opportunity No.")) THEN
        SegLine.SETRANGE("Opportunity No.",Opportunity."No.");

      //<<IMH02 isat.zw
      IF lService.GET(GETFILTER("Service No.")) THEN BEGIN
        SETRANGE("Service No.", "Service No.");
        VALIDATE("Service No.", "Service No.");
      END;
      IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, GETFILTER("Service Header No.")) THEN BEGIN
        SETRANGE("Service Header No.", "Service Header No.");
        VALIDATE("Service Header No.", "Service Header No.");
      END;
      IF GETFILTER("Intervention Line No.") <> '' THEN
        IF lInterventionLine.GET(GETFILTER("Service Header No."),
                               GETRANGEMIN("Intervention Line No.")) THEN BEGIN
          SETRANGE("Intervention Line No.", "Intervention Line No.");
          VALIDATE("Intervention Line No.", "Intervention Line No.");
      END;
      //<<IMH02 isat.zw

      SegLine.StartWizard;
    END;

    PROCEDURE GetAttachment@1100281001(pShowAttachment@1100281000 : Boolean) : Boolean;
    VAR
      lDocAttachment@1100281001 : Record 50021;
      lAttachmentMgt@1100281002 : Codeunit 50002;
    BEGIN
      //IMH01 isat.zw
      lDocAttachment.SETCURRENTKEY("Interaction Log Entry No.");
      lDocAttachment.SETRANGE("Interaction Log Entry No.", "Entry No.");

      IF pShowAttachment THEN
        IF lDocAttachment.COUNT = 1 THEN BEGIN
          lDocAttachment.FINDFIRST;
          lAttachmentMgt.ShowAttachment(lDocAttachment)
        END ELSE
          FORM.RUN(0, lDocAttachment);

      EXIT(NOT lDocAttachment.ISEMPTY);
    END;

    BEGIN
    {
      /** @r IMH17 @d 19/12/13 @a ISAT.ZW @v IMH6.01.4107 @s Gestion suppression PJ @h 4107
          @c Ajout champ 50610 Attachment Deleted*/
      /** @r IMH16 @d 16/10/13 @a ISAT.ACO @v IMH6.01.348 @d DARVA MATMUT Lot 1
          @c Ajout option "DARVA" pour Moyen de communication "Correspondence Type" */
      /** @r IMH15 @d 19/09/12 @a ISAT.ML @v IMH6.01.213 @s Projet SMS
          @c Ajout champs  Nø t‚l‚phone destinataire SMS + Type dÉ‚mission SMS + Statut ‚mission SMS + Date du statut SMS + date statut
             Ajout Option SMS sur le champ 27 Correspondence Type*/
      /** @r IMH14 @d 28/03/12 @a ISAT.ST @v IMH6.01.105 @s Extranet qualit‚
          @c Ajout champs Service Corporate No. et Service Requisitionner pour testfilter */
      /** @r IMH13 @d 15/02/12 @a ISAT.ZW @v IMH6.01.138 @s Gestion des visites
          @c Ajout Cl‚ Document No.,Document Type */
          @c Ajout Document Type : VIsite */
      /** @r IMH12 @d 07/12/11 @a ISAT.ZW @v IMH6.01.138 @s Optimisations @c Ajout champs 50250-50252 flux document */
      /** @r IMH11 @d 06/12/11 @a ISAT.ST @v IMH6.01.138 @s Optimisations @c D‚sactivation des SIFT */
      /** @r IMH10 @d 09/11/11 @a ISAT.EBA @v IMH6.01.020 @s Gestion prestataire
          @c Ajout de la "Provider No." */
      /** @r IMH09 @d 21/07/11 @a ISAT.ZW @v IMH6.01.138 @s Ajout champs Document date + vendor no. */
      /** @r IMH08 @d 01/07/11 @a ISAT.ST @v IMH6.01.138 @s Optimisations */
      /** @r IMH07 @d 17/03/11 @a ISAT.ST @v IMH6.01.138 @s Optimisations
          @c MaintainSIFTIndex … non sur "Campaign No.,Campaign Entry No.,Date,Postponed"
          @c Ajout index "Contact Company No.,Entry No." en clustered */
      /** @r IMH06 @d 14/02/11 @a ISAT.LLT @v IMH6.01.108 @s Interactions
          @c Ajout champ 50031 Service Creation Date */
      /** @r IMH05 @d 25/01/11 @a ISAT.LLT @v IMH6.01.108 @s Interactions @c Renommage champ Correspondance Type */
      /** @r IMH04 @d 15/12/10 @a ISAT.LLT @v IMH6.01.108 @s Interactions @c gestion champs de fusion */
      /** @r IHM03 @d 14/12/10 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Renommage Campagne en ‚venement exceptionnel */
      /** @r IHM02 @d 30/11/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service
          @c Ajout champs Nø service + Ligne produit + intervention */
      /** @r IHM01 @d 29/11/10 @a ISAT.ZW @v IMH6.01.004 @s GED @c Modification table Doc joint */
    }
    END.
  }
}