OBJECT Table 5071 Campaign
{
  OBJECT-PROPERTIES
  {
    Date=25/10/12;
    Time=14:31:36;
    Modified=Yes;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Description;
    OnInsert=VAR
               lCampaignMgt@1100281000 : Codeunit 50206;
             BEGIN
               lCampaignMgt.CheckAccessAllowed("No.");
               IF "No." = '' THEN BEGIN
                 RMSetup.GET;
                 RMSetup.TESTFIELD("Campaign Nos.");
                 NoSeriesMgt.InitSeries(RMSetup."Campaign Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               DimMgt.UpdateDefaultDim(
                 DATABASE::Campaign,"No.",
                 "Global Dimension 1 Code","Global Dimension 2 Code");
               //<<IMH09 ISAT.ML
               ProviderSetup.GET;
               VALIDATE("SMS Template Code", ProviderSetup."Campaign SMS Template");
               //>>IMH09 ISAT.ML
             END;

    OnModify=VAR
               lCampaignMgt@1100281000 : Codeunit 50206;
             BEGIN
               lCampaignMgt.CheckAccessAllowed("No.");
               //<<ISAT.ZW d‚sactiv‚
               //TESTFIELD(Description); //IMH04 ISAT.NFO
               //>>ISAT.ZW d‚sactiv‚
               "Last Date Modified" := TODAY;

               IF ("Starting Date" <> xRec."Starting Date") OR
                  ("Ending Date" <> xRec."Ending Date")
               THEN
                 UpdateDates;
             END;

    OnDelete=VAR
               SalesPrice@1001 : Record 7002;
               SalesLineDisc@1000 : Record 7004;
               lCampaignMgt@1100281000 : Codeunit 50206;
             BEGIN
               lCampaignMgt.CheckAccessAllowed("No.");
               DimMgt.DeleteDefaultDim(DATABASE::Campaign,"No.");

               RMCommentLine.SETRANGE("Table Name",RMCommentLine."Table Name"::Campaign);
               RMCommentLine.SETRANGE("No.","No.");
               RMCommentLine.DELETEALL;

               CampaignEntry.SETCURRENTKEY("Campaign No.");
               CampaignEntry.SETRANGE("Campaign No.","No.");
               CampaignEntry.DELETEALL;

               CampaignMgmt.DeactivateCampaign(Rec,FALSE);

               SalesPrice.SETRANGE("Sales Type",SalesPrice."Sales Type"::Campaign);
               SalesPrice.SETRANGE("Sales Code","No.");
               SalesPrice.DELETEALL;

               SalesLineDisc.SETRANGE("Sales Type",SalesLineDisc."Sales Type"::Campaign);
               SalesLineDisc.SETRANGE("Sales Code","No.");
               SalesLineDisc.DELETEALL;
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;
             END;

    CaptionML=[ENU=Campaign;
               FRA=Campagne];
    LookupFormID=Form5087;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  RMSetup.GET;
                                                                  NoSeriesMgt.TestManual(RMSetup."Campaign Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              FRA=Nø] }
    { 2   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              FRA=D‚signation];
                                                   NotBlank=Yes }
    { 3   ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                IF ("Starting Date" > "Ending Date") AND ("Ending Date" > 0D) THEN
                                                                  ERROR(Text000,FIELDCAPTION("Starting Date"),FIELDCAPTION("Ending Date"));
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              FRA=Date d‚but] }
    { 4   ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                IF ("Ending Date" < "Starting Date") AND ("Ending Date" > 0D) THEN
                                                                  ERROR(Text001,FIELDCAPTION("Ending Date"),FIELDCAPTION("Starting Date"));
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              FRA=Date fin] }
    { 5   ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Salesperson Code;
                                                              FRA=Code vendeur] }
    { 6   ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Rlshp. Mgt. Comment Line" WHERE (Table Name=CONST(Campaign),
                                                                                                       No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              FRA=Commentaires];
                                                   Editable=No }
    { 7   ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              FRA=Date dern. modification];
                                                   Editable=No }
    { 8   ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              FRA=Souches de nø];
                                                   Editable=No }
    { 9   ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              FRA=Code axe principal 1];
                                                   CaptionClass='1,1,1' }
    { 10  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              FRA=Code axe principal 2];
                                                   CaptionClass='1,1,2' }
    { 11  ;   ;Status Code         ;Code10        ;TableRelation="Campaign Status";
                                                   CaptionML=[ENU=Status Code;
                                                              FRA=Code statut] }
    { 12  ;   ;Target Contacts Contacted;Integer  ;FieldClass=FlowField;
                                                   CalcFormula=Count("Interaction Log Entry" WHERE (Campaign No.=FIELD(No.),
                                                                                                    Campaign Target=CONST(Yes),
                                                                                                    Canceled=CONST(No),
                                                                                                    Date=FIELD(Date Filter),
                                                                                                    Postponed=CONST(No)));
                                                   CaptionML=[ENU=Target Contacts Contacted;
                                                              FRA=Contacts cibles joints];
                                                   Editable=No }
    { 13  ;   ;Contacts Responded  ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Interaction Log Entry" WHERE (Campaign No.=FIELD(No.),
                                                                                                    Campaign Response=CONST(Yes),
                                                                                                    Canceled=CONST(No),
                                                                                                    Date=FIELD(Date Filter),
                                                                                                    Postponed=CONST(No)));
                                                   CaptionML=[ENU=Contacts Responded;
                                                              FRA=Contacts qui ont r‚pondu];
                                                   Editable=No }
    { 14  ;   ;Duration (Min.)     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Interaction Log Entry"."Duration (Min.)" WHERE (Campaign No.=FIELD(No.),
                                                                                                                    Canceled=CONST(No),
                                                                                                                    Date=FIELD(Date Filter),
                                                                                                                    Postponed=CONST(No)));
                                                   CaptionML=[ENU=Duration (Min.);
                                                              FRA=Dur‚e (min.)];
                                                   DecimalPlaces=0:0;
                                                   Editable=No }
    { 16  ;   ;Cost (LCY)          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Interaction Log Entry"."Cost (LCY)" WHERE (Campaign No.=FIELD(No.),
                                                                                                               Canceled=CONST(No),
                                                                                                               Date=FIELD(Date Filter),
                                                                                                               Postponed=CONST(No)));
                                                   CaptionML=[ENU=Cost (LCY);
                                                              FRA=Co–t DS];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 17  ;   ;No. of Opportunities;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Opportunity Entry" WHERE (Campaign No.=FIELD(No.),
                                                                                                Active=CONST(Yes)));
                                                   CaptionML=[ENU=No. of Opportunities;
                                                              FRA=Nbre opportunit‚s];
                                                   Editable=No }
    { 18  ;   ;Estimated Value (LCY);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Opportunity Entry"."Estimated Value (LCY)" WHERE (Campaign No.=FIELD(No.),
                                                                                                                      Active=CONST(Yes)));
                                                   CaptionML=[ENU=Estimated Value (LCY);
                                                              FRA=Valeur estim‚e DS];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 19  ;   ;Calcd. Current Value (LCY);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Opportunity Entry"."Calcd. Current Value (LCY)" WHERE (Campaign No.=FIELD(No.),
                                                                                                                           Active=CONST(Yes)));
                                                   CaptionML=[ENU=Calcd. Current Value (LCY);
                                                              FRA=Valeur calcul‚e DS];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 20  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              FRA=Filtre date] }
    { 23  ;   ;Action Taken Filter ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Action Taken Filter;
                                                              FRA=Filtre action choisie];
                                                   OptionCaptionML=[ENU=" ,Next,Previous,Updated,Jumped,Won,Lost";
                                                                    FRA=" ,Suivante,Pr‚c‚dente,Mise … jour,Omise,Gagn‚e,Perdue"];
                                                   OptionString=[ ,Next,Previous,Updated,Jumped,Won,Lost] }
    { 24  ;   ;Sales Cycle Filter  ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Sales Cycle";
                                                   CaptionML=[ENU=Sales Cycle Filter;
                                                              FRA=Filtre cycle de vente] }
    { 25  ;   ;Sales Cycle Stage Filter;Integer   ;FieldClass=FlowFilter;
                                                   TableRelation="Sales Cycle Stage".Stage WHERE (Sales Cycle Code=FIELD(Sales Cycle Filter));
                                                   CaptionML=[ENU=Sales Cycle Stage Filter;
                                                              FRA=Filtre ‚tape cycle vente] }
    { 26  ;   ;Probability % Filter;Decimal       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Probability % Filter;
                                                              FRA=Filtre % probabilit‚];
                                                   DecimalPlaces=1:1;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 27  ;   ;Completed % Filter  ;Decimal       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Completed % Filter;
                                                              FRA=Filtre % r‚alis‚];
                                                   DecimalPlaces=1:1;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 28  ;   ;Contact Filter      ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Contact;
                                                   CaptionML=[ENU=Contact Filter;
                                                              FRA=Filtre contact] }
    { 29  ;   ;Contact Company Filter;Code20      ;FieldClass=FlowFilter;
                                                   TableRelation=Contact WHERE (Type=CONST(Company));
                                                   CaptionML=[ENU=Contact Company Filter;
                                                              FRA=Filtre soci‚t‚] }
    { 30  ;   ;Estimated Value Filter;Decimal     ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Estimated Value Filter;
                                                              FRA=Filtre valeur estim‚e];
                                                   AutoFormatType=1 }
    { 31  ;   ;Calcd. Current Value Filter;Decimal;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Calcd. Current Value Filter;
                                                              FRA=Filtre valeur calcul‚e];
                                                   AutoFormatType=1 }
    { 32  ;   ;Chances of Success % Filter;Decimal;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Chances of Success % Filter;
                                                              FRA=Filtre % chance de succŠs];
                                                   DecimalPlaces=0:0;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 33  ;   ;To-do Status Filter ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=To-do Status Filter;
                                                              FRA=Filtre statut action];
                                                   OptionCaptionML=[ENU=Not Started,In Progress,Completed,Waiting,Postponed;
                                                                    FRA=Non d‚marr‚,En cours,Termin‚,En attente,Report‚];
                                                   OptionString=Not Started,In Progress,Completed,Waiting,Postponed }
    { 34  ;   ;To-do Closed Filter ;Boolean       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=To-do Closed Filter;
                                                              FRA=Filtre action termin‚e] }
    { 35  ;   ;Priority Filter     ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Priority Filter;
                                                              FRA=Filtre priorit‚];
                                                   OptionCaptionML=[ENU=Low,Normal,High;
                                                                    FRA=Faible,Normale,Haute];
                                                   OptionString=Low,Normal,High }
    { 36  ;   ;Team Filter         ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=Team;
                                                   CaptionML=[ENU=Team Filter;
                                                              FRA=Filtre corbeille] }
    { 37  ;   ;Salesperson Filter  ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Salesperson Filter;
                                                              FRA=Filtre vendeur] }
    { 38  ;   ;Opportunity Entry Exists;Boolean   ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Opportunity Entry" WHERE (Campaign No.=FIELD(No.),
                                                                                                Active=CONST(Yes),
                                                                                                Salesperson Code=FIELD(Salesperson Filter),
                                                                                                Contact No.=FIELD(Contact Filter),
                                                                                                Contact Company No.=FIELD(Contact Company Filter),
                                                                                                Sales Cycle Code=FIELD(Sales Cycle Filter),
                                                                                                Sales Cycle Stage=FIELD(Sales Cycle Stage Filter),
                                                                                                Action Taken=FIELD(Action Taken Filter),
                                                                                                Estimated Value (LCY)=FIELD(Estimated Value Filter),
                                                                                                Calcd. Current Value (LCY)=FIELD(Calcd. Current Value Filter),
                                                                                                Completed %=FIELD(Completed % Filter),
                                                                                                Chances of Success %=FIELD(Chances of Success % Filter),
                                                                                                Probability %=FIELD(Probability % Filter),
                                                                                                Estimated Close Date=FIELD(Date Filter),
                                                                                                Close Opportunity Code=FIELD(Close Opportunity Filter)));
                                                   CaptionML=[ENU=Opportunity Entry Exists;
                                                              FRA=Ligne opportunit‚ existante];
                                                   Editable=No }
    { 39  ;   ;To-do Entry Exists  ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist(To-do WHERE (Campaign No.=FIELD(No.),
                                                                                  Contact No.=FIELD(Contact Filter),
                                                                                  Contact Company No.=FIELD(Contact Company Filter),
                                                                                  Salesperson Code=FIELD(Salesperson Filter),
                                                                                  Team Code=FIELD(Team Filter),
                                                                                  Status=FIELD(To-do Status Filter),
                                                                                  Closed=FIELD(To-do Closed Filter),
                                                                                  Priority=FIELD(Priority Filter),
                                                                                  Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=To-do Entry Exists;
                                                              FRA=Ecriture action existante];
                                                   Editable=No }
    { 40  ;   ;Close Opportunity Filter;Code10    ;FieldClass=FlowFilter;
                                                   TableRelation="Close Opportunity Code";
                                                   CaptionML=[ENU=Close Opportunity Filter;
                                                              FRA=Filtre fin opportunit‚] }
    { 41  ;   ;Activated           ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Campaign Target Group" WHERE (Campaign No.=FIELD(No.)));
                                                   CaptionML=[ENU=Activated;
                                                              FRA=Activ‚];
                                                   Editable=No }
    { 8725;   ;Selling-in Start Date;Date         ;OnValidate=BEGIN
                                                                IF ("Selling-in Start Date" > "Selling-in End Date") AND ("Selling-in End Date" > 0D) THEN
                                                                  ERROR(Text000,FIELDCAPTION("Selling-in Start Date"),FIELDCAPTION("Selling-in End Date"));
                                                              END;

                                                   CaptionML=[ENU=Selling-in Start Date;
                                                              FRA=Date d‚but vente] }
    { 8726;   ;Selling-in End Date ;Date          ;OnValidate=BEGIN
                                                                IF ("Selling-in End Date" < "Selling-in Start Date") AND ("Selling-in End Date" > 0D) THEN
                                                                  ERROR(Text001,FIELDCAPTION("Selling-in End Date"),FIELDCAPTION("Selling-in Start Date"));
                                                              END;

                                                   CaptionML=[ENU=Selling-in End Date;
                                                              FRA=Date fin vente] }
    { 8727;   ;Visible Date        ;Date          ;CaptionML=[ENU=Visible Date;
                                                              FRA=Date visible] }
    { 50000;  ;Team                ;Code10        ;TableRelation=Team;
                                                   CaptionML=[ENU=Team;
                                                              FRA=Corbeille] }
    { 50001;  ;Services Header Count;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Service Header" WHERE (Campaign No.=FIELD(No.)));
                                                   CaptionML=[ENU=Services Header Count;
                                                              FRA=Nombre de lignes produits];
                                                   Editable=No }
    { 50002;  ;Intervention Count  ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Service Intervention Line" WHERE (Campaign No.=FIELD(No.)));
                                                   CaptionML=FRA=Nombre d'interventions;
                                                   Editable=No }
    { 50010;  ;Extension (km)      ;Integer       ;CaptionML=[ENU=Extension (km);
                                                              FRA=Extension (km)] }
    { 50011;  ;Active              ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                //IMH08
                                                                CampaignMgt.ActiveCamp("No.", Active);
                                                              END;

                                                   CaptionML=[ENU=Active;
                                                              FRA=Actif] }
    { 50012;  ;SMS Template Code   ;Code10        ;TableRelation="SMS Template".Code;
                                                   OnValidate=BEGIN
                                                                CreateSMSBody;   //IMH09 ISAT.ML
                                                              END;

                                                   CaptionML=[ENU=SMS Template code;
                                                              FRA=Code modŠle SMS] }
    { 50013;  ;Activate Send SMS   ;Boolean       ;OnValidate=BEGIN
                                                                //<<IMH12
                                                                IF "Activate Send SMS" THEN
                                                                  IF NOT "SMS Body".HASVALUE THEN
                                                                    ERROR(Text003);
                                                                //>>IMH12
                                                              END;

                                                   CaptionML=[ENU=Activate send SMS;
                                                              FRA="Activer l'envoi de SMS aux b‚n‚ficiaires "] }
    { 50014;  ;SMS Body            ;BLOB          ;CaptionML=[ENU=SMS Body to send to recipients;
                                                              FRA=Contenu SMS … envoyer aux b‚n‚ficiaires] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Salesperson Code                         }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Description,Starting Date,Ending Date,Status Code }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 must be before %2.;FRA=%1 doit ˆtre ant‚rieure … %2.';
      Text001@1001 : TextConst 'ENU=%1 must be after %2.;FRA=%1 doit ˆtre post‚rieur(e) … %2.';
      RMSetup@1002 : Record 5079;
      Campaign@1003 : Record 5071;
      RMCommentLine@1004 : Record 5061;
      CampaignEntry@1005 : Record 5072;
      NoSeriesMgt@1006 : Codeunit 396;
      DimMgt@1007 : Codeunit 408;
      CampaignMgmt@1008 : Codeunit 7030;
      SalesPrice@1009 : Integer;
      Text002@1100281000 : TextConst 'ENU=The cause is not authorized for this campaign;FRA=La cause n''est pas autoris‚e pour cet ‚v‚nement climatique';
      CampaignMgt@1000000000 : Codeunit 50206;
      ProviderSetup@1100281001 : Record 50011;
      Text003@1000000001 : TextConst 'ENU=The SMS body should not be empty.;FRA=Le message SMS doit ˆtre d‚fini pour activer lÉenvoi aux b‚n‚ficiaires.';

    PROCEDURE AssistEdit@2(OldCampaign@1000 : Record 5071) : Boolean;
    BEGIN
      WITH Campaign DO BEGIN
        Campaign := Rec;
        RMSetup.GET;
        RMSetup.TESTFIELD("Campaign Nos.");
        IF NoSeriesMgt.SelectSeries(RMSetup."Campaign Nos.",OldCampaign."No. Series","No. Series") THEN BEGIN
          RMSetup.GET;
          RMSetup.TESTFIELD("Campaign Nos.");
          NoSeriesMgt.SetSeries("No.");
          Rec := Campaign;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::Campaign,"No.",FieldNumber,ShortcutDimCode);
      MODIFY;
    END;

    PROCEDURE UpdateDates@1();
    VAR
      SalesPrice@1002 : Record 7002;
      SalesLineDisc@1001 : Record 7004;
      SalesPrice2@1003 : Record 7002;
      SalesLineDisc2@1004 : Record 7004;
    BEGIN
      MODIFY;
      SalesPrice.SETRANGE(SalesPrice."Sales Type",SalesPrice."Sales Type"::Campaign);
      SalesPrice.SETRANGE(SalesPrice."Sales Code","No.");
      SalesPrice.LOCKTABLE;
      IF SalesPrice.FIND('-') THEN
        REPEAT
          SalesPrice2 := SalesPrice;
          SalesPrice.DELETE;
          SalesPrice2.VALIDATE("Starting Date","Starting Date");
          SalesPrice2.INSERT(TRUE);
          SalesPrice2.VALIDATE("Ending Date","Ending Date");
          SalesPrice2.MODIFY;
        UNTIL SalesPrice.NEXT = 0;

      SalesLineDisc.SETRANGE(SalesLineDisc."Sales Type",SalesLineDisc."Sales Type"::Campaign);
      SalesLineDisc.SETRANGE(SalesLineDisc."Sales Code","No.");
      SalesLineDisc.LOCKTABLE;
      IF SalesLineDisc.FIND('-') THEN
        REPEAT
          SalesLineDisc2 := SalesLineDisc;
          SalesLineDisc.DELETE;
          SalesLineDisc2.VALIDATE("Starting Date","Starting Date");
          SalesLineDisc2.INSERT(TRUE);
          SalesLineDisc2.VALIDATE("Ending Date","Ending Date");
          SalesLineDisc2.MODIFY;
        UNTIL SalesLineDisc.NEXT = 0;
    END;

    PROCEDURE UpdateServiceHeaderRelatTables@1100281000(pServiceHeader@1100281000 : Record 5900);
    VAR
      lCampServCause@1100281001 : Record 50166;
      lCampSpe@1100281002 : Record 50035;
      lAbiCampGeoSetup@1100281003 : Record 50082;
      lCampaign@1100281004 : Record 5071;
      lInterDesc@1100281006 : Record 50070;
      lAbilityGeoMgt@1100281005 : Codeunit 50011;
      lInterventionDescription@1000000000 : Record 50070;
    BEGIN
      WITH pServiceHeader DO BEGIN
        IF "Campaign No." = '' THEN EXIT;
        IF "Service Cause" <> '' THEN BEGIN
        //IMH03 ISAT.NFO
          IF NOT lCampServCause.GET("Campaign No.","Service Cause") THEN BEGIN
            ERROR(Text002);
          END;
        END;
        lCampaign.GET("Campaign No.");
        IF lCampaign."Extension (km)" <> 0 THEN BEGIN
          IF lAbiCampGeoSetup.GET("Campaign No.",pServiceHeader."Ship-to Geo. Reference Code",
                                  lAbiCampGeoSetup."Setup Type"::"City (Distance)") THEN BEGIN
            IF lCampaign."Extension (km)" > lAbiCampGeoSetup."Distance (km)" THEN BEGIN
              lAbiCampGeoSetup."Distance (km)" :=lCampaign."Extension (km)";
              lAbiCampGeoSetup.MODIFY();
              lAbilityGeoMgt.GenerateAbilityCampGeo(lAbiCampGeoSetup);
              lAbiCampGeoSetup.MODIFY();
            END;
          END ELSE BEGIN
            lAbiCampGeoSetup."Campaign No." := "Campaign No.";
            lAbiCampGeoSetup."Start Reference Code" := "Ship-to Geo. Reference Code";
            lAbiCampGeoSetup."Setup Type" := lAbiCampGeoSetup."Setup Type"::"City (Distance)";
            lAbiCampGeoSetup."Distance (km)" :=lCampaign."Extension (km)";
            lAbiCampGeoSetup.INSERT();
            lAbilityGeoMgt.GenerateAbilityCampGeo(lAbiCampGeoSetup);
            lAbiCampGeoSetup.MODIFY();
          END;
        END;
        //<<IMH07
        lInterventionDescription.SETRANGE("Service Header No.", pServiceHeader."No.");
        IF lInterventionDescription.FINDSET THEN
          REPEAT
            IF (lInterventionDescription."Speciality Code" <> '') AND (pServiceHeader."Campaign No." <> '') THEN
              IF NOT lCampSpe.GET(pServiceHeader."Campaign No.",lInterventionDescription."Speciality Code") THEN BEGIN
                lCampSpe."Campaign No." := pServiceHeader."Campaign No.";
                lCampSpe."Specialization Code" := lInterventionDescription."Speciality Code";
                lCampSpe.INSERT;
              END;
          UNTIL lInterventionDescription.NEXT = 0;
        //>>IMH07
      END;
    END;

    PROCEDURE UpdateInterDescRelatTables@1100281001(VAR pInterDesc@1100281000 : Record 50070);
    VAR
      lServiceHeader@1100281001 : Record 5900;
      lCampSpe@1100281002 : Record 50035;
      lInterDesc@1100281006 : Record 50070;
    BEGIN
      //MESSAGE('%1 %2',lServiceHeader."Campaign No.",pInterDesc."Speciality Code");
      IF NOT lServiceHeader.GET(lServiceHeader."Document Type"::Invoice,pInterDesc."Service Header No.") THEN
        EXIT;
      IF lServiceHeader."Campaign No." = '' THEN
        EXIT;
      IF pInterDesc."Speciality Code" = '' THEN
        EXIT;
      //IMH05 isat.nfo
      //pInterDesc."Campaign No." := lServiceHeader."Campaign No."; //IMH06 d‚sactiv‚
      IF NOT lCampSpe.GET(lServiceHeader."Campaign No.",pInterDesc."Speciality Code") THEN BEGIN
        lCampSpe."Campaign No." := lServiceHeader."Campaign No.";
        lCampSpe."Specialization Code" := pInterDesc."Speciality Code";
        lCampSpe.INSERT;
      END;
    END;

    PROCEDURE LookupCampaign@1100281002() : Code[20];
    VAR
      lCampaign@1100281000 : Record 5071;
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT;
      lCampaign.RESET();
      lCampaign.SETFILTER("Starting Date",'%1|<%2',0D,WORKDATE);
      lCampaign.SETFILTER("Ending Date",'%1|>%2',0D,WORKDATE);
      IF (FORM.RUNMODAL(FORM::"Campaign List",lCampaign) = ACTION::LookupOK)  THEN
        EXIT(lCampaign."No.");
    END;

    PROCEDURE CreateSMSBody@1100281003();
    VAR
      lSMSTemplate@1100281000 : Record 50185;
      lSMSSendEntryTmp@1000000000 : TEMPORARY Record 50186;
      lSMSMgt@1100281003 : Codeunit 50225;
      lOutStream@1100281002 : OutStream;
      lInStream@1100281001 : InStream;
    BEGIN
      //<<IMH09 ISAT.ML
      IF lSMSTemplate.GET("SMS Template Code") THEN BEGIN
        lSMSTemplate.CALCFIELDS(lSMSTemplate."SMS Body");
        "SMS Body".CREATEOUTSTREAM(lOutStream);
        lSMSTemplate."SMS Body".CREATEINSTREAM(lInStream);
        lSMSMgt.LoadSMSBody(lOutStream,lInStream,lSMSSendEntryTmp);
        //<<IMH11 d‚sactiv‚
        //"Activate Send SMS" := FALSE;
        //IF Rec."SMS Body".HASVALUE THEN
        //  "Activate Send SMS" := TRUE;
        //>>IMH11 d‚sactiv‚
      END
      //>>IMH09 ISAT.ML
    END;

    BEGIN
    {
      /** @r IMH12 @d 18/10/12 @a ISAT.ZW @v IMH6.01.213 @s Projet SMS @h 4059
          @c Modification */
      /** @r IMH11 @d 18/10/12 @a ISAT.ZW @v IMH6.01.213 @s Projet SMS @h 4060
          @c Modification */
      /** @r IMH10 @d 03/10/12 @a ISAT.ZW @v IMH6.01.214 @s NEP00005
          @c Ajout filtre non annul‚ sur les LP */
      /** @r IMH09 @d 01/10/12 @a ISAT.ML @v IMH6.01.213 @s Projet SMS
          @c ajout champ Code modŠle SMS-Activer l'envoi SMS aux b‚n‚ficiaires-Contenu SMS … envoyer aux b‚n‚ficiaires */
      /** @r IMH08 @d 16/05/12 @a ISAT.ZW @v IMH6.01.181 @s Ev‚nement climatique @h 3462 @c Archivage */
      /** @r IMH07 @d 16/05/12 @a ISAT.ZW @v IMH6.01.181 @s Evenement Climatique @h 3428 @c Correction */
      /** @r IMH06 @d 14/05/12 @a ISAT.ZW @v IMH6.01.181 @s Evenement Climatique @h 3364 @c Correction */
      /** @r IMH05 @d 02/02/12 @a ISAT.NFO @v IMH6.01.181 @s Evenement Climatique @c Mise … jour du nøEVC */
      /** @r IMH04 @d 19/04/12 @a ISAT.NFO @v IMH6.01.181 @s Evenement Climatique @c Contr“le de la designation */
      /** @r IMH03 @d 18/04/12 @a ISAT.NFO @v IMH6.01.181 @s Evenement Climatique @c Contr“le de la cause */
      /** @r IMH01 @d 08/12/10 @a ISAT.ZW @v IMH6.01.181 @s Gestion des corbeilles
          @c Caption ‚quipe --> corbeille */
      /** @r IMH01 @d 08/12/10 @a ISAT.ZW @v IMH6.01.181 @s Evenement Climatique @c Ajout du champ Corbeille */
    }
    END.
  }
}