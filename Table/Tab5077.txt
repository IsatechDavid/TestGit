OBJECT Table 5077 Segment Line
{
  OBJECT-PROPERTIES
  {
    Date=17/10/13;
    Time=16:41:18;
    Modified=Yes;
    Version List=NAVW16.00.01,ISA6.00,NEPIMH4,MATMUT01;
  }
  PROPERTIES
  {
    Permissions=TableData 5065=rimd;
    OnDelete=VAR
               SegLine@1001 : Record 5077;
               SegmentCriteriaLine@1002 : Record 5097;
               SegmentHistory@1003 : Record 5078;
               SegInteractLanguage@1005 : Record 5104;
             BEGIN
               IF "Segment No." <> '' THEN BEGIN //IMH19.ST
                 CampaignTargetGrMgt.DeleteSegfromTargetGr(Rec);

                 SegInteractLanguage.RESET;
                 SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
                 SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
                 IF NOT SegInteractLanguage.ISEMPTY THEN //IMH19.ST
                   SegInteractLanguage.DELETEALL(TRUE);
                 GET("Segment No.","Line No.");

                 SegLine.SETRANGE("Segment No.","Segment No.");
                 SegLine.SETFILTER("Line No.",'<>%1',"Line No.");
                 IF SegLine.ISEMPTY THEN BEGIN
                   IF SegHeader.GET("Segment No.") THEN
                     SegHeader.CALCFIELDS("No. of Criteria Actions");
                   IF SegHeader."No. of Criteria Actions" > 1 THEN
                     IF CONFIRM(Text006,TRUE) THEN BEGIN
                       SegmentCriteriaLine.SETRANGE("Segment No.","Segment No.");
                       SegmentCriteriaLine.DELETEALL;
                       SegmentHistory.SETRANGE("Segment No.","Segment No.");
                       SegmentHistory.DELETEALL;
                     END;
                 END;
                 IF "Contact No." <> '' THEN BEGIN
                   SegLine.SETRANGE("Contact No.","Contact No.");
                   IF SegLine.ISEMPTY THEN BEGIN
                     Todo.SETRANGE("Segment No.","Segment No.");
                     Todo.SETRANGE("Contact No.","Contact No.");
                     Todo.MODIFYALL("Segment No.",'');
                   END;
                 END;
               END; //IMH19.ST
             END;

    CaptionML=[ENU=Segment Line;
               FRA=Ligne segment];
  }
  FIELDS
  {
    { 1   ;   ;Segment No.         ;Code20        ;TableRelation="Segment Header";
                                                   CaptionML=[ENU=Segment No.;
                                                              FRA=Nø segment] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              FRA=Nø ligne] }
    { 3   ;   ;Contact No.         ;Code20        ;TableRelation=Contact;
                                                   OnValidate=VAR
                                                                SegInteractLanguage@1000 : Record 5104;
                                                                Attachment@1001 : Record 5062;
                                                                InteractTmpl@1002 : Record 5064;
                                                              BEGIN
                                                                InitLine;

                                                                IF Cont.GET("Contact No.") THEN BEGIN
                                                                  "Language Code" := FindLanguage("Interaction Template Code",Cont."Language Code");
                                                                  "Contact Company No." := Cont."Company No.";
                                                                  "Contact Alt. Address Code" := Cont.ActiveAltAddress(Date);
                                                                //<<IMH06.ST
                                                                  IF "Wizard Step" <> "Wizard Step"::" " THEN
                                                                    "Wizard Contact Name" := GetContactName;
                                                                  "Salesperson Code" := GetSalesperson;
                                                                  IF Cont."Service Contact" = Cont."Service Contact"::Provider THEN
                                                                    "Provider No." := Cont."Company No.";
                                                                //>>IMH06.ST
                                                                  IF SegHeader.GET("Segment No.") THEN BEGIN
                                                                //<<IMH06.ST
                                                                //    IF SegHeader."Salesperson Code" = '' THEN
                                                                //      "Salesperson Code" := Cont."Salesperson Code"
                                                                //    ELSE
                                                                //      "Salesperson Code" := SegHeader."Salesperson Code";
                                                                //>>IMH06.ST
                                                                    IF NOT "Force Correspondence Type" THEN BEGIN //IMH19.ST
                                                                    IF SegHeader."Ignore Contact Corres. Type" AND
                                                                      (SegHeader."Correspondence Type (Default)" <> SegHeader."Correspondence Type (Default)"::" ")
                                                                    THEN
                                                                      VALIDATE("Correspondence Type", SegHeader."Correspondence Type (Default)")
                                                                    ELSE IF InteractTmpl.GET(SegHeader."Interaction Template Code") AND
                                                                      (InteractTmpl."Ignore Contact Corres. Type" OR
                                                                      ((InteractTmpl."Ignore Contact Corres. Type" = FALSE) AND
                                                                      (Cont."Correspondence Type"  = Cont."Correspondence Type"::" ")))
                                                                    THEN
                                                                      VALIDATE("Correspondence Type", InteractTmpl."Correspondence Type (Default)")
                                                                    ELSE
                                                                      VALIDATE("Correspondence Type", Cont."Correspondence Type");
                                                                    END; //IMH19.ST
                                                                  END
                                                                //   ELSE
                                                                //    IF NOT Salesperson.GET(GETFILTER("Salesperson Code")) THEN
                                                                //      "Salesperson Code" := Cont."Salesperson Code";
                                                                END ELSE BEGIN
                                                                  "Contact Company No." := '';
                                                                  "Contact Alt. Address Code" := '';
                                                                //<<IMH06.ST
                                                                  "Salesperson Code" := GetSalesperson;
                                                                //  IF SegHeader.GET("Segment No.") THEN
                                                                //    "Salesperson Code" := SegHeader."Salesperson Code"
                                                                //  ELSE BEGIN
                                                                //    "Salesperson Code" := '';
                                                                //    "Language Code" := '';
                                                                //  END;
                                                                //>>IMH06.ST
                                                                END;
                                                                CALCFIELDS("Contact Name","Contact Company Name");

                                                                IF "Segment No." <> '' THEN BEGIN
                                                                  IF UniqueAttachmentExists THEN BEGIN
                                                                    MODIFY;
                                                                    SegInteractLanguage.RESET;
                                                                    SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
                                                                    SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
                                                                    SegInteractLanguage.DELETEALL(TRUE);
                                                                    GET("Segment No.","Line No.");
                                                                  END;

                                                                  "Language Code" := FindLanguage("Interaction Template Code","Language Code");
                                                                  IF SegInteractLanguage.GET("Segment No.",0,"Language Code") THEN BEGIN
                                                                    IF Attachment.GET(SegInteractLanguage."Attachment No.") THEN
                                                                      "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                    Subject := SegInteractLanguage.Subject;
                                                                  END;
                                                                END;

                                                                IF (xRec."Contact No." <> "Contact No.") THEN
                                                                  SetCampaignTargetGroup;
                                                              END;

                                                   CaptionML=[ENU=Contact No.;
                                                              FRA=Nø contact] }
    { 4   ;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   OnValidate=BEGIN
                                                                IF (xRec."Campaign No." <> "Campaign No.") THEN
                                                                  SetCampaignTargetGroup;
                                                              END;

                                                   CaptionML=[ENU=Campaign No.;
                                                              FRA=Nø vnement exceptionnel] }
    { 5   ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Salesperson Code;
                                                              FRA=Code vendeur] }
    { 6   ;   ;Correspondence Type ;Option        ;OnValidate=VAR
                                                                Attachment@1000 : Record 5062;
                                                                ErrorText@1001 : Text[80];
                                                              BEGIN
                                                                IF NOT Attachment.GET("Attachment No.") THEN
                                                                  EXIT;

                                                                ErrorText := Attachment.CheckCorrespondenceType("Correspondence Type");
                                                                IF ErrorText <> '' THEN
                                                                  ERROR(
                                                                    Text000+ErrorText,
                                                                    FIELDCAPTION("Correspondence Type"),"Correspondence Type",TABLECAPTION,"Line No.");
                                                              END;

                                                   CaptionML=[ENU=Correspondence Type;
                                                              FRA=Moyen de communication privilgi];
                                                   OptionCaptionML=[ENU=" ,Hard Copy,E-Mail,Fax";
                                                                    FRA=" ,Courrier,E-Mail,Fax"];
                                                   OptionString=[ ,Hard Copy,E-Mail,Fax] }
    { 7   ;   ;Interaction Template Code;Code10   ;TableRelation=IF (Contact No.=FILTER(<>''),
                                                                     Service No.=FILTER(=''),
                                                                     Service Header No.=FILTER(=''),
                                                                     Intervention Line No.=CONST(0),
                                                                     Document Type=FILTER(' '|VisitProv)) "Interaction Template".Code WHERE (Show To Contact=CONST(Yes),
                                                                                                                                             Showing Filter=FIELD(Showing Filter))
                                                                                                                                             ELSE IF (Service No.=FILTER(<>''),
                                                                                                                                                      Service Header No.=FILTER(=''),
                                                                                                                                                      Intervention Line No.=CONST(0),
                                                                                                                                                      Document Type=CONST(" ")) "Interaction Template".Code WHERE (Show To Service=CONST(Yes),
                                                                                                                                                                                                                   Showing Filter=FIELD(Showing Filter))
                                                                                                                                                                                                                   ELSE IF (Service Header No.=FILTER(<>''),
                                                                                                                                                                                                                            Intervention Line No.=CONST(0),
                                                                                                                                                                                                                            Document Type=CONST(" ")) "Interaction Template".Code WHERE (Show To Service Header=CONST(Yes),
                                                                                                                                                                                                                                                                                         Showing Filter=FIELD(Showing Filter))
                                                                                                                                                                                                                                                                                         ELSE IF (Service Header No.=FILTER(<>''),
                                                                                                                                                                                                                                                                                                  Intervention Line No.=FILTER(<>0),
                                                                                                                                                                                                                                                                                                  Document Type=CONST(" ")) "Interaction Template".Code WHERE (Show To Intervention=CONST(Yes),
                                                                                                                                                                                                                                                                                                                                                               Showing Filter=FIELD(Showing Filter))
                                                                                                                                                                                                                                                                                                                                                               ELSE IF (Document Type=FILTER(Purch.Qte.|Purch. Blnkt. Ord.|Purch. Ord.|Purch. Inv.|Purch. Rcpt.|Purch. Cr. Memo|Purch. Return Shipment|Purch. Return Ord. Cnfrmn.|PurchInv38|PurchCrMemo38),
                                                                                                                                                                                                                                                                                                                                                                        Document No.=FILTER(<>'')) "Interaction Template".Code WHERE (Show To Puchase Header=CONST(Yes),
                                                                                                                                                                                                                                                                                                                                                                                                                                      Showing Filter=FIELD(Showing Filter));
                                                   OnValidate=VAR
                                                                SegInteractLanguage@1001 : Record 5104;
                                                                Attachment@1000 : Record 5062;
                                                                InteractTemplLanguage@1002 : Record 5103;
                                                                InteractTmpl@1003 : Record 5064;
                                                                lContactNo@1100281000 : Code[20];
                                                              BEGIN
                                                                //<<IMH06.ST
                                                                IF ("Interaction Template Code" <> '') THEN
                                                                  IF GetServiceContact(lContactNo) THEN
                                                                    VALIDATE("Contact No.", lContactNo);

                                                                //>>IMH06.ST
                                                                TESTFIELD("Contact No.");
                                                                Cont.GET("Contact No.");
                                                                "Attachment No." := 0;
                                                                "Language Code" := '';
                                                                Subject := '';
                                                                IF NOT "Force Correspondence Type" THEN //IMH19.ST
                                                                  "Correspondence Type" := "Correspondence Type"::" ";
                                                                "Interaction Group Code" := '';
                                                                "Cost (LCY)" := 0;
                                                                "Duration (Min.)" := 0;
                                                                "Information Flow" := "Information Flow"::" ";
                                                                "Initiated By" := "Initiated By"::" ";
                                                                "Campaign Target" := FALSE;
                                                                "Campaign Response" := FALSE;
                                                                IF NOT "Force Correspondence Type" THEN //IMH19.ST
                                                                  "Correspondence Type" := "Correspondence Type"::" ";
                                                                IF (GETFILTER("Campaign No.") = '') AND (InteractTmpl."Campaign No." <> '') THEN
                                                                  "Campaign No." := '';
                                                                IF NOT SkipModify THEN //IMH03
                                                                  MODIFY;

                                                                IF ("Segment No." <> '') THEN BEGIN
                                                                  SegInteractLanguage.RESET;
                                                                  SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
                                                                  SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
                                                                  SegInteractLanguage.DELETEALL(TRUE);
                                                                  GET("Segment No.","Line No.");
                                                                  IF ("Interaction Template Code" <> '') THEN BEGIN
                                                                    SegHeader.GET("Segment No.");
                                                                    IF ("Interaction Template Code" <> SegHeader."Interaction Template Code") THEN BEGIN
                                                                      CreateSegInteractLanguages("Interaction Template Code");
                                                                      "Language Code" := FindLanguage("Interaction Template Code",Cont."Language Code");
                                                                      IF SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN
                                                                        "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                    END ELSE BEGIN
                                                                      "Language Code" := FindLanguage("Interaction Template Code",Cont."Language Code");
                                                                      IF SegInteractLanguage.GET("Segment No.",0,"Language Code") THEN
                                                                        "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                    END;
                                                                  END;
                                                                END ELSE BEGIN
                                                                  "Language Code" := FindLanguage("Interaction Template Code",Cont."Language Code");
                                                                  IF InteractTemplLanguage.GET("Interaction Template Code","Language Code") THEN
                                                                    "Attachment No." := InteractTemplLanguage."Attachment No.";
                                                                END;

                                                                IF InteractTmpl.GET("Interaction Template Code") THEN BEGIN
                                                                  "Interaction Group Code" := InteractTmpl."Interaction Group Code";
                                                                  "Cost (LCY)" := InteractTmpl."Unit Cost (LCY)";
                                                                  "Duration (Min.)" := InteractTmpl."Unit Duration (Min.)";
                                                                  "Information Flow" := InteractTmpl."Information Flow";
                                                                  "Initiated By" := InteractTmpl."Initiated By";
                                                                  "Campaign Target" := InteractTmpl."Campaign Target";
                                                                  "Campaign Response" := InteractTmpl."Campaign Response";
                                                                //<<IMH04.ST
                                                                  IF InteractTmpl."Default Interaction Descr." <> '' THEN
                                                                    Description := InteractTmpl."Default Interaction Descr.";
                                                                //>>IMH04.ST
                                                                  IF NOT "Force Correspondence Type" THEN BEGIN //IMH19.ST
                                                                  CASE TRUE OF
                                                                    SegHeader."Ignore Contact Corres. Type" AND
                                                                    (SegHeader."Correspondence Type (Default)" <> SegHeader."Correspondence Type (Default)"::" ") :
                                                                      VALIDATE("Correspondence Type", SegHeader."Correspondence Type (Default)");

                                                                    InteractTmpl."Ignore Contact Corres. Type" OR
                                                                    ((InteractTmpl."Ignore Contact Corres. Type" = FALSE) AND
                                                                     (Cont."Correspondence Type" = Cont."Correspondence Type"::" ") AND
                                                                     (InteractTmpl."Correspondence Type (Default)" <> InteractTmpl."Correspondence Type (Default)"::" ")) :
                                                                      VALIDATE("Correspondence Type", InteractTmpl."Correspondence Type (Default)");

                                                                    ELSE
                                                                      IF Cont."Correspondence Type" <> Cont."Correspondence Type"::" " THEN
                                                                        VALIDATE("Correspondence Type", Cont."Correspondence Type")
                                                                      ELSE
                                                                        VALIDATE("Correspondence Type", xRec."Correspondence Type");
                                                                  END;
                                                                  END; //IMH19.ST
                                                                  IF SegHeader."Campaign No." <> '' THEN
                                                                    "Campaign No." := SegHeader."Campaign No."
                                                                  ELSE
                                                                    IF (GETFILTER("Campaign No.") = '') AND (InteractTmpl."Campaign No." <> '') THEN
                                                                      "Campaign No." := InteractTmpl."Campaign No.";
                                                                END;
                                                                IF Campaign.GET("Campaign No.") THEN
                                                                  "Campaign Description" := Campaign.Description;
                                                                IF NOT SkipModify THEN //IMH03
                                                                  MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Interaction Template Code;
                                                              FRA=Code modle interaction] }
    { 8   ;   ;Cost (LCY)          ;Decimal       ;CaptionML=[ENU=Cost (LCY);
                                                              FRA=Cot DS];
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 9   ;   ;Duration (Min.)     ;Decimal       ;CaptionML=[ENU=Duration (Min.);
                                                              FRA=Dure (min.)];
                                                   DecimalPlaces=0:0;
                                                   MinValue=0 }
    { 10  ;   ;Attachment No.      ;Integer       ;TableRelation=Attachment;
                                                   CaptionML=[ENU=Attachment No.;
                                                              FRA=Nø document joint] }
    { 11  ;   ;Campaign Response   ;Boolean       ;CaptionML=[ENU=Campaign Response;
                                                              FRA=Rponse campagne] }
    { 12  ;   ;Contact Name        ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Contact No.),
                                                                                          Type=CONST(Person)));
                                                   CaptionML=[ENU=Contact Name;
                                                              FRA=Nom contact];
                                                   Editable=No }
    { 13  ;   ;Information Flow    ;Option        ;CaptionML=[ENU=Information Flow;
                                                              FRA=Flux d'informations];
                                                   OptionCaptionML=[ENU=" ,Outbound,Inbound";
                                                                    FRA=" ,Sortant,Entrant"];
                                                   OptionString=[ ,Outbound,Inbound];
                                                   BlankZero=Yes }
    { 14  ;   ;Initiated By        ;Option        ;CaptionML=[ENU=Initiated By;
                                                              FRA=Initi par];
                                                   OptionCaptionML=[ENU=" ,Us,Them";
                                                                    FRA=" ,Notre socit,Le contact"];
                                                   OptionString=[ ,Us,Them];
                                                   BlankZero=Yes }
    { 15  ;   ;Contact Alt. Address Code;Code10   ;TableRelation="Contact Alt. Address".Code WHERE (Contact No.=FIELD(Contact No.));
                                                   CaptionML=[ENU=Contact Alt. Address Code;
                                                              FRA=Code adresse contact secondaire] }
    { 16  ;   ;Evaluation          ;Option        ;CaptionML=[ENU=Evaluation;
                                                              FRA=Evaluation];
                                                   OptionCaptionML=[ENU=" ,Very Positive,Positive,Neutral,Negative,Very Negative";
                                                                    FRA=" ,Trs positive,Positive,Neutre,Ngative,Trs Ngative"];
                                                   OptionString=[ ,Very Positive,Positive,Neutral,Negative,Very Negative] }
    { 17  ;   ;Campaign Target     ;Boolean       ;OnValidate=BEGIN
                                                                IF (xRec."Campaign Target" <> "Campaign Target") THEN
                                                                  SetCampaignTargetGroup;
                                                              END;

                                                   CaptionML=[ENU=Campaign Target;
                                                              FRA=Cible campagne] }
    { 18  ;   ;Contact Company Name;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Contact Company No.),
                                                                                          Type=CONST(Company)));
                                                   CaptionML=[ENU=Contact Company Name;
                                                              FRA=Nom socit contact];
                                                   Editable=No }
    { 19  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   OnValidate=VAR
                                                                SegInteractLanguage@1002 : Record 5104;
                                                                Language@1000 : Record 8;
                                                                InteractTemplLanguage@1001 : Record 5103;
                                                              BEGIN
                                                                TESTFIELD("Interaction Template Code");

                                                                IF "Language Code" = xRec."Language Code" THEN
                                                                  EXIT;

                                                                IF SegHeader.GET("Segment No.") THEN BEGIN
                                                                  IF NOT UniqueAttachmentExists THEN BEGIN
                                                                    IF SegInteractLanguage.GET("Segment No.",0,"Language Code") THEN BEGIN
                                                                      "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                      Subject := SegInteractLanguage.Subject;
                                                                    END ELSE BEGIN
                                                                      "Attachment No." := 0;
                                                                      Subject := '';
                                                                    END;
                                                                  END ELSE BEGIN
                                                                    IF SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN BEGIN
                                                                      "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                      Subject := SegInteractLanguage.Subject;
                                                                    END ELSE BEGIN
                                                                      "Attachment No." := 0;
                                                                      Subject := '';
                                                                    END;
                                                                  END;
                                                                  MODIFY;
                                                                END ELSE BEGIN
                                                                  InteractTemplLanguage.GET("Interaction Template Code","Language Code");
                                                                  SetInteractionAttachment;
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              SegInteractLanguage@1004 : Record 5104;
                                                              InteractTemplLanguage@1002 : Record 5103;
                                                            BEGIN
                                                              TESTFIELD("Interaction Template Code");

                                                              IF SegHeader.GET("Segment No.") THEN BEGIN
                                                                SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
                                                                IF UniqueAttachmentExists OR
                                                                   ("Interaction Template Code" <> SegHeader."Interaction Template Code") THEN
                                                                  SegInteractLanguage.SETRANGE("Segment Line No.","Line No.")
                                                                ELSE
                                                                  SegInteractLanguage.SETRANGE("Segment Line No.",0);

                                                                IF FORM.RUNMODAL(0,SegInteractLanguage) = ACTION::LookupOK THEN BEGIN
                                                                  GET("Segment No.","Line No.");
                                                                  "Language Code" := SegInteractLanguage."Language Code";
                                                                  "Attachment No." := SegInteractLanguage."Attachment No.";
                                                                  Subject := SegInteractLanguage.Subject;
                                                                  MODIFY;
                                                                END ELSE
                                                                  GET("Segment No.","Line No.");
                                                              END ELSE BEGIN  //Create Interaction
                                                                InteractTemplLanguage.SETRANGE("Interaction Template Code","Interaction Template Code");
                                                                IF FORM.RUNMODAL(0,InteractTemplLanguage) = ACTION::LookupOK THEN BEGIN
                                                                  "Language Code" := InteractTemplLanguage."Language Code";
                                                                  MODIFY;
                                                                END;
                                                                SetInteractionAttachment;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Language Code;
                                                              FRA=Code langue] }
    { 22  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              FRA=Dsignation interaction] }
    { 23  ;   ;Date                ;Date          ;OnValidate=BEGIN
                                                                IF Cont.GET("Contact No.") THEN
                                                                  IF "Contact Alt. Address Code" = Cont.ActiveAltAddress(xRec.Date) THEN
                                                                    "Contact Alt. Address Code" := Cont.ActiveAltAddress(Date);
                                                              END;

                                                   CaptionML=[ENU=Date;
                                                              FRA=Date] }
    { 24  ;   ;Time of Interaction ;Time          ;CaptionML=[ENU=Time of Interaction;
                                                              FRA=Heure interaction] }
    { 25  ;   ;Attempt Failed      ;Boolean       ;CaptionML=[ENU=Attempt Failed;
                                                              FRA=Echec de la tentative] }
    { 26  ;   ;To-do No.           ;Code20        ;TableRelation=To-do;
                                                   CaptionML=[ENU=To-do No.;
                                                              FRA=Nø action] }
    { 27  ;   ;Contact Company No. ;Code20        ;TableRelation=Contact WHERE (Type=CONST(Company));
                                                   CaptionML=[ENU=Contact Company No.;
                                                              FRA=Nø socit contact] }
    { 28  ;   ;Campaign Entry No.  ;Integer       ;TableRelation="Campaign Entry";
                                                   CaptionML=[ENU=Campaign Entry No.;
                                                              FRA=Nø ligne campagne];
                                                   Editable=No }
    { 29  ;   ;Interaction Group Code;Code10      ;TableRelation="Interaction Group";
                                                   CaptionML=[ENU=Interaction Group Code;
                                                              FRA=Code groupe interactions] }
    { 31  ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              FRA=Type document];
                                                   OptionCaptionML=[ENU=" ,Sales Qte.,Sales Blnkt. Ord,Sales Ord. Cnfrmn.,Sales Inv.,Sales Shpt. Note,Sales Cr. Memo,Sales Stmnt.,Sales Rmdr.,Serv. Ord. Create,Serv. Ord. Post,Purch.Qte.,Purch. Blnkt. Ord.,Purch. Ord.,Purch. Inv.,Purch. Rcpt.,Purch. Cr. Memo,Cover Sheet,Sales Return Order,Sales Finance Charge Memo,Sales Return Receipt,Purch. Return Shipment,Purch. Return Ord. Cnfrmn.,Service Contract,Service Contract Quote,Service Quote,IssuedDocReminder,,,,Purch.pre-Inv,Purch.pre-CreditMemo,Visit Provider";
                                                                    FRA=" ,Devis,Cde ouv. vente,Conf. cde vente,Fact. vente,BL vente,Avoir vente,Rapport vente,Relance vente,Cde serv.,Cde serv. enreg.,Demande prix,Cde ouv. achat,Cde achat,Fact. achat,Rcept. achat,Avoir achat,Bordereau d'envoi,Retour achat,Fact. intrts vente,Rcept. retour vente,Expd. retour achat,Conf. retour achat,Contrat serv.,Devis contrat serv.,Devis serv.,Doc. Relance mise,,,,Facture achat prov.,Avoir achat prov.,Visite presataire"];
                                                   OptionString=[ ,Sales Qte.,Sales Blnkt. Ord,Sales Ord. Cnfrmn.,Sales Inv.,Sales Shpt. Note,Sales Cr. Memo,Sales Stmnt.,Sales Rmdr.,Serv. Ord. Create,Serv. Ord. Post,Purch.Qte.,Purch. Blnkt. Ord.,Purch. Ord.,Purch. Inv.,Purch. Rcpt.,Purch. Cr. Memo,Cover Sheet,Sales Return Order,Sales Finance Charge Memo,Sales Return Receipt,Purch. Return Shipment,Purch. Return Ord. Cnfrmn.,Service Contract,Service Contract Quote,Service Quote,IssuedDocReminder,,,,PurchInv38,PurchCrMemo38,VisitProv] }
    { 32  ;   ;Document No.        ;Code20        ;TestTableRelation=No;
                                                   CaptionML=[ENU=Document No.;
                                                              FRA=Nø document] }
    { 33  ;   ;Send Word Doc. As Attmt.;Boolean   ;CaptionML=[ENU=Send Word Doc. As Attmt.;
                                                              FRA=Envoyer doc Word attachs] }
    { 34  ;   ;Contact Via         ;Text80        ;CaptionML=[ENU=Contact Via;
                                                              FRA=Appel au Nø] }
    { 35  ;   ;Version No.         ;Integer       ;CaptionML=[ENU=Version No.;
                                                              FRA=Nø version] }
    { 36  ;   ;Doc. No. Occurrence ;Integer       ;CaptionML=[ENU=Doc. No. Occurrence;
                                                              FRA=Occurrence nø doc.] }
    { 37  ;   ;Subject             ;Text50        ;CaptionML=[ENU=Subject;
                                                              FRA=Sujet] }
    { 44  ;   ;Opportunity No.     ;Code20        ;TableRelation=Opportunity;
                                                   CaptionML=[ENU=Opportunity No.;
                                                              FRA=Nø opportunit] }
    { 45  ;   ;Mail GUID           ;GUID          ;CaptionML=[ENU=Mail GUID;
                                                              FRA=GUID de messagerie] }
    { 9501;   ;Wizard Step         ;Option        ;CaptionML=[ENU=Wizard Step;
                                                              FRA=tape Assistant];
                                                   OptionCaptionML=[ENU=" ,1,2,3,4,5,6";
                                                                    FRA=" ,1,2,3,4,5,6"];
                                                   OptionString=[ ,1,2,3,4,5,6];
                                                   Editable=No }
    { 9502;   ;Wizard Contact Name ;Text50        ;CaptionML=[ENU=Wizard Contact Name;
                                                              FRA=Nom contact Assistant] }
    { 9503;   ;Opportunity Description;Text50     ;CaptionML=[ENU=Opportunity Description;
                                                              FRA=Dsignation opportunit] }
    { 9504;   ;Campaign Description;Text50        ;CaptionML=[ENU=Campaign Description;
                                                              FRA=Dsignation vnement exceptionnel] }
    { 9505;   ;Interaction Successful;Boolean     ;CaptionML=[ENU=Interaction Successful;
                                                              FRA=Interaction russie] }
    { 9506;   ;Dial Contact        ;Boolean       ;CaptionML=[ENU=Dial Contact;
                                                              FRA=Appeler le contact] }
    { 9507;   ;Mail Contact        ;Boolean       ;CaptionML=[ENU=Mail Contact;
                                                              FRA=Envoyer un courrier au contact] }
    { 50000;  ;Interaction Finished;Boolean       ;CaptionML=[ENU=Interaction Finished;
                                                              FRA=Interaction termine] }
    { 50001;  ;Force Correspondence Type;Boolean  ;CaptionML=[ENU=Force Correspondence Type;
                                                              FRA=Forcer type de correspondance] }
    { 50002;  ;Process Code        ;Code10        ;CaptionML=[ENU=Process Code;
                                                              FRA=Code processus] }
    { 50030;  ;Service No.         ;Code20        ;TableRelation=Service."Service No.";
                                                   OnValidate=VAR
                                                                lService@1100281000 : Record 50066;
                                                              BEGIN
                                                                lService.GET("Service No.");
                                                                IF "Contact No." = '' THEN
                                                                  VALIDATE("Contact No.", lService."Contact No.");
                                                                "Corporate No." := lService."Corporate No.";//IMH03
                                                                "Campaign No." := lService."Campaign No.";
                                                              END;

                                                   CaptionML=[ENU=Service No.;
                                                              FRA=Nø service] }
    { 50032;  ;Service Header No.  ;Code20        ;TableRelation="Service Header".No. WHERE (Service No.=FIELD(Service No.),
                                                                                             Document Type=CONST(Invoice));
                                                   OnValidate=VAR
                                                                lServiceHeader@1100281000 : Record 5900;
                                                              BEGIN
                                                                IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, "Service Header No.") THEN
                                                                  VALIDATE("Service No.", lServiceHeader."Service No.");
                                                              END;

                                                   CaptionML=[ENU=Service Header No.;
                                                              FRA=Nø ligne produit] }
    { 50033;  ;Intervention Line No.;Integer      ;TableRelation="Service Intervention Line"."Line No." WHERE (Service Header No.=FIELD(Service Header No.));
                                                   OnValidate=VAR
                                                                lInterventionLine@1100281000 : Record 50075;
                                                              BEGIN
                                                                IF lInterventionLine.GET("Service Header No.", "Intervention Line No.") THEN
                                                                  "Intervention No." := lInterventionLine."Intervention No.";
                                                              END;

                                                   CaptionML=[ENU=Intervention Line No.;
                                                              FRA=Nø ligne intervention];
                                                   BlankZero=Yes }
    { 50034;  ;Intervention No.    ;Integer       ;OnValidate=VAR
                                                                lInterventionLine@1100281000 : Record 50075;
                                                              BEGIN
                                                                TESTFIELD("Service Header No.");
                                                                lInterventionLine.SETCURRENTKEY("Service Header No.","Intervention No.");
                                                                lInterventionLine.SETRANGE("Service Header No.", "Service Header No.");
                                                                lInterventionLine.SETRANGE("Intervention No.", "Intervention No.");
                                                                lInterventionLine.FINDFIRST;
                                                                "Intervention Line No." := lInterventionLine."Line No.";
                                                              END;

                                                   OnLookup=VAR
                                                              lInterventionLine@1100281000 : Record 50075;
                                                            BEGIN
                                                              lInterventionLine.SETCURRENTKEY("Service Header No.","Intervention No.");
                                                              lInterventionLine.SETRANGE("Service Header No.", "Service Header No.");
                                                              IF lInterventionLine.GET("Service Header No.", "Intervention Line No.") THEN;
                                                              IF FORM.RUNMODAL(0, lInterventionLine) = ACTION::LookupOK THEN BEGIN
                                                                VALIDATE("Service Header No.", lInterventionLine."Service Header No.");
                                                                VALIDATE("Intervention Line No.", lInterventionLine."Line No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Intervention No.;
                                                              FRA=Nø intervention];
                                                   BlankZero=Yes }
    { 50035;  ;Provider No.        ;Code20        ;TableRelation=Provider;
                                                   CaptionML=[ENU=Provider No.;
                                                              FRA=Nø prestataire] }
    { 50036;  ;Intervention Quote Line No.;Integer;TableRelation="Service Intervention Quote"."Line No." WHERE (Service Header No.=FIELD(Service Header No.),
                                                                                                                Intervention Line No.=FIELD(Intervention Line No.));
                                                   OnValidate=VAR
                                                                lInterventionLine@1100281000 : Record 50075;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Intervention Line No.;
                                                              FRA=Nø ligne devis intervention];
                                                   BlankZero=Yes }
    { 50040;  ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              FRA=Date document] }
    { 50050;  ;Vendor No.          ;Code20        ;TableRelation=Vendor.No.;
                                                   CaptionML=[ENU=Vendor No.;
                                                              FRA=Nø fournisseur] }
    { 50060;  ;Visit No.           ;Code20        ;TableRelation="Network Visit".No.;
                                                   CaptionML=[ENU=Visit No.;
                                                              FRA=Nø visite] }
    { 50069;  ;Showing Filter      ;Code4         ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Showing Filter;
                                                              FRA=Filtre affichage] }
    { 50100;  ;Corporate No.       ;Code20        ;TableRelation=Customer.No. WHERE (Service Contact=CONST(Corporate Customer),
                                                                                     Service Corporate=CONST(Yes));
                                                   CaptionML=[ENU=Corporate No.;
                                                              FRA=Nø grand compte] }
    { 50110;  ;Created Interac. Log Entry No.;Integer;
                                                   CaptionML=[ENU=Created Interac. Log Entry No.;
                                                              FRA=Nø squence criture journal interaction cre] }
    { 50111;  ;Allocated Interact. Log Entry;Boolean;
                                                   CaptionML=[ENU=Allocated Interaction Log Entry;
                                                              FRA=Ecriture interaction alloue] }
  }
  KEYS
  {
    {    ;Segment No.,Line No.                    ;SumIndexFields=Cost (LCY),Duration (Min.);
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Segment No.,Campaign No.,Date            }
    {    ;Contact No.,Segment No.                  }
    {    ;Campaign No.                             }
    {    ;Campaign No.,Contact Company No.,Campaign Target }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU="%1 = %2 can not be specified for %3 %4.\";FRA="%1 = %2 ne peut pas tre dfini dans une %3 %4.\"';
      Text001@1001 : TextConst 'ENU=Inherited;FRA=Hrit';
      Text002@1002 : TextConst 'ENU=Unique;FRA=Unique';
      SegHeader@1006 : Record 5076;
      Cont@1007 : Record 5050;
      Salesperson@1008 : Record 13;
      Campaign@1013 : Record 5071;
      InteractTmpl@1003 : Record 5064;
      Attachment@1005 : Record 5062;
      AttachmentTemp@1004 : TEMPORARY Record 5062;
      InterLogEntryCommentLine@1017 : Record 5123;
      InterLogEntryCommentLineTmp@1018 : TEMPORARY Record 5123;
      ContactThrough@1021 : TEMPORARY Record 5100;
      AttachmentManagement@1010 : Codeunit 5052;
      Text003@1009 : TextConst 'ENU=All Files (*.*)|*.*;FRA=Tous les fichiers (*.*)|*.*';
      Text005@1023 : TextConst 'ENU=You must fill in the %1 field.;FRA=Vous devez renseigner le champ %1.';
      Text004@1012 : TextConst 'ENU=The program has stopped importing the attachment at your request.;FRA=Conformment  votre demande, le programme a interrompu l''import du document joint.';
      Text006@1011 : TextConst 'ENU=Your Segment is now empty.\Reset No. of Criteria Actions?;FRA=Le segment est maintenant vide.\Souhaitez-vous rinitialiser le nombre d''actions du critre ?';
      CampaignTargetGrMgt@1014 : Codeunit 7030;
      TAPIManagement@1019 : Codeunit 5053;
      Mail@1020 : Codeunit 397;
      ResumedAttachmentNo@1015 : Integer;
      Text007@1016 : TextConst 'ENU=Do you want to finish this interaction later?;FRA=Voulez-vous crer un brouillon ?';
      Text008@1022 : TextConst 'ENU=You must select an interaction template with an attachment.;FRA=Vous devez slectionner un modle d''interaction avec une pice jointe.';
      Text010@1027 : TextConst 'ENU=Call was not logged.;FRA=L''appel n''a pas t enregistr.';
      Text013@1024 : TextConst 'ENU=You must fill in the phone number.;FRA=Vous devez indiquer un numro de tlphone.';
      Text023@1028 : TextConst 'ENU=''%1'' is not found among %2''s e-mail addresses.;FRA=® %1 ¯ est introuvable dans les adresses de messagerie de %2.';
      Text024@1032 : TextConst 'ENU="%1 = %2 can not be specified.\";FRA="%1 = %2 ne peut pas tre spcifi.\"';
      Todo@1102601000 : Record 5080;
      Text025@1102601001 : TextConst 'ENU=Wizard Action field is not filled for selected interaction. \Blank Wizard Action does not enable interactions with hard copy or e-mail.;FRA=Le champ Action assiste n''est pas rempli pour l''interaction slectionne. \Une action assiste vide ne permet pas d''interactions avec l''impression ou l''e-mail.';
      SkipModify@1100281000 : Boolean;
      HideWizard@1100281001 : 'No,AssistActionOnly,All';
      SkipCheckStatus@1100281002 : Boolean;
      SkipDeliverTest@1100281003 : Boolean;
      SkipSend@1100281004 : Boolean;

    PROCEDURE InitLine@1();
    BEGIN
      IF SegHeader.GET("Segment No.") THEN BEGIN
        Description := SegHeader.Description;
        "Campaign No." := SegHeader."Campaign No.";
        "Salesperson Code" := SegHeader."Salesperson Code";
        IF NOT "Force Correspondence Type" THEN //IMH19.ST
        VALIDATE("Correspondence Type", SegHeader."Correspondence Type (Default)");
        "Interaction Template Code" := SegHeader."Interaction Template Code";
        "Interaction Group Code" := SegHeader."Interaction Group Code";
        "Cost (LCY)" := SegHeader."Unit Cost (LCY)";
        "Duration (Min.)" := SegHeader."Unit Duration (Min.)";
        "Attachment No." := SegHeader."Attachment No.";
        Date := SegHeader.Date;
        "Campaign Target" := SegHeader."Campaign Target";
        "Information Flow" := SegHeader."Information Flow";
        "Initiated By" := SegHeader."Initiated By";
        "Campaign Response" := SegHeader."Campaign Response";
        "Send Word Doc. As Attmt." := SegHeader."Send Word Docs. as Attmt.";
        CLEAR(Evaluation);
      END;
    END;

    PROCEDURE AttachmentText@5() : Text[30];
    BEGIN
      IF AttachmentInherited THEN
        EXIT(Text001)
      ELSE
        IF "Attachment No." <> 0 THEN
          EXIT(Text002)
        ELSE
          EXIT('');
    END;

    PROCEDURE MaintainAttachment@9();
    VAR
      Cont@1000 : Record 5050;
      SalutationFormula@1001 : Record 5069;
    BEGIN
      TESTFIELD("Interaction Template Code");
      //<<IMH07.ST
      InteractTmpl.GET("Interaction Template Code");
      IF InteractTmpl.HasSalutation THEN BEGIN
      //>>IMH07.ST
      Cont.GET("Contact No.");
      SalutationFormula.GET(Cont."Salutation Code","Language Code",0);
      SalutationFormula.GET(Cont."Salutation Code","Language Code",1);
      END; //IMH07.ST
      IF "Attachment No." <> 0 THEN
        OpenAttachment
      ELSE
        CreateAttachment;
    END;

    PROCEDURE CreateAttachment@8();
    VAR
      SegInteractLanguage@1003 : Record 5104;
      AttachmentManagement@1000 : Codeunit 5052;
      WordManagement@1001 : Codeunit 5054;
      NewAttmtNo@1002 : Integer;
    BEGIN
      IF NOT SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN BEGIN
        SegInteractLanguage.INIT;
        SegInteractLanguage."Segment No." := "Segment No.";
        SegInteractLanguage."Segment Line No." := "Line No.";
        SegInteractLanguage."Language Code" := "Language Code";
        SegInteractLanguage.Description := Description;
        SegInteractLanguage.Subject := Subject;
        SegInteractLanguage."Interaction Template Code" := "Interaction Template Code"; //IMH03
      END;

      SegInteractLanguage.CreateAttachment;
    END;

    PROCEDURE OpenAttachment@2();
    VAR
      Attachment@1004 : Record 5062;
      Attachment2@1003 : Record 5062;
      SegInteractLanguage@1002 : Record 5104;
      NewAttachmentNo@1000 : Integer;
    BEGIN
      IF "Attachment No." = 0 THEN
        EXIT;

      Attachment.GET("Attachment No.");
      Attachment2 := Attachment;
      Attachment2.SetInteractionTemplate("Interaction Template Code"); //IMH03
      Attachment2.ShowAttachment(Rec,"Segment No." + ' ' + Description,FALSE);

      IF AttachmentInherited THEN BEGIN
        NewAttachmentNo := Attachment2."No.";
        IF (Attachment."Last Date Modified" <> Attachment2."Last Date Modified") OR
           (Attachment."Last Time Modified" <> Attachment2."Last Time Modified")
        THEN BEGIN
          SegInteractLanguage.INIT;
          SegInteractLanguage."Segment No." := "Segment No.";
          SegInteractLanguage."Segment Line No." := "Line No.";
          SegInteractLanguage."Language Code" := "Language Code";
          SegInteractLanguage.Description := Description;
          SegInteractLanguage.Subject := Subject;
          SegInteractLanguage."Attachment No." := NewAttachmentNo;
          SegInteractLanguage.INSERT(TRUE);
          GET("Segment No.","Line No.");
          "Attachment No." := NewAttachmentNo;
          MODIFY;
        END;
      END
    END;

    PROCEDURE ImportAttachment@3();
    VAR
      SegInteractLanguage@1003 : Record 5104;
    BEGIN
      IF NOT SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN BEGIN
        SegInteractLanguage.INIT;
        SegInteractLanguage."Segment No." := "Segment No.";
        SegInteractLanguage."Segment Line No." := "Line No.";
        SegInteractLanguage."Language Code" := "Language Code";
        SegInteractLanguage.Description := Description;
        SegInteractLanguage.INSERT(TRUE);
      END;
      SegInteractLanguage.ImportAttachment;
    END;

    PROCEDURE ExportAttachment@4();
    VAR
      SegInteractLanguage@1000 : Record 5104;
    BEGIN
      IF UniqueAttachmentExists THEN BEGIN
        IF SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN
          IF SegInteractLanguage."Attachment No." <> 0 THEN
            SegInteractLanguage.ExportAttachment;
      END ELSE
        IF SegInteractLanguage.GET("Segment No.",0,"Language Code") THEN
          IF SegInteractLanguage."Attachment No." <> 0 THEN
            SegInteractLanguage.ExportAttachment;
    END;

    PROCEDURE RemoveAttachment@7(Prompt@1000 : Boolean);
    VAR
      SegInteractLanguage@1002 : Record 5104;
    BEGIN
      IF SegInteractLanguage.GET("Segment No.","Line No.","Language Code") THEN BEGIN
        SegInteractLanguage.DELETE(TRUE);
        GET("Segment No.","Line No.");
      END;
      "Attachment No." := 0;
    END;

    PROCEDURE CreateCall@21();
    VAR
      TempSegmentLine@1000 : TEMPORARY Record 5077;
      InteractionTmplSetup@1001 : Record 5122;
    BEGIN
      Cont.GET("Contact No.");
      TempSegmentLine."Contact No." := Cont."No.";
      TempSegmentLine."Contact Via" := Cont."Phone No.";
      TempSegmentLine."Contact Company No." := Cont."Company No.";
      TempSegmentLine."To-do No." := "To-do No.";
      IF "Contact Alt. Address Code" <> '' THEN
        TempSegmentLine."Contact Alt. Address Code" := "Contact Alt. Address Code";
      IF "Campaign No." <> '' THEN
        TempSegmentLine."Campaign No." := "Campaign No.";

      TempSegmentLine."Campaign Target" := "Campaign Target";
      TempSegmentLine."Campaign Response" := "Campaign Response";
      TempSegmentLine.SETRANGE("Contact No.",TempSegmentLine."Contact No.");
      TempSegmentLine.SETRANGE("Campaign No.",TempSegmentLine."Campaign No.");

      TempSegmentLine.StartWizard2;
    END;

    PROCEDURE FindLanguage@10(InteractTmplCode@1001 : Code[10];ContactLanguageCode@1000 : Code[10]) Language@1005 : Code[10];
    VAR
      SegInteractLanguage@1004 : Record 5104;
      InteractTemplLanguage@1003 : Record 5103;
      InteractTmpl@1002 : Record 5064;
    BEGIN
      IF SegHeader.GET("Segment No.") THEN BEGIN
        IF NOT UniqueAttachmentExists AND
           ("Interaction Template Code" = SegHeader."Interaction Template Code")
        THEN BEGIN
          IF SegInteractLanguage.GET("Segment No.",0,ContactLanguageCode) THEN
            Language := ContactLanguageCode
          ELSE
            Language := SegHeader."Language Code (Default)";
        END ELSE
          IF SegInteractLanguage.GET("Segment No.","Line No.",ContactLanguageCode) THEN
            Language := ContactLanguageCode
          ELSE BEGIN
            InteractTmpl.GET(InteractTmplCode);
            IF SegInteractLanguage.GET("Segment No.","Line No.",InteractTmpl."Language Code (Default)") THEN
              Language := InteractTmpl."Language Code (Default)"
            ELSE BEGIN
              SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
              SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
              IF SegInteractLanguage.FIND('-') THEN
                Language := SegInteractLanguage."Language Code";
            END;
          END;
      END ELSE BEGIN  //Create Interaction:
        IF InteractTemplLanguage.GET(InteractTmplCode,ContactLanguageCode) THEN
          Language := ContactLanguageCode
        ELSE
          IF InteractTmpl.GET(InteractTmplCode) THEN
            Language := InteractTmpl."Language Code (Default)";
      END;
    END;

    PROCEDURE CreateSegInteractLanguages@11(InteractTemplCode@1000 : Code[10]);
    VAR
      SegInteractLanguage@1003 : Record 5104;
      InteractTemplLanguage@1002 : Record 5103;
      Attachment@1001 : Record 5062;
    BEGIN
      SegInteractLanguage.RESET;
      SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
      SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
      SegInteractLanguage.DELETEALL(TRUE);

      IF SegHeader.GET("Segment No.") THEN
        IF ("Interaction Template Code" <> SegHeader."Interaction Template Code") THEN BEGIN
          InteractTemplLanguage.RESET;
          InteractTemplLanguage.SETRANGE("Interaction Template Code",InteractTemplCode);
          IF InteractTemplLanguage.FIND('-') THEN
            REPEAT
              SegInteractLanguage.INIT;
              SegInteractLanguage."Segment No." := "Segment No.";
              SegInteractLanguage."Segment Line No." := "Line No.";
              SegInteractLanguage."Language Code" := InteractTemplLanguage."Language Code";
              SegInteractLanguage.Description := Description;
              IF Attachment.GET(InteractTemplLanguage."Attachment No.") THEN
                SegInteractLanguage."Attachment No." :=
                  AttachmentManagement.InsertAttachment(InteractTemplLanguage."Attachment No.");
              SegInteractLanguage.INSERT(TRUE);
            UNTIL InteractTemplLanguage.NEXT = 0;
        END;
    END;

    PROCEDURE AttachmentInherited@12() : Boolean;
    VAR
      SegInteractLanguage@1000 : Record 5104;
    BEGIN
      IF "Attachment No." = 0 THEN
        EXIT(FALSE);
      IF NOT SegHeader.GET("Segment No.") THEN
        EXIT(FALSE);
      IF "Interaction Template Code" = '' THEN
        EXIT(FALSE);

      SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
      SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
      SegInteractLanguage.SETRANGE("Language Code","Language Code");
      SegInteractLanguage.SETRANGE("Attachment No.","Attachment No.");
      IF SegInteractLanguage.FIND('-') THEN
        EXIT(FALSE)
      ELSE BEGIN
        SegInteractLanguage.SETRANGE("Segment Line No.",0);
        IF SegInteractLanguage.FIND('-') THEN
          EXIT(TRUE)
        ELSE
          EXIT(FALSE);
      END;
    END;

    PROCEDURE SetInteractionAttachment@13();
    VAR
      Attachment@1001 : Record 5062;
      InteractTemplLanguage@1000 : Record 5103;
    BEGIN
      IF InteractTemplLanguage.GET("Interaction Template Code","Language Code") THEN BEGIN
        IF Attachment.GET(InteractTemplLanguage."Attachment No.") THEN
          "Attachment No." := InteractTemplLanguage."Attachment No."
        ELSE
          "Attachment No." := 0;
      END;
      MODIFY;
    END;

    PROCEDURE UniqueAttachmentExists@14() : Boolean;
    VAR
      SegInteractLanguage@1000 : Record 5104;
    BEGIN
      IF "Line No." <> 0 THEN BEGIN
        SegInteractLanguage.SETRANGE("Segment No.","Segment No.");
        SegInteractLanguage.SETRANGE("Segment Line No.","Line No.");
        IF SegInteractLanguage.FIND('-') THEN
          EXIT(TRUE)
        ELSE
          EXIT(FALSE);
      END ELSE
        EXIT(FALSE);
    END;

    LOCAL PROCEDURE SetCampaignTargetGroup@15();
    BEGIN
      IF Campaign.GET(xRec."Campaign No.") THEN BEGIN
        Campaign.CALCFIELDS(Activated);
        IF Campaign.Activated THEN
          CampaignTargetGrMgt.DeleteSegfromTargetGr(xRec);
      END;

      IF Campaign.GET("Campaign No.") THEN BEGIN
        Campaign.CALCFIELDS(Activated);
        IF Campaign.Activated THEN
          CampaignTargetGrMgt.AddSegLinetoTargetGr(Rec);
      END;
    END;

    PROCEDURE CreateInteractionFromContact@38(VAR Contact@1000 : Record 5050) : Boolean;
    VAR
      lTempSegLine@1100281000 : Record 5077;
    BEGIN
      lTempSegLine := Rec; //IMH28.ST
      DELETEALL;
      INIT;
      CopyFromInit(lTempSegLine); //IMH28.ST
      IF Contact.Type = Contact.Type::Person THEN
        SETRANGE("Contact Company No.",Contact."Company No.");
      SETRANGE("Contact No.",Contact."No.");
      VALIDATE("Contact No.",Contact."No.");
      IF Contact."Salesperson Code" <> '' THEN //IMH06.ST
      "Salesperson Code" := Contact."Salesperson Code";
      //<<IMH06.ST
      IF HideWizard <> HideWizard::No THEN
        PostWizard
      ELSE
      //>>IMH06.ST
      StartWizard;
      IF DELETE THEN;
      EXIT("Interaction Finished"); //IMH06.ST
    END;

    PROCEDURE CreateInteractionFromProvider@1100281013(VAR Provider@1000 : Record 50000) : Boolean;
    VAR
      lContact@1100281000 : Record 5050;
      lContactList@1100281001 : Record 5050;
      lTempSegLine@1100281002 : Record 5077;
    BEGIN
      //IMH14
      lTempSegLine := Rec; //IMH28.ST
      DELETEALL;
      INIT;
      CopyFromInit(lTempSegLine); //IMH28.ST
      lContact.GET(Provider."No.");
      SETRANGE("Provider No.", Provider."No.");
      VALIDATE("Provider No.", Provider."No.");

      IF lContact.Type = lContact.Type::Person THEN
        SETRANGE("Contact Company No.",lContact."Company No.");

      IF Provider."Admin. Contact No." <> '' THEN BEGIN
      {
        lContactList.SETFILTER("No.",'%1|%2',lContact."No.",Provider."Admin. Contact No.");
        IF FORM.RUNMODAL(0,lContactList) = ACTION::LookupOK THEN
          lContact := lContactList
        ELSE
          EXIT(FALSE);
        SETRANGE("Contact No.",lContact."No.");
        VALIDATE("Contact No.",lContact."No.");
        }
        SETRANGE("Contact No.",Provider."Admin. Contact No.");
        VALIDATE("Contact No.",Provider."Admin. Contact No.");
      END
      ELSE BEGIN
        SETRANGE("Contact No.",lContact."No.");
        VALIDATE("Contact No.",lContact."No.");
      END;

      IF lContact."Salesperson Code" <> '' THEN
      "Salesperson Code" := lContact."Salesperson Code";
      IF HideWizard <> HideWizard::No THEN
        PostWizard
      ELSE

      StartWizard;
      EXIT("Interaction Finished");
    END;

    PROCEDURE CreateInteractionFromSalesPurc@39(VAR Salesperson@1000 : Record 13) : Boolean;
    BEGIN
      DELETEALL;
      INIT;
      VALIDATE("Salesperson Code",Salesperson.Code);
      SETRANGE("Salesperson Code",Salesperson.Code);
      //<<IMH06.ST
      IF HideWizard <> HideWizard::No THEN
        PostWizard
      ELSE
      //>>IMH06.ST
      StartWizard;
      EXIT("Interaction Finished"); //IMH06.ST
    END;

    PROCEDURE CreateInteractionFromIntLogEnt@42(VAR InteractionLogEntry@1000 : Record 5065;pDefaultTemplate@1100281003 : Code[10]) : Boolean;
    VAR
      SegLine@1006 : TEMPORARY Record 5077;
      Cont@1005 : Record 5050;
      SalesPurchPerson@1004 : Record 13;
      Campaign@1003 : Record 5071;
      Todo@1002 : Record 5080;
      Opportunity@1001 : Record 5092;
      lService@1100281000 : Record 50066;
      lServiceHeader@1100281001 : Record 5900;
      lInterventionLine@1100281002 : Record 50075;
    BEGIN
      IF Todo.GET(InteractionLogEntry.GETFILTER("To-do No.")) THEN BEGIN
        "To-do No." := Todo."No.";
        SETRANGE("To-do No.","To-do No.");
        IF Cont.GET(Todo."Contact No.") THEN
          VALIDATE("Contact No.",Todo."Contact No.");
        IF SalesPurchPerson.GET(Todo."Salesperson Code") THEN
          "Salesperson Code" := SalesPurchPerson.Code;
        IF Campaign.GET(Todo."Campaign No.") THEN
          "Campaign No." := Campaign."No.";
        IF Opportunity.GET(Todo."Opportunity No.") THEN
          "Opportunity No." := Todo."Opportunity No.";
      END ELSE BEGIN
        IF Cont.GET(InteractionLogEntry.GETFILTER("Contact Company No.")) THEN BEGIN
          VALIDATE("Contact No.",Cont."Company No.");
          SETRANGE("Contact No.","Contact No.");
        END;
        IF Cont.GET(InteractionLogEntry.GETFILTER("Contact No.")) THEN BEGIN
          VALIDATE("Contact No.",Cont."No.");
          SETRANGE("Contact No.","Contact No.");
        END;
        IF SalesPurchPerson.GET(InteractionLogEntry.GETFILTER("Salesperson Code")) THEN BEGIN
          "Salesperson Code" := SalesPurchPerson.Code;
          SETRANGE("Salesperson Code","Salesperson Code");
        END;
        IF Campaign.GET(InteractionLogEntry.GETFILTER("Campaign No.")) THEN BEGIN
          "Campaign No." := Campaign."No.";
          SETRANGE("Campaign No.","Campaign No.");
        END;
        IF Opportunity.GET(InteractionLogEntry.GETFILTER("Opportunity No.")) THEN BEGIN
          "Opportunity No." := Opportunity."No.";
          SETRANGE("Opportunity No.","Opportunity No.");
        END;
        //<<IMH02 isat.zw
        IF lService.GET(InteractionLogEntry.GETFILTER("Service No.")) THEN BEGIN
          SETRANGE("Service No.", InteractionLogEntry."Service No.");
          VALIDATE("Service No.", InteractionLogEntry."Service No.");
        END;
        IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, InteractionLogEntry.GETFILTER("Service Header No.")) THEN BEGIN
          SETRANGE("Service Header No.", InteractionLogEntry."Service Header No.");
          VALIDATE("Service Header No.", InteractionLogEntry."Service Header No.");
        END;
        IF InteractionLogEntry.GETFILTER("Intervention Line No.") <> '' THEN
          IF lInterventionLine.GET(InteractionLogEntry.GETFILTER("Service Header No."),
                                 InteractionLogEntry.GETRANGEMIN("Intervention Line No.")) THEN BEGIN
            SETRANGE("Intervention Line No.", InteractionLogEntry."Intervention Line No.");
            VALIDATE("Intervention Line No.", InteractionLogEntry."Intervention Line No.");
        END;
        //>>IMH02 isat.zw
        SetDefaultTemplate(pDefaultTemplate); //IMH06.ST
      END;
      //<<IMH06.ST
      IF HideWizard <> HideWizard::No THEN
        PostWizard
      ELSE
      //>>IMH06.ST
      StartWizard;
      EXIT("Interaction Finished"); //IMH06.ST
    END;

    PROCEDURE CreateInteractionFromToDo@43(VAR ToDo@1000 : Record 5080) : Boolean;
    VAR
      SegLine@1004 : TEMPORARY Record 5077;
      Cont@1003 : Record 5050;
      SalesPurchPerson@1002 : Record 13;
      Campaign@1001 : Record 5071;
    BEGIN
      INIT;
      "To-do No." := ToDo."No.";
      SETRANGE("To-do No.","To-do No.");
      IF Cont.GET(ToDo."Contact No.") THEN
        VALIDATE("Contact No.",Cont."No.");
      IF SalesPurchPerson.GET(ToDo."Salesperson Code") THEN
        "Salesperson Code" := SalesPurchPerson.Code;
      IF Campaign.GET(ToDo."Campaign No.") THEN
        "Campaign No." := Campaign."No.";
      //<<IMH06.ST
      IF HideWizard <> HideWizard::No THEN
        PostWizard
      ELSE
      //>>IMH06.ST
      StartWizard;
      EXIT("Interaction Finished"); //IMH06.ST
    END;

    PROCEDURE CreateInteractionFromService@1100281000(VAR pService@1000 : Record 50066;pDefaultTemplate@1100281001 : Code[10]) : Boolean;
    VAR
      lTempSegLine@1100281002 : Record 5077;
    BEGIN
      //IMH02 isat.zw
      lTempSegLine := Rec; //IMH28.ST
      DELETEALL;
      INIT;
      CopyFromInit(lTempSegLine); //IMH28.ST
      SETRANGE("Service No.", pService."Service No.");
      VALIDATE("Service No.", pService."Service No.");
      //SETRANGE("Contact No.",pService."Contact No.");
      VALIDATE("Contact No.",pService."Contact No.");
      SetDefaultTemplate(pDefaultTemplate); //IMH06.ST
      //<<IMH06.ST
      IF HideWizard <> HideWizard::No THEN
        PostWizard
      ELSE
      //>>IMH06.ST
      StartWizard;
      EXIT("Interaction Finished"); //IMH06.ST
    END;

    PROCEDURE CreateInteracFromServHeader@1100281002(VAR pServiceHeader@1000 : Record 5900;pDefaultTemplate@1100281002 : Code[10]) : Boolean;
    VAR
      lTempSegLine@1100281003 : Record 5077;
    BEGIN
      //IMH02 isat.zw
      lTempSegLine := Rec; //IMH28.ST
      DELETEALL;
      INIT;
      CopyFromInit(lTempSegLine); //IMH28.ST
      SETRANGE("Service No.", pServiceHeader."Service No.");
      VALIDATE("Service No.", pServiceHeader."Service No.");
      SETRANGE("Service Header No.", pServiceHeader."No.");
      VALIDATE("Service Header No.", pServiceHeader."No.");
      //SETRANGE("Contact No.",pServiceHeader."Contact No.");
      VALIDATE("Contact No.",pServiceHeader."Contact No.");
      IF Campaign.GET(pServiceHeader."Campaign No.") THEN BEGIN
        "Campaign No." := Campaign."No.";
        SETRANGE("Campaign No.",pServiceHeader."Campaign No.");
      END;
      SetDefaultTemplate(pDefaultTemplate); //IMH06.ST
      //<<IMH06.ST
      IF HideWizard <> HideWizard::No THEN
        PostWizard
      ELSE
      //>>IMH06.ST
      StartWizard;
      EXIT("Interaction Finished"); //IMH06.ST
    END;

    PROCEDURE CreateInteracFromIntervention@1100281006(VAR InterventionLine@1000 : Record 50075;pDefaultTemplate@1100281003 : Code[10]) : Boolean;
    VAR
      lTempSegLine@1100281004 : Record 5077;
    BEGIN
      //IMH02 isat.zw
      lTempSegLine := Rec; //IMH28.ST
      DELETEALL;
      INIT;
      CopyFromInit(lTempSegLine); //IMH28.ST
      SETRANGE("Service No.", InterventionLine."Service No.");
      VALIDATE("Service No.", InterventionLine."Service No.");
      SETRANGE("Service Header No.", InterventionLine."Service Header No.");
      VALIDATE("Service Header No.", InterventionLine."Service Header No.");
      SETRANGE("Intervention Line No.", InterventionLine."Line No.");
      VALIDATE("Intervention Line No.", InterventionLine."Line No.");
      //SETRANGE("Contact No.",InterventionLine."Contact No.");
      VALIDATE("Contact No.",InterventionLine."Contact No.");
      SetDefaultTemplate(pDefaultTemplate); //IMH06.ST
      //<<IMH06.ST
      IF HideWizard <> HideWizard::No THEN
        PostWizard
      ELSE
      //>>IMH06.ST
      StartWizard;
      EXIT("Interaction Finished"); //IMH06.ST
    END;

    PROCEDURE CreateInteracFromIntervQuote@1100281010(VAR pIntervQuote@1000 : Record 50076;pDefaultTemplate@1100281003 : Code[10]) : Boolean;
    VAR
      lTempSegLine@1100281000 : Record 5077;
    BEGIN
      //IMH07.ST
      lTempSegLine := Rec; //IMH28.ST
      DELETEALL;
      INIT;
      CopyFromInit(lTempSegLine); //IMH28.ST
      pIntervQuote.CALCFIELDS("Service No.");
      SETRANGE("Service No.", pIntervQuote."Service No.");
      VALIDATE("Service No.", pIntervQuote."Service No.");
      SETRANGE("Service Header No.", pIntervQuote."Service Header No.");
      VALIDATE("Service Header No.", pIntervQuote."Service Header No.");
      SETRANGE("Intervention Line No.", pIntervQuote."Intervention Line No.");
      VALIDATE("Intervention Line No.", pIntervQuote."Intervention Line No.");
      SETRANGE("Intervention Quote Line No.", pIntervQuote."Line No.");
      VALIDATE("Intervention Quote Line No.", pIntervQuote."Line No.");
      //SETRANGE("Contact No.",InterventionLine."Contact No.");
      VALIDATE("Contact No.", pIntervQuote."Contact No.");
      SetDefaultTemplate(pDefaultTemplate); //IMH06.ST
      //<<IMH06.ST
      IF HideWizard <> HideWizard::No THEN
        PostWizard
      ELSE
      //>>IMH06.ST
      StartWizard;
      EXIT("Interaction Finished"); //IMH06.ST
    END;

    PROCEDURE CreateInteracFromCompleteTask@1100281001(VAR pCompletnessTask@1000 : Record 50004;pDefaultTemplate@1100281003 : Code[10]) : Boolean;
    VAR
      lTempSegLine@1100281000 : Record 5077;
    BEGIN
      //<<IMH05.isat.PC
      lTempSegLine := Rec; //IMH28.ST
      DELETEALL;
      INIT;
      CopyFromInit(lTempSegLine); //IMH28.ST
      SETRANGE("Contact No.",pCompletnessTask."Provider No.");
      VALIDATE("Contact No.",pCompletnessTask."Provider No.");
      SetDefaultTemplate(pDefaultTemplate); //IMH06.ST
      //<<IMH06.ST
      IF HideWizard <> HideWizard::No THEN
        PostWizard
      ELSE
      //>>IMH06.ST
      StartWizard;
      //>>IMH05.isat.PC
      EXIT("Interaction Finished"); //IMH06.ST
    END;

    PROCEDURE CreateInteracFromDocQueue@1100281011(VAR pDocumentQueue@1000 : Record 50054;pDefaultTemplate@1100281003 : Code[10]) : Boolean;
    BEGIN
      //IMH11 isat.zw
      DELETEALL;
      INIT;
      IF "Service No." <> '' THEN BEGIN
        SETRANGE("Service No.", pDocumentQueue."Service No.");
        VALIDATE("Service No.", pDocumentQueue."Service No.");
      END;
      IF "Service Header No." <> '' THEN BEGIN
        SETRANGE("Service Header No.", pDocumentQueue."Service Document No.");
        VALIDATE("Service Header No.", pDocumentQueue."Service Document No.");
      END;
      IF "Intervention Line No." <> 0 THEN BEGIN
        SETRANGE("Intervention Line No.", pDocumentQueue."Service Intervention Line No.");
        VALIDATE("Intervention Line No.", pDocumentQueue."Service Intervention Line No.");
      END;
      VALIDATE("Contact No.",pDocumentQueue."Contact No.");
      SetDefaultTemplate(pDefaultTemplate); //IMH06.ST
      //<<IMH06.ST
      IF HideWizard <> HideWizard::No THEN
        PostWizard
      ELSE
      //>>IMH06.ST
      StartWizard;
      EXIT("Interaction Finished"); //IMH06.ST
    END;

    PROCEDURE CreateInteractionFromContact2@1100281009(VAR Contact@1000 : Record 5050;pDefaultTemplate@1100281000 : Code[10]) : Boolean;
    VAR
      lTempSegLine@1100281001 : TEMPORARY Record 5077;
    BEGIN
      //IMH06.ST fonction dupliqu de CreateInteractionFromContact pour grer le template
      lTempSegLine := Rec;
      DELETEALL;
      INIT;
      CopyFromInit(lTempSegLine); //IMH28.ST
      "Provider No." := lTempSegLine."Provider No.";
      IF Contact.Type = Contact.Type::Person THEN
        SETRANGE("Contact Company No.",Contact."Company No.");
      SETRANGE("Contact No.",Contact."No.");
      VALIDATE("Contact No.",Contact."No.");
      IF Contact."Salesperson Code" <> '' THEN
        "Salesperson Code" := Contact."Salesperson Code";
      SetDefaultTemplate(pDefaultTemplate);
      IF HideWizard <> HideWizard::No THEN
        PostWizard
      ELSE
        StartWizard;

      EXIT("Interaction Finished");
    END;

    PROCEDURE CreateInteractionFromVendor@1100281015(VAR pVendor@1000 : Record 23) : Boolean;
    VAR
      lContact@1100281000 : Record 5050;
      lContBusinessRelation@1100281003 : Record 5054;
    BEGIN
      //IMH14
      DELETEALL;
      INIT;
      lContBusinessRelation.RESET;
      lContBusinessRelation.SETCURRENTKEY("Link to Table","No."); //IMH28.ST
      lContBusinessRelation.SETRANGE("Link to Table",lContBusinessRelation."Link to Table"::Vendor);
      lContBusinessRelation.SETRANGE("No.",pVendor."No.");
      IF lContBusinessRelation.FINDFIRST THEN
      BEGIN
        IF lContact.GET(lContBusinessRelation."Contact No.") THEN BEGIN
          SETRANGE("Contact No.",lContact."No.");
          VALIDATE("Contact No.",lContact."No.");
          IF lContact."Salesperson Code" <> '' THEN
            "Salesperson Code" := lContact."Salesperson Code";
        END;
        //<<IMH06.ST
        IF HideWizard <> HideWizard::No THEN
          PostWizard
        ELSE
        //>>IMH06.ST
        StartWizard;
        EXIT("Interaction Finished");
      END;
    END;

    PROCEDURE CreateInteractionFromPurchOrd@1100281016(VAR pVendor@1000 : Code[20];pPurchaseDocumentType@1100281003 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order';pPurchaseDocumentNo@1100281004 : Code[20];pPurchaseDocumentDate@1100281005 : Date;pDefaultTemplate@1100281006 : Code[10]) : Boolean;
    VAR
      lPurchHeader@1100281007 : Record 38;
      lContBusinessRelation@1100281000 : Record 5054;
    BEGIN
      //IMH14
      DELETEALL;
      INIT;
      lContBusinessRelation.RESET;
      lContBusinessRelation.SETRANGE("Link to Table",lContBusinessRelation."Link to Table"::Vendor);
      lContBusinessRelation.SETRANGE("No.",pVendor);
      IF lContBusinessRelation.FINDFIRST THEN BEGIN
        //SETRANGE("Contact No.",lContBusinessRelation."Contact No.");
        VALIDATE("Contact No.",lContBusinessRelation."Contact No.");

        SETRANGE("Document No.",pPurchaseDocumentNo);
        "Document No." := pPurchaseDocumentNo;
      //<<IMH21.ST
        CASE pPurchaseDocumentType OF
          pPurchaseDocumentType::Quote :           "Document Type" := "Document Type"::"Purch.Qte.";
          pPurchaseDocumentType::Order :           "Document Type" := "Document Type"::"Purch. Ord.";
          pPurchaseDocumentType::Invoice :         "Document Type" := "Document Type"::PurchInv38;
          pPurchaseDocumentType::"Credit Memo" :   "Document Type" := "Document Type"::PurchCrMemo38;
          pPurchaseDocumentType::"Blanket Order" : "Document Type" := "Document Type"::"Purch. Blnkt. Ord." ;
          pPurchaseDocumentType::"Return Order" :  "Document Type" := "Document Type"::"Purch. Return Ord. Cnfrmn." ;
        END;
        SETRANGE("Document Type", "Document Type");
      //>>IMH21.ST
        "Document Date" := pPurchaseDocumentDate;
        "Vendor No." := pVendor;
      //<<IMH21.ST
        IF lPurchHeader.GET(pPurchaseDocumentType, pPurchaseDocumentNo) THEN BEGIN
          "Corporate No." := lPurchHeader."Corporate No.";
          "Service No." := lPurchHeader."Service No.";
          "Service Header No." := lPurchHeader."Service Header No.";
          "Intervention Line No." := lPurchHeader."Intervention Line No.";
          IF lPurchHeader."Intervention Line No." <> 0 THEN BEGIN
            lPurchHeader.CALCFIELDS("Intervention No.");
            "Intervention No." := lPurchHeader."Intervention No."
          END;
          "Intervention Quote Line No." := lPurchHeader."Quote Line No.";
        END;
      //IMH21.ST
        SetDefaultTemplate(pDefaultTemplate);
        IF HideWizard <> HideWizard::No THEN
          PostWizard
        ELSE
        StartWizard;
        EXIT("Interaction Finished");
      END;
    END;

    PROCEDURE CreateInteractionFromPurchInv@1100281012(VAR pVendor@1000 : Code[20];pPurchaseDocumentNo@1100281004 : Code[20];pPurchaseDocumentDate@1100281005 : Date;pDefaultTemplate@1100281006 : Code[10]) : Boolean;
    VAR
      lContBusinessRelation@1100281002 : Record 5054;
      lPurchInvHeader@1100281000 : Record 122;
    BEGIN
      //IMH14
      DELETEALL;
      INIT;
      lContBusinessRelation.RESET;
      lContBusinessRelation.SETRANGE("Link to Table",lContBusinessRelation."Link to Table"::Vendor);
      lContBusinessRelation.SETRANGE("No.",pVendor);
      IF lContBusinessRelation.FINDFIRST THEN BEGIN
        //SETRANGE("Contact No.",lContBusinessRelation."Contact No.");
        VALIDATE("Contact No.",lContBusinessRelation."Contact No.");

        SETRANGE("Document No.",pPurchaseDocumentNo);
        "Document No." := pPurchaseDocumentNo;
        "Document Type" := "Document Type"::"Purch. Inv.";
      //<<IMH21.ST
        SETRANGE("Document Type", "Document Type");
        IF lPurchInvHeader.GET(pPurchaseDocumentNo) THEN BEGIN
          "Corporate No." := lPurchInvHeader."Corporate No.";
          "Service No." := lPurchInvHeader."Service No.";
          "Service Header No." := lPurchInvHeader."Service Header No.";
          "Intervention Line No." := lPurchInvHeader."Intervention Line No.";
          IF lPurchInvHeader."Intervention Line No." <> 0 THEN BEGIN
            lPurchInvHeader.CALCFIELDS("Intervention No.");
            "Intervention No." := lPurchInvHeader."Intervention No."
          END;
          "Intervention Quote Line No." := lPurchInvHeader."Quote Line No.";
        END;
      //>>IMH21.ST
        "Document Date" := pPurchaseDocumentDate;
        "Vendor No." := pVendor;
        SetDefaultTemplate(pDefaultTemplate);
        IF HideWizard <> HideWizard::No THEN
          PostWizard
        ELSE
        StartWizard;
        EXIT("Interaction Finished");
      END;
    END;

    LOCAL PROCEDURE SetDefaultTemplate@1100281008(pDefaultTemplate@1100281000 : Code[10]);
    BEGIN
      //IMH06.ST
      IF pDefaultTemplate <> '' THEN BEGIN
        SkipModify := TRUE;
        VALIDATE("Interaction Template Code", pDefaultTemplate);
        SkipModify := FALSE;
      END;
    END;

    PROCEDURE GetContactName@41() : Text[50];
    VAR
      Cont@1000 : Record 5050;
    BEGIN
      IF Cont.GET("Contact No.") THEN
        EXIT(Cont.Name);
      IF Cont.GET("Contact Company No.") THEN
        EXIT(Cont.Name);
    END;

    PROCEDURE StartWizard@33();
    VAR
      Opp@1000 : Record 5092;
      lInteractLogEntry@1100281000 : Record 5065;
      lCreateInteract@1100281001 : Form 5077;
    BEGIN
      IF Campaign.GET("Campaign No.") THEN
        "Campaign Description" := Campaign.Description;
      IF Opp.GET("Opportunity No.") THEN
        "Opportunity Description" := Opp.Description;
      "Wizard Contact Name" := GetContactName;
      "Wizard Step" := "Wizard Step"::"1";
      "Interaction Successful" := TRUE;
      VALIDATE(Date,WORKDATE);
      GetServiceFilter; //IMH20.ST
      "Time of Interaction" := TIME;//IMH15
      //<<IMH19.ST Allocation du nø d'interaction
      lInteractLogEntry.LOCKTABLE;
      IF lInteractLogEntry.FINDLAST THEN
        "Created Interac. Log Entry No." := lInteractLogEntry."Entry No." + 1
      ELSE
        "Created Interac. Log Entry No." := 1;
      CLEAR(lInteractLogEntry);
      lInteractLogEntry."Entry No." := "Created Interac. Log Entry No.";
      lInteractLogEntry."Creation Date" := CURRENTDATETIME;
      lInteractLogEntry."Creation User ID" := USERID;
      lInteractLogEntry."Time of Interaction" := TIME;
      lInteractLogEntry.INSERT(FALSE);
      "Allocated Interact. Log Entry" := TRUE;
      COMMIT;
      //>>IMH19.ST
      INSERT;
      //<<IMH19.ST
      //IF "Allocated Interact. Log Entry" THEN
      //  FORM.RUN(FORM::"Create Interaction", Rec, "Interaction Template Code")
      //ELSE
      //>>IMH19.ST

      FORM.RUNMODAL(FORM::"Create Interaction",Rec,"Interaction Template Code");

      //MESSAGE(FORMAT("Interaction Finished"));
      //lCreateInteract.SETTABLEVIEW(Rec);
      //lCreateInteract.SETRECORD(Rec);
      //lCreateInteract.RUNMODAL;
      //lCreateInteract.GETRECORD(Rec);

      //<<IMH26.ISAT.EBA
      "Interaction Finished" := TRUE;
      //>>IMH26.ISAT.EBA
    END;

    PROCEDURE PerformNextWizardStatus@6(VAR AttachmentTmp@1001 : Record 5062;pCallFromForm@1100281000 : Boolean);
    VAR
      InteractTmpl@1000 : Record 5064;
    BEGIN
      CASE "Wizard Step" OF
        "Wizard Step"::"1":
          BEGIN
            InteractTmpl.GET("Interaction Template Code");
            //<<IMH10
            "Wizard Step" := "Wizard Step"::"2";
            IF InteractTmpl."Wizard Action" <> InteractTmpl."Wizard Action"::" " THEN
              HandleTrigger(AttachmentTmp, pCallFromForm);
            //IF InteractTmpl."Wizard Action" <> InteractTmpl."Wizard Action"::" " THEN
            //  "Wizard Step" := "Wizard Step"::"2"
            //ELSE
            //  "Wizard Step" := "Wizard Step"::"3";
            //>>IMH10
          END;
        //"Wizard Step"::"2":
        //  BEGIN
        //    HandleTrigger(AttachmentTmp);
        //    "Wizard Step" := "Wizard Step" + 1;
        //  END;
        //"Wizard Step"::"3".."Wizard Step"::"4":
        //  "Wizard Step":= "Wizard Step" + 1;
        //>>IMH10
      END;
    END;

    PROCEDURE PerformPrevWizardStatus@32();
    BEGIN
      CASE "Wizard Step" OF
        "Wizard Step"::"2".."Wizard Step"::"3":
          "Wizard Step" := "Wizard Step"::"1";
        ELSE
          "Wizard Step" := "Wizard Step" - 1;
      END;
    END;

    PROCEDURE CheckStatus@16();
    VAR
      InteractTmpl@1000 : Record 5064;
      Attachment@1001 : Record 5062;
      SalutationFormula@1002 : Record 5069;
    BEGIN
      IF SkipCheckStatus THEN    //IMH12
        EXIT;

      CASE "Wizard Step" OF
        "Wizard Step"::"1":
          BEGIN
            IF "Contact No." = '' THEN
              ERROR(Text006);
            IF "Interaction Template Code" = '' THEN
              ErrorMessage(FIELDCAPTION("Interaction Template Code"));
            //<<IMH10
            //IF"Salesperson Code" = '' THEN
            //  ErrorMessage(FIELDCAPTION("Salesperson Code"));
            //>>IMH10
            IF Date = 0D THEN
              ErrorMessage(FIELDCAPTION(Date));
            IF Description = '' THEN
              ErrorMessage(FIELDCAPTION(Description));

            InteractTmpl.GET("Interaction Template Code");
            IF InteractTmpl."Wizard Action" = InteractTmpl."Wizard Action"::Open THEN
              IF "Attachment No." = 0 THEN
                ErrorMessage(Attachment.TABLECAPTION);
            IF InteractTmpl.HasSalutation THEN BEGIN //IMH07.ST
            Cont.GET("Contact No.");
            SalutationFormula.GET(Cont."Salutation Code","Language Code",0);
            SalutationFormula.GET(Cont."Salutation Code","Language Code",1);
            END; //IMH07.ST
          END;
        //<<IMH10
        //"Wizard Step"::"2":;
        //"Wizard Step"::"3":
        "Wizard Step"::"2":
        //>>IMH10
          BEGIN
            //<<IMH24.PC
            {
            IF AttachmentTemp.FIND('-') THEN
              AttachmentTemp.CALCFIELDS(Attachment);
            IF ("Correspondence Type" = "Correspondence Type"::"E-Mail") AND
               ("Attachment No." = 0)
            THEN
              ERROR(Text008);
            }
            //>>IMH24.PC
          END;
        "Wizard Step"::"4":;
      END;
    END;

    PROCEDURE FinishWizard@18(IsFinish@1000 : Boolean;VAR AttachmentTmp@1004 : Record 5062) : Boolean;
    VAR
      SegManagement@1002 : Codeunit 5051;
      send@1001 : Boolean;
      Flag@1102601000 : Boolean;
      lMarketingSetup@1100281000 : Record 5079;
    BEGIN
      "Interaction Finished" := IsFinish; //IMH06.ST
      Flag := FALSE;

      IF IsFinish THEN
        Flag := TRUE
      ELSE BEGIN
      //<<IMH31.ST
        lMarketingSetup.GET;
        IF NOT lMarketingSetup."Allow Interaction Draft" THEN
          Flag := FALSE
        ELSE
      //>>IMH31.ST
          Flag := CONFIRM(Text007);
      END;
      IF Flag THEN BEGIN
        AttachmentTemp.COPY(AttachmentTmp);
        "Attempt Failed" := NOT "Interaction Successful";
        Subject := Description;
        ProcessPostponedAttachment;
        send := (IsFinish AND ("Correspondence Type" <> "Correspondence Type"::" "));
        //<<IMH32.PC
        SegManagement.SetSkipDeliverTest(SkipDeliverTest);
        IF SkipSend THEN BEGIN
          SegManagement.LogInteraction(Rec,AttachmentTemp,InterLogEntryCommentLineTmp,FALSE,NOT IsFinish);
        //>>IMH32.PC
        END ELSE BEGIN
          SegManagement.LogInteraction(Rec,AttachmentTemp,InterLogEntryCommentLineTmp,send,NOT IsFinish);
        END;
      //<<IMH30.ISAT.EBA
        IF IsFinish THEN
      //>>IMH30.ISAT.EBA
      //<<IMH23.PC
          NotifyExtranet;
      //>>IMH23.PC
      END
      //<<IMH19.ST
      ELSE BEGIN
        IF "Allocated Interact. Log Entry" THEN
          SegManagement.DeleteAllocatedInteraction("Created Interac. Log Entry No.");
      END;
      //DELETE;

      MODIFY;
      //>>IMH19.ST
    END;

    PROCEDURE ErrorMessage@17(FieldName@1000 : Text[1024]);
    BEGIN
      ERROR(Text005,FieldName);
    END;

    PROCEDURE ValidateCorrespondenceType@47();
    VAR
      ErrorText@1000 : Text[80];
    BEGIN
      //<<IMH22.PC
      EXIT;
      //>>IMH22.PC
      IF "Correspondence Type" <> "Correspondence Type":: " " THEN
      IF AttachmentTemp.FIND('-') THEN BEGIN
      ErrorText := AttachmentTemp.CheckCorrespondenceType("Correspondence Type");
      IF ErrorText <> '' THEN
        ERROR(
          Text024 + ErrorText,
          FIELDCAPTION("Correspondence Type"),"Correspondence Type");
      END ELSE
        ERROR(Text025);
    END;

    PROCEDURE HandleTrigger@20(VAR AttachmentTmp@1002 : Record 5062;pCallFromForm@1100281000 : Boolean);
    VAR
      CommonDialogMgt@1001 : Codeunit 412;
      ImportedFileName@1000 : Text[260];
      FileName@1004 : Text[30];
      RBAutoMgt@1102601000 : Codeunit 419;
      Blobref@1102601001 : Record 99008535;
    BEGIN
      InteractTmpl.GET("Interaction Template Code");
      IF NOT AttachmentTemp.Attachment.HASVALUE THEN
        AttachmentTemp.COPY(AttachmentTmp);
      CASE InteractTmpl."Wizard Action" OF
        InteractTmpl."Wizard Action"::Open:
        BEGIN
          TESTFIELD("Attachment No.");
          LoadTempAttachment;
          Subject := Description;
          AttachmentTemp.SetInteractionTemplate("Interaction Template Code"); //IMH03
          IF GUIALLOWED AND (HideWizard <> HideWizard::All) THEN //IMH06.ST
          AttachmentTemp.ShowAttachment(Rec,Description,TRUE);
          AttachmentTmp.COPY(AttachmentTemp);
        END;
        InteractTmpl."Wizard Action"::Import:
        BEGIN
      //<<IMH06.ST
          IF NOT GUIALLOWED THEN
            InteractTmpl.FIELDERROR("Wizard Action");
      //>>IMH06.ST
          ImportedFileName := RBAutoMgt.BLOBImport(Blobref,ImportedFileName,TRUE);
          IF ImportedFileName = '' THEN
            MESSAGE(Text004)
          ELSE BEGIN
            AttachmentTemp.DELETEALL;
            AttachmentTemp.Attachment := Blobref.Blob;
            AttachmentTemp."File Extension" := AttachmentManagement.FileExtension(ImportedFileName);
            AttachmentTemp.INSERT;
            AttachmentTmp.COPY(AttachmentTemp);
          END;
        END;
      END;
    END;

    PROCEDURE LoadTempAttachment@22();
    VAR
      lDocAttachment@1100281000 : Record 50021;
      lNewAtt@1100281001 : Boolean;
      lRBAutoMgt@1100281002 : Codeunit 419;
      lBLOBRef@1100281003 : Record 99008535;
      lAttachmentMgt@1100281004 : Codeunit 50002;
      lInteractionTemp@1100281005 : Record 5064;
      lInteractEntry@1100281006 : Integer;
      lCount@1100281007 : Integer;
    BEGIN
      //IMH01 isat.zw
      IF AttachmentTemp.Attachment.HASVALUE THEN
        EXIT;
      IF "Segment No." = '' THEN
        IF "Line No." <> 0 THEN BEGIN
          lInteractEntry := "Line No.";
          lDocAttachment.SETCURRENTKEY("Interaction Log Entry No.");
          lDocAttachment.SETRANGE("Interaction Log Entry No.", lInteractEntry);
          lCount := lDocAttachment.COUNT;
          lNewAtt := lCount > 1;
        END;

      //    lInteractEntry := "Line No."
      //<<IMH19.ST
      //  ELSE
      //    IF "Allocated Interact. Log Entry" THEN
      //      lInteractEntry := "Created Interac. Log Entry No.";
      //>>IMH19.ST
      //END;
      IF lInteractEntry <> 0 THEN BEGIN
        lDocAttachment.SETCURRENTKEY("Interaction Log Entry No.");
        lDocAttachment.SETRANGE("Interaction Log Entry No.", lInteractEntry);
        lCount := lDocAttachment.COUNT;
        lNewAtt := lCount > 1;
      END;
      IF (lInteractEntry = 0) OR lNewAtt THEN BEGIN
        Attachment.GET("Attachment No.");
        Attachment.CALCFIELDS(Attachment);
        AttachmentTemp.DELETEALL;
        AttachmentTemp.WizEmbeddAttachment(Attachment);
        AttachmentTemp."No." := 0;
        AttachmentTemp."Read Only" := FALSE;
        //<<IMH09
        IF lInteractionTemp.GET("Interaction Template Code") THEN
          IF lInteractionTemp."Attachment Read Only" THEN
            AttachmentTemp."Read Only" := TRUE;
        //>>IMH09
        AttachmentTemp.INSERT;
      END ELSE BEGIN
        IF lCount = 1 THEN BEGIN
          lDocAttachment.FINDFIRST;
          AttachmentTemp.DELETEALL;
          //lRBAutoMgt.BLOBImport(lBLOBRef,lAttachmentMgt.GetFilePath(lDocAttachment),FALSE);
          AttachmentTemp.Attachment.IMPORT(lAttachmentMgt.GetFilePath(lDocAttachment));
          //AttachmentTemp.Attachment := lBLOBRef.Blob;
          AttachmentTemp."No." := 0;
          AttachmentTemp."Read Only" := FALSE;
          //<<IMH09
          IF lInteractionTemp.GET("Interaction Template Code") THEN
            IF lInteractionTemp."Attachment Read Only" THEN
              AttachmentTemp."Read Only" := TRUE;
          //>>IMH09
          AttachmentTemp."File Extension" := lDocAttachment."File Extension";
          AttachmentTemp.INSERT;
        END;
      END;
    END;

    PROCEDURE ProcessPostponedAttachment@19();
    BEGIN
      IF "Attachment No." <> 0 THEN BEGIN
        LoadTempAttachment;
        IF "Line No." <> 0 THEN
          IF ResumedAttachmentNo <> 0 THEN          //IMH01 isat.zw
            "Attachment No." := ResumedAttachmentNo;
      END ELSE
        IF Attachment.GET(ResumedAttachmentNo) THEN
          Attachment.RemoveAttachment(FALSE);
    END;

    PROCEDURE LoadAttachment@24();
    BEGIN
      IF "Line No." <> 0 THEN BEGIN
        InterLogEntryCommentLine.SETRANGE("Entry No.","Line No.");
        IF InterLogEntryCommentLine.FIND('-') THEN
          REPEAT
            InterLogEntryCommentLineTmp.INIT;
            InterLogEntryCommentLineTmp.TRANSFERFIELDS(InterLogEntryCommentLine,FALSE);
            InterLogEntryCommentLineTmp."Line No." := InterLogEntryCommentLine."Line No.";
            InterLogEntryCommentLineTmp.INSERT;
          UNTIL InterLogEntryCommentLine.NEXT =0;
        ResumedAttachmentNo := "Attachment No.";
      END;
      IF "Attachment No." <> 0 THEN
        LoadTempAttachment;
    END;

    PROCEDURE MakePhoneCallFromContact@45(VAR Cont@1000 : Record 5050;ToDo@1001 : Record 5080;TableNo@1005 : Integer;PhoneNo@1003 : Text[30];ContAltAddrCode@1002 : Code[10]);
    BEGIN
      INIT;
      IF Cont.Type = Cont.Type::Person THEN
        SETRANGE("Contact No.",Cont."No.")
      ELSE
        SETRANGE("Contact Company No.",Cont."Company No.");
      IF PhoneNo <> '' THEN
        "Contact Via" := PhoneNo
      ELSE
        "Contact Via" := Cont."Phone No.";
      VALIDATE("Contact No.",Cont."No.");
      "Contact Name" := Cont.Name;
      VALIDATE(Date,TODAY);
      IF ContAltAddrCode <> '' THEN
        "Contact Alt. Address Code" := ContAltAddrCode;
      IF TableNo = DATABASE::"To-do" THEN
        "To-do No." := ToDo."No.";
      StartWizard2;
    END;

    PROCEDURE StartWizard2@34();
    VAR
      InteractionTmplSetup@1000 : Record 5122;
      Campaign@1001 : Record 5071;
    BEGIN
      InteractionTmplSetup.GET;
      InteractionTmplSetup.TESTFIELD(InteractionTmplSetup."Outg. Calls");

      "Wizard Step" := "Wizard Step"::"1";
      IF Date = 0D THEN
        Date := TODAY;
      "Time of Interaction" := TIME;
      "Interaction Successful" := TRUE;
      "Dial Contact" := TRUE;

      IF Campaign.GET(GETFILTER("Campaign No.")) THEN
        "Campaign Description" := Campaign.Description;
      "Wizard Contact Name" := GetContactName;

      INSERT;
      VALIDATE("Interaction Template Code",InteractionTmplSetup."Outg. Calls");
      FORM.RUNMODAL(FORM::"Make Phone Call",Rec,"Contact Via");
    END;

    PROCEDURE PerformNextWizardStatus2@26();
    VAR
      InteractTmpl@1000 : Record 5064;
    BEGIN
      "Wizard Step" := "Wizard Step" + 1;
    END;

    PROCEDURE PerformPrevWizardStatus2@35();
    BEGIN
      "Wizard Step" := "Wizard Step" - 1;
    END;

    PROCEDURE PerformPostStep2@46();
    BEGIN
      CASE "Wizard Step" OF
        "Wizard Step"::"2":
          IF "Dial Contact" THEN BEGIN
            IF TAPIManagement.Dial("Contact Via") THEN
              "Dial Contact" := FALSE;
          END ELSE
            ERROR(Text010);
      END;
    END;

    PROCEDURE CheckStatus2@25();
    VAR
      InteractTmpl@1000 : Record 5064;
      Attachment@1001 : Record 5062;
      SalutationFormula@1002 : Record 5069;
    BEGIN
      IF "Wizard Step" = "Wizard Step"::"1" THEN BEGIN
        IF "Dial Contact" AND ("Contact Via" = '') THEN
          ERROR(Text013);
        IF Date = 0D THEN
          ErrorMessage(FIELDCAPTION(Date));
        IF Description = '' THEN
          ErrorMessage(FIELDCAPTION(Description));
        IF "Salesperson Code" = '' THEN
          ErrorMessage(FIELDCAPTION("Salesperson Code"));
      END;
    END;

    PROCEDURE FinishWizard2@23() : Boolean;
    VAR
      SegManagement@1002 : Codeunit 5051;
      TempAttachment@1000 : TEMPORARY Record 5062;
      SegLine@1001 : Record 5077;
    BEGIN
      "Attempt Failed" := NOT "Interaction Successful";

      //<<IMH32.PC
      SegManagement.SetSkipDeliverTest(SkipDeliverTest);
      //>>IMH32.PC
      SegManagement.LogInteraction(Rec,TempAttachment,InterLogEntryCommentLineTmp,FALSE,FALSE);

      IF SegLine.GET("Segment No.","Line No.") THEN BEGIN
        SegLine.LOCKTABLE;
        SegLine."Contact Via" := "Contact Via";
        SegLine."Wizard Step" := SegLine."Wizard Step"::" ";
        SegLine.MODIFY;
      END;
    END;

    PROCEDURE ShowComment@27();
    BEGIN
      FORM.RUNMODAL(FORM::"Inter. Log Entry Comment Sheet",InterLogEntryCommentLineTmp);
    END;

    PROCEDURE CommentExists@28() : Boolean;
    BEGIN
      EXIT(NOT InterLogEntryCommentLineTmp.ISEMPTY);
    END;

    PROCEDURE GetComments@64(VAR InterLogEntryCommentLine@1001 : Record 5123);
    BEGIN
      InterLogEntryCommentLine.DELETEALL;
      IF InterLogEntryCommentLineTmp.FIND('-') THEN
        REPEAT
          InterLogEntryCommentLine := InterLogEntryCommentLineTmp;
          InterLogEntryCommentLine.INSERT;
        UNTIL InterLogEntryCommentLineTmp.NEXT = 0;
    END;

    PROCEDURE SetComments@53(VAR InterLogEntryCommentLine@1001 : Record 5123);
    BEGIN
      InterLogEntryCommentLineTmp.DELETEALL;

      IF InterLogEntryCommentLine.FINDSET THEN
        REPEAT
          InterLogEntryCommentLineTmp := InterLogEntryCommentLine;
          InterLogEntryCommentLineTmp.INSERT;
        UNTIL InterLogEntryCommentLine.NEXT = 0;
    END;

    PROCEDURE CreateMailFromContact@40(VAR Cont@1000 : Record 5050;Email@1001 : Text[80]);
    BEGIN
      DELETEALL;
      INIT;
      IF Cont.Type = Cont.Type::Person THEN
        SETRANGE("Contact No.",Cont."No.")
      ELSE
        SETRANGE("Contact Company No.",Cont."Company No.");
      IF Email <> '' THEN
        "Contact Via" := Email
      ELSE
        "Contact Via" := Cont."E-Mail";
      VALIDATE("Contact No.",Cont."No.");
      VALIDATE(Date,TODAY);

      StartWizard3;
    END;

    PROCEDURE StartWizard3@37();
    VAR
      InteractionTmplSetup@1000 : Record 5122;
    BEGIN
      "Wizard Step" := "Wizard Step"::"1";
      "Interaction Successful" := TRUE;
      "Mail Contact" := TRUE;
      IF "Contact No." = '' THEN
        "Contact No." := "Contact Company No.";
      "Wizard Contact Name" := GetContactName;
      INSERT;
      InteractionTmplSetup.GET;
      VALIDATE("Interaction Template Code",InteractionTmplSetup."E-Mails");
      "Correspondence Type" := "Correspondence Type"::"E-Mail";
      MODIFY;

      FORM.RUNMODAL(FORM::"Create Mail",Rec);
    END;

    PROCEDURE PerformNextWizardStatus3@31();
    VAR
      InteractTmpl@1000 : Record 5064;
      Opp@1001 : Record 5092;
    BEGIN
      "Wizard Step" := "Wizard Step" + 1;
    END;

    PROCEDURE PerformPrevWizardStatus3@36();
    BEGIN
      "Wizard Step" := "Wizard Step" - 1;
    END;

    PROCEDURE PerformPostStep3@44();
    BEGIN
      CASE "Wizard Step" OF
        "Wizard Step"::"2":
          IF "Mail Contact" THEN BEGIN
            IF Mail.NewMessage("Contact Via",'',Subject,'','',TRUE) THEN BEGIN
              "Mail Contact" := FALSE;
              "Mail GUID" := Mail.GetMailGUIDValue;
              "Time of Interaction" := TIME;
              MODIFY;
            END ELSE
              ERROR(FORMAT(Mail.GetErrorCode) + ' : ' + Mail.GetErrorDesc + '.');
          END;
      END;
    END;

    PROCEDURE CheckStatus3@30();
    VAR
      InteractTmpl@1000 : Record 5064;
      Attachment@1001 : Record 5062;
      SalutationFormula@1002 : Record 5069;
    BEGIN
      IF "Wizard Step" = "Wizard Step"::"1" THEN BEGIN
        IF Date = 0D THEN
          ErrorMessage(FIELDCAPTION(Date));
        IF "Mail Contact" AND ("Contact Via" = '') THEN
          ErrorMessage(FIELDCAPTION("Contact Via"));
        IF "Mail Contact" AND ("Contact Via" <> '') THEN BEGIN
          IF NOT ContactThrough.FIND('-') THEN
            Mail.CollectAddresses("Contact No.",ContactThrough,FALSE);
          IF NOT Mail.ValidateEmail(ContactThrough,"Contact Via") THEN
            ERROR(Text023,"Contact Via",Cont.TABLECAPTION);
        END;
        IF Subject = '' THEN
          ErrorMessage(FIELDCAPTION(Subject));
        IF "Salesperson Code" = '' THEN
          ErrorMessage(FIELDCAPTION("Salesperson Code"));
      END;
    END;

    PROCEDURE FinishWizard3@29() : Boolean;
    VAR
      SegLine@1002 : Record 5077;
      TempAttachment@1001 : Record 5062;
      SegManagement@1000 : Codeunit 5051;
    BEGIN
      "Attempt Failed" := NOT "Interaction Successful";
      Description := Subject;

      "Wizard Contact Name" := '';
      "Opportunity Description" := '';
      "Campaign Description" := '';
      "Wizard Step" := "Wizard Step"::" ";
      "Interaction Successful" := FALSE;
      "Dial Contact" := FALSE;
      "Mail Contact" := FALSE;

      //<<IMH32.PC
      SegManagement.SetSkipDeliverTest(SkipDeliverTest);
      //>>IMH32.PC
      SegManagement.LogInteraction(Rec,TempAttachment,InterLogEntryCommentLineTmp,FALSE,FALSE);

      IF SegLine.GET("Segment No.","Line No.") THEN BEGIN
        SegLine.LOCKTABLE;
        SegLine."Contact Via" := "Contact Via";
        SegLine.MODIFY;
      END;
    END;

    PROCEDURE SetHideWizard@1100281003(pHideWizardOption@1100281000 : Option);
    BEGIN
      //IMH06.ST
      HideWizard := pHideWizardOption;
    END;

    LOCAL PROCEDURE PostWizard@1100281004();
    VAR
      lAttachTemp@1100281000 : Record 5062;
    BEGIN
      //IMH06.ST
      "Wizard Step" := "Wizard Step"::"1";
      "Interaction Successful" := TRUE;
      VALIDATE(Date,WORKDATE);
      //<<IMH37.ACO
      VALIDATE("Time of Interaction", TIME);
      //>>IMH37.ACO
      INSERT;
      CheckStatus;
      //<<IMH10
      // pice jointe
      IF GUIALLOWED AND (HideWizard <> HideWizard::All) THEN
        PerformNextWizardStatus(lAttachTemp, FALSE)
      ELSE
        "Wizard Step" += 1;
      {
      IF "Wizard Step" = "Wizard Step"::"2" THEN BEGIN
        // pice jointe
        IF GUIALLOWED AND (HideWizard <> HideWizard::All) THEN BEGIN
          CheckStatus;
          PerformNextWizardStatus(lAttachTemp);
        END
        ELSE
          "Wizard Step" += 1;
      END;
      }
      //>>IMH10
      CheckStatus;
      PerformNextWizardStatus(lAttachTemp,FALSE);
      FinishWizard(TRUE, lAttachTemp)
    END;

    LOCAL PROCEDURE GetServiceContact@1100281005(VAR pContactNo@1100281000 : Code[20]) : Boolean;
    VAR
      lService@1100281001 : Record 50066;
      lIntervention@1100281002 : Record 50075;
      lContBusRel@1100281003 : Record 5054;
      lServiceHeader@1100281004 : Record 5900;
      lContact@1100281005 : Record 5050;
      lCustomer@1100281006 : Record 18;
      lContactNo@1100281007 : Code[20];
      lContactCompany@1000000000 : Record 5050;
      lCorporateRegion@1100288008 : Record 50058;
      lServiceOrderType@1100281008 : Record 5903;
      lProvider@1100281009 : Record 50000;
    BEGIN
      //IMH06.ST
      IF "Service No." = '' THEN
        EXIT;

      IF NOT InteractTmpl.GET("Interaction Template Code") THEN
        EXIT;
      CASE InteractTmpl."Service Contact Dest." OF
        InteractTmpl."Service Contact Dest."::Beneficiairy : BEGIN
          IF lService.GET("Service No.") THEN BEGIN
            pContactNo := lService."Contact No.";
            EXIT(TRUE);
          END;
        END;
        InteractTmpl."Service Contact Dest."::Corporate : BEGIN
          IF NOT lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, "Service Header No.") THEN
            CLEAR(lServiceHeader);
          IF lServiceHeader."Corporate Contact No." <> '' THEN BEGIN
            pContactNo := lServiceHeader."Corporate Contact No.";
            EXIT(TRUE);
          END
          ELSE BEGIN
            lContBusRel.SETCURRENTKEY("Link to Table","No.");
            lContBusRel.SETRANGE("Link to Table", lContBusRel."Link to Table"::Customer);
            lContBusRel.SETRANGE("No.", lServiceHeader."Corporate No.");
            IF lContBusRel.FINDFIRST THEN BEGIN
              pContactNo := lContBusRel."Contact No.";
              EXIT(TRUE);
            END;
          END;
        END;
        InteractTmpl."Service Contact Dest."::Provider :
          IF lIntervention.GET("Service Header No.", "Intervention Line No.") THEN BEGIN
            lIntervention.TESTFIELD("Provider No.");
            pContactNo := lIntervention."Provider No.";

            lContactCompany.GET(pContactNo);

            lContact.RESET;
            lContact.SETCURRENTKEY("Company No.");
            lContact.SETRANGE("Company No.",pContactNo);
            lContact.SETRANGE("Preferred Contact DGS",TRUE);
            IF NOT lContact.ISEMPTY THEN
              IF lContact.FINDFIRST THEN
                pContactNo := lContact."No.";
            EXIT(TRUE);
          END ELSE BEGIN
            IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, "Service Header No.") THEN BEGIN
              IF lServiceOrderType.GET(lServiceHeader."Service Order Type") THEN BEGIN
                IF lServiceOrderType."Provider Search" = lServiceOrderType."Provider Search"::UniqueProvider THEN
                  IF lProvider.GET(lServiceOrderType."Provider No.") THEN BEGIN
                    pContactNo := lServiceOrderType."Provider No.";
                    EXIT(TRUE);
                  END;
              //<<IMH35
              END;
              IF lServiceHeader."Provider No." <> '' THEN BEGIN
                pContactNo := lServiceHeader."Provider No.";

                IF lContactCompany.GET(pContactNo) THEN;

                lContact.RESET;
                lContact.SETCURRENTKEY("Company No.");
                lContact.SETRANGE("Company No.",pContactNo);
                lContact.SETRANGE("Preferred Contact DGS",TRUE);
                IF NOT lContact.ISEMPTY THEN
                  IF lContact.FINDFIRST THEN
                    pContactNo := lContact."No.";
                EXIT(TRUE);
              END;
            END;
            //>>IMH35
          END;
        InteractTmpl."Service Contact Dest."::"Declaration Contact" : BEGIN
          IF NOT lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, "Service Header No.") THEN
            CLEAR(lServiceHeader);
          IF lServiceHeader."Declaration Contact No." <> '' THEN BEGIN
            pContactNo := lServiceHeader."Declaration Contact No.";
            EXIT(TRUE);
          //<<IMH33
          END ELSE BEGIN
            pContactNo := lServiceHeader.GetDeclarationContact(lServiceHeader."Corporate No.");
            EXIT(TRUE);
          END;
          //>>IMH33
          {
          IF lService.GET("Service No.") THEN BEGIN
            IF lCustomer.GET(lService."Corporate No.") THEN
              IF lCustomer.GetContactNo(lContactNo) THEN BEGIN
                lContact.SETCURRENTKEY("Company No.");
                lContact.SETRANGE("Company No.", lContactNo);
                lContact.SETRANGE("Declaration Contact", TRUE);
                lContact.SETRANGE("Corporate Region Code", lService."Corporate Region Code");
                IF lContact.FINDFIRST THEN BEGIN
                  pContactNo := lContact."No.";
                  EXIT(TRUE);
                END ELSE BEGIN
                  lContact.SETRANGE("Corporate Region Code");
                  IF lContact.FINDFIRST THEN BEGIN
                    pContactNo := lContact."No.";
                    EXIT(TRUE);
                  END;
                END;
              END;
          END;
          }
        END;
        InteractTmpl."Service Contact Dest."::"Corporate Region" : BEGIN
          IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, "Service Header No.") THEN
            IF lCorporateRegion.GET(lServiceHeader."Corporate No.", lServiceHeader."Corporate Region Code") THEN BEGIN
              lContBusRel.SETCURRENTKEY("Link to Table","No.");
              lContBusRel.SETRANGE("Link to Table", lContBusRel."Link to Table"::Customer);
              lContBusRel.SETRANGE("No.", lCorporateRegion."Sell-to Customer No.");
              IF lContBusRel.FINDFIRST THEN BEGIN
                pContactNo := lContBusRel."Contact No.";
                EXIT(TRUE);
              END;
            END;
        END;
        //<<IMH36
        InteractTmpl."Service Contact Dest."::"Princ. Expert Contact" : BEGIN
          IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, "Service Header No.") THEN BEGIN
            lServiceHeader.TESTFIELD("Princ. Expert Contact No.");
            pContactNo := lServiceHeader."Princ. Expert Contact No.";
            EXIT(TRUE);
          END;
        END;
        InteractTmpl."Service Contact Dest."::"Expert Contact" : BEGIN
          IF lServiceHeader.GET(lServiceHeader."Document Type"::Invoice, "Service Header No.") THEN BEGIN
            lServiceHeader.TESTFIELD("Expert Contact No.");
            pContactNo := lServiceHeader."Expert Contact No.";
            EXIT(TRUE);
          END;
        END;
        //>>IMH36
      END;
    END;

    LOCAL PROCEDURE GetSalesperson@1100281007() : Code[10];
    VAR
      lApplMgt@1100281000 : Codeunit 1;
    BEGIN
      //IMH06.ST
      IF GETFILTER("Salesperson Code") <> '' THEN
        EXIT(GETRANGEMIN("Salesperson Code"));
      IF "Segment No." <> '' THEN
        IF SegHeader.GET("Segment No.") THEN
          IF SegHeader."Salesperson Code" <> '' THEN
            EXIT(SegHeader."Salesperson Code");

      IF lApplMgt.GetUserCode(1) <> '' THEN
        EXIT(lApplMgt.GetUserCode(1));

      IF "Contact No." <> '' THEN
        IF Cont.GET("Contact No.") THEN
          IF Cont."Salesperson Code" <> '' THEN
            EXIT(Cont."Salesperson Code");
    END;

    PROCEDURE SetSkipCheckStatus@1100281014(pSkipCheckStatus@1100281000 : Boolean);
    BEGIN
      //IMH12
      SkipCheckStatus := pSkipCheckStatus;
    END;

    LOCAL PROCEDURE GetServiceFilter@1100281019();
    VAR
      lUserSetup@1100281000 : Record 91;
      lShowingFilter@1100281001 : Code[1024];
    BEGIN
      //SETFILTER("DGS Filter", FALSE);
      //SETFILTER("DPR Filter", FALSE);
      //SETFILTER("DFC Filter", FALSE);
      SETFILTER("Showing Filter", '');
      IF NOT lUserSetup.GET(USERID) THEN
        EXIT;

      IF lUserSetup."Show To DGS" THEN
        lShowingFilter := '1???';//IMH39
      IF lUserSetup."Show To DPR" THEN BEGIN
        IF lShowingFilter = '' THEN
          lShowingFilter := '?1??'//IMH39
        ELSE
          lShowingFilter += '|' + '?1??';//IMH39
      END;
      IF lUserSetup."Show To DFC" THEN BEGIN
        IF lShowingFilter = '' THEN
          lShowingFilter := '??1?'//IMH39
        ELSE
          lShowingFilter += '|' + '??1?';//IMH39
      END;
      IF lUserSetup."Show To DQP" THEN BEGIN
        IF lShowingFilter = '' THEN
          lShowingFilter := '???1'//IMH39
        ELSE
          lShowingFilter += '|' + '???1';//IMH39
      END;


      SETFILTER("Showing Filter", lShowingFilter);
    END;

    PROCEDURE NotifyExtranet@1100281017();
    VAR
      lInteractionTemplate@1100281000 : Record 5064;
      lProviderNotificationMgt@1100281001 : Codeunit 50148;
    BEGIN
      // IMH23.PC
      // Cr une notification  destination du prestataire si le modle d'interaction est top "notifier extranet"
      IF NOT lInteractionTemplate.GET("Interaction Template Code") THEN BEGIN
        EXIT;
      END;
      IF NOT lInteractionTemplate."Notify To Extranet" THEN BEGIN
        EXIT;
      END;

      lProviderNotificationMgt.CreateNotifFromInteraction("Service Header No.","Intervention Line No.", lInteractionTemplate.Description
      );
    END;

    LOCAL PROCEDURE CopyFromInit@1100281022(pSegLine@1100281000 : Record 5077);
    BEGIN
      //IMH28.ST
      "Force Correspondence Type" := pSegLine."Force Correspondence Type"; //IMH19.ST
      IF "Force Correspondence Type" THEN
        "Correspondence Type" := pSegLine."Correspondence Type";
      "Process Code" := pSegLine."Process Code";
      "Document Type" := pSegLine."Document Type";
      "Document No." := pSegLine."Document No.";
    END;

    PROCEDURE SetSkipDeliverTest@1000000001(pSkipDeliverTest@1000000000 : Boolean);
    BEGIN
      // IMH32.PC
      SkipDeliverTest := pSkipDeliverTest;
    END;

    PROCEDURE SetSkipSend@1000000000(pSkipSend@1000000000 : Boolean);
    BEGIN
      // IMH32.PC
      SkipSend := pSkipSend;
    END;

    BEGIN
    {
      /** @r IMH37 @d 17/10/13 @s ISAT.ACO @v IMH6.01.348 @s DARVA MATMUT Lot 1
          @a affectation valeur "time of interaction" lors de cration interaction pour intervention*/
      /** @r IMH36 @d 04/03/13 @a ISAT.ZW @v IMH6.01.340 @s NEP IMH 4 @h 4340
          @c Gestion de destinataire service : Expert et cabinet Expert */
      /** @r IMH35 @d 04/03/13 @a ISAT.ZW @v IMH6.01.340 @s NEP IMH 4 @h 4264 @c Gestion Destinataire prestataire sur les LP */
      /** @r IMH34 @d 16/05/12 @a ISAT.LLT @v IMH6.01.020 @s Gestion du service @h mantis 3436
            @c Ajout filtre user DQP */
      /** @r IMH33 @d 02/05/12 @a ISAT.ZW @v IMH6.01.020 @s Gestion du service @h mantis 3421
            @c Gestion des contacts dclaration sans rgion GC */
      /** @r IMH32 @d 23/04/12 @a ISAT.PC @v IMH6.01.134 @s DARVA @h 3325
          @c ajout fonction SetSkipSend & SetSkipDeliverTest */
      /** @r IMH31 @d 05/04/12 @a ISAT.ST @v IMH6.01.108 @s Interactions @h 3083 */
      /** @r IMH30 @d 15/03/12 @a ISAT.EBA @v IMH6.01.165 @s Extranet @h mantis1646 @c Correctif */
      /** @r IMH29 @d 15/02/12 @a ISAT.ZW @v IMH6.01.138 @s Gestion des visites
          @c Ajout champs Nø Visite */
      /** @r IMH28 @d 05/12/11 @a ISAT.ST @v IMH6.01.108 @s Gestion des interactions @c Ajout champ "Process Code" */
      /** @r IMH27 @d 14/11/11 @a ISAT.ST @v IMH6.01.108 @s Interactions @c Description sur notification prestataire */
      /** @r IMH26 @d 09/11/11 @a ISAT.EBA @v IMH6.01.108 @s Interactions  */
      /** @r IMH25 @d 03/11/11 @a ISAT.ST @v IMH6.01.108 @s Interactions @c Ajout champ Force Correspondence Type pour changement IMH19 */
      /** @r IMH24 @d 18/10/11 @a ISAT.PC @v IMH6.01.108 @s Interactions @c Dsactivation code standard */
      /** @r IMH23 @d 08/10/11 @a ISAT.PC @v IMH6.01.165 @s Extranet @h mantis1646 @c AJout fonction NotifyExtranet */
      /** @r IMH22 @d 28/09/11 @a ISAT.PC @v IMH6.01.108 @s Interactions @h mantis1556 @c Corection */
      /** @r IMH21 @d 19/08/11 @a ISAT.ST @v IMH6.01.108 @s Interactions @c Finalisation interactions achats */
      /** @r IMH20 @d 06/08/11 @A ISAT.ST @v IMH6.01.108 @s Interactions
          @c Ajout champ 50069 pour filtre modle interaction + fonction GetServiceFilter */
      /** @r IMH19 @d 01/07/11 @a ISAT.ST @v IMH6.01.108 @s Interactions @c Optimisations verrous
          @c AJout champ 50111 Allocated Interact. Log Entry
          @c Ajout paramtre pCallFromForm dans PerformNextWizardStatus / HandleTrigger
          @c Forcer le mode correspondance */
      /** @r IMH18 @d 12/05/11 @a ISAT.ZW @v IMH6.01.108 @s Interactions @c Gestion contact Admin. */
      /** @r IMH17 @d 17/03/11 @a ISAT.ST @v IMH6.01.138 @s Optimisations
          @c MaintainSIFTIndex  non sur la cl primaire */
      /** @r IMH16 @d 09/03/11 @a ISAT.ZW @v IMH6.01.108 @s Interactions @c Correction gestion heure interaction */
      /** @r IMH15 @d 09/03/11 @a ISAT.ZW @v IMH6.01.108 @s Interactions @c Correction gestion heure interaction */
      /** @r IMH14 @d 08/03/11 @a ISAT.LLT @v IMH6.01.108 @s Interactions @c Gestion prestataire */
      /** @r IMH13 @d 28/02/11 @a ISAT.ZW @v IMH6.01.108 @s Interactions
          @c changer TableRelation Interaction templage code pour
          @c grer l'affichage des listes de modles d'interaction en fonction de la table sur laquelle on se trouve */
      /** @r IMH12 @d 25/02/11 @a ISAT.ZW @v IMH6.01.108 @s Interactions
          @c Ajout champ Created Interac. Log Enty No.
          @c Skipper le controle du code modle interaction */
      /** @r IMH11 @d 25/02/11 @a ISAT.ZW @v IMH6.01.108 @s Interactions @c Fonction CreateInteracFromDocQueue */
      /** @r IMH10 @d 17/02/11 @a ISAT.ZW @v IMH6.01.108 @s Interactions @c Rorganiser wizard cration interaction */
      /** @r IMH09 @d 16/02/11 @a ISAT.ZW @v IMH6.01.108 @s Interactions @c Document joint en readOnly en ouverture */
      /** @r IMH08 @d 25/01/11 @a ISAT.LLT @v IMH6.01.108 @s Interactions @c Renommage champ Correspondance Type */
      /** @r IMH07 @d 25/01/11 @a ISAT.ST @v IMH6.01.108 @s Interaction
          @c Ajout CreateInteracFromIntervQuote
          @c Test des salutations */
      /** @r IMH06 @d 12/01/11 @a ISAT.ST @v IMH6.01.108 @s Interaction
          @c Paramtre HideWizard
          @c Ajout champ 50000 Interaction Finished pour valeur de retour
          @c Ajout Contact service sur le modle
          @c Valeur de retour sur les fonctions CreateInteraction */
      /** @r IMH05 @d 10/01/11 @a ISAT.PC @v IMH6.01.108 @s Interaction @c Ajout de la fonction CreateInteracFromCompleteTask */
      /** @r IMH04 @d 05/01/11 @a ISAT.ST @v IMH6.01.108 @s Interaction @c Amliorations/ergo */
      /** @r IMH03 @d 15/12/10 @a ISAT.LLT @v IMH6.01.108 @s Interaction @c Gestion champs de fusion */
      /** @r IHM02 @d 14/12/10 @a ISAT.ST @v IMH6.01.011 @s Gestion du service @c Renommage Campagne en venement exceptionnel */
      /** @r IHM01 @d 30/11/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service
          @c Ajout champs Nø service + Ligne produit + intervention */
      /** @r IHM01 @d 26/11/10 @a ISAT.ZW @v IMH6.01.004 @s GED @c Modification table Doc joint */
    }
    END.
  }
}