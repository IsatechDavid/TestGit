OBJECT Table 5200 Employee
{
  OBJECT-PROPERTIES
  {
    Date=25/06/12;
    Time=15:09:33;
    Modified=Yes;
    Version List=NAVW16.00,NAVFR5.00;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,First Name,Middle Name,Last Name;
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 HumanResSetup.GET;
                 HumanResSetup.TESTFIELD("Employee Nos.");
                 NoSeriesMgt.InitSeries(HumanResSetup."Employee Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               DimMgt.UpdateDefaultDim(
                 DATABASE::Employee,"No.",
                 "Global Dimension 1 Code","Global Dimension 2 Code");

               TouchRecord(TRUE); //IMH01 isat.zw
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
               IF Res.READPERMISSION THEN
                 EmployeeResUpdate.HumanResToRes(xRec,Rec);
               IF SalespersonPurchaser.READPERMISSION THEN
                 EmployeeSalespersonUpdate.HumanResToSalesPerson(xRec,Rec);

               TouchRecord(FALSE); //IMH01 isat.zw
               OnModify(xRec); //IMH01 isat.zw
             END;

    OnDelete=BEGIN
               AlternativeAddr.SETRANGE("Employee No.","No.");
               AlternativeAddr.DELETEALL;

               EmployeeQualification.SETRANGE("Employee No.","No.");
               EmployeeQualification.DELETEALL;

               Relative.SETRANGE("Employee No.","No.");
               Relative.DELETEALL;

               EmployeeAbsence.SETRANGE("Employee No.","No.");
               EmployeeAbsence.DELETEALL;

               MiscArticleInformation.SETRANGE("Employee No.","No.");
               MiscArticleInformation.DELETEALL;

               ConfidentialInformation.SETRANGE("Employee No.","No.");
               ConfidentialInformation.DELETEALL;

               HumanResComment.SETRANGE("No.","No.");
               HumanResComment.DELETEALL;

               DimMgt.DeleteDefaultDim(DATABASE::Employee,"No.");
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;
               TouchRecord(FALSE); //IMH01 isat.zw
             END;

    CaptionML=[ENU=Employee;
               FRA=Salari‚];
    LookupFormID=Form5201;
    DrillDownFormID=Form5201;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Name;
                                                   OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  HumanResSetup.GET;
                                                                  NoSeriesMgt.TestManual(HumanResSetup."Employee Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              FRA=Nø] }
    { 2   ;   ;First Name          ;Text30        ;CaptionML=[ENU=First Name;
                                                              FRA=Pr‚nom] }
    { 3   ;   ;Middle Name         ;Text30        ;CaptionML=[ENU=Middle Name;
                                                              FRA=Nom de jeune fille] }
    { 4   ;   ;Last Name           ;Text50        ;CaptionML=[ENU=Last Name;
                                                              FRA=Nom usuel] }
    { 5   ;   ;Initials            ;Text30        ;OnValidate=BEGIN
                                                                IF ("Search Name" = UPPERCASE(xRec.Initials)) OR ("Search Name" = '') THEN
                                                                  "Search Name" := Initials;
                                                              END;

                                                   CaptionML=[ENU=Initials;
                                                              FRA=Initiales] }
    { 6   ;   ;Job Title           ;Text30        ;TableRelation="Job Responsibility".Code;
                                                   CaptionML=[ENU=Job Title;
                                                              FRA=Fonction] }
    { 7   ;   ;Search Name         ;Code30        ;CaptionML=[ENU=Search Name;
                                                              FRA=Nom de recherche] }
    { 8   ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              FRA=Adresse] }
    { 9   ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              FRA=Adresse (2Šme ligne)] }
    { 10  ;   ;City                ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code","Country/Region Code");            //IMH02 Ajout Code pays
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity(City,"Post Code","Country/Region Code",TRUE);         //IMH02 Ajout Code pays
                                                            END;

                                                   CaptionML=[ENU=City;
                                                              FRA=Ville] }
    { 11  ;   ;Post Code           ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code","Country/Region Code");        //IMH02 Ajout Code pays
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode(City,"Post Code","Country/Region Code",TRUE);    //IMH02 Ajout Code pays
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              FRA=Code postal] }
    { 12  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              FRA=R‚gion] }
    { 13  ;   ;Phone No.           ;Text30        ;OnValidate=VAR
                                                                lPhoneStd@1100281000 : Codeunit 50099;
                                                              BEGIN
                                                                lPhoneStd.ValidatePhoneNo(
                                                                  DATABASE::Employee,FIELDNO("Phone No."),"Country/Region Code","Phone No."); //IMH03.ST
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              FRA=Nø t‚l‚phone] }
    { 14  ;   ;Mobile Phone No.    ;Text30        ;OnValidate=VAR
                                                                lPhoneStd@1100281000 : Codeunit 50099;
                                                              BEGIN
                                                                lPhoneStd.ValidatePhoneNo(
                                                                  DATABASE::Employee,FIELDNO("Mobile Phone No."),"Country/Region Code","Mobile Phone No."); //IMH03.ST
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Mobile Phone No.;
                                                              FRA=Nø t‚l‚phone mobile] }
    { 15  ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=E-Mail;
                                                              FRA=E-mail] }
    { 16  ;   ;Alt. Address Code   ;Code10        ;TableRelation="Alternative Address".Code WHERE (Employee No.=FIELD(No.));
                                                   CaptionML=[ENU=Alt. Address Code;
                                                              FRA=Code adresse secondaire] }
    { 17  ;   ;Alt. Address Start Date;Date       ;CaptionML=[ENU=Alt. Address Start Date;
                                                              FRA=Date d‚but adresse secondaire] }
    { 18  ;   ;Alt. Address End Date;Date         ;CaptionML=[ENU=Alt. Address End Date;
                                                              FRA=Date fin adresse secondaire] }
    { 19  ;   ;Picture             ;BLOB          ;CaptionML=[ENU=Picture;
                                                              FRA=Image];
                                                   SubType=Bitmap }
    { 20  ;   ;Birth Date          ;Date          ;CaptionML=[ENU=Birth Date;
                                                              FRA=Date de naissance] }
    { 21  ;   ;Social Security No. ;Text30        ;CaptionML=[ENU=Social Security No.;
                                                              FRA=Nø s‚curit‚ sociale] }
    { 22  ;   ;Union Code          ;Code10        ;TableRelation=Union;
                                                   CaptionML=[ENU=Union Code;
                                                              FRA=Code mutuelle] }
    { 23  ;   ;Union Membership No.;Text30        ;CaptionML=[ENU=Union Membership No.;
                                                              FRA=Nø adh‚rent mutuelle] }
    { 24  ;   ;Gender              ;Option        ;CaptionML=[ENU=Gender;
                                                              FRA=Sexe];
                                                   OptionCaptionML=[ENU=" ,Female,Male";
                                                                    FRA=" ,F‚minin,Masculin"];
                                                   OptionString=[ ,Female,Male] }
    { 25  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              FRA=Code pays/r‚gion] }
    { 26  ;   ;Manager No.         ;Code20        ;TableRelation=Employee;
                                                   CaptionML=[ENU=Manager No.;
                                                              FRA=Nø sup‚rieur hi‚rarchique] }
    { 27  ;   ;Emplymt. Contract Code;Code10      ;TableRelation="Employment Contract";
                                                   CaptionML=[ENU=Emplymt. Contract Code;
                                                              FRA=Code contrat de travail] }
    { 28  ;   ;Statistics Group Code;Code10       ;TableRelation="Employee Statistics Group";
                                                   CaptionML=[ENU=Statistics Group Code;
                                                              FRA=Code groupe statistiques] }
    { 29  ;   ;Employment Date     ;Date          ;CaptionML=[ENU=Employment Date;
                                                              FRA=Date d'entr‚e] }
    { 31  ;   ;Status              ;Option        ;OnValidate=BEGIN
                                                                EmployeeQualification.SETRANGE("Employee No.","No.");
                                                                EmployeeQualification.MODIFYALL("Employee Status",Status);
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Status;
                                                              FRA=Statut];
                                                   OptionCaptionML=[ENU=Active,Inactive,Terminated;
                                                                    FRA=Disponible,Indisponible,Fin de contrat];
                                                   OptionString=Active,Inactive,Terminated }
    { 32  ;   ;Inactive Date       ;Date          ;CaptionML=[ENU=Inactive Date;
                                                              FRA=Date indisponibilit‚] }
    { 33  ;   ;Cause of Inactivity Code;Code10    ;TableRelation="Cause of Inactivity";
                                                   CaptionML=[ENU=Cause of Inactivity Code;
                                                              FRA=Code motif indisponibilit‚] }
    { 34  ;   ;Termination Date    ;Date          ;CaptionML=[ENU=Termination Date;
                                                              FRA=Date fin de contrat] }
    { 35  ;   ;Grounds for Term. Code;Code10      ;TableRelation="Grounds for Termination";
                                                   CaptionML=[ENU=Grounds for Term. Code;
                                                              FRA=Code motif fin de contrat] }
    { 36  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              FRA=Code axe principal 1];
                                                   CaptionClass='1,1,1' }
    { 37  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              FRA=Code axe principal 2];
                                                   CaptionClass='1,1,2' }
    { 38  ;   ;Resource No.        ;Code20        ;TableRelation=Resource WHERE (Type=CONST(Person));
                                                   OnValidate=BEGIN
                                                                IF ("Resource No." <> '') AND Res.WRITEPERMISSION THEN
                                                                //<<IMH01 isat.zw
                                                                //  EmployeeResUpdate.ResUpdate(Rec)
                                                                EmployeeUpdate.UpdateRes(Rec);
                                                                //>>IMH01 isat.zw
                                                              END;

                                                   CaptionML=[ENU=Resource No.;
                                                              FRA=Nø ressource] }
    { 39  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Human Resource Comment Line" WHERE (Table Name=CONST(Employee),
                                                                                                          No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              FRA=Commentaires];
                                                   Editable=No }
    { 40  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              FRA=Date dern. modification];
                                                   Editable=No }
    { 41  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              FRA=Filtre date] }
    { 42  ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Filter;
                                                              FRA=Filtre axe principal 1];
                                                   CaptionClass='1,3,1' }
    { 43  ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Filter;
                                                              FRA=Filtre axe principal 2];
                                                   CaptionClass='1,3,2' }
    { 44  ;   ;Cause of Absence Filter;Code10     ;FieldClass=FlowFilter;
                                                   TableRelation="Cause of Absence";
                                                   CaptionML=[ENU=Cause of Absence Filter;
                                                              FRA=Filtre motif absence] }
    { 45  ;   ;Total Absence (Base);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Employee Absence"."Quantity (Base)" WHERE (Employee No.=FIELD(No.),
                                                                                                               Cause of Absence Code=FIELD(Cause of Absence Filter),
                                                                                                               From Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Total Absence (Base);
                                                              FRA=Total absences (Bases)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 46  ;   ;Extension           ;Text30        ;CaptionML=[ENU=Extension;
                                                              FRA=Nø poste] }
    { 47  ;   ;Employee No. Filter ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Employee;
                                                   CaptionML=[ENU=Employee No. Filter;
                                                              FRA=Filtre nø salari‚] }
    { 48  ;   ;Pager               ;Text30        ;CaptionML=[ENU=Pager;
                                                              FRA=Pager] }
    { 49  ;   ;Fax No.             ;Text30        ;OnValidate=VAR
                                                                lPhoneStd@1100281000 : Codeunit 50099;
                                                              BEGIN
                                                                lPhoneStd.ValidatePhoneNo(
                                                                  DATABASE::Employee,FIELDNO("Fax No."),"Country/Region Code","Fax No."); //IMH03.ST
                                                              END;

                                                   CaptionML=[ENU=Fax No.;
                                                              FRA=Nø t‚l‚copie] }
    { 50  ;   ;Company E-Mail      ;Text80        ;CaptionML=[ENU=Company E-Mail;
                                                              FRA=E-mail soci‚t‚] }
    { 51  ;   ;Title               ;Text30        ;CaptionML=[ENU=Title;
                                                              FRA=Titre] }
    { 52  ;   ;Salespers./Purch. Code;Code10      ;TableRelation=Salesperson/Purchaser;
                                                   OnValidate=VAR
                                                                lSalesperson@1100281000 : Record 13;
                                                                lUserSetup@1100281001 : Record 91;
                                                              BEGIN
                                                                //<<IMH01.ISAT.ZW
                                                                IF ("Salespers./Purch. Code" <> '') AND lSalesperson.WRITEPERMISSION THEN
                                                                  EmployeeUpdate.UpdateSalesperson(Rec);
                                                                CALCFIELDS("User ID");
                                                                IF "User ID"<>'' THEN
                                                                  IF lUserSetup.GET("User ID") THEN
                                                                    IF lUserSetup."Salespers./Purch. Code" <> "Salespers./Purch. Code" THEN BEGIN
                                                                      lUserSetup."Salespers./Purch. Code" := "Salespers./Purch. Code";
                                                                      lUserSetup.MODIFY;
                                                                    END;
                                                                //>>IMH01.ISAT.ZW
                                                              END;

                                                   CaptionML=[ENU=Salespers./Purch. Code;
                                                              FRA=Code vendeur/acheteur] }
    { 53  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              FRA=Souches de nø];
                                                   Editable=No }
    { 10800;  ;Marital Status      ;Option        ;CaptionML=[ENU=Marital Status;
                                                              FRA=Situation de famille];
                                                   OptionCaptionML=[ENU=" ,Single,Married,Divorced,Widowed";
                                                                    FRA=" ,C‚libataire,Mari‚,Divorc‚,Veuf"];
                                                   OptionString=[ ,Single,Married,Divorced,Widowed] }
    { 50010;  ;Contact No.         ;Code20        ;TableRelation=Contact.No. WHERE (Type=CONST(Person));
                                                   CaptionML=[ENU=Contact No.;
                                                              FRA=Nø contact;
                                                              NLB=Contactnr.] }
    { 50011;  ;User ID             ;Code30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("User Setup"."User ID" WHERE (Employee No.=FIELD(No.)));
                                                   TableRelation="User Setup"."User ID";
                                                   CaptionML=[ENU=User ID;
                                                              FRA=Code utilisateur];
                                                   Editable=No }
    { 50050;  ;Search E-Mail       ;Code80        ;CaptionML=[ENU=Search E-Mail;
                                                              FRA=E-mail de recherche] }
    { 50051;  ;E-Mail 2            ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=E-Mail 2;
                                                              FRA=E-mail 2] }
    { 50060;  ;Alert Geoconcept Break;Boolean     ;CaptionML=[ENU=Alert Geoconcept Break;
                                                              FRA=Alerte coupure G‚oconcept] }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;TableRelation=User."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;TableRelation=User."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Search Name                              }
    {    ;Status,Union Code                        }
    {    ;Status,Emplymt. Contract Code            }
    {    ;Last Name,First Name,Middle Name         }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,First Name,Last Name,Initials,Job Title }
  }
  CODE
  {
    VAR
      HumanResSetup@1000 : Record 5218;
      Employee@1001 : Record 5200;
      Res@1002 : Record 156;
      PostCode@1003 : Record 225;
      AlternativeAddr@1004 : Record 5201;
      EmployeeQualification@1005 : Record 5203;
      Relative@1006 : Record 5205;
      EmployeeAbsence@1007 : Record 5207;
      MiscArticleInformation@1008 : Record 5214;
      ConfidentialInformation@1009 : Record 5216;
      HumanResComment@1010 : Record 5208;
      SalespersonPurchaser@1011 : Record 13;
      NoSeriesMgt@1012 : Codeunit 396;
      EmployeeResUpdate@1013 : Codeunit 5200;
      EmployeeSalespersonUpdate@1014 : Codeunit 5201;
      DimMgt@1015 : Codeunit 408;
      Text000@1016 : TextConst 'ENU=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.;FRA=Avant de pouvoir utiliser Online Map, vous devez compl‚ter la fenˆtre Configuration Online Map.\Consultez la section Configuration d''Online Map dans l''Aide.';
      EmployeeUpdate@1100281003 : Codeunit 50012;
      NoSalespersonUpdate@1100281002 : Boolean;
      NoResourceUpdate@1100281001 : Boolean;
      NoContactUpdate@1100281000 : Boolean;

    PROCEDURE AssistEdit@2(OldEmployee@1000 : Record 5200) : Boolean;
    BEGIN
      WITH Employee DO BEGIN
        Employee := Rec;
        HumanResSetup.GET;
        HumanResSetup.TESTFIELD("Employee Nos.");
        IF NoSeriesMgt.SelectSeries(HumanResSetup."Employee Nos.",OldEmployee."No. Series","No. Series") THEN BEGIN
          HumanResSetup.GET;
          HumanResSetup.TESTFIELD("Employee Nos.");
          NoSeriesMgt.SetSeries("No.");
          Rec := Employee;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE FullName@1() : Text[100];
    BEGIN
      IF "Middle Name" = '' THEN
        EXIT("First Name" + ' ' + "Last Name")
      ELSE
        EXIT("First Name" + ' ' + "Middle Name" + ' ' + "Last Name");
    END;

    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::Employee,"No.",FieldNumber,ShortcutDimCode);
      MODIFY;
    END;

    PROCEDURE DisplayMap@7();
    VAR
      MapPoint@1001 : Record 800;
      MapMgt@1000 : Codeunit 802;
    BEGIN
      IF MapPoint.FIND('-') THEN
        MapMgt.MakeSelection(DATABASE::Employee,GETPOSITION)
      ELSE
        MESSAGE(Text000);
    END;

    PROCEDURE OnModify@1000000000(xRec@1000000000 : Record 5200);
    BEGIN
      //IMH01.ISAT.ZW
      IF (xRec."Resource No." <> Rec."Resource No.") OR
         (xRec."Salespers./Purch. Code" <> Rec."Salespers./Purch. Code") OR
         (xRec."Job Title" <> Rec."Job Title") OR
         (xRec."First Name" <> Rec."First Name") OR
         (xRec."Middle Name" <> Rec."Middle Name") OR
         (xRec."Last Name" <> Rec."Last Name") OR
         (xRec.Address <> Rec.Address) OR
         (xRec.County <> Rec.County) OR
         (xRec."Address 2" <> Rec."Address 2") OR
         (xRec."Post Code" <> Rec."Post Code") OR
         (xRec."Social Security No." <> Rec."Social Security No.") OR
         (xRec."Employment Date" <> Rec."Employment Date") OR
         (xRec."Phone No." <> Rec."Phone No.") OR
         (xRec.Extension <> Rec.Extension) OR
         (xRec."Search E-Mail" <> "Search E-Mail") OR
         (xRec."E-Mail 2" <> Rec."E-Mail 2")
      THEN BEGIN
        EmployeeUpdate.SetSynchEmployee(
                          NOT NoSalespersonUpdate,
                          NOT NoResourceUpdate,
                          NOT NoContactUpdate);
        EmployeeUpdate.RUN(Rec);
      END;
    END;

    PROCEDURE SetSalespersonUpdate@1000000006(pSalespersonUpdate@1000000000 : Boolean);
    BEGIN
      //IMH01.ISAT.ZW
      NoSalespersonUpdate := NOT pSalespersonUpdate
    END;

    PROCEDURE SetResourceUpdate@1000000007(pResourceUpdate@1000000000 : Boolean);
    BEGIN
      //IMH01.ISAT.ZW
      NoResourceUpdate := NOT pResourceUpdate
    END;

    PROCEDURE SetContactUpdate@1000000008(pContactUpdate@1000000000 : Boolean);
    BEGIN
      //IMH01.ISAT.ZW
      NoContactUpdate := NOT pContactUpdate
    END;

    PROCEDURE TouchRecord@1000000001(pInsert@1000000000 : Boolean);
    BEGIN
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;
      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    PROCEDURE CreateAs@1000000009(What@1000000000 : 'All,Contact,Resource,Salesperson');
    BEGIN
      //IMH01.ISAT.ZW
      EmployeeUpdate.CreateAs(Rec,What);
    END;

    BEGIN
    {
      /** @r IMH05 @d 25/06/2012 @a IMH.ZW @v IMH6.01.001 @s Gestion dpr @c Ajout champ Alert Geoconcept Break */
      /** @r IMH04 @d 04/08/11 @a ISAT.ST @v IMH6.01.002 @s Nom de famille … 50 */
      /** @r IMH03 @d 06/04/11 @a ISAT.ST @v IMH6.01.001 @s Normalisation des donn‚es @c Norme Phone */
      /** @r IHM02 @d 10/02/11 @a ISAT.ZW @v IMH6.01.001 @s Normalisation des donn‚es
          @c Associer les Pays au code postaux - descendre le code pays automatiquement*/
      /** @r IMH01 @d 07/10/2010 @a ISAT.ZW @v IMH6.01.013 @s Gestion des utilisateurs
          @c Ajout champs traces 50500-50503 + Fonction TouchRecord
          @c Ajout fonction OnModify, SetSalespersonUpdate, SetResourceUpdate, SetContactUpdate
          @c Ajout champs Search E-Mail, E-Mail 2*/
    }
    END.
  }
}