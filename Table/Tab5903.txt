OBJECT Table 5903 Service Order Type
{
  OBJECT-PROPERTIES
  {
    Date=12/07/13;
    Time=12:04:48;
    Modified=Yes;
    Version List=NAVW16.00,IMH6.01,JUILLET;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TouchRecord(TRUE); //IMH01.ST
             END;

    OnModify=BEGIN
               IF "Provider Search" = "Provider Search"::UniqueProvider THEN //IMH07 isat.zw
                 TESTFIELD("Provider No.");                          //IMH07 isat.zw
               TouchRecord(FALSE); //IMH01.ST
             END;

    OnDelete=VAR
               DimMgt@1000 : Codeunit 408;
               lServQuoteType@1100281000 : Record 50062;
               lServPartnerCatalog@1100281001 : Record 50060;
               lServiceQuoteType@1100281002 : Record 50062;
               lPartnerCrossRef@1100281003 : Record 8016748;
               lProvServOrderTypeLimit@1000000000 : Record 50181;
             BEGIN
               //<<IMH01.ST
               lServPartnerCatalog.SETCURRENTKEY("Service Order Type");
               lServPartnerCatalog.SETRANGE("Service Order Type", Code);
               IF NOT lServPartnerCatalog.ISEMPTY THEN
                 ERROR(Text50000, TABLECAPTION, Code, lServPartnerCatalog.TABLECAPTION);

               lServQuoteType.SETRANGE("Service Order Type", Code);
               IF NOT lServQuoteType.ISEMPTY THEN
                 lServQuoteType.DELETEALL;
               //>>IMH01.ST
               //<<IMH02
               lServQuoteType.SETCURRENTKEY("Service Order Type",Code);
               lServQuoteType.SETRANGE("Service Order Type",Code);
               IF NOT lServQuoteType.ISEMPTY THEN
                 lServQuoteType.DELETEALL;
               //>>IMH02

               //<<IMH34
               //Param‚trage limite type intervention par type produit
               lProvServOrderTypeLimit.SETCURRENTKEY("Service Order Type");
               lProvServOrderTypeLimit.SETRANGE("Service Order Type", Code);
               IF NOT lProvServOrderTypeLimit.ISEMPTY THEN
                 lProvServOrderTypeLimit.DELETEALL(TRUE);
               //>>IMH34

               lPartnerCrossRef.DropFromSourceTable1(DATABASE::"Service Order Type", Code); //IMH14.ST

               DimMgt.DeleteDefaultDim(DATABASE::"Service Order Type",Code);
             END;

    OnRename=BEGIN
               TouchRecord(FALSE); //IMH01.ST
             END;

    CaptionML=[ENU=Service Order Type;
               FRA=Type produit];
    LookupFormID=Form5908;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              FRA=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text30        ;CaptionML=[ENU=Description;
                                                              FRA=D‚signation] }
    { 50000;  ;Service Hdr Card Form ID;Integer   ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Form));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Service Hdr Card Form Caption");
                                                              END;

                                                   CaptionML=[ENU=Service Hdr Card Form ID;
                                                              FRA=Formulaire fiche ligne produit];
                                                   BlankZero=Yes }
    { 50001;  ;Service Hdr Card Form Caption;Text250;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Form),
                                                                                                                Object ID=FIELD(Service Hdr Card Form ID)));
                                                   CaptionML=[ENU=Service Hdr Card Form Caption;
                                                              FRA=Nom formulaire fiche ligne produit];
                                                   Editable=No }
    { 50002;  ;Suffix Code         ;Code6         ;CaptionML=[ENU=Suffix Code;
                                                              FRA=Code suffixe] }
    { 50003;  ;Intervention Card Form ID;Integer  ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Form));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Service Hdr Card Form Caption");
                                                              END;

                                                   CaptionML=[ENU=Intervention Card Form ID;
                                                              FRA=Formulaire fiche intervention];
                                                   BlankZero=Yes }
    { 50004;  ;Intervention Card Form Caption;Text250;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Form),
                                                                                                                Object ID=FIELD(Intervention Card Form ID)));
                                                   CaptionML=[ENU=Intervention Card Form Caption;
                                                              FRA=Nom formulaire fiche intervention];
                                                   Editable=No }
    { 50010;  ;Provider Search     ;Option        ;OnValidate=BEGIN
                                                                IF "Provider Search" = "Provider Search"::AutoSearch THEN       //IMH07 isat.zw
                                                                  VALIDATE("Provider Speciality", '');
                                                              END;

                                                   CaptionML=[ENU=Supplier Search;
                                                              FRA=Recherche prestataire];
                                                   OptionCaptionML=[ENU=Auto Search,Manual Search,Unique Provider,User Choice,Requisitioner,Service Cause;
                                                                    FRA=Recherche automatique,Recherche manuelle,Prestataire unique,Choix utilisateur,Demandeur,Cause intervention];
                                                   OptionString=AutoSearch,ManualSearch,UniqueProvider,UserChoice,Requisitioner,Service Cause }
    { 50011;  ;Provider Speciality ;Code10        ;TableRelation=IF (Provider Building Trade No.=FILTER(='')) Specialization.Code
                                                                 ELSE IF (Provider Building Trade No.=FILTER(<>'')) "Specialization Building Trade"."Specialization Code" WHERE (Building Trade No.=FIELD(Provider Building Trade No.));
                                                   OnValidate=BEGIN
                                                                IF "Provider Speciality" <> '' THEN
                                                                  //<<IMH18
                                                                  IF NOT ("Provider Search" IN ["Provider Search"::ManualSearch,"Provider Search"::UniqueProvider]) THEN
                                                                    ERROR(STRSUBSTNO(Text50001,FIELDCAPTION("Provider Search"),"Provider Search"::ManualSearch
                                                                      ,"Provider Search"::UniqueProvider));
                                                                  //TESTFIELD("Provider Search", "Provider Search"::ManualSearch);//IMH07 isat.zw
                                                                  //>>IMH18
                                                              END;

                                                   CaptionML=[ENU=Provider Speciality;
                                                              FRA=Sp‚cialit‚ prestataire] }
    { 50012;  ;Quote Management    ;Boolean       ;CaptionML=[ENU=Quote Management;
                                                              FRA=Demande devis] }
    { 50013;  ;Contract Condition Field No.;Integer;
                                                   TableRelation=Field.No. WHERE (TableNo=CONST(50059),
                                                                                  Enabled=CONST(Yes),
                                                                                  Class=CONST(Normal),
                                                                                  Type=CONST(Boolean));
                                                   OnLookup=VAR
                                                              lField@1100281001 : Record 2000000041;
                                                              lFieldList@1100281000 : Form 7702;
                                                            BEGIN
                                                              lField.FILTERGROUP(2);
                                                              lField.SETRANGE(TableNo, DATABASE::"Contact Contract");
                                                              lField.SETRANGE(Type, lField.Type::Boolean);
                                                              lField.SETRANGE(Class, lField.Class::Normal);
                                                              lField.SETRANGE(Enabled, TRUE);
                                                              lField.FILTERGROUP(0);
                                                              lFieldList.SETTABLEVIEW(lField);
                                                              IF "Contract Condition Field No." <> 0 THEN
                                                                IF lField.GET(DATABASE::"Contact Contract","Contract Condition Field No.") THEN
                                                                  lFieldList.SETRECORD(lField);
                                                              lFieldList.LOOKUPMODE(TRUE);
                                                              IF lFieldList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                lFieldList.GETRECORD(lField);
                                                                VALIDATE("Contract Condition Field No.", lField."No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Contract Condition Field No.;
                                                              FRA=Nø champ condition contrat];
                                                   BlankZero=Yes }
    { 50014;  ;Home Service        ;Boolean       ;CaptionML=[ENU=Home Service;
                                                              FRA=Service … l'habitat] }
    { 50015;  ;Claim               ;Boolean       ;CaptionML=[ENU=Claim;
                                                              FRA=R‚clamations] }
    { 50016;  ;Expert              ;Boolean       ;CaptionML=[ENU=Expert;
                                                              FRA=Expert] }
    { 50017;  ;URL Link            ;Text250       ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=URL Link;
                                                              FRA=Lien URL] }
    { 50018;  ;URL Link 2          ;Text250       ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=URL Link 2;
                                                              FRA=Lien URL 2] }
    { 50019;  ;Complete Service Control;Boolean   ;CaptionML=[ENU=Complete Service Control;
                                                              FRA=Contr“le service complet] }
    { 50020;  ;Provider No.        ;Code20        ;TableRelation=Provider.No.;
                                                   OnValidate=BEGIN
                                                                IF "Provider No." <> '' THEN
                                                                  TESTFIELD("Provider Search", "Provider Search"::UniqueProvider);
                                                              END;

                                                   CaptionML=[ENU=Provider No.;
                                                              FRA=Nø prestataire] }
    { 50021;  ;Hide Deductible Amounts;Boolean    ;CaptionML=[ENU=Hide Deductible Amounts;
                                                              FRA=Masquer franchises] }
    { 50022;  ;Electrical Failure  ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT "Electrical Failure" THEN BEGIN
                                                                  "Device Purchase Amount Min." := 0;
                                                                  "Device Age Max." := 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Electrical Failure;
                                                              FRA=Panne ‚lectrom‚nager] }
    { 50023;  ;Provider Building Trade No.;Code20 ;TableRelation="Building Trade";
                                                   CaptionML=[ENU=Provider Building Trade No.;
                                                              FRA=Corps de m‚tier prestataire] }
    { 50024;  ;Wiki URL Serv. Header;Text250      ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Wiki URL Serv. Header;
                                                              FRA=Lien Wiki ligne produit] }
    { 50025;  ;Urgent Required     ;Boolean       ;CaptionML=[ENU=Urgent Required;
                                                              FRA=Champ Urgent obligatoire] }
    { 50026;  ;Commission          ;Boolean       ;CaptionML=[ENU=Commission;
                                                              FRA=Gestion commission] }
    { 50027;  ;Assistance          ;Boolean       ;CaptionML=[ENU=Assistance;
                                                              FRA=Assistance] }
    { 50028;  ;Quality Control     ;Boolean       ;CaptionML=[ENU=Quality Control;
                                                              FRA=Contr“le qualit‚] }
    { 50030;  ;Init. Diag. Elmts Table;Boolean    ;CaptionML=[ENU=Diagnostics Init.;
                                                              FRA=Initialisation diagnostics] }
    { 50031;  ;Init. Accomm. Options;Boolean      ;CaptionML=[ENU=Init. Accomm. Options;
                                                              FRA=Initialisation des garanties compl‚mentaires] }
    { 50032;  ;Device Purchase Amount Min.;Decimal;OnValidate=BEGIN
                                                                IF "Device Purchase Amount Min." <> 0 THEN
                                                                  TESTFIELD("Electrical Failure", TRUE);
                                                              END;

                                                   CaptionML=[ENU=Device Purchase Amount Min.;
                                                              FRA=Montant achat min. appareil] }
    { 50033;  ;Device Age Max.     ;Integer       ;OnValidate=BEGIN
                                                                IF "Device Age Max." <> 0 THEN
                                                                  TESTFIELD("Electrical Failure", TRUE);
                                                              END;

                                                   CaptionML=[ENU=Device Age Max.;
                                                              FRA=Age appareil max.] }
    { 50034;  ;Code Loading Index  ;Integer       ;CaptionML=[ENU=Code Loading Index;
                                                              FRA=Index pr‚chargement];
                                                   BlankZero=Yes }
    { 50040;  ;Default Channel     ;Code10        ;TableRelation=Code.Code WHERE (Table ID=CONST(50066),
                                                                                  Field ID=CONST(12));
                                                   CaptionML=[ENU=Channel;
                                                              FRA=Canal par d‚faut] }
    { 50041;  ;Default Requisitioner;Code10       ;TableRelation=Code.Code WHERE (Table ID=CONST(50066),
                                                                                  Field ID=CONST(13));
                                                   CaptionML=[ENU=Requisitioner;
                                                              FRA=Demandeur par d‚faut] }
    { 50042;  ;Requisitionner Allowed;Code80      ;TableRelation=Code.Code WHERE (Table ID=CONST(50066),
                                                                                  Field ID=CONST(13));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Requisitionner Allowed;
                                                              FRA=Demandeurs autoris‚s] }
    { 50046;  ;Wiki URL Intervention;Text250      ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Wiki URL Intervention;
                                                              FRA=Lien Wiki intervention] }
    { 50050;  ;Default Agreement Excluded;Boolean ;CaptionML=[ENU=Default Agreement Excluded;
                                                              FRA=Exclu agr‚ment par d‚faut] }
    { 50060;  ;Sinister Declaration;Boolean       ;CaptionML=[ENU=Sinister Declaration;
                                                              FRA=D‚claration sinistre] }
    { 50070;  ;Geocoding Required  ;Boolean       ;CaptionML=[ENU=Geocoding Required;
                                                              FRA=G‚ocodage obligatoire] }
    { 50071;  ;Phone Required      ;Boolean       ;CaptionML=[ENU=Phone Required;
                                                              FRA=T‚l‚phone obligatoire] }
    { 50072;  ;Intermediate Minutes Forbidden;Boolean;
                                                   CaptionML=[ENU=Intermediate Minutes Forbidden;
                                                              FRA=PV interm‚diaire interdit] }
    { 50073;  ;Estimate Amount Required;Boolean   ;CaptionML=[ENU=Estimate Amount Required;
                                                              FRA=Montant chiffrage obligatoire] }
    { 50074;  ;Information         ;Boolean       ;CaptionML=[ENU=Information;
                                                              FRA=Renseignement] }
    { 50075;  ;No Intervention     ;Boolean       ;OnValidate=BEGIN
                                                                IF "No Intervention" THEN
                                                                  IF NOT "No Minutes" THEN
                                                                    VALIDATE("No Minutes", TRUE);
                                                              END;

                                                   CaptionML=[ENU=No Intervention;
                                                              FRA=Pas d'intervention] }
    { 50076;  ;No Minutes          ;Boolean       ;OnValidate=BEGIN
                                                                IF "No Minutes" THEN
                                                                  IF "Purch. Invoice Recon. Check" = "Purch. Invoice Recon. Check"::Minutes THEN
                                                                    FIELDERROR("Purch. Invoice Recon. Check");
                                                              END;

                                                   CaptionML=[ENU=No Minutes;
                                                              FRA=Pas de PV] }
    { 50077;  ;First Minutes Type  ;Option        ;CaptionML=[ENU=First Minutes Type;
                                                              FRA=Type premier PV];
                                                   OptionCaptionML=[ENU=End of work,Intermediate,,Urgent;
                                                                    FRA=Fin de travaux,Interm‚diaire,,Urgent];
                                                   OptionString=End of work,Intermediate,,Urgent }
    { 50080;  ;Closed Reason Code Nb;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Product Reason" WHERE (Service Order Type=FIELD(Code),
                                                                                             Code Type=CONST(ClosedReason)));
                                                   CaptionML=[ENU=Closed Reason Code;
                                                              FRA=Code motif cl“ture];
                                                   Editable=No }
    { 50081;  ;Suspended Reason Code Nb;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Count("Product Reason" WHERE (Service Order Type=FIELD(Code),
                                                                                             Code Type=CONST(SuspendedReason)));
                                                   CaptionML=[ENU=Suspended Reason Code;
                                                              FRA=Code motif suspension];
                                                   Editable=No }
    { 50082;  ;Interv. Cancel Reason Code Nb;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Product Reason" WHERE (Service Order Type=FIELD(Code),
                                                                                             Code Type=CONST(InterventionCancelReason)));
                                                   CaptionML=[ENU=Intervention Cancel Reason Code;
                                                              FRA=Motifs annulation intervention];
                                                   Editable=No }
    { 50090;  ;DARVA Expert Management;Boolean    ;CaptionML=[ENU=DARVA Expert Management;
                                                              FRA=Gestion expert DARVA] }
    { 50091;  ;DARVA SDR99 Send Choice;Boolean    ;CaptionML=[ENU=DARVA SDR99 Send Choice;
                                                              FRA=Choix d'envoi SDR99] }
    { 50111;  ;Serv. Header Proc. Code;Code10     ;TableRelation=Process.Code WHERE (Source Data=CONST(ServiceHeader));
                                                   CaptionML=[ENU=Serv. Header Proc. Code;
                                                              FRA=Code processus produit] }
    { 50112;  ;Serv. Header Start Status;Integer  ;TableRelation="Process Status"."Status No." WHERE (Process Code=FIELD(Serv. Header Proc. Code));
                                                   CaptionML=[ENU=Serv. Header Start Status;
                                                              FRA=Statut processus de d‚marrage produit];
                                                   BlankZero=Yes }
    { 50113;  ;Serv. Header Start Status Desc;Text30;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Process Status".Description WHERE (Process Code=FIELD(Serv. Header Proc. Code),
                                                                                                          Status No.=FIELD(Serv. Header Start Status)));
                                                   CaptionML=[ENU=Serv. Header Start Status Desc;
                                                              FRA=Descr. statut processus de d‚marrage produit];
                                                   Editable=No }
    { 50121;  ;Interv. Process Code;Code10        ;TableRelation=Process.Code WHERE (Source Data=CONST(Intervention));
                                                   CaptionML=[ENU=Intervention Process Code;
                                                              FRA=Code processus intervention] }
    { 50122;  ;Interv. Start Status;Integer       ;TableRelation="Process Status"."Status No." WHERE (Process Code=FIELD(Interv. Process Code));
                                                   CaptionML=[ENU=Interv Starting Process Status;
                                                              FRA=Statut processus de d‚marrage intervention];
                                                   BlankZero=Yes }
    { 50123;  ;Interv. Start Status Desc;Text30   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Process Status".Description WHERE (Process Code=FIELD(Interv. Process Code),
                                                                                                          Status No.=FIELD(Interv. Start Status)));
                                                   CaptionML=[ENU=Interv. Start Status Desc;
                                                              FRA=Descr. statut processus de d‚marrage intervention];
                                                   Editable=No }
    { 50150;  ;Multi Spe. Purch. Item No.;Code20  ;TableRelation=Item;
                                                   CaptionML=[ENU=Multi Specialization Purchase Item No.;
                                                              FRA=Nø article achat sp‚cialit‚ multiple] }
    { 50151;  ;Multi Spe. Em. Purch. Item No.;Code20;
                                                   TableRelation=Item;
                                                   CaptionML=[ENU=Multi Specialization Emergency Purchase Item No.;
                                                              FRA=Nø article achat urgence sp‚cialit‚ multiple] }
    { 50152;  ;Apply Emergency Price;Boolean      ;CaptionML=[ENU=Apply Emergency Price;
                                                              FRA=Appliquer forfait urgent] }
    { 50153;  ;Emergency Price Control;Boolean    ;CaptionML=[ENU=Emergency Price Control;
                                                              FRA=Contr“le forfait urgent] }
    { 50160;  ;Purch. Invoice Recon. Check;Option ;OnValidate=BEGIN
                                                                CASE "Purch. Invoice Recon. Check" OF
                                                                  "Purch. Invoice Recon. Check"::Minutes :
                                                                    TESTFIELD("No Minutes", FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Purch. Invoice Recon. Check;
                                                              FRA=Contr“le rapprochement facture achat];
                                                   OptionCaptionML=[ENU=Minutes,Voucher,Posted Report,No Invoice;
                                                                    FRA=PV,Justificatif,Rapport valid‚,Pas de facture];
                                                   OptionString=Minutes,Voucher,PostedReport,NoInvoice }
    { 50170;  ;S.F.O. Enable       ;Boolean       ;CaptionML=[ENU=Single Front Office Enable;
                                                              FRA=Actif pour le Front Office Unique] }
    { 50200;  ;Quality Control Allowed;Boolean    ;CaptionML=[ENU=Quality Control Allowed;
                                                              FRA=Contr“le qualit‚ autoris‚] }
    { 50250;  ;Proof               ;Boolean       ;CaptionML=[ENU=Proof;
                                                              FRA=Justificatif] }
    { 50300;  ;DARVA Site          ;Boolean       ;CaptionML=[ENU=DARVA Site;
                                                              FRA=Site DARVA] }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;TableRelation=User."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;TableRelation=User."User ID";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
    { 56010;  ;Fusion              ;Boolean       ;CaptionML=[ENU=Fusion;
                                                              FRA=Fusion] }
    { 56011;  ;Fusion Code         ;Code40        ;CaptionML=[ENU=Fusion Code;
                                                              FRA=Code Fusion] }
    { 56040;  ;Ignore Interv. Ceiling DT;Boolean  ;CaptionML=[ENU=Ignore Interv Ceiling DT;
                                                              FRA=Ignorer plafond de d‚l‚gation DT] }
    { 57000;  ;Sal. Order Creat. (With. Int.);Boolean;
                                                   CaptionML=[ENU=Sales Order Creation (With. Interv.);
                                                              FRA=Cr‚ation commande vente (sans interv.)] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Fusion Code                              }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Description                         }
  }
  CODE
  {
    VAR
      Text50000@1100281000 : TextConst 'ENU=You cannot delete the %2 record of the %1 because there are one or more %3.;FRA=Vous ne pouvez pas supprimer l''enregistrement %2 de %1, car il y a est utilis‚ par %3.';
      Text50001@1100281001 : TextConst 'ENU=%1 must be %1 or %3;FRA=%1 doit ˆtre %2 ou %3';

    PROCEDURE TouchRecord@1100281006(pInsert@1100281000 : Boolean);
    BEGIN
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;
      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    BEGIN
    {
      /** @r IMH38 @d 11/07/13 @a ISAT.ACO @v IMH6.01.351 @s JUILLET @h 4239
          @c Ajout options "Requisitioner" et "Service Cause" dans champ "Provider Search" */
      /** @r IHM37 @d 09/07/13 @a ISAT.ZW @v IMH6.01.347 @s JUIN @h 4603
          @c Ajotu champ 56040 Ignore Interv. Ceiling DT */
      /** @r IMH36 @a 10/10/12 @a ISAT.PC @v IMH6.01.210 @s FOU @h 3992
          @c Ajout champ 50170, S.F.O. Enable */
      /** @r IMH35 @d 18/07/12 @a ISAT.PC @v IMH6.01.226 @s version 1.4 @h 3537
          @c Lien Wiki intervention, Ajout champs 50046 Wiki URL Intervention*/
      /** @r IHM34 @d 12/06/12 @a ISAT.ZW @v IMH6.01.226 @s version 1.4 @h 2968 @c Suppression param‚trages limite type produit */
      /** @r IMH33 @d 16/05/12 @a ISAT.PC @v IMH6.01.154 @s Gestion lettre chŠque @h 3489 @c ajout champ 50250, Proof */
      /** @r IMH32 @d 23/03/12 @a ISAT.ST @v IMH6.01.146 @s Refonte facturation @c Ajout champ First minutes Type */
      /** @r IMH31 @d 19/03/12 @s ISAT.ST @v IMH6.01.105 @s Controle qualit‚
          @c Ajout champ 50003 Intervention Card Form ID, 50004 Intervention Card Form Caption
          @c Ajout champ 50028 Quality Control */
      /** @r IMH30 @d 14/03/12 @a ISAT.PC @v IMH6.01.134 @s DARVA @h 2851 @c Ajout de champ 50300, DARVA Site */
      /** @r IMH29 @d 24/02/12 @a ISAT.ST @v IMH6.01.140 @s Facturation
          @c Rapprochement facture
          @c Ajout champs 50075 No Intervention, 50076 No Minutes, 50160 Purch. Invoice Recon. Check */
      /** @r IMH28 @d 10/01/12 @a ISAT.PC @v IMH6.01.134 @s DARVA @h 2610
          @c Ajout champ 50091 DARVA SDR99 Send Choice */
      /** @r IMH27 @d 22/06/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c Ajout champ 50153 Emergency Price Control
      /** @r IMH26 @d 10/08/11 @a ISAT.ST @v IMH6.01.011 @s Ajout de champs pour le contr“le de coh‚rence
          @c 50070 Geocoding Required
          @c 50071 Phone Required
          @c 50072 Intermediate Minutes Forbidden */
      /** @r IMH25 @d 22/06/11 @a ISAT.ST @v IMH6.01.011 @s Gestion du service
          @c Ajout champ 50042 Requisitionner Exclusion */
      /** @r IMH24 @d 16/06/11 @a ISAT.ZW @v IMH6.01.140 @s Facturation
          @c Ajout de champ : 50060 Sinister Declaration*/
      /** @r IMH23 @d 20/05/11 @a ISAT.ZW @v IMH6.01.140 @s Facturation
          @c Ajout de champ : 50050 Default Agreement Excluded*/
      /** @r IMH22 @d 04/05/11 @a ISAT.PC @v IMH6.01.140 @s Facturation
          @c Ajout de champ : 57000 Sal. Order Creat. (With. Int.)
          @c Cr‚ation des commandes de ventes sur les types de produits sans intervention
      /** @r IMH21 @d 18/04/11 @a ISAT.EBA @v IMH6.01.011 @s Gestion du service
          @c Ajout de champ : "Assistance" */
      /** @r IMH20 @d 28/03/11 @a ISAT.ZW @v IMH6.01.136 @s Gestion fusion
          @c ajout champs 56010 56012 Fusion fusion code */
      /** @r IMH19 @d 24/03/11 @a CAP.JC @v IMH6.01.143 @s Comptabilit‚ - Gestion des articles
          @c ajout champs 50124, Generic Item No. */
      /** @r IMH18 @d 16/03/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Saisie spc‚ialit‚ si prestataire unique */
      /** @r IMH17 @d 14/03/11 @a ISAT.LLT @v IMH6.01.146 @s Gestion facturation
          @c Cr‚ation champ 50026 Commission */
      /** @r IMH16 @d 02/03/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout champ 50025 Urgent Required
      /** @r IMH15 @d 21/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout du champ 50024 URL */
      /** @r IMH14 @d 28/02/11 @a ISAT.ST @v IMH6.01.131 @s Moteur EAI @c Suppression r‚f‚rence EAI */
      /** @r IMH13 @d 23/02/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout champ 50040 Default Channel
          @c Ajout champ 50041 Default Requisitionner
          @c Ajout champ 50050 Voucher */
      /** @r IMH12 @d 03/02/11 @a ISAT.NFO @v IMH6.01.105 @s Contr“le qualit‚
          @c Ajout champ 50200 Quality Control Allowed */
      /** @r IMH11 @d 21/01/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout de l'option "Choix utilisateur" au champ recherche prestataire
          @c Ajout champ 50023 Provider Building Trade No. */
      /** @r IMH10 @d 05/01/11 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout champ 50032 Device Purchase Amount Min
          @c Ajout champ 50033 Device Age Max. /*
      /** @r IMH09 @d 14/12/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout du champ 50019 Complete Service Control */
      /** @r IMH08 @d 26/11/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout champ 50016 Expert */
      /** @r IMH07 @d 02/12/10 @a ISAT.ZW @v IMH6.01.011 @s Gestion du service
          @c Procider Search boolean --> Option */
      /** @r IMH06 @d 26/11/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Remplacement du nø de souche par le code suffixe */
      /** @r IMH06 @d 18/11/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout du champ 50031 Init. Accomm. Options */
      /** @r IMH05 @d 09/11/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion du service
          @c Ajout du champ 50013 Home Service
          @c Ajout du champ 50014 Claim */
      /** @r IMH04 @d 08/11/10 @a ISAT.ZW @v IMH6.01.102 @s Gestion des Statuts
          @c Ajout champ Process Code + Starting Process status */
      /** @r IMH03 @d 15/10/10 @a ISAT.LLT @v IMH6.01.011 @s Gestion des services
          @c Ajout champ 50030 Init. Diag. Elmts Table */
      /** @r IMH02 @d 01/10/10 @a ISAT.LLT @v IMH6.01.010 @s Gestion Gestion du catalogue
          @c Ajout du champ 50013 Contract Condition Field No.
          @c gestion du OnDelete */
      /** @r IMH01 @d 30/09/10 @a ISAT.ST @v IMH6.01.010 @s Gestion Gestion du catalogue
          @c Ajout champ 50000 Service Card Form ID
          @c Ajout champ 50001 Service Card Form Caption
          @c Ajout champ 50002 Service Nos.
          @c Ajout champ 50010 Provider Search
          @c Ajout champ 50011 Provider Speciality
          @c Ajout champ 50012 Quote Management
          @c Changement du caption de la table
      */
    }
    END.
  }
}