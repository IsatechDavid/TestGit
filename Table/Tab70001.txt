OBJECT Table 70001 EAI Posted Sent MQ Tmp
{
  OBJECT-PROPERTIES
  {
    Date=14/09/12;
    Time=17:24:18;
    Modified=Yes;
    Version List=IMH6.01, V1.4.1;
  }
  PROPERTIES
  {
    OnInsert=VAR
               NoSeriesMgt@1100481001 : Codeunit 396;
               lMQ@1100481000 : Record 8016704;
             BEGIN
             END;

    CaptionML=[ENU=Sent Message Queue 2;
               FRA=File messages ‚mis 2 Tmp];
    LookupFormID=Form8016763;
    DrillDownFormID=Form8016763;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Code20        ;CaptionML=[ENU=Entry No.;
                                                              FRA=Nø s‚quence] }
    { 3   ;   ;Synchro Group Code  ;Code20        ;TableRelation="EAI Synchro Group";
                                                   CaptionML=[ENU=Synchro Group Code;
                                                              FRA=Code groupe synchro] }
    { 4   ;   ;To Synchronize Table No.;Integer   ;CaptionML=[ENU=To Synchronize Table No.;
                                                              FRA=Nø table … synchroniser] }
    { 5   ;   ;Synchro Group Table Alias;Code20   ;CaptionML=[ENU=Synchro Group Table Alias;
                                                              FRA=Alias table de groupe de synchro] }
    { 6   ;   ;Table Action Type   ;Option        ;CaptionML=[ENU=Table Action Type;
                                                              FRA=Type d'action sur table];
                                                   OptionCaptionML=[ENU=Insertion,Modification,Deletion,Rename;
                                                                    FRA=Insertion,Modification,Suppression,Renommage];
                                                   OptionString=Insertion,Modification,Deletion,Rename }
    { 10  ;   ;RecordId            ;RecordID      ;CaptionML=[ENU=Record Identifiant;
                                                              FRA=Identifiant enregistrement] }
    { 11  ;   ;xRecordId           ;RecordID      ;CaptionML=[ENU=Previous Record Identifiant;
                                                              FRA=Identifiant enregistrement pr‚c‚dent] }
    { 12  ;   ;XML Source          ;BLOB          ;CaptionML=[ENU=XML Source;
                                                              FRA=Flux XML] }
    { 13  ;   ;Act Priority        ;Integer       ;CaptionML=[ENU=Act Priority;
                                                              FRA=Priorit‚ acte] }
    { 14  ;   ;Table Priority      ;Integer       ;CaptionML=[ENU=Table Priority;
                                                              FRA=Priorit‚ table] }
    { 15  ;   ;Response XML Source ;BLOB          ;CaptionML=[ENU=Response XML Source;
                                                              FRA=Flux XML r‚ponse] }
    { 20  ;   ;EAI Partner Code    ;Code20        ;TableRelation="EAI Partner".Code;
                                                   CaptionML=[ENU=EAI Partner Code;
                                                              FRA=Code partenaire EAI] }
    { 21  ;   ;EAI Act Type Code   ;Code20        ;TableRelation="EAI Act Type";
                                                   OnValidate=VAR
                                                                lActType@1100481000 : Record 8016705;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=EAI Act Type Code;
                                                              FRA=Code type acte EAI] }
    { 22  ;   ;EAI Act Code        ;Code20        ;TableRelation="EAI Act".Code WHERE (EAI Act Type Code=FIELD(EAI Act Type Code));
                                                   OnValidate=VAR
                                                                lActType@1100481000 : Record 8016705;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=EAI Act Code;
                                                              FRA=Code acte EAI] }
    { 23  ;   ;EAI MQ Code         ;Code20        ;TableRelation="EAI Message Queue";
                                                   TestTableRelation=Yes;
                                                   CaptionML=[ENU=Message Queue Code;
                                                              FRA=Code file message] }
    { 24  ;   ;EAI Process Code    ;Code20        ;TableRelation="EAI Process".Code;
                                                   CaptionML=[ENU=Process Code;
                                                              FRA=Code processus] }
    { 25  ;   ;EAI NAS Code        ;Code20        ;TableRelation="EAI NAS";
                                                   CaptionML=[ENU=NAS Code;
                                                              FRA=Code NAS] }
    { 40  ;   ;Step                ;Option        ;CaptionML=[ENU=Step;
                                                              FRA=Etape];
                                                   OptionCaptionML=[ENU=Generation,Validation;
                                                                    FRA=G‚n‚ration,Validation];
                                                   OptionString=Generation,Validation }
    { 50  ;   ;Date Creation       ;Date          ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date cr‚ation] }
    { 51  ;   ;Time Creation       ;Time          ;CaptionML=[ENU=Creation Time;
                                                              FRA=Heure de cr‚ation] }
    { 52  ;   ;User Creation       ;Code20        ;CaptionML=[ENU=Creation User;
                                                              FRA=Utilisateur de cr‚atiion] }
    { 53  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              FRA=Statut];
                                                   OptionCaptionML=[ENU=Unprocessed,Processing,Error;
                                                                    FRA=Non trait‚,Trait‚,Erreur];
                                                   OptionString=Unprocessed,Processing,Error }
    { 54  ;   ;Comment Status      ;Text250       ;CaptionML=[ENU=Comment;
                                                              FRA=Commentaires] }
    { 55  ;   ;File Date Creation  ;Date          ;CaptionML=[ENU=File Date Creation;
                                                              FRA=Date cr‚ation fichier] }
    { 56  ;   ;File Time Creation  ;Time          ;CaptionML=[ENU=File Time Creation;
                                                              FRA=Heure cr‚ation fichier] }
    { 60  ;   ;Skip Error          ;Boolean       ;CaptionML=[ENU=Skip Error;
                                                              FRA=Ignorer erreur] }
    { 70  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              FRA=Souches de nø];
                                                   Editable=No }
    { 80  ;   ;File Name           ;Text250       ;CaptionML=[ENU=File Name;
                                                              FRA=Nom du fichier] }
    { 90  ;   ;Date Posting        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              FRA=Date de validation] }
    { 91  ;   ;Time Posting        ;Time          ;CaptionML=[ENU=Posting Time;
                                                              FRA=Heure de validation] }
    { 92  ;   ;User Posting        ;Code20        ;CaptionML=[ENU=Posting User;
                                                              FRA=Utilisateur de validation] }
    { 50000;  ;Message ID          ;Code40         }
    { 50010;  ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              FRA=Type document];
                                                   OptionCaptionML=[ENU=Quote,Order,Invoice,Credit Memo;
                                                                    FRA=Devis,Commande,Facture,Avoir];
                                                   OptionString=Quote,Order,Invoice,Credit Memo }
    { 50011;  ;Service Header No.  ;Code20        ;TableRelation="Service Header".No.;
                                                   CaptionML=[ENU=Service  No.;
                                                              FRA=Nø service];
                                                   Editable=No }
    { 50012;  ;To Treat            ;Boolean       ;CaptionML=FRA=A traiter }
    { 50013;  ;Imported Nb         ;Integer       ;CaptionML=FRA=Nb de ligne import‚e }
    { 50014;  ;Last imported Line No.;Code20      ;CaptionML=FRA=Nø derni‚re ligne import‚e }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;RecordId                                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100481005 : TextConst 'ENU=The attachment is empty.;FRA=Il n''y a pas de document joint.';
      Text001@1100481004 : TextConst 'ENU=Attachment is already in use on this machine.;FRA=Le document joint est d‚j… utilis‚ par cette machine.';
      Text005@1100481003 : TextConst 'ENU=Export Attachment;FRA=Exporter document';
      Text008@1100481002 : TextConst 'ENU=Files XML (*.XML)|*.XML;FRA=Fichiers XML (*.XML)|*.XML';
      Text012@1100481001 : TextConst 'ENU=\Doc;FRA=\Doc';
      Text016@1100481000 : TextConst 'ENU=When you have finished working with a document, you should delete the associated temporary file. Please note that this will not delete the document.\\Do you want to delete the temporary file?;FRA=Lorsque vous avez fini de travailler sur un document, n''oubliez pas de supprimer le fichier temporaire associ‚. Cette op‚ration ne supprime pas le document lui-mˆme.\\Souhaitez-vous supprimer le fichier temporaire ?';
      Text017@1100281000 : TextConst 'ENU=Would you start treatment?;FRA="Souhaitez-vous lancer le traitement ? "';

    PROCEDURE OpenXMLSource@1100481000();
    VAR
      FileName@1100481000 : Text[250];
    BEGIN
      CALCFIELDS("XML Source");
      IF NOT "XML Source".HASVALUE THEN
        ERROR(Text000);

      FileName := ConstFilename;
      IF EXISTS(FileName) THEN
        IF NOT DeleteFile(FileName) THEN
          ERROR(Text001);

      ExportAttachment(FileName);

      HYPERLINK(FileName);

      IF CONFIRM(Text016,TRUE) THEN
        DeleteFile(FileName);
    END;

    PROCEDURE ConstFilename@1100281000() FileName@1000 : Text[260];
    VAR
      I@1001 : Integer;
      DocNo@1002 : Text[30];
      TempFile@1100281000 : File;
    BEGIN
      REPEAT
        IF I <> 0 THEN
          DocNo := FORMAT(I);
        IF NOT ISSERVICETIER THEN BEGIN
          FileName := ENVIRON('TEMP') + Text012 + DocNo + '.xml';
        //<<IMH01 isat.zw
        END ELSE BEGIN
          TempFile.CREATETEMPFILE;
          FileName := TempFile.NAME + '.' + '.xml';
          TempFile.CLOSE;
        END;
        //>>IMH01 isat.zw
        IF NOT EXISTS(FileName) THEN
          EXIT;
        I := I +1;
      UNTIL I=999;
    END;

    PROCEDURE DeleteFile@10(FileName@1001 : Text[260]) : Boolean;
    VAR
      I@1002 : Integer;
    BEGIN
      IF FileName = '' THEN
        EXIT(FALSE);

      IF NOT EXISTS(FileName) THEN
        EXIT(TRUE);

      REPEAT
        SLEEP(250);
        I := I + 1;
      UNTIL ERASE(FileName) OR (I = 25);
      EXIT(NOT EXISTS(FileName));
    END;

    PROCEDURE ExportAttachment@2(ExportToFile@1000 : Text[260]) : Boolean;
    VAR
      CommonDialogMgt@1001 : Codeunit 412;
      FileName@1002 : Text[260];
      FileFilter@1003 : Text[260];
    BEGIN
      CALCFIELDS("XML Source");
      IF "XML Source".HASVALUE THEN BEGIN
        IF ExportToFile = '' THEN BEGIN
          FileName := CommonDialogMgt.OpenFile(Text005,'',4,Text008,1);
        END ELSE
          FileName := ExportToFile;

        IF FileName <> '' THEN BEGIN
          "XML Source".EXPORT(FileName);
          EXIT(TRUE);
        END ELSE
          EXIT(FALSE)
      END ELSE
        EXIT(FALSE)
    END;

    PROCEDURE ShowEntries@1100481002();
    VAR
      lEAIDocumentEntryMgt@1100481000 : Codeunit 8016707;
    BEGIN
      lEAIDocumentEntryMgt.ShowEntriesByPostedMQ(DATABASE::"EAI Posted Sent MQ 2","Entry No.");
    END;

    PROCEDURE OpenXMLResponse@1100281001();
    VAR
      FileName@1100481000 : Text[250];
    BEGIN
      CALCFIELDS("Response XML Source");
      IF NOT "Response XML Source".HASVALUE THEN
        ERROR(Text000);

      FileName := ConstFilename;
      IF EXISTS(FileName) THEN
        IF NOT DeleteFile(FileName) THEN
          ERROR(Text001);

      ExportAttachment(FileName);

      HYPERLINK(FileName);

      IF CONFIRM(Text016,TRUE) THEN
        DeleteFile(FileName);
    END;

    PROCEDURE GetRecordIDText@1100281002() : Text[1024];
    BEGIN
      // IMH07.PC
      EXIT(FORMAT(RecordId));
    END;

    PROCEDURE LoadTable@1100281004();
    VAR
      lEAIPostedSentMQ2@1100281000 : Record 8016733;
      lEAIPostedSentMQTmp@1100281001 : Record 70001;
    BEGIN
      lEAIPostedSentMQTmp.DELETEALL;
      IF lEAIPostedSentMQ2.FINDSET THEN
      REPEAT
        IF lEAIPostedSentMQ2."XML Source".HASVALUE THEN
          lEAIPostedSentMQ2.CALCFIELDS("XML Source");
        IF lEAIPostedSentMQ2."Response XML Source".HASVALUE THEN
          lEAIPostedSentMQ2.CALCFIELDS("Response XML Source");
        lEAIPostedSentMQTmp.TRANSFERFIELDS(lEAIPostedSentMQ2);
        lEAIPostedSentMQTmp."To Treat":=TRUE;
        lEAIPostedSentMQTmp.INSERT;
      UNTIL lEAIPostedSentMQ2.NEXT = 0;
    END;

    PROCEDURE Valider@1100281003();
    VAR
      Text001@1100281000 : TextConst 'ENU=Confirm ?;FRA=Confirmer?';
      lEAIPostedSentMQTmp@1100281001 : Record 70001;
      lEAISentMQ2@1100281002 : Record 8016723;
    BEGIN
      IF NOT CONFIRM(Text017,TRUE) THEN
        EXIT;

      lEAIPostedSentMQTmp.SETRANGE("To Treat",TRUE);
      IF lEAIPostedSentMQTmp.FINDSET THEN
      REPEAT
        IF lEAIPostedSentMQTmp."XML Source".HASVALUE THEN
          lEAIPostedSentMQTmp.CALCFIELDS("XML Source");
        IF lEAIPostedSentMQTmp."Response XML Source".HASVALUE THEN
          lEAIPostedSentMQTmp.CALCFIELDS("Response XML Source");
        lEAISentMQ2.TRANSFERFIELDS(lEAIPostedSentMQTmp);
        lEAISentMQ2.Step:=lEAISentMQ2.Step::Validation;
        lEAISentMQ2.Status:=lEAISentMQ2.Status::Unprocessed;
        lEAISentMQ2.INSERT(TRUE);
      UNTIL lEAIPostedSentMQTmp.NEXT = 0;
    END;

    BEGIN
    {
      /** @r IMH01 @d 11/09/12 @a ISAT.ML @v IMH6.01.210 @s R‚g‚n‚rer les lignes perdues du flux d'‚changes @h mantis 3289 @c cr‚ation */
    }
    END.
  }
}