OBJECT Table 7601 Base Calendar Change
{
  OBJECT-PROPERTIES
  {
    Date=21/03/11;
    Time=09:06:46;
    Modified=Yes;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Base Calendar Code;
    OnInsert=BEGIN
               CheckEntryLine;
               TouchRecord(TRUE);
             END;

    OnModify=BEGIN
               CheckEntryLine;
               TouchRecord(FALSE);
             END;

    OnRename=BEGIN
               CheckEntryLine;
               TouchRecord(FALSE);
             END;

    CaptionML=[ENU=Base Calendar Change;
               FRA=Modification calendrier principal];
    LookupFormID=Form50188;
    DrillDownFormID=Form50188;
  }
  FIELDS
  {
    { 1   ;   ;Base Calendar Code  ;Code10        ;TableRelation="Base Calendar";
                                                   CaptionML=[ENU=Base Calendar Code;
                                                              FRA=Code calendrier principal];
                                                   Editable=No }
    { 2   ;   ;Recurring System    ;Option        ;OnValidate=BEGIN
                                                                IF "Recurring System" <> xRec."Recurring System" THEN
                                                                  CASE "Recurring System" OF
                                                                  "Recurring System"::"Annual Recurring":
                                                                    Day := Day::" ";
                                                                  "Recurring System"::"Weekly Recurring":
                                                                    "Start Date" := 0D;
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Recurring System;
                                                              FRA=SystŠme abonnement];
                                                   OptionCaptionML=[ENU=" ,Annual Recurring,Weekly Recurring,Interval";
                                                                    FRA=" ,Abonnement annuel,Abonnement hebdomadaire,Intervalle"];
                                                   OptionString=[ ,Annual Recurring,Weekly Recurring,Interval] }
    { 3   ;   ;Start Date          ;Date          ;OnValidate=BEGIN
                                                                IF ("Recurring System" = "Recurring System"::" ") OR
                                                                   ("Recurring System" = "Recurring System"::"Annual Recurring")
                                                                THEN
                                                                  TESTFIELD("Start Date")
                                                                ELSE
                                                                  TESTFIELD("Start Date",0D);
                                                                UpdateDayName;
                                                              END;

                                                   CaptionML=[ENU=Start Date;
                                                              FRA=Date de d‚but] }
    { 4   ;   ;Day                 ;Option        ;OnValidate=BEGIN
                                                                IF "Recurring System" = "Recurring System"::"Weekly Recurring" THEN
                                                                  TESTFIELD(Day);
                                                                UpdateDayName;
                                                              END;

                                                   CaptionML=[ENU=Day;
                                                              FRA=Jour];
                                                   OptionCaptionML=[ENU=" ,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday";
                                                                    FRA=" ,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi,Dimanche"];
                                                   OptionString=[ ,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday] }
    { 5   ;   ;Description         ;Text30        ;CaptionML=[ENU=Description;
                                                              FRA=D‚signation] }
    { 6   ;   ;Nonworking          ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Nonworking;
                                                              FRA=Jour ch“m‚] }
    { 50010;  ;End Date            ;Date          ;OnValidate=BEGIN
                                                                IF ("Recurring System" = "Recurring System"::Interval) THEN BEGIN
                                                                  TESTFIELD("End Date");
                                                                END ELSE BEGIN
                                                                  TESTFIELD("End Date",0D);
                                                                END;
                                                                UpdateDayName;
                                                              END;

                                                   CaptionML=[ENU=End Date;
                                                              FRA=Date de fin] }
    { 50040;  ;Nonworking Reason Code;Code10      ;TableRelation=Code.Code WHERE (Table ID=CONST(50007),
                                                                                  Field ID=CONST(40));
                                                   OnValidate=VAR
                                                                lCode@1100281000 : Record 50079;
                                                              BEGIN
                                                                Description := lCode.GetDescription(DATABASE::"Provider Priority Entry",CurrFieldNo,"Nonworking Reason Code");

                                                                Nonworking := "Nonworking Reason Code" <> '';
                                                              END;

                                                   CaptionML=[ENU=Nonworking Reason Code;
                                                              FRA=Code motif Jour ch“m‚] }
    { 50500;  ;Creation Date       ;DateTime      ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date de cr‚ation];
                                                   Editable=No }
    { 50501;  ;Creation User ID    ;Text30        ;CaptionML=[ENU=Creation User ID;
                                                              FRA=Utilisateur cr‚ation];
                                                   Editable=No }
    { 50502;  ;Last Modification Date;DateTime    ;CaptionML=[ENU=Last Modification Date;
                                                              FRA=Date derniŠre modification];
                                                   Editable=No }
    { 50503;  ;Last Modification User ID;Text30   ;ValidateTableRelation=No;
                                                   CaptionML=[ENU=Last Modification User ID;
                                                              FRA=Utilisateur derniŠre modification];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Base Calendar Code,Recurring System,Start Date,Day;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE UpdateDayName@1100281000();
    VAR
      lDateTable@1000 : Record 2000000007;
    BEGIN
      IF ("Start Date" > 0D) AND
         (("Recurring System" = "Recurring System"::"Annual Recurring") OR
          ("Recurring System" = "Recurring System"::Interval))
      THEN BEGIN
        Day := Day::" ";
      END ELSE BEGIN
        lDateTable.SETRANGE("Period Type",lDateTable."Period Type"::Date);
        lDateTable.SETRANGE("Period Start","Start Date");
        IF lDateTable.FINDFIRST THEN BEGIN
          Day := lDateTable."Period No.";
        END;
      END;

      IF ("Start Date" = 0D) AND (Day = Day::" ") THEN BEGIN
        Day := xRec.Day;
        "Start Date" := xRec."Start Date";
      END;

      IF ("Recurring System" = "Recurring System"::"Annual Recurring") OR
         ("Recurring System" = "Recurring System"::Interval)
      THEN BEGIN
        TESTFIELD(Day,Day::" ");
      END;
    END;

    PROCEDURE CheckEntryLine@2();
    BEGIN
      CASE "Recurring System" OF
      "Recurring System"::" ":
      BEGIN
        TESTFIELD("Start Date");
        TESTFIELD(Day);
      END;
      "Recurring System"::"Annual Recurring":
      BEGIN
        TESTFIELD("Start Date");
        TESTFIELD(Day,Day::" ");
      END;

      "Recurring System"::"Weekly Recurring":
      BEGIN
        TESTFIELD("Start Date",0D);
        TESTFIELD(Day);
      END;
      END;
    END;

    PROCEDURE TouchRecord@1100281006(pInsert@1100281000 : Boolean);
    BEGIN
      IF pInsert THEN BEGIN
        "Creation Date" := CURRENTDATETIME;
        "Creation User ID" := USERID;
      END;

      "Last Modification Date" := CURRENTDATETIME;
      "Last Modification User ID" := USERID;
    END;

    PROCEDURE GetChangeMainCalendar@1100281001(pMainCalendarCode@1100281001 : Code[10]);
    VAR
      lBaseCalendarChange@1100281000 : Record 7601;
    BEGIN
      // Permet d'acc‚der aux modifications de calendrier

      lBaseCalendarChange.FILTERGROUP(2);
      lBaseCalendarChange.SETRANGE("Base Calendar Code",pMainCalendarCode);
      lBaseCalendarChange.FILTERGROUP(0);
      FORM.RUNMODAL(0,lBaseCalendarChange);
    END;

    BEGIN
    {
      /** @r IHM01 @d 14/03/11 @a ISAT.ZW @v IMH6.01.112 @s Finalisation calendrier
          @c Ajout champs specifique prestataire */
    }
    END.
  }
}