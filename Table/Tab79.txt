OBJECT Table 79 Company Information
{
  OBJECT-PROPERTIES
  {
    Date=20/07/12;
    Time=12:46:18;
    Modified=Yes;
    Version List=NAVW16.00.10,NAVFR5.00,ISA6.00,ISAFAX1.00,IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Company Information;
               FRA=Informations soci‚t‚];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              FRA=Cl‚ primaire] }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              FRA=Nom] }
    { 3   ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              FRA=Nom 2] }
    { 4   ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              FRA=Adresse] }
    { 5   ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              FRA=Adresse (2Šme ligne)] }
    { 6   ;   ;City                ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code", "Country/Region Code");      //IMH03 Ajout Code pays
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity(City,"Post Code","Country/Region Code", TRUE);     //IMH03 Ajout Code pays
                                                            END;

                                                   CaptionML=[ENU=City;
                                                              FRA=Ville] }
    { 7   ;   ;Phone No.           ;Text30        ;OnValidate=VAR
                                                                lPhoneStandardization@1100281000 : Codeunit 50099;
                                                              BEGIN
                                                                //<<IMH01
                                                                lPhoneStandardization.ValidatePhoneNo(DATABASE::"Company Information",7,"Country/Region Code","Phone No.");
                                                                //>>IMH01
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              FRA=Nø t‚l‚phone] }
    { 8   ;   ;Phone No. 2         ;Text30        ;OnValidate=VAR
                                                                lPhoneStandardization@1100281000 : Codeunit 50099;
                                                              BEGIN
                                                                //<<IMH01
                                                                lPhoneStandardization.ValidatePhoneNo(DATABASE::"Company Information",8,"Country/Region Code","Phone No. 2");
                                                                //>>IMH01
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No. 2;
                                                              FRA=Nø t‚l‚phone 2] }
    { 9   ;   ;Telex No.           ;Text30        ;OnValidate=VAR
                                                                lPhoneStandardization@1100281000 : Codeunit 50099;
                                                              BEGIN
                                                                //<<IMH01
                                                                lPhoneStandardization.ValidatePhoneNo(DATABASE::"Company Information",9,"Country/Region Code","Telex No.");
                                                                //>>IMH01
                                                              END;

                                                   CaptionML=[ENU=Telex No.;
                                                              FRA=Nø t‚lex] }
    { 10  ;   ;Fax No.             ;Text30        ;OnValidate=VAR
                                                                lPhoneStandardization@1100281000 : Codeunit 50099;
                                                              BEGIN
                                                                //<<IMH01
                                                                lPhoneStandardization.ValidatePhoneNo(DATABASE::"Company Information",10,"Country/Region Code","Fax No.");
                                                                //>>IMH01
                                                              END;

                                                   CaptionML=[ENU=Fax No.;
                                                              FRA=Nø t‚l‚copie] }
    { 11  ;   ;Giro No.            ;Text20        ;CaptionML=[ENU=Giro No.;
                                                              FRA=Nø CCP] }
    { 12  ;   ;Bank Name           ;Text50        ;CaptionML=[ENU=Bank Name;
                                                              FRA=Nom de la banque] }
    { 13  ;   ;Bank Branch No.     ;Text20        ;CaptionML=[ENU=Bank Branch No.;
                                                              FRA=Code ‚tablissement] }
    { 14  ;   ;Bank Account No.    ;Text30        ;CaptionML=[ENU=Bank Account No.;
                                                              FRA=Nø compte bancaire] }
    { 15  ;   ;Payment Routing No. ;Text20        ;CaptionML=[ENU=Payment Routing No.;
                                                              FRA=Nø paiement automatique] }
    { 17  ;   ;Customs Permit No.  ;Text10        ;CaptionML=[ENU=Customs Permit No.;
                                                              FRA=Nø autorisation douaniŠre] }
    { 18  ;   ;Customs Permit Date ;Date          ;CaptionML=[ENU=Customs Permit Date;
                                                              FRA=Date autorisation douaniŠre] }
    { 19  ;   ;VAT Registration No.;Text20        ;OnValidate=VAR
                                                                VATRegNoFormat@1000 : Record 381;
                                                              BEGIN
                                                                VATRegNoFormat.Test("VAT Registration No.","Country/Region Code",'',DATABASE::"Company Information");
                                                              END;

                                                   CaptionML=[ENU=VAT Registration No.;
                                                              FRA=Nø identif. intracomm.] }
    { 20  ;   ;Registration No.    ;Text20        ;CaptionML=[ENU=Registration No.;
                                                              FRA=Nø SIRET] }
    { 21  ;   ;Telex Answer Back   ;Text20        ;CaptionML=[ENU=Telex Answer Back;
                                                              FRA=T‚lex retour] }
    { 22  ;   ;Ship-to Name        ;Text50        ;CaptionML=[ENU=Ship-to Name;
                                                              FRA=Nom du destinataire] }
    { 23  ;   ;Ship-to Name 2      ;Text50        ;CaptionML=[ENU=Ship-to Name 2;
                                                              FRA=Nom du destinataire 2] }
    { 24  ;   ;Ship-to Address     ;Text50        ;CaptionML=[ENU=Ship-to Address;
                                                              FRA=Adresse destinataire] }
    { 25  ;   ;Ship-to Address 2   ;Text50        ;CaptionML=[ENU=Ship-to Address 2;
                                                              FRA=Adresse destinataire 2] }
    { 26  ;   ;Ship-to City        ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity("Ship-to City","Ship-to Post Code", "Ship-to Country/Region Code");     //IMH03 Ajout Code pays
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpCity("Ship-to City","Ship-to Post Code","Ship-to Country/Region Code",TRUE);   //IMH03 Ajout Code pays
                                                            END;

                                                   CaptionML=[ENU=Ship-to City;
                                                              FRA=Ville destinataire] }
    { 27  ;   ;Ship-to Contact     ;Text50        ;CaptionML=[ENU=Ship-to Contact;
                                                              FRA=Contact destinataire] }
    { 28  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              FRA=Code magasin] }
    { 29  ;   ;Picture             ;BLOB          ;CaptionML=[ENU=Picture;
                                                              FRA=Image];
                                                   SubType=Bitmap }
    { 30  ;   ;Post Code           ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code", "Country/Region Code");       //IMH03 Ajout Code pays
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode(City,"Post Code","Country/Region Code",TRUE);    //IMH03 Ajout Code pays
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              FRA=Code postal] }
    { 31  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              FRA=R‚gion] }
    { 32  ;   ;Ship-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode("Ship-to City","Ship-to Post Code", "Ship-to Country/Region Code");  //IMH03 Ajout Code pays
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookUpPostCode("Ship-to City","Ship-to Post Code","Ship-to Country/Region Code",TRUE); //IMH03 Ajout Code pays
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Ship-to Post Code;
                                                              FRA=Code postal destinataire] }
    { 33  ;   ;Ship-to County      ;Text30        ;CaptionML=[ENU=Ship-to County;
                                                              FRA=R‚gion destinataire] }
    { 34  ;   ;E-Mail              ;Text80        ;OnValidate=VAR
                                                                lEmailStandardization@1100281000 : Codeunit 50096;
                                                              BEGIN
                                                                lEmailStandardization.ValidateEmail("E-Mail"); //IMH063
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=E-Mail;
                                                              FRA=E-mail] }
    { 35  ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Home Page;
                                                              FRA=Page d'accueil] }
    { 36  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              FRA=Code pays/r‚gion] }
    { 37  ;   ;Ship-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Ship-to Country/Region Code;
                                                              FRA=Code pays/r‚gion destinataire] }
    { 38  ;   ;IBAN                ;Code50        ;OnValidate=BEGIN
                                                                CheckIBAN(IBAN);
                                                              END;

                                                   CaptionML=[ENU=IBAN;
                                                              FRA=IBAN] }
    { 39  ;   ;SWIFT Code          ;Code20        ;CaptionML=[ENU=SWIFT Code;
                                                              FRA=Code SWIFT] }
    { 40  ;   ;Industrial Classification;Text30   ;CaptionML=[ENU=Industrial Classification;
                                                              FRA=Classification des industries] }
    { 41  ;   ;IC Partner Code     ;Code20        ;CaptionML=[ENU=IC Partner Code;
                                                              FRA=Code du partenaire IC] }
    { 42  ;   ;IC Inbox Type       ;Option        ;OnValidate=BEGIN
                                                                IF "IC Inbox Type" = "IC Inbox Type"::Database THEN
                                                                  "IC Inbox Details" := '';
                                                              END;

                                                   CaptionML=[ENU=IC Inbox Type;
                                                              FRA=Type de boŒte de r‚ception IC];
                                                   OptionCaptionML=[ENU=File Location,Database;
                                                                    FRA=Emplacement du fichier,Base de donn‚es];
                                                   OptionString=File Location,Database }
    { 43  ;   ;IC Inbox Details    ;Text250       ;OnLookup=VAR
                                                              CmDlgMgt@1001 : Codeunit 412;
                                                              i@1000 : Integer;
                                                              FileName@1002 : Text[1024];
                                                            BEGIN
                                                              TESTFIELD("IC Partner Code");
                                                              CASE "IC Inbox Type" OF
                                                                "IC Inbox Type"::"File Location":
                                                                  BEGIN
                                                                    IF "IC Inbox Details" = '' THEN BEGIN
                                                                      FileName := STRSUBSTNO('%1.xml',"IC Partner Code");
                                                                      "IC Inbox Details" := CmDlgMgt.OpenFile(Text001,FileName,4,'*.xml|*.xml',1)
                                                                    END ELSE BEGIN
                                                                      FileName := "IC Inbox Details" + STRSUBSTNO('\%1.xml',"IC Partner Code");
                                                                      "IC Inbox Details" := CmDlgMgt.OpenFile(Text001,FileName,4,'*.xml|*.xml',1);
                                                                    END;
                                                                    IF STRLEN("IC Inbox Details") > 4 THEN BEGIN
                                                                      i := STRLEN("IC Inbox Details") - 4;
                                                                      WHILE (i > 1) AND ("IC Inbox Details"[i] <> '\') DO
                                                                        i := i - 1;
                                                                      IF i > 1 THEN
                                                                        "IC Inbox Details" := COPYSTR("IC Inbox Details",1,i - 1);
                                                                    END;
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=IC Inbox Details;
                                                              FRA=D‚tails sur boŒte r‚cep IC] }
    { 44  ;   ;Abbreviated Name    ;Text4         ;CaptionML=[ENU=Abbreviated Name;
                                                              FRA=Nom abr‚g‚] }
    { 45  ;   ;Show Abbreviated Name;Boolean      ;CaptionML=[ENU=Show Abbreviated Name;
                                                              FRA=Afficher le nom abr‚g‚] }
    { 46  ;   ;System Indicator    ;Option        ;CaptionML=[ENU=System Indicator;
                                                              FRA=Indicateur systŠme];
                                                   OptionCaptionML=[ENU=None,Custom Text,Company Information,Company,Database,Company+Database;
                                                                    FRA=Aucun,Texte personnalis‚,Informations soci‚t‚,Soci‚t‚,Base de donn‚es,Soci‚t‚+Base de donn‚es];
                                                   OptionString=None,Custom Text,Company Information,Company,Database,Company+Database }
    { 47  ;   ;Custom System Indicator Text;Text250;
                                                   CaptionML=[ENU=Custom System Indicator Text;
                                                              FRA=Texte indicateur systŠme personnalis‚] }
    { 48  ;   ;System Indicator Style;Option      ;CaptionML=[ENU=System Indicator Style;
                                                              FRA=Style indicateur systŠme];
                                                   OptionCaptionML=[ENU=Standard,Accent1,Accent2,Accent3,Accent4,Accent5,Accent6,Accent7,Accent8,Accent9;
                                                                    FRA=Standard,Accent1,Accent2,Accent3,Accent4,Accent5,Accent6,Accent7,Accent8,Accent9];
                                                   OptionString=Standard,Accent1,Accent2,Accent3,Accent4,Accent5,Accent6,Accent7,Accent8,Accent9 }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center".Code;
                                                   ValidateTableRelation=Yes;
                                                   CaptionML=[ENU=Responsibility Center;
                                                              FRA=Centre de gestion] }
    { 5791;   ;Check-Avail. Period Calc.;DateFormula;
                                                   CaptionML=[ENU=Check-Avail. Period Calc.;
                                                              FRA=Horizon v‚rification disponibilit‚] }
    { 5792;   ;Check-Avail. Time Bucket;Option    ;CaptionML=[ENU=Check-Avail. Time Bucket;
                                                              FRA=P‚riode v‚rification disponibilit‚];
                                                   OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year;
                                                                    FRA=Jour,Semaine,Mois,Trimestre,Ann‚e];
                                                   OptionString=Day,Week,Month,Quarter,Year }
    { 7600;   ;Base Calendar Code  ;Code10        ;TableRelation="Base Calendar";
                                                   CaptionML=[ENU=Base Calendar Code;
                                                              FRA=Code calendrier principal] }
    { 7601;   ;Cal. Convergence Time Frame;DateFormula;
                                                   InitValue=1Y;
                                                   CaptionML=[ENU=Cal. Convergence Time Frame;
                                                              FRA=Calcul d‚lai de convergence] }
    { 10801;  ;Trade Register      ;Text30        ;CaptionML=[ENU=Trade Register;
                                                              FRA=Registre du commerce] }
    { 10802;  ;APE Code            ;Code10        ;CaptionML=[ENU=APE Code;
                                                              FRA=Code APE] }
    { 10803;  ;Legal Form          ;Text30        ;CaptionML=[ENU=Legal Form;
                                                              FRA=Forme juridique] }
    { 10804;  ;Stock Capital       ;Text30        ;CaptionML=[ENU=Stock Capital;
                                                              FRA=Capital social] }
    { 10810;  ;Default Bank Account No.;Code20    ;TableRelation="Bank Account";
                                                   CaptionML=[ENU=Default Bank Account No.;
                                                              FRA=Nø compte banc. par d‚f.] }
    { 50002;  ;NIC No.             ;Code5          }
    { 50010;  ;Global Temp Root Path;Text250      ;CaptionML=[ENU=Global Temp Root Path;
                                                              FRA=Racine r‚pertoire temporaire global] }
    { 50011;  ;Holliday Reason Code;Code10        ;TableRelation=Code.Code WHERE (Table ID=CONST(50007),
                                                                                  Field ID=CONST(40));
                                                   CaptionML=[ENU=Constraint Reason Code;
                                                              FRA=Code motif Cong‚] }
    { 50020;  ;DPR Phone No.       ;Text30        ;OnValidate=VAR
                                                                lPhoneStandardization@1100281000 : Codeunit 50099;
                                                              BEGIN
                                                                //<<IMH05.ISAT.EBA
                                                                lPhoneStandardization.ValidatePhoneNo(DATABASE::"Company Information",50020,"Country/Region Code","DPR Phone No.");
                                                                //>>IMH05.ISAT.EBA
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=DPR Phone No.;
                                                              FRA=Nø t‚l‚phone DPR] }
    { 50021;  ;DPR Fax No.         ;Text30        ;OnValidate=VAR
                                                                lPhoneStandardization@1100281000 : Codeunit 50099;
                                                              BEGIN
                                                                //<<IMH05.ISAT.EBA
                                                                lPhoneStandardization.ValidatePhoneNo(DATABASE::"Company Information",50021,"Country/Region Code","DPR Fax No.");
                                                                //>>IMH05.ISAT.EBA
                                                              END;

                                                   CaptionML=[ENU=DPR Fax No.;
                                                              FRA=Nø t‚l‚copie DPR] }
    { 50022;  ;DPR E-Mail          ;Text80        ;OnValidate=VAR
                                                                lEmailStandardization@1100281000 : Codeunit 50096;
                                                              BEGIN
                                                                //<<IMH05.ISAT.EBA
                                                                lEmailStandardization.ValidateEmail("DPR E-Mail");
                                                                //>>IMH05.ISAT.EBA
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=DPR E-Mail;
                                                              FRA=E-mail DPR] }
    { 50030;  ;DFC Phone No.       ;Text30        ;OnValidate=VAR
                                                                lPhoneStandardization@1100281000 : Codeunit 50099;
                                                              BEGIN
                                                                //<<IMH05.ISAT.EBA
                                                                lPhoneStandardization.ValidatePhoneNo(DATABASE::"Company Information",50020,"Country/Region Code","DPR Phone No.");
                                                                //>>IMH05.ISAT.EBA
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=DFC Phone No.;
                                                              FRA=Nø t‚l‚phone DFC] }
    { 50031;  ;DFC Fax No.         ;Text30        ;OnValidate=VAR
                                                                lPhoneStandardization@1100281000 : Codeunit 50099;
                                                              BEGIN
                                                                //<<IMH05.ISAT.EBA
                                                                lPhoneStandardization.ValidatePhoneNo(DATABASE::"Company Information",50021,"Country/Region Code","DPR Fax No.");
                                                                //>>IMH05.ISAT.EBA
                                                              END;

                                                   CaptionML=[ENU=DFC Fax No.;
                                                              FRA=Nø t‚l‚copie DFC] }
    { 50032;  ;DFC E-Mail          ;Text80        ;OnValidate=VAR
                                                                lEmailStandardization@1100281000 : Codeunit 50096;
                                                              BEGIN
                                                                //<<IMH05.ISAT.EBA
                                                                lEmailStandardization.ValidateEmail("DPR E-Mail");
                                                                //>>IMH05.ISAT.EBA
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=DFC E-Mail;
                                                              FRA=E-mail DFC] }
    { 50040;  ;DGS Phone No.       ;Text30        ;OnValidate=VAR
                                                                lPhoneStandardization@1100281000 : Codeunit 50099;
                                                              BEGIN
                                                                //<<IMH05.ISAT.EBA
                                                                lPhoneStandardization.ValidatePhoneNo(DATABASE::"Company Information",50020,"Country/Region Code","DPR Phone No.");
                                                                //>>IMH05.ISAT.EBA
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=DGS Phone No.;
                                                              FRA=Nø t‚l‚phone DGS] }
    { 50041;  ;DGS Fax No.         ;Text30        ;OnValidate=VAR
                                                                lPhoneStandardization@1100281000 : Codeunit 50099;
                                                              BEGIN
                                                                //<<IMH05.ISAT.EBA
                                                                lPhoneStandardization.ValidatePhoneNo(DATABASE::"Company Information",50021,"Country/Region Code","DPR Fax No.");
                                                                //>>IMH05.ISAT.EBA
                                                              END;

                                                   CaptionML=[ENU=DGS Fax No.;
                                                              FRA=Nø t‚l‚copie DGS] }
    { 50042;  ;DGS E-Mail          ;Text80        ;OnValidate=VAR
                                                                lEmailStandardization@1100281000 : Codeunit 50096;
                                                              BEGIN
                                                                //<<IMH05.ISAT.EBA
                                                                lEmailStandardization.ValidateEmail("DPR E-Mail");
                                                                //>>IMH05.ISAT.EBA
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=DGS E-Mail;
                                                              FRA=E-mail DGS] }
    { 50043;  ;DQP Phone No.       ;Text30        ;OnValidate=VAR
                                                                lPhoneStandardization@1100281000 : Codeunit 50099;
                                                              BEGIN
                                                                //<<IMH05.ISAT.EBA
                                                                lPhoneStandardization.ValidatePhoneNo(DATABASE::"Company Information",50020,"Country/Region Code","DPR Phone No.");
                                                                //>>IMH05.ISAT.EBA
                                                              END;

                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=DQP Phone No.;
                                                              FRA=Nø t‚l‚phone DQP] }
    { 50044;  ;DQP Fax No.         ;Text30        ;OnValidate=VAR
                                                                lPhoneStandardization@1100281000 : Codeunit 50099;
                                                              BEGIN
                                                                //<<IMH05.ISAT.EBA
                                                                lPhoneStandardization.ValidatePhoneNo(DATABASE::"Company Information",50021,"Country/Region Code","DPR Fax No.");
                                                                //>>IMH05.ISAT.EBA
                                                              END;

                                                   CaptionML=[ENU=DQP Fax No.;
                                                              FRA=Nø t‚l‚copie DQP] }
    { 50045;  ;DQP E-Mail          ;Text80        ;OnValidate=VAR
                                                                lEmailStandardization@1100281000 : Codeunit 50096;
                                                              BEGIN
                                                                //<<IMH05.ISAT.EBA
                                                                lEmailStandardization.ValidateEmail("DPR E-Mail");
                                                                //>>IMH05.ISAT.EBA
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=DQP E-Mail;
                                                              FRA=E-mail DQP] }
    { 50050;  ;Activate E-mail Debug;Boolean      ;CaptionML=[ENU=Activate E-mail Debug;
                                                              FRA=Activer debugage E-mail] }
    { 50051;  ;E-mail Debug        ;Text80        ;CaptionML=[ENU=E-mail Debug;
                                                              FRA=E-mail debugage] }
    { 50060;  ;Activate Fax Debug  ;Boolean       ;CaptionML=[ENU=Activate fax Debug;
                                                              FRA=Activer debugage fax] }
    { 50061;  ;Fax Debug           ;Text80        ;CaptionML=[ENU=Fax Debug;
                                                              FRA=Fax debugage] }
    { 50070;  ;Database Type       ;Code10        ;TableRelation="Database Type".Code;
                                                   OnValidate=VAR
                                                                lDatabaseType@1100281000 : Record 50159;
                                                              BEGIN
                                                                //<<IMH10.PC
                                                                IF lDatabaseType.GET("Database Type") THEN BEGIN
                                                                  lDatabaseType.ReinitializeSetup;
                                                                  IF lDatabaseType."Database Type" = lDatabaseType."Database Type"::Testing THEN BEGIN
                                                                    "Global Temp Root Path" := '\\imha.local\imha\GED_IMH\' + COMPANYNAME + '\Test int‚gration\';
                                                                    "System Indicator" := lDatabaseType."System Indicator";
                                                                    "System Indicator Style" := lDatabaseType."System Indicator Style";
                                                                  END;
                                                                END;
                                                                //>>IMH10.PC
                                                              END;

                                                   CaptionML=[ENU=Database Type;
                                                              FRA=Type de Base] }
    { 50080;  ;DPR Picture         ;BLOB          ;CaptionML=[ENU=DPR Picture;
                                                              FRA=Image DPR];
                                                   SubType=Bitmap }
    { 8016602;;Bottom Picture      ;BLOB          ;CaptionML=[ENU=Bottom Picture;
                                                              FRA=Image de bas de page];
                                                   Description=ISA5.00.00.00;
                                                   SubType=Bitmap }
    { 8016603;;E-mail Fax          ;Text50        ;CaptionML=[ENU=E-mail Fax;
                                                              FRA=E-mail Fax];
                                                   Description=ISAFAX1.00 }
    { 8016604;;Use SMTP            ;Boolean       ;CaptionML=FRA=Utiliser SMTP;
                                                   Description=ISAFAX1.00 }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PostCode@1000 : Record 225;
      Text000@1001 : TextConst 'ENU=The number you entered is not a valid IBAN.;FRA=Le num‚ro entr‚ n''est pas un num‚ro de compte international (IBAN) valide.';
      Text001@1002 : TextConst 'ENU=File Location for IC files;FRA=Emplacement des fichiers IC';
      Text002@1003 : TextConst 'ENU=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.;FRA=Avant de pouvoir utiliser Online Map, vous devez compl‚ter la fenˆtre Configuration Online Map.\Consultez la section Configuration d''Online Map dans l''Aide.';

    PROCEDURE CheckIBAN@1(IBANCode@1000 : Code[100]);
    VAR
      Modulus97@1001 : Integer;
      I@1002 : Integer;
    BEGIN
      IF IBANCode = '' THEN
        EXIT;
      IBANCode := DELCHR(IBANCode);
      Modulus97 := 97;
      IF (STRLEN(IBANCode) <= 5) OR (STRLEN(IBANCode) > 34) THEN
        IBANError;
      ConvertIBAN(IBANCode);
      WHILE STRLEN(IBANCode) > 6 DO
        IBANCode := CalcModulus(COPYSTR(IBANCode,1,6),Modulus97) + COPYSTR(IBANCode,7);
      EVALUATE(I,IBANCode);
      IF (I MOD Modulus97) <> 1 THEN
        IBANError;
    END;

    LOCAL PROCEDURE ConvertIBAN@4(VAR IBANCode@1000 : Code[100]);
    VAR
      I@1002 : Integer;
    BEGIN
      IBANCode := COPYSTR(IBANCode,5) + COPYSTR(IBANCode,1,4);
      I := 0;
      WHILE I < STRLEN(IBANCode) DO BEGIN
        I := I + 1;
        IF ConvertLetter(IBANCode,COPYSTR(IBANCode,I,1),I) THEN
          I := 0;
      END;
    END;

    LOCAL PROCEDURE CalcModulus@3(Number@1000 : Code[10];Modulus97@1001 : Integer) : Code[10];
    VAR
      I@1002 : Integer;
    BEGIN
      EVALUATE(I,Number);
      I := I MOD Modulus97;
      IF I = 0 THEN
        EXIT('');
      EXIT(FORMAT(I));
    END;

    LOCAL PROCEDURE ConvertLetter@5(VAR IBANCode@1000 : Code[100];Letter@1001 : Code[1];LetterPlace@1002 : Integer) : Boolean;
    VAR
      Letter2@1003 : Code[2];
    BEGIN
      IF (Letter >= 'A') AND (Letter <= 'Z') THEN BEGIN
        CASE Letter OF
          'A': Letter2 := '10';
          'B': Letter2 := '11';
          'C': Letter2 := '12';
          'D': Letter2 := '13';
          'E': Letter2 := '14';
          'F': Letter2 := '15';
          'G': Letter2 := '16';
          'H': Letter2 := '17';
          'I': Letter2 := '18';
          'J': Letter2 := '19';
          'K': Letter2 := '20';
          'L': Letter2 := '21';
          'M': Letter2 := '22';
          'N': Letter2 := '23';
          'O': Letter2 := '24';
          'P': Letter2 := '25';
          'Q': Letter2 := '26';
          'R': Letter2 := '27';
          'S': Letter2 := '28';
          'T': Letter2 := '29';
          'U': Letter2 := '30';
          'V': Letter2 := '31';
          'W': Letter2 := '32';
          'X': Letter2 := '33';
          'Y': Letter2 := '34';
          'Z': Letter2 := '35';
        END;
        IF LetterPlace = 1 THEN
          IBANCode := Letter2 + COPYSTR(IBANCode,2)
        ELSE BEGIN
          IF LetterPlace = STRLEN(IBANCode) THEN
            IBANCode := COPYSTR(IBANCode,1,LetterPlace - 1) + Letter2
          ELSE
            IBANCode :=
              COPYSTR(IBANCode,1,LetterPlace - 1) + Letter2 + COPYSTR(IBANCode,LetterPlace + 1);
        END;
        EXIT(TRUE);
      END;
      IF (Letter >= '0') AND (Letter <= '9') THEN
        EXIT(FALSE);

      IBANError;
    END;

    LOCAL PROCEDURE IBANError@12();
    BEGIN
      ERROR(Text000);
    END;

    PROCEDURE DisplayMap@7();
    VAR
      MapPoint@1001 : Record 800;
      MapMgt@1000 : Codeunit 802;
    BEGIN
      IF MapPoint.FIND('-') THEN
        MapMgt.MakeSelection(DATABASE::"Company Information",GETPOSITION)
      ELSE MESSAGE(Text002);
    END;

    PROCEDURE GetSystemIndicator@8(VAR Text@1000 : Text[250];VAR Style@1001 : 'Standard,Accent1,Accent2,Accent3,Accent4,Accent5,Accent6,Accent7,Accent8,Accent9');
    BEGIN
      Style := "System Indicator Style";
      CASE "System Indicator" OF
        "System Indicator"::None:
          Text := '';
        "System Indicator"::"Custom Text":
          Text := "Custom System Indicator Text";
        "System Indicator"::"Company Information":
          Text := Name;
        "System Indicator"::Company:
          Text := COMPANYNAME;
        "System Indicator"::Database:
          Text := GetDatabaseIndicatorText(FALSE);
        "System Indicator"::"Company+Database":
          Text := GetDatabaseIndicatorText(TRUE);
      END
    END;

    LOCAL PROCEDURE GetDatabaseIndicatorText@9(IncludeCompany@1003 : Boolean) : Text[250];
    VAR
      Session@1000 : Record 2000000009;
      Text@1002 : Text[1024];
    BEGIN
      Session.SETRANGE("My Session",TRUE);
      Session.FINDFIRST;
      Text := Session."Database Name" + ' - ' + Session."Host Name";
      IF IncludeCompany THEN
        Text := COMPANYNAME + ' - ' + Text;
      IF STRLEN(Text) > 250 THEN
        EXIT(COPYSTR(Text,1,247) + '...');
      EXIT(Text)
    END;

    PROCEDURE GetDBTypeEmail@1100281000() : Text[80];
    VAR
      lDatabaseType@1100281001 : Record 50159;
    BEGIN
      //<<IMH07.ISAT.EBA
      IF lDatabaseType.GET("Database Type") THEN
        EXIT(lDatabaseType."E-Mail")
      ELSE
        EXIT('');
      //>>IMH07.ISAT.EBA
    END;

    PROCEDURE GetDBTypeEmailFax@1100281001() : Text[80];
    VAR
      lDatabaseType@1100281001 : Record 50159;
    BEGIN
      //<<IMH07.ISAT.EBA
      IF lDatabaseType.GET("Database Type") THEN
        EXIT(lDatabaseType."E-mail Fax")
      ELSE
        EXIT('');
      //>>IMH07.ISAT.EBA
    END;

    BEGIN
    {
      /** @r IMH10 @d 20/07/12 @a ISAT.PC @v IMH6.01.200 @s Database Type
          @c Ajout de la fonction de r‚initialisation du param‚trage */
      /** @r IMH09 @d 18/05/12 @a ISAT.ST @v IMH6.01.105 @s Extranet qualit‚
          @c Ajout champs 50043 … 50045 coordonn‚es DQP */
      /** @r IMH08 @d 29/12/11 @a ISAT.ZW @v IMH6.01.200 @s Type de base
          @c Ajout de champ 50080 : "DPR Picture"  */
      /** @r IMH07 @d 06/09/11 @a ISAT.EBA @v IMH6.01.200 @s Type de base
          @c Ajout de champ : "Database Type"
          @c Ajout de fonctions : GetDBTypeEmail, GetDBTypeEmailFax */
      /** @r IMH06 @d 29/08/11 @a ISAT.ZW @v IMH6.01.201 @s Interaction
          @c Ajout de champs : Debugage Email Fax */
      /** @r IMH05 @d 07/04/11 @a ISAT.EBA @v IMH6.01.201 @s Reporting DPR
          @c Ajout de champs : "DPR Phone No.", "DPR Fax No.", "DPR E-Mail" */
      /** @r IMH04 @d 17/02/2011 @a IMH.ZW @v IMH6.01.001 @s Normalisation des donn‚es @c Ajout champ Global Temp Root Path */
      /** @r IMH03 @d 11/02/2011 @a IMH.ZW @v IMH6.01.001 @s Normalisation des donn‚es @c normalisation Email */
      /** @r IHM02 @d 10/02/11 @a ISAT.ZW @v IMH6.01.001 @s Normalisation des donn‚es
          @c Associer les Pays au code postaux - descendre le code pays automatiquement*/
      /** @r IMH01 @d 23/09/2010 @a IMH.LLT @v IMH6.01.001 @s Normalisation des donn‚es
          @c Appel de la fonction de normalisation sur les champs de type t‚l‚phonie  */
      /**@r ISA02 @d 04/05/10 @a ISAT.NFO @v ISA6.00.00.01 @s Interface FAXBOX
         @c Ajout champ "E-mail Fax" */

      /**@r ISA01 @d 06/07/09 @a ISAT.ST @v ISA6.00.00.01 @s migration ISATECH +
         @c Ajout champ image pied de page */
    }
    END.
  }
}