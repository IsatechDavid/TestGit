OBJECT Table 8016609 ADP GSI Other Dimension
{
  OBJECT-PROPERTIES
  {
    Date=07/07/09;
    Time=11:22:11;
    Version List=ISA6.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Dimension Value Code");
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=[ENU=ADP GSI Other Dimension;
               FRA=ADP GSI Analytique divers];
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Table));
                                                   CaptionML=[ENU=Table ID;
                                                              FRA=ID table];
                                                   NotBlank=Yes }
    { 2   ;   ;No. 1               ;Code20        ;CaptionML=[ENU=No. 1;
                                                              FRA=Nø 1] }
    { 3   ;   ;No. 2               ;Code20        ;CaptionML=[ENU=No. 2;
                                                              FRA=Nø 2] }
    { 4   ;   ;No. 3               ;Code20        ;CaptionML=[ENU=No. 3;
                                                              FRA=Nø 3] }
    { 5   ;   ;Dimension Code      ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF NOT DimMgt.CheckDim("Dimension Code") THEN
                                                                  ERROR(DimMgt.GetDimErr);
                                                              END;

                                                   CaptionML=[ENU=Dimension Code;
                                                              FRA=Code axe];
                                                   NotBlank=Yes }
    { 6   ;   ;Dimension Value Code;Code20        ;TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Dimension Code));
                                                   OnValidate=BEGIN
                                                                IF NOT DimMgt.CheckDimValue("Dimension Code","Dimension Value Code") THEN
                                                                  ERROR(DimMgt.GetDimErr);
                                                              END;

                                                   CaptionML=[ENU=Dimension Value Code;
                                                              FRA=Code section];
                                                   NotBlank=Yes }
  }
  KEYS
  {
    {    ;Table ID,No. 1,No. 2,No. 3,Dimension Code;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You can not rename a %1.;FRA=Vous ne pouvez pas renommer un(e) %1.';
      Text001@1001 : TextConst 'ENU=You have changed a dimension.\\;FRA=Vous avez modifi‚ un axe analytique.\\';
      GLSetup@1004 : Record 98;
      DimMgt@1005 : Codeunit 408;

    LOCAL PROCEDURE InsertNew@2(VAR OtherDim@1000 : Record 8016609;TableNo@1001 : Integer);
    VAR
      NewOtherDim@1003 : Record 8016609;
    BEGIN
      WITH OtherDim DO BEGIN
        NewOtherDim."Table ID" := TableNo;
        NewOtherDim."No. 1" := "No. 1";
        NewOtherDim."No. 2" := "No. 2";
        NewOtherDim."No. 3" := "No. 3";
        NewOtherDim."Dimension Code" := "Dimension Code";
        NewOtherDim."Dimension Value Code" := "Dimension Value Code";
        NewOtherDim.INSERT(TRUE);
      END;
    END;

    PROCEDURE GetDimensions@3(TableNo@1000 : Integer;No1@1001 : Code[20];No2@1002 : Code[20];No3@1003 : Code[20];VAR TempOtherDim@1004 : Record 8016609);
    VAR
      OtherDim@1005 : Record 8016609;
    BEGIN
      TempOtherDim.DELETEALL;

      WITH OtherDim DO BEGIN
        RESET;
        SETRANGE("Table ID",TableNo);
        SETRANGE("No. 1",No1);
        SETRANGE("No. 2",No2);
        SETRANGE("No. 3",No3);
        IF FIND('-') THEN
          REPEAT
            TempOtherDim := OtherDim;
            TempOtherDim.INSERT;
          UNTIL NEXT = 0;
      END;
    END;

    BEGIN
    {
      /** @r ISA01 @d 07/07/09 @a ISAT.MA @v ISA6.00.00.01 @s Migration v6 **/
    }
    END.
  }
}