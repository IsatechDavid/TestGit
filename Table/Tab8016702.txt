OBJECT Table 8016702 EAI Process
{
  OBJECT-PROPERTIES
  {
    Date=22/02/13;
    Time=11:51:58;
    Modified=Yes;
    Version List=ISAEAI1.01,IMH6.01,OPTIM;
  }
  PROPERTIES
  {
    DataCaptionFields=Code;
    OnModify=BEGIN
               TESTFIELD("EAI Process Type Code");
             END;

    OnDelete=VAR
               lProcessAct@1100481000 : Record 8016714;
               lSynchroGroup@1100481001 : Record 8016709;
               lProcessTask@1100481003 : Record 8016716;
               lProcessPlan@1100481002 : Record 8016750;
             BEGIN
               lSynchroGroup.RESET;
               lSynchroGroup.SETCURRENTKEY("EAI Process Code");
               lSynchroGroup.SETRANGE("EAI Process Code",Code);
               IF lSynchroGroup.FINDFIRST THEN
                 ERROR(Text001);

               lProcessAct.RESET;
               lProcessAct.SETCURRENTKEY("EAI Process Code");
               lProcessAct.SETRANGE("EAI Process Code",Code);
               IF NOT lProcessAct.ISEMPTY THEN
                 lProcessAct.DELETEALL;

               // << EAI01 isat.eb
               lProcessTask.RESET;
               lProcessTask.SETRANGE("EAI Process Code",Code);
               IF NOT lProcessTask.ISEMPTY THEN
                 ERROR(Text002);

               lProcessPlan.RESET;
               lProcessPlan.SETRANGE("EAI Process Code",Code);
               lProcessPlan.DELETEALL(TRUE);
               // >> EAI01 isat.eb
             END;

    CaptionML=[ENU=Process;
               FRA=Processus];
    LookupFormID=Form8016707;
    DrillDownFormID=Form8016707;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              FRA=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              FRA=D‚signation] }
    { 3   ;   ;Activated           ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Activated;
                                                              FRA=Activ‚] }
    { 4   ;   ;EAI NAS Code        ;Code20        ;TableRelation="EAI NAS".Code;
                                                   OnValidate=VAR
                                                                lNASMgt@1100481000 : Codeunit 8016701;
                                                              BEGIN
                                                                // on ne peut associer un processus au NAS que si une file de message  est associ‚e au processus
                                                                // sauf si processus … tƒche, pas de file de message

                                                                IF (Type <> Type::Task) AND
                                                                   (Type <> Type::" ")
                                                                THEN BEGIN
                                                                  TESTFIELD("EAI Message Queue Code");
                                                                  lNASMgt.NASMQUpdate(Code,"EAI Message Queue Code","EAI NAS Code")
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=NAS Code;
                                                              FRA=Code NAS] }
    { 5   ;   ;EAI Process Type Code;Code20       ;TableRelation="EAI Process Type".Code;
                                                   OnValidate=VAR
                                                                lProcessType@1100481000 : Record 8016703;
                                                              BEGIN
                                                                TESTFIELD("EAI Process Type Code");
                                                                lProcessType.GET("EAI Process Type Code");
                                                                VALIDATE(Type,lProcessType.Type);
                                                              END;

                                                   CaptionML=[ENU=Process Type Code;
                                                              FRA=Code type processus] }
    { 6   ;   ;Type                ;Option        ;FieldClass=Normal;
                                                   OnValidate=BEGIN
                                                                IF (Type = Type::Task) OR
                                                                   (Type = Type::" ")
                                                                THEN BEGIN
                                                                  VALIDATE("EAI Message Queue Code",'');
                                                                END;
                                                                IF (Type = Type::Task) THEN
                                                                  "Timer Interval" := 60;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              FRA=Type];
                                                   OptionCaptionML=[ENU=" ,Outbound,Inbound,Task";
                                                                    FRA=" ,Emission,R‚ception,Tƒche"];
                                                   OptionString=[ ,Outbound,Inbound,Task];
                                                   Editable=No }
    { 7   ;   ;Timer Interval      ;Integer       ;InitValue=30;
                                                   CaptionML=[ENU=Timer Interval (sec.);
                                                              FRA=Intervalle de temps (sec.)];
                                                   MinValue=10;
                                                   MaxValue=3600 }
    { 8   ;   ;EAI Message Queue Code;Code20      ;TableRelation="EAI Message Queue".Code;
                                                   OnValidate=VAR
                                                                lMQ@1100481000 : Record 8016704;
                                                              BEGIN
                                                                IF (Type = Type::Task) OR
                                                                   (Type = Type::" ")
                                                                THEN BEGIN
                                                                  IF "EAI Message Queue Code" <> '' THEN
                                                                    ERROR(text000);
                                                                END ELSE BEGIN
                                                                  IF "EAI Message Queue Code" <> '' THEN BEGIN
                                                                    lMQ.GET("EAI Message Queue Code");
                                                                    VALIDATE("EAI NAS Code",lMQ."EAI NAS Code");
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Message Queue Code;
                                                              FRA=Code file message] }
    { 9   ;   ;Task Handler Codeunit No.;Integer  ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   CaptionML=[ENU=Task Handler Codeunit No.;
                                                              FRA=Nø codeunit handler tƒche] }
    { 10  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              FRA=D‚signation 2] }
    { 50  ;   ;Current Max Date    ;Date          ;CaptionML=[ENU=Current Max Date;
                                                              FRA=Date max courante];
                                                   Description=Process Task Only;
                                                   Editable=No }
    { 51  ;   ;Current Max Time    ;Time          ;CaptionML=[ENU=Current Max Time;
                                                              FRA=Heure max courante];
                                                   Description=Process Task Only;
                                                   Editable=No }
    { 52  ;   ;Current User Name   ;Text50        ;CaptionML=[ENU=Current User Name;
                                                              FRA=Nom utilisateur courant];
                                                   Description=Process Task Only;
                                                   Editable=No }
    { 70  ;   ;Last Max. Date      ;Date          ;CaptionML=[ENU=Current Max Date;
                                                              FRA=Date max courante];
                                                   Description=Process Task Only;
                                                   Editable=No }
    { 71  ;   ;Last Max. Time      ;Time          ;CaptionML=[ENU=Last Max. Time;
                                                              FRA=DeniŠre heure max.];
                                                   Description=Process Task Only;
                                                   Editable=No }
    { 72  ;   ;Last User Name      ;Text50        ;CaptionML=[ENU=Last User Name;
                                                              FRA=Dernier utilisateur];
                                                   Description=Process Task Only }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;EAI Process Type Code,Activated          }
    {    ;EAI NAS Code                             }
    {    ;EAI Message Queue Code                   }
    {    ;Type                                     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      text000@1100481000 : TextConst 'ENU=Message Queue can''t be associated to a Task Process;FRA=Une file de message ne peut pas ˆtre associ‚e … un processus tƒche';
      MQ@1100481001 : Record 8016704;
      Text001@1100481002 : TextConst 'ENU=This process is being used in a Synchro Group;FRA=Ce processus est utilis‚ dans un groupe de synchro';
      Text002@1100481003 : TextConst 'ENU=This Process has some Process Tasks.;FRA=Ce processus est constitu‚ de tƒches de processus.';

    PROCEDURE DrillDownObject@1100481000(pFieldNo@1100481000 : Integer) : Integer;
    VAR
      lEAITools@1100481001 : Codeunit 8016700;
      ltype@1100481002 : 'Table data,Table,Form,Report,Dataport,Codeunit';
    BEGIN
      CASE pFieldNo OF
        FIELDNO("Task Handler Codeunit No."):
          EXIT(lEAITools.ShowObjects(DATABASE::"EAI Process",pFieldNo,0,ltype::Codeunit,"Task Handler Codeunit No."));
      END;
    END;

    PROCEDURE ShowProcessCard@1100481001();
    BEGIN
      CASE Type OF
        Type::Outbound : FORM.RUN(FORM::"EAI MQ Process Card",Rec);
        Type::Inbound : FORM.RUN(FORM::"EAI MQ Process Card",Rec);
        Type::Task : FORM.RUN(FORM::"EAI Task Process Card",Rec);
        Type::" " : FORM.RUN(FORM::"EAI Process Card",Rec);
      END;
    END;

    PROCEDURE OpenFormCard@1100481002(VAR pProcess@1100481000 : Record 8016702;pUpdate@1100481001 : Boolean);
    VAR
      lProcessType@1100481002 : Record 8016703;
    BEGIN
      WITH pProcess DO BEGIN
        IF lProcessType.GET(pProcess."EAI Process Type Code") THEN;

        IF lProcessType."Form Card Id" = 0 THEN BEGIN
          CASE lProcessType.Type OF
            lProcessType.Type::" " : BEGIN
              lProcessType."Form Card Id" := FORM::"EAI Process Card";
            END;

            lProcessType.Type::Outbound,lProcessType.Type::Inbound : BEGIN
              lProcessType."Form Card Id" := FORM::"EAI MQ Process Card";
            END;

            lProcessType.Type::Task : BEGIN
              lProcessType."Form Card Id" := FORM::"EAI Task Process Card";
            END;
          END;
        END;

        IF pUpdate THEN BEGIN
          FORM.RUNMODAL(lProcessType."Form Card Id",pProcess);
        END ELSE BEGIN
          FORM.RUN(lProcessType."Form Card Id",pProcess);
        END;
      END;
    END;

    PROCEDURE CreateProcess@1100481003(VAR pProcess@1100481000 : Record 8016702);
    BEGIN
      pProcess.INIT;
      OpenFormCard(pProcess,TRUE);
    END;

    BEGIN
    {
      /** @r IMH01 @d 22/02/13 @a ISAT.PC @v IMH6.01.P008 @s Pour suivre les process
          @c Ajout champ 70, Last Max. Date
          @c Ajout champ 71, Last Max. Time
          @c Ajout champ 72, Last User Name */
      /** @r EAI02 @d 24/10/09 @a ISAT.JR @v ISAEAI5.01.00.00 @s Champ "EAI Nas Code" non editable */
      /** @r EAI01 @d 06/04/09 @a ISAT.EB @v ISAEAI5.01.00.00 @s Finalisation processus … tƒches
          @c Ajout champs 50, 51 et 52 */
      /** @r EAI00 @d 12/11/08 @a ISAT.MGI @v ISAEAI5.01.00.00 @s cr‚ation */
    }
    END.
  }
}