OBJECT Table 8016706 EAI Act
{
  OBJECT-PROPERTIES
  {
    Date=18/11/13;
    Time=09:48:04;
    Modified=Yes;
    Version List=ISAEAI1.01,IMH6.01,JUIN,MATMUT01;
  }
  PROPERTIES
  {
    DataCaptionFields=Code;
    OnDelete=VAR
               lSynchroGroup@1100481000 : Record 8016709;
               lSynchroGroupTable@1100481003 : Record 8016710;
               lActVersion@1100481001 : Record 8016713;
               lProcessAct@1100481002 : Record 8016714;
             BEGIN
               lSynchroGroup.SETCURRENTKEY("EAI Act Type Code","EAI Act Code");
               lSynchroGroup.SETRANGE("EAI Act Type Code","EAI Act Type Code");
               lSynchroGroup.SETRANGE("EAI Act Code",Code);
               IF lSynchroGroup.FINDFIRST THEN
                 ERROR(Text000);

               lSynchroGroupTable.SETCURRENTKEY("EAI Act Type Code","EAI Act Code");
               lSynchroGroupTable.SETRANGE("EAI Act Type Code","EAI Act Type Code");
               lSynchroGroupTable.SETRANGE("EAI Act Code",Code);
               IF lSynchroGroupTable.FINDFIRST THEN
                 ERROR(Text000);

               lProcessAct.SETCURRENTKEY("EAI Act Type Code","EAI Act Code");
               lProcessAct.SETRANGE("EAI Act Type Code","EAI Act Type Code");
               lProcessAct.SETRANGE("EAI Act Code",Code);
               IF NOT lProcessAct.ISEMPTY THEN
                 lProcessAct.DELETEALL;

               lActVersion.SETRANGE("EAI Act Type Code","EAI Act Type Code");
               lActVersion.SETRANGE("EAI Act Code",Code);
               IF NOT lActVersion.ISEMPTY THEN
                 lActVersion.DELETEALL;
             END;

    CaptionML=[ENU=Act;
               FRA=Acte];
    LookupFormID=Form8016713;
    DrillDownFormID=Form8016713;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;TableRelation="EAI Act".Code;
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Code;
                                                              FRA=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              FRA=D‚signation] }
    { 3   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              FRA=Type];
                                                   OptionCaptionML=[ENU=Outbound,Inbound;
                                                                    FRA=Emission,R‚ception];
                                                   OptionString=Outbound,Inbound;
                                                   Editable=No }
    { 5   ;   ;EAI Act Type Code   ;Code20        ;TableRelation="EAI Act Type";
                                                   OnValidate=VAR
                                                                lActType@1100481000 : Record 8016705;
                                                              BEGIN
                                                                lActType.GET("EAI Act Type Code");
                                                                CASE lActType.Type OF
                                                                  lActType.Type::Outbound, lActType.Type::Task :
                                                                    Type := Type::Outbound;
                                                                  lActType.Type::Inbound, lActType.Type::"4" :
                                                                    Type := Type::Inbound;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Act Type Code;
                                                              FRA=Code type acte] }
    { 6   ;   ;Current Version No. ;Code10        ;CaptionML=[ENU=Current Version No.;
                                                              FRA=Nø version courante] }
    { 7   ;   ;Status              ;Option        ;OnValidate=VAR
                                                                lEAIActVersion@1100481003 : Record 8016713;
                                                                lActMgt@1100481004 : Codeunit 8016703;
                                                                OldStatus@1100481000 : Integer;
                                                                ActiveGenerationCodeunitNo@1100481001 : Integer;
                                                                ActiveValidationCodeunitNo@1100481002 : Integer;
                                                              BEGIN
                                                                OldStatus := xRec.Status;
                                                                IF Status = Status::Inactive THEN BEGIN
                                                                  IF CONFIRM(
                                                                       Text001,FALSE)
                                                                  THEN BEGIN
                                                                    lEAIActVersion.SETRANGE("EAI Act Type Code","EAI Act Type Code");
                                                                    lEAIActVersion.SETRANGE("EAI Act Code",Code);
                                                                    lEAIActVersion.SETRANGE("Version No.");

                                                                    IF lEAIActVersion.FINDSET THEN
                                                                      REPEAT
                                                                        lEAIActVersion.Status := lEAIActVersion.Status::Inactive;
                                                                        lEAIActVersion.MODIFY;
                                                                      UNTIL lEAIActVersion.NEXT = 0;
                                                                  END ELSE
                                                                    Status := xRec.Status;
                                                                END ELSE BEGIN
                                                                  IF Status = Status::Active THEN BEGIN
                                                                    lEAIActVersion.SETRANGE("EAI Act Type Code","EAI Act Type Code");
                                                                    lEAIActVersion.SETRANGE("EAI Act Code",Code);
                                                                    lEAIActVersion.SETRANGE("Version No.");

                                                                    IF lEAIActVersion.FINDSET THEN
                                                                    BEGIN
                                                                      ActiveGenerationCodeunitNo := lActMgt.GetGenerationCodeUnitNo("EAI Act Type Code",Code,WORKDATE);
                                                                      ActiveValidationCodeunitNo := lActMgt.GetValidationCodeUnitNo("EAI Act Type Code",Code,WORKDATE);
                                                                    END ELSE BEGIN
                                                                      ActiveGenerationCodeunitNo := "Creating Codeunit No.";
                                                                      ActiveValidationCodeunitNo := "Posting Codeunit No.";
                                                                    END;

                                                                    IF Type = Type::Outbound THEN
                                                                      IF ActiveGenerationCodeunitNo = 0 THEN
                                                                        FIELDERROR("Creating Codeunit No.");
                                                                    IF ActiveValidationCodeunitNo = 0 THEN
                                                                      FIELDERROR("Posting Codeunit No.");
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Status;
                                                              FRA=Statut];
                                                   OptionCaptionML=[ENU=" ,In progress,Active,Inactive";
                                                                    FRA=" ,En cours,Actif,Inactif"];
                                                   OptionString=[ ,In progress,Active,Inactive] }
    { 8   ;   ;Creating Codeunit No.;Integer      ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                IF (Status = Status::Active) AND
                                                                   ("Creating Codeunit No." <> xRec."Creating Codeunit No.") THEN
                                                                  FIELDERROR(Status);
                                                              END;

                                                   CaptionML=[ENU=Generation Codeunit No.;
                                                              FRA=Nø codeunit g‚n‚ration] }
    { 9   ;   ;Posting Codeunit No.;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                IF (Status = Status::Active) AND
                                                                   ("Posting Codeunit No." <> xRec."Posting Codeunit No.") THEN
                                                                  FIELDERROR(Status);
                                                              END;

                                                   CaptionML=[ENU=Validation Codeunit No.;
                                                              FRA=Nø codeunit validation] }
    { 10  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              FRA=D‚signation 2] }
    { 11  ;   ;Emission Name Definition;Option    ;CaptionML=[ENU=Emission Name Definition;
                                                              FRA=D‚finition de nom en ‚mission];
                                                   OptionCaptionML=[ENU=" ,Entry No.,Prefix + DateTime,Prefix + Entry No.,Doc. ID + DateTime,Doc. ID + Entry No.";
                                                                    FRA=" ,Nø s‚quence,Pr‚fixe + date et heure,Pr‚fixe + nø de s‚quence,ID Document + date et heure,ID Document + nø de s‚quence"];
                                                   OptionString=[ ,Entry No.,Prefix + DateTime,Prefix + Entry No.,Doc. ID + DateTime,Doc. ID + Entry No.] }
    { 12  ;   ;Emission Name Value ;Text30        ;CaptionML=[ENU=Emission Name Value;
                                                              FRA=Valeur de nom en ‚mission] }
    { 13  ;   ;Emission Extension Value;Text5     ;CaptionML=[ENU=Emission Extension Value;
                                                              FRA=Valeur de l'extension en ‚mission] }
    { 14  ;   ;Reception Name Definition;Option   ;CaptionML=[ENU=Reception Name Definition;
                                                              FRA=D‚finition de nom en r‚ception];
                                                   OptionCaptionML=[ENU=Standard XML,Folder,Prefix File,Extension File,XML RootNode;
                                                                    FRA=XML Normalis‚,R‚pertoire,Pr‚fixe du fichier,Extension du fichier,Noeud root XML];
                                                   OptionString=Standard XML,Folder,Prefix File,Extension File,XML RootNode }
    { 15  ;   ;Reception Name Value;Text30        ;CaptionML=[ENU=Reception Name Value;
                                                              FRA=Valeur de nom en r‚ception] }
    { 16  ;   ;Act Priority        ;Integer       ;CaptionML=[ENU=Act Priority;
                                                              FRA=Priorit‚ acte] }
    { 20  ;   ;Message Type Code   ;Code20        ;TableRelation="EAI Types".Code WHERE (Type=CONST(Message Type));
                                                   CaptionML=[ENU=Message Type;
                                                              FRA=Type de message] }
    { 21  ;   ;Document Type Code  ;Code20        ;TableRelation="EAI Types".Code WHERE (Type=CONST(Document Type),
                                                                                         Parent Code=FIELD(Message Type Code));
                                                   CaptionML=[ENU=Document Type;
                                                              FRA=Type de document] }
    { 22  ;   ;Document ID Code    ;Code20        ;TableRelation="EAI Types".Code WHERE (Type=CONST(Document ID),
                                                                                         Parent Code=FIELD(Document Type Code));
                                                   CaptionML=[ENU=Document ID;
                                                              FRA=ID Document] }
    { 30  ;   ;Parameters String   ;Text250       ;CaptionML=[ENU=Parameters String;
                                                              FRA=ChaŒne de paramŠtres] }
    { 31  ;   ;Auto. Posting       ;Boolean       ;CaptionML=[ENU=Auto. Posting;
                                                              FRA=Validation automatique] }
    { 50001;  ;Create Tray Line On Receive;Boolean;CaptionML=[ENU=Create Tray Line On Receive;
                                                              FRA=Cr‚ation activit‚ corbeille sur r‚ception] }
    { 50002;  ;Tray Line Task Code On Receive;Code20;
                                                   TableRelation="Tray Task"."Task Code" WHERE (Source Table=CONST(ServiceHeader));
                                                   OnValidate=BEGIN
                                                                IF "Tray Line Task Code On Receive" <> '' THEN
                                                                  TESTFIELD("Create Tray Line On Receive", TRUE);
                                                              END;

                                                   CaptionML=[ENU=Tray Line Task Code On Receive;
                                                              FRA=Code tƒche activit‚ corbeille sur r‚ception] }
    { 50003;  ;Create Interaction  ;Boolean       ;CaptionML=[ENU=Create Interaction;
                                                              FRA=Cr‚er interaction] }
    { 50004;  ;Interact. Template Code;Code20     ;TableRelation="Interaction Template".Code WHERE (Show To Intervention=CONST(Yes));
                                                   CaptionML=[ENU=Interaction Template Code;
                                                              FRA=Code modŠle interaction] }
    { 50005;  ;Gen. Tray Line On Sent Error;Boolean;
                                                   CaptionML=[ENU=Generate Tray Line On Sent Error;
                                                              FRA=G‚n‚rer activit‚ corbeille sur erreur envoi] }
    { 50006;  ;Tray Line Task Code On Error;Code20;TableRelation="Tray Task"."Task Code" WHERE (Source Table=CONST(ServiceHeader));
                                                   OnValidate=BEGIN
                                                                //<<IMH02.PC
                                                                IF Type = Type::Inbound THEN BEGIN
                                                                  "Gen. Tray Line On Sent Error" := FALSE;
                                                                END;
                                                                //>>IMH02.PC
                                                              END;

                                                   CaptionML=[ENU=Tray Line Task Code On Error;
                                                              FRA=Code tƒche corbeille sur erreur] }
    { 50007;  ;Team Code On Error  ;Code10        ;TableRelation=Team.Code;
                                                   CaptionML=[ENU=Team Code On Error;
                                                              FRA=Code corbeille sur erreur] }
    { 50009;  ;Next Act Type Code Af. Val.;Code20 ;TableRelation="EAI Act Type";
                                                   OnValidate=VAR
                                                                lActType@1100481000 : Record 8016705;
                                                              BEGIN
                                                                lActType.GET("EAI Act Type Code");
                                                                CASE lActType.Type OF
                                                                  lActType.Type::Outbound, lActType.Type::Task :
                                                                    Type := Type::Outbound;
                                                                  lActType.Type::Inbound, lActType.Type::"4" :
                                                                    Type := Type::Inbound;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Next Act Type Code After Validation;
                                                              FRA=Prochain code type acte aprŠs validation] }
    { 50010;  ;Next Act Code After Validation;Code20;
                                                   TableRelation="EAI Act".Code WHERE (EAI Act Type Code=FIELD(Next Act Type Code Af. Val.));
                                                   CaptionML=[ENU=Next Act Code After Validation;
                                                              FRA=Prochain code acte aprŠs validation] }
    { 50011;  ;Wait Initial Act To Archive;Boolean;CaptionML=[ENU=Wait Initial Act To Archive;
                                                              FRA=Attendre acte initial pour archive] }
    { 50012;  ;Tray Line Team Code On Receive;Code10;
                                                   TableRelation=Team.Code;
                                                   CaptionML=[ENU=Tray Line Team Code On Receive;
                                                              FRA=Code corbeille sur r‚ception] }
    { 50020;  ;Acknowledge Enable  ;Boolean       ;CaptionML=[ENU=Acknowledge Enable;
                                                              FRA=Acquittement actif] }
    { 50021;  ;Acknowledgment Status;Option       ;CaptionML=[ENU=Acknowledgment Status;
                                                              FRA=Status acquittement];
                                                   OptionCaptionML=[ENU=" ,Receive,Posting";
                                                                    FRA=" ,R‚ception,Validation"];
                                                   OptionString=[ ,Receive,Posting] }
    { 50022;  ;Ack. Act Type Code  ;Code20        ;TableRelation="EAI Act Type";
                                                   CaptionML=[ENU=Ack. Act Type Code;
                                                              FRA=Code type acte acquittement] }
    { 50023;  ;Ack. Act Code       ;Code20        ;TableRelation="EAI Act".Code WHERE (EAI Act Type Code=FIELD(Ack. Act Type Code));
                                                   CaptionML=[ENU=Ack. Act Code;
                                                              FRA=Code acte acquittement] }
    { 50030;  ;Execution Modulo Loop;Integer      ;OnValidate=BEGIN
                                                                IF "Execution Modulo Loop" = 0 THEN BEGIN
                                                                  "Current Execution Modulo Loop" := 0;
                                                                END ELSE BEGIN
                                                                  "Current Execution Modulo Loop" := "Execution Modulo Loop" - 1;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Execution Modulo Loop;
                                                              FRA=Modulo de boucle d'‚x‚cution];
                                                   BlankZero=Yes }
    { 50031;  ;Current Execution Modulo Loop;Integer;
                                                   CaptionML=[ENU=Current Execution Modulo Loop;
                                                              FRA=Modulo courant de boucle d'‚x‚cution];
                                                   Editable=No }
    { 50050;  ;Return Codeunit No. ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                IF (Status = Status::Active) AND
                                                                   ("Posting Codeunit No." <> xRec."Posting Codeunit No.") THEN
                                                                  FIELDERROR(Status);
                                                              END;

                                                   CaptionML=[ENU=Return Codeunit No.;
                                                              FRA=Nø codeunit retour] }
  }
  KEYS
  {
    {    ;EAI Act Type Code,Code                  ;Clustered=Yes }
    {    ;Type                                     }
    {    ;Message Type Code,Document Type Code,Document ID Code }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100481004 : TextConst 'ENU=This EAI Act is being used in a Synchro Group;FRA=Cet acte EAI est utilis‚ dans un groupe de synchro';
      Text001@1100481002 : TextConst 'ENU=Do you confirm EAI Act % is unused ?;FRA=Confirmez-vous la non utilisation de l''acte %1 ?';
      Text002@1100481000 : TextConst 'ENU=This EAI Act is being used in a Synchro Group Table;FRA=Cet acte EAI est utilis‚ dans une table de groupe de synchro';

    PROCEDURE DrillDownObject@1100481000(pFieldNo@1100481000 : Integer) : Integer;
    VAR
      lEAITools@1100481001 : Codeunit 8016700;
      lType@1100481002 : 'Table data,Table,Form,Report,Dataport,Codeunit';
    BEGIN
      CASE pFieldNo OF
        FIELDNO("Creating Codeunit No.") :
          EXIT(lEAITools.ShowObjects(DATABASE::"EAI Act",pFieldNo,Type,lType::Codeunit,"Creating Codeunit No."));
        FIELDNO("Posting Codeunit No.") :
          EXIT(lEAITools.ShowObjects(DATABASE::"EAI Act",pFieldNo,Type,lType::Codeunit,"Posting Codeunit No."));
        //<<IMH8.ACO
        FIELDNO("Return Codeunit No.") :
          EXIT(lEAITools.ShowObjects(DATABASE::"EAI Act",pFieldNo,Type,lType::Codeunit,"Return Codeunit No."));
        //>>IMH08.ACO
      END;
    END;

    BEGIN
    {
      /** @r IMH08 @d 17/09/13 @a ISAT.PC @v IMH6.01.348 @s DARVA MATMUT @c Ajout champ 50050, Return Codeunit No.
      /** @r IMH07 @d 23/05/13 @a ISAT.PC @v IMH6.01.339 @s Evolution DARVA @h 3540
          @c Ajout champ 50012, Tray Line Team Code */
      /** @r IMH06 @d 15/05/13 @a ISAT.PC @v IMH6.01.222 @s Uniformisation Darva
          @c Ajout champ 50011, Wait Initial Act To Archive */
      /** @r IMH05 @d 06/05/13 @a ISAT.PC @v IMH6.01.222 @s Uniformisation Darva
          @c d‚placement du champ 50000, "Receive Acknowledgment Step" … 50021
          @c renommage champ 50021 de "Receive Acknowledgment Step" … Acknowledgment Status
          @c Ajout champ 50020, Acknowledge Enable
          @c Ajout champ 50022, Ack. Act Type Code
          @c Ajout champ 50023, Ack. Act Code */
      /** @r IMH04 @d 30/04/13 @a ISAT.PC @v IMH6.01.222 @s Uniformisation Darva
          @c Ajout champ 50009, Next Act Type Code Af. Val.
          @c Ajout champ 50010, Next Act Code After Validation */
      /** @r IMH03 @d 07/11/11 @a ISAT.PC @v IMH6.01.132 @s DARVA Management @c Ajout champ 50007, Team Code On Error */
      /** @r IMH02 @d 14/09/11 @a ISAT.PC @v IMH6.01.132 @s DARVA Management
          @c Ajout champ 50005, Generate Tray Line On Error
          @c Ajout champ 50006, Tray Line Task Code On Error
          @c Champs servant pour la g‚n‚ration d'une activit‚ corbeille lors d'un ‚chec d'envoi */
      /** @r IMH01 @d 06/07/11 @a ISAT.MA @v IMH6.01.132 @s DARVA Management @c Ajout champ 50003 */
      /** @r EAI01 @d 24/10/09 @a ISAT.JR  @v ISAEAI5.01.00.00 @s Suppression du champ "Activated" */
      /** @r EAI00 @d 12/11/08 @a ISAT.MGI @v ISAEAI5.01.00.00 @s cr‚ation */
    }
    END.
  }
}