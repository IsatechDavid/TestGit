OBJECT Table 8016731 EAI Rcvd MQ 5
{
  OBJECT-PROPERTIES
  {
    Date=30/08/13;
    Time=16:24:00;
    Modified=Yes;
    Version List=ISAEAI1.00,IMH6.01,GED,SysAgDarva,MATMUT01;
  }
  PROPERTIES
  {
    OnInsert=VAR
               NoSeriesMgt@1100481001 : Codeunit 396;
               lMQ@1100481000 : Record 8016704;
             BEGIN
               IF "Entry No." = '' THEN BEGIN
                 TESTFIELD("EAI MQ Code");
                 lMQ.GET("EAI MQ Code");
                 lMQ.TESTFIELD(lMQ."Message No. Series");
                 NoSeriesMgt.InitSeries(lMQ."Message No. Series",xRec."No. Series",0D,"Entry No.","No. Series");
               END;
             END;

    CaptionML=[ENU=Received Message Queue 5;
               FRA=File messages re‡us 5];
    LookupFormID=Form8016759;
    DrillDownFormID=Form8016759;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Code20        ;CaptionML=[ENU=Entry No.;
                                                              FRA=Nø s‚quence] }
    { 3   ;   ;Synchro Group Code  ;Code20        ;TableRelation="EAI Synchro Group";
                                                   CaptionML=[ENU=Synchro Group Code;
                                                              FRA=Code groupe synchro] }
    { 4   ;   ;To Synchronize Table No.;Integer   ;CaptionML=[ENU=To Synchronize Table No.;
                                                              FRA=Nø table … synchroniser] }
    { 5   ;   ;Synchro Group Table Alias;Code20   ;CaptionML=[ENU=Synchro Group Table Alias;
                                                              FRA=Alias table de groupe de synchro] }
    { 6   ;   ;Table Action Type   ;Option        ;CaptionML=[ENU=Table Action Type;
                                                              FRA=Type d'action sur table];
                                                   OptionCaptionML=[ENU=Insertion,Modification,Deletion,Rename;
                                                                    FRA=Insertion,Modification,Suppression,Renommage];
                                                   OptionString=Insertion,Modification,Deletion,Rename }
    { 10  ;   ;RecordId            ;RecordID      ;CaptionML=[ENU=Record Identifiant;
                                                              FRA=Identifiant enregistrement] }
    { 11  ;   ;xRecordId           ;RecordID      ;CaptionML=[ENU=Previous Record Identifiant;
                                                              FRA=Identifiant enregistrement pr‚c‚dent] }
    { 12  ;   ;XML Source          ;BLOB          ;CaptionML=[ENU=XML Source;
                                                              FRA=Flux XML] }
    { 13  ;   ;Act Priority        ;Integer       ;CaptionML=[ENU=Act Priority;
                                                              FRA=Priorit‚ acte] }
    { 14  ;   ;Table Priority      ;Integer       ;CaptionML=[ENU=Table Priority;
                                                              FRA=Priorit‚ table] }
    { 15  ;   ;Response XML Source ;BLOB          ;CaptionML=[ENU=Response XML Source;
                                                              FRA=Flux XML r‚ponse] }
    { 20  ;   ;EAI Partner Code    ;Code20        ;TableRelation="EAI Partner".Code;
                                                   CaptionML=[ENU=EAI Partner Code;
                                                              FRA=Code partenaire EAI] }
    { 21  ;   ;EAI Act Type Code   ;Code20        ;TableRelation="EAI Act Type";
                                                   OnValidate=VAR
                                                                lActType@1100481000 : Record 8016705;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=EAI Act Type Code;
                                                              FRA=Code type acte EAI] }
    { 22  ;   ;EAI Act Code        ;Code20        ;TableRelation="EAI Act".Code WHERE (EAI Act Type Code=FIELD(EAI Act Type Code));
                                                   OnValidate=VAR
                                                                lActType@1100481000 : Record 8016705;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=EAI Act Code;
                                                              FRA=Code acte EAI] }
    { 23  ;   ;EAI MQ Code         ;Code20        ;TableRelation="EAI Message Queue";
                                                   TestTableRelation=Yes;
                                                   CaptionML=[ENU=Message Queue Code;
                                                              FRA=Code file message] }
    { 24  ;   ;EAI Process Code    ;Code20        ;TableRelation="EAI Process".Code;
                                                   CaptionML=[ENU=Process Code;
                                                              FRA=Code processus] }
    { 25  ;   ;EAI NAS Code        ;Code20        ;TableRelation="EAI NAS";
                                                   CaptionML=[ENU=NAS Code;
                                                              FRA=Code NAS] }
    { 40  ;   ;Step                ;Option        ;CaptionML=[ENU=Step;
                                                              FRA=Etape];
                                                   OptionCaptionML=[ENU=Generation,Validation;
                                                                    FRA=G‚n‚ration,Validation];
                                                   OptionString=Generation,Validation }
    { 50  ;   ;Date Creation       ;Date          ;CaptionML=[ENU=Creation Date;
                                                              FRA=Date cr‚ation] }
    { 51  ;   ;Time Creation       ;Time          ;CaptionML=[ENU=Creation Time;
                                                              FRA=Heure de cr‚ation] }
    { 52  ;   ;User Creation       ;Code20        ;CaptionML=[ENU=Creation User;
                                                              FRA=Utilisateur de cr‚atiion] }
    { 53  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              FRA=Statut];
                                                   OptionCaptionML=[ENU=Unprocessed,Processing,Error,Unit Test;
                                                                    FRA=Non trait‚,Trait‚,Erreur,Test unitaire];
                                                   OptionString=Unprocessed,Processing,Error,Unit Test }
    { 54  ;   ;Comment Status      ;Text250       ;CaptionML=[ENU=Comment;
                                                              FRA=Commentaires] }
    { 55  ;   ;File Date Creation  ;Date          ;CaptionML=[ENU=File Date Creation;
                                                              FRA=Date cr‚ation fichier] }
    { 56  ;   ;File Time Creation  ;Time          ;CaptionML=[ENU=File Time Creation;
                                                              FRA=Heure cr‚ation fichier] }
    { 60  ;   ;Skip Error          ;Boolean       ;CaptionML=[ENU=Skip Error;
                                                              FRA=Ignorer erreur] }
    { 70  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              FRA=Souches de nø];
                                                   Editable=No }
    { 80  ;   ;File Name           ;Text250       ;CaptionML=[ENU=File Name;
                                                              FRA=Nom du fichier] }
    { 95  ;   ;No. Of Lines        ;Integer       ;CaptionML=[ENU=No. Of Lines;
                                                              FRA=Nombre de lignes] }
    { 49999;  ;Source MQ           ;Integer       ;CaptionML=[ENU=Source MQ;
                                                              FRA=File origine] }
    { 50000;  ;Message ID          ;Code40         }
    { 50001;  ;Message Code        ;Code10        ;CaptionML=[ENU=Message Code;
                                                              FRA=Code message] }
    { 50002;  ;Message Version     ;Code10        ;CaptionML=[ENU=Message Version;
                                                              FRA=Version message] }
    { 50003;  ;Message Release     ;Code10        ;CaptionML=[ENU=Message Release;
                                                              FRA=Release message] }
    { 50004;  ;Message Sub-type    ;Code10        ;CaptionML=[ENU=Message Sub-type;
                                                              FRA=Message sous-type] }
    { 50010;  ;EAI Exchange Type Code;Code20      ;CaptionML=[ENU=Exchange Type Code;
                                                              FRA=Code type d'‚change] }
    { 50011;  ;Service Header No.  ;Code20        ;TableRelation="Service Header".No. WHERE (Document Type=CONST(Invoice),
                                                                                             No.=FIELD(Service Header No.));
                                                   CaptionML=[ENU=Service Header No.;
                                                              FRA=Nø ligne produit];
                                                   Editable=No }
    { 50012;  ;Service No.         ;Code20        ;TableRelation=Service;
                                                   CaptionML=[ENU=Service No.;
                                                              FRA=Nø service] }
    { 50020;  ;Attachment Nb       ;Integer       ;CaptionML=[ENU=Attachment Nb;
                                                              FRA=Nb piŠce jointe] }
    { 50021;  ;Not Change Status   ;Boolean       ;CaptionML=[ENU=Not Change Status;
                                                              FRA=Pas changement statut] }
    { 50050;  ;Reference No.       ;Text30        ;CaptionML=[ENU=Reference No.;
                                                              FRA=Nø sinsitre] }
    { 50051;  ;Your Reference      ;Text30        ;CaptionML=[ENU=Your Reference;
                                                              FRA=Nø mission] }
    { 50100;  ;Origin Entry No.    ;Code20        ;CaptionML=[ENU=Origin Entry No.;
                                                              FRA=Nø s‚quence origine] }
    { 50101;  ;Origin EAI Act Code ;Code20        ;TableRelation="EAI Act".Code WHERE (EAI Act Type Code=FIELD(EAI Act Type Code));
                                                   CaptionML=[ENU=Origin EAI Act Code;
                                                              FRA=Code acte EAI origine] }
    { 56013;  ;GUID Fusion Code    ;Code40        ;CaptionML=[ENU=GUID Fusion Code;
                                                              FRA=Code GUID Fusion] }
    { 56020;  ;Fusion Flow Type    ;Option        ;CaptionML=[ENU=Fusion Flow Type;
                                                              FRA=Fusion type flux sortant];
                                                   OptionCaptionML=[ENU=Service,Quote;
                                                                    FRA=Sevice,Devis];
                                                   OptionString=Service,Quote }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Step,Status,Act Priority,Table Priority  }
    {    ;EAI Exchange Type Code,Message ID       ;KeyGroups=EAIDarva }
    {    ;EAI MQ Code,EAI Partner Code,EAI Act Type Code,EAI Act Code,Step,Status }
    {    ;Service No.,Service Header No.           }
    {    ;Your Reference                           }
    {    ;Reference No.                            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100481005 : TextConst 'ENU=The attachment is empty.;FRA=Il n''y a pas de document joint.';
      Text001@1100481004 : TextConst 'ENU=Attachment is already in use on this machine.;FRA=Le document joint est d‚j… utilis‚ par cette machine.';
      Text005@1100481003 : TextConst 'ENU=Export Attachment;FRA=Exporter document';
      Text008@1100481002 : TextConst 'ENU=Files XML (*.XML)|*.XML;FRA=Fichiers XML (*.XML)|*.XML';
      Text012@1100481001 : TextConst 'ENU=\Doc;FRA=\Doc';
      Text016@1100481000 : TextConst 'ENU=When you have finished working with a document, you should delete the associated temporary file. Please note that this will not delete the document.\\Do you want to delete the temporary file?;FRA=Lorsque vous avez fini de travailler sur un document, n''oubliez pas de supprimer le fichier temporaire associ‚. Cette op‚ration ne supprime pas le document lui-mˆme.\\Souhaitez-vous supprimer le fichier temporaire ?';
      FileMgt@1000000000 : Codeunit 419;

    PROCEDURE OpenXMLSource@1100481000();
    VAR
      lFileName@1100481000 : Text[250];
      lText001@1000000000 : TextConst 'ENU=Default.xml;FRA=Default.xml';
      lToFile@1000000001 : Text[250];
    BEGIN
      CALCFIELDS("XML Source");
      IF NOT "XML Source".HASVALUE THEN BEGIN
        ERROR(Text000);
      END;

      lFileName := ConstFilename;
      IF EXISTS(lFileName) THEN BEGIN
        IF NOT DeleteFile(lFileName) THEN BEGIN
          ERROR(Text001);
        END;
      END;
      ExportAttachment(lFileName);

      IF NOT ISSERVICETIER THEN BEGIN
        HYPERLINK(lFileName);
      END ELSE BEGIN
        lToFile := lText001;
        DOWNLOAD(lFileName,'','','XML (*.xml)|*.xml',lToFile);
      END;

      IF CONFIRM(Text016,TRUE) THEN BEGIN
        DeleteFile(lFileName);
      END;
    END;

    PROCEDURE OpenXMLResponse@1100281000();
    VAR
      lFileName@1100281001 : Text[250];
      lToFile@1100281000 : Text[250];
      lText001@1100281002 : TextConst 'ENU=Default.xml;FRA=Default.xml';
    BEGIN
      // IMH04.PC
      CALCFIELDS("Response XML Source");
      IF NOT "Response XML Source".HASVALUE THEN BEGIN
        ERROR(Text000);
      END;

      lFileName := ConstFilename;
      IF EXISTS(lFileName) THEN BEGIN
        IF NOT DeleteFile(lFileName) THEN BEGIN
          ERROR(Text001);
        END;
      END;

      ExportResponseAttachment(lFileName);

      IF NOT ISSERVICETIER THEN BEGIN
        HYPERLINK(lFileName);
      END ELSE BEGIN
        lToFile := lText001;
        DOWNLOAD(lFileName,'','','XML (*.xml)|*.xml',lToFile);
      END;

      IF CONFIRM(Text016,TRUE) THEN BEGIN
        DeleteFile(lFileName);
      END;
    END;

    PROCEDURE ExportAttachment@2(ExportToFile@1000 : Text[260]) : Boolean;
    VAR
      CommonDialogMgt@1001 : Codeunit 412;
      FileName@1002 : Text[260];
      FileFilter@1003 : Text[260];
      lClientFileName@1000000000 : Text[260];
    BEGIN
      CALCFIELDS("XML Source");
      IF NOT "XML Source".HASVALUE THEN BEGIN
        EXIT(FALSE);
      END;

      IF ExportToFile = '' THEN BEGIN
        FileName := CommonDialogMgt.OpenFile(Text005,'',4,Text008,1);
      END ELSE BEGIN
        FileName := ExportToFile;
      END;

      IF FileName <> '' THEN BEGIN
        "XML Source".EXPORT(FileName);
        EXIT(TRUE);
      END ELSE BEGIN
        EXIT(FALSE);
      END;
    END;

    PROCEDURE ExportResponseAttachment@1100281002(ExportToFile@1000 : Text[260]) : Boolean;
    VAR
      CommonDialogMgt@1001 : Codeunit 412;
      FileName@1002 : Text[260];
      FileFilter@1003 : Text[260];
    BEGIN
      // IMH04.PC
      CALCFIELDS("Response XML Source");
      IF NOT "Response XML Source".HASVALUE THEN BEGIN
        EXIT(FALSE);
      END;

      IF ExportToFile = '' THEN BEGIN
        FileName := CommonDialogMgt.OpenFile(Text005,'',4,Text008,1);
      END ELSE BEGIN
        FileName := ExportToFile;
      END;

      IF FileName <> '' THEN BEGIN
        "Response XML Source".EXPORT(FileName);
        EXIT(TRUE);
      END ELSE BEGIN
        EXIT(FALSE);
      END;
    END;

    PROCEDURE ShowEntries@1100481002();
    VAR
      lEAIDocumentEntryMgt@1100481000 : Codeunit 8016707;
    BEGIN
      lEAIDocumentEntryMgt.ShowEntriesByMQ(DATABASE::"EAI Rcvd MQ 1","Entry No.");
    END;

    PROCEDURE ImporXMLSource@7();
    VAR
      lBlobRef@1000 : Record 99008535;
      lRBMgt@1001 : Codeunit 419;
    BEGIN
      CLEAR("XML Source");
      lRBMgt.BLOBImport(lBlobRef,'',TRUE);
      "XML Source" := lBlobRef.Blob;
      MODIFY;
    END;

    PROCEDURE ExporXMLSource@18();
    VAR
      lBlobRef@1000 : Record 99008535;
      lRBMgt@1001 : Codeunit 419;
      lText001@1100281000 : TextConst 'ENU=Default.xml;FRA=Default.xml';
    BEGIN
      CALCFIELDS("XML Source");
      IF NOT "XML Source".HASVALUE THEN BEGIN
        ERROR(Text000);
      END;
      lBlobRef.Blob:= "XML Source";
      lRBMgt.BLOBExport(lBlobRef,lText001,TRUE);
    END;

    PROCEDURE ExporXMLResponse@1100281006();
    VAR
      lBlobRef@1000 : Record 99008535;
      lRBMgt@1001 : Codeunit 419;
      lText001@1100281000 : TextConst 'ENU=Default.xml;FRA=Default.xml';
    BEGIN
      CALCFIELDS("Response XML Source");
      IF NOT "Response XML Source".HASVALUE THEN BEGIN
        ERROR(Text000);
      END;
      lBlobRef.Blob:= "Response XML Source";
      lRBMgt.BLOBExport(lBlobRef,lText001,TRUE);
    END;

    PROCEDURE DeleteFile@10(FileName@1001 : Text[260]) : Boolean;
    VAR
      I@1002 : Integer;
    BEGIN
      IF FileName = '' THEN
        EXIT(FALSE);

      IF NOT EXISTS(FileName) THEN
        EXIT(TRUE);

      REPEAT
        SLEEP(250);
        I += 1;
      UNTIL ERASE(FileName) OR (I = 25);
      EXIT(NOT EXISTS(FileName));
    END;

    PROCEDURE UnitPost@1100481001();
    VAR
      lEAIMQBufferMgt@1100481000 : Codeunit 8016708;
      lRecRef@1100481001 : RecordRef;
      lRcvdMQBuffer@1100481002 : TEMPORARY Record 8016721;
      lEAIRcvdValidationPostLine@1100281000 : Codeunit 8016727;
    BEGIN
      //<<GMS01
      //TESTFIELD(Step,Step::Validation);
      TESTFIELD(Status,Status::"Unit Test");
      //>>GMS01

      //On passe par un Buffer
      lRecRef.GETTABLE(Rec);
      lEAIMQBufferMgt.TransferRecRefToRcvdMQBuffer(lRecRef,lRcvdMQBuffer);

      //IMH01 isat.zw
      lEAIRcvdValidationPostLine.ValidateRcvdMQLine(lRcvdMQBuffer);
      {
      //Traitement du message
      COMMIT; //n‚cessaire afin de r‚cuperer la valeur de retour de CodeUnit.RUN
      //<<GMS01
      CASE Step OF
        Step::Generation :
          IF CODEUNIT.RUN(CODEUNIT::"EAI Rcvd Generation Post Line",lRcvdMQBuffer) THEN BEGIN
            lRcvdMQBuffer.Step := lRcvdMQBuffer.Step::Generation;
            lRcvdMQBuffer.Status := lRcvdMQBuffer.Status::Processing;
            lRcvdMQBuffer.MODIFY;
          END ELSE BEGIN
            lRcvdMQBuffer."Comment Status" := COPYSTR(GETLASTERRORTEXT,1,250);
            lRcvdMQBuffer.Status := lRcvdMQBuffer.Status::Error;
            lRcvdMQBuffer.MODIFY;
            CLEARLASTERROR;
          END;
        Step::Validation :
      //>>GMS01
          IF CODEUNIT.RUN(CODEUNIT::"EAI Rcvd Validation Post Line",lRcvdMQBuffer) THEN BEGIN
            lRcvdMQBuffer.Step := lRcvdMQBuffer.Step::Validation;
            lRcvdMQBuffer.Status := lRcvdMQBuffer.Status::Processing;
            lRcvdMQBuffer.MODIFY;
          END ELSE BEGIN
            lRcvdMQBuffer."Comment Status" := COPYSTR(GETLASTERRORTEXT,1,250);
            lRcvdMQBuffer.Status := lRcvdMQBuffer.Status::Error;
            lRcvdMQBuffer.MODIFY;
            CLEARLASTERROR;
          END;
      //<<GMS01
      END;
      //>>GMS01

      //On enregistre le Buffer
      lEAIMQBufferMgt.TransferRcvdMQBufferToRcvdMQ(lRcvdMQBuffer);
      }
    END;

    PROCEDURE ConstFilename@1100281001() FileName@1000 : Text[260];
    VAR
      I@1001 : Integer;
      DocNo@1002 : Text[30];
      TempFile@1100281000 : File;
    BEGIN
      REPEAT
        IF I <> 0 THEN BEGIN
          DocNo := FORMAT(I);
        END;
        IF NOT ISSERVICETIER THEN BEGIN
          FileName := ENVIRON('TEMP') + Text012 + DocNo + '.xml';
        //<<IMH01 isat.zw
        END ELSE BEGIN
          TempFile.CREATETEMPFILE;
          FileName := TempFile.NAME + '.' + '.xml';
          TempFile.CLOSE;
        END;
        //>>IMH01 isat.zw
        IF NOT EXISTS(FileName) THEN BEGIN
          EXIT;
        END;
        I += 1;
      UNTIL I = 999;
    END;

    BEGIN
    {
      /** @r IMH12 @d 26/08/13 @a ISAT.PC @v IMH6.01.348 @s DARVA MATMUT Lot 1
          @c Correction fonctin ExporXMLResponse */
      /** @r IMH11 @d 25/06/13 @a ISAT.AC0 @v IMH6.01.350 @s SystŠme d'aiguillage
          @c Ajout champs 50100 Origin Entry No. et 50101 Origin EAI Act Code */
      /** @r IMH10 @d 22/05/13 @a ISAT.PC @v IMH6.01.222 @s Uniformisation Darva @c Ajout champ 50021, Not Change Status */
      /** @r IMH09 @d 14/05/13 @a ISAT.PC @v IMH6.01.222 @s Uniformisation Darva @c Ajout champ 50020, Attachment Nb */
      /** @r IMH08 @d 29/04/13 @a ISAT.PC @v IMH6.01.222 @s Uniformisation Darva
          @c Ajout champ 50001, Message Code
          @c Ajout champ 50002, Message Version
          @c Ajout champ 50003, Message Release */
      /** @r IMH07 @d 11/02/13 @a ISAT.PC @v IMH6.01.222 @s Uniformisation Darva
          @c Ajout champ 50004, Message Sub-type */
          @c Ajout cl‚ "Service No.","Service Header No."
          @c Ajout cl‚ "Your Reference"
          @c Ajout cl‚ "Reference No." */
      /** @r IMH06 @d 05/09/12 @a ISAT.PC @v IMH6.01.P006 @s Interface GED
          @c Ajout cl‚ "EAI MQ Code,EAI Partner Code,EAI Act Type Code,EAI Act Code,Step,Status" pour v‚rif existence flux */
      /** @r IHM05 @d 05/01/12 @a ISAT.PC @v IMH6.01.131 @s Interface EAI
          @c Ajout champ 50012, Service No. */
      /** @r EAI02 @d 01/08/11 @a ISAT.ST @v ISAEAI6.01.000 @s Ajout champ 95 No. Of Lines */
      /** @r IHM03 @d 10/06/11 @a ISAT.ZW @v IMH6.01.131 @s Interface EAI @c Ajout champ reference No. */
      /** @r IMH02 @d 06/04/11 @a ISAT.ZW @v IMH6.01.136 @s Interface Fusion @c Ajout champ Fusion Status*/
      /** @r IHM01 @d 04/01/11 @a ISAT.ZW @v IMH6.01.131 @s Interface EAI @c Traitement fichier RTC
          @c Ajout cle Act + Ajout champ Message ID
          @c centraliser codes PostUnit */
      /** @r EAI00 @d 08/12/08 @a ISAT.MGI @v ISAEAI5.01.00.00 @s cr‚ation */
    }
    END.
  }
}