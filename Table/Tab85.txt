OBJECT Table 85 Acc. Schedule Line
{
  OBJECT-PROPERTIES
  {
    Date=05/11/08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF xRec."Line No." = 0 THEN
                 IF NOT AccSchedName.GET("Schedule Name") THEN BEGIN
                   AccSchedName.INIT;
                   AccSchedName.Name := "Schedule Name";
                   IF AccSchedName.Name = '' THEN
                     AccSchedName.Description := Text000;
                   AccSchedName.INSERT;
                 END;
             END;

    CaptionML=[ENU=Acc. Schedule Line;
               FRA=Ligne tableau d'analyse];
  }
  FIELDS
  {
    { 1   ;   ;Schedule Name       ;Code10        ;TableRelation="Acc. Schedule Name";
                                                   CaptionML=[ENU=Schedule Name;
                                                              FRA=Nom du tableau] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              FRA=Nø ligne] }
    { 3   ;   ;Row No.             ;Code10        ;CaptionML=[ENU=Row No.;
                                                              FRA=Nø ligne totalisation] }
    { 4   ;   ;Description         ;Text80        ;CaptionML=[ENU=Description;
                                                              FRA=D‚signation] }
    { 5   ;   ;Totaling            ;Text250       ;TableRelation=IF (Totaling Type=CONST(Posting Accounts)) "G/L Account"
                                                                 ELSE IF (Totaling Type=CONST(Total Accounts)) "G/L Account";
                                                   OnValidate=BEGIN
                                                                CASE "Totaling Type" OF
                                                                  "Totaling Type"::"Posting Accounts","Totaling Type"::"Total Accounts":
                                                                    BEGIN
                                                                      GLAcc.SETFILTER("No.",Totaling);
                                                                      GLAcc.CALCFIELDS(Balance);
                                                                    END;
                                                                  "Totaling Type"::Formula,"Totaling Type"::"Set Base For Percent":
                                                                    BEGIN
                                                                      Totaling := UPPERCASE(Totaling);
                                                                      CheckFormula(Totaling);
                                                                    END;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Totaling;
                                                              FRA=Totalisation] }
    { 6   ;   ;Totaling Type       ;Option        ;OnValidate=BEGIN
                                                                VALIDATE(Totaling);
                                                              END;

                                                   CaptionML=[ENU=Totaling Type;
                                                              FRA=Type totalisation];
                                                   OptionCaptionML=[ENU=Posting Accounts,Total Accounts,Formula,,,Set Base For Percent;
                                                                    FRA=Comptes imputables,Comptes de totalisation,Formule,,,Base de pourcentage];
                                                   OptionString=Posting Accounts,Total Accounts,Formula,,,Set Base For Percent }
    { 7   ;   ;New Page            ;Boolean       ;CaptionML=[ENU=New Page;
                                                              FRA=Nouvelle page] }
    { 11  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              FRA=Filtre date] }
    { 12  ;   ;Dimension 1 Filter  ;Code20        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Dimension 1 Filter;
                                                              FRA=Filtre axe 1];
                                                   CaptionClass=GetCaptionClass(1) }
    { 13  ;   ;Dimension 2 Filter  ;Code20        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Dimension 2 Filter;
                                                              FRA=Filtre axe 2];
                                                   CaptionClass=GetCaptionClass(2) }
    { 14  ;   ;Budget Filter       ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="G/L Budget Name";
                                                   CaptionML=[ENU=Budget Filter;
                                                              FRA=Filtre budget] }
    { 15  ;   ;Business Unit Filter;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Business Unit";
                                                   CaptionML=[ENU=Business Unit Filter;
                                                              FRA=Filtre centre de profit] }
    { 16  ;   ;Show                ;Option        ;CaptionML=[ENU=Show;
                                                              FRA=Imprimer];
                                                   OptionCaptionML=[ENU=Yes,No,If Any Column Not Zero,When Positive Balance,When Negative Balance;
                                                                    FRA=Oui,Non,Si diff‚rent de 0,Si solde positif,Si solde n‚gatif];
                                                   OptionString=Yes,No,If Any Column Not Zero,When Positive Balance,When Negative Balance }
    { 17  ;   ;Dimension 3 Filter  ;Code20        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Dimension 3 Filter;
                                                              FRA=Filtre axe 3];
                                                   CaptionClass=GetCaptionClass(3) }
    { 18  ;   ;Dimension 4 Filter  ;Code20        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Dimension 4 Filter;
                                                              FRA=Filtre axe 4];
                                                   CaptionClass=GetCaptionClass(4) }
    { 19  ;   ;Dimension 1 Totaling;Text80        ;ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Dimension 1 Totaling;
                                                              FRA=Totalisation axe 1];
                                                   CaptionClass=GetCaptionClass(5) }
    { 20  ;   ;Dimension 2 Totaling;Text80        ;ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Dimension 2 Totaling;
                                                              FRA=Totalisation axe 2];
                                                   CaptionClass=GetCaptionClass(6) }
    { 21  ;   ;Dimension 3 Totaling;Text80        ;ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Dimension 3 Totaling;
                                                              FRA=Totalisation axe 3];
                                                   CaptionClass=GetCaptionClass(7) }
    { 22  ;   ;Dimension 4 Totaling;Text80        ;ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Dimension 4 Totaling;
                                                              FRA=Totalisation axe 4];
                                                   CaptionClass=GetCaptionClass(8) }
    { 23  ;   ;Bold                ;Boolean       ;CaptionML=[ENU=Bold;
                                                              FRA=Gras] }
    { 24  ;   ;Italic              ;Boolean       ;CaptionML=[ENU=Italic;
                                                              FRA=Italique] }
    { 25  ;   ;Underline           ;Boolean       ;CaptionML=[ENU=Underline;
                                                              FRA=Soulign‚] }
    { 26  ;   ;Show Opposite Sign  ;Boolean       ;CaptionML=[ENU=Show Opposite Sign;
                                                              FRA=Afficher signe oppos‚] }
    { 27  ;   ;Row Type            ;Option        ;CaptionML=[ENU=Row Type;
                                                              FRA=Type ligne];
                                                   OptionCaptionML=[ENU=Net Change,Balance at Date,Beginning Balance;
                                                                    FRA=Solde p‚riode,Solde au,Solde d'ouverture];
                                                   OptionString=Net Change,Balance at Date,Beginning Balance }
    { 28  ;   ;Amount Type         ;Option        ;CaptionML=[ENU=Amount Type;
                                                              FRA=Type montant];
                                                   OptionCaptionML=[ENU=Net Amount,Debit Amount,Credit Amount;
                                                                    FRA=Net (montant),D‚bit (montant),Cr‚dit (montant)];
                                                   OptionString=Net Amount,Debit Amount,Credit Amount }
  }
  KEYS
  {
    {    ;Schedule Name,Line No.                  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Default Schedule;FRA=Tableau d''analyse par d‚faut';
      Text001@1001 : TextConst 'ENU=The parenthesis at position %1 is misplaced.;FRA=Position %1. La parenthŠse est mal plac‚e.';
      Text002@1002 : TextConst 'ENU=You cannot have two consecutive operators. The error occurred at position %1.;FRA=Position %1. Vous ne pouvez pas avoir deux op‚rateurs cons‚cutifs.';
      Text003@1003 : TextConst 'ENU=There is an operand missing after position %1.;FRA=Il manque un op‚rateur aprŠs la position %1.';
      Text004@1004 : TextConst 'ENU=There are more left parentheses than right parentheses.;FRA=Il y a plus de parenthŠses ouvrantes que de parenthŠses fermantes.';
      Text005@1005 : TextConst 'ENU=There are more right parentheses than left parentheses.;FRA=Il y a plus de parenthŠses fermantes que de parenthŠses ouvrantes.';
      Text006@1006 : TextConst 'ENU=1,6,,Dimension 1 Filter;FRA=1,6,,Filtre axe 1';
      Text007@1007 : TextConst 'ENU=1,6,,Dimension 2 Filter;FRA=1,6,,Filtre axe 2';
      Text008@1008 : TextConst 'ENU=1,6,,Dimension 3 Filter;FRA=1,6,,Filtre axe 3';
      Text009@1009 : TextConst 'ENU=1,6,,Dimension 4 Filter;FRA=1,6,,Filtre axe 4';
      Text010@1010 : TextConst 'ENU=,, Totaling;FRA=,, Totalisation';
      Text011@1011 : TextConst 'ENU=1,5,,Dimension 1 Totaling;FRA=1,5,,Totalisation axe 1';
      Text012@1012 : TextConst 'ENU=1,5,,Dimension 2 Totaling;FRA=1,5,,Totalisation axe 2';
      Text013@1013 : TextConst 'ENU=1,5,,Dimension 3 Totaling;FRA=1,5,,Totalisation axe 3';
      Text014@1014 : TextConst 'ENU=1,5,,Dimension 4 Totaling;FRA=1,5,,Totalisation axe 4';
      AccSchedName@1015 : Record 84;
      GLAcc@1016 : Record 15;
      AnalysisView@1017 : Record 363;
      GLSetup@1018 : Record 98;
      HasGLSetup@1019 : Boolean;
      Text015@1020 : TextConst 'ENU=The %1 refers to %2 %3, which does not exist. The field %4 on table %5 has now been deleted.;FRA=Le %1 se r‚fŠre … la %2 %3, qui n''existe pas. Le champ %4 de la table %5 a maintenant ‚t‚ supprim‚.';

    PROCEDURE LookUpDimFilter@57(DimNo@1000 : Integer;VAR Text@1001 : Text[250]) : Boolean;
    VAR
      DimVal@1002 : Record 349;
      DimValList@1003 : Form 560;
    BEGIN
      GetAccSchedSetup;
      CASE DimNo OF
        1: DimVal.SETRANGE("Dimension Code",AnalysisView."Dimension 1 Code");
        2: DimVal.SETRANGE("Dimension Code",AnalysisView."Dimension 2 Code");
        3: DimVal.SETRANGE("Dimension Code",AnalysisView."Dimension 3 Code");
        4: DimVal.SETRANGE("Dimension Code",AnalysisView."Dimension 4 Code");
      END;
      DimValList.LOOKUPMODE(TRUE);
      DimValList.SETTABLEVIEW(DimVal);
      IF DimValList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        DimValList.GETRECORD(DimVal);
        Text := Text + DimValList.GetSelectionFilter;
        EXIT(TRUE);
      END ELSE
        EXIT(FALSE)
    END;

    PROCEDURE CheckFormula@1(Formula@1000 : Code[80]);
    VAR
      i@1001 : Integer;
      ParenthesesLevel@1002 : Integer;
      HasOperator@1003 : Boolean;
    BEGIN
      ParenthesesLevel := 0;
      FOR i := 1 TO STRLEN(Formula) DO BEGIN
        IF Formula[i] = '(' THEN
          ParenthesesLevel := ParenthesesLevel + 1
        ELSE
          IF Formula[i] = ')' THEN
            ParenthesesLevel := ParenthesesLevel - 1;
        IF ParenthesesLevel < 0 THEN
          ERROR(Text001,i);
        IF Formula[i] IN ['+','-','*','/','^'] THEN BEGIN
          IF HasOperator THEN
            ERROR(Text002,i)
          ELSE
            HasOperator := TRUE;
          IF i = STRLEN(Formula) THEN
            ERROR(Text003,i)
          ELSE
            IF Formula[i+1] = ')' THEN
              ERROR(Text003,i);
        END ELSE
          HasOperator := FALSE;
      END;
      IF ParenthesesLevel > 0 THEN
        ERROR(Text004)
      ELSE
        IF ParenthesesLevel < 0 THEN
          ERROR(Text005);
    END;

    PROCEDURE GetCaptionClass@7(AnalysisViewDimType@1000 : Integer) : Text[250];
    BEGIN
      GetAccSchedSetup;
      CASE AnalysisViewDimType OF
        1:
          BEGIN
            IF AnalysisView."Dimension 1 Code" <> '' THEN
              EXIT('1,6,' + AnalysisView."Dimension 1 Code")
            ELSE
              EXIT(Text006);
          END;
        2:
          BEGIN
            IF AnalysisView."Dimension 2 Code" <> '' THEN
              EXIT('1,6,' + AnalysisView."Dimension 2 Code")
            ELSE
              EXIT(Text007);
          END;
        3:
          BEGIN
            IF AnalysisView."Dimension 3 Code" <> '' THEN
              EXIT('1,6,' + AnalysisView."Dimension 3 Code")
            ELSE
              EXIT(Text008);
          END;
        4:
          BEGIN
            IF AnalysisView."Dimension 4 Code" <> '' THEN
              EXIT('1,6,' + AnalysisView."Dimension 4 Code")
            ELSE
              EXIT(Text009);
          END;
        5:
          BEGIN
            IF AnalysisView."Dimension 1 Code" <> '' THEN
              EXIT('1,5,' + AnalysisView."Dimension 1 Code" + Text010)
            ELSE
              EXIT(Text011);
          END;
        6:
          BEGIN
            IF AnalysisView."Dimension 2 Code" <> '' THEN
              EXIT('1,5,' + AnalysisView."Dimension 2 Code" + Text010)
            ELSE
              EXIT(Text012);
          END;
        7:
          BEGIN
            IF AnalysisView."Dimension 3 Code" <> '' THEN
              EXIT('1,5,' + AnalysisView."Dimension 3 Code" + Text010)
            ELSE
              EXIT(Text013);
          END;
        8:
          BEGIN
            IF AnalysisView."Dimension 4 Code" <> '' THEN
              EXIT('1,5,' + AnalysisView."Dimension 4 Code" + Text010)
            ELSE
              EXIT(Text014);
          END;
      END;
    END;

    LOCAL PROCEDURE GetAccSchedSetup@2();
    BEGIN
      IF "Schedule Name" <> AccSchedName.Name THEN
        AccSchedName.GET("Schedule Name");
      IF AccSchedName."Analysis View Name" <> '' THEN BEGIN
        IF AccSchedName."Analysis View Name" <> AnalysisView.Code THEN
          IF NOT AnalysisView.GET(AccSchedName."Analysis View Name") THEN BEGIN
            MESSAGE(
              Text015,
              AccSchedName.TABLECAPTION,AnalysisView.TABLECAPTION,AccSchedName."Analysis View Name",
              AccSchedName.FIELDCAPTION("Analysis View Name"),AccSchedName.TABLECAPTION);
            AccSchedName."Analysis View Name" := '';
            AccSchedName.MODIFY;
          END;
      END;

      IF AccSchedName."Analysis View Name" = '' THEN BEGIN
        IF NOT HasGLSetup THEN BEGIN
          GLSetup.GET;
          HasGLSetup := TRUE;
        END;
        CLEAR(AnalysisView);
        AnalysisView."Dimension 1 Code" := GLSetup."Global Dimension 1 Code";
        AnalysisView."Dimension 2 Code" := GLSetup."Global Dimension 2 Code";
      END;
    END;

    BEGIN
    END.
  }
}