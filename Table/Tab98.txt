OBJECT Table 98 General Ledger Setup
{
  OBJECT-PROPERTIES
  {
    Date=17/09/12;
    Time=10:30:30;
    Modified=Yes;
    Version List=NAVW16.00,NAVFR6.00,IMH6.01;
  }
  PROPERTIES
  {
    CaptionML=[ENU=General Ledger Setup;
               FRA=ParamŠtres comptabilit‚];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              FRA=Cl‚ primaire] }
    { 2   ;   ;Allow Posting From  ;Date          ;OnValidate=BEGIN
                                                                CheckPostingRange("Allow Posting From",FIELDCAPTION("Allow Posting From"));
                                                              END;

                                                   CaptionML=[ENU=Allow Posting From;
                                                              FRA=D‚but p‚riode validation] }
    { 3   ;   ;Allow Posting To    ;Date          ;OnValidate=BEGIN
                                                                CheckPostingRange("Allow Posting To",FIELDCAPTION("Allow Posting To"));
                                                              END;

                                                   CaptionML=[ENU=Allow Posting To;
                                                              FRA=Fin p‚riode validation] }
    { 4   ;   ;Register Time       ;Boolean       ;CaptionML=[ENU=Register Time;
                                                              FRA=Registre temps] }
    { 28  ;   ;Pmt. Disc. Excl. VAT;Boolean       ;OnValidate=BEGIN
                                                                IF "Pmt. Disc. Excl. VAT" THEN
                                                                  TESTFIELD("Adjust for Payment Disc.",FALSE)
                                                                ELSE
                                                                  TESTFIELD("VAT Tolerance %",0);
                                                              END;

                                                   CaptionML=[ENU=Pmt. Disc. Excl. VAT;
                                                              FRA=Escompte sans TVA] }
    { 41  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              FRA=Filtre date] }
    { 42  ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Global Dimension 1 Code));
                                                   CaptionML=[ENU=Global Dimension 1 Filter;
                                                              FRA=Filtre axe principal 1];
                                                   CaptionClass='1,3,1' }
    { 43  ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Global Dimension 2 Code));
                                                   CaptionML=[ENU=Global Dimension 2 Filter;
                                                              FRA=Filtre axe principal 2];
                                                   CaptionClass='1,3,2' }
    { 44  ;   ;Cust. Balances Due  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                      Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                      Initial Entry Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Cust. Balances Due;
                                                              FRA=Soldes dus client];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 45  ;   ;Vendor Balances Due ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                        Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                        Initial Entry Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Vendor Balances Due;
                                                              FRA=Soldes dus fournisseur];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 48  ;   ;Unrealized VAT      ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT "Unrealized VAT" THEN BEGIN
                                                                  VATPostingSetup.SETFILTER(
                                                                    "Unrealized VAT Type",'>=%1',VATPostingSetup."Unrealized VAT Type"::Percentage);
                                                                  IF VATPostingSetup.FIND('-') THEN
                                                                    ERROR(
                                                                      Text000,VATPostingSetup.TABLECAPTION,
                                                                      VATPostingSetup."VAT Bus. Posting Group",VATPostingSetup."VAT Prod. Posting Group",
                                                                      VATPostingSetup.FIELDCAPTION("Unrealized VAT Type"),VATPostingSetup."Unrealized VAT Type");
                                                                  TaxJurisdiction.SETFILTER(
                                                                    "Unrealized VAT Type",'>=%1',TaxJurisdiction."Unrealized VAT Type"::Percentage);
                                                                  IF TaxJurisdiction.FIND('-') THEN
                                                                    ERROR(
                                                                      Text001,TaxJurisdiction.TABLECAPTION,
                                                                      TaxJurisdiction.Code,TaxJurisdiction.FIELDCAPTION("Unrealized VAT Type"),
                                                                      TaxJurisdiction."Unrealized VAT Type");
                                                                  PaymentClass.SETFILTER(
                                                                    PaymentClass."Unrealized VAT Reversal",'=%1',PaymentClass."Unrealized VAT Reversal"::Delayed);
                                                                  IF PaymentClass.FIND('-') THEN
                                                                    ERROR(
                                                                      Text10801,PaymentClass.TABLECAPTION,PaymentClass.Code,
                                                                      PaymentClass.FIELDCAPTION("Unrealized VAT Reversal"),PaymentClass."Unrealized VAT Reversal");
                                                                END;
                                                                IF "Unrealized VAT" THEN
                                                                  "Prepayment Unrealized VAT" := TRUE
                                                                ELSE
                                                                  "Prepayment Unrealized VAT" := FALSE;
                                                              END;

                                                   CaptionML=[ENU=Unrealized VAT;
                                                              FRA=TVA sur encaissement] }
    { 49  ;   ;Adjust for Payment Disc.;Boolean   ;OnValidate=BEGIN
                                                                IF "Adjust for Payment Disc." THEN BEGIN
                                                                  TESTFIELD("Pmt. Disc. Excl. VAT",FALSE);
                                                                  TESTFIELD("VAT Tolerance %",0);
                                                                END ELSE BEGIN
                                                                  VATPostingSetup.SETRANGE("Adjust for Payment Discount",TRUE);
                                                                  IF VATPostingSetup.FIND('-') THEN
                                                                    ERROR(
                                                                      Text002,VATPostingSetup.TABLECAPTION,
                                                                      VATPostingSetup."VAT Bus. Posting Group",VATPostingSetup."VAT Prod. Posting Group",
                                                                      VATPostingSetup.FIELDCAPTION("Adjust for Payment Discount"));
                                                                  TaxJurisdiction.SETRANGE("Adjust for Payment Discount",TRUE);
                                                                  IF TaxJurisdiction.FIND('-') THEN
                                                                    ERROR(
                                                                      Text003,TaxJurisdiction.TABLECAPTION,
                                                                      TaxJurisdiction.Code,TaxJurisdiction.FIELDCAPTION("Adjust for Payment Discount"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Adjust for Payment Disc.;
                                                              FRA=Ajust. TVA si escompte] }
    { 56  ;   ;Mark Cr. Memos as Corrections;Boolean;
                                                   CaptionML=[ENU=Mark Cr. Memos as Corrections;
                                                              FRA=Marquer avoirs comme corr.] }
    { 57  ;   ;Local Address Format;Option        ;CaptionML=[ENU=Local Address Format;
                                                              FRA=Format adresse local];
                                                   OptionCaptionML=[ENU=Post Code+City,City+Post Code,City+County+Post Code,Blank Line+Post Code+City,Post Code+City\County,County\Post Code+City;
                                                                    FRA=CP + Ville,Ville + CP,Ville + R‚gion + CP,Ligne blanche + CP + Ville,CP + Ville\R‚gion,R‚gion\CP + Ville];
                                                   OptionString=Post Code+City,City+Post Code,City+County+Post Code,Blank Line+Post Code+City,Post Code+City\County,County\Post Code+City }
    { 58  ;   ;Inv. Rounding Precision (LCY);Decimal;
                                                   OnValidate=BEGIN
                                                                IF "Amount Rounding Precision" <> 0 THEN
                                                                  IF "Inv. Rounding Precision (LCY)" <> ROUND("Inv. Rounding Precision (LCY)","Amount Rounding Precision") THEN
                                                                    ERROR(
                                                                      Text004,
                                                                      FIELDCAPTION("Inv. Rounding Precision (LCY)"),"Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Inv. Rounding Precision (LCY);
                                                              FRA=Pr‚cis. arrondi fact. DS];
                                                   AutoFormatType=1 }
    { 59  ;   ;Inv. Rounding Type (LCY);Option    ;CaptionML=[ENU=Inv. Rounding Type (LCY);
                                                              FRA=Type arrondi facture DS];
                                                   OptionCaptionML=[ENU=Nearest,Up,Down;
                                                                    FRA=Au plus prŠs,Par excŠs,Par d‚faut];
                                                   OptionString=Nearest,Up,Down }
    { 60  ;   ;Local Cont. Addr. Format;Option    ;InitValue=After Company Name;
                                                   CaptionML=[ENU=Local Cont. Addr. Format;
                                                              FRA=Format adresse contact local];
                                                   OptionCaptionML=[ENU=First,After Company Name,Last;
                                                                    FRA=D‚but,AprŠs nom soci‚t‚,Fin];
                                                   OptionString=First,After Company Name,Last }
    { 63  ;   ;Bank Account Nos.   ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Bank Account Nos.;
                                                              FRA=Nø compte bancaire] }
    { 65  ;   ;Summarize G/L Entries;Boolean      ;CaptionML=[ENU=Summarize G/L Entries;
                                                              FRA=Une ‚criture cpta. (Sales Tax)] }
    { 66  ;   ;Amount Decimal Places;Text5        ;InitValue=2:2;
                                                   OnValidate=BEGIN
                                                                CheckDecimalPlacesFormat("Amount Decimal Places");
                                                              END;

                                                   CaptionML=[ENU=Amount Decimal Places;
                                                              FRA=Nombre d‚cimales montant] }
    { 67  ;   ;Unit-Amount Decimal Places;Text5   ;InitValue=2:5;
                                                   OnValidate=BEGIN
                                                                CheckDecimalPlacesFormat("Unit-Amount Decimal Places");
                                                              END;

                                                   CaptionML=[ENU=Unit-Amount Decimal Places;
                                                              FRA=Nombre d‚cimales montant unit.] }
    { 68  ;   ;Additional Reporting Currency;Code10;
                                                   TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF ("Additional Reporting Currency" <> xRec."Additional Reporting Currency") THEN BEGIN
                                                                  IF "Additional Reporting Currency" = '' THEN
                                                                    OK :=
                                                                      CONFIRM(
                                                                        Text005 +
                                                                        Text006 +
                                                                        Text007,FALSE)
                                                                  ELSE
                                                                    OK :=
                                                                      CONFIRM(
                                                                        Text008 +
                                                                        Text010 +
                                                                        Text011 +
                                                                        Text020 +
                                                                        Text013,FALSE,AnalysisView.TABLECAPTION);
                                                                  IF NOT OK THEN BEGIN
                                                                    "Additional Reporting Currency" := xRec."Additional Reporting Currency";
                                                                    EXIT;
                                                                  END;
                                                                END;
                                                                IF ("Additional Reporting Currency" <> xRec."Additional Reporting Currency") AND
                                                                   ("Additional Reporting Currency" <> '')
                                                                THEN BEGIN
                                                                  AdjAddReportingCurr.SetAddCurr("Additional Reporting Currency");
                                                                  AdjAddReportingCurr.RUNMODAL;
                                                                  IF NOT AdjAddReportingCurr.IsExecuted THEN
                                                                    "Additional Reporting Currency" := xRec."Additional Reporting Currency";
                                                                END;
                                                                IF ("Additional Reporting Currency" <> xRec."Additional Reporting Currency") AND
                                                                   AdjAddReportingCurr.IsExecuted
                                                                THEN
                                                                  DeleteIntrastatJnl;
                                                                IF ("Additional Reporting Currency" <> xRec."Additional Reporting Currency") AND
                                                                   ("Additional Reporting Currency" <> '') AND
                                                                   AdjAddReportingCurr.IsExecuted
                                                                THEN
                                                                  DeleteAnalysisView;
                                                              END;

                                                   CaptionML=[ENU=Additional Reporting Currency;
                                                              FRA=Devise report (DR)] }
    { 69  ;   ;VAT Tolerance %     ;Decimal       ;OnValidate=BEGIN
                                                                IF "VAT Tolerance %" <> 0 THEN BEGIN
                                                                  TESTFIELD("Adjust for Payment Disc.",FALSE);
                                                                  TESTFIELD("Pmt. Disc. Excl. VAT",TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=VAT Tolerance %;
                                                              FRA=% tol‚rance TVA];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 70  ;   ;EMU Currency        ;Boolean       ;CaptionML=[ENU=EMU Currency;
                                                              FRA=Devise U.M.E.] }
    { 71  ;   ;LCY Code            ;Code10        ;CaptionML=[ENU=LCY Code;
                                                              FRA=Code devise soci‚t‚ (DS)] }
    { 72  ;   ;VAT Exchange Rate Adjustment;Option;CaptionML=[ENU=VAT Exchange Rate Adjustment;
                                                              FRA=Ajustement tx de change TVA];
                                                   OptionCaptionML=[ENU=No Adjustment,Adjust Amount,Adjust Additional-Currency Amount;
                                                                    FRA=Aucun ajustement,Ajuster montant,Ajuster montant DR];
                                                   OptionString=No Adjustment,Adjust Amount,Adjust Additional-Currency Amount }
    { 73  ;   ;Amount Rounding Precision;Decimal  ;InitValue=0,01;
                                                   OnValidate=BEGIN
                                                                IF "Amount Rounding Precision" <> 0 THEN
                                                                  "Inv. Rounding Precision (LCY)" := ROUND("Inv. Rounding Precision (LCY)","Amount Rounding Precision");
                                                                RoundingErrorCheck(FIELDCAPTION("Amount Rounding Precision"));
                                                                MESSAGE(
                                                                  Text021);
                                                              END;

                                                   CaptionML=[ENU=Amount Rounding Precision;
                                                              FRA=Pr‚cision arrondi montant];
                                                   DecimalPlaces=0:5 }
    { 74  ;   ;Unit-Amount Rounding Precision;Decimal;
                                                   InitValue=0,00001;
                                                   OnValidate=BEGIN
                                                                MESSAGE(
                                                                  Text022);
                                                              END;

                                                   CaptionML=[ENU=Unit-Amount Rounding Precision;
                                                              FRA=Pr‚cis. arrondi montant unit‚];
                                                   DecimalPlaces=0:9 }
    { 75  ;   ;Appln. Rounding Precision;Decimal  ;CaptionML=[ENU=Appln. Rounding Precision;
                                                              FRA=Pr‚cision arrondi lettrage];
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 79  ;   ;Global Dimension 1 Code;Code20     ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                "Shortcut Dimension 1 Code" := "Global Dimension 1 Code";
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              FRA=Code axe principal 1];
                                                   Editable=No }
    { 80  ;   ;Global Dimension 2 Code;Code20     ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                "Shortcut Dimension 2 Code" := "Global Dimension 2 Code";
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              FRA=Code axe principal 2];
                                                   Editable=No }
    { 81  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              FRA=Code raccourci axe 1];
                                                   Editable=No }
    { 82  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              FRA=Code raccourci axe 2];
                                                   Editable=No }
    { 83  ;   ;Shortcut Dimension 3 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF Dim.CheckIfDimUsed("Shortcut Dimension 3 Code",3,'','',0) THEN
                                                                  ERROR(Text023,Dim.GetCheckDimErr);
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 3 Code;
                                                              FRA=Code raccourci axe 3] }
    { 84  ;   ;Shortcut Dimension 4 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF Dim.CheckIfDimUsed("Shortcut Dimension 4 Code",4,'','',0) THEN
                                                                  ERROR(Text023,Dim.GetCheckDimErr);
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 4 Code;
                                                              FRA=Code raccourci axe 4] }
    { 85  ;   ;Shortcut Dimension 5 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF Dim.CheckIfDimUsed("Shortcut Dimension 5 Code",5,'','',0) THEN
                                                                  ERROR(Text023,Dim.GetCheckDimErr);
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 5 Code;
                                                              FRA=Code raccourci axe 5] }
    { 86  ;   ;Shortcut Dimension 6 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF Dim.CheckIfDimUsed("Shortcut Dimension 6 Code",6,'','',0) THEN
                                                                  ERROR(Text023,Dim.GetCheckDimErr);
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 6 Code;
                                                              FRA=Code raccourci axe 6] }
    { 87  ;   ;Shortcut Dimension 7 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF Dim.CheckIfDimUsed("Shortcut Dimension 7 Code",7,'','',0) THEN
                                                                  ERROR(Text023,Dim.GetCheckDimErr);
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 7 Code;
                                                              FRA=Code raccourci axe 7] }
    { 88  ;   ;Shortcut Dimension 8 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF Dim.CheckIfDimUsed("Shortcut Dimension 8 Code",8,'','',0) THEN
                                                                  ERROR(Text023,Dim.GetCheckDimErr);
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 8 Code;
                                                              FRA=Code raccourci axe 8] }
    { 89  ;   ;Max. VAT Difference Allowed;Decimal;OnValidate=BEGIN
                                                                IF "Max. VAT Difference Allowed" <> ROUND("Max. VAT Difference Allowed") THEN
                                                                  ERROR(
                                                                    Text004,
                                                                    FIELDCAPTION("Max. VAT Difference Allowed"),"Amount Rounding Precision");

                                                                "Max. VAT Difference Allowed" := ABS("Max. VAT Difference Allowed");
                                                              END;

                                                   CaptionML=[ENU=Max. VAT Difference Allowed;
                                                              FRA=Diff‚rence TVA max. autoris‚e];
                                                   AutoFormatType=1 }
    { 90  ;   ;VAT Rounding Type   ;Option        ;CaptionML=[ENU=VAT Rounding Type;
                                                              FRA=Type arrondi TVA];
                                                   OptionCaptionML=[ENU=Nearest,Up,Down;
                                                                    FRA=Au plus prŠs,Par excŠs,Par d‚faut];
                                                   OptionString=Nearest,Up,Down }
    { 92  ;   ;Pmt. Disc. Tolerance Posting;Option;CaptionML=[ENU=Pmt. Disc. Tolerance Posting;
                                                              FRA=Validation ‚cart d'escompte];
                                                   OptionCaptionML=[ENU=Payment Tolerance Accounts,Payment Discount Accounts;
                                                                    FRA=Comptes ‚cart de rŠglement,Comptes escompte];
                                                   OptionString=Payment Tolerance Accounts,Payment Discount Accounts }
    { 93  ;   ;Payment Discount Grace Period;DateFormula;
                                                   CaptionML=[ENU=Payment Discount Grace Period;
                                                              FRA=P‚riode carence escompte] }
    { 94  ;   ;Payment Tolerance % ;Decimal       ;CaptionML=[ENU=Payment Tolerance %;
                                                              FRA=% ‚cart de rŠglement];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=No }
    { 95  ;   ;Max. Payment Tolerance Amount;Decimal;
                                                   CaptionML=[ENU=Max. Payment Tolerance Amount;
                                                              FRA=Montant ‚cart rŠglement max.];
                                                   MinValue=0;
                                                   Editable=No }
    { 96  ;   ;Adapt Main Menu to Permissions;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=[ENU=Adapt Main Menu to Permissions;
                                                              FRA=Adapter menu aux autorisations] }
    { 97  ;   ;Allow G/L Acc. Deletion Before;Date;CaptionML=[ENU=Allow G/L Acc. Deletion Before;
                                                              FRA=Autoriser suppr. cpte g‚n. av.] }
    { 98  ;   ;Check G/L Account Usage;Boolean    ;CaptionML=[ENU=Check G/L Account Usage;
                                                              FRA=V‚rifier activit‚ cpte g‚n‚ral] }
    { 99  ;   ;Payment Tolerance Posting;Option   ;CaptionML=[ENU=Payment Tolerance Posting;
                                                              FRA=Validation ‚cart de rŠglement];
                                                   OptionCaptionML=[ENU=Payment Tolerance Accounts,Payment Discount Accounts;
                                                                    FRA=Comptes ‚cart de rŠglement,Comptes escompte];
                                                   OptionString=Payment Tolerance Accounts,Payment Discount Accounts }
    { 100 ;   ;Pmt. Disc. Tolerance Warning;Boolean;
                                                   CaptionML=[ENU=Pmt. Disc. Tolerance Warning;
                                                              FRA=Alerte ‚cart d'escompte] }
    { 101 ;   ;Payment Tolerance Warning;Boolean  ;CaptionML=[ENU=Payment Tolerance Warning;
                                                              FRA=Alerte ‚cart de rŠglement] }
    { 102 ;   ;Last IC Transaction No.;Integer    ;CaptionML=[ENU=Last IC Transaction No.;
                                                              FRA=Dernier nø transaction IC] }
    { 103 ;   ;Bill-to/Sell-to VAT Calc.;Option   ;CaptionML=[ENU=Bill-to/Sell-to VAT Calc.;
                                                              FRA=Calcul TVA client factur‚/donneur d'ordre];
                                                   OptionCaptionML=[ENU=Bill-to/Pay-to No.,Sell-to/Buy-from No.;
                                                                    FRA=Nø client factur‚/personne … payer,Nø donneur d'ordre/fournisseur];
                                                   OptionString=Bill-to/Pay-to No.,Sell-to/Buy-from No. }
    { 150 ;   ;Print VAT specification in LCY;Boolean;
                                                   CaptionML=[ENU=Print VAT specification in LCY;
                                                              FRA=Imprimer le d‚tail TVA en devise soci‚t‚] }
    { 151 ;   ;Prepayment Unrealized VAT;Boolean  ;OnValidate=BEGIN
                                                                IF "Unrealized VAT" AND xRec."Prepayment Unrealized VAT"  THEN
                                                                  ERROR(Text024,FIELDCAPTION("Prepayment Unrealized VAT"),FIELDCAPTION("Unrealized VAT"));

                                                                IF NOT "Prepayment Unrealized VAT" THEN BEGIN
                                                                  VATPostingSetup.SETFILTER(
                                                                    "Unrealized VAT Type",'>=%1',VATPostingSetup."Unrealized VAT Type"::Percentage);
                                                                  IF VATPostingSetup.FIND('-') THEN
                                                                    ERROR(
                                                                      Text000,VATPostingSetup.TABLECAPTION,
                                                                      VATPostingSetup."VAT Bus. Posting Group",VATPostingSetup."VAT Prod. Posting Group",
                                                                      VATPostingSetup.FIELDCAPTION("Unrealized VAT Type"),VATPostingSetup."Unrealized VAT Type");
                                                                  TaxJurisdiction.SETFILTER(
                                                                    "Unrealized VAT Type",'>=%1',TaxJurisdiction."Unrealized VAT Type"::Percentage);
                                                                  IF TaxJurisdiction.FIND('-') THEN
                                                                    ERROR(
                                                                      Text001,TaxJurisdiction.TABLECAPTION,
                                                                      TaxJurisdiction.Code,TaxJurisdiction.FIELDCAPTION("Unrealized VAT Type"),
                                                                      TaxJurisdiction."Unrealized VAT Type");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Prepayment Unrealized VAT;
                                                              FRA=TVA sur encaissement acompte] }
    { 10800;  ;Posting Allowed From;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Min("Accounting Period"."Starting Date" WHERE (Fiscally Closed=FILTER(No)));
                                                   CaptionML=[ENU=Posting Allowed From;
                                                              FRA=D‚but validation autoris‚e];
                                                   Editable=No }
    { 10801;  ;Posting Allowed To  ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Max("Accounting Period"."Starting Date" WHERE (New Fiscal Year=FILTER(Yes),
                                                                                                              Fiscally Closed=FILTER(No)));
                                                   CaptionML=[ENU=Posting Allowed To;
                                                              FRA=Fin validation autoris‚e];
                                                   Editable=No }
    { 10805;  ;Local Currency      ;Option        ;OnValidate=BEGIN
                                                                IF "Local Currency" = "Local Currency"::Euro THEN
                                                                  "Currency Euro":='';
                                                              END;

                                                   CaptionML=[ENU=Local Currency;
                                                              FRA=Devise soci‚t‚];
                                                   OptionCaptionML=[ENU=Euro,Other;
                                                                    FRA=Euro,Autre];
                                                   OptionString=Euro,Other }
    { 10806;  ;Currency Euro       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF ("Local Currency" = "Local Currency"::Euro) AND ("Currency Euro" <> '') THEN
                                                                  ERROR(
                                                                    Text10802,
                                                                    FIELDCAPTION("Currency Euro"),
                                                                    FIELDCAPTION("Local Currency"),
                                                                    "Local Currency");
                                                              END;

                                                   CaptionML=[ENU=Currency Euro;
                                                              FRA=Devise : Euro] }
    { 50000;  ;Repartition Journal Template;Code10;TableRelation="Gen. Journal Template".Name WHERE (Type=CONST(General),
                                                                                                     Recurring=CONST(No));
                                                   CaptionML=FRA=ModŠle feuille r‚partition;
                                                   NotBlank=Yes;
                                                   Description=IMH6.01 }
    { 50001;  ;Repartition Journal Batch Name;Code10;
                                                   TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Repartition Journal Template));
                                                   CaptionML=FRA=Nom feuille r‚partition;
                                                   Description=IMH6.01 }
    { 50002;  ;Transmission Nos.   ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Transmission Nos.;
                                                              FRA=Nø  transmission] }
    { 50005;  ;Item No. For Voucher;Code20        ;TableRelation=Item;
                                                   CaptionML=FRA=Nø Article de remboursement }
    { 50010;  ;No Reconciliation Reason Code;Code10;
                                                   TableRelation=Code.Code WHERE (Table ID=CONST(98),
                                                                                  Field ID=CONST(50010));
                                                   CaptionML=[ENU=No Reconciliation Cause Code;
                                                              FRA=Code motif non rapprochement] }
    { 50011;  ;Inc. Dprct. Amt. Reason Code;Code10;TableRelation=Code.Code WHERE (Table ID=CONST(98),
                                                                                  Field ID=CONST(50010));
                                                   CaptionML=[ENU=Incorrect Dprct. Amt. Reason Code;
                                                              FRA=Code motif montant HT/v‚tust‚ incoh‚rent] }
    { 50012;  ;Inc. Dprct. Amt. Task;Code10       ;TableRelation="Tray Task"."Task Code" WHERE (Source Table No.=FILTER(5900));
                                                   CaptionML=[ENU=Incorrect Dprct. Amt. Task;
                                                              FRA=Code tƒche corbeille montant HT / v‚tust‚] }
    { 50013;  ;Inc. Deduc. Amt. Reason Code;Code10;TableRelation=Code.Code WHERE (Table ID=CONST(98),
                                                                                  Field ID=CONST(50010));
                                                   CaptionML=[ENU=Incorrect Deduc. Amt. Reason Code;
                                                              FRA=Code motif montant franchise incoh‚rent] }
    { 50014;  ;Inc. Amt. To Pay Reason Code;Code10;TableRelation=Code.Code WHERE (Table ID=CONST(98),
                                                                                  Field ID=CONST(50010));
                                                   CaptionML=[ENU=Incorrect Amt. To Pay Reason Code;
                                                              FRA=Code motif net … payer incoh‚rent] }
    { 50015;  ;Invoicing Tolerance %;Decimal      ;CaptionML=[ENU=Invoicing Tolerance %;
                                                              FRA=% ‚cart rapprochement];
                                                   DecimalPlaces=0:2;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 50016;  ;Invoicing Max Amount;Decimal       ;CaptionML=[ENU=Invoicing Max Amount;
                                                              FRA=Montant max. rapprochement] }
    { 50017;  ;Source Code         ;Code10        ;TableRelation="Source Code" WHERE (Simulation=CONST(No));
                                                   CaptionML=[ENU=Source Code;
                                                              FRA=Code Journal] }
    { 50018;  ;Setup To Ajust Reason Code;Code10  ;TableRelation=Code.Code WHERE (Table ID=CONST(98),
                                                                                  Field ID=CONST(50010));
                                                   CaptionML=[ENU=Setup To Ajust Reason Code;
                                                              FRA=Code motif param‚trage … ajuster] }
    { 50019;  ;Invoice Duplicate Reason Code;Code10;
                                                   TableRelation=Code.Code WHERE (Table ID=CONST(98),
                                                                                  Field ID=CONST(50010));
                                                   CaptionML=[ENU=Invoice Duplicate Reason Code;
                                                              FRA=Code motif doublon] }
    { 50020;  ;IMH Journal Template;Code10        ;TableRelation="Gen. Journal Template".Name WHERE (Type=CONST(General),
                                                                                                     Recurring=CONST(No));
                                                   CaptionML=[ENU=IMH Journal Template;
                                                              FRA=ModŠle feuille IMH] }
    { 50021;  ;IMH Journal Batch Name;Code10      ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(IMH Journal Template));
                                                   CaptionML=[ENU=IMH Journal Batch Name;
                                                              FRA=Nom feuille IMH] }
    { 50022;  ;IMH Customer Template;Code10       ;TableRelation="Data Template Header".Code WHERE (TableID=CONST(18));
                                                   CaptionML=[ENU=IMH Customer Template;
                                                              FRA=ModŠle client IMH] }
    { 50023;  ;IMH Vendor Template ;Code10        ;TableRelation="Data Template Header".Code WHERE (TableID=CONST(23));
                                                   CaptionML=[ENU=IMH Vendor Template;
                                                              FRA=ModŠle fournisseur IMH] }
    { 50024;  ;IMH Vendor Beneficiary Templ.;Code10;
                                                   TableRelation="Data Template Header".Code WHERE (TableID=CONST(23));
                                                   CaptionML=[ENU=IMH Vendor Template;
                                                              FRA=ModŠle fournisseur b‚n‚ficaire IMH] }
    { 50030;  ;KYRIBA Export Path  ;Text250       ;CaptionML=[ENU=KYRIBA Export Path;
                                                              FRA=Chemin export KYRIBA] }
    { 50031;  ;Last Entry No.      ;Integer       ;CaptionML=[ENU=Last Entry No.;
                                                              FRA=Dernier nø s‚quence] }
    { 50035;  ;SEPA Export Path    ;Text250       ;CaptionML=[ENU=SEPA Export Path;
                                                              FRA=Chemin export SEPA] }
    { 50036;  ;Letter Check Export Path;Text250   ;CaptionML=[ENU=Letter Check Export Path;
                                                              FRA=Chemin Export Lettre ChŠque] }
    { 50037;  ;Corp. Transf. Clearing Account;Code20;
                                                   TableRelation="G/L Account";
                                                   CaptionML=[ENU=Corporate transfer clearing account;
                                                              FRA=Compte d'attente transfert GC] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 %2 %3 have %4 to %5.;FRA=%4 a pour valeur %5 dans %1 %2 %3.';
      Text001@1001 : TextConst 'ENU=%1 %2 have %3 to %4.;FRA=%3 a pour valeur %4 dans %1 %2.';
      Text002@1002 : TextConst 'ENU=%1 %2 %3 use %4.;FRA=%1 %2 %3 utilise %4.';
      Text003@1003 : TextConst 'ENU=%1 %2 use %3.;FRA=%1 %2 utilise %3.';
      Text004@1004 : TextConst 'ENU=%1 must be rounded to the nearest %2.;FRA=%1 doit ˆtre arrondi au %2 le plus proche.';
      Text005@1005 : TextConst 'ENU=If you delete the additional reporting currency, future general ledger entries will be posted in LCY only.;FRA=Si vous supprimez la devise report, les ‚critures comptables seront uniquement valid‚es en devise soci‚t‚.';
      Text006@1006 : TextConst 'ENU=Deleting the additional reporting currency will have no effect on already posted general ledger entries.\\;FRA=Supprimer la devise report n''affectera pas les ‚critures comptables valid‚es.\\';
      Text007@1007 : TextConst 'ENU=Do you want to delete the additional reporting currency?;FRA=Souhaitez-vous supprimer la devise report ?';
      Text008@1008 : TextConst 'ENU="If you change the additional reporting currency, future general ledger entries will be posted in the new reporting currency (and in LCY).  ";FRA="Si vous modifiez la devise report, les prochaines ‚critures comptables seront valid‚es dans la nouvelle devise report (et en devise soci‚t‚).  "';
      Text010@1010 : TextConst 'ENU="If you change the additional reporting currency, a batch job will appear. ";FRA="Un traitement par lots s''affiche lorsque vous modifiez la devise report. "';
      Text011@1011 : TextConst 'ENU=Running this batch job will cause the program to recalculate already posted general ledger entries in the new additional reporting currency.\;FRA=Si vous lancez ce traitement par lots, le programme va recalculer des ‚critures comptables d‚j… valid‚es dans la nouvelle devise report.\';
      Text013@1012 : TextConst 'ENU=Do you want to change the additional reporting currency?;FRA=Souhaitez-vous modifier la devise report ?';
      Text016@1013 : TextConst 'ENU="Enter one number or two numbers separated by a colon. ";FRA="Entrez un nombre ou deux s‚par‚s par une virgule. "';
      Text017@1014 : TextConst 'ENU=The online Help for this field describes how you can fill in the field.;FRA=L''aide en ligne de ce champ vous explique comment le renseigner.';
      Text018@1015 : TextConst 'ENU=You cannot change the contents of the %1 field because there are posted ledger entries.;FRA=Vous ne pouvez pas modifier le contenu du champ %1 car il existe des ‚critures comptables valid‚es.';
      Text020@1017 : TextConst 'ENU=Entries will be deleted in the %1 if it is unblocked. An update will be necessary.\\;FRA=Le d‚blocage des vues d''analyse bloqu‚es provoquera la suppression des ‚critures de la vue %1. Une mise … jour sera n‚cessaire.\\';
      Text021@1018 : TextConst 'ENU=You must close the program and start again in order to activate the amount-rounding feature.;FRA=Vous devez quitter le programme et red‚marrer pour pouvoir activer la fonction d''arrondi montant.';
      Text022@1019 : TextConst 'ENU=You must close the program and start again in order to activate the unit-amount rounding feature.;FRA=Vous devez quitter le programme et red‚marrer pour pouvoir activer la fonction d''arrondi montant unit‚.';
      Text023@1020 : TextConst 'ENU=%1\You cannot use the same dimension twice in the same setup.;FRA=%1\Vous ne pouvez pas utiliser le mˆme axe analytique deux fois dans le mˆme param‚trage.';
      Dim@1021 : Record 348;
      GLEntry@1022 : Record 17;
      ItemLedgerEntry@1023 : Record 32;
      JobLedgEntry@1024 : Record 169;
      ResLedgEntry@1025 : Record 203;
      FALedgerEntry@1026 : Record 5601;
      MaintenanceLedgerEntry@1027 : Record 5625;
      InsCoverageLedgerEntry@1028 : Record 5629;
      VATPostingSetup@1029 : Record 325;
      TaxJurisdiction@1030 : Record 320;
      AdjAddReportingCurr@1031 : Report 86;
      AnalysisView@1032 : Record 363;
      AnalysisViewEntry@1033 : Record 365;
      AnalysisViewBudgetEntry@1034 : Record 366;
      OK@1035 : Boolean;
      ErrorMessage@1036 : Boolean;
      Text024@1009 : TextConst 'ENU=You cannot change the contents of the %1 field because the %2 is activated.;FRA=Vous ne pouvez pas modifier le contenu du champ %1 en raison de l''activation de %2.';
      Text10800@1120000 : TextConst 'ENU=%1 must be within the allowed posting range: %2..%3;FRA=%1 doit se situer dans la plage de validation autoris‚e : %2..%3';
      Text10801@1120001 : TextConst 'ENU=%1 %2 has %3 set to %4.;FRA=%1 %2 a %3 d‚fini sur %4.';
      PaymentClass@1120002 : Record 10860;
      Text10802@1120003 : TextConst 'ENU=It is not allowed to specify %1 when %2 is %3.;FRA=Il est interdit de sp‚cifier %1 si %2 est %3.';

    PROCEDURE CheckDecimalPlacesFormat@1(VAR DecimalPlaces@1000 : Text[5]);
    VAR
      OK@1001 : Boolean;
      ColonPlace@1002 : Integer;
      DecimalPlacesPart1@1003 : Integer;
      DecimalPlacesPart2@1004 : Integer;
      Check@1005 : Text[5];
    BEGIN
      OK := TRUE;
      ColonPlace := STRPOS(DecimalPlaces,':');

      IF ColonPlace = 0 THEN BEGIN
        IF NOT EVALUATE(DecimalPlacesPart1,DecimalPlaces) THEN
          OK := FALSE;
        IF (DecimalPlacesPart1 < 0) OR (DecimalPlacesPart1 > 9) THEN
          OK := FALSE;
      END ELSE BEGIN
        Check := COPYSTR(DecimalPlaces,1,ColonPlace - 1);
        IF Check = '' THEN
          OK := FALSE;
        IF NOT EVALUATE(DecimalPlacesPart1,Check) THEN
          OK := FALSE;
        Check := COPYSTR(DecimalPlaces,ColonPlace + 1,STRLEN(DecimalPlaces));
        IF Check = '' THEN
          OK := FALSE;
        IF NOT EVALUATE(DecimalPlacesPart2,Check) THEN
          OK := FALSE;
        IF DecimalPlacesPart1 > DecimalPlacesPart2 THEN
          OK := FALSE;
        IF (DecimalPlacesPart1 < 0) OR (DecimalPlacesPart1 > 9) THEN
          OK := FALSE;
        IF (DecimalPlacesPart2 < 0) OR (DecimalPlacesPart2 > 9) THEN
          OK := FALSE;
      END;

      IF NOT OK THEN
        ERROR(
          Text016 +
          Text017);

      IF ColonPlace = 0 THEN
        DecimalPlaces := FORMAT(DecimalPlacesPart1)
      ELSE
        DecimalPlaces := STRSUBSTNO('%1:%2',DecimalPlacesPart1,DecimalPlacesPart2);
    END;

    PROCEDURE RoundingErrorCheck@2(NameOfField@1000 : Text[100]);
    BEGIN
      ErrorMessage := FALSE;
      IF GLEntry.FIND('-') THEN
        ErrorMessage := TRUE;
      IF ItemLedgerEntry.FIND('-') THEN
        ErrorMessage := TRUE;
      IF JobLedgEntry.FIND('-') THEN
        ErrorMessage := TRUE;
      IF ResLedgEntry.FIND('-') THEN
        ErrorMessage := TRUE;
      IF FALedgerEntry.FIND('-') THEN
        ErrorMessage := TRUE;
      IF MaintenanceLedgerEntry.FIND('-') THEN
        ErrorMessage := TRUE;
      IF InsCoverageLedgerEntry.FIND('-') THEN
        ErrorMessage := TRUE;
      IF ErrorMessage THEN
        ERROR(
          Text018,
          NameOfField);
    END;

    PROCEDURE DeleteIntrastatJnl@3();
    VAR
      IntrastatJnlBatch@1000 : Record 262;
      IntrastatJnlLine@1001 : Record 263;
    BEGIN
      IntrastatJnlBatch.SETRANGE(Reported,FALSE);
      IntrastatJnlBatch.SETRANGE("Amounts in Add. Currency",TRUE);
      IF IntrastatJnlBatch.FIND('-') THEN
        REPEAT
          IntrastatJnlLine.SETRANGE("Journal Template Name",IntrastatJnlBatch."Journal Template Name");
          IntrastatJnlLine.SETRANGE("Journal Batch Name",IntrastatJnlBatch.Name);
          IntrastatJnlLine.DELETEALL;
        UNTIL IntrastatJnlBatch.NEXT = 0;
    END;

    PROCEDURE DeleteAnalysisView@33();
    BEGIN
      IF AnalysisView.FIND('-') THEN BEGIN
        REPEAT
          IF AnalysisView.Blocked = FALSE THEN BEGIN
            AnalysisViewEntry.SETRANGE("Analysis View Code",AnalysisView.Code);
            AnalysisViewEntry.DELETEALL;
            AnalysisViewBudgetEntry.SETRANGE("Analysis View Code",AnalysisView.Code);
            AnalysisViewBudgetEntry.DELETEALL;
            AnalysisView."Last Entry No." := 0;
            AnalysisView."Last Budget Entry No." := 0;
            AnalysisView."Last Date Updated" := 0D;
            AnalysisView.MODIFY;
          END ELSE BEGIN
            AnalysisView."Refresh When Unblocked" := TRUE;
            AnalysisView.MODIFY;
          END;
        UNTIL AnalysisView.NEXT = 0;
      END;
    END;

    PROCEDURE IsPostingAllowed@22(PostingDate@1000 : Date) : Boolean;
    BEGIN
      EXIT(PostingDate >= "Allow Posting From");
    END;

    PROCEDURE FirstAllowedPostingDate@78() AllowedPostingDate : Date;
    VAR
      InvtPeriod@1000 : Record 5814;
    BEGIN
      AllowedPostingDate := "Allow Posting From";
      IF NOT InvtPeriod.IsValidDate(AllowedPostingDate) THEN
        AllowedPostingDate := CALCDATE('<+1D>',AllowedPostingDate);
    END;

    PROCEDURE CheckPostingRange@1120000(DateToCheck@1120000 : Date;FldCaption@1120001 : Text[50]);
    BEGIN
      CALCFIELDS("Posting Allowed From","Posting Allowed To");
      IF ((DateToCheck < "Posting Allowed From") OR (DateToCheck >= "Posting Allowed To")) THEN
        ERROR(Text10800,FldCaption,
          "Posting Allowed From",CALCDATE('<-1D>',"Posting Allowed To"));
    END;

    BEGIN
    {
      /** @r IMH09 @d 27/07/12 @a ISAT.RC @v IMH6.01.212 @h Mantis 3035 @s Lettrage automatis‚ du compte 471200
          @c Ajout champ 50037 Corp. Transf. Clearing Account */
      /** @r IMH08 @d 11/10/11 @a ISAT.EBA @v IMH6.01.154 @s Virements SEPA
          @c Ajout champ 50035 "SEPA Export Path" */
      /** @r IMH07 @d 27/09/11 @a ISAT.EBA @v IMH6.01.154 @s KYRIBA Export File
          @c Ajout champ 50030 KYRIBA Export Path
          @c Ajout champ 50031 Last Entry No. */
      /** @r IMH06 @d 20/05/11 @a ISAT.PC @v IMH6.01.146 @s Gestion facturation
          @c Ajout champ 50017 Source Code */
      /** @r IMH05 @d 16/05/11 @a ISAT.EBA @v IMH6.01.159 @s Comptabilit‚ - IMA Service
          @c Ajout champ 50020 IMH Journal Template
          @c Ajout champ 50021 IMH Journal Batch Name
          @c Ajout champ 50022 IMH Customer Template
          @c Ajout champ 50023 IMH Vendor Template */
      /** @r IMH04 @d 16/05/11 @a ISAT.PC @v IMH6.01.145 @s Rapprochement facture
          @c Ajout champ 50015 Invoicing Tolerance %
          @c Ajout champ 50016 Invoicing Max Amount */
      /** @r IMH03 @d 16/03/11 @a ISAT.LLT @v IMH6.01.145 @s Rapprochement facture
          @c Ajout champ 50011 Inc. Dprct. Amt. Reason Code
          @c Ajout champ 50012 Inc. Dprct. Amt. Task
          @c Ajout champ 50013 Inc. Deduc. Amt. Reason Code
          @c Ajout champ 50014 Inc. Amt. To Pay Reason Code */
      /** @r IMH02 @d 14/03/11 @a ISAT.LLT @v IMH6.01.146 @s Gestion facturation
          @c Ajout champ 50002 Transmission Nos. */
      /** @r IMH01 @d 07/03/11 @a CAP.JC @v IMH6.01.152 @s Gestion Analytique
          @c ajout champs 50000, Repartition Journal Template
          @c ajout champs 50001, Repartition Journal Batch Name */
    }
    END.
  }
}